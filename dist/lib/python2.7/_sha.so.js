"use strict";

// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET) {
  var Module = {};
  var args = [];
  Module.arguments = [];

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime essentials
//========================================

var __globalConstructor__ = function globalConstructor() {
}

// === Body ===



var $0___SIZE = 80; // %0
  
var $1___SIZE = 16; // %1
  
var $2___SIZE = 100; // %2
  
var $3___SIZE = 20; // %3
  
var $4___SIZE = 196; // %4
  
var $5___SIZE = 32; // %5
  
var $struct_FILE___SIZE = 148; // %struct.FILE
  var $struct_FILE___FLATTENER = [0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,70,71,72,76,84,88,92,96,100,104,108];
var $struct_PyBufferProcs___SIZE = 24; // %struct.PyBufferProcs
  
var $struct_PyGetSetDef___SIZE = 20; // %struct.PyGetSetDef
  
var $struct_PyMappingMethods___SIZE = 12; // %struct.PyMappingMethods
  
var $struct_PyMemberDef___SIZE = 20; // %struct.PyMemberDef
  
var $struct_PyMethodDef___SIZE = 16; // %struct.PyMethodDef
  
var $struct_PyNumberMethods___SIZE = 156; // %struct.PyNumberMethods
  
var $struct_PyObject___SIZE = 8; // %struct.PyObject
  
var $struct_PySequenceMethods___SIZE = 40; // %struct.PySequenceMethods
  
var $struct_Py_buffer___SIZE = 52; // %struct.Py_buffer
  var $struct_Py_buffer___FLATTENER = [0,4,8,12,16,20,24,28,32,36,40,48];
var $struct_SHAobject___SIZE = 108; // %struct.SHAobject
  var $struct_SHAobject___FLATTENER = [0,4,8,28,32,36,100,104];
var $struct__IO_marker___SIZE = 12; // %struct._IO_marker
  
var $struct__typeobject___SIZE = 196; // %struct._typeobject
  
var _SHA_copy__doc__;
var _SHA_digest__doc__;
var _SHA_hexdigest__doc__;
var _SHA_update__doc__;
var __str;
var __Py_NoneStruct;
var __str1;
var __str2;
var __str3;
var __str4;
var _SHA_methods;
var __str5;
var __str6;
var __str7;
var __str8;
var __str9;
var _SHA_getseters;
var __str10;
var _SHAtype;
var _SHA_new__doc__;
var __str11;
var _kwlist_9310;
var __str12;
var __str13;
var _SHA_functions;
var _PyType_Type;
var __str14;
var __str15;



















  function _sha_transform($sha_info) {
    var __stackBase__  = STACKTOP; STACKTOP += 320; _memset(__stackBase__, 0, 320);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $buffer_addr_i;
        var $byteCount_addr_i;
        var $Endianness_addr_i;
        var $value_i;
        var $sha_info_addr;
        var $i;
        var $T;
        var $A;
        var $B;
        var $C;
        var $D;
        var $E;
        var $W=__stackBase__;
        var $WP;
        $sha_info_addr=$sha_info;
        var $0=$sha_info_addr; //@line 166 "shamodule.c"
        var $1=$0+36; //@line 166 "shamodule.c"
        var $2=$1; //@line 166 "shamodule.c"
        var $W1=$W; //@line 166 "shamodule.c"
        var $W12=$W1; //@line 166 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($W12, $2, 64, 1, 0); //@line 166 "shamodule.c"
        var $3=$sha_info_addr; //@line 167 "shamodule.c"
        var $4=$3+100; //@line 167 "shamodule.c"
        var $5=HEAP[$4]; //@line 167 "shamodule.c"
        var $W3=$W; //@line 167 "shamodule.c"
        $buffer_addr_i=$W3;
        $byteCount_addr_i=64;
        $Endianness_addr_i=$5;
        var $6=$Endianness_addr_i; //@line 62 "shamodule.c"
        var $7=($6)==0; //@line 62 "shamodule.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 1; break; } //@line 62 "shamodule.c"
      case 1: // $bb_i
        var $8=$byteCount_addr_i; //@line 65 "shamodule.c"
        var $9=Math.floor(($8)/4); //@line 65 "shamodule.c"
        $byteCount_addr_i=$9; //@line 65 "shamodule.c"
        var $10=$byteCount_addr_i; //@line 66 "shamodule.c"
        var $11=($10) - 1; //@line 66 "shamodule.c"
        $byteCount_addr_i=$11; //@line 66 "shamodule.c"
        var $12=($11)!=-1; //@line 66 "shamodule.c"
        if ($12) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 66 "shamodule.c"
      case 2: // $bb1_i
        var $13=$buffer_addr_i; //@line 67 "shamodule.c"
        var $14=HEAP[$13]; //@line 67 "shamodule.c"
        $value_i=$14; //@line 67 "shamodule.c"
        var $15=$value_i; //@line 68 "shamodule.c"
        var $16=($15) & -16711936; //@line 68 "shamodule.c"
        var $17=($16) >>> 8; //@line 68 "shamodule.c"
        var $18=$value_i; //@line 68 "shamodule.c"
        var $19=($18) & 16711935; //@line 68 "shamodule.c"
        var $20=($19) << 8; //@line 68 "shamodule.c"
        var $21=($20) | ($17); //@line 68 "shamodule.c"
        $value_i=$21; //@line 68 "shamodule.c"
        var $22=$value_i; //@line 70 "shamodule.c"
        var $23=($22) >>> 16; //@line 70 "shamodule.c"
        var $24=($22) << 16; //@line 70 "shamodule.c"
        var $25=($23) | ($24); //@line 70 "shamodule.c"
        var $26=$buffer_addr_i; //@line 70 "shamodule.c"
        HEAP[$26]=$25; //@line 70 "shamodule.c"
        var $27=$buffer_addr_i; //@line 70 "shamodule.c"
        var $28=$27+4; //@line 70 "shamodule.c"
        $buffer_addr_i=$28; //@line 70 "shamodule.c"
        var $29=$byteCount_addr_i; //@line 66 "shamodule.c"
        var $30=($29) - 1; //@line 66 "shamodule.c"
        $byteCount_addr_i=$30; //@line 66 "shamodule.c"
        var $31=($30)!=-1; //@line 66 "shamodule.c"
        if ($31) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 66 "shamodule.c"
      case 3: // $longReverse_exit
        $i=16; //@line 169 "shamodule.c"
        __label__ = 4; break;
      case 4: // $bb
        var $32=$i; //@line 170 "shamodule.c"
        var $33=$i; //@line 170 "shamodule.c"
        var $34=($33) - 3; //@line 170 "shamodule.c"
        var $35=$W+$34*4; //@line 170 "shamodule.c"
        var $36=HEAP[$35]; //@line 170 "shamodule.c"
        var $37=$i; //@line 170 "shamodule.c"
        var $38=($37) - 8; //@line 170 "shamodule.c"
        var $39=$W+$38*4; //@line 170 "shamodule.c"
        var $40=HEAP[$39]; //@line 170 "shamodule.c"
        var $41=$i; //@line 170 "shamodule.c"
        var $42=($41) - 14; //@line 170 "shamodule.c"
        var $43=$W+$42*4; //@line 170 "shamodule.c"
        var $44=HEAP[$43]; //@line 170 "shamodule.c"
        var $45=$i; //@line 170 "shamodule.c"
        var $46=($45) - 16; //@line 170 "shamodule.c"
        var $47=$W+$46*4; //@line 170 "shamodule.c"
        var $48=HEAP[$47]; //@line 170 "shamodule.c"
        var $49=($40) ^ ($36); //@line 170 "shamodule.c"
        var $50=($49) ^ ($44); //@line 170 "shamodule.c"
        var $51=($50) ^ ($48); //@line 170 "shamodule.c"
        var $52=$W+$32*4; //@line 170 "shamodule.c"
        HEAP[$52]=$51; //@line 170 "shamodule.c"
        var $53=$i; //@line 173 "shamodule.c"
        var $54=$i; //@line 173 "shamodule.c"
        var $55=$W+$54*4; //@line 173 "shamodule.c"
        var $56=HEAP[$55]; //@line 173 "shamodule.c"
        var $57=($56) >>> 31; //@line 173 "shamodule.c"
        var $58=($56) << 1; //@line 173 "shamodule.c"
        var $59=($57) | ($58); //@line 173 "shamodule.c"
        var $60=$W+$53*4; //@line 173 "shamodule.c"
        HEAP[$60]=$59; //@line 173 "shamodule.c"
        var $61=$i; //@line 169 "shamodule.c"
        var $62=($61) + 1; //@line 169 "shamodule.c"
        $i=$62; //@line 169 "shamodule.c"
        var $63=($62) <= 79; //@line 169 "shamodule.c"
        if ($63) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 169 "shamodule.c"
      case 5: // $bb5
        var $64=$sha_info_addr; //@line 175 "shamodule.c"
        var $65=$64+8; //@line 175 "shamodule.c"
        var $66=$65; //@line 175 "shamodule.c"
        var $67=HEAP[$66]; //@line 175 "shamodule.c"
        $A=$67; //@line 175 "shamodule.c"
        var $68=$sha_info_addr; //@line 176 "shamodule.c"
        var $69=$68+8; //@line 176 "shamodule.c"
        var $70=$69+4; //@line 176 "shamodule.c"
        var $71=HEAP[$70]; //@line 176 "shamodule.c"
        $B=$71; //@line 176 "shamodule.c"
        var $72=$sha_info_addr; //@line 177 "shamodule.c"
        var $73=$72+8; //@line 177 "shamodule.c"
        var $74=$73+8; //@line 177 "shamodule.c"
        var $75=HEAP[$74]; //@line 177 "shamodule.c"
        $C=$75; //@line 177 "shamodule.c"
        var $76=$sha_info_addr; //@line 178 "shamodule.c"
        var $77=$76+8; //@line 178 "shamodule.c"
        var $78=$77+12; //@line 178 "shamodule.c"
        var $79=HEAP[$78]; //@line 178 "shamodule.c"
        $D=$79; //@line 178 "shamodule.c"
        var $80=$sha_info_addr; //@line 179 "shamodule.c"
        var $81=$80+8; //@line 179 "shamodule.c"
        var $82=$81+16; //@line 179 "shamodule.c"
        var $83=HEAP[$82]; //@line 179 "shamodule.c"
        $E=$83; //@line 179 "shamodule.c"
        var $W6=$W; //@line 180 "shamodule.c"
        $WP=$W6; //@line 180 "shamodule.c"
        var $84=$A; //@line 182 "shamodule.c"
        var $85=($84) >>> 27; //@line 182 "shamodule.c"
        var $86=($84) << 5; //@line 182 "shamodule.c"
        var $87=($85) | ($86); //@line 182 "shamodule.c"
        var $88=$C; //@line 182 "shamodule.c"
        var $89=$D; //@line 182 "shamodule.c"
        var $90=($89) ^ ($88); //@line 182 "shamodule.c"
        var $91=$B; //@line 182 "shamodule.c"
        var $92=($90) & ($91); //@line 182 "shamodule.c"
        var $93=$D; //@line 182 "shamodule.c"
        var $94=($92) ^ ($93); //@line 182 "shamodule.c"
        var $95=$E; //@line 182 "shamodule.c"
        var $96=$WP; //@line 182 "shamodule.c"
        var $97=HEAP[$96]; //@line 182 "shamodule.c"
        var $98=($87) + 1518500249; //@line 182 "shamodule.c"
        var $99=($98) + ($95); //@line 182 "shamodule.c"
        var $100=($99) + ($94); //@line 182 "shamodule.c"
        var $101=($100) + ($97); //@line 182 "shamodule.c"
        $T=$101; //@line 182 "shamodule.c"
        var $102=$WP; //@line 182 "shamodule.c"
        var $103=$102+4; //@line 182 "shamodule.c"
        $WP=$103; //@line 182 "shamodule.c"
        var $104=$B; //@line 182 "shamodule.c"
        var $105=($104) >>> 2; //@line 182 "shamodule.c"
        var $106=($104) << 30; //@line 182 "shamodule.c"
        var $107=($105) | ($106); //@line 182 "shamodule.c"
        $B=$107; //@line 182 "shamodule.c"
        var $108=$T; //@line 182 "shamodule.c"
        var $109=($108) >>> 27; //@line 182 "shamodule.c"
        var $110=($108) << 5; //@line 182 "shamodule.c"
        var $111=($109) | ($110); //@line 182 "shamodule.c"
        var $112=$B; //@line 182 "shamodule.c"
        var $113=$C; //@line 182 "shamodule.c"
        var $114=($113) ^ ($112); //@line 182 "shamodule.c"
        var $115=$A; //@line 182 "shamodule.c"
        var $116=($114) & ($115); //@line 182 "shamodule.c"
        var $117=$C; //@line 182 "shamodule.c"
        var $118=($116) ^ ($117); //@line 182 "shamodule.c"
        var $119=$D; //@line 182 "shamodule.c"
        var $120=$WP; //@line 182 "shamodule.c"
        var $121=HEAP[$120]; //@line 182 "shamodule.c"
        var $122=($111) + 1518500249; //@line 182 "shamodule.c"
        var $123=($122) + ($119); //@line 182 "shamodule.c"
        var $124=($123) + ($118); //@line 182 "shamodule.c"
        var $125=($124) + ($121); //@line 182 "shamodule.c"
        $E=$125; //@line 182 "shamodule.c"
        var $126=$WP; //@line 182 "shamodule.c"
        var $127=$126+4; //@line 182 "shamodule.c"
        $WP=$127; //@line 182 "shamodule.c"
        var $128=$A; //@line 182 "shamodule.c"
        var $129=($128) >>> 2; //@line 182 "shamodule.c"
        var $130=($128) << 30; //@line 182 "shamodule.c"
        var $131=($129) | ($130); //@line 182 "shamodule.c"
        $A=$131; //@line 182 "shamodule.c"
        var $132=$E; //@line 182 "shamodule.c"
        var $133=($132) >>> 27; //@line 182 "shamodule.c"
        var $134=($132) << 5; //@line 182 "shamodule.c"
        var $135=($133) | ($134); //@line 182 "shamodule.c"
        var $136=$A; //@line 182 "shamodule.c"
        var $137=$B; //@line 182 "shamodule.c"
        var $138=($137) ^ ($136); //@line 182 "shamodule.c"
        var $139=$T; //@line 182 "shamodule.c"
        var $140=($138) & ($139); //@line 182 "shamodule.c"
        var $141=$B; //@line 182 "shamodule.c"
        var $142=($140) ^ ($141); //@line 182 "shamodule.c"
        var $143=$C; //@line 182 "shamodule.c"
        var $144=$WP; //@line 182 "shamodule.c"
        var $145=HEAP[$144]; //@line 182 "shamodule.c"
        var $146=($135) + 1518500249; //@line 182 "shamodule.c"
        var $147=($146) + ($143); //@line 182 "shamodule.c"
        var $148=($147) + ($142); //@line 182 "shamodule.c"
        var $149=($148) + ($145); //@line 182 "shamodule.c"
        $D=$149; //@line 182 "shamodule.c"
        var $150=$WP; //@line 182 "shamodule.c"
        var $151=$150+4; //@line 182 "shamodule.c"
        $WP=$151; //@line 182 "shamodule.c"
        var $152=$T; //@line 182 "shamodule.c"
        var $153=($152) >>> 2; //@line 182 "shamodule.c"
        var $154=($152) << 30; //@line 182 "shamodule.c"
        var $155=($153) | ($154); //@line 182 "shamodule.c"
        $T=$155; //@line 182 "shamodule.c"
        var $156=$D; //@line 182 "shamodule.c"
        var $157=($156) >>> 27; //@line 182 "shamodule.c"
        var $158=($156) << 5; //@line 182 "shamodule.c"
        var $159=($157) | ($158); //@line 182 "shamodule.c"
        var $160=$T; //@line 182 "shamodule.c"
        var $161=$A; //@line 182 "shamodule.c"
        var $162=($161) ^ ($160); //@line 182 "shamodule.c"
        var $163=$E; //@line 182 "shamodule.c"
        var $164=($162) & ($163); //@line 182 "shamodule.c"
        var $165=$A; //@line 182 "shamodule.c"
        var $166=($164) ^ ($165); //@line 182 "shamodule.c"
        var $167=$B; //@line 182 "shamodule.c"
        var $168=$WP; //@line 182 "shamodule.c"
        var $169=HEAP[$168]; //@line 182 "shamodule.c"
        var $170=($159) + 1518500249; //@line 182 "shamodule.c"
        var $171=($170) + ($167); //@line 182 "shamodule.c"
        var $172=($171) + ($166); //@line 182 "shamodule.c"
        var $173=($172) + ($169); //@line 182 "shamodule.c"
        $C=$173; //@line 182 "shamodule.c"
        var $174=$WP; //@line 182 "shamodule.c"
        var $175=$174+4; //@line 182 "shamodule.c"
        $WP=$175; //@line 182 "shamodule.c"
        var $176=$E; //@line 182 "shamodule.c"
        var $177=($176) >>> 2; //@line 182 "shamodule.c"
        var $178=($176) << 30; //@line 182 "shamodule.c"
        var $179=($177) | ($178); //@line 182 "shamodule.c"
        $E=$179; //@line 182 "shamodule.c"
        var $180=$C; //@line 182 "shamodule.c"
        var $181=($180) >>> 27; //@line 182 "shamodule.c"
        var $182=($180) << 5; //@line 182 "shamodule.c"
        var $183=($181) | ($182); //@line 182 "shamodule.c"
        var $184=$E; //@line 182 "shamodule.c"
        var $185=$T; //@line 182 "shamodule.c"
        var $186=($185) ^ ($184); //@line 182 "shamodule.c"
        var $187=$D; //@line 182 "shamodule.c"
        var $188=($186) & ($187); //@line 182 "shamodule.c"
        var $189=$T; //@line 182 "shamodule.c"
        var $190=($188) ^ ($189); //@line 182 "shamodule.c"
        var $191=$A; //@line 182 "shamodule.c"
        var $192=$WP; //@line 182 "shamodule.c"
        var $193=HEAP[$192]; //@line 182 "shamodule.c"
        var $194=($183) + 1518500249; //@line 182 "shamodule.c"
        var $195=($194) + ($191); //@line 182 "shamodule.c"
        var $196=($195) + ($190); //@line 182 "shamodule.c"
        var $197=($196) + ($193); //@line 182 "shamodule.c"
        $B=$197; //@line 182 "shamodule.c"
        var $198=$WP; //@line 182 "shamodule.c"
        var $199=$198+4; //@line 182 "shamodule.c"
        $WP=$199; //@line 182 "shamodule.c"
        var $200=$D; //@line 182 "shamodule.c"
        var $201=($200) >>> 2; //@line 182 "shamodule.c"
        var $202=($200) << 30; //@line 182 "shamodule.c"
        var $203=($201) | ($202); //@line 182 "shamodule.c"
        $D=$203; //@line 182 "shamodule.c"
        var $204=$B; //@line 182 "shamodule.c"
        var $205=($204) >>> 27; //@line 182 "shamodule.c"
        var $206=($204) << 5; //@line 182 "shamodule.c"
        var $207=($205) | ($206); //@line 182 "shamodule.c"
        var $208=$D; //@line 182 "shamodule.c"
        var $209=$E; //@line 182 "shamodule.c"
        var $210=($209) ^ ($208); //@line 182 "shamodule.c"
        var $211=$C; //@line 182 "shamodule.c"
        var $212=($210) & ($211); //@line 182 "shamodule.c"
        var $213=$E; //@line 182 "shamodule.c"
        var $214=($212) ^ ($213); //@line 182 "shamodule.c"
        var $215=$T; //@line 182 "shamodule.c"
        var $216=$WP; //@line 182 "shamodule.c"
        var $217=HEAP[$216]; //@line 182 "shamodule.c"
        var $218=($207) + 1518500249; //@line 182 "shamodule.c"
        var $219=($218) + ($215); //@line 182 "shamodule.c"
        var $220=($219) + ($214); //@line 182 "shamodule.c"
        var $221=($220) + ($217); //@line 182 "shamodule.c"
        $A=$221; //@line 182 "shamodule.c"
        var $222=$WP; //@line 182 "shamodule.c"
        var $223=$222+4; //@line 182 "shamodule.c"
        $WP=$223; //@line 182 "shamodule.c"
        var $224=$C; //@line 182 "shamodule.c"
        var $225=($224) >>> 2; //@line 182 "shamodule.c"
        var $226=($224) << 30; //@line 182 "shamodule.c"
        var $227=($225) | ($226); //@line 182 "shamodule.c"
        $C=$227; //@line 182 "shamodule.c"
        var $228=$A; //@line 182 "shamodule.c"
        var $229=($228) >>> 27; //@line 182 "shamodule.c"
        var $230=($228) << 5; //@line 182 "shamodule.c"
        var $231=($229) | ($230); //@line 182 "shamodule.c"
        var $232=$C; //@line 182 "shamodule.c"
        var $233=$D; //@line 182 "shamodule.c"
        var $234=($233) ^ ($232); //@line 182 "shamodule.c"
        var $235=$B; //@line 182 "shamodule.c"
        var $236=($234) & ($235); //@line 182 "shamodule.c"
        var $237=$D; //@line 182 "shamodule.c"
        var $238=($236) ^ ($237); //@line 182 "shamodule.c"
        var $239=$E; //@line 182 "shamodule.c"
        var $240=$WP; //@line 182 "shamodule.c"
        var $241=HEAP[$240]; //@line 182 "shamodule.c"
        var $242=($231) + 1518500249; //@line 182 "shamodule.c"
        var $243=($242) + ($239); //@line 182 "shamodule.c"
        var $244=($243) + ($238); //@line 182 "shamodule.c"
        var $245=($244) + ($241); //@line 182 "shamodule.c"
        $T=$245; //@line 182 "shamodule.c"
        var $246=$WP; //@line 182 "shamodule.c"
        var $247=$246+4; //@line 182 "shamodule.c"
        $WP=$247; //@line 182 "shamodule.c"
        var $248=$B; //@line 182 "shamodule.c"
        var $249=($248) >>> 2; //@line 182 "shamodule.c"
        var $250=($248) << 30; //@line 182 "shamodule.c"
        var $251=($249) | ($250); //@line 182 "shamodule.c"
        $B=$251; //@line 182 "shamodule.c"
        var $252=$T; //@line 182 "shamodule.c"
        var $253=($252) >>> 27; //@line 182 "shamodule.c"
        var $254=($252) << 5; //@line 182 "shamodule.c"
        var $255=($253) | ($254); //@line 182 "shamodule.c"
        var $256=$B; //@line 182 "shamodule.c"
        var $257=$C; //@line 182 "shamodule.c"
        var $258=($257) ^ ($256); //@line 182 "shamodule.c"
        var $259=$A; //@line 182 "shamodule.c"
        var $260=($258) & ($259); //@line 182 "shamodule.c"
        var $261=$C; //@line 182 "shamodule.c"
        var $262=($260) ^ ($261); //@line 182 "shamodule.c"
        var $263=$D; //@line 182 "shamodule.c"
        var $264=$WP; //@line 182 "shamodule.c"
        var $265=HEAP[$264]; //@line 182 "shamodule.c"
        var $266=($255) + 1518500249; //@line 182 "shamodule.c"
        var $267=($266) + ($263); //@line 182 "shamodule.c"
        var $268=($267) + ($262); //@line 182 "shamodule.c"
        var $269=($268) + ($265); //@line 182 "shamodule.c"
        $E=$269; //@line 182 "shamodule.c"
        var $270=$WP; //@line 182 "shamodule.c"
        var $271=$270+4; //@line 182 "shamodule.c"
        $WP=$271; //@line 182 "shamodule.c"
        var $272=$A; //@line 182 "shamodule.c"
        var $273=($272) >>> 2; //@line 182 "shamodule.c"
        var $274=($272) << 30; //@line 182 "shamodule.c"
        var $275=($273) | ($274); //@line 182 "shamodule.c"
        $A=$275; //@line 182 "shamodule.c"
        var $276=$E; //@line 182 "shamodule.c"
        var $277=($276) >>> 27; //@line 182 "shamodule.c"
        var $278=($276) << 5; //@line 182 "shamodule.c"
        var $279=($277) | ($278); //@line 182 "shamodule.c"
        var $280=$A; //@line 182 "shamodule.c"
        var $281=$B; //@line 182 "shamodule.c"
        var $282=($281) ^ ($280); //@line 182 "shamodule.c"
        var $283=$T; //@line 182 "shamodule.c"
        var $284=($282) & ($283); //@line 182 "shamodule.c"
        var $285=$B; //@line 182 "shamodule.c"
        var $286=($284) ^ ($285); //@line 182 "shamodule.c"
        var $287=$C; //@line 182 "shamodule.c"
        var $288=$WP; //@line 182 "shamodule.c"
        var $289=HEAP[$288]; //@line 182 "shamodule.c"
        var $290=($279) + 1518500249; //@line 182 "shamodule.c"
        var $291=($290) + ($287); //@line 182 "shamodule.c"
        var $292=($291) + ($286); //@line 182 "shamodule.c"
        var $293=($292) + ($289); //@line 182 "shamodule.c"
        $D=$293; //@line 182 "shamodule.c"
        var $294=$WP; //@line 182 "shamodule.c"
        var $295=$294+4; //@line 182 "shamodule.c"
        $WP=$295; //@line 182 "shamodule.c"
        var $296=$T; //@line 182 "shamodule.c"
        var $297=($296) >>> 2; //@line 182 "shamodule.c"
        var $298=($296) << 30; //@line 182 "shamodule.c"
        var $299=($297) | ($298); //@line 182 "shamodule.c"
        $T=$299; //@line 182 "shamodule.c"
        var $300=$D; //@line 182 "shamodule.c"
        var $301=($300) >>> 27; //@line 182 "shamodule.c"
        var $302=($300) << 5; //@line 182 "shamodule.c"
        var $303=($301) | ($302); //@line 182 "shamodule.c"
        var $304=$T; //@line 182 "shamodule.c"
        var $305=$A; //@line 182 "shamodule.c"
        var $306=($305) ^ ($304); //@line 182 "shamodule.c"
        var $307=$E; //@line 182 "shamodule.c"
        var $308=($306) & ($307); //@line 182 "shamodule.c"
        var $309=$A; //@line 182 "shamodule.c"
        var $310=($308) ^ ($309); //@line 182 "shamodule.c"
        var $311=$B; //@line 182 "shamodule.c"
        var $312=$WP; //@line 182 "shamodule.c"
        var $313=HEAP[$312]; //@line 182 "shamodule.c"
        var $314=($303) + 1518500249; //@line 182 "shamodule.c"
        var $315=($314) + ($311); //@line 182 "shamodule.c"
        var $316=($315) + ($310); //@line 182 "shamodule.c"
        var $317=($316) + ($313); //@line 182 "shamodule.c"
        $C=$317; //@line 182 "shamodule.c"
        var $318=$WP; //@line 182 "shamodule.c"
        var $319=$318+4; //@line 182 "shamodule.c"
        $WP=$319; //@line 182 "shamodule.c"
        var $320=$E; //@line 182 "shamodule.c"
        var $321=($320) >>> 2; //@line 182 "shamodule.c"
        var $322=($320) << 30; //@line 182 "shamodule.c"
        var $323=($321) | ($322); //@line 182 "shamodule.c"
        $E=$323; //@line 182 "shamodule.c"
        var $324=$C; //@line 183 "shamodule.c"
        var $325=($324) >>> 27; //@line 183 "shamodule.c"
        var $326=($324) << 5; //@line 183 "shamodule.c"
        var $327=($325) | ($326); //@line 183 "shamodule.c"
        var $328=$E; //@line 183 "shamodule.c"
        var $329=$T; //@line 183 "shamodule.c"
        var $330=($329) ^ ($328); //@line 183 "shamodule.c"
        var $331=$D; //@line 183 "shamodule.c"
        var $332=($330) & ($331); //@line 183 "shamodule.c"
        var $333=$T; //@line 183 "shamodule.c"
        var $334=($332) ^ ($333); //@line 183 "shamodule.c"
        var $335=$A; //@line 183 "shamodule.c"
        var $336=$WP; //@line 183 "shamodule.c"
        var $337=HEAP[$336]; //@line 183 "shamodule.c"
        var $338=($327) + 1518500249; //@line 183 "shamodule.c"
        var $339=($338) + ($335); //@line 183 "shamodule.c"
        var $340=($339) + ($334); //@line 183 "shamodule.c"
        var $341=($340) + ($337); //@line 183 "shamodule.c"
        $B=$341; //@line 183 "shamodule.c"
        var $342=$WP; //@line 183 "shamodule.c"
        var $343=$342+4; //@line 183 "shamodule.c"
        $WP=$343; //@line 183 "shamodule.c"
        var $344=$D; //@line 183 "shamodule.c"
        var $345=($344) >>> 2; //@line 183 "shamodule.c"
        var $346=($344) << 30; //@line 183 "shamodule.c"
        var $347=($345) | ($346); //@line 183 "shamodule.c"
        $D=$347; //@line 183 "shamodule.c"
        var $348=$B; //@line 183 "shamodule.c"
        var $349=($348) >>> 27; //@line 183 "shamodule.c"
        var $350=($348) << 5; //@line 183 "shamodule.c"
        var $351=($349) | ($350); //@line 183 "shamodule.c"
        var $352=$D; //@line 183 "shamodule.c"
        var $353=$E; //@line 183 "shamodule.c"
        var $354=($353) ^ ($352); //@line 183 "shamodule.c"
        var $355=$C; //@line 183 "shamodule.c"
        var $356=($354) & ($355); //@line 183 "shamodule.c"
        var $357=$E; //@line 183 "shamodule.c"
        var $358=($356) ^ ($357); //@line 183 "shamodule.c"
        var $359=$T; //@line 183 "shamodule.c"
        var $360=$WP; //@line 183 "shamodule.c"
        var $361=HEAP[$360]; //@line 183 "shamodule.c"
        var $362=($351) + 1518500249; //@line 183 "shamodule.c"
        var $363=($362) + ($359); //@line 183 "shamodule.c"
        var $364=($363) + ($358); //@line 183 "shamodule.c"
        var $365=($364) + ($361); //@line 183 "shamodule.c"
        $A=$365; //@line 183 "shamodule.c"
        var $366=$WP; //@line 183 "shamodule.c"
        var $367=$366+4; //@line 183 "shamodule.c"
        $WP=$367; //@line 183 "shamodule.c"
        var $368=$C; //@line 183 "shamodule.c"
        var $369=($368) >>> 2; //@line 183 "shamodule.c"
        var $370=($368) << 30; //@line 183 "shamodule.c"
        var $371=($369) | ($370); //@line 183 "shamodule.c"
        $C=$371; //@line 183 "shamodule.c"
        var $372=$A; //@line 183 "shamodule.c"
        var $373=($372) >>> 27; //@line 183 "shamodule.c"
        var $374=($372) << 5; //@line 183 "shamodule.c"
        var $375=($373) | ($374); //@line 183 "shamodule.c"
        var $376=$C; //@line 183 "shamodule.c"
        var $377=$D; //@line 183 "shamodule.c"
        var $378=($377) ^ ($376); //@line 183 "shamodule.c"
        var $379=$B; //@line 183 "shamodule.c"
        var $380=($378) & ($379); //@line 183 "shamodule.c"
        var $381=$D; //@line 183 "shamodule.c"
        var $382=($380) ^ ($381); //@line 183 "shamodule.c"
        var $383=$E; //@line 183 "shamodule.c"
        var $384=$WP; //@line 183 "shamodule.c"
        var $385=HEAP[$384]; //@line 183 "shamodule.c"
        var $386=($375) + 1518500249; //@line 183 "shamodule.c"
        var $387=($386) + ($383); //@line 183 "shamodule.c"
        var $388=($387) + ($382); //@line 183 "shamodule.c"
        var $389=($388) + ($385); //@line 183 "shamodule.c"
        $T=$389; //@line 183 "shamodule.c"
        var $390=$WP; //@line 183 "shamodule.c"
        var $391=$390+4; //@line 183 "shamodule.c"
        $WP=$391; //@line 183 "shamodule.c"
        var $392=$B; //@line 183 "shamodule.c"
        var $393=($392) >>> 2; //@line 183 "shamodule.c"
        var $394=($392) << 30; //@line 183 "shamodule.c"
        var $395=($393) | ($394); //@line 183 "shamodule.c"
        $B=$395; //@line 183 "shamodule.c"
        var $396=$T; //@line 183 "shamodule.c"
        var $397=($396) >>> 27; //@line 183 "shamodule.c"
        var $398=($396) << 5; //@line 183 "shamodule.c"
        var $399=($397) | ($398); //@line 183 "shamodule.c"
        var $400=$B; //@line 183 "shamodule.c"
        var $401=$C; //@line 183 "shamodule.c"
        var $402=($401) ^ ($400); //@line 183 "shamodule.c"
        var $403=$A; //@line 183 "shamodule.c"
        var $404=($402) & ($403); //@line 183 "shamodule.c"
        var $405=$C; //@line 183 "shamodule.c"
        var $406=($404) ^ ($405); //@line 183 "shamodule.c"
        var $407=$D; //@line 183 "shamodule.c"
        var $408=$WP; //@line 183 "shamodule.c"
        var $409=HEAP[$408]; //@line 183 "shamodule.c"
        var $410=($399) + 1518500249; //@line 183 "shamodule.c"
        var $411=($410) + ($407); //@line 183 "shamodule.c"
        var $412=($411) + ($406); //@line 183 "shamodule.c"
        var $413=($412) + ($409); //@line 183 "shamodule.c"
        $E=$413; //@line 183 "shamodule.c"
        var $414=$WP; //@line 183 "shamodule.c"
        var $415=$414+4; //@line 183 "shamodule.c"
        $WP=$415; //@line 183 "shamodule.c"
        var $416=$A; //@line 183 "shamodule.c"
        var $417=($416) >>> 2; //@line 183 "shamodule.c"
        var $418=($416) << 30; //@line 183 "shamodule.c"
        var $419=($417) | ($418); //@line 183 "shamodule.c"
        $A=$419; //@line 183 "shamodule.c"
        var $420=$E; //@line 183 "shamodule.c"
        var $421=($420) >>> 27; //@line 183 "shamodule.c"
        var $422=($420) << 5; //@line 183 "shamodule.c"
        var $423=($421) | ($422); //@line 183 "shamodule.c"
        var $424=$A; //@line 183 "shamodule.c"
        var $425=$B; //@line 183 "shamodule.c"
        var $426=($425) ^ ($424); //@line 183 "shamodule.c"
        var $427=$T; //@line 183 "shamodule.c"
        var $428=($426) & ($427); //@line 183 "shamodule.c"
        var $429=$B; //@line 183 "shamodule.c"
        var $430=($428) ^ ($429); //@line 183 "shamodule.c"
        var $431=$C; //@line 183 "shamodule.c"
        var $432=$WP; //@line 183 "shamodule.c"
        var $433=HEAP[$432]; //@line 183 "shamodule.c"
        var $434=($423) + 1518500249; //@line 183 "shamodule.c"
        var $435=($434) + ($431); //@line 183 "shamodule.c"
        var $436=($435) + ($430); //@line 183 "shamodule.c"
        var $437=($436) + ($433); //@line 183 "shamodule.c"
        $D=$437; //@line 183 "shamodule.c"
        var $438=$WP; //@line 183 "shamodule.c"
        var $439=$438+4; //@line 183 "shamodule.c"
        $WP=$439; //@line 183 "shamodule.c"
        var $440=$T; //@line 183 "shamodule.c"
        var $441=($440) >>> 2; //@line 183 "shamodule.c"
        var $442=($440) << 30; //@line 183 "shamodule.c"
        var $443=($441) | ($442); //@line 183 "shamodule.c"
        $T=$443; //@line 183 "shamodule.c"
        var $444=$D; //@line 183 "shamodule.c"
        var $445=($444) >>> 27; //@line 183 "shamodule.c"
        var $446=($444) << 5; //@line 183 "shamodule.c"
        var $447=($445) | ($446); //@line 183 "shamodule.c"
        var $448=$T; //@line 183 "shamodule.c"
        var $449=$A; //@line 183 "shamodule.c"
        var $450=($449) ^ ($448); //@line 183 "shamodule.c"
        var $451=$E; //@line 183 "shamodule.c"
        var $452=($450) & ($451); //@line 183 "shamodule.c"
        var $453=$A; //@line 183 "shamodule.c"
        var $454=($452) ^ ($453); //@line 183 "shamodule.c"
        var $455=$B; //@line 183 "shamodule.c"
        var $456=$WP; //@line 183 "shamodule.c"
        var $457=HEAP[$456]; //@line 183 "shamodule.c"
        var $458=($447) + 1518500249; //@line 183 "shamodule.c"
        var $459=($458) + ($455); //@line 183 "shamodule.c"
        var $460=($459) + ($454); //@line 183 "shamodule.c"
        var $461=($460) + ($457); //@line 183 "shamodule.c"
        $C=$461; //@line 183 "shamodule.c"
        var $462=$WP; //@line 183 "shamodule.c"
        var $463=$462+4; //@line 183 "shamodule.c"
        $WP=$463; //@line 183 "shamodule.c"
        var $464=$E; //@line 183 "shamodule.c"
        var $465=($464) >>> 2; //@line 183 "shamodule.c"
        var $466=($464) << 30; //@line 183 "shamodule.c"
        var $467=($465) | ($466); //@line 183 "shamodule.c"
        $E=$467; //@line 183 "shamodule.c"
        var $468=$C; //@line 183 "shamodule.c"
        var $469=($468) >>> 27; //@line 183 "shamodule.c"
        var $470=($468) << 5; //@line 183 "shamodule.c"
        var $471=($469) | ($470); //@line 183 "shamodule.c"
        var $472=$E; //@line 183 "shamodule.c"
        var $473=$T; //@line 183 "shamodule.c"
        var $474=($473) ^ ($472); //@line 183 "shamodule.c"
        var $475=$D; //@line 183 "shamodule.c"
        var $476=($474) & ($475); //@line 183 "shamodule.c"
        var $477=$T; //@line 183 "shamodule.c"
        var $478=($476) ^ ($477); //@line 183 "shamodule.c"
        var $479=$A; //@line 183 "shamodule.c"
        var $480=$WP; //@line 183 "shamodule.c"
        var $481=HEAP[$480]; //@line 183 "shamodule.c"
        var $482=($471) + 1518500249; //@line 183 "shamodule.c"
        var $483=($482) + ($479); //@line 183 "shamodule.c"
        var $484=($483) + ($478); //@line 183 "shamodule.c"
        var $485=($484) + ($481); //@line 183 "shamodule.c"
        $B=$485; //@line 183 "shamodule.c"
        var $486=$WP; //@line 183 "shamodule.c"
        var $487=$486+4; //@line 183 "shamodule.c"
        $WP=$487; //@line 183 "shamodule.c"
        var $488=$D; //@line 183 "shamodule.c"
        var $489=($488) >>> 2; //@line 183 "shamodule.c"
        var $490=($488) << 30; //@line 183 "shamodule.c"
        var $491=($489) | ($490); //@line 183 "shamodule.c"
        $D=$491; //@line 183 "shamodule.c"
        var $492=$B; //@line 183 "shamodule.c"
        var $493=($492) >>> 27; //@line 183 "shamodule.c"
        var $494=($492) << 5; //@line 183 "shamodule.c"
        var $495=($493) | ($494); //@line 183 "shamodule.c"
        var $496=$D; //@line 183 "shamodule.c"
        var $497=$E; //@line 183 "shamodule.c"
        var $498=($497) ^ ($496); //@line 183 "shamodule.c"
        var $499=$C; //@line 183 "shamodule.c"
        var $500=($498) & ($499); //@line 183 "shamodule.c"
        var $501=$E; //@line 183 "shamodule.c"
        var $502=($500) ^ ($501); //@line 183 "shamodule.c"
        var $503=$T; //@line 183 "shamodule.c"
        var $504=$WP; //@line 183 "shamodule.c"
        var $505=HEAP[$504]; //@line 183 "shamodule.c"
        var $506=($495) + 1518500249; //@line 183 "shamodule.c"
        var $507=($506) + ($503); //@line 183 "shamodule.c"
        var $508=($507) + ($502); //@line 183 "shamodule.c"
        var $509=($508) + ($505); //@line 183 "shamodule.c"
        $A=$509; //@line 183 "shamodule.c"
        var $510=$WP; //@line 183 "shamodule.c"
        var $511=$510+4; //@line 183 "shamodule.c"
        $WP=$511; //@line 183 "shamodule.c"
        var $512=$C; //@line 183 "shamodule.c"
        var $513=($512) >>> 2; //@line 183 "shamodule.c"
        var $514=($512) << 30; //@line 183 "shamodule.c"
        var $515=($513) | ($514); //@line 183 "shamodule.c"
        $C=$515; //@line 183 "shamodule.c"
        var $516=$A; //@line 183 "shamodule.c"
        var $517=($516) >>> 27; //@line 183 "shamodule.c"
        var $518=($516) << 5; //@line 183 "shamodule.c"
        var $519=($517) | ($518); //@line 183 "shamodule.c"
        var $520=$C; //@line 183 "shamodule.c"
        var $521=$D; //@line 183 "shamodule.c"
        var $522=($521) ^ ($520); //@line 183 "shamodule.c"
        var $523=$B; //@line 183 "shamodule.c"
        var $524=($522) & ($523); //@line 183 "shamodule.c"
        var $525=$D; //@line 183 "shamodule.c"
        var $526=($524) ^ ($525); //@line 183 "shamodule.c"
        var $527=$E; //@line 183 "shamodule.c"
        var $528=$WP; //@line 183 "shamodule.c"
        var $529=HEAP[$528]; //@line 183 "shamodule.c"
        var $530=($519) + 1518500249; //@line 183 "shamodule.c"
        var $531=($530) + ($527); //@line 183 "shamodule.c"
        var $532=($531) + ($526); //@line 183 "shamodule.c"
        var $533=($532) + ($529); //@line 183 "shamodule.c"
        $T=$533; //@line 183 "shamodule.c"
        var $534=$WP; //@line 183 "shamodule.c"
        var $535=$534+4; //@line 183 "shamodule.c"
        $WP=$535; //@line 183 "shamodule.c"
        var $536=$B; //@line 183 "shamodule.c"
        var $537=($536) >>> 2; //@line 183 "shamodule.c"
        var $538=($536) << 30; //@line 183 "shamodule.c"
        var $539=($537) | ($538); //@line 183 "shamodule.c"
        $B=$539; //@line 183 "shamodule.c"
        var $540=$T; //@line 183 "shamodule.c"
        var $541=($540) >>> 27; //@line 183 "shamodule.c"
        var $542=($540) << 5; //@line 183 "shamodule.c"
        var $543=($541) | ($542); //@line 183 "shamodule.c"
        var $544=$B; //@line 183 "shamodule.c"
        var $545=$C; //@line 183 "shamodule.c"
        var $546=($545) ^ ($544); //@line 183 "shamodule.c"
        var $547=$A; //@line 183 "shamodule.c"
        var $548=($546) & ($547); //@line 183 "shamodule.c"
        var $549=$C; //@line 183 "shamodule.c"
        var $550=($548) ^ ($549); //@line 183 "shamodule.c"
        var $551=$D; //@line 183 "shamodule.c"
        var $552=$WP; //@line 183 "shamodule.c"
        var $553=HEAP[$552]; //@line 183 "shamodule.c"
        var $554=($543) + 1518500249; //@line 183 "shamodule.c"
        var $555=($554) + ($551); //@line 183 "shamodule.c"
        var $556=($555) + ($550); //@line 183 "shamodule.c"
        var $557=($556) + ($553); //@line 183 "shamodule.c"
        $E=$557; //@line 183 "shamodule.c"
        var $558=$WP; //@line 183 "shamodule.c"
        var $559=$558+4; //@line 183 "shamodule.c"
        $WP=$559; //@line 183 "shamodule.c"
        var $560=$A; //@line 183 "shamodule.c"
        var $561=($560) >>> 2; //@line 183 "shamodule.c"
        var $562=($560) << 30; //@line 183 "shamodule.c"
        var $563=($561) | ($562); //@line 183 "shamodule.c"
        $A=$563; //@line 183 "shamodule.c"
        var $564=$E; //@line 184 "shamodule.c"
        var $565=($564) >>> 27; //@line 184 "shamodule.c"
        var $566=($564) << 5; //@line 184 "shamodule.c"
        var $567=($565) | ($566); //@line 184 "shamodule.c"
        var $568=$T; //@line 184 "shamodule.c"
        var $569=$A; //@line 184 "shamodule.c"
        var $570=$B; //@line 184 "shamodule.c"
        var $571=($569) ^ ($568); //@line 184 "shamodule.c"
        var $572=($571) ^ ($570); //@line 184 "shamodule.c"
        var $573=$C; //@line 184 "shamodule.c"
        var $574=$WP; //@line 184 "shamodule.c"
        var $575=HEAP[$574]; //@line 184 "shamodule.c"
        var $576=($567) + 1859775393; //@line 184 "shamodule.c"
        var $577=($576) + ($573); //@line 184 "shamodule.c"
        var $578=($577) + ($572); //@line 184 "shamodule.c"
        var $579=($578) + ($575); //@line 184 "shamodule.c"
        $D=$579; //@line 184 "shamodule.c"
        var $580=$WP; //@line 184 "shamodule.c"
        var $581=$580+4; //@line 184 "shamodule.c"
        $WP=$581; //@line 184 "shamodule.c"
        var $582=$T; //@line 184 "shamodule.c"
        var $583=($582) >>> 2; //@line 184 "shamodule.c"
        var $584=($582) << 30; //@line 184 "shamodule.c"
        var $585=($583) | ($584); //@line 184 "shamodule.c"
        $T=$585; //@line 184 "shamodule.c"
        var $586=$D; //@line 184 "shamodule.c"
        var $587=($586) >>> 27; //@line 184 "shamodule.c"
        var $588=($586) << 5; //@line 184 "shamodule.c"
        var $589=($587) | ($588); //@line 184 "shamodule.c"
        var $590=$E; //@line 184 "shamodule.c"
        var $591=$T; //@line 184 "shamodule.c"
        var $592=$A; //@line 184 "shamodule.c"
        var $593=($591) ^ ($590); //@line 184 "shamodule.c"
        var $594=($593) ^ ($592); //@line 184 "shamodule.c"
        var $595=$B; //@line 184 "shamodule.c"
        var $596=$WP; //@line 184 "shamodule.c"
        var $597=HEAP[$596]; //@line 184 "shamodule.c"
        var $598=($589) + 1859775393; //@line 184 "shamodule.c"
        var $599=($598) + ($595); //@line 184 "shamodule.c"
        var $600=($599) + ($594); //@line 184 "shamodule.c"
        var $601=($600) + ($597); //@line 184 "shamodule.c"
        $C=$601; //@line 184 "shamodule.c"
        var $602=$WP; //@line 184 "shamodule.c"
        var $603=$602+4; //@line 184 "shamodule.c"
        $WP=$603; //@line 184 "shamodule.c"
        var $604=$E; //@line 184 "shamodule.c"
        var $605=($604) >>> 2; //@line 184 "shamodule.c"
        var $606=($604) << 30; //@line 184 "shamodule.c"
        var $607=($605) | ($606); //@line 184 "shamodule.c"
        $E=$607; //@line 184 "shamodule.c"
        var $608=$C; //@line 184 "shamodule.c"
        var $609=($608) >>> 27; //@line 184 "shamodule.c"
        var $610=($608) << 5; //@line 184 "shamodule.c"
        var $611=($609) | ($610); //@line 184 "shamodule.c"
        var $612=$D; //@line 184 "shamodule.c"
        var $613=$E; //@line 184 "shamodule.c"
        var $614=$T; //@line 184 "shamodule.c"
        var $615=($613) ^ ($612); //@line 184 "shamodule.c"
        var $616=($615) ^ ($614); //@line 184 "shamodule.c"
        var $617=$A; //@line 184 "shamodule.c"
        var $618=$WP; //@line 184 "shamodule.c"
        var $619=HEAP[$618]; //@line 184 "shamodule.c"
        var $620=($611) + 1859775393; //@line 184 "shamodule.c"
        var $621=($620) + ($617); //@line 184 "shamodule.c"
        var $622=($621) + ($616); //@line 184 "shamodule.c"
        var $623=($622) + ($619); //@line 184 "shamodule.c"
        $B=$623; //@line 184 "shamodule.c"
        var $624=$WP; //@line 184 "shamodule.c"
        var $625=$624+4; //@line 184 "shamodule.c"
        $WP=$625; //@line 184 "shamodule.c"
        var $626=$D; //@line 184 "shamodule.c"
        var $627=($626) >>> 2; //@line 184 "shamodule.c"
        var $628=($626) << 30; //@line 184 "shamodule.c"
        var $629=($627) | ($628); //@line 184 "shamodule.c"
        $D=$629; //@line 184 "shamodule.c"
        var $630=$B; //@line 184 "shamodule.c"
        var $631=($630) >>> 27; //@line 184 "shamodule.c"
        var $632=($630) << 5; //@line 184 "shamodule.c"
        var $633=($631) | ($632); //@line 184 "shamodule.c"
        var $634=$C; //@line 184 "shamodule.c"
        var $635=$D; //@line 184 "shamodule.c"
        var $636=$E; //@line 184 "shamodule.c"
        var $637=($635) ^ ($634); //@line 184 "shamodule.c"
        var $638=($637) ^ ($636); //@line 184 "shamodule.c"
        var $639=$T; //@line 184 "shamodule.c"
        var $640=$WP; //@line 184 "shamodule.c"
        var $641=HEAP[$640]; //@line 184 "shamodule.c"
        var $642=($633) + 1859775393; //@line 184 "shamodule.c"
        var $643=($642) + ($639); //@line 184 "shamodule.c"
        var $644=($643) + ($638); //@line 184 "shamodule.c"
        var $645=($644) + ($641); //@line 184 "shamodule.c"
        $A=$645; //@line 184 "shamodule.c"
        var $646=$WP; //@line 184 "shamodule.c"
        var $647=$646+4; //@line 184 "shamodule.c"
        $WP=$647; //@line 184 "shamodule.c"
        var $648=$C; //@line 184 "shamodule.c"
        var $649=($648) >>> 2; //@line 184 "shamodule.c"
        var $650=($648) << 30; //@line 184 "shamodule.c"
        var $651=($649) | ($650); //@line 184 "shamodule.c"
        $C=$651; //@line 184 "shamodule.c"
        var $652=$A; //@line 184 "shamodule.c"
        var $653=($652) >>> 27; //@line 184 "shamodule.c"
        var $654=($652) << 5; //@line 184 "shamodule.c"
        var $655=($653) | ($654); //@line 184 "shamodule.c"
        var $656=$B; //@line 184 "shamodule.c"
        var $657=$C; //@line 184 "shamodule.c"
        var $658=$D; //@line 184 "shamodule.c"
        var $659=($657) ^ ($656); //@line 184 "shamodule.c"
        var $660=($659) ^ ($658); //@line 184 "shamodule.c"
        var $661=$E; //@line 184 "shamodule.c"
        var $662=$WP; //@line 184 "shamodule.c"
        var $663=HEAP[$662]; //@line 184 "shamodule.c"
        var $664=($655) + 1859775393; //@line 184 "shamodule.c"
        var $665=($664) + ($661); //@line 184 "shamodule.c"
        var $666=($665) + ($660); //@line 184 "shamodule.c"
        var $667=($666) + ($663); //@line 184 "shamodule.c"
        $T=$667; //@line 184 "shamodule.c"
        var $668=$WP; //@line 184 "shamodule.c"
        var $669=$668+4; //@line 184 "shamodule.c"
        $WP=$669; //@line 184 "shamodule.c"
        var $670=$B; //@line 184 "shamodule.c"
        var $671=($670) >>> 2; //@line 184 "shamodule.c"
        var $672=($670) << 30; //@line 184 "shamodule.c"
        var $673=($671) | ($672); //@line 184 "shamodule.c"
        $B=$673; //@line 184 "shamodule.c"
        var $674=$T; //@line 184 "shamodule.c"
        var $675=($674) >>> 27; //@line 184 "shamodule.c"
        var $676=($674) << 5; //@line 184 "shamodule.c"
        var $677=($675) | ($676); //@line 184 "shamodule.c"
        var $678=$A; //@line 184 "shamodule.c"
        var $679=$B; //@line 184 "shamodule.c"
        var $680=$C; //@line 184 "shamodule.c"
        var $681=($679) ^ ($678); //@line 184 "shamodule.c"
        var $682=($681) ^ ($680); //@line 184 "shamodule.c"
        var $683=$D; //@line 184 "shamodule.c"
        var $684=$WP; //@line 184 "shamodule.c"
        var $685=HEAP[$684]; //@line 184 "shamodule.c"
        var $686=($677) + 1859775393; //@line 184 "shamodule.c"
        var $687=($686) + ($683); //@line 184 "shamodule.c"
        var $688=($687) + ($682); //@line 184 "shamodule.c"
        var $689=($688) + ($685); //@line 184 "shamodule.c"
        $E=$689; //@line 184 "shamodule.c"
        var $690=$WP; //@line 184 "shamodule.c"
        var $691=$690+4; //@line 184 "shamodule.c"
        $WP=$691; //@line 184 "shamodule.c"
        var $692=$A; //@line 184 "shamodule.c"
        var $693=($692) >>> 2; //@line 184 "shamodule.c"
        var $694=($692) << 30; //@line 184 "shamodule.c"
        var $695=($693) | ($694); //@line 184 "shamodule.c"
        $A=$695; //@line 184 "shamodule.c"
        var $696=$E; //@line 184 "shamodule.c"
        var $697=($696) >>> 27; //@line 184 "shamodule.c"
        var $698=($696) << 5; //@line 184 "shamodule.c"
        var $699=($697) | ($698); //@line 184 "shamodule.c"
        var $700=$T; //@line 184 "shamodule.c"
        var $701=$A; //@line 184 "shamodule.c"
        var $702=$B; //@line 184 "shamodule.c"
        var $703=($701) ^ ($700); //@line 184 "shamodule.c"
        var $704=($703) ^ ($702); //@line 184 "shamodule.c"
        var $705=$C; //@line 184 "shamodule.c"
        var $706=$WP; //@line 184 "shamodule.c"
        var $707=HEAP[$706]; //@line 184 "shamodule.c"
        var $708=($699) + 1859775393; //@line 184 "shamodule.c"
        var $709=($708) + ($705); //@line 184 "shamodule.c"
        var $710=($709) + ($704); //@line 184 "shamodule.c"
        var $711=($710) + ($707); //@line 184 "shamodule.c"
        $D=$711; //@line 184 "shamodule.c"
        var $712=$WP; //@line 184 "shamodule.c"
        var $713=$712+4; //@line 184 "shamodule.c"
        $WP=$713; //@line 184 "shamodule.c"
        var $714=$T; //@line 184 "shamodule.c"
        var $715=($714) >>> 2; //@line 184 "shamodule.c"
        var $716=($714) << 30; //@line 184 "shamodule.c"
        var $717=($715) | ($716); //@line 184 "shamodule.c"
        $T=$717; //@line 184 "shamodule.c"
        var $718=$D; //@line 184 "shamodule.c"
        var $719=($718) >>> 27; //@line 184 "shamodule.c"
        var $720=($718) << 5; //@line 184 "shamodule.c"
        var $721=($719) | ($720); //@line 184 "shamodule.c"
        var $722=$E; //@line 184 "shamodule.c"
        var $723=$T; //@line 184 "shamodule.c"
        var $724=$A; //@line 184 "shamodule.c"
        var $725=($723) ^ ($722); //@line 184 "shamodule.c"
        var $726=($725) ^ ($724); //@line 184 "shamodule.c"
        var $727=$B; //@line 184 "shamodule.c"
        var $728=$WP; //@line 184 "shamodule.c"
        var $729=HEAP[$728]; //@line 184 "shamodule.c"
        var $730=($721) + 1859775393; //@line 184 "shamodule.c"
        var $731=($730) + ($727); //@line 184 "shamodule.c"
        var $732=($731) + ($726); //@line 184 "shamodule.c"
        var $733=($732) + ($729); //@line 184 "shamodule.c"
        $C=$733; //@line 184 "shamodule.c"
        var $734=$WP; //@line 184 "shamodule.c"
        var $735=$734+4; //@line 184 "shamodule.c"
        $WP=$735; //@line 184 "shamodule.c"
        var $736=$E; //@line 184 "shamodule.c"
        var $737=($736) >>> 2; //@line 184 "shamodule.c"
        var $738=($736) << 30; //@line 184 "shamodule.c"
        var $739=($737) | ($738); //@line 184 "shamodule.c"
        $E=$739; //@line 184 "shamodule.c"
        var $740=$C; //@line 184 "shamodule.c"
        var $741=($740) >>> 27; //@line 184 "shamodule.c"
        var $742=($740) << 5; //@line 184 "shamodule.c"
        var $743=($741) | ($742); //@line 184 "shamodule.c"
        var $744=$D; //@line 184 "shamodule.c"
        var $745=$E; //@line 184 "shamodule.c"
        var $746=$T; //@line 184 "shamodule.c"
        var $747=($745) ^ ($744); //@line 184 "shamodule.c"
        var $748=($747) ^ ($746); //@line 184 "shamodule.c"
        var $749=$A; //@line 184 "shamodule.c"
        var $750=$WP; //@line 184 "shamodule.c"
        var $751=HEAP[$750]; //@line 184 "shamodule.c"
        var $752=($743) + 1859775393; //@line 184 "shamodule.c"
        var $753=($752) + ($749); //@line 184 "shamodule.c"
        var $754=($753) + ($748); //@line 184 "shamodule.c"
        var $755=($754) + ($751); //@line 184 "shamodule.c"
        $B=$755; //@line 184 "shamodule.c"
        var $756=$WP; //@line 184 "shamodule.c"
        var $757=$756+4; //@line 184 "shamodule.c"
        $WP=$757; //@line 184 "shamodule.c"
        var $758=$D; //@line 184 "shamodule.c"
        var $759=($758) >>> 2; //@line 184 "shamodule.c"
        var $760=($758) << 30; //@line 184 "shamodule.c"
        var $761=($759) | ($760); //@line 184 "shamodule.c"
        $D=$761; //@line 184 "shamodule.c"
        var $762=$B; //@line 184 "shamodule.c"
        var $763=($762) >>> 27; //@line 184 "shamodule.c"
        var $764=($762) << 5; //@line 184 "shamodule.c"
        var $765=($763) | ($764); //@line 184 "shamodule.c"
        var $766=$C; //@line 184 "shamodule.c"
        var $767=$D; //@line 184 "shamodule.c"
        var $768=$E; //@line 184 "shamodule.c"
        var $769=($767) ^ ($766); //@line 184 "shamodule.c"
        var $770=($769) ^ ($768); //@line 184 "shamodule.c"
        var $771=$T; //@line 184 "shamodule.c"
        var $772=$WP; //@line 184 "shamodule.c"
        var $773=HEAP[$772]; //@line 184 "shamodule.c"
        var $774=($765) + 1859775393; //@line 184 "shamodule.c"
        var $775=($774) + ($771); //@line 184 "shamodule.c"
        var $776=($775) + ($770); //@line 184 "shamodule.c"
        var $777=($776) + ($773); //@line 184 "shamodule.c"
        $A=$777; //@line 184 "shamodule.c"
        var $778=$WP; //@line 184 "shamodule.c"
        var $779=$778+4; //@line 184 "shamodule.c"
        $WP=$779; //@line 184 "shamodule.c"
        var $780=$C; //@line 184 "shamodule.c"
        var $781=($780) >>> 2; //@line 184 "shamodule.c"
        var $782=($780) << 30; //@line 184 "shamodule.c"
        var $783=($781) | ($782); //@line 184 "shamodule.c"
        $C=$783; //@line 184 "shamodule.c"
        var $784=$A; //@line 185 "shamodule.c"
        var $785=($784) >>> 27; //@line 185 "shamodule.c"
        var $786=($784) << 5; //@line 185 "shamodule.c"
        var $787=($785) | ($786); //@line 185 "shamodule.c"
        var $788=$B; //@line 185 "shamodule.c"
        var $789=$C; //@line 185 "shamodule.c"
        var $790=$D; //@line 185 "shamodule.c"
        var $791=($789) ^ ($788); //@line 185 "shamodule.c"
        var $792=($791) ^ ($790); //@line 185 "shamodule.c"
        var $793=$E; //@line 185 "shamodule.c"
        var $794=$WP; //@line 185 "shamodule.c"
        var $795=HEAP[$794]; //@line 185 "shamodule.c"
        var $796=($787) + 1859775393; //@line 185 "shamodule.c"
        var $797=($796) + ($793); //@line 185 "shamodule.c"
        var $798=($797) + ($792); //@line 185 "shamodule.c"
        var $799=($798) + ($795); //@line 185 "shamodule.c"
        $T=$799; //@line 185 "shamodule.c"
        var $800=$WP; //@line 185 "shamodule.c"
        var $801=$800+4; //@line 185 "shamodule.c"
        $WP=$801; //@line 185 "shamodule.c"
        var $802=$B; //@line 185 "shamodule.c"
        var $803=($802) >>> 2; //@line 185 "shamodule.c"
        var $804=($802) << 30; //@line 185 "shamodule.c"
        var $805=($803) | ($804); //@line 185 "shamodule.c"
        $B=$805; //@line 185 "shamodule.c"
        var $806=$T; //@line 185 "shamodule.c"
        var $807=($806) >>> 27; //@line 185 "shamodule.c"
        var $808=($806) << 5; //@line 185 "shamodule.c"
        var $809=($807) | ($808); //@line 185 "shamodule.c"
        var $810=$A; //@line 185 "shamodule.c"
        var $811=$B; //@line 185 "shamodule.c"
        var $812=$C; //@line 185 "shamodule.c"
        var $813=($811) ^ ($810); //@line 185 "shamodule.c"
        var $814=($813) ^ ($812); //@line 185 "shamodule.c"
        var $815=$D; //@line 185 "shamodule.c"
        var $816=$WP; //@line 185 "shamodule.c"
        var $817=HEAP[$816]; //@line 185 "shamodule.c"
        var $818=($809) + 1859775393; //@line 185 "shamodule.c"
        var $819=($818) + ($815); //@line 185 "shamodule.c"
        var $820=($819) + ($814); //@line 185 "shamodule.c"
        var $821=($820) + ($817); //@line 185 "shamodule.c"
        $E=$821; //@line 185 "shamodule.c"
        var $822=$WP; //@line 185 "shamodule.c"
        var $823=$822+4; //@line 185 "shamodule.c"
        $WP=$823; //@line 185 "shamodule.c"
        var $824=$A; //@line 185 "shamodule.c"
        var $825=($824) >>> 2; //@line 185 "shamodule.c"
        var $826=($824) << 30; //@line 185 "shamodule.c"
        var $827=($825) | ($826); //@line 185 "shamodule.c"
        $A=$827; //@line 185 "shamodule.c"
        var $828=$E; //@line 185 "shamodule.c"
        var $829=($828) >>> 27; //@line 185 "shamodule.c"
        var $830=($828) << 5; //@line 185 "shamodule.c"
        var $831=($829) | ($830); //@line 185 "shamodule.c"
        var $832=$T; //@line 185 "shamodule.c"
        var $833=$A; //@line 185 "shamodule.c"
        var $834=$B; //@line 185 "shamodule.c"
        var $835=($833) ^ ($832); //@line 185 "shamodule.c"
        var $836=($835) ^ ($834); //@line 185 "shamodule.c"
        var $837=$C; //@line 185 "shamodule.c"
        var $838=$WP; //@line 185 "shamodule.c"
        var $839=HEAP[$838]; //@line 185 "shamodule.c"
        var $840=($831) + 1859775393; //@line 185 "shamodule.c"
        var $841=($840) + ($837); //@line 185 "shamodule.c"
        var $842=($841) + ($836); //@line 185 "shamodule.c"
        var $843=($842) + ($839); //@line 185 "shamodule.c"
        $D=$843; //@line 185 "shamodule.c"
        var $844=$WP; //@line 185 "shamodule.c"
        var $845=$844+4; //@line 185 "shamodule.c"
        $WP=$845; //@line 185 "shamodule.c"
        var $846=$T; //@line 185 "shamodule.c"
        var $847=($846) >>> 2; //@line 185 "shamodule.c"
        var $848=($846) << 30; //@line 185 "shamodule.c"
        var $849=($847) | ($848); //@line 185 "shamodule.c"
        $T=$849; //@line 185 "shamodule.c"
        var $850=$D; //@line 185 "shamodule.c"
        var $851=($850) >>> 27; //@line 185 "shamodule.c"
        var $852=($850) << 5; //@line 185 "shamodule.c"
        var $853=($851) | ($852); //@line 185 "shamodule.c"
        var $854=$E; //@line 185 "shamodule.c"
        var $855=$T; //@line 185 "shamodule.c"
        var $856=$A; //@line 185 "shamodule.c"
        var $857=($855) ^ ($854); //@line 185 "shamodule.c"
        var $858=($857) ^ ($856); //@line 185 "shamodule.c"
        var $859=$B; //@line 185 "shamodule.c"
        var $860=$WP; //@line 185 "shamodule.c"
        var $861=HEAP[$860]; //@line 185 "shamodule.c"
        var $862=($853) + 1859775393; //@line 185 "shamodule.c"
        var $863=($862) + ($859); //@line 185 "shamodule.c"
        var $864=($863) + ($858); //@line 185 "shamodule.c"
        var $865=($864) + ($861); //@line 185 "shamodule.c"
        $C=$865; //@line 185 "shamodule.c"
        var $866=$WP; //@line 185 "shamodule.c"
        var $867=$866+4; //@line 185 "shamodule.c"
        $WP=$867; //@line 185 "shamodule.c"
        var $868=$E; //@line 185 "shamodule.c"
        var $869=($868) >>> 2; //@line 185 "shamodule.c"
        var $870=($868) << 30; //@line 185 "shamodule.c"
        var $871=($869) | ($870); //@line 185 "shamodule.c"
        $E=$871; //@line 185 "shamodule.c"
        var $872=$C; //@line 185 "shamodule.c"
        var $873=($872) >>> 27; //@line 185 "shamodule.c"
        var $874=($872) << 5; //@line 185 "shamodule.c"
        var $875=($873) | ($874); //@line 185 "shamodule.c"
        var $876=$D; //@line 185 "shamodule.c"
        var $877=$E; //@line 185 "shamodule.c"
        var $878=$T; //@line 185 "shamodule.c"
        var $879=($877) ^ ($876); //@line 185 "shamodule.c"
        var $880=($879) ^ ($878); //@line 185 "shamodule.c"
        var $881=$A; //@line 185 "shamodule.c"
        var $882=$WP; //@line 185 "shamodule.c"
        var $883=HEAP[$882]; //@line 185 "shamodule.c"
        var $884=($875) + 1859775393; //@line 185 "shamodule.c"
        var $885=($884) + ($881); //@line 185 "shamodule.c"
        var $886=($885) + ($880); //@line 185 "shamodule.c"
        var $887=($886) + ($883); //@line 185 "shamodule.c"
        $B=$887; //@line 185 "shamodule.c"
        var $888=$WP; //@line 185 "shamodule.c"
        var $889=$888+4; //@line 185 "shamodule.c"
        $WP=$889; //@line 185 "shamodule.c"
        var $890=$D; //@line 185 "shamodule.c"
        var $891=($890) >>> 2; //@line 185 "shamodule.c"
        var $892=($890) << 30; //@line 185 "shamodule.c"
        var $893=($891) | ($892); //@line 185 "shamodule.c"
        $D=$893; //@line 185 "shamodule.c"
        var $894=$B; //@line 185 "shamodule.c"
        var $895=($894) >>> 27; //@line 185 "shamodule.c"
        var $896=($894) << 5; //@line 185 "shamodule.c"
        var $897=($895) | ($896); //@line 185 "shamodule.c"
        var $898=$C; //@line 185 "shamodule.c"
        var $899=$D; //@line 185 "shamodule.c"
        var $900=$E; //@line 185 "shamodule.c"
        var $901=($899) ^ ($898); //@line 185 "shamodule.c"
        var $902=($901) ^ ($900); //@line 185 "shamodule.c"
        var $903=$T; //@line 185 "shamodule.c"
        var $904=$WP; //@line 185 "shamodule.c"
        var $905=HEAP[$904]; //@line 185 "shamodule.c"
        var $906=($897) + 1859775393; //@line 185 "shamodule.c"
        var $907=($906) + ($903); //@line 185 "shamodule.c"
        var $908=($907) + ($902); //@line 185 "shamodule.c"
        var $909=($908) + ($905); //@line 185 "shamodule.c"
        $A=$909; //@line 185 "shamodule.c"
        var $910=$WP; //@line 185 "shamodule.c"
        var $911=$910+4; //@line 185 "shamodule.c"
        $WP=$911; //@line 185 "shamodule.c"
        var $912=$C; //@line 185 "shamodule.c"
        var $913=($912) >>> 2; //@line 185 "shamodule.c"
        var $914=($912) << 30; //@line 185 "shamodule.c"
        var $915=($913) | ($914); //@line 185 "shamodule.c"
        $C=$915; //@line 185 "shamodule.c"
        var $916=$A; //@line 185 "shamodule.c"
        var $917=($916) >>> 27; //@line 185 "shamodule.c"
        var $918=($916) << 5; //@line 185 "shamodule.c"
        var $919=($917) | ($918); //@line 185 "shamodule.c"
        var $920=$B; //@line 185 "shamodule.c"
        var $921=$C; //@line 185 "shamodule.c"
        var $922=$D; //@line 185 "shamodule.c"
        var $923=($921) ^ ($920); //@line 185 "shamodule.c"
        var $924=($923) ^ ($922); //@line 185 "shamodule.c"
        var $925=$E; //@line 185 "shamodule.c"
        var $926=$WP; //@line 185 "shamodule.c"
        var $927=HEAP[$926]; //@line 185 "shamodule.c"
        var $928=($919) + 1859775393; //@line 185 "shamodule.c"
        var $929=($928) + ($925); //@line 185 "shamodule.c"
        var $930=($929) + ($924); //@line 185 "shamodule.c"
        var $931=($930) + ($927); //@line 185 "shamodule.c"
        $T=$931; //@line 185 "shamodule.c"
        var $932=$WP; //@line 185 "shamodule.c"
        var $933=$932+4; //@line 185 "shamodule.c"
        $WP=$933; //@line 185 "shamodule.c"
        var $934=$B; //@line 185 "shamodule.c"
        var $935=($934) >>> 2; //@line 185 "shamodule.c"
        var $936=($934) << 30; //@line 185 "shamodule.c"
        var $937=($935) | ($936); //@line 185 "shamodule.c"
        $B=$937; //@line 185 "shamodule.c"
        var $938=$T; //@line 185 "shamodule.c"
        var $939=($938) >>> 27; //@line 185 "shamodule.c"
        var $940=($938) << 5; //@line 185 "shamodule.c"
        var $941=($939) | ($940); //@line 185 "shamodule.c"
        var $942=$A; //@line 185 "shamodule.c"
        var $943=$B; //@line 185 "shamodule.c"
        var $944=$C; //@line 185 "shamodule.c"
        var $945=($943) ^ ($942); //@line 185 "shamodule.c"
        var $946=($945) ^ ($944); //@line 185 "shamodule.c"
        var $947=$D; //@line 185 "shamodule.c"
        var $948=$WP; //@line 185 "shamodule.c"
        var $949=HEAP[$948]; //@line 185 "shamodule.c"
        var $950=($941) + 1859775393; //@line 185 "shamodule.c"
        var $951=($950) + ($947); //@line 185 "shamodule.c"
        var $952=($951) + ($946); //@line 185 "shamodule.c"
        var $953=($952) + ($949); //@line 185 "shamodule.c"
        $E=$953; //@line 185 "shamodule.c"
        var $954=$WP; //@line 185 "shamodule.c"
        var $955=$954+4; //@line 185 "shamodule.c"
        $WP=$955; //@line 185 "shamodule.c"
        var $956=$A; //@line 185 "shamodule.c"
        var $957=($956) >>> 2; //@line 185 "shamodule.c"
        var $958=($956) << 30; //@line 185 "shamodule.c"
        var $959=($957) | ($958); //@line 185 "shamodule.c"
        $A=$959; //@line 185 "shamodule.c"
        var $960=$E; //@line 185 "shamodule.c"
        var $961=($960) >>> 27; //@line 185 "shamodule.c"
        var $962=($960) << 5; //@line 185 "shamodule.c"
        var $963=($961) | ($962); //@line 185 "shamodule.c"
        var $964=$T; //@line 185 "shamodule.c"
        var $965=$A; //@line 185 "shamodule.c"
        var $966=$B; //@line 185 "shamodule.c"
        var $967=($965) ^ ($964); //@line 185 "shamodule.c"
        var $968=($967) ^ ($966); //@line 185 "shamodule.c"
        var $969=$C; //@line 185 "shamodule.c"
        var $970=$WP; //@line 185 "shamodule.c"
        var $971=HEAP[$970]; //@line 185 "shamodule.c"
        var $972=($963) + 1859775393; //@line 185 "shamodule.c"
        var $973=($972) + ($969); //@line 185 "shamodule.c"
        var $974=($973) + ($968); //@line 185 "shamodule.c"
        var $975=($974) + ($971); //@line 185 "shamodule.c"
        $D=$975; //@line 185 "shamodule.c"
        var $976=$WP; //@line 185 "shamodule.c"
        var $977=$976+4; //@line 185 "shamodule.c"
        $WP=$977; //@line 185 "shamodule.c"
        var $978=$T; //@line 185 "shamodule.c"
        var $979=($978) >>> 2; //@line 185 "shamodule.c"
        var $980=($978) << 30; //@line 185 "shamodule.c"
        var $981=($979) | ($980); //@line 185 "shamodule.c"
        $T=$981; //@line 185 "shamodule.c"
        var $982=$D; //@line 185 "shamodule.c"
        var $983=($982) >>> 27; //@line 185 "shamodule.c"
        var $984=($982) << 5; //@line 185 "shamodule.c"
        var $985=($983) | ($984); //@line 185 "shamodule.c"
        var $986=$E; //@line 185 "shamodule.c"
        var $987=$T; //@line 185 "shamodule.c"
        var $988=$A; //@line 185 "shamodule.c"
        var $989=($987) ^ ($986); //@line 185 "shamodule.c"
        var $990=($989) ^ ($988); //@line 185 "shamodule.c"
        var $991=$B; //@line 185 "shamodule.c"
        var $992=$WP; //@line 185 "shamodule.c"
        var $993=HEAP[$992]; //@line 185 "shamodule.c"
        var $994=($985) + 1859775393; //@line 185 "shamodule.c"
        var $995=($994) + ($991); //@line 185 "shamodule.c"
        var $996=($995) + ($990); //@line 185 "shamodule.c"
        var $997=($996) + ($993); //@line 185 "shamodule.c"
        $C=$997; //@line 185 "shamodule.c"
        var $998=$WP; //@line 185 "shamodule.c"
        var $999=$998+4; //@line 185 "shamodule.c"
        $WP=$999; //@line 185 "shamodule.c"
        var $1000=$E; //@line 185 "shamodule.c"
        var $1001=($1000) >>> 2; //@line 185 "shamodule.c"
        var $1002=($1000) << 30; //@line 185 "shamodule.c"
        var $1003=($1001) | ($1002); //@line 185 "shamodule.c"
        $E=$1003; //@line 185 "shamodule.c"
        var $1004=$C; //@line 186 "shamodule.c"
        var $1005=($1004) >>> 27; //@line 186 "shamodule.c"
        var $1006=($1004) << 5; //@line 186 "shamodule.c"
        var $1007=($1005) | ($1006); //@line 186 "shamodule.c"
        var $1008=$D; //@line 186 "shamodule.c"
        var $1009=$E; //@line 186 "shamodule.c"
        var $1010=($1009) & ($1008); //@line 186 "shamodule.c"
        var $1011=$D; //@line 186 "shamodule.c"
        var $1012=$E; //@line 186 "shamodule.c"
        var $1013=($1012) | ($1011); //@line 186 "shamodule.c"
        var $1014=$T; //@line 186 "shamodule.c"
        var $1015=($1013) & ($1014); //@line 186 "shamodule.c"
        var $1016=($1015) | ($1010); //@line 186 "shamodule.c"
        var $1017=$A; //@line 186 "shamodule.c"
        var $1018=$WP; //@line 186 "shamodule.c"
        var $1019=HEAP[$1018]; //@line 186 "shamodule.c"
        var $1020=($1007) + -1894007588; //@line 186 "shamodule.c"
        var $1021=($1020) + ($1017); //@line 186 "shamodule.c"
        var $1022=($1021) + ($1016); //@line 186 "shamodule.c"
        var $1023=($1022) + ($1019); //@line 186 "shamodule.c"
        $B=$1023; //@line 186 "shamodule.c"
        var $1024=$WP; //@line 186 "shamodule.c"
        var $1025=$1024+4; //@line 186 "shamodule.c"
        $WP=$1025; //@line 186 "shamodule.c"
        var $1026=$D; //@line 186 "shamodule.c"
        var $1027=($1026) >>> 2; //@line 186 "shamodule.c"
        var $1028=($1026) << 30; //@line 186 "shamodule.c"
        var $1029=($1027) | ($1028); //@line 186 "shamodule.c"
        $D=$1029; //@line 186 "shamodule.c"
        var $1030=$B; //@line 186 "shamodule.c"
        var $1031=($1030) >>> 27; //@line 186 "shamodule.c"
        var $1032=($1030) << 5; //@line 186 "shamodule.c"
        var $1033=($1031) | ($1032); //@line 186 "shamodule.c"
        var $1034=$C; //@line 186 "shamodule.c"
        var $1035=$D; //@line 186 "shamodule.c"
        var $1036=($1035) & ($1034); //@line 186 "shamodule.c"
        var $1037=$C; //@line 186 "shamodule.c"
        var $1038=$D; //@line 186 "shamodule.c"
        var $1039=($1038) | ($1037); //@line 186 "shamodule.c"
        var $1040=$E; //@line 186 "shamodule.c"
        var $1041=($1039) & ($1040); //@line 186 "shamodule.c"
        var $1042=($1041) | ($1036); //@line 186 "shamodule.c"
        var $1043=$T; //@line 186 "shamodule.c"
        var $1044=$WP; //@line 186 "shamodule.c"
        var $1045=HEAP[$1044]; //@line 186 "shamodule.c"
        var $1046=($1033) + -1894007588; //@line 186 "shamodule.c"
        var $1047=($1046) + ($1043); //@line 186 "shamodule.c"
        var $1048=($1047) + ($1042); //@line 186 "shamodule.c"
        var $1049=($1048) + ($1045); //@line 186 "shamodule.c"
        $A=$1049; //@line 186 "shamodule.c"
        var $1050=$WP; //@line 186 "shamodule.c"
        var $1051=$1050+4; //@line 186 "shamodule.c"
        $WP=$1051; //@line 186 "shamodule.c"
        var $1052=$C; //@line 186 "shamodule.c"
        var $1053=($1052) >>> 2; //@line 186 "shamodule.c"
        var $1054=($1052) << 30; //@line 186 "shamodule.c"
        var $1055=($1053) | ($1054); //@line 186 "shamodule.c"
        $C=$1055; //@line 186 "shamodule.c"
        var $1056=$A; //@line 186 "shamodule.c"
        var $1057=($1056) >>> 27; //@line 186 "shamodule.c"
        var $1058=($1056) << 5; //@line 186 "shamodule.c"
        var $1059=($1057) | ($1058); //@line 186 "shamodule.c"
        var $1060=$B; //@line 186 "shamodule.c"
        var $1061=$C; //@line 186 "shamodule.c"
        var $1062=($1061) & ($1060); //@line 186 "shamodule.c"
        var $1063=$B; //@line 186 "shamodule.c"
        var $1064=$C; //@line 186 "shamodule.c"
        var $1065=($1064) | ($1063); //@line 186 "shamodule.c"
        var $1066=$D; //@line 186 "shamodule.c"
        var $1067=($1065) & ($1066); //@line 186 "shamodule.c"
        var $1068=($1067) | ($1062); //@line 186 "shamodule.c"
        var $1069=$E; //@line 186 "shamodule.c"
        var $1070=$WP; //@line 186 "shamodule.c"
        var $1071=HEAP[$1070]; //@line 186 "shamodule.c"
        var $1072=($1059) + -1894007588; //@line 186 "shamodule.c"
        var $1073=($1072) + ($1069); //@line 186 "shamodule.c"
        var $1074=($1073) + ($1068); //@line 186 "shamodule.c"
        var $1075=($1074) + ($1071); //@line 186 "shamodule.c"
        $T=$1075; //@line 186 "shamodule.c"
        var $1076=$WP; //@line 186 "shamodule.c"
        var $1077=$1076+4; //@line 186 "shamodule.c"
        $WP=$1077; //@line 186 "shamodule.c"
        var $1078=$B; //@line 186 "shamodule.c"
        var $1079=($1078) >>> 2; //@line 186 "shamodule.c"
        var $1080=($1078) << 30; //@line 186 "shamodule.c"
        var $1081=($1079) | ($1080); //@line 186 "shamodule.c"
        $B=$1081; //@line 186 "shamodule.c"
        var $1082=$T; //@line 186 "shamodule.c"
        var $1083=($1082) >>> 27; //@line 186 "shamodule.c"
        var $1084=($1082) << 5; //@line 186 "shamodule.c"
        var $1085=($1083) | ($1084); //@line 186 "shamodule.c"
        var $1086=$A; //@line 186 "shamodule.c"
        var $1087=$B; //@line 186 "shamodule.c"
        var $1088=($1087) & ($1086); //@line 186 "shamodule.c"
        var $1089=$A; //@line 186 "shamodule.c"
        var $1090=$B; //@line 186 "shamodule.c"
        var $1091=($1090) | ($1089); //@line 186 "shamodule.c"
        var $1092=$C; //@line 186 "shamodule.c"
        var $1093=($1091) & ($1092); //@line 186 "shamodule.c"
        var $1094=($1093) | ($1088); //@line 186 "shamodule.c"
        var $1095=$D; //@line 186 "shamodule.c"
        var $1096=$WP; //@line 186 "shamodule.c"
        var $1097=HEAP[$1096]; //@line 186 "shamodule.c"
        var $1098=($1085) + -1894007588; //@line 186 "shamodule.c"
        var $1099=($1098) + ($1095); //@line 186 "shamodule.c"
        var $1100=($1099) + ($1094); //@line 186 "shamodule.c"
        var $1101=($1100) + ($1097); //@line 186 "shamodule.c"
        $E=$1101; //@line 186 "shamodule.c"
        var $1102=$WP; //@line 186 "shamodule.c"
        var $1103=$1102+4; //@line 186 "shamodule.c"
        $WP=$1103; //@line 186 "shamodule.c"
        var $1104=$A; //@line 186 "shamodule.c"
        var $1105=($1104) >>> 2; //@line 186 "shamodule.c"
        var $1106=($1104) << 30; //@line 186 "shamodule.c"
        var $1107=($1105) | ($1106); //@line 186 "shamodule.c"
        $A=$1107; //@line 186 "shamodule.c"
        var $1108=$E; //@line 186 "shamodule.c"
        var $1109=($1108) >>> 27; //@line 186 "shamodule.c"
        var $1110=($1108) << 5; //@line 186 "shamodule.c"
        var $1111=($1109) | ($1110); //@line 186 "shamodule.c"
        var $1112=$T; //@line 186 "shamodule.c"
        var $1113=$A; //@line 186 "shamodule.c"
        var $1114=($1113) & ($1112); //@line 186 "shamodule.c"
        var $1115=$T; //@line 186 "shamodule.c"
        var $1116=$A; //@line 186 "shamodule.c"
        var $1117=($1116) | ($1115); //@line 186 "shamodule.c"
        var $1118=$B; //@line 186 "shamodule.c"
        var $1119=($1117) & ($1118); //@line 186 "shamodule.c"
        var $1120=($1119) | ($1114); //@line 186 "shamodule.c"
        var $1121=$C; //@line 186 "shamodule.c"
        var $1122=$WP; //@line 186 "shamodule.c"
        var $1123=HEAP[$1122]; //@line 186 "shamodule.c"
        var $1124=($1111) + -1894007588; //@line 186 "shamodule.c"
        var $1125=($1124) + ($1121); //@line 186 "shamodule.c"
        var $1126=($1125) + ($1120); //@line 186 "shamodule.c"
        var $1127=($1126) + ($1123); //@line 186 "shamodule.c"
        $D=$1127; //@line 186 "shamodule.c"
        var $1128=$WP; //@line 186 "shamodule.c"
        var $1129=$1128+4; //@line 186 "shamodule.c"
        $WP=$1129; //@line 186 "shamodule.c"
        var $1130=$T; //@line 186 "shamodule.c"
        var $1131=($1130) >>> 2; //@line 186 "shamodule.c"
        var $1132=($1130) << 30; //@line 186 "shamodule.c"
        var $1133=($1131) | ($1132); //@line 186 "shamodule.c"
        $T=$1133; //@line 186 "shamodule.c"
        var $1134=$D; //@line 186 "shamodule.c"
        var $1135=($1134) >>> 27; //@line 186 "shamodule.c"
        var $1136=($1134) << 5; //@line 186 "shamodule.c"
        var $1137=($1135) | ($1136); //@line 186 "shamodule.c"
        var $1138=$E; //@line 186 "shamodule.c"
        var $1139=$T; //@line 186 "shamodule.c"
        var $1140=($1139) & ($1138); //@line 186 "shamodule.c"
        var $1141=$E; //@line 186 "shamodule.c"
        var $1142=$T; //@line 186 "shamodule.c"
        var $1143=($1142) | ($1141); //@line 186 "shamodule.c"
        var $1144=$A; //@line 186 "shamodule.c"
        var $1145=($1143) & ($1144); //@line 186 "shamodule.c"
        var $1146=($1145) | ($1140); //@line 186 "shamodule.c"
        var $1147=$B; //@line 186 "shamodule.c"
        var $1148=$WP; //@line 186 "shamodule.c"
        var $1149=HEAP[$1148]; //@line 186 "shamodule.c"
        var $1150=($1137) + -1894007588; //@line 186 "shamodule.c"
        var $1151=($1150) + ($1147); //@line 186 "shamodule.c"
        var $1152=($1151) + ($1146); //@line 186 "shamodule.c"
        var $1153=($1152) + ($1149); //@line 186 "shamodule.c"
        $C=$1153; //@line 186 "shamodule.c"
        var $1154=$WP; //@line 186 "shamodule.c"
        var $1155=$1154+4; //@line 186 "shamodule.c"
        $WP=$1155; //@line 186 "shamodule.c"
        var $1156=$E; //@line 186 "shamodule.c"
        var $1157=($1156) >>> 2; //@line 186 "shamodule.c"
        var $1158=($1156) << 30; //@line 186 "shamodule.c"
        var $1159=($1157) | ($1158); //@line 186 "shamodule.c"
        $E=$1159; //@line 186 "shamodule.c"
        var $1160=$C; //@line 186 "shamodule.c"
        var $1161=($1160) >>> 27; //@line 186 "shamodule.c"
        var $1162=($1160) << 5; //@line 186 "shamodule.c"
        var $1163=($1161) | ($1162); //@line 186 "shamodule.c"
        var $1164=$D; //@line 186 "shamodule.c"
        var $1165=$E; //@line 186 "shamodule.c"
        var $1166=($1165) & ($1164); //@line 186 "shamodule.c"
        var $1167=$D; //@line 186 "shamodule.c"
        var $1168=$E; //@line 186 "shamodule.c"
        var $1169=($1168) | ($1167); //@line 186 "shamodule.c"
        var $1170=$T; //@line 186 "shamodule.c"
        var $1171=($1169) & ($1170); //@line 186 "shamodule.c"
        var $1172=($1171) | ($1166); //@line 186 "shamodule.c"
        var $1173=$A; //@line 186 "shamodule.c"
        var $1174=$WP; //@line 186 "shamodule.c"
        var $1175=HEAP[$1174]; //@line 186 "shamodule.c"
        var $1176=($1163) + -1894007588; //@line 186 "shamodule.c"
        var $1177=($1176) + ($1173); //@line 186 "shamodule.c"
        var $1178=($1177) + ($1172); //@line 186 "shamodule.c"
        var $1179=($1178) + ($1175); //@line 186 "shamodule.c"
        $B=$1179; //@line 186 "shamodule.c"
        var $1180=$WP; //@line 186 "shamodule.c"
        var $1181=$1180+4; //@line 186 "shamodule.c"
        $WP=$1181; //@line 186 "shamodule.c"
        var $1182=$D; //@line 186 "shamodule.c"
        var $1183=($1182) >>> 2; //@line 186 "shamodule.c"
        var $1184=($1182) << 30; //@line 186 "shamodule.c"
        var $1185=($1183) | ($1184); //@line 186 "shamodule.c"
        $D=$1185; //@line 186 "shamodule.c"
        var $1186=$B; //@line 186 "shamodule.c"
        var $1187=($1186) >>> 27; //@line 186 "shamodule.c"
        var $1188=($1186) << 5; //@line 186 "shamodule.c"
        var $1189=($1187) | ($1188); //@line 186 "shamodule.c"
        var $1190=$C; //@line 186 "shamodule.c"
        var $1191=$D; //@line 186 "shamodule.c"
        var $1192=($1191) & ($1190); //@line 186 "shamodule.c"
        var $1193=$C; //@line 186 "shamodule.c"
        var $1194=$D; //@line 186 "shamodule.c"
        var $1195=($1194) | ($1193); //@line 186 "shamodule.c"
        var $1196=$E; //@line 186 "shamodule.c"
        var $1197=($1195) & ($1196); //@line 186 "shamodule.c"
        var $1198=($1197) | ($1192); //@line 186 "shamodule.c"
        var $1199=$T; //@line 186 "shamodule.c"
        var $1200=$WP; //@line 186 "shamodule.c"
        var $1201=HEAP[$1200]; //@line 186 "shamodule.c"
        var $1202=($1189) + -1894007588; //@line 186 "shamodule.c"
        var $1203=($1202) + ($1199); //@line 186 "shamodule.c"
        var $1204=($1203) + ($1198); //@line 186 "shamodule.c"
        var $1205=($1204) + ($1201); //@line 186 "shamodule.c"
        $A=$1205; //@line 186 "shamodule.c"
        var $1206=$WP; //@line 186 "shamodule.c"
        var $1207=$1206+4; //@line 186 "shamodule.c"
        $WP=$1207; //@line 186 "shamodule.c"
        var $1208=$C; //@line 186 "shamodule.c"
        var $1209=($1208) >>> 2; //@line 186 "shamodule.c"
        var $1210=($1208) << 30; //@line 186 "shamodule.c"
        var $1211=($1209) | ($1210); //@line 186 "shamodule.c"
        $C=$1211; //@line 186 "shamodule.c"
        var $1212=$A; //@line 186 "shamodule.c"
        var $1213=($1212) >>> 27; //@line 186 "shamodule.c"
        var $1214=($1212) << 5; //@line 186 "shamodule.c"
        var $1215=($1213) | ($1214); //@line 186 "shamodule.c"
        var $1216=$B; //@line 186 "shamodule.c"
        var $1217=$C; //@line 186 "shamodule.c"
        var $1218=($1217) & ($1216); //@line 186 "shamodule.c"
        var $1219=$B; //@line 186 "shamodule.c"
        var $1220=$C; //@line 186 "shamodule.c"
        var $1221=($1220) | ($1219); //@line 186 "shamodule.c"
        var $1222=$D; //@line 186 "shamodule.c"
        var $1223=($1221) & ($1222); //@line 186 "shamodule.c"
        var $1224=($1223) | ($1218); //@line 186 "shamodule.c"
        var $1225=$E; //@line 186 "shamodule.c"
        var $1226=$WP; //@line 186 "shamodule.c"
        var $1227=HEAP[$1226]; //@line 186 "shamodule.c"
        var $1228=($1215) + -1894007588; //@line 186 "shamodule.c"
        var $1229=($1228) + ($1225); //@line 186 "shamodule.c"
        var $1230=($1229) + ($1224); //@line 186 "shamodule.c"
        var $1231=($1230) + ($1227); //@line 186 "shamodule.c"
        $T=$1231; //@line 186 "shamodule.c"
        var $1232=$WP; //@line 186 "shamodule.c"
        var $1233=$1232+4; //@line 186 "shamodule.c"
        $WP=$1233; //@line 186 "shamodule.c"
        var $1234=$B; //@line 186 "shamodule.c"
        var $1235=($1234) >>> 2; //@line 186 "shamodule.c"
        var $1236=($1234) << 30; //@line 186 "shamodule.c"
        var $1237=($1235) | ($1236); //@line 186 "shamodule.c"
        $B=$1237; //@line 186 "shamodule.c"
        var $1238=$T; //@line 186 "shamodule.c"
        var $1239=($1238) >>> 27; //@line 186 "shamodule.c"
        var $1240=($1238) << 5; //@line 186 "shamodule.c"
        var $1241=($1239) | ($1240); //@line 186 "shamodule.c"
        var $1242=$A; //@line 186 "shamodule.c"
        var $1243=$B; //@line 186 "shamodule.c"
        var $1244=($1243) & ($1242); //@line 186 "shamodule.c"
        var $1245=$A; //@line 186 "shamodule.c"
        var $1246=$B; //@line 186 "shamodule.c"
        var $1247=($1246) | ($1245); //@line 186 "shamodule.c"
        var $1248=$C; //@line 186 "shamodule.c"
        var $1249=($1247) & ($1248); //@line 186 "shamodule.c"
        var $1250=($1249) | ($1244); //@line 186 "shamodule.c"
        var $1251=$D; //@line 186 "shamodule.c"
        var $1252=$WP; //@line 186 "shamodule.c"
        var $1253=HEAP[$1252]; //@line 186 "shamodule.c"
        var $1254=($1241) + -1894007588; //@line 186 "shamodule.c"
        var $1255=($1254) + ($1251); //@line 186 "shamodule.c"
        var $1256=($1255) + ($1250); //@line 186 "shamodule.c"
        var $1257=($1256) + ($1253); //@line 186 "shamodule.c"
        $E=$1257; //@line 186 "shamodule.c"
        var $1258=$WP; //@line 186 "shamodule.c"
        var $1259=$1258+4; //@line 186 "shamodule.c"
        $WP=$1259; //@line 186 "shamodule.c"
        var $1260=$A; //@line 186 "shamodule.c"
        var $1261=($1260) >>> 2; //@line 186 "shamodule.c"
        var $1262=($1260) << 30; //@line 186 "shamodule.c"
        var $1263=($1261) | ($1262); //@line 186 "shamodule.c"
        $A=$1263; //@line 186 "shamodule.c"
        var $1264=$E; //@line 187 "shamodule.c"
        var $1265=($1264) >>> 27; //@line 187 "shamodule.c"
        var $1266=($1264) << 5; //@line 187 "shamodule.c"
        var $1267=($1265) | ($1266); //@line 187 "shamodule.c"
        var $1268=$T; //@line 187 "shamodule.c"
        var $1269=$A; //@line 187 "shamodule.c"
        var $1270=($1269) & ($1268); //@line 187 "shamodule.c"
        var $1271=$T; //@line 187 "shamodule.c"
        var $1272=$A; //@line 187 "shamodule.c"
        var $1273=($1272) | ($1271); //@line 187 "shamodule.c"
        var $1274=$B; //@line 187 "shamodule.c"
        var $1275=($1273) & ($1274); //@line 187 "shamodule.c"
        var $1276=($1275) | ($1270); //@line 187 "shamodule.c"
        var $1277=$C; //@line 187 "shamodule.c"
        var $1278=$WP; //@line 187 "shamodule.c"
        var $1279=HEAP[$1278]; //@line 187 "shamodule.c"
        var $1280=($1267) + -1894007588; //@line 187 "shamodule.c"
        var $1281=($1280) + ($1277); //@line 187 "shamodule.c"
        var $1282=($1281) + ($1276); //@line 187 "shamodule.c"
        var $1283=($1282) + ($1279); //@line 187 "shamodule.c"
        $D=$1283; //@line 187 "shamodule.c"
        var $1284=$WP; //@line 187 "shamodule.c"
        var $1285=$1284+4; //@line 187 "shamodule.c"
        $WP=$1285; //@line 187 "shamodule.c"
        var $1286=$T; //@line 187 "shamodule.c"
        var $1287=($1286) >>> 2; //@line 187 "shamodule.c"
        var $1288=($1286) << 30; //@line 187 "shamodule.c"
        var $1289=($1287) | ($1288); //@line 187 "shamodule.c"
        $T=$1289; //@line 187 "shamodule.c"
        var $1290=$D; //@line 187 "shamodule.c"
        var $1291=($1290) >>> 27; //@line 187 "shamodule.c"
        var $1292=($1290) << 5; //@line 187 "shamodule.c"
        var $1293=($1291) | ($1292); //@line 187 "shamodule.c"
        var $1294=$E; //@line 187 "shamodule.c"
        var $1295=$T; //@line 187 "shamodule.c"
        var $1296=($1295) & ($1294); //@line 187 "shamodule.c"
        var $1297=$E; //@line 187 "shamodule.c"
        var $1298=$T; //@line 187 "shamodule.c"
        var $1299=($1298) | ($1297); //@line 187 "shamodule.c"
        var $1300=$A; //@line 187 "shamodule.c"
        var $1301=($1299) & ($1300); //@line 187 "shamodule.c"
        var $1302=($1301) | ($1296); //@line 187 "shamodule.c"
        var $1303=$B; //@line 187 "shamodule.c"
        var $1304=$WP; //@line 187 "shamodule.c"
        var $1305=HEAP[$1304]; //@line 187 "shamodule.c"
        var $1306=($1293) + -1894007588; //@line 187 "shamodule.c"
        var $1307=($1306) + ($1303); //@line 187 "shamodule.c"
        var $1308=($1307) + ($1302); //@line 187 "shamodule.c"
        var $1309=($1308) + ($1305); //@line 187 "shamodule.c"
        $C=$1309; //@line 187 "shamodule.c"
        var $1310=$WP; //@line 187 "shamodule.c"
        var $1311=$1310+4; //@line 187 "shamodule.c"
        $WP=$1311; //@line 187 "shamodule.c"
        var $1312=$E; //@line 187 "shamodule.c"
        var $1313=($1312) >>> 2; //@line 187 "shamodule.c"
        var $1314=($1312) << 30; //@line 187 "shamodule.c"
        var $1315=($1313) | ($1314); //@line 187 "shamodule.c"
        $E=$1315; //@line 187 "shamodule.c"
        var $1316=$C; //@line 187 "shamodule.c"
        var $1317=($1316) >>> 27; //@line 187 "shamodule.c"
        var $1318=($1316) << 5; //@line 187 "shamodule.c"
        var $1319=($1317) | ($1318); //@line 187 "shamodule.c"
        var $1320=$D; //@line 187 "shamodule.c"
        var $1321=$E; //@line 187 "shamodule.c"
        var $1322=($1321) & ($1320); //@line 187 "shamodule.c"
        var $1323=$D; //@line 187 "shamodule.c"
        var $1324=$E; //@line 187 "shamodule.c"
        var $1325=($1324) | ($1323); //@line 187 "shamodule.c"
        var $1326=$T; //@line 187 "shamodule.c"
        var $1327=($1325) & ($1326); //@line 187 "shamodule.c"
        var $1328=($1327) | ($1322); //@line 187 "shamodule.c"
        var $1329=$A; //@line 187 "shamodule.c"
        var $1330=$WP; //@line 187 "shamodule.c"
        var $1331=HEAP[$1330]; //@line 187 "shamodule.c"
        var $1332=($1319) + -1894007588; //@line 187 "shamodule.c"
        var $1333=($1332) + ($1329); //@line 187 "shamodule.c"
        var $1334=($1333) + ($1328); //@line 187 "shamodule.c"
        var $1335=($1334) + ($1331); //@line 187 "shamodule.c"
        $B=$1335; //@line 187 "shamodule.c"
        var $1336=$WP; //@line 187 "shamodule.c"
        var $1337=$1336+4; //@line 187 "shamodule.c"
        $WP=$1337; //@line 187 "shamodule.c"
        var $1338=$D; //@line 187 "shamodule.c"
        var $1339=($1338) >>> 2; //@line 187 "shamodule.c"
        var $1340=($1338) << 30; //@line 187 "shamodule.c"
        var $1341=($1339) | ($1340); //@line 187 "shamodule.c"
        $D=$1341; //@line 187 "shamodule.c"
        var $1342=$B; //@line 187 "shamodule.c"
        var $1343=($1342) >>> 27; //@line 187 "shamodule.c"
        var $1344=($1342) << 5; //@line 187 "shamodule.c"
        var $1345=($1343) | ($1344); //@line 187 "shamodule.c"
        var $1346=$C; //@line 187 "shamodule.c"
        var $1347=$D; //@line 187 "shamodule.c"
        var $1348=($1347) & ($1346); //@line 187 "shamodule.c"
        var $1349=$C; //@line 187 "shamodule.c"
        var $1350=$D; //@line 187 "shamodule.c"
        var $1351=($1350) | ($1349); //@line 187 "shamodule.c"
        var $1352=$E; //@line 187 "shamodule.c"
        var $1353=($1351) & ($1352); //@line 187 "shamodule.c"
        var $1354=($1353) | ($1348); //@line 187 "shamodule.c"
        var $1355=$T; //@line 187 "shamodule.c"
        var $1356=$WP; //@line 187 "shamodule.c"
        var $1357=HEAP[$1356]; //@line 187 "shamodule.c"
        var $1358=($1345) + -1894007588; //@line 187 "shamodule.c"
        var $1359=($1358) + ($1355); //@line 187 "shamodule.c"
        var $1360=($1359) + ($1354); //@line 187 "shamodule.c"
        var $1361=($1360) + ($1357); //@line 187 "shamodule.c"
        $A=$1361; //@line 187 "shamodule.c"
        var $1362=$WP; //@line 187 "shamodule.c"
        var $1363=$1362+4; //@line 187 "shamodule.c"
        $WP=$1363; //@line 187 "shamodule.c"
        var $1364=$C; //@line 187 "shamodule.c"
        var $1365=($1364) >>> 2; //@line 187 "shamodule.c"
        var $1366=($1364) << 30; //@line 187 "shamodule.c"
        var $1367=($1365) | ($1366); //@line 187 "shamodule.c"
        $C=$1367; //@line 187 "shamodule.c"
        var $1368=$A; //@line 187 "shamodule.c"
        var $1369=($1368) >>> 27; //@line 187 "shamodule.c"
        var $1370=($1368) << 5; //@line 187 "shamodule.c"
        var $1371=($1369) | ($1370); //@line 187 "shamodule.c"
        var $1372=$B; //@line 187 "shamodule.c"
        var $1373=$C; //@line 187 "shamodule.c"
        var $1374=($1373) & ($1372); //@line 187 "shamodule.c"
        var $1375=$B; //@line 187 "shamodule.c"
        var $1376=$C; //@line 187 "shamodule.c"
        var $1377=($1376) | ($1375); //@line 187 "shamodule.c"
        var $1378=$D; //@line 187 "shamodule.c"
        var $1379=($1377) & ($1378); //@line 187 "shamodule.c"
        var $1380=($1379) | ($1374); //@line 187 "shamodule.c"
        var $1381=$E; //@line 187 "shamodule.c"
        var $1382=$WP; //@line 187 "shamodule.c"
        var $1383=HEAP[$1382]; //@line 187 "shamodule.c"
        var $1384=($1371) + -1894007588; //@line 187 "shamodule.c"
        var $1385=($1384) + ($1381); //@line 187 "shamodule.c"
        var $1386=($1385) + ($1380); //@line 187 "shamodule.c"
        var $1387=($1386) + ($1383); //@line 187 "shamodule.c"
        $T=$1387; //@line 187 "shamodule.c"
        var $1388=$WP; //@line 187 "shamodule.c"
        var $1389=$1388+4; //@line 187 "shamodule.c"
        $WP=$1389; //@line 187 "shamodule.c"
        var $1390=$B; //@line 187 "shamodule.c"
        var $1391=($1390) >>> 2; //@line 187 "shamodule.c"
        var $1392=($1390) << 30; //@line 187 "shamodule.c"
        var $1393=($1391) | ($1392); //@line 187 "shamodule.c"
        $B=$1393; //@line 187 "shamodule.c"
        var $1394=$T; //@line 187 "shamodule.c"
        var $1395=($1394) >>> 27; //@line 187 "shamodule.c"
        var $1396=($1394) << 5; //@line 187 "shamodule.c"
        var $1397=($1395) | ($1396); //@line 187 "shamodule.c"
        var $1398=$A; //@line 187 "shamodule.c"
        var $1399=$B; //@line 187 "shamodule.c"
        var $1400=($1399) & ($1398); //@line 187 "shamodule.c"
        var $1401=$A; //@line 187 "shamodule.c"
        var $1402=$B; //@line 187 "shamodule.c"
        var $1403=($1402) | ($1401); //@line 187 "shamodule.c"
        var $1404=$C; //@line 187 "shamodule.c"
        var $1405=($1403) & ($1404); //@line 187 "shamodule.c"
        var $1406=($1405) | ($1400); //@line 187 "shamodule.c"
        var $1407=$D; //@line 187 "shamodule.c"
        var $1408=$WP; //@line 187 "shamodule.c"
        var $1409=HEAP[$1408]; //@line 187 "shamodule.c"
        var $1410=($1397) + -1894007588; //@line 187 "shamodule.c"
        var $1411=($1410) + ($1407); //@line 187 "shamodule.c"
        var $1412=($1411) + ($1406); //@line 187 "shamodule.c"
        var $1413=($1412) + ($1409); //@line 187 "shamodule.c"
        $E=$1413; //@line 187 "shamodule.c"
        var $1414=$WP; //@line 187 "shamodule.c"
        var $1415=$1414+4; //@line 187 "shamodule.c"
        $WP=$1415; //@line 187 "shamodule.c"
        var $1416=$A; //@line 187 "shamodule.c"
        var $1417=($1416) >>> 2; //@line 187 "shamodule.c"
        var $1418=($1416) << 30; //@line 187 "shamodule.c"
        var $1419=($1417) | ($1418); //@line 187 "shamodule.c"
        $A=$1419; //@line 187 "shamodule.c"
        var $1420=$E; //@line 187 "shamodule.c"
        var $1421=($1420) >>> 27; //@line 187 "shamodule.c"
        var $1422=($1420) << 5; //@line 187 "shamodule.c"
        var $1423=($1421) | ($1422); //@line 187 "shamodule.c"
        var $1424=$T; //@line 187 "shamodule.c"
        var $1425=$A; //@line 187 "shamodule.c"
        var $1426=($1425) & ($1424); //@line 187 "shamodule.c"
        var $1427=$T; //@line 187 "shamodule.c"
        var $1428=$A; //@line 187 "shamodule.c"
        var $1429=($1428) | ($1427); //@line 187 "shamodule.c"
        var $1430=$B; //@line 187 "shamodule.c"
        var $1431=($1429) & ($1430); //@line 187 "shamodule.c"
        var $1432=($1431) | ($1426); //@line 187 "shamodule.c"
        var $1433=$C; //@line 187 "shamodule.c"
        var $1434=$WP; //@line 187 "shamodule.c"
        var $1435=HEAP[$1434]; //@line 187 "shamodule.c"
        var $1436=($1423) + -1894007588; //@line 187 "shamodule.c"
        var $1437=($1436) + ($1433); //@line 187 "shamodule.c"
        var $1438=($1437) + ($1432); //@line 187 "shamodule.c"
        var $1439=($1438) + ($1435); //@line 187 "shamodule.c"
        $D=$1439; //@line 187 "shamodule.c"
        var $1440=$WP; //@line 187 "shamodule.c"
        var $1441=$1440+4; //@line 187 "shamodule.c"
        $WP=$1441; //@line 187 "shamodule.c"
        var $1442=$T; //@line 187 "shamodule.c"
        var $1443=($1442) >>> 2; //@line 187 "shamodule.c"
        var $1444=($1442) << 30; //@line 187 "shamodule.c"
        var $1445=($1443) | ($1444); //@line 187 "shamodule.c"
        $T=$1445; //@line 187 "shamodule.c"
        var $1446=$D; //@line 187 "shamodule.c"
        var $1447=($1446) >>> 27; //@line 187 "shamodule.c"
        var $1448=($1446) << 5; //@line 187 "shamodule.c"
        var $1449=($1447) | ($1448); //@line 187 "shamodule.c"
        var $1450=$E; //@line 187 "shamodule.c"
        var $1451=$T; //@line 187 "shamodule.c"
        var $1452=($1451) & ($1450); //@line 187 "shamodule.c"
        var $1453=$E; //@line 187 "shamodule.c"
        var $1454=$T; //@line 187 "shamodule.c"
        var $1455=($1454) | ($1453); //@line 187 "shamodule.c"
        var $1456=$A; //@line 187 "shamodule.c"
        var $1457=($1455) & ($1456); //@line 187 "shamodule.c"
        var $1458=($1457) | ($1452); //@line 187 "shamodule.c"
        var $1459=$B; //@line 187 "shamodule.c"
        var $1460=$WP; //@line 187 "shamodule.c"
        var $1461=HEAP[$1460]; //@line 187 "shamodule.c"
        var $1462=($1449) + -1894007588; //@line 187 "shamodule.c"
        var $1463=($1462) + ($1459); //@line 187 "shamodule.c"
        var $1464=($1463) + ($1458); //@line 187 "shamodule.c"
        var $1465=($1464) + ($1461); //@line 187 "shamodule.c"
        $C=$1465; //@line 187 "shamodule.c"
        var $1466=$WP; //@line 187 "shamodule.c"
        var $1467=$1466+4; //@line 187 "shamodule.c"
        $WP=$1467; //@line 187 "shamodule.c"
        var $1468=$E; //@line 187 "shamodule.c"
        var $1469=($1468) >>> 2; //@line 187 "shamodule.c"
        var $1470=($1468) << 30; //@line 187 "shamodule.c"
        var $1471=($1469) | ($1470); //@line 187 "shamodule.c"
        $E=$1471; //@line 187 "shamodule.c"
        var $1472=$C; //@line 187 "shamodule.c"
        var $1473=($1472) >>> 27; //@line 187 "shamodule.c"
        var $1474=($1472) << 5; //@line 187 "shamodule.c"
        var $1475=($1473) | ($1474); //@line 187 "shamodule.c"
        var $1476=$D; //@line 187 "shamodule.c"
        var $1477=$E; //@line 187 "shamodule.c"
        var $1478=($1477) & ($1476); //@line 187 "shamodule.c"
        var $1479=$D; //@line 187 "shamodule.c"
        var $1480=$E; //@line 187 "shamodule.c"
        var $1481=($1480) | ($1479); //@line 187 "shamodule.c"
        var $1482=$T; //@line 187 "shamodule.c"
        var $1483=($1481) & ($1482); //@line 187 "shamodule.c"
        var $1484=($1483) | ($1478); //@line 187 "shamodule.c"
        var $1485=$A; //@line 187 "shamodule.c"
        var $1486=$WP; //@line 187 "shamodule.c"
        var $1487=HEAP[$1486]; //@line 187 "shamodule.c"
        var $1488=($1475) + -1894007588; //@line 187 "shamodule.c"
        var $1489=($1488) + ($1485); //@line 187 "shamodule.c"
        var $1490=($1489) + ($1484); //@line 187 "shamodule.c"
        var $1491=($1490) + ($1487); //@line 187 "shamodule.c"
        $B=$1491; //@line 187 "shamodule.c"
        var $1492=$WP; //@line 187 "shamodule.c"
        var $1493=$1492+4; //@line 187 "shamodule.c"
        $WP=$1493; //@line 187 "shamodule.c"
        var $1494=$D; //@line 187 "shamodule.c"
        var $1495=($1494) >>> 2; //@line 187 "shamodule.c"
        var $1496=($1494) << 30; //@line 187 "shamodule.c"
        var $1497=($1495) | ($1496); //@line 187 "shamodule.c"
        $D=$1497; //@line 187 "shamodule.c"
        var $1498=$B; //@line 187 "shamodule.c"
        var $1499=($1498) >>> 27; //@line 187 "shamodule.c"
        var $1500=($1498) << 5; //@line 187 "shamodule.c"
        var $1501=($1499) | ($1500); //@line 187 "shamodule.c"
        var $1502=$C; //@line 187 "shamodule.c"
        var $1503=$D; //@line 187 "shamodule.c"
        var $1504=($1503) & ($1502); //@line 187 "shamodule.c"
        var $1505=$C; //@line 187 "shamodule.c"
        var $1506=$D; //@line 187 "shamodule.c"
        var $1507=($1506) | ($1505); //@line 187 "shamodule.c"
        var $1508=$E; //@line 187 "shamodule.c"
        var $1509=($1507) & ($1508); //@line 187 "shamodule.c"
        var $1510=($1509) | ($1504); //@line 187 "shamodule.c"
        var $1511=$T; //@line 187 "shamodule.c"
        var $1512=$WP; //@line 187 "shamodule.c"
        var $1513=HEAP[$1512]; //@line 187 "shamodule.c"
        var $1514=($1501) + -1894007588; //@line 187 "shamodule.c"
        var $1515=($1514) + ($1511); //@line 187 "shamodule.c"
        var $1516=($1515) + ($1510); //@line 187 "shamodule.c"
        var $1517=($1516) + ($1513); //@line 187 "shamodule.c"
        $A=$1517; //@line 187 "shamodule.c"
        var $1518=$WP; //@line 187 "shamodule.c"
        var $1519=$1518+4; //@line 187 "shamodule.c"
        $WP=$1519; //@line 187 "shamodule.c"
        var $1520=$C; //@line 187 "shamodule.c"
        var $1521=($1520) >>> 2; //@line 187 "shamodule.c"
        var $1522=($1520) << 30; //@line 187 "shamodule.c"
        var $1523=($1521) | ($1522); //@line 187 "shamodule.c"
        $C=$1523; //@line 187 "shamodule.c"
        var $1524=$A; //@line 188 "shamodule.c"
        var $1525=($1524) >>> 27; //@line 188 "shamodule.c"
        var $1526=($1524) << 5; //@line 188 "shamodule.c"
        var $1527=($1525) | ($1526); //@line 188 "shamodule.c"
        var $1528=$B; //@line 188 "shamodule.c"
        var $1529=$C; //@line 188 "shamodule.c"
        var $1530=$D; //@line 188 "shamodule.c"
        var $1531=($1529) ^ ($1528); //@line 188 "shamodule.c"
        var $1532=($1531) ^ ($1530); //@line 188 "shamodule.c"
        var $1533=$E; //@line 188 "shamodule.c"
        var $1534=$WP; //@line 188 "shamodule.c"
        var $1535=HEAP[$1534]; //@line 188 "shamodule.c"
        var $1536=($1527) + -899497514; //@line 188 "shamodule.c"
        var $1537=($1536) + ($1533); //@line 188 "shamodule.c"
        var $1538=($1537) + ($1532); //@line 188 "shamodule.c"
        var $1539=($1538) + ($1535); //@line 188 "shamodule.c"
        $T=$1539; //@line 188 "shamodule.c"
        var $1540=$WP; //@line 188 "shamodule.c"
        var $1541=$1540+4; //@line 188 "shamodule.c"
        $WP=$1541; //@line 188 "shamodule.c"
        var $1542=$B; //@line 188 "shamodule.c"
        var $1543=($1542) >>> 2; //@line 188 "shamodule.c"
        var $1544=($1542) << 30; //@line 188 "shamodule.c"
        var $1545=($1543) | ($1544); //@line 188 "shamodule.c"
        $B=$1545; //@line 188 "shamodule.c"
        var $1546=$T; //@line 188 "shamodule.c"
        var $1547=($1546) >>> 27; //@line 188 "shamodule.c"
        var $1548=($1546) << 5; //@line 188 "shamodule.c"
        var $1549=($1547) | ($1548); //@line 188 "shamodule.c"
        var $1550=$A; //@line 188 "shamodule.c"
        var $1551=$B; //@line 188 "shamodule.c"
        var $1552=$C; //@line 188 "shamodule.c"
        var $1553=($1551) ^ ($1550); //@line 188 "shamodule.c"
        var $1554=($1553) ^ ($1552); //@line 188 "shamodule.c"
        var $1555=$D; //@line 188 "shamodule.c"
        var $1556=$WP; //@line 188 "shamodule.c"
        var $1557=HEAP[$1556]; //@line 188 "shamodule.c"
        var $1558=($1549) + -899497514; //@line 188 "shamodule.c"
        var $1559=($1558) + ($1555); //@line 188 "shamodule.c"
        var $1560=($1559) + ($1554); //@line 188 "shamodule.c"
        var $1561=($1560) + ($1557); //@line 188 "shamodule.c"
        $E=$1561; //@line 188 "shamodule.c"
        var $1562=$WP; //@line 188 "shamodule.c"
        var $1563=$1562+4; //@line 188 "shamodule.c"
        $WP=$1563; //@line 188 "shamodule.c"
        var $1564=$A; //@line 188 "shamodule.c"
        var $1565=($1564) >>> 2; //@line 188 "shamodule.c"
        var $1566=($1564) << 30; //@line 188 "shamodule.c"
        var $1567=($1565) | ($1566); //@line 188 "shamodule.c"
        $A=$1567; //@line 188 "shamodule.c"
        var $1568=$E; //@line 188 "shamodule.c"
        var $1569=($1568) >>> 27; //@line 188 "shamodule.c"
        var $1570=($1568) << 5; //@line 188 "shamodule.c"
        var $1571=($1569) | ($1570); //@line 188 "shamodule.c"
        var $1572=$T; //@line 188 "shamodule.c"
        var $1573=$A; //@line 188 "shamodule.c"
        var $1574=$B; //@line 188 "shamodule.c"
        var $1575=($1573) ^ ($1572); //@line 188 "shamodule.c"
        var $1576=($1575) ^ ($1574); //@line 188 "shamodule.c"
        var $1577=$C; //@line 188 "shamodule.c"
        var $1578=$WP; //@line 188 "shamodule.c"
        var $1579=HEAP[$1578]; //@line 188 "shamodule.c"
        var $1580=($1571) + -899497514; //@line 188 "shamodule.c"
        var $1581=($1580) + ($1577); //@line 188 "shamodule.c"
        var $1582=($1581) + ($1576); //@line 188 "shamodule.c"
        var $1583=($1582) + ($1579); //@line 188 "shamodule.c"
        $D=$1583; //@line 188 "shamodule.c"
        var $1584=$WP; //@line 188 "shamodule.c"
        var $1585=$1584+4; //@line 188 "shamodule.c"
        $WP=$1585; //@line 188 "shamodule.c"
        var $1586=$T; //@line 188 "shamodule.c"
        var $1587=($1586) >>> 2; //@line 188 "shamodule.c"
        var $1588=($1586) << 30; //@line 188 "shamodule.c"
        var $1589=($1587) | ($1588); //@line 188 "shamodule.c"
        $T=$1589; //@line 188 "shamodule.c"
        var $1590=$D; //@line 188 "shamodule.c"
        var $1591=($1590) >>> 27; //@line 188 "shamodule.c"
        var $1592=($1590) << 5; //@line 188 "shamodule.c"
        var $1593=($1591) | ($1592); //@line 188 "shamodule.c"
        var $1594=$E; //@line 188 "shamodule.c"
        var $1595=$T; //@line 188 "shamodule.c"
        var $1596=$A; //@line 188 "shamodule.c"
        var $1597=($1595) ^ ($1594); //@line 188 "shamodule.c"
        var $1598=($1597) ^ ($1596); //@line 188 "shamodule.c"
        var $1599=$B; //@line 188 "shamodule.c"
        var $1600=$WP; //@line 188 "shamodule.c"
        var $1601=HEAP[$1600]; //@line 188 "shamodule.c"
        var $1602=($1593) + -899497514; //@line 188 "shamodule.c"
        var $1603=($1602) + ($1599); //@line 188 "shamodule.c"
        var $1604=($1603) + ($1598); //@line 188 "shamodule.c"
        var $1605=($1604) + ($1601); //@line 188 "shamodule.c"
        $C=$1605; //@line 188 "shamodule.c"
        var $1606=$WP; //@line 188 "shamodule.c"
        var $1607=$1606+4; //@line 188 "shamodule.c"
        $WP=$1607; //@line 188 "shamodule.c"
        var $1608=$E; //@line 188 "shamodule.c"
        var $1609=($1608) >>> 2; //@line 188 "shamodule.c"
        var $1610=($1608) << 30; //@line 188 "shamodule.c"
        var $1611=($1609) | ($1610); //@line 188 "shamodule.c"
        $E=$1611; //@line 188 "shamodule.c"
        var $1612=$C; //@line 188 "shamodule.c"
        var $1613=($1612) >>> 27; //@line 188 "shamodule.c"
        var $1614=($1612) << 5; //@line 188 "shamodule.c"
        var $1615=($1613) | ($1614); //@line 188 "shamodule.c"
        var $1616=$D; //@line 188 "shamodule.c"
        var $1617=$E; //@line 188 "shamodule.c"
        var $1618=$T; //@line 188 "shamodule.c"
        var $1619=($1617) ^ ($1616); //@line 188 "shamodule.c"
        var $1620=($1619) ^ ($1618); //@line 188 "shamodule.c"
        var $1621=$A; //@line 188 "shamodule.c"
        var $1622=$WP; //@line 188 "shamodule.c"
        var $1623=HEAP[$1622]; //@line 188 "shamodule.c"
        var $1624=($1615) + -899497514; //@line 188 "shamodule.c"
        var $1625=($1624) + ($1621); //@line 188 "shamodule.c"
        var $1626=($1625) + ($1620); //@line 188 "shamodule.c"
        var $1627=($1626) + ($1623); //@line 188 "shamodule.c"
        $B=$1627; //@line 188 "shamodule.c"
        var $1628=$WP; //@line 188 "shamodule.c"
        var $1629=$1628+4; //@line 188 "shamodule.c"
        $WP=$1629; //@line 188 "shamodule.c"
        var $1630=$D; //@line 188 "shamodule.c"
        var $1631=($1630) >>> 2; //@line 188 "shamodule.c"
        var $1632=($1630) << 30; //@line 188 "shamodule.c"
        var $1633=($1631) | ($1632); //@line 188 "shamodule.c"
        $D=$1633; //@line 188 "shamodule.c"
        var $1634=$B; //@line 188 "shamodule.c"
        var $1635=($1634) >>> 27; //@line 188 "shamodule.c"
        var $1636=($1634) << 5; //@line 188 "shamodule.c"
        var $1637=($1635) | ($1636); //@line 188 "shamodule.c"
        var $1638=$C; //@line 188 "shamodule.c"
        var $1639=$D; //@line 188 "shamodule.c"
        var $1640=$E; //@line 188 "shamodule.c"
        var $1641=($1639) ^ ($1638); //@line 188 "shamodule.c"
        var $1642=($1641) ^ ($1640); //@line 188 "shamodule.c"
        var $1643=$T; //@line 188 "shamodule.c"
        var $1644=$WP; //@line 188 "shamodule.c"
        var $1645=HEAP[$1644]; //@line 188 "shamodule.c"
        var $1646=($1637) + -899497514; //@line 188 "shamodule.c"
        var $1647=($1646) + ($1643); //@line 188 "shamodule.c"
        var $1648=($1647) + ($1642); //@line 188 "shamodule.c"
        var $1649=($1648) + ($1645); //@line 188 "shamodule.c"
        $A=$1649; //@line 188 "shamodule.c"
        var $1650=$WP; //@line 188 "shamodule.c"
        var $1651=$1650+4; //@line 188 "shamodule.c"
        $WP=$1651; //@line 188 "shamodule.c"
        var $1652=$C; //@line 188 "shamodule.c"
        var $1653=($1652) >>> 2; //@line 188 "shamodule.c"
        var $1654=($1652) << 30; //@line 188 "shamodule.c"
        var $1655=($1653) | ($1654); //@line 188 "shamodule.c"
        $C=$1655; //@line 188 "shamodule.c"
        var $1656=$A; //@line 188 "shamodule.c"
        var $1657=($1656) >>> 27; //@line 188 "shamodule.c"
        var $1658=($1656) << 5; //@line 188 "shamodule.c"
        var $1659=($1657) | ($1658); //@line 188 "shamodule.c"
        var $1660=$B; //@line 188 "shamodule.c"
        var $1661=$C; //@line 188 "shamodule.c"
        var $1662=$D; //@line 188 "shamodule.c"
        var $1663=($1661) ^ ($1660); //@line 188 "shamodule.c"
        var $1664=($1663) ^ ($1662); //@line 188 "shamodule.c"
        var $1665=$E; //@line 188 "shamodule.c"
        var $1666=$WP; //@line 188 "shamodule.c"
        var $1667=HEAP[$1666]; //@line 188 "shamodule.c"
        var $1668=($1659) + -899497514; //@line 188 "shamodule.c"
        var $1669=($1668) + ($1665); //@line 188 "shamodule.c"
        var $1670=($1669) + ($1664); //@line 188 "shamodule.c"
        var $1671=($1670) + ($1667); //@line 188 "shamodule.c"
        $T=$1671; //@line 188 "shamodule.c"
        var $1672=$WP; //@line 188 "shamodule.c"
        var $1673=$1672+4; //@line 188 "shamodule.c"
        $WP=$1673; //@line 188 "shamodule.c"
        var $1674=$B; //@line 188 "shamodule.c"
        var $1675=($1674) >>> 2; //@line 188 "shamodule.c"
        var $1676=($1674) << 30; //@line 188 "shamodule.c"
        var $1677=($1675) | ($1676); //@line 188 "shamodule.c"
        $B=$1677; //@line 188 "shamodule.c"
        var $1678=$T; //@line 188 "shamodule.c"
        var $1679=($1678) >>> 27; //@line 188 "shamodule.c"
        var $1680=($1678) << 5; //@line 188 "shamodule.c"
        var $1681=($1679) | ($1680); //@line 188 "shamodule.c"
        var $1682=$A; //@line 188 "shamodule.c"
        var $1683=$B; //@line 188 "shamodule.c"
        var $1684=$C; //@line 188 "shamodule.c"
        var $1685=($1683) ^ ($1682); //@line 188 "shamodule.c"
        var $1686=($1685) ^ ($1684); //@line 188 "shamodule.c"
        var $1687=$D; //@line 188 "shamodule.c"
        var $1688=$WP; //@line 188 "shamodule.c"
        var $1689=HEAP[$1688]; //@line 188 "shamodule.c"
        var $1690=($1681) + -899497514; //@line 188 "shamodule.c"
        var $1691=($1690) + ($1687); //@line 188 "shamodule.c"
        var $1692=($1691) + ($1686); //@line 188 "shamodule.c"
        var $1693=($1692) + ($1689); //@line 188 "shamodule.c"
        $E=$1693; //@line 188 "shamodule.c"
        var $1694=$WP; //@line 188 "shamodule.c"
        var $1695=$1694+4; //@line 188 "shamodule.c"
        $WP=$1695; //@line 188 "shamodule.c"
        var $1696=$A; //@line 188 "shamodule.c"
        var $1697=($1696) >>> 2; //@line 188 "shamodule.c"
        var $1698=($1696) << 30; //@line 188 "shamodule.c"
        var $1699=($1697) | ($1698); //@line 188 "shamodule.c"
        $A=$1699; //@line 188 "shamodule.c"
        var $1700=$E; //@line 188 "shamodule.c"
        var $1701=($1700) >>> 27; //@line 188 "shamodule.c"
        var $1702=($1700) << 5; //@line 188 "shamodule.c"
        var $1703=($1701) | ($1702); //@line 188 "shamodule.c"
        var $1704=$T; //@line 188 "shamodule.c"
        var $1705=$A; //@line 188 "shamodule.c"
        var $1706=$B; //@line 188 "shamodule.c"
        var $1707=($1705) ^ ($1704); //@line 188 "shamodule.c"
        var $1708=($1707) ^ ($1706); //@line 188 "shamodule.c"
        var $1709=$C; //@line 188 "shamodule.c"
        var $1710=$WP; //@line 188 "shamodule.c"
        var $1711=HEAP[$1710]; //@line 188 "shamodule.c"
        var $1712=($1703) + -899497514; //@line 188 "shamodule.c"
        var $1713=($1712) + ($1709); //@line 188 "shamodule.c"
        var $1714=($1713) + ($1708); //@line 188 "shamodule.c"
        var $1715=($1714) + ($1711); //@line 188 "shamodule.c"
        $D=$1715; //@line 188 "shamodule.c"
        var $1716=$WP; //@line 188 "shamodule.c"
        var $1717=$1716+4; //@line 188 "shamodule.c"
        $WP=$1717; //@line 188 "shamodule.c"
        var $1718=$T; //@line 188 "shamodule.c"
        var $1719=($1718) >>> 2; //@line 188 "shamodule.c"
        var $1720=($1718) << 30; //@line 188 "shamodule.c"
        var $1721=($1719) | ($1720); //@line 188 "shamodule.c"
        $T=$1721; //@line 188 "shamodule.c"
        var $1722=$D; //@line 188 "shamodule.c"
        var $1723=($1722) >>> 27; //@line 188 "shamodule.c"
        var $1724=($1722) << 5; //@line 188 "shamodule.c"
        var $1725=($1723) | ($1724); //@line 188 "shamodule.c"
        var $1726=$E; //@line 188 "shamodule.c"
        var $1727=$T; //@line 188 "shamodule.c"
        var $1728=$A; //@line 188 "shamodule.c"
        var $1729=($1727) ^ ($1726); //@line 188 "shamodule.c"
        var $1730=($1729) ^ ($1728); //@line 188 "shamodule.c"
        var $1731=$B; //@line 188 "shamodule.c"
        var $1732=$WP; //@line 188 "shamodule.c"
        var $1733=HEAP[$1732]; //@line 188 "shamodule.c"
        var $1734=($1725) + -899497514; //@line 188 "shamodule.c"
        var $1735=($1734) + ($1731); //@line 188 "shamodule.c"
        var $1736=($1735) + ($1730); //@line 188 "shamodule.c"
        var $1737=($1736) + ($1733); //@line 188 "shamodule.c"
        $C=$1737; //@line 188 "shamodule.c"
        var $1738=$WP; //@line 188 "shamodule.c"
        var $1739=$1738+4; //@line 188 "shamodule.c"
        $WP=$1739; //@line 188 "shamodule.c"
        var $1740=$E; //@line 188 "shamodule.c"
        var $1741=($1740) >>> 2; //@line 188 "shamodule.c"
        var $1742=($1740) << 30; //@line 188 "shamodule.c"
        var $1743=($1741) | ($1742); //@line 188 "shamodule.c"
        $E=$1743; //@line 188 "shamodule.c"
        var $1744=$C; //@line 189 "shamodule.c"
        var $1745=($1744) >>> 27; //@line 189 "shamodule.c"
        var $1746=($1744) << 5; //@line 189 "shamodule.c"
        var $1747=($1745) | ($1746); //@line 189 "shamodule.c"
        var $1748=$D; //@line 189 "shamodule.c"
        var $1749=$E; //@line 189 "shamodule.c"
        var $1750=$T; //@line 189 "shamodule.c"
        var $1751=($1749) ^ ($1748); //@line 189 "shamodule.c"
        var $1752=($1751) ^ ($1750); //@line 189 "shamodule.c"
        var $1753=$A; //@line 189 "shamodule.c"
        var $1754=$WP; //@line 189 "shamodule.c"
        var $1755=HEAP[$1754]; //@line 189 "shamodule.c"
        var $1756=($1747) + -899497514; //@line 189 "shamodule.c"
        var $1757=($1756) + ($1753); //@line 189 "shamodule.c"
        var $1758=($1757) + ($1752); //@line 189 "shamodule.c"
        var $1759=($1758) + ($1755); //@line 189 "shamodule.c"
        $B=$1759; //@line 189 "shamodule.c"
        var $1760=$WP; //@line 189 "shamodule.c"
        var $1761=$1760+4; //@line 189 "shamodule.c"
        $WP=$1761; //@line 189 "shamodule.c"
        var $1762=$D; //@line 189 "shamodule.c"
        var $1763=($1762) >>> 2; //@line 189 "shamodule.c"
        var $1764=($1762) << 30; //@line 189 "shamodule.c"
        var $1765=($1763) | ($1764); //@line 189 "shamodule.c"
        $D=$1765; //@line 189 "shamodule.c"
        var $1766=$B; //@line 189 "shamodule.c"
        var $1767=($1766) >>> 27; //@line 189 "shamodule.c"
        var $1768=($1766) << 5; //@line 189 "shamodule.c"
        var $1769=($1767) | ($1768); //@line 189 "shamodule.c"
        var $1770=$C; //@line 189 "shamodule.c"
        var $1771=$D; //@line 189 "shamodule.c"
        var $1772=$E; //@line 189 "shamodule.c"
        var $1773=($1771) ^ ($1770); //@line 189 "shamodule.c"
        var $1774=($1773) ^ ($1772); //@line 189 "shamodule.c"
        var $1775=$T; //@line 189 "shamodule.c"
        var $1776=$WP; //@line 189 "shamodule.c"
        var $1777=HEAP[$1776]; //@line 189 "shamodule.c"
        var $1778=($1769) + -899497514; //@line 189 "shamodule.c"
        var $1779=($1778) + ($1775); //@line 189 "shamodule.c"
        var $1780=($1779) + ($1774); //@line 189 "shamodule.c"
        var $1781=($1780) + ($1777); //@line 189 "shamodule.c"
        $A=$1781; //@line 189 "shamodule.c"
        var $1782=$WP; //@line 189 "shamodule.c"
        var $1783=$1782+4; //@line 189 "shamodule.c"
        $WP=$1783; //@line 189 "shamodule.c"
        var $1784=$C; //@line 189 "shamodule.c"
        var $1785=($1784) >>> 2; //@line 189 "shamodule.c"
        var $1786=($1784) << 30; //@line 189 "shamodule.c"
        var $1787=($1785) | ($1786); //@line 189 "shamodule.c"
        $C=$1787; //@line 189 "shamodule.c"
        var $1788=$A; //@line 189 "shamodule.c"
        var $1789=($1788) >>> 27; //@line 189 "shamodule.c"
        var $1790=($1788) << 5; //@line 189 "shamodule.c"
        var $1791=($1789) | ($1790); //@line 189 "shamodule.c"
        var $1792=$B; //@line 189 "shamodule.c"
        var $1793=$C; //@line 189 "shamodule.c"
        var $1794=$D; //@line 189 "shamodule.c"
        var $1795=($1793) ^ ($1792); //@line 189 "shamodule.c"
        var $1796=($1795) ^ ($1794); //@line 189 "shamodule.c"
        var $1797=$E; //@line 189 "shamodule.c"
        var $1798=$WP; //@line 189 "shamodule.c"
        var $1799=HEAP[$1798]; //@line 189 "shamodule.c"
        var $1800=($1791) + -899497514; //@line 189 "shamodule.c"
        var $1801=($1800) + ($1797); //@line 189 "shamodule.c"
        var $1802=($1801) + ($1796); //@line 189 "shamodule.c"
        var $1803=($1802) + ($1799); //@line 189 "shamodule.c"
        $T=$1803; //@line 189 "shamodule.c"
        var $1804=$WP; //@line 189 "shamodule.c"
        var $1805=$1804+4; //@line 189 "shamodule.c"
        $WP=$1805; //@line 189 "shamodule.c"
        var $1806=$B; //@line 189 "shamodule.c"
        var $1807=($1806) >>> 2; //@line 189 "shamodule.c"
        var $1808=($1806) << 30; //@line 189 "shamodule.c"
        var $1809=($1807) | ($1808); //@line 189 "shamodule.c"
        $B=$1809; //@line 189 "shamodule.c"
        var $1810=$T; //@line 189 "shamodule.c"
        var $1811=($1810) >>> 27; //@line 189 "shamodule.c"
        var $1812=($1810) << 5; //@line 189 "shamodule.c"
        var $1813=($1811) | ($1812); //@line 189 "shamodule.c"
        var $1814=$A; //@line 189 "shamodule.c"
        var $1815=$B; //@line 189 "shamodule.c"
        var $1816=$C; //@line 189 "shamodule.c"
        var $1817=($1815) ^ ($1814); //@line 189 "shamodule.c"
        var $1818=($1817) ^ ($1816); //@line 189 "shamodule.c"
        var $1819=$D; //@line 189 "shamodule.c"
        var $1820=$WP; //@line 189 "shamodule.c"
        var $1821=HEAP[$1820]; //@line 189 "shamodule.c"
        var $1822=($1813) + -899497514; //@line 189 "shamodule.c"
        var $1823=($1822) + ($1819); //@line 189 "shamodule.c"
        var $1824=($1823) + ($1818); //@line 189 "shamodule.c"
        var $1825=($1824) + ($1821); //@line 189 "shamodule.c"
        $E=$1825; //@line 189 "shamodule.c"
        var $1826=$WP; //@line 189 "shamodule.c"
        var $1827=$1826+4; //@line 189 "shamodule.c"
        $WP=$1827; //@line 189 "shamodule.c"
        var $1828=$A; //@line 189 "shamodule.c"
        var $1829=($1828) >>> 2; //@line 189 "shamodule.c"
        var $1830=($1828) << 30; //@line 189 "shamodule.c"
        var $1831=($1829) | ($1830); //@line 189 "shamodule.c"
        $A=$1831; //@line 189 "shamodule.c"
        var $1832=$E; //@line 189 "shamodule.c"
        var $1833=($1832) >>> 27; //@line 189 "shamodule.c"
        var $1834=($1832) << 5; //@line 189 "shamodule.c"
        var $1835=($1833) | ($1834); //@line 189 "shamodule.c"
        var $1836=$T; //@line 189 "shamodule.c"
        var $1837=$A; //@line 189 "shamodule.c"
        var $1838=$B; //@line 189 "shamodule.c"
        var $1839=($1837) ^ ($1836); //@line 189 "shamodule.c"
        var $1840=($1839) ^ ($1838); //@line 189 "shamodule.c"
        var $1841=$C; //@line 189 "shamodule.c"
        var $1842=$WP; //@line 189 "shamodule.c"
        var $1843=HEAP[$1842]; //@line 189 "shamodule.c"
        var $1844=($1835) + -899497514; //@line 189 "shamodule.c"
        var $1845=($1844) + ($1841); //@line 189 "shamodule.c"
        var $1846=($1845) + ($1840); //@line 189 "shamodule.c"
        var $1847=($1846) + ($1843); //@line 189 "shamodule.c"
        $D=$1847; //@line 189 "shamodule.c"
        var $1848=$WP; //@line 189 "shamodule.c"
        var $1849=$1848+4; //@line 189 "shamodule.c"
        $WP=$1849; //@line 189 "shamodule.c"
        var $1850=$T; //@line 189 "shamodule.c"
        var $1851=($1850) >>> 2; //@line 189 "shamodule.c"
        var $1852=($1850) << 30; //@line 189 "shamodule.c"
        var $1853=($1851) | ($1852); //@line 189 "shamodule.c"
        $T=$1853; //@line 189 "shamodule.c"
        var $1854=$D; //@line 189 "shamodule.c"
        var $1855=($1854) >>> 27; //@line 189 "shamodule.c"
        var $1856=($1854) << 5; //@line 189 "shamodule.c"
        var $1857=($1855) | ($1856); //@line 189 "shamodule.c"
        var $1858=$E; //@line 189 "shamodule.c"
        var $1859=$T; //@line 189 "shamodule.c"
        var $1860=$A; //@line 189 "shamodule.c"
        var $1861=($1859) ^ ($1858); //@line 189 "shamodule.c"
        var $1862=($1861) ^ ($1860); //@line 189 "shamodule.c"
        var $1863=$B; //@line 189 "shamodule.c"
        var $1864=$WP; //@line 189 "shamodule.c"
        var $1865=HEAP[$1864]; //@line 189 "shamodule.c"
        var $1866=($1857) + -899497514; //@line 189 "shamodule.c"
        var $1867=($1866) + ($1863); //@line 189 "shamodule.c"
        var $1868=($1867) + ($1862); //@line 189 "shamodule.c"
        var $1869=($1868) + ($1865); //@line 189 "shamodule.c"
        $C=$1869; //@line 189 "shamodule.c"
        var $1870=$WP; //@line 189 "shamodule.c"
        var $1871=$1870+4; //@line 189 "shamodule.c"
        $WP=$1871; //@line 189 "shamodule.c"
        var $1872=$E; //@line 189 "shamodule.c"
        var $1873=($1872) >>> 2; //@line 189 "shamodule.c"
        var $1874=($1872) << 30; //@line 189 "shamodule.c"
        var $1875=($1873) | ($1874); //@line 189 "shamodule.c"
        $E=$1875; //@line 189 "shamodule.c"
        var $1876=$C; //@line 189 "shamodule.c"
        var $1877=($1876) >>> 27; //@line 189 "shamodule.c"
        var $1878=($1876) << 5; //@line 189 "shamodule.c"
        var $1879=($1877) | ($1878); //@line 189 "shamodule.c"
        var $1880=$D; //@line 189 "shamodule.c"
        var $1881=$E; //@line 189 "shamodule.c"
        var $1882=$T; //@line 189 "shamodule.c"
        var $1883=($1881) ^ ($1880); //@line 189 "shamodule.c"
        var $1884=($1883) ^ ($1882); //@line 189 "shamodule.c"
        var $1885=$A; //@line 189 "shamodule.c"
        var $1886=$WP; //@line 189 "shamodule.c"
        var $1887=HEAP[$1886]; //@line 189 "shamodule.c"
        var $1888=($1879) + -899497514; //@line 189 "shamodule.c"
        var $1889=($1888) + ($1885); //@line 189 "shamodule.c"
        var $1890=($1889) + ($1884); //@line 189 "shamodule.c"
        var $1891=($1890) + ($1887); //@line 189 "shamodule.c"
        $B=$1891; //@line 189 "shamodule.c"
        var $1892=$WP; //@line 189 "shamodule.c"
        var $1893=$1892+4; //@line 189 "shamodule.c"
        $WP=$1893; //@line 189 "shamodule.c"
        var $1894=$D; //@line 189 "shamodule.c"
        var $1895=($1894) >>> 2; //@line 189 "shamodule.c"
        var $1896=($1894) << 30; //@line 189 "shamodule.c"
        var $1897=($1895) | ($1896); //@line 189 "shamodule.c"
        $D=$1897; //@line 189 "shamodule.c"
        var $1898=$B; //@line 189 "shamodule.c"
        var $1899=($1898) >>> 27; //@line 189 "shamodule.c"
        var $1900=($1898) << 5; //@line 189 "shamodule.c"
        var $1901=($1899) | ($1900); //@line 189 "shamodule.c"
        var $1902=$C; //@line 189 "shamodule.c"
        var $1903=$D; //@line 189 "shamodule.c"
        var $1904=$E; //@line 189 "shamodule.c"
        var $1905=($1903) ^ ($1902); //@line 189 "shamodule.c"
        var $1906=($1905) ^ ($1904); //@line 189 "shamodule.c"
        var $1907=$T; //@line 189 "shamodule.c"
        var $1908=$WP; //@line 189 "shamodule.c"
        var $1909=HEAP[$1908]; //@line 189 "shamodule.c"
        var $1910=($1901) + -899497514; //@line 189 "shamodule.c"
        var $1911=($1910) + ($1907); //@line 189 "shamodule.c"
        var $1912=($1911) + ($1906); //@line 189 "shamodule.c"
        var $1913=($1912) + ($1909); //@line 189 "shamodule.c"
        $A=$1913; //@line 189 "shamodule.c"
        var $1914=$WP; //@line 189 "shamodule.c"
        var $1915=$1914+4; //@line 189 "shamodule.c"
        $WP=$1915; //@line 189 "shamodule.c"
        var $1916=$C; //@line 189 "shamodule.c"
        var $1917=($1916) >>> 2; //@line 189 "shamodule.c"
        var $1918=($1916) << 30; //@line 189 "shamodule.c"
        var $1919=($1917) | ($1918); //@line 189 "shamodule.c"
        $C=$1919; //@line 189 "shamodule.c"
        var $1920=$A; //@line 189 "shamodule.c"
        var $1921=($1920) >>> 27; //@line 189 "shamodule.c"
        var $1922=($1920) << 5; //@line 189 "shamodule.c"
        var $1923=($1921) | ($1922); //@line 189 "shamodule.c"
        var $1924=$B; //@line 189 "shamodule.c"
        var $1925=$C; //@line 189 "shamodule.c"
        var $1926=$D; //@line 189 "shamodule.c"
        var $1927=($1925) ^ ($1924); //@line 189 "shamodule.c"
        var $1928=($1927) ^ ($1926); //@line 189 "shamodule.c"
        var $1929=$E; //@line 189 "shamodule.c"
        var $1930=$WP; //@line 189 "shamodule.c"
        var $1931=HEAP[$1930]; //@line 189 "shamodule.c"
        var $1932=($1923) + -899497514; //@line 189 "shamodule.c"
        var $1933=($1932) + ($1929); //@line 189 "shamodule.c"
        var $1934=($1933) + ($1928); //@line 189 "shamodule.c"
        var $1935=($1934) + ($1931); //@line 189 "shamodule.c"
        $T=$1935; //@line 189 "shamodule.c"
        var $1936=$WP; //@line 189 "shamodule.c"
        var $1937=$1936+4; //@line 189 "shamodule.c"
        $WP=$1937; //@line 189 "shamodule.c"
        var $1938=$B; //@line 189 "shamodule.c"
        var $1939=($1938) >>> 2; //@line 189 "shamodule.c"
        var $1940=($1938) << 30; //@line 189 "shamodule.c"
        var $1941=($1939) | ($1940); //@line 189 "shamodule.c"
        $B=$1941; //@line 189 "shamodule.c"
        var $1942=$T; //@line 189 "shamodule.c"
        var $1943=($1942) >>> 27; //@line 189 "shamodule.c"
        var $1944=($1942) << 5; //@line 189 "shamodule.c"
        var $1945=($1943) | ($1944); //@line 189 "shamodule.c"
        var $1946=$A; //@line 189 "shamodule.c"
        var $1947=$B; //@line 189 "shamodule.c"
        var $1948=$C; //@line 189 "shamodule.c"
        var $1949=($1947) ^ ($1946); //@line 189 "shamodule.c"
        var $1950=($1949) ^ ($1948); //@line 189 "shamodule.c"
        var $1951=$D; //@line 189 "shamodule.c"
        var $1952=$WP; //@line 189 "shamodule.c"
        var $1953=HEAP[$1952]; //@line 189 "shamodule.c"
        var $1954=($1945) + -899497514; //@line 189 "shamodule.c"
        var $1955=($1954) + ($1951); //@line 189 "shamodule.c"
        var $1956=($1955) + ($1950); //@line 189 "shamodule.c"
        var $1957=($1956) + ($1953); //@line 189 "shamodule.c"
        $E=$1957; //@line 189 "shamodule.c"
        var $1958=$WP; //@line 189 "shamodule.c"
        var $1959=$1958+4; //@line 189 "shamodule.c"
        $WP=$1959; //@line 189 "shamodule.c"
        var $1960=$A; //@line 189 "shamodule.c"
        var $1961=($1960) >>> 2; //@line 189 "shamodule.c"
        var $1962=($1960) << 30; //@line 189 "shamodule.c"
        var $1963=($1961) | ($1962); //@line 189 "shamodule.c"
        $A=$1963; //@line 189 "shamodule.c"
        var $1964=$sha_info_addr; //@line 190 "shamodule.c"
        var $1965=$1964+8; //@line 190 "shamodule.c"
        var $1966=$1965; //@line 190 "shamodule.c"
        var $1967=HEAP[$1966]; //@line 190 "shamodule.c"
        var $1968=$E; //@line 190 "shamodule.c"
        var $1969=($1968) + ($1967); //@line 190 "shamodule.c"
        var $1970=$sha_info_addr; //@line 190 "shamodule.c"
        var $1971=$1970+8; //@line 190 "shamodule.c"
        var $1972=$1971; //@line 190 "shamodule.c"
        HEAP[$1972]=$1969; //@line 190 "shamodule.c"
        var $1973=$sha_info_addr; //@line 191 "shamodule.c"
        var $1974=$1973+8; //@line 191 "shamodule.c"
        var $1975=$1974+4; //@line 191 "shamodule.c"
        var $1976=HEAP[$1975]; //@line 191 "shamodule.c"
        var $1977=$T; //@line 191 "shamodule.c"
        var $1978=($1977) + ($1976); //@line 191 "shamodule.c"
        var $1979=$sha_info_addr; //@line 191 "shamodule.c"
        var $1980=$1979+8; //@line 191 "shamodule.c"
        var $1981=$1980+4; //@line 191 "shamodule.c"
        HEAP[$1981]=$1978; //@line 191 "shamodule.c"
        var $1982=$sha_info_addr; //@line 192 "shamodule.c"
        var $1983=$1982+8; //@line 192 "shamodule.c"
        var $1984=$1983+8; //@line 192 "shamodule.c"
        var $1985=HEAP[$1984]; //@line 192 "shamodule.c"
        var $1986=$A; //@line 192 "shamodule.c"
        var $1987=($1986) + ($1985); //@line 192 "shamodule.c"
        var $1988=$sha_info_addr; //@line 192 "shamodule.c"
        var $1989=$1988+8; //@line 192 "shamodule.c"
        var $1990=$1989+8; //@line 192 "shamodule.c"
        HEAP[$1990]=$1987; //@line 192 "shamodule.c"
        var $1991=$sha_info_addr; //@line 193 "shamodule.c"
        var $1992=$1991+8; //@line 193 "shamodule.c"
        var $1993=$1992+12; //@line 193 "shamodule.c"
        var $1994=HEAP[$1993]; //@line 193 "shamodule.c"
        var $1995=$B; //@line 193 "shamodule.c"
        var $1996=($1995) + ($1994); //@line 193 "shamodule.c"
        var $1997=$sha_info_addr; //@line 193 "shamodule.c"
        var $1998=$1997+8; //@line 193 "shamodule.c"
        var $1999=$1998+12; //@line 193 "shamodule.c"
        HEAP[$1999]=$1996; //@line 193 "shamodule.c"
        var $2000=$sha_info_addr; //@line 194 "shamodule.c"
        var $2001=$2000+8; //@line 194 "shamodule.c"
        var $2002=$2001+16; //@line 194 "shamodule.c"
        var $2003=HEAP[$2002]; //@line 194 "shamodule.c"
        var $2004=$C; //@line 194 "shamodule.c"
        var $2005=($2004) + ($2003); //@line 194 "shamodule.c"
        var $2006=$sha_info_addr; //@line 194 "shamodule.c"
        var $2007=$2006+8; //@line 194 "shamodule.c"
        var $2008=$2007+16; //@line 194 "shamodule.c"
        HEAP[$2008]=$2005; //@line 194 "shamodule.c"
        STACKTOP = __stackBase__;
        return; //@line 217 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _sha_update($sha_info, $buffer, $count) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $sha_info_addr;
        var $buffer_addr;
        var $count_addr;
        var $i;
        var $clo;
        $sha_info_addr=$sha_info;
        $buffer_addr=$buffer;
        $count_addr=$count;
        var $0=$sha_info_addr; //@line 244 "shamodule.c"
        var $1=$0+28; //@line 244 "shamodule.c"
        var $2=HEAP[$1]; //@line 244 "shamodule.c"
        var $3=$count_addr; //@line 244 "shamodule.c"
        var $4=($3) * 8;
        var $5=($4) + ($2); //@line 244 "shamodule.c"
        $clo=$5; //@line 244 "shamodule.c"
        var $6=$sha_info_addr; //@line 245 "shamodule.c"
        var $7=$6+28; //@line 245 "shamodule.c"
        var $8=HEAP[$7]; //@line 245 "shamodule.c"
        var $9=$clo; //@line 245 "shamodule.c"
        var $10=($8) > ($9); //@line 245 "shamodule.c"
        if ($10) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 245 "shamodule.c"
      case 1: // $bb
        var $11=$sha_info_addr; //@line 246 "shamodule.c"
        var $12=$11+32; //@line 246 "shamodule.c"
        var $13=HEAP[$12]; //@line 246 "shamodule.c"
        var $14=($13) + 1; //@line 246 "shamodule.c"
        var $15=$sha_info_addr; //@line 246 "shamodule.c"
        var $16=$15+32; //@line 246 "shamodule.c"
        HEAP[$16]=$14; //@line 246 "shamodule.c"
        __label__ = 2; break; //@line 246 "shamodule.c"
      case 2: // $bb1
        var $17=$sha_info_addr; //@line 248 "shamodule.c"
        var $18=$17+28; //@line 248 "shamodule.c"
        var $19=$clo; //@line 248 "shamodule.c"
        HEAP[$18]=$19; //@line 248 "shamodule.c"
        var $20=$sha_info_addr; //@line 249 "shamodule.c"
        var $21=$20+32; //@line 249 "shamodule.c"
        var $22=HEAP[$21]; //@line 249 "shamodule.c"
        var $23=$count_addr; //@line 249 "shamodule.c"
        var $24=($23) >>> 29; //@line 249 "shamodule.c"
        var $25=($24) + ($22); //@line 249 "shamodule.c"
        var $26=$sha_info_addr; //@line 249 "shamodule.c"
        var $27=$26+32; //@line 249 "shamodule.c"
        HEAP[$27]=$25; //@line 249 "shamodule.c"
        var $28=$sha_info_addr; //@line 250 "shamodule.c"
        var $29=$28+104; //@line 250 "shamodule.c"
        var $30=HEAP[$29]; //@line 250 "shamodule.c"
        var $31=($30)!=0; //@line 250 "shamodule.c"
        if ($31) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 250 "shamodule.c"
      case 3: // $bb2
        var $32=$sha_info_addr; //@line 251 "shamodule.c"
        var $33=$32+104; //@line 251 "shamodule.c"
        var $34=HEAP[$33]; //@line 251 "shamodule.c"
        var $35=64 - ($34); //@line 251 "shamodule.c"
        $i=$35; //@line 251 "shamodule.c"
        var $36=$i; //@line 252 "shamodule.c"
        var $37=$count_addr; //@line 252 "shamodule.c"
        var $38=($36) > ($37); //@line 252 "shamodule.c"
        if ($38) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 252 "shamodule.c"
      case 4: // $bb3
        var $39=$count_addr; //@line 253 "shamodule.c"
        $i=$39; //@line 253 "shamodule.c"
        __label__ = 5; break; //@line 253 "shamodule.c"
      case 5: // $bb4
        var $40=$sha_info_addr; //@line 255 "shamodule.c"
        var $41=$40+36; //@line 255 "shamodule.c"
        var $42=$41; //@line 255 "shamodule.c"
        var $43=$sha_info_addr; //@line 255 "shamodule.c"
        var $44=$43+104; //@line 255 "shamodule.c"
        var $45=HEAP[$44]; //@line 255 "shamodule.c"
        var $46=$42+$45; //@line 255 "shamodule.c"
        var $47=$buffer_addr; //@line 255 "shamodule.c"
        var $48=$i; //@line 255 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($46, $47, $48, 1, 0); //@line 255 "shamodule.c"
        var $49=$count_addr; //@line 256 "shamodule.c"
        var $50=$i; //@line 256 "shamodule.c"
        var $51=($49) - ($50); //@line 256 "shamodule.c"
        $count_addr=$51; //@line 256 "shamodule.c"
        var $52=$buffer_addr; //@line 257 "shamodule.c"
        var $53=$i; //@line 257 "shamodule.c"
        var $54=$52+$53; //@line 257 "shamodule.c"
        $buffer_addr=$54; //@line 257 "shamodule.c"
        var $55=$sha_info_addr; //@line 258 "shamodule.c"
        var $56=$55+104; //@line 258 "shamodule.c"
        var $57=HEAP[$56]; //@line 258 "shamodule.c"
        var $58=$i; //@line 258 "shamodule.c"
        var $59=($58) + ($57); //@line 258 "shamodule.c"
        var $60=$sha_info_addr; //@line 258 "shamodule.c"
        var $61=$60+104; //@line 258 "shamodule.c"
        HEAP[$61]=$59; //@line 258 "shamodule.c"
        var $62=$sha_info_addr; //@line 259 "shamodule.c"
        var $63=$62+104; //@line 259 "shamodule.c"
        var $64=HEAP[$63]; //@line 259 "shamodule.c"
        var $65=($64)==64; //@line 259 "shamodule.c"
        if ($65) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 259 "shamodule.c"
      case 6: // $bb5
        var $66=$sha_info_addr; //@line 260 "shamodule.c"
        _sha_transform($66); //@line 260 "shamodule.c"
        __label__ = 7; break; //@line 260 "shamodule.c"
      case 7: // $bb8_preheader
        var $67=$count_addr; //@line 266 "shamodule.c"
        var $68=($67) > 63; //@line 266 "shamodule.c"
        var $69=$sha_info_addr; //@line 267 "shamodule.c"
        var $70=$69+36; //@line 267 "shamodule.c"
        var $71=$70; //@line 267 "shamodule.c"
        var $72=$buffer_addr; //@line 267 "shamodule.c"
        if ($68) { __lastLabel__ = 7; __label__ = 8; break; } else { __lastLabel__ = 7; __label__ = 9; break; } //@line 266 "shamodule.c"
      case 8: // $bb7
        var $73=__lastLabel__ == 8 ? $85 : ($72);
        var $74=__lastLabel__ == 8 ? $84 : ($71);
        _llvm_memcpy_p0i8_p0i8_i32($74, $73, 64, 1, 0); //@line 267 "shamodule.c"
        var $75=$buffer_addr; //@line 268 "shamodule.c"
        var $76=$75+64; //@line 268 "shamodule.c"
        $buffer_addr=$76; //@line 268 "shamodule.c"
        var $77=$count_addr; //@line 269 "shamodule.c"
        var $78=($77) - 64; //@line 269 "shamodule.c"
        $count_addr=$78; //@line 269 "shamodule.c"
        var $79=$sha_info_addr; //@line 270 "shamodule.c"
        _sha_transform($79); //@line 270 "shamodule.c"
        var $80=$count_addr; //@line 266 "shamodule.c"
        var $81=($80) > 63; //@line 266 "shamodule.c"
        var $82=$sha_info_addr; //@line 267 "shamodule.c"
        var $83=$82+36; //@line 267 "shamodule.c"
        var $84=$83; //@line 267 "shamodule.c"
        var $85=$buffer_addr; //@line 267 "shamodule.c"
        if ($81) { __lastLabel__ = 8; __label__ = 8; break; } else { __lastLabel__ = 8; __label__ = 9; break; } //@line 266 "shamodule.c"
      case 9: // $bb9
        var $_lcssa1=__lastLabel__ == 7 ? $72 : ($85);
        var $_lcssa=__lastLabel__ == 7 ? $71 : ($84);
        var $86=$count_addr; //@line 272 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($_lcssa, $_lcssa1, $86, 1, 0); //@line 272 "shamodule.c"
        var $87=$count_addr; //@line 273 "shamodule.c"
        var $88=$sha_info_addr; //@line 273 "shamodule.c"
        var $89=$88+104; //@line 273 "shamodule.c"
        HEAP[$89]=$87; //@line 273 "shamodule.c"
        __label__ = 10; break; //@line 273 "shamodule.c"
      case 10: // $return
        ;
        return; //@line 263 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _sha_final($digest, $sha_info) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $digest_addr;
        var $sha_info_addr;
        var $count;
        var $lo_bit_count;
        var $hi_bit_count;
        $digest_addr=$digest;
        $sha_info_addr=$sha_info;
        var $0=$sha_info_addr; //@line 284 "shamodule.c"
        var $1=$0+28; //@line 284 "shamodule.c"
        var $2=HEAP[$1]; //@line 284 "shamodule.c"
        $lo_bit_count=$2; //@line 284 "shamodule.c"
        var $3=$sha_info_addr; //@line 285 "shamodule.c"
        var $4=$3+32; //@line 285 "shamodule.c"
        var $5=HEAP[$4]; //@line 285 "shamodule.c"
        $hi_bit_count=$5; //@line 285 "shamodule.c"
        var $6=$lo_bit_count; //@line 286 "shamodule.c"
        var $7=($6) >>> 3; //@line 286 "shamodule.c"
        var $8=($7) & 63; //@line 286 "shamodule.c"
        $count=$8; //@line 286 "shamodule.c"
        var $9=$sha_info_addr; //@line 287 "shamodule.c"
        var $10=$9+36; //@line 287 "shamodule.c"
        var $11=$10; //@line 287 "shamodule.c"
        var $12=$count; //@line 287 "shamodule.c"
        var $13=$11+$12; //@line 287 "shamodule.c"
        HEAP[$13]=-128; //@line 287 "shamodule.c"
        var $14=$count; //@line 287 "shamodule.c"
        var $15=($14) + 1; //@line 287 "shamodule.c"
        $count=$15; //@line 287 "shamodule.c"
        var $16=$count; //@line 288 "shamodule.c"
        var $17=($16) > 56; //@line 288 "shamodule.c"
        var $18=$count; //@line 289 "shamodule.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 288 "shamodule.c"
      case 1: // $bb
        var $19=64 - ($18); //@line 289 "shamodule.c"
        var $20=$sha_info_addr; //@line 289 "shamodule.c"
        var $21=$20+36; //@line 289 "shamodule.c"
        var $22=$21; //@line 289 "shamodule.c"
        var $23=$count; //@line 289 "shamodule.c"
        var $24=$22+$23; //@line 289 "shamodule.c"
        _llvm_memset_p0i8_i32($24, 0, $19, 1, 0); //@line 289 "shamodule.c"
        var $25=$sha_info_addr; //@line 291 "shamodule.c"
        _sha_transform($25); //@line 291 "shamodule.c"
        var $26=$sha_info_addr; //@line 292 "shamodule.c"
        var $27=$26+36; //@line 292 "shamodule.c"
        var $28=$27; //@line 292 "shamodule.c"
        _llvm_memset_p0i8_i32($28, 0, 56, 1, 0); //@line 292 "shamodule.c"
        __label__ = 3; break; //@line 292 "shamodule.c"
      case 2: // $bb1
        var $29=56 - ($18); //@line 295 "shamodule.c"
        var $30=$sha_info_addr; //@line 295 "shamodule.c"
        var $31=$30+36; //@line 295 "shamodule.c"
        var $32=$31; //@line 295 "shamodule.c"
        var $33=$count; //@line 295 "shamodule.c"
        var $34=$32+$33; //@line 295 "shamodule.c"
        _llvm_memset_p0i8_i32($34, 0, $29, 1, 0); //@line 295 "shamodule.c"
        __label__ = 3; break; //@line 295 "shamodule.c"
      case 3: // $bb2
        var $35=$hi_bit_count; //@line 301 "shamodule.c"
        var $36=($35) >>> 24; //@line 301 "shamodule.c"
        var $37=((($36)) & 255); //@line 301 "shamodule.c"
        var $38=$sha_info_addr; //@line 301 "shamodule.c"
        var $39=$38+36; //@line 301 "shamodule.c"
        var $40=$39+56; //@line 301 "shamodule.c"
        HEAP[$40]=$37; //@line 301 "shamodule.c"
        var $41=$hi_bit_count; //@line 302 "shamodule.c"
        var $42=($41) >>> 16; //@line 302 "shamodule.c"
        var $43=((($42)) & 255); //@line 302 "shamodule.c"
        var $44=$sha_info_addr; //@line 302 "shamodule.c"
        var $45=$44+36; //@line 302 "shamodule.c"
        var $46=$45+57; //@line 302 "shamodule.c"
        HEAP[$46]=$43; //@line 302 "shamodule.c"
        var $47=$hi_bit_count; //@line 303 "shamodule.c"
        var $48=($47) >>> 8; //@line 303 "shamodule.c"
        var $49=((($48)) & 255); //@line 303 "shamodule.c"
        var $50=$sha_info_addr; //@line 303 "shamodule.c"
        var $51=$50+36; //@line 303 "shamodule.c"
        var $52=$51+58; //@line 303 "shamodule.c"
        HEAP[$52]=$49; //@line 303 "shamodule.c"
        var $53=$hi_bit_count; //@line 304 "shamodule.c"
        var $54=((($53)) & 255); //@line 304 "shamodule.c"
        var $55=$sha_info_addr; //@line 304 "shamodule.c"
        var $56=$55+36; //@line 304 "shamodule.c"
        var $57=$56+59; //@line 304 "shamodule.c"
        HEAP[$57]=$54; //@line 304 "shamodule.c"
        var $58=$lo_bit_count; //@line 305 "shamodule.c"
        var $59=($58) >>> 24; //@line 305 "shamodule.c"
        var $60=((($59)) & 255); //@line 305 "shamodule.c"
        var $61=$sha_info_addr; //@line 305 "shamodule.c"
        var $62=$61+36; //@line 305 "shamodule.c"
        var $63=$62+60; //@line 305 "shamodule.c"
        HEAP[$63]=$60; //@line 305 "shamodule.c"
        var $64=$lo_bit_count; //@line 306 "shamodule.c"
        var $65=($64) >>> 16; //@line 306 "shamodule.c"
        var $66=((($65)) & 255); //@line 306 "shamodule.c"
        var $67=$sha_info_addr; //@line 306 "shamodule.c"
        var $68=$67+36; //@line 306 "shamodule.c"
        var $69=$68+61; //@line 306 "shamodule.c"
        HEAP[$69]=$66; //@line 306 "shamodule.c"
        var $70=$lo_bit_count; //@line 307 "shamodule.c"
        var $71=($70) >>> 8; //@line 307 "shamodule.c"
        var $72=((($71)) & 255); //@line 307 "shamodule.c"
        var $73=$sha_info_addr; //@line 307 "shamodule.c"
        var $74=$73+36; //@line 307 "shamodule.c"
        var $75=$74+62; //@line 307 "shamodule.c"
        HEAP[$75]=$72; //@line 307 "shamodule.c"
        var $76=$lo_bit_count; //@line 308 "shamodule.c"
        var $77=((($76)) & 255); //@line 308 "shamodule.c"
        var $78=$sha_info_addr; //@line 308 "shamodule.c"
        var $79=$78+36; //@line 308 "shamodule.c"
        var $80=$79+63; //@line 308 "shamodule.c"
        HEAP[$80]=$77; //@line 308 "shamodule.c"
        var $81=$sha_info_addr; //@line 309 "shamodule.c"
        _sha_transform($81); //@line 309 "shamodule.c"
        var $82=$sha_info_addr; //@line 310 "shamodule.c"
        var $83=$82+8; //@line 310 "shamodule.c"
        var $84=$83; //@line 310 "shamodule.c"
        var $85=HEAP[$84]; //@line 310 "shamodule.c"
        var $86=($85) >>> 24; //@line 310 "shamodule.c"
        var $87=((($86)) & 255); //@line 310 "shamodule.c"
        var $88=$digest_addr; //@line 310 "shamodule.c"
        var $89=$88; //@line 310 "shamodule.c"
        HEAP[$89]=$87; //@line 310 "shamodule.c"
        var $90=$sha_info_addr; //@line 311 "shamodule.c"
        var $91=$90+8; //@line 311 "shamodule.c"
        var $92=$91; //@line 311 "shamodule.c"
        var $93=HEAP[$92]; //@line 311 "shamodule.c"
        var $94=($93) >>> 16; //@line 311 "shamodule.c"
        var $95=((($94)) & 255); //@line 311 "shamodule.c"
        var $96=$digest_addr; //@line 311 "shamodule.c"
        var $97=$96+1; //@line 311 "shamodule.c"
        HEAP[$97]=$95; //@line 311 "shamodule.c"
        var $98=$sha_info_addr; //@line 312 "shamodule.c"
        var $99=$98+8; //@line 312 "shamodule.c"
        var $100=$99; //@line 312 "shamodule.c"
        var $101=HEAP[$100]; //@line 312 "shamodule.c"
        var $102=($101) >>> 8; //@line 312 "shamodule.c"
        var $103=((($102)) & 255); //@line 312 "shamodule.c"
        var $104=$digest_addr; //@line 312 "shamodule.c"
        var $105=$104+2; //@line 312 "shamodule.c"
        HEAP[$105]=$103; //@line 312 "shamodule.c"
        var $106=$sha_info_addr; //@line 313 "shamodule.c"
        var $107=$106+8; //@line 313 "shamodule.c"
        var $108=$107; //@line 313 "shamodule.c"
        var $109=HEAP[$108]; //@line 313 "shamodule.c"
        var $110=((($109)) & 255); //@line 313 "shamodule.c"
        var $111=$digest_addr; //@line 313 "shamodule.c"
        var $112=$111+3; //@line 313 "shamodule.c"
        HEAP[$112]=$110; //@line 313 "shamodule.c"
        var $113=$sha_info_addr; //@line 314 "shamodule.c"
        var $114=$113+8; //@line 314 "shamodule.c"
        var $115=$114+4; //@line 314 "shamodule.c"
        var $116=HEAP[$115]; //@line 314 "shamodule.c"
        var $117=($116) >>> 24; //@line 314 "shamodule.c"
        var $118=((($117)) & 255); //@line 314 "shamodule.c"
        var $119=$digest_addr; //@line 314 "shamodule.c"
        var $120=$119+4; //@line 314 "shamodule.c"
        HEAP[$120]=$118; //@line 314 "shamodule.c"
        var $121=$sha_info_addr; //@line 315 "shamodule.c"
        var $122=$121+8; //@line 315 "shamodule.c"
        var $123=$122+4; //@line 315 "shamodule.c"
        var $124=HEAP[$123]; //@line 315 "shamodule.c"
        var $125=($124) >>> 16; //@line 315 "shamodule.c"
        var $126=((($125)) & 255); //@line 315 "shamodule.c"
        var $127=$digest_addr; //@line 315 "shamodule.c"
        var $128=$127+5; //@line 315 "shamodule.c"
        HEAP[$128]=$126; //@line 315 "shamodule.c"
        var $129=$sha_info_addr; //@line 316 "shamodule.c"
        var $130=$129+8; //@line 316 "shamodule.c"
        var $131=$130+4; //@line 316 "shamodule.c"
        var $132=HEAP[$131]; //@line 316 "shamodule.c"
        var $133=($132) >>> 8; //@line 316 "shamodule.c"
        var $134=((($133)) & 255); //@line 316 "shamodule.c"
        var $135=$digest_addr; //@line 316 "shamodule.c"
        var $136=$135+6; //@line 316 "shamodule.c"
        HEAP[$136]=$134; //@line 316 "shamodule.c"
        var $137=$sha_info_addr; //@line 317 "shamodule.c"
        var $138=$137+8; //@line 317 "shamodule.c"
        var $139=$138+4; //@line 317 "shamodule.c"
        var $140=HEAP[$139]; //@line 317 "shamodule.c"
        var $141=((($140)) & 255); //@line 317 "shamodule.c"
        var $142=$digest_addr; //@line 317 "shamodule.c"
        var $143=$142+7; //@line 317 "shamodule.c"
        HEAP[$143]=$141; //@line 317 "shamodule.c"
        var $144=$sha_info_addr; //@line 318 "shamodule.c"
        var $145=$144+8; //@line 318 "shamodule.c"
        var $146=$145+8; //@line 318 "shamodule.c"
        var $147=HEAP[$146]; //@line 318 "shamodule.c"
        var $148=($147) >>> 24; //@line 318 "shamodule.c"
        var $149=((($148)) & 255); //@line 318 "shamodule.c"
        var $150=$digest_addr; //@line 318 "shamodule.c"
        var $151=$150+8; //@line 318 "shamodule.c"
        HEAP[$151]=$149; //@line 318 "shamodule.c"
        var $152=$sha_info_addr; //@line 319 "shamodule.c"
        var $153=$152+8; //@line 319 "shamodule.c"
        var $154=$153+8; //@line 319 "shamodule.c"
        var $155=HEAP[$154]; //@line 319 "shamodule.c"
        var $156=($155) >>> 16; //@line 319 "shamodule.c"
        var $157=((($156)) & 255); //@line 319 "shamodule.c"
        var $158=$digest_addr; //@line 319 "shamodule.c"
        var $159=$158+9; //@line 319 "shamodule.c"
        HEAP[$159]=$157; //@line 319 "shamodule.c"
        var $160=$sha_info_addr; //@line 320 "shamodule.c"
        var $161=$160+8; //@line 320 "shamodule.c"
        var $162=$161+8; //@line 320 "shamodule.c"
        var $163=HEAP[$162]; //@line 320 "shamodule.c"
        var $164=($163) >>> 8; //@line 320 "shamodule.c"
        var $165=((($164)) & 255); //@line 320 "shamodule.c"
        var $166=$digest_addr; //@line 320 "shamodule.c"
        var $167=$166+10; //@line 320 "shamodule.c"
        HEAP[$167]=$165; //@line 320 "shamodule.c"
        var $168=$sha_info_addr; //@line 321 "shamodule.c"
        var $169=$168+8; //@line 321 "shamodule.c"
        var $170=$169+8; //@line 321 "shamodule.c"
        var $171=HEAP[$170]; //@line 321 "shamodule.c"
        var $172=((($171)) & 255); //@line 321 "shamodule.c"
        var $173=$digest_addr; //@line 321 "shamodule.c"
        var $174=$173+11; //@line 321 "shamodule.c"
        HEAP[$174]=$172; //@line 321 "shamodule.c"
        var $175=$sha_info_addr; //@line 322 "shamodule.c"
        var $176=$175+8; //@line 322 "shamodule.c"
        var $177=$176+12; //@line 322 "shamodule.c"
        var $178=HEAP[$177]; //@line 322 "shamodule.c"
        var $179=($178) >>> 24; //@line 322 "shamodule.c"
        var $180=((($179)) & 255); //@line 322 "shamodule.c"
        var $181=$digest_addr; //@line 322 "shamodule.c"
        var $182=$181+12; //@line 322 "shamodule.c"
        HEAP[$182]=$180; //@line 322 "shamodule.c"
        var $183=$sha_info_addr; //@line 323 "shamodule.c"
        var $184=$183+8; //@line 323 "shamodule.c"
        var $185=$184+12; //@line 323 "shamodule.c"
        var $186=HEAP[$185]; //@line 323 "shamodule.c"
        var $187=($186) >>> 16; //@line 323 "shamodule.c"
        var $188=((($187)) & 255); //@line 323 "shamodule.c"
        var $189=$digest_addr; //@line 323 "shamodule.c"
        var $190=$189+13; //@line 323 "shamodule.c"
        HEAP[$190]=$188; //@line 323 "shamodule.c"
        var $191=$sha_info_addr; //@line 324 "shamodule.c"
        var $192=$191+8; //@line 324 "shamodule.c"
        var $193=$192+12; //@line 324 "shamodule.c"
        var $194=HEAP[$193]; //@line 324 "shamodule.c"
        var $195=($194) >>> 8; //@line 324 "shamodule.c"
        var $196=((($195)) & 255); //@line 324 "shamodule.c"
        var $197=$digest_addr; //@line 324 "shamodule.c"
        var $198=$197+14; //@line 324 "shamodule.c"
        HEAP[$198]=$196; //@line 324 "shamodule.c"
        var $199=$sha_info_addr; //@line 325 "shamodule.c"
        var $200=$199+8; //@line 325 "shamodule.c"
        var $201=$200+12; //@line 325 "shamodule.c"
        var $202=HEAP[$201]; //@line 325 "shamodule.c"
        var $203=((($202)) & 255); //@line 325 "shamodule.c"
        var $204=$digest_addr; //@line 325 "shamodule.c"
        var $205=$204+15; //@line 325 "shamodule.c"
        HEAP[$205]=$203; //@line 325 "shamodule.c"
        var $206=$sha_info_addr; //@line 326 "shamodule.c"
        var $207=$206+8; //@line 326 "shamodule.c"
        var $208=$207+16; //@line 326 "shamodule.c"
        var $209=HEAP[$208]; //@line 326 "shamodule.c"
        var $210=($209) >>> 24; //@line 326 "shamodule.c"
        var $211=((($210)) & 255); //@line 326 "shamodule.c"
        var $212=$digest_addr; //@line 326 "shamodule.c"
        var $213=$212+16; //@line 326 "shamodule.c"
        HEAP[$213]=$211; //@line 326 "shamodule.c"
        var $214=$sha_info_addr; //@line 327 "shamodule.c"
        var $215=$214+8; //@line 327 "shamodule.c"
        var $216=$215+16; //@line 327 "shamodule.c"
        var $217=HEAP[$216]; //@line 327 "shamodule.c"
        var $218=($217) >>> 16; //@line 327 "shamodule.c"
        var $219=((($218)) & 255); //@line 327 "shamodule.c"
        var $220=$digest_addr; //@line 327 "shamodule.c"
        var $221=$220+17; //@line 327 "shamodule.c"
        HEAP[$221]=$219; //@line 327 "shamodule.c"
        var $222=$sha_info_addr; //@line 328 "shamodule.c"
        var $223=$222+8; //@line 328 "shamodule.c"
        var $224=$223+16; //@line 328 "shamodule.c"
        var $225=HEAP[$224]; //@line 328 "shamodule.c"
        var $226=($225) >>> 8; //@line 328 "shamodule.c"
        var $227=((($226)) & 255); //@line 328 "shamodule.c"
        var $228=$digest_addr; //@line 328 "shamodule.c"
        var $229=$228+18; //@line 328 "shamodule.c"
        HEAP[$229]=$227; //@line 328 "shamodule.c"
        var $230=$sha_info_addr; //@line 329 "shamodule.c"
        var $231=$230+8; //@line 329 "shamodule.c"
        var $232=$231+16; //@line 329 "shamodule.c"
        var $233=HEAP[$232]; //@line 329 "shamodule.c"
        var $234=((($233)) & 255); //@line 329 "shamodule.c"
        var $235=$digest_addr; //@line 329 "shamodule.c"
        var $236=$235+19; //@line 329 "shamodule.c"
        HEAP[$236]=$234; //@line 329 "shamodule.c"
        ;
        return; //@line 330 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _SHA_dealloc($ptr) {
    ;
    var __label__;
  
    var $ptr_addr;
    $ptr_addr=$ptr;
    var $0=$ptr_addr; //@line 352 "shamodule.c"
    var $1=$0; //@line 352 "shamodule.c"
    _PyObject_Free($1); //@line 352 "shamodule.c"
    ;
    return; //@line 353 "shamodule.c"
  }
  

  function _SHA_copy($self, $unused) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $src_addr_i;
        var $dest_addr_i;
        var $retval_i;
        var $0;
        var $self_addr;
        var $unused_addr;
        var $retval;
        var $1;
        var $newobj;
        $self_addr=$self;
        $unused_addr=$unused;
        var $2=__PyObject_New(_SHAtype); //@line 344 "shamodule.c"
        var $3=$2; //@line 344 "shamodule.c"
        $0=$3; //@line 344 "shamodule.c"
        var $4=$0; //@line 344 "shamodule.c"
        $retval_i=$4; //@line 344 "shamodule.c"
        var $retval1_i=$retval_i; //@line 344 "shamodule.c"
        $newobj=$retval1_i; //@line 365 "shamodule.c"
        var $5=$newobj; //@line 365 "shamodule.c"
        var $6=($5)==0; //@line 365 "shamodule.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 365 "shamodule.c"
      case 1: // $bb
        $1=0; //@line 366 "shamodule.c"
        __label__ = 3; break; //@line 366 "shamodule.c"
      case 2: // $bb1
        var $7=$self_addr; //@line 368 "shamodule.c"
        var $8=$newobj; //@line 368 "shamodule.c"
        $src_addr_i=$7;
        $dest_addr_i=$8;
        var $9=$src_addr_i; //@line 76 "shamodule.c"
        var $10=$9+100; //@line 76 "shamodule.c"
        var $11=HEAP[$10]; //@line 76 "shamodule.c"
        var $12=$dest_addr_i; //@line 76 "shamodule.c"
        var $13=$12+100; //@line 76 "shamodule.c"
        HEAP[$13]=$11; //@line 76 "shamodule.c"
        var $14=$src_addr_i; //@line 77 "shamodule.c"
        var $15=$14+104; //@line 77 "shamodule.c"
        var $16=HEAP[$15]; //@line 77 "shamodule.c"
        var $17=$dest_addr_i; //@line 77 "shamodule.c"
        var $18=$17+104; //@line 77 "shamodule.c"
        HEAP[$18]=$16; //@line 77 "shamodule.c"
        var $19=$src_addr_i; //@line 78 "shamodule.c"
        var $20=$19+28; //@line 78 "shamodule.c"
        var $21=HEAP[$20]; //@line 78 "shamodule.c"
        var $22=$dest_addr_i; //@line 78 "shamodule.c"
        var $23=$22+28; //@line 78 "shamodule.c"
        HEAP[$23]=$21; //@line 78 "shamodule.c"
        var $24=$src_addr_i; //@line 79 "shamodule.c"
        var $25=$24+32; //@line 79 "shamodule.c"
        var $26=HEAP[$25]; //@line 79 "shamodule.c"
        var $27=$dest_addr_i; //@line 79 "shamodule.c"
        var $28=$27+32; //@line 79 "shamodule.c"
        HEAP[$28]=$26; //@line 79 "shamodule.c"
        var $29=$src_addr_i; //@line 80 "shamodule.c"
        var $30=$29+8; //@line 80 "shamodule.c"
        var $31=$30; //@line 80 "shamodule.c"
        var $32=$dest_addr_i; //@line 80 "shamodule.c"
        var $33=$32+8; //@line 80 "shamodule.c"
        var $34=$33; //@line 80 "shamodule.c"
        var $35=$34; //@line 80 "shamodule.c"
        var $36=$31; //@line 80 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($35, $36, 20, 1, 0); //@line 80 "shamodule.c"
        var $37=$src_addr_i; //@line 81 "shamodule.c"
        var $38=$37+36; //@line 81 "shamodule.c"
        var $39=$38; //@line 81 "shamodule.c"
        var $40=$dest_addr_i; //@line 81 "shamodule.c"
        var $41=$40+36; //@line 81 "shamodule.c"
        var $42=$41; //@line 81 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($42, $39, 64, 1, 0); //@line 81 "shamodule.c"
        var $43=$newobj; //@line 369 "shamodule.c"
        var $44=$43; //@line 369 "shamodule.c"
        $1=$44; //@line 369 "shamodule.c"
        __label__ = 3; break; //@line 369 "shamodule.c"
      case 3: // $bb2
        var $45=$1; //@line 366 "shamodule.c"
        $retval=$45; //@line 366 "shamodule.c"
        var $retval3=$retval; //@line 366 "shamodule.c"
        ;
        return $retval3; //@line 366 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _SHA_digest($self, $unused) {
    var __stackBase__  = STACKTOP; STACKTOP += 128; _memset(__stackBase__, 0, 128);
    var __label__;
  
    var $src_addr_i;
    var $dest_addr_i;
    var $self_addr;
    var $unused_addr;
    var $retval;
    var $0;
    var $digest=__stackBase__;
    var $temp=__stackBase__+20;
    $self_addr=$self;
    $unused_addr=$unused;
    var $1=$self_addr; //@line 381 "shamodule.c"
    $src_addr_i=$1;
    $dest_addr_i=$temp;
    var $2=$src_addr_i; //@line 76 "shamodule.c"
    var $3=$2+100; //@line 76 "shamodule.c"
    var $4=HEAP[$3]; //@line 76 "shamodule.c"
    var $5=$dest_addr_i; //@line 76 "shamodule.c"
    var $6=$5+100; //@line 76 "shamodule.c"
    HEAP[$6]=$4; //@line 76 "shamodule.c"
    var $7=$src_addr_i; //@line 77 "shamodule.c"
    var $8=$7+104; //@line 77 "shamodule.c"
    var $9=HEAP[$8]; //@line 77 "shamodule.c"
    var $10=$dest_addr_i; //@line 77 "shamodule.c"
    var $11=$10+104; //@line 77 "shamodule.c"
    HEAP[$11]=$9; //@line 77 "shamodule.c"
    var $12=$src_addr_i; //@line 78 "shamodule.c"
    var $13=$12+28; //@line 78 "shamodule.c"
    var $14=HEAP[$13]; //@line 78 "shamodule.c"
    var $15=$dest_addr_i; //@line 78 "shamodule.c"
    var $16=$15+28; //@line 78 "shamodule.c"
    HEAP[$16]=$14; //@line 78 "shamodule.c"
    var $17=$src_addr_i; //@line 79 "shamodule.c"
    var $18=$17+32; //@line 79 "shamodule.c"
    var $19=HEAP[$18]; //@line 79 "shamodule.c"
    var $20=$dest_addr_i; //@line 79 "shamodule.c"
    var $21=$20+32; //@line 79 "shamodule.c"
    HEAP[$21]=$19; //@line 79 "shamodule.c"
    var $22=$src_addr_i; //@line 80 "shamodule.c"
    var $23=$22+8; //@line 80 "shamodule.c"
    var $24=$23; //@line 80 "shamodule.c"
    var $25=$dest_addr_i; //@line 80 "shamodule.c"
    var $26=$25+8; //@line 80 "shamodule.c"
    var $27=$26; //@line 80 "shamodule.c"
    var $28=$27; //@line 80 "shamodule.c"
    var $29=$24; //@line 80 "shamodule.c"
    _llvm_memcpy_p0i8_p0i8_i32($28, $29, 20, 1, 0); //@line 80 "shamodule.c"
    var $30=$src_addr_i; //@line 81 "shamodule.c"
    var $31=$30+36; //@line 81 "shamodule.c"
    var $32=$31; //@line 81 "shamodule.c"
    var $33=$dest_addr_i; //@line 81 "shamodule.c"
    var $34=$33+36; //@line 81 "shamodule.c"
    var $35=$34; //@line 81 "shamodule.c"
    _llvm_memcpy_p0i8_p0i8_i32($35, $32, 64, 1, 0); //@line 81 "shamodule.c"
    var $digest1=$digest; //@line 382 "shamodule.c"
    _sha_final($digest1, $temp); //@line 382 "shamodule.c"
    var $digest2=$digest; //@line 383 "shamodule.c"
    var $36=_PyString_FromStringAndSize($digest2, 20); //@line 383 "shamodule.c"
    $0=$36; //@line 383 "shamodule.c"
    var $37=$0; //@line 383 "shamodule.c"
    $retval=$37; //@line 383 "shamodule.c"
    var $retval4=$retval; //@line 383 "shamodule.c"
    STACKTOP = __stackBase__;
    return $retval4; //@line 383 "shamodule.c"
  }
  

  function _SHA_hexdigest($self, $unused) {
    var __stackBase__  = STACKTOP; STACKTOP += 128; _memset(__stackBase__, 0, 128);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $src_addr_i;
        var $dest_addr_i;
        var $self_addr;
        var $unused_addr;
        var $retval;
        var $iftmp_12;
        var $iftmp_8;
        var $0;
        var $digest=__stackBase__;
        var $temp=__stackBase__+20;
        var $retval1;
        var $hex_digest;
        var $i;
        var $j;
        var $c;
        $self_addr=$self;
        $unused_addr=$unused;
        var $1=$self_addr; //@line 399 "shamodule.c"
        $src_addr_i=$1;
        $dest_addr_i=$temp;
        var $2=$src_addr_i; //@line 76 "shamodule.c"
        var $3=$2+100; //@line 76 "shamodule.c"
        var $4=HEAP[$3]; //@line 76 "shamodule.c"
        var $5=$dest_addr_i; //@line 76 "shamodule.c"
        var $6=$5+100; //@line 76 "shamodule.c"
        HEAP[$6]=$4; //@line 76 "shamodule.c"
        var $7=$src_addr_i; //@line 77 "shamodule.c"
        var $8=$7+104; //@line 77 "shamodule.c"
        var $9=HEAP[$8]; //@line 77 "shamodule.c"
        var $10=$dest_addr_i; //@line 77 "shamodule.c"
        var $11=$10+104; //@line 77 "shamodule.c"
        HEAP[$11]=$9; //@line 77 "shamodule.c"
        var $12=$src_addr_i; //@line 78 "shamodule.c"
        var $13=$12+28; //@line 78 "shamodule.c"
        var $14=HEAP[$13]; //@line 78 "shamodule.c"
        var $15=$dest_addr_i; //@line 78 "shamodule.c"
        var $16=$15+28; //@line 78 "shamodule.c"
        HEAP[$16]=$14; //@line 78 "shamodule.c"
        var $17=$src_addr_i; //@line 79 "shamodule.c"
        var $18=$17+32; //@line 79 "shamodule.c"
        var $19=HEAP[$18]; //@line 79 "shamodule.c"
        var $20=$dest_addr_i; //@line 79 "shamodule.c"
        var $21=$20+32; //@line 79 "shamodule.c"
        HEAP[$21]=$19; //@line 79 "shamodule.c"
        var $22=$src_addr_i; //@line 80 "shamodule.c"
        var $23=$22+8; //@line 80 "shamodule.c"
        var $24=$23; //@line 80 "shamodule.c"
        var $25=$dest_addr_i; //@line 80 "shamodule.c"
        var $26=$25+8; //@line 80 "shamodule.c"
        var $27=$26; //@line 80 "shamodule.c"
        var $28=$27; //@line 80 "shamodule.c"
        var $29=$24; //@line 80 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($28, $29, 20, 1, 0); //@line 80 "shamodule.c"
        var $30=$src_addr_i; //@line 81 "shamodule.c"
        var $31=$30+36; //@line 81 "shamodule.c"
        var $32=$31; //@line 81 "shamodule.c"
        var $33=$dest_addr_i; //@line 81 "shamodule.c"
        var $34=$33+36; //@line 81 "shamodule.c"
        var $35=$34; //@line 81 "shamodule.c"
        _llvm_memcpy_p0i8_p0i8_i32($35, $32, 64, 1, 0); //@line 81 "shamodule.c"
        var $digest2=$digest; //@line 400 "shamodule.c"
        _sha_final($digest2, $temp); //@line 400 "shamodule.c"
        var $36=_PyString_FromStringAndSize(0, 40); //@line 403 "shamodule.c"
        $retval1=$36; //@line 403 "shamodule.c"
        var $37=$retval1; //@line 404 "shamodule.c"
        var $38=($37)==0; //@line 404 "shamodule.c"
        if ($38) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 404 "shamodule.c"
      case 1: // $bb
        $0=0; //@line 405 "shamodule.c"
        __label__ = 15; break; //@line 405 "shamodule.c"
      case 2: // $bb3
        var $39=$retval1; //@line 406 "shamodule.c"
        var $40=_PyString_AsString($39); //@line 406 "shamodule.c"
        $hex_digest=$40; //@line 406 "shamodule.c"
        var $41=$hex_digest; //@line 407 "shamodule.c"
        var $42=($41)==0; //@line 407 "shamodule.c"
        if ($42) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 407 "shamodule.c"
      case 3: // $bb4
        var $43=$retval1; //@line 408 "shamodule.c"
        var $44=$43; //@line 408 "shamodule.c"
        var $45=HEAP[$44]; //@line 408 "shamodule.c"
        var $46=($45) - 1; //@line 408 "shamodule.c"
        var $47=$retval1; //@line 408 "shamodule.c"
        var $48=$47; //@line 408 "shamodule.c"
        HEAP[$48]=$46; //@line 408 "shamodule.c"
        var $49=$retval1; //@line 408 "shamodule.c"
        var $50=$49; //@line 408 "shamodule.c"
        var $51=HEAP[$50]; //@line 408 "shamodule.c"
        var $52=($51)==0; //@line 408 "shamodule.c"
        if ($52) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 408 "shamodule.c"
      case 4: // $bb5
        var $53=$retval1; //@line 408 "shamodule.c"
        var $54=$53+4; //@line 408 "shamodule.c"
        var $55=HEAP[$54]; //@line 408 "shamodule.c"
        var $56=$55+24; //@line 408 "shamodule.c"
        var $57=HEAP[$56]; //@line 408 "shamodule.c"
        var $58=$retval1; //@line 408 "shamodule.c"
        FUNCTION_TABLE[$57]($58); //@line 408 "shamodule.c"
        __label__ = 5; break; //@line 408 "shamodule.c"
      case 5: // $bb6
        $0=0; //@line 409 "shamodule.c"
        __label__ = 15; break; //@line 409 "shamodule.c"
      case 6: // $bb7
        $j=0; //@line 413 "shamodule.c"
        var $59=$j; //@line 413 "shamodule.c"
        $i=$59; //@line 413 "shamodule.c"
        var $60=($59) <= 19; //@line 413 "shamodule.c"
        if ($60) { __label__ = 7; break; } else { __label__ = 14; break; } //@line 413 "shamodule.c"
      case 7: // $bb8
        var $61=$i; //@line 415 "shamodule.c"
        var $62=$digest+$61; //@line 415 "shamodule.c"
        var $63=HEAP[$62]; //@line 415 "shamodule.c"
        var $64=($63) >>> 4; //@line 415 "shamodule.c"
        var $65=($64) & 15; //@line 415 "shamodule.c"
        $c=$65; //@line 415 "shamodule.c"
        var $66=($65) > 9; //@line 416 "shamodule.c"
        var $67=$c; //@line 416 "shamodule.c"
        if ($66) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 416 "shamodule.c"
      case 8: // $bb9
        var $68=($67) + 87; //@line 416 "shamodule.c"
        $iftmp_8=$68; //@line 416 "shamodule.c"
        __label__ = 10; break; //@line 416 "shamodule.c"
      case 9: // $bb10
        var $69=($67) + 48; //@line 416 "shamodule.c"
        $iftmp_8=$69; //@line 416 "shamodule.c"
        __label__ = 10; break; //@line 416 "shamodule.c"
      case 10: // $bb11
        var $70=$iftmp_8; //@line 416 "shamodule.c"
        $c=$70; //@line 416 "shamodule.c"
        var $71=$hex_digest; //@line 417 "shamodule.c"
        var $72=$j; //@line 417 "shamodule.c"
        var $73=$71+$72; //@line 417 "shamodule.c"
        var $74=$c; //@line 417 "shamodule.c"
        HEAP[$73]=$74; //@line 417 "shamodule.c"
        var $75=$j; //@line 417 "shamodule.c"
        var $76=($75) + 1; //@line 417 "shamodule.c"
        $j=$76; //@line 417 "shamodule.c"
        var $77=$i; //@line 418 "shamodule.c"
        var $78=$digest+$77; //@line 418 "shamodule.c"
        var $79=HEAP[$78]; //@line 418 "shamodule.c"
        var $80=($79) & 15; //@line 418 "shamodule.c"
        $c=$80; //@line 418 "shamodule.c"
        var $81=($80) > 9; //@line 419 "shamodule.c"
        var $82=$c; //@line 419 "shamodule.c"
        if ($81) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 419 "shamodule.c"
      case 11: // $bb12
        var $83=($82) + 87; //@line 419 "shamodule.c"
        $iftmp_12=$83; //@line 419 "shamodule.c"
        __label__ = 13; break; //@line 419 "shamodule.c"
      case 12: // $bb13
        var $84=($82) + 48; //@line 419 "shamodule.c"
        $iftmp_12=$84; //@line 419 "shamodule.c"
        __label__ = 13; break; //@line 419 "shamodule.c"
      case 13: // $bb14
        var $85=$iftmp_12; //@line 419 "shamodule.c"
        $c=$85; //@line 419 "shamodule.c"
        var $86=$hex_digest; //@line 420 "shamodule.c"
        var $87=$j; //@line 420 "shamodule.c"
        var $88=$86+$87; //@line 420 "shamodule.c"
        var $89=$c; //@line 420 "shamodule.c"
        HEAP[$88]=$89; //@line 420 "shamodule.c"
        var $90=$j; //@line 420 "shamodule.c"
        var $91=($90) + 1; //@line 420 "shamodule.c"
        $j=$91; //@line 420 "shamodule.c"
        var $92=$i; //@line 413 "shamodule.c"
        var $93=($92) + 1; //@line 413 "shamodule.c"
        $i=$93; //@line 413 "shamodule.c"
        var $94=($93) <= 19; //@line 413 "shamodule.c"
        if ($94) { __label__ = 7; break; } else { __label__ = 14; break; } //@line 413 "shamodule.c"
      case 14: // $bb16
        var $95=$retval1; //@line 422 "shamodule.c"
        $0=$95; //@line 422 "shamodule.c"
        __label__ = 15; break; //@line 422 "shamodule.c"
      case 15: // $bb17
        var $96=$0; //@line 405 "shamodule.c"
        $retval=$96; //@line 405 "shamodule.c"
        var $retval18=$retval; //@line 405 "shamodule.c"
        STACKTOP = __stackBase__;
        return $retval18; //@line 405 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _SHA_update($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 52; _memset(__stackBase__, 0, 52);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $view=__stackBase__;
        $self_addr=$self;
        $args_addr=$args;
        var $1=$args_addr; //@line 433 "shamodule.c"
        var $2=_PyArg_ParseTuple($1, __str, $view); //@line 433 "shamodule.c"
        var $3=($2)==0; //@line 433 "shamodule.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 433 "shamodule.c"
      case 1: // $bb
        $0=0; //@line 434 "shamodule.c"
        __label__ = 3; break; //@line 434 "shamodule.c"
      case 2: // $bb1
        var $4=$view+8; //@line 436 "shamodule.c"
        var $5=HEAP[$4]; //@line 436 "shamodule.c"
        var $6=$view; //@line 436 "shamodule.c"
        var $7=HEAP[$6]; //@line 436 "shamodule.c"
        var $8=$self_addr; //@line 436 "shamodule.c"
        _sha_update($8, $7, $5); //@line 436 "shamodule.c"
        _PyBuffer_Release($view); //@line 439 "shamodule.c"
        var $9=HEAP[__Py_NoneStruct]; //@line 440 "shamodule.c"
        var $10=($9) + 1; //@line 440 "shamodule.c"
        HEAP[__Py_NoneStruct]=$10; //@line 440 "shamodule.c"
        $0=__Py_NoneStruct; //@line 440 "shamodule.c"
        __label__ = 3; break; //@line 440 "shamodule.c"
      case 3: // $bb2
        var $11=$0; //@line 434 "shamodule.c"
        $retval=$11; //@line 434 "shamodule.c"
        var $retval3=$retval; //@line 434 "shamodule.c"
        STACKTOP = __stackBase__;
        return $retval3; //@line 434 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _SHA_get_block_size($self, $closure) {
    ;
    var __label__;
  
    var $self_addr;
    var $closure_addr;
    var $retval;
    var $0;
    $self_addr=$self;
    $closure_addr=$closure;
    var $1=_PyInt_FromLong(64); //@line 454 "shamodule.c"
    $0=$1; //@line 454 "shamodule.c"
    var $2=$0; //@line 454 "shamodule.c"
    $retval=$2; //@line 454 "shamodule.c"
    var $retval1=$retval; //@line 454 "shamodule.c"
    ;
    return $retval1; //@line 454 "shamodule.c"
  }
  

  function _SHA_get_digest_size($self, $closure) {
    ;
    var __label__;
  
    var $self_addr;
    var $closure_addr;
    var $retval;
    var $0;
    $self_addr=$self;
    $closure_addr=$closure;
    var $1=_PyInt_FromLong(20); //@line 460 "shamodule.c"
    $0=$1; //@line 460 "shamodule.c"
    var $2=$0; //@line 460 "shamodule.c"
    $retval=$2; //@line 460 "shamodule.c"
    var $retval1=$retval; //@line 460 "shamodule.c"
    ;
    return $retval1; //@line 460 "shamodule.c"
  }
  

  function _SHA_get_name($self, $closure) {
    ;
    var __label__;
  
    var $self_addr;
    var $closure_addr;
    var $retval;
    var $0;
    $self_addr=$self;
    $closure_addr=$closure;
    var $1=_PyString_FromStringAndSize(__str5, 4); //@line 466 "shamodule.c"
    $0=$1; //@line 466 "shamodule.c"
    var $2=$0; //@line 466 "shamodule.c"
    $retval=$2; //@line 466 "shamodule.c"
    var $retval1=$retval; //@line 466 "shamodule.c"
    ;
    return $retval1; //@line 466 "shamodule.c"
  }
  

  function _SHA_new($self, $args, $kwdict) {
    var __stackBase__  = STACKTOP; STACKTOP += 56; _memset(__stackBase__, 0, 56);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $sha_info_addr_i;
        var $i_i=__stackBase__;
        var $retval_i;
        var $0;
        var $self_addr;
        var $args_addr;
        var $kwdict_addr;
        var $retval;
        var $1;
        var $new;
        var $view=__stackBase__+4;
        $self_addr=$self;
        $args_addr=$args;
        $kwdict_addr=$kwdict;
        var $view1=$view; //@line 538 "shamodule.c"
        _llvm_memset_p0i8_i32($view1, 0, 52, 4, 0); //@line 538 "shamodule.c"
        var $2=$args_addr; //@line 540 "shamodule.c"
        var $3=$kwdict_addr; //@line 540 "shamodule.c"
        var $4=_PyArg_ParseTupleAndKeywords($2, $3, __str11, _kwlist_9310, $view); //@line 540 "shamodule.c"
        var $5=($4)==0; //@line 540 "shamodule.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 540 "shamodule.c"
      case 1: // $bb
        $1=0; //@line 542 "shamodule.c"
        __label__ = 13; break; //@line 542 "shamodule.c"
      case 2: // $bb2
        var $6=__PyObject_New(_SHAtype); //@line 344 "shamodule.c"
        var $7=$6; //@line 344 "shamodule.c"
        $0=$7; //@line 344 "shamodule.c"
        var $8=$0; //@line 344 "shamodule.c"
        $retval_i=$8; //@line 344 "shamodule.c"
        var $retval1_i=$retval_i; //@line 344 "shamodule.c"
        $new=$retval1_i; //@line 545 "shamodule.c"
        var $9=$new; //@line 545 "shamodule.c"
        var $10=($9)==0; //@line 545 "shamodule.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 545 "shamodule.c"
      case 3: // $bb3
        _PyBuffer_Release($view); //@line 546 "shamodule.c"
        $1=0; //@line 547 "shamodule.c"
        __label__ = 13; break; //@line 547 "shamodule.c"
      case 4: // $bb4
        var $11=$new; //@line 550 "shamodule.c"
        $sha_info_addr_i=$11;
        HEAP[$i_i]=1; //@line 224 "shamodule.c"
        var $12=$sha_info_addr_i; //@line 224 "shamodule.c"
        var $13=$12+100; //@line 224 "shamodule.c"
        HEAP[$13]=0; //@line 224 "shamodule.c"
        var $i1_i=$i_i; //@line 224 "shamodule.c"
        var $14=HEAP[$i1_i]; //@line 224 "shamodule.c"
        var $15=($14)==1; //@line 224 "shamodule.c"
        if ($15) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 224 "shamodule.c"
      case 5: // $bb_i
        var $16=$sha_info_addr_i; //@line 224 "shamodule.c"
        var $17=$16+100; //@line 224 "shamodule.c"
        HEAP[$17]=1; //@line 224 "shamodule.c"
        __label__ = 6; break; //@line 224 "shamodule.c"
      case 6: // $sha_init_exit
        var $18=$sha_info_addr_i; //@line 226 "shamodule.c"
        var $19=$18+8; //@line 226 "shamodule.c"
        var $20=$19; //@line 226 "shamodule.c"
        HEAP[$20]=1732584193; //@line 226 "shamodule.c"
        var $21=$sha_info_addr_i; //@line 227 "shamodule.c"
        var $22=$21+8; //@line 227 "shamodule.c"
        var $23=$22+4; //@line 227 "shamodule.c"
        HEAP[$23]=-271733879; //@line 227 "shamodule.c"
        var $24=$sha_info_addr_i; //@line 228 "shamodule.c"
        var $25=$24+8; //@line 228 "shamodule.c"
        var $26=$25+8; //@line 228 "shamodule.c"
        HEAP[$26]=-1732584194; //@line 228 "shamodule.c"
        var $27=$sha_info_addr_i; //@line 229 "shamodule.c"
        var $28=$27+8; //@line 229 "shamodule.c"
        var $29=$28+12; //@line 229 "shamodule.c"
        HEAP[$29]=271733878; //@line 229 "shamodule.c"
        var $30=$sha_info_addr_i; //@line 230 "shamodule.c"
        var $31=$30+8; //@line 230 "shamodule.c"
        var $32=$31+16; //@line 230 "shamodule.c"
        HEAP[$32]=-1009589776; //@line 230 "shamodule.c"
        var $33=$sha_info_addr_i; //@line 231 "shamodule.c"
        var $34=$33+28; //@line 231 "shamodule.c"
        HEAP[$34]=0; //@line 231 "shamodule.c"
        var $35=$sha_info_addr_i; //@line 232 "shamodule.c"
        var $36=$35+32; //@line 232 "shamodule.c"
        HEAP[$36]=0; //@line 232 "shamodule.c"
        var $37=$sha_info_addr_i; //@line 233 "shamodule.c"
        var $38=$37+104; //@line 233 "shamodule.c"
        HEAP[$38]=0; //@line 233 "shamodule.c"
        var $39=_PyErr_Occurred(); //@line 552 "shamodule.c"
        var $40=($39)!=0; //@line 552 "shamodule.c"
        if ($40) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 552 "shamodule.c"
      case 7: // $bb5
        var $41=$new; //@line 553 "shamodule.c"
        var $42=$41; //@line 553 "shamodule.c"
        var $43=$42; //@line 553 "shamodule.c"
        var $44=HEAP[$43]; //@line 553 "shamodule.c"
        var $45=($44) - 1; //@line 553 "shamodule.c"
        var $46=$42; //@line 553 "shamodule.c"
        HEAP[$46]=$45; //@line 553 "shamodule.c"
        var $47=$42; //@line 553 "shamodule.c"
        var $48=HEAP[$47]; //@line 553 "shamodule.c"
        var $49=($48)==0; //@line 553 "shamodule.c"
        if ($49) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 553 "shamodule.c"
      case 8: // $bb6
        var $50=$new; //@line 553 "shamodule.c"
        var $51=$50; //@line 553 "shamodule.c"
        var $52=$51+4; //@line 553 "shamodule.c"
        var $53=HEAP[$52]; //@line 553 "shamodule.c"
        var $54=$53+24; //@line 553 "shamodule.c"
        var $55=HEAP[$54]; //@line 553 "shamodule.c"
        var $56=$new; //@line 553 "shamodule.c"
        var $57=$56; //@line 553 "shamodule.c"
        FUNCTION_TABLE[$55]($57); //@line 553 "shamodule.c"
        __label__ = 9; break; //@line 553 "shamodule.c"
      case 9: // $bb7
        _PyBuffer_Release($view); //@line 554 "shamodule.c"
        $1=0; //@line 555 "shamodule.c"
        __label__ = 13; break; //@line 555 "shamodule.c"
      case 10: // $bb8
        var $58=$view+8; //@line 557 "shamodule.c"
        var $59=HEAP[$58]; //@line 557 "shamodule.c"
        var $60=($59) > 0; //@line 557 "shamodule.c"
        if ($60) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 557 "shamodule.c"
      case 11: // $bb9
        var $61=$view+8; //@line 558 "shamodule.c"
        var $62=HEAP[$61]; //@line 558 "shamodule.c"
        var $63=$view; //@line 558 "shamodule.c"
        var $64=HEAP[$63]; //@line 558 "shamodule.c"
        var $65=$new; //@line 558 "shamodule.c"
        _sha_update($65, $64, $62); //@line 558 "shamodule.c"
        __label__ = 12; break; //@line 558 "shamodule.c"
      case 12: // $bb10
        _PyBuffer_Release($view); //@line 561 "shamodule.c"
        var $66=$new; //@line 563 "shamodule.c"
        var $67=$66; //@line 563 "shamodule.c"
        $1=$67; //@line 563 "shamodule.c"
        __label__ = 13; break; //@line 563 "shamodule.c"
      case 13: // $bb11
        var $68=$1; //@line 542 "shamodule.c"
        $retval=$68; //@line 542 "shamodule.c"
        var $retval12=$retval; //@line 542 "shamodule.c"
        STACKTOP = __stackBase__;
        return $retval12; //@line 542 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _init_sha() {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $m;
        HEAP[_SHAtype+4]=_PyType_Type; //@line 584 "shamodule.c"
        var $0=_PyType_Ready(_SHAtype); //@line 585 "shamodule.c"
        var $1=($0) < 0; //@line 585 "shamodule.c"
        if ($1) { __label__ = 3; break; } else { __label__ = 1; break; } //@line 585 "shamodule.c"
      case 1: // $bb
        var $2=_Py_InitModule4(__str14, _SHA_functions, 0, 0, 1013); //@line 587 "shamodule.c"
        $m=$2; //@line 587 "shamodule.c"
        var $3=$m; //@line 588 "shamodule.c"
        var $4=($3)==0; //@line 588 "shamodule.c"
        if ($4) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 588 "shamodule.c"
      case 2: // $bb1
        var $5=$m; //@line 592 "shamodule.c"
        var $6=_PyModule_AddIntConstant($5, __str15, 1); //@line 592 "shamodule.c"
        var $7=$m; //@line 595 "shamodule.c"
        var $8=_PyModule_AddIntConstant($7, __str9, 20); //@line 595 "shamodule.c"
        var $9=$m; //@line 596 "shamodule.c"
        var $10=_PyModule_AddIntConstant($9, __str6, 20); //@line 596 "shamodule.c"
        __label__ = 3; break; //@line 596 "shamodule.c"
      case 3: // $return
        ;
        return; //@line 586 "shamodule.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  Module["_init_sha"] = _init_sha;
FUNCTION_TABLE = FUNCTION_TABLE.concat([0,0,_SHA_copy,0,_SHA_digest,0,_SHA_hexdigest,0,_SHA_update,0,_SHA_get_digest_size,0,_SHA_get_block_size,0,_SHA_get_name,0,_SHA_dealloc,0,_SHA_new,0]);

// === Auto-generated postamble setup entry stuff ===

function run(args) {
  
_SHA_copy__doc__=allocate([82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,104,97,115,104,105,110,103,32,111,98,106,101,99,116,46,0] /* Return a copy of the */, "i8", ALLOC_NORMAL);
_SHA_digest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,98,105,110,97,114,121,32,100,97,116,97,46,0] /* Return the digest va */, "i8", ALLOC_NORMAL);
_SHA_hexdigest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,104,101,120,97,100,101,99,105,109,97,108,32,100,105,103,105,116,115,46,0] /* Return the digest va */, "i8", ALLOC_NORMAL);
_SHA_update__doc__=allocate([85,112,100,97,116,101,32,116,104,105,115,32,104,97,115,104,105,110,103,32,111,98,106,101,99,116,39,115,32,115,116,97,116,101,32,119,105,116,104,32,116,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,46,0] /* Update this hashing  */, "i8", ALLOC_NORMAL);
__str=allocate([115,42,58,117,112,100,97,116,101,0] /* s_:update\00 */, "i8", ALLOC_NORMAL);
__str1=allocate([99,111,112,121,0] /* copy\00 */, "i8", ALLOC_NORMAL);
__str2=allocate([100,105,103,101,115,116,0] /* digest\00 */, "i8", ALLOC_NORMAL);
__str3=allocate([104,101,120,100,105,103,101,115,116,0] /* hexdigest\00 */, "i8", ALLOC_NORMAL);
__str4=allocate([117,112,100,97,116,101,0] /* update\00 */, "i8", ALLOC_NORMAL);
_SHA_methods=allocate([0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
__str5=allocate([83,72,65,49,0] /* SHA1\00 */, "i8", ALLOC_NORMAL);
__str6=allocate([100,105,103,101,115,116,95,115,105,122,101,0] /* digest_size\00 */, "i8", ALLOC_NORMAL);
__str7=allocate([98,108,111,99,107,95,115,105,122,101,0] /* block_size\00 */, "i8", ALLOC_NORMAL);
__str8=allocate([110,97,109,101,0] /* name\00 */, "i8", ALLOC_NORMAL);
__str9=allocate([100,105,103,101,115,116,115,105,122,101,0] /* digestsize\00 */, "i8", ALLOC_NORMAL);
_SHA_getseters=allocate(100, ["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
__str10=allocate([95,115,104,97,46,115,104,97,0] /* _sha.sha\00 */, "i8", ALLOC_NORMAL);
_SHAtype=allocate([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131563, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_SHA_new__doc__=allocate([82,101,116,117,114,110,32,97,32,110,101,119,32,83,72,65,32,104,97,115,104,105,110,103,32,111,98,106,101,99,116,46,32,32,65,110,32,111,112,116,105,111,110,97,108,32,115,116,114,105,110,103,32,97,114,103,117,109,101,110,116,10,109,97,121,32,98,101,32,112,114,111,118,105,100,101,100,59,32,105,102,32,112,114,101,115,101,110,116,44,32,116,104,105,115,32,115,116,114,105,110,103,32,119,105,108,108,32,98,101,32,97,117,116,111,109,97,116,105,99,97,108,108,121,10,104,97,115,104,101,100,46,0] /* Return a new SHA has */, "i8", ALLOC_NORMAL);
__str11=allocate([124,115,42,58,110,101,119,0] /* |s_:new\00 */, "i8", ALLOC_NORMAL);
_kwlist_9310=allocate(8, "i8*", ALLOC_NORMAL);
__str12=allocate([115,116,114,105,110,103,0] /* string\00 */, "i8", ALLOC_NORMAL);
__str13=allocate([110,101,119,0] /* new\00 */, "i8", ALLOC_NORMAL);
_SHA_functions=allocate([0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
__str14=allocate([95,115,104,97,0] /* _sha\00 */, "i8", ALLOC_NORMAL);
__str15=allocate([98,108,111,99,107,115,105,122,101,0] /* blocksize\00 */, "i8", ALLOC_NORMAL);
HEAP[_SHA_methods]=__str1;
HEAP[_SHA_methods+4]=(FUNCTION_TABLE_OFFSET + 2);
HEAP[_SHA_methods+12]=_SHA_copy__doc__;
HEAP[_SHA_methods+16]=__str2;
HEAP[_SHA_methods+20]=(FUNCTION_TABLE_OFFSET + 4);
HEAP[_SHA_methods+28]=_SHA_digest__doc__;
HEAP[_SHA_methods+32]=__str3;
HEAP[_SHA_methods+36]=(FUNCTION_TABLE_OFFSET + 6);
HEAP[_SHA_methods+44]=_SHA_hexdigest__doc__;
HEAP[_SHA_methods+48]=__str4;
HEAP[_SHA_methods+52]=(FUNCTION_TABLE_OFFSET + 8);
HEAP[_SHA_methods+60]=_SHA_update__doc__;
HEAP[_SHA_getseters]=__str6;
HEAP[_SHA_getseters+4]=(FUNCTION_TABLE_OFFSET + 10);
HEAP[_SHA_getseters+20]=__str7;
HEAP[_SHA_getseters+24]=(FUNCTION_TABLE_OFFSET + 12);
HEAP[_SHA_getseters+40]=__str8;
HEAP[_SHA_getseters+44]=(FUNCTION_TABLE_OFFSET + 14);
HEAP[_SHA_getseters+60]=__str9;
HEAP[_SHA_getseters+64]=(FUNCTION_TABLE_OFFSET + 10);
HEAP[_SHAtype+12]=__str10;
HEAP[_SHAtype+24]=(FUNCTION_TABLE_OFFSET + 16);
HEAP[_SHAtype+116]=_SHA_methods;
HEAP[_SHAtype+124]=_SHA_getseters;
HEAP[_kwlist_9310]=__str12;
HEAP[_SHA_functions]=__str13;
HEAP[_SHA_functions+4]=(FUNCTION_TABLE_OFFSET + 18);
HEAP[_SHA_functions+12]=_SHA_new__doc__;

  __globalConstructor__();
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

run();

// {{POST_RUN_ADDITIONS}}





  // {{MODULE_ADDITIONS}}

  return Module;
});

