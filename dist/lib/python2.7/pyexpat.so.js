"use strict";

// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET) {
  var Module = {};
  var args = [];
  Module.arguments = [];

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime essentials
//========================================

var __globalConstructor__ = function globalConstructor() {
}

// === Body ===



var $0___SIZE = 144; // %0
  
var $1___SIZE = 16; // %1
  
var $2___SIZE = 196; // %2
  
var $3___SIZE = 20; // %3
  
var $4___SIZE = 364; // %4
  var $4___FLATTENER = [0,72,328];
var $struct_ATTRIBUTE___SIZE = 16; // %struct.ATTRIBUTE
  
var $struct_BINDING___SIZE = 28; // %struct.BINDING
  
var $struct_BLOCK___SIZE = 12; // %struct.BLOCK
  
var $struct_CONTENT_SCAFFOLD___SIZE = 28; // %struct.CONTENT_SCAFFOLD
  
var $struct_DEFAULT_ATTRIBUTE___SIZE = 12; // %struct.DEFAULT_ATTRIBUTE
  
var $struct_DTD___SIZE = 168; // %struct.DTD
  var $struct_DTD___FLATTENER = [0,20,40,60,80,104,128,129,130,132,140,144,148,152,156,160,164];
var $struct_ELEMENT_TYPE___SIZE = 24; // %struct.ELEMENT_TYPE
  
var $struct_ENCODING___SIZE = 72; // %struct.ENCODING
  var $struct_ENCODING___FLATTENER = [0,12,20,24,28,32,36,40,44,48,52,56,60,64,68,69];
var $struct_ENTITY___SIZE = 36; // %struct.ENTITY
  var $struct_ENTITY___FLATTENER = [0,4,8,12,16,20,24,28,32,33,34];
var $struct_FILE___SIZE = 148; // %struct.FILE
  var $struct_FILE___FLATTENER = [0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,70,71,72,76,84,88,92,96,100,104,108];
var $struct_HASH_TABLE___SIZE = 20; // %struct.HASH_TABLE
  
var $struct_HASH_TABLE_ITER___SIZE = 8; // %struct.HASH_TABLE_ITER
  
var $struct_HandlerInfo___SIZE = 20; // %struct.HandlerInfo
  
var $struct_INIT_ENCODING___SIZE = 76; // %struct.INIT_ENCODING
  
var $struct_NAMED___SIZE = 4; // %struct.NAMED
  
var $struct_NS_ATT___SIZE = 12; // %struct.NS_ATT
  
var $struct_OPEN_INTERNAL_ENTITY___SIZE = 24; // %struct.OPEN_INTERNAL_ENTITY
  
var $struct_POSITION___SIZE = 8; // %struct.POSITION
  
var $struct_PREFIX___SIZE = 8; // %struct.PREFIX
  
var $struct_PROLOG_STATE___SIZE = 12; // %struct.PROLOG_STATE
  
var $struct_PyBufferProcs___SIZE = 24; // %struct.PyBufferProcs
  
var $struct_PyCodeObject___SIZE = 72; // %struct.PyCodeObject
  
var $struct_PyExpat_CAPI___SIZE = 80; // %struct.PyExpat_CAPI
  
var $struct_PyGetSetDef___SIZE = 20; // %struct.PyGetSetDef
  
var $struct_PyIntObject___SIZE = 12; // %struct.PyIntObject
  
var $struct_PyInterpreterState___SIZE = 40; // %struct.PyInterpreterState
  
var $struct_PyListObject___SIZE = 20; // %struct.PyListObject
  
var $struct_PyMappingMethods___SIZE = 12; // %struct.PyMappingMethods
  
var $struct_PyMemberDef___SIZE = 0; // %struct.PyMemberDef
  var $struct_PyMemberDef___FLATTENER = [];
var $struct_PyMethodDef___SIZE = 16; // %struct.PyMethodDef
  
var $struct_PyNumberMethods___SIZE = 156; // %struct.PyNumberMethods
  
var $struct_PyObject___SIZE = 8; // %struct.PyObject
  
var $struct_PySequenceMethods___SIZE = 40; // %struct.PySequenceMethods
  
var $struct_PyThreadState___SIZE = 84; // %struct.PyThreadState
  
var $struct_PyTryBlock___SIZE = 12; // %struct.PyTryBlock
  
var $struct_PyTupleObject___SIZE = 16; // %struct.PyTupleObject
  
var $struct_PyUnicodeObject___SIZE = 24; // %struct.PyUnicodeObject
  
var $struct_Py_buffer___SIZE = 52; // %struct.Py_buffer
  var $struct_Py_buffer___FLATTENER = [0,4,8,12,16,20,24,28,32,36,40,48];
var $struct_STRING_POOL___SIZE = 24; // %struct.STRING_POOL
  
var $struct_TAG___SIZE = 48; // %struct.TAG
  var $struct_TAG___FLATTENER = [0,4,8,12,36,40,44];
var $struct_TAG_NAME___SIZE = 24; // %struct.TAG_NAME
  
var $struct_XML_Content___SIZE = 20; // %struct.XML_Content
  
var $struct_XML_Encoding___SIZE = 1036; // %struct.XML_Encoding
  var $struct_XML_Encoding___FLATTENER = [0,1024,1028,1032];
var $struct_XML_Feature___SIZE = 12; // %struct.XML_Feature
  
var $struct_XML_Memory_Handling_Suite___SIZE = 12; // %struct.XML_Memory_Handling_Suite
  
var $struct_XML_ParserStruct___SIZE = 472; // %struct.XML_ParserStruct
  var $struct_XML_ParserStruct___FLATTENER = [0,4,8,12,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,224,228,232,233,236,240,244,248,252,264,268,272,276,280,284,288,292,296,300,304,308,312,316,320,324,328,332,336,337,340,344,348,352,356,360,364,368,372,376,380,384,388,392,400,424,448,452,456,460,464];
var $struct_XML_ParsingStatus___SIZE = 8; // %struct.XML_ParsingStatus
  
var $struct__IO_marker___SIZE = 12; // %struct._IO_marker
  
var $struct__frame___SIZE = 316; // %struct._frame
  var $struct__frame___FLATTENER = [0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,312];
var $struct__typeobject___SIZE = 196; // %struct._typeobject
  
var $struct_attribute_id___SIZE = 12; // %struct.attribute_id
  var $struct_attribute_id___FLATTENER = [0,4,8,9];
var $struct_normal_encoding___SIZE = 364; // %struct.normal_encoding
  var $struct_normal_encoding___FLATTENER = [0,72,328,332,336,340,344,348,352,356,360];
var $struct_unknown_encoding___SIZE = 1908; // %struct.unknown_encoding
  var $struct_unknown_encoding___FLATTENER = [0,364,368,372,884];
var $struct_xmlparseobject___SIZE = 52; // %struct.xmlparseobject
  
var __str;
var _ErrorObject;
var __str1;
var __str2;
var __str3;
var __str4;
var __Py_NoneStruct;
var __str5;
var __str6;
var __PyThreadState_Current;
var __str7;
var __str8;
var __str9;
var __str10;
var __str11;
var __str12;
var __str13;
var __str14;
var __str15;
var __str16;
var __str17;
var __str18;
var __str19;
var __str20;
var ___PRETTY_FUNCTION___9748;
var __str21;
var __str22;
var __str23;
var __str24;
var __str25;
var __str26;
var __str27;
var __str28;
var __str29;
var __str30;
var __str31;
var __str32;
var __str33;
var __str34;
var __str35;
var __str36;
var __str37;
var __str38;
var __str39;
var __str40;
var __str41;
var __str42;
var __str43;
var __str44;
var _xmlparse_Parse__doc__;
var __str45;
var _PyExc_TypeError;
var __str46;
var _PyExc_ValueError;
var __str47;
var _xmlparse_ParseFile__doc__;
var __str48;
var __str49;
var _xmlparse_SetBase__doc__;
var __str50;
var _xmlparse_GetBase__doc__;
var __str51;
var _xmlparse_GetInputContext__doc__;
var _xmlparse_ExternalEntityParserCreate__doc__;
var __str52;
var _xmlparse_SetParamEntityParsing__doc__;
var __str53;
var _xmlparse_UseForeignDTD__doc__;
var __str54;
var __str55;
var __str56;
var __str57;
var __str58;
var __str59;
var __str60;
var __str61;
var _xmlparse_methods;
var _template_string;
var _template_buffer;
var __str62;
var _PyExc_RuntimeError;
var __str63;
var __Py_TrueStruct;
var __Py_ZeroStruct;
var __str64;
var __str65;
var __str66;
var __str67;
var __str68;
var __str69;
var __str70;
var __str71;
var __str72;
var __str73;
var __str74;
var __str75;
var __str76;
var __str77;
var __str78;
var __str79;
var __str80;
var __str81;
var __str82;
var __str83;
var _PyExc_AttributeError;
var _Xmlparsetype__doc__;
var __str84;
var _Xmlparsetype;
var _pyexpat_ParserCreate__doc__;
var __str85;
var _kwlist_11531;
var __str86;
var __str87;
var __str88;
var __str89;
var _pyexpat_ErrorString__doc__;
var __str90;
var _pyexpat_methods;
var __str91;
var __str92;
var _pyexpat_module_documentation;
var __str93;
var __str94;
var _PyType_Type;
var __str95;
var __str96;
var __str97;
var __str98;
var __str99;
var __str100;
var __str101;
var __str102;
var __str103;
var __str104;
var __str105;
var __str106;
var __str107;
var __str108;
var __str109;
var __str110;
var __str111;
var __str112;
var __str113;
var __str114;
var __str115;
var __str116;
var __str117;
var __str118;
var __str119;
var __str120;
var __str121;
var __str122;
var __str123;
var __str124;
var __str125;
var __str126;
var __str127;
var __str128;
var __str129;
var __str130;
var __str131;
var __str132;
var __str133;
var __str134;
var __str135;
var __str136;
var __str137;
var __str138;
var __str139;
var __str140;
var __str141;
var __str142;
var __str143;
var __str144;
var __str145;
var __str146;
var __str147;
var __str148;
var __str149;
var __str150;
var __str151;
var __str152;
var __str153;
var __str154;
var __str155;
var __str156;
var __str157;
var __str158;
var __str159;
var __str160;
var __str161;
var __str162;
var __str163;
var __str164;
var _capi_11610;
var __str165;
var __str166;
var __str167;
var __str168;
var __str169;
var __str170;
var __str171;
var __str172;
var __str173;
var __str174;
var __str175;
var __str176;
var __str177;
var __str178;
var __str179;
var __str180;
var __str181;
var __str182;
var __str183;
var __str184;
var __str185;
var __str186;
var __str187;
var _handler_info;
var _implicitContext;
var __str188;
var __str1189;
var ___PRETTY_FUNCTION___3675;
var _message_3807;
var __str2190;
var __str3191;
var __str4192;
var __str5193;
var __str6194;
var __str7195;
var __str8196;
var __str9197;
var __str10198;
var __str11199;
var __str12200;
var __str13201;
var __str14202;
var __str15203;
var __str16204;
var __str17205;
var __str18206;
var __str19207;
var __str20208;
var __str21209;
var __str22210;
var __str23211;
var __str24212;
var __str25213;
var __str26214;
var __str27215;
var __str28216;
var __str29217;
var __str30218;
var __str31219;
var __str32220;
var __str33221;
var __str34222;
var __str35223;
var __str36224;
var __str37225;
var __str38226;
var __str39227;
var __str40228;
var __str41229;
var __str42230;
var _features_3829;
var __str43231;
var __str44232;
var _xmlNamespace_5099;
var _xmlnsNamespace_5101;
var _atypeCDATA_5618;
var _atypeID_5619;
var _atypeIDREF_5620;
var _atypeIDREFS_5621;
var _atypeENTITY_5622;
var _atypeENTITIES_5623;
var _atypeNMTOKEN_5624;
var _atypeNMTOKENS_5625;
var _enumValueSep_5627;
var _notationPrefix_5626;
var _enumValueStart_5628;
var _KW_ANY;
var _KW_ATTLIST;
var _KW_CDATA;
var _KW_DOCTYPE;
var _KW_ELEMENT;
var _KW_EMPTY;
var _KW_ENTITIES;
var _KW_ENTITY;
var _KW_FIXED;
var _KW_ID;
var _KW_IDREF;
var _KW_IDREFS;
var _KW_IMPLIED;
var _KW_NDATA;
var _KW_NMTOKEN;
var _KW_NMTOKENS;
var _KW_NOTATION;
var _KW_PCDATA;
var _KW_PUBLIC;
var _KW_REQUIRED;
var _KW_SYSTEM;
var _types_1870;
var _namingBitmap;
var _nmstrtPages;
var _namePages;
var _utf8_encoding;
var _internal_utf8_encoding;
var _latin1_encoding;
var _ascii_encoding;
var _little2_encoding;
var _internal_little2_encoding;
var _CDATA_LSQB_8477;
var _big2_encoding;
var _internal_big2_encoding;
var _KW_version;
var _KW_standalone;
var _KW_yes;
var _KW_no;
var _KW_ISO_8859_1;
var _KW_US_ASCII;
var _KW_UTF_16;
var _KW_UTF_16BE;
var _KW_UTF_16LE;
var _encodingNames_12027;
var _encodings;





















































































































  function _set_error_attr($err, $name, $value) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $err_addr;
        var $name_addr;
        var $value_addr;
        var $retval;
        var $0;
        var $v;
        $err_addr=$err;
        $name_addr=$name;
        $value_addr=$value;
        var $1=$value_addr; //@line 107 "pyexpat.c"
        var $2=_PyInt_FromLong($1); //@line 107 "pyexpat.c"
        $v=$2; //@line 107 "pyexpat.c"
        var $3=$v; //@line 109 "pyexpat.c"
        var $4=($3)==0; //@line 109 "pyexpat.c"
        if ($4) { __label__ = 5; break; } else { __label__ = 1; break; } //@line 109 "pyexpat.c"
      case 1: // $bb
        var $5=$err_addr; //@line 109 "pyexpat.c"
        var $6=$name_addr; //@line 109 "pyexpat.c"
        var $7=$v; //@line 109 "pyexpat.c"
        var $8=_PyObject_SetAttrString($5, $6, $7); //@line 109 "pyexpat.c"
        var $9=($8)==-1; //@line 109 "pyexpat.c"
        var $_pr=$v;
        if ($9) { __label__ = 2; break; } else { __label__ = 6; break; } //@line 109 "pyexpat.c"
      case 2: // $bb1
        var $10=($_pr)!=0; //@line 110 "pyexpat.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 110 "pyexpat.c"
      case 3: // $bb2
        var $11=$v; //@line 110 "pyexpat.c"
        var $12=$11; //@line 110 "pyexpat.c"
        var $13=HEAP[$12]; //@line 110 "pyexpat.c"
        var $14=($13) - 1; //@line 110 "pyexpat.c"
        var $15=$v; //@line 110 "pyexpat.c"
        var $16=$15; //@line 110 "pyexpat.c"
        HEAP[$16]=$14; //@line 110 "pyexpat.c"
        var $17=$v; //@line 110 "pyexpat.c"
        var $18=$17; //@line 110 "pyexpat.c"
        var $19=HEAP[$18]; //@line 110 "pyexpat.c"
        var $20=($19)==0; //@line 110 "pyexpat.c"
        if ($20) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 110 "pyexpat.c"
      case 4: // $bb3
        var $21=$v; //@line 110 "pyexpat.c"
        var $22=$21+4; //@line 110 "pyexpat.c"
        var $23=HEAP[$22]; //@line 110 "pyexpat.c"
        var $24=$23+24; //@line 110 "pyexpat.c"
        var $25=HEAP[$24]; //@line 110 "pyexpat.c"
        var $26=$v; //@line 110 "pyexpat.c"
        FUNCTION_TABLE[$25]($26); //@line 110 "pyexpat.c"
        __label__ = 5; break; //@line 110 "pyexpat.c"
      case 5: // $bb4
        $0=0; //@line 111 "pyexpat.c"
        __label__ = 9; break; //@line 111 "pyexpat.c"
      case 6: // $bb5
        var $27=$_pr; //@line 113 "pyexpat.c"
        var $28=HEAP[$27]; //@line 113 "pyexpat.c"
        var $29=($28) - 1; //@line 113 "pyexpat.c"
        var $30=$v; //@line 113 "pyexpat.c"
        var $31=$30; //@line 113 "pyexpat.c"
        HEAP[$31]=$29; //@line 113 "pyexpat.c"
        var $32=$v; //@line 113 "pyexpat.c"
        var $33=$32; //@line 113 "pyexpat.c"
        var $34=HEAP[$33]; //@line 113 "pyexpat.c"
        var $35=($34)==0; //@line 113 "pyexpat.c"
        if ($35) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 113 "pyexpat.c"
      case 7: // $bb6
        var $36=$v; //@line 113 "pyexpat.c"
        var $37=$36+4; //@line 113 "pyexpat.c"
        var $38=HEAP[$37]; //@line 113 "pyexpat.c"
        var $39=$38+24; //@line 113 "pyexpat.c"
        var $40=HEAP[$39]; //@line 113 "pyexpat.c"
        var $41=$v; //@line 113 "pyexpat.c"
        FUNCTION_TABLE[$40]($41); //@line 113 "pyexpat.c"
        __label__ = 8; break; //@line 113 "pyexpat.c"
      case 8: // $bb7
        $0=1; //@line 114 "pyexpat.c"
        __label__ = 9; break; //@line 114 "pyexpat.c"
      case 9: // $bb8
        var $42=$0; //@line 111 "pyexpat.c"
        $retval=$42; //@line 111 "pyexpat.c"
        var $retval9=$retval; //@line 111 "pyexpat.c"
        ;
        return $retval9; //@line 111 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _set_error($self, $code) {
    var __stackBase__  = STACKTOP; STACKTOP += 256; _memset(__stackBase__, 0, 256);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $code_addr;
        var $retval;
        var $0;
        var $err;
        var $buffer=__stackBase__;
        var $parser;
        var $lineno;
        var $column;
        $self_addr=$self;
        $code_addr=$code;
        var $1=$self_addr; //@line 125 "pyexpat.c"
        var $2=$1+8; //@line 125 "pyexpat.c"
        var $3=HEAP[$2]; //@line 125 "pyexpat.c"
        $parser=$3; //@line 125 "pyexpat.c"
        var $4=$parser; //@line 126 "pyexpat.c"
        var $5=_XML_GetCurrentLineNumber($4); //@line 126 "pyexpat.c"
        $lineno=$5; //@line 126 "pyexpat.c"
        var $6=$parser; //@line 127 "pyexpat.c"
        var $7=_XML_GetCurrentColumnNumber($6); //@line 127 "pyexpat.c"
        $column=$7; //@line 127 "pyexpat.c"
        var $8=$code_addr; //@line 131 "pyexpat.c"
        var $9=_XML_ErrorString($8); //@line 131 "pyexpat.c"
        var $buffer1=$buffer; //@line 131 "pyexpat.c"
        var $10=$lineno; //@line 131 "pyexpat.c"
        var $11=$column; //@line 131 "pyexpat.c"
        var $12=_sprintf($buffer1, __str, $9, $10, $11); //@line 131 "pyexpat.c"
        var $13=HEAP[_ErrorObject]; //@line 133 "pyexpat.c"
        var $buffer2=$buffer; //@line 133 "pyexpat.c"
        var $14=_PyObject_CallFunction($13, __str1, $buffer2); //@line 133 "pyexpat.c"
        $err=$14; //@line 133 "pyexpat.c"
        var $15=$err; //@line 134 "pyexpat.c"
        var $16=($15)!=0; //@line 134 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 134 "pyexpat.c"
      case 1: // $bb
        var $17=$code_addr; //@line 134 "pyexpat.c"
        var $18=$err; //@line 134 "pyexpat.c"
        var $19=_set_error_attr($18, __str2, $17); //@line 134 "pyexpat.c"
        var $20=($19)!=0; //@line 134 "pyexpat.c"
        if ($20) { __label__ = 2; break; } else { __label__ = 5; break; } //@line 134 "pyexpat.c"
      case 2: // $bb3
        var $21=$err; //@line 134 "pyexpat.c"
        var $22=$column; //@line 134 "pyexpat.c"
        var $23=_set_error_attr($21, __str3, $22); //@line 134 "pyexpat.c"
        var $24=($23)!=0; //@line 134 "pyexpat.c"
        if ($24) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 134 "pyexpat.c"
      case 3: // $bb4
        var $25=$err; //@line 134 "pyexpat.c"
        var $26=$lineno; //@line 134 "pyexpat.c"
        var $27=_set_error_attr($25, __str4, $26); //@line 134 "pyexpat.c"
        var $28=($27)!=0; //@line 134 "pyexpat.c"
        if ($28) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 134 "pyexpat.c"
      case 4: // $bb5
        var $29=HEAP[_ErrorObject]; //@line 138 "pyexpat.c"
        var $30=$err; //@line 138 "pyexpat.c"
        _PyErr_SetObject($29, $30); //@line 138 "pyexpat.c"
        __label__ = 5; break; //@line 138 "pyexpat.c"
      case 5: // $bb6
        var $_pr=$err;
        var $31=($_pr)!=0; //@line 140 "pyexpat.c"
        if ($31) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 140 "pyexpat.c"
      case 6: // $bb7
        var $32=$err; //@line 140 "pyexpat.c"
        var $33=$32; //@line 140 "pyexpat.c"
        var $34=HEAP[$33]; //@line 140 "pyexpat.c"
        var $35=($34) - 1; //@line 140 "pyexpat.c"
        var $36=$err; //@line 140 "pyexpat.c"
        var $37=$36; //@line 140 "pyexpat.c"
        HEAP[$37]=$35; //@line 140 "pyexpat.c"
        var $38=$err; //@line 140 "pyexpat.c"
        var $39=$38; //@line 140 "pyexpat.c"
        var $40=HEAP[$39]; //@line 140 "pyexpat.c"
        var $41=($40)==0; //@line 140 "pyexpat.c"
        if ($41) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 140 "pyexpat.c"
      case 7: // $bb8
        var $42=$err; //@line 140 "pyexpat.c"
        var $43=$42+4; //@line 140 "pyexpat.c"
        var $44=HEAP[$43]; //@line 140 "pyexpat.c"
        var $45=$44+24; //@line 140 "pyexpat.c"
        var $46=HEAP[$45]; //@line 140 "pyexpat.c"
        var $47=$err; //@line 140 "pyexpat.c"
        FUNCTION_TABLE[$46]($47); //@line 140 "pyexpat.c"
        __label__ = 8; break; //@line 140 "pyexpat.c"
      case 8: // $bb9
        $0=0; //@line 141 "pyexpat.c"
        var $48=$0; //@line 141 "pyexpat.c"
        $retval=$48; //@line 141 "pyexpat.c"
        var $retval10=$retval; //@line 141 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval10; //@line 141 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _conv_string_to_unicode($str) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $str_addr;
        var $retval;
        var $0;
        $str_addr=$str;
        var $1=$str_addr; //@line 174 "pyexpat.c"
        var $2=($1)==0; //@line 174 "pyexpat.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 174 "pyexpat.c"
      case 1: // $bb
        var $3=HEAP[__Py_NoneStruct]; //@line 175 "pyexpat.c"
        var $4=($3) + 1; //@line 175 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$4; //@line 175 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 176 "pyexpat.c"
        __label__ = 3; break; //@line 176 "pyexpat.c"
      case 2: // $bb1
        var $5=$str_addr; //@line 178 "pyexpat.c"
        var $6=_strlen($5); //@line 178 "pyexpat.c"
        var $7=$str_addr; //@line 178 "pyexpat.c"
        var $8=_PyUnicodeUCS2_DecodeUTF8($7, $6, __str5); //@line 178 "pyexpat.c"
        $0=$8; //@line 178 "pyexpat.c"
        __label__ = 3; break; //@line 178 "pyexpat.c"
      case 3: // $bb2
        var $9=$0; //@line 176 "pyexpat.c"
        $retval=$9; //@line 176 "pyexpat.c"
        var $retval3=$retval; //@line 176 "pyexpat.c"
        ;
        return $retval3; //@line 176 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _conv_string_to_utf8($str) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $str_addr;
        var $retval;
        var $0;
        $str_addr=$str;
        var $1=$str_addr; //@line 204 "pyexpat.c"
        var $2=($1)==0; //@line 204 "pyexpat.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 204 "pyexpat.c"
      case 1: // $bb
        var $3=HEAP[__Py_NoneStruct]; //@line 205 "pyexpat.c"
        var $4=($3) + 1; //@line 205 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$4; //@line 205 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 206 "pyexpat.c"
        __label__ = 3; break; //@line 206 "pyexpat.c"
      case 2: // $bb1
        var $5=$str_addr; //@line 208 "pyexpat.c"
        var $6=_PyString_FromString($5); //@line 208 "pyexpat.c"
        $0=$6; //@line 208 "pyexpat.c"
        __label__ = 3; break; //@line 208 "pyexpat.c"
      case 3: // $bb2
        var $7=$0; //@line 206 "pyexpat.c"
        $retval=$7; //@line 206 "pyexpat.c"
        var $retval3=$retval; //@line 206 "pyexpat.c"
        ;
        return $retval3; //@line 206 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _error_external_entity_ref_handler($parser, $context, $base, $systemId, $publicId) {
    ;
    var __label__;
  
    var $parser_addr;
    var $context_addr;
    var $base_addr;
    var $systemId_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $context_addr=$context;
    $base_addr=$base;
    $systemId_addr=$systemId;
    $0=0; //@line 238 "pyexpat.c"
    var $1=$0; //@line 238 "pyexpat.c"
    $retval=$1; //@line 238 "pyexpat.c"
    var $retval1=$retval; //@line 238 "pyexpat.c"
    ;
    return $retval1; //@line 238 "pyexpat.c"
  }
  

  function _noop_character_data_handler($userData, $data, $len) {
    ;
    var __label__;
  
    var $userData_addr;
    var $data_addr;
    $userData_addr=$userData;
    $data_addr=$data;
    ;
    return; //@line 251 "pyexpat.c"
  }
  

  function _trace_frame($tstate, $f, $code, $val) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $tstate_addr;
        var $f_addr;
        var $code_addr;
        var $val_addr;
        var $retval;
        var $iftmp_11;
        var $iftmp_10;
        var $0;
        var $result;
        $tstate_addr=$tstate;
        $f_addr=$f;
        $code_addr=$code;
        $val_addr=$val;
        $result=0; //@line 275 "pyexpat.c"
        var $1=$tstate_addr; //@line 276 "pyexpat.c"
        var $2=$1+20; //@line 276 "pyexpat.c"
        var $3=HEAP[$2]; //@line 276 "pyexpat.c"
        var $4=($3)==0; //@line 276 "pyexpat.c"
        if ($4) { __label__ = 2; break; } else { __label__ = 1; break; } //@line 276 "pyexpat.c"
      case 1: // $bb
        var $5=$tstate_addr; //@line 276 "pyexpat.c"
        var $6=$5+16; //@line 276 "pyexpat.c"
        var $7=HEAP[$6]; //@line 276 "pyexpat.c"
        var $8=($7)!=0; //@line 276 "pyexpat.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 276 "pyexpat.c"
      case 2: // $bb1
        $0=0; //@line 277 "pyexpat.c"
        __label__ = 17; break; //@line 277 "pyexpat.c"
      case 3: // $bb2
        var $9=$tstate_addr; //@line 278 "pyexpat.c"
        var $10=$9+24; //@line 278 "pyexpat.c"
        var $11=HEAP[$10]; //@line 278 "pyexpat.c"
        var $12=($11)!=0; //@line 278 "pyexpat.c"
        if ($12) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 278 "pyexpat.c"
      case 4: // $bb3
        var $13=$tstate_addr; //@line 279 "pyexpat.c"
        var $14=$13+16; //@line 279 "pyexpat.c"
        var $15=HEAP[$14]; //@line 279 "pyexpat.c"
        var $16=($15) + 1; //@line 279 "pyexpat.c"
        var $17=$tstate_addr; //@line 279 "pyexpat.c"
        var $18=$17+16; //@line 279 "pyexpat.c"
        HEAP[$18]=$16; //@line 279 "pyexpat.c"
        var $19=$tstate_addr; //@line 280 "pyexpat.c"
        var $20=$19+24; //@line 280 "pyexpat.c"
        var $21=HEAP[$20]; //@line 280 "pyexpat.c"
        var $22=$tstate_addr; //@line 280 "pyexpat.c"
        var $23=$22+32; //@line 280 "pyexpat.c"
        var $24=HEAP[$23]; //@line 280 "pyexpat.c"
        var $25=$f_addr; //@line 280 "pyexpat.c"
        var $26=$code_addr; //@line 280 "pyexpat.c"
        var $27=$val_addr; //@line 280 "pyexpat.c"
        var $28=FUNCTION_TABLE[$21]($24, $25, $26, $27); //@line 280 "pyexpat.c"
        $result=$28; //@line 280 "pyexpat.c"
        var $29=$tstate_addr; //@line 282 "pyexpat.c"
        var $30=$29+28; //@line 282 "pyexpat.c"
        var $31=HEAP[$30]; //@line 282 "pyexpat.c"
        var $32=($31)!=0; //@line 282 "pyexpat.c"
        if ($32) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 282 "pyexpat.c"
      case 5: // $bb4
        var $33=$tstate_addr; //@line 282 "pyexpat.c"
        var $34=$33+24; //@line 282 "pyexpat.c"
        var $35=HEAP[$34]; //@line 282 "pyexpat.c"
        var $36=($35)!=0; //@line 282 "pyexpat.c"
        if ($36) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 282 "pyexpat.c"
      case 6: // $bb5
        $iftmp_10=1; //@line 282 "pyexpat.c"
        __label__ = 8; break; //@line 282 "pyexpat.c"
      case 7: // $bb6
        $iftmp_10=0; //@line 282 "pyexpat.c"
        __label__ = 8; break; //@line 282 "pyexpat.c"
      case 8: // $bb7
        var $37=$tstate_addr; //@line 282 "pyexpat.c"
        var $38=$37+20; //@line 282 "pyexpat.c"
        var $39=$iftmp_10; //@line 282 "pyexpat.c"
        HEAP[$38]=$39; //@line 282 "pyexpat.c"
        var $40=$tstate_addr; //@line 284 "pyexpat.c"
        var $41=$40+16; //@line 284 "pyexpat.c"
        var $42=HEAP[$41]; //@line 284 "pyexpat.c"
        var $43=($42) - 1; //@line 284 "pyexpat.c"
        var $44=$tstate_addr; //@line 284 "pyexpat.c"
        var $45=$44+16; //@line 284 "pyexpat.c"
        HEAP[$45]=$43; //@line 284 "pyexpat.c"
        var $46=$result; //@line 285 "pyexpat.c"
        var $47=($46)!=0; //@line 285 "pyexpat.c"
        if ($47) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 285 "pyexpat.c"
      case 9: // $bb8
        var $48=$result; //@line 286 "pyexpat.c"
        $0=$48; //@line 286 "pyexpat.c"
        __label__ = 17; break; //@line 286 "pyexpat.c"
      case 10: // $bb9
        var $49=$tstate_addr; //@line 288 "pyexpat.c"
        var $50=$49+28; //@line 288 "pyexpat.c"
        var $51=HEAP[$50]; //@line 288 "pyexpat.c"
        var $52=($51)!=0; //@line 288 "pyexpat.c"
        if ($52) { __label__ = 11; break; } else { __label__ = 16; break; } //@line 288 "pyexpat.c"
      case 11: // $bb10
        var $53=$tstate_addr; //@line 289 "pyexpat.c"
        var $54=$53+16; //@line 289 "pyexpat.c"
        var $55=HEAP[$54]; //@line 289 "pyexpat.c"
        var $56=($55) + 1; //@line 289 "pyexpat.c"
        var $57=$tstate_addr; //@line 289 "pyexpat.c"
        var $58=$57+16; //@line 289 "pyexpat.c"
        HEAP[$58]=$56; //@line 289 "pyexpat.c"
        var $59=$tstate_addr; //@line 290 "pyexpat.c"
        var $60=$59+28; //@line 290 "pyexpat.c"
        var $61=HEAP[$60]; //@line 290 "pyexpat.c"
        var $62=$tstate_addr; //@line 290 "pyexpat.c"
        var $63=$62+36; //@line 290 "pyexpat.c"
        var $64=HEAP[$63]; //@line 290 "pyexpat.c"
        var $65=$f_addr; //@line 290 "pyexpat.c"
        var $66=$code_addr; //@line 290 "pyexpat.c"
        var $67=$val_addr; //@line 290 "pyexpat.c"
        var $68=FUNCTION_TABLE[$61]($64, $65, $66, $67); //@line 290 "pyexpat.c"
        $result=$68; //@line 290 "pyexpat.c"
        var $69=$tstate_addr; //@line 292 "pyexpat.c"
        var $70=$69+28; //@line 292 "pyexpat.c"
        var $71=HEAP[$70]; //@line 292 "pyexpat.c"
        var $72=($71)!=0; //@line 292 "pyexpat.c"
        if ($72) { __label__ = 13; break; } else { __label__ = 12; break; } //@line 292 "pyexpat.c"
      case 12: // $bb11
        var $73=$tstate_addr; //@line 292 "pyexpat.c"
        var $74=$73+24; //@line 292 "pyexpat.c"
        var $75=HEAP[$74]; //@line 292 "pyexpat.c"
        var $76=($75)!=0; //@line 292 "pyexpat.c"
        if ($76) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 292 "pyexpat.c"
      case 13: // $bb12
        $iftmp_11=1; //@line 292 "pyexpat.c"
        __label__ = 15; break; //@line 292 "pyexpat.c"
      case 14: // $bb13
        $iftmp_11=0; //@line 292 "pyexpat.c"
        __label__ = 15; break; //@line 292 "pyexpat.c"
      case 15: // $bb14
        var $77=$tstate_addr; //@line 292 "pyexpat.c"
        var $78=$77+20; //@line 292 "pyexpat.c"
        var $79=$iftmp_11; //@line 292 "pyexpat.c"
        HEAP[$78]=$79; //@line 292 "pyexpat.c"
        var $80=$tstate_addr; //@line 294 "pyexpat.c"
        var $81=$80+16; //@line 294 "pyexpat.c"
        var $82=HEAP[$81]; //@line 294 "pyexpat.c"
        var $83=($82) - 1; //@line 294 "pyexpat.c"
        var $84=$tstate_addr; //@line 294 "pyexpat.c"
        var $85=$84+16; //@line 294 "pyexpat.c"
        HEAP[$85]=$83; //@line 294 "pyexpat.c"
        __label__ = 16; break; //@line 294 "pyexpat.c"
      case 16: // $bb15
        var $86=$result; //@line 296 "pyexpat.c"
        $0=$86; //@line 296 "pyexpat.c"
        __label__ = 17; break; //@line 296 "pyexpat.c"
      case 17: // $bb16
        var $87=$0; //@line 277 "pyexpat.c"
        $retval=$87; //@line 277 "pyexpat.c"
        var $retval17=$retval; //@line 277 "pyexpat.c"
        ;
        return $retval17; //@line 277 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _call_with_frame($c, $func, $args, $self) {
    var __stackBase__  = STACKTOP; STACKTOP += 12; _memset(__stackBase__, 0, 12);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $tstate_addr_i;
        var $f_addr_i;
        var $retval_i;
        var $0;
        var $type_i=__stackBase__;
        var $value_i=__stackBase__+4;
        var $traceback_i=__stackBase__+8;
        var $arg_i;
        var $err_i;
        var $c_addr;
        var $func_addr;
        var $args_addr;
        var $self_addr;
        var $retval;
        var $1;
        var $tstate;
        var $f;
        var $res;
        $c_addr=$c;
        $func_addr=$func;
        $args_addr=$args;
        $self_addr=$self;
        var $2=HEAP[__PyThreadState_Current]; //@line 339 "pyexpat.c"
        $tstate=$2; //@line 339 "pyexpat.c"
        var $3=$c_addr; //@line 343 "pyexpat.c"
        var $4=($3)==0; //@line 343 "pyexpat.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 343 "pyexpat.c"
      case 1: // $bb
        $1=0; //@line 344 "pyexpat.c"
        __label__ = 39; break; //@line 344 "pyexpat.c"
      case 2: // $bb1
        var $5=_PyEval_GetGlobals(); //@line 346 "pyexpat.c"
        var $6=$tstate; //@line 346 "pyexpat.c"
        var $7=$c_addr; //@line 346 "pyexpat.c"
        var $8=_PyFrame_New($6, $7, $5, 0); //@line 346 "pyexpat.c"
        $f=$8; //@line 346 "pyexpat.c"
        var $9=$f; //@line 347 "pyexpat.c"
        var $10=($9)==0; //@line 347 "pyexpat.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 347 "pyexpat.c"
      case 3: // $bb2
        $1=0; //@line 348 "pyexpat.c"
        __label__ = 39; break; //@line 348 "pyexpat.c"
      case 4: // $bb3
        var $11=$tstate; //@line 349 "pyexpat.c"
        var $12=$11+8; //@line 349 "pyexpat.c"
        var $13=$f; //@line 349 "pyexpat.c"
        HEAP[$12]=$13; //@line 349 "pyexpat.c"
        var $14=$tstate; //@line 351 "pyexpat.c"
        var $15=$f; //@line 351 "pyexpat.c"
        var $16=_trace_frame($14, $15, 0, __Py_NoneStruct); //@line 351 "pyexpat.c"
        var $17=($16) < 0; //@line 351 "pyexpat.c"
        if ($17) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 351 "pyexpat.c"
      case 5: // $bb4
        $1=0; //@line 352 "pyexpat.c"
        __label__ = 39; break; //@line 352 "pyexpat.c"
      case 6: // $bb5
        var $18=$func_addr; //@line 355 "pyexpat.c"
        var $19=$args_addr; //@line 355 "pyexpat.c"
        var $20=_PyEval_CallObjectWithKeywords($18, $19, 0); //@line 355 "pyexpat.c"
        $res=$20; //@line 355 "pyexpat.c"
        var $21=$res; //@line 356 "pyexpat.c"
        var $22=($21)==0; //@line 356 "pyexpat.c"
        var $23=$tstate; //@line 357 "pyexpat.c"
        if ($22) { __label__ = 7; break; } else { __label__ = 31; break; } //@line 356 "pyexpat.c"
      case 7: // $bb6
        var $24=$23+48; //@line 357 "pyexpat.c"
        var $25=HEAP[$24]; //@line 357 "pyexpat.c"
        var $26=($25)==0; //@line 357 "pyexpat.c"
        if ($26) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 357 "pyexpat.c"
      case 8: // $bb7
        var $27=$f; //@line 358 "pyexpat.c"
        var $28=_PyTraceBack_Here($27); //@line 358 "pyexpat.c"
        __label__ = 9; break; //@line 358 "pyexpat.c"
      case 9: // $bb8
        var $29=$self_addr; //@line 359 "pyexpat.c"
        var $30=$29+8; //@line 359 "pyexpat.c"
        var $31=HEAP[$30]; //@line 359 "pyexpat.c"
        var $32=_XML_StopParser($31, 0); //@line 359 "pyexpat.c"
        var $33=$tstate; //@line 361 "pyexpat.c"
        var $34=$f; //@line 361 "pyexpat.c"
        $tstate_addr_i=$33;
        $f_addr_i=$34;
        var $35=$tstate_addr_i; //@line 305 "pyexpat.c"
        var $36=$35+28; //@line 305 "pyexpat.c"
        var $37=HEAP[$36]; //@line 305 "pyexpat.c"
        var $38=($37)==0; //@line 305 "pyexpat.c"
        if ($38) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 305 "pyexpat.c"
      case 10: // $bb_i
        $0=0; //@line 306 "pyexpat.c"
        __label__ = 28; break; //@line 306 "pyexpat.c"
      case 11: // $bb1_i
        _PyErr_Fetch($type_i, $value_i, $traceback_i); //@line 308 "pyexpat.c"
        var $39=HEAP[$value_i]; //@line 309 "pyexpat.c"
        var $40=($39)==0; //@line 309 "pyexpat.c"
        if ($40) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 309 "pyexpat.c"
      case 12: // $bb2_i
        HEAP[$value_i]=__Py_NoneStruct; //@line 310 "pyexpat.c"
        var $41=HEAP[$value_i]; //@line 311 "pyexpat.c"
        var $42=$41; //@line 311 "pyexpat.c"
        var $43=HEAP[$42]; //@line 311 "pyexpat.c"
        var $44=($43) + 1; //@line 311 "pyexpat.c"
        var $45=$41; //@line 311 "pyexpat.c"
        HEAP[$45]=$44; //@line 311 "pyexpat.c"
        __label__ = 13; break; //@line 311 "pyexpat.c"
      case 13: // $bb3_i
        var $46=HEAP[$traceback_i]; //@line 316 "pyexpat.c"
        var $47=HEAP[$value_i]; //@line 316 "pyexpat.c"
        var $48=HEAP[$type_i]; //@line 316 "pyexpat.c"
        var $49=_PyTuple_Pack(3, $48, $47, $46); //@line 316 "pyexpat.c"
        $arg_i=$49; //@line 316 "pyexpat.c"
        var $50=($49)==0; //@line 318 "pyexpat.c"
        if ($50) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 318 "pyexpat.c"
      case 14: // $bb4_i
        var $51=HEAP[$traceback_i]; //@line 319 "pyexpat.c"
        var $52=HEAP[$value_i]; //@line 319 "pyexpat.c"
        var $53=HEAP[$type_i]; //@line 319 "pyexpat.c"
        _PyErr_Restore($53, $52, $51); //@line 319 "pyexpat.c"
        $0=0; //@line 320 "pyexpat.c"
        __label__ = 28; break; //@line 320 "pyexpat.c"
      case 15: // $bb5_i
        var $54=$tstate_addr_i; //@line 322 "pyexpat.c"
        var $55=$f_addr_i; //@line 322 "pyexpat.c"
        var $56=$arg_i; //@line 322 "pyexpat.c"
        var $57=_trace_frame($54, $55, 1, $56); //@line 322 "pyexpat.c"
        $err_i=$57; //@line 322 "pyexpat.c"
        var $58=$arg_i; //@line 323 "pyexpat.c"
        var $59=$58; //@line 323 "pyexpat.c"
        var $60=HEAP[$59]; //@line 323 "pyexpat.c"
        var $61=($60) - 1; //@line 323 "pyexpat.c"
        var $62=$arg_i; //@line 323 "pyexpat.c"
        var $63=$62; //@line 323 "pyexpat.c"
        HEAP[$63]=$61; //@line 323 "pyexpat.c"
        var $64=$arg_i; //@line 323 "pyexpat.c"
        var $65=$64; //@line 323 "pyexpat.c"
        var $66=HEAP[$65]; //@line 323 "pyexpat.c"
        var $67=($66)==0; //@line 323 "pyexpat.c"
        if ($67) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 323 "pyexpat.c"
      case 16: // $bb6_i
        var $68=$arg_i; //@line 323 "pyexpat.c"
        var $69=$68+4; //@line 323 "pyexpat.c"
        var $70=HEAP[$69]; //@line 323 "pyexpat.c"
        var $71=$70+24; //@line 323 "pyexpat.c"
        var $72=HEAP[$71]; //@line 323 "pyexpat.c"
        var $73=$arg_i; //@line 323 "pyexpat.c"
        FUNCTION_TABLE[$72]($73); //@line 323 "pyexpat.c"
        __label__ = 17; break; //@line 323 "pyexpat.c"
      case 17: // $bb7_i
        var $74=$err_i; //@line 324 "pyexpat.c"
        var $75=($74)==0; //@line 324 "pyexpat.c"
        if ($75) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 324 "pyexpat.c"
      case 18: // $bb8_i
        var $76=HEAP[$traceback_i]; //@line 325 "pyexpat.c"
        var $77=HEAP[$value_i]; //@line 325 "pyexpat.c"
        var $78=HEAP[$type_i]; //@line 325 "pyexpat.c"
        _PyErr_Restore($78, $77, $76); //@line 325 "pyexpat.c"
        __label__ = 29; break; //@line 325 "pyexpat.c"
      case 19: // $bb9_i
        var $79=HEAP[$type_i]; //@line 327 "pyexpat.c"
        var $80=($79)!=0; //@line 327 "pyexpat.c"
        if ($80) { __label__ = 20; break; } else { __label__ = 22; break; } //@line 327 "pyexpat.c"
      case 20: // $bb10_i
        var $81=HEAP[$type_i]; //@line 327 "pyexpat.c"
        var $82=$81; //@line 327 "pyexpat.c"
        var $83=HEAP[$82]; //@line 327 "pyexpat.c"
        var $84=($83) - 1; //@line 327 "pyexpat.c"
        var $85=$81; //@line 327 "pyexpat.c"
        HEAP[$85]=$84; //@line 327 "pyexpat.c"
        var $86=$81; //@line 327 "pyexpat.c"
        var $87=HEAP[$86]; //@line 327 "pyexpat.c"
        var $88=($87)==0; //@line 327 "pyexpat.c"
        if ($88) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 327 "pyexpat.c"
      case 21: // $bb11_i
        var $89=HEAP[$type_i]; //@line 327 "pyexpat.c"
        var $90=$89+4; //@line 327 "pyexpat.c"
        var $91=HEAP[$90]; //@line 327 "pyexpat.c"
        var $92=$91+24; //@line 327 "pyexpat.c"
        var $93=HEAP[$92]; //@line 327 "pyexpat.c"
        var $94=HEAP[$type_i]; //@line 327 "pyexpat.c"
        FUNCTION_TABLE[$93]($94); //@line 327 "pyexpat.c"
        __label__ = 22; break; //@line 327 "pyexpat.c"
      case 22: // $bb12_i
        var $95=HEAP[$value_i]; //@line 328 "pyexpat.c"
        var $96=($95)!=0; //@line 328 "pyexpat.c"
        if ($96) { __label__ = 23; break; } else { __label__ = 25; break; } //@line 328 "pyexpat.c"
      case 23: // $bb13_i
        var $97=HEAP[$value_i]; //@line 328 "pyexpat.c"
        var $98=$97; //@line 328 "pyexpat.c"
        var $99=HEAP[$98]; //@line 328 "pyexpat.c"
        var $100=($99) - 1; //@line 328 "pyexpat.c"
        var $101=$97; //@line 328 "pyexpat.c"
        HEAP[$101]=$100; //@line 328 "pyexpat.c"
        var $102=$97; //@line 328 "pyexpat.c"
        var $103=HEAP[$102]; //@line 328 "pyexpat.c"
        var $104=($103)==0; //@line 328 "pyexpat.c"
        if ($104) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 328 "pyexpat.c"
      case 24: // $bb14_i
        var $105=HEAP[$value_i]; //@line 328 "pyexpat.c"
        var $106=$105+4; //@line 328 "pyexpat.c"
        var $107=HEAP[$106]; //@line 328 "pyexpat.c"
        var $108=$107+24; //@line 328 "pyexpat.c"
        var $109=HEAP[$108]; //@line 328 "pyexpat.c"
        var $110=HEAP[$value_i]; //@line 328 "pyexpat.c"
        FUNCTION_TABLE[$109]($110); //@line 328 "pyexpat.c"
        __label__ = 25; break; //@line 328 "pyexpat.c"
      case 25: // $bb15_i
        var $111=HEAP[$traceback_i]; //@line 329 "pyexpat.c"
        var $112=($111)!=0; //@line 329 "pyexpat.c"
        if ($112) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 329 "pyexpat.c"
      case 26: // $bb16_i
        var $113=HEAP[$traceback_i]; //@line 329 "pyexpat.c"
        var $114=$113; //@line 329 "pyexpat.c"
        var $115=HEAP[$114]; //@line 329 "pyexpat.c"
        var $116=($115) - 1; //@line 329 "pyexpat.c"
        var $117=$113; //@line 329 "pyexpat.c"
        HEAP[$117]=$116; //@line 329 "pyexpat.c"
        var $118=$113; //@line 329 "pyexpat.c"
        var $119=HEAP[$118]; //@line 329 "pyexpat.c"
        var $120=($119)==0; //@line 329 "pyexpat.c"
        if ($120) { __label__ = 27; break; } else { __label__ = 29; break; } //@line 329 "pyexpat.c"
      case 27: // $bb17_i
        var $121=HEAP[$traceback_i]; //@line 329 "pyexpat.c"
        var $122=$121+4; //@line 329 "pyexpat.c"
        var $123=HEAP[$122]; //@line 329 "pyexpat.c"
        var $124=$123+24; //@line 329 "pyexpat.c"
        var $125=HEAP[$124]; //@line 329 "pyexpat.c"
        var $126=HEAP[$traceback_i]; //@line 329 "pyexpat.c"
        FUNCTION_TABLE[$125]($126); //@line 329 "pyexpat.c"
        __label__ = 29; break; //@line 329 "pyexpat.c"
      case 28: // $trace_frame_exc_exit_thread
        $retval_i=0; //@line 306 "pyexpat.c"
        __label__ = 36; break;
      case 29: // $trace_frame_exc_exit
        var $127=$err_i; //@line 331 "pyexpat.c"
        $0=$127; //@line 331 "pyexpat.c"
        $retval_i=$127; //@line 306 "pyexpat.c"
        var $128=($127) < 0; //@line 361 "pyexpat.c"
        if ($128) { __label__ = 30; break; } else { __label__ = 36; break; } //@line 361 "pyexpat.c"
      case 30: // $bb9
        $1=0; //@line 362 "pyexpat.c"
        __label__ = 39; break; //@line 362 "pyexpat.c"
      case 31: // $bb11
        var $129=$f; //@line 366 "pyexpat.c"
        var $130=$res; //@line 366 "pyexpat.c"
        var $131=_trace_frame($23, $129, 3, $130); //@line 366 "pyexpat.c"
        var $132=($131) < 0; //@line 366 "pyexpat.c"
        if ($132) { __label__ = 32; break; } else { __label__ = 36; break; } //@line 366 "pyexpat.c"
      case 32: // $bb12
        var $133=$res; //@line 367 "pyexpat.c"
        var $134=($133)!=0; //@line 367 "pyexpat.c"
        if ($134) { __label__ = 33; break; } else { __label__ = 35; break; } //@line 367 "pyexpat.c"
      case 33: // $bb13
        var $135=$res; //@line 367 "pyexpat.c"
        var $136=$135; //@line 367 "pyexpat.c"
        var $137=HEAP[$136]; //@line 367 "pyexpat.c"
        var $138=($137) - 1; //@line 367 "pyexpat.c"
        var $139=$res; //@line 367 "pyexpat.c"
        var $140=$139; //@line 367 "pyexpat.c"
        HEAP[$140]=$138; //@line 367 "pyexpat.c"
        var $141=$res; //@line 367 "pyexpat.c"
        var $142=$141; //@line 367 "pyexpat.c"
        var $143=HEAP[$142]; //@line 367 "pyexpat.c"
        var $144=($143)==0; //@line 367 "pyexpat.c"
        if ($144) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 367 "pyexpat.c"
      case 34: // $bb14
        var $145=$res; //@line 367 "pyexpat.c"
        var $146=$145+4; //@line 367 "pyexpat.c"
        var $147=HEAP[$146]; //@line 367 "pyexpat.c"
        var $148=$147+24; //@line 367 "pyexpat.c"
        var $149=HEAP[$148]; //@line 367 "pyexpat.c"
        var $150=$res; //@line 367 "pyexpat.c"
        FUNCTION_TABLE[$149]($150); //@line 367 "pyexpat.c"
        __label__ = 35; break; //@line 367 "pyexpat.c"
      case 35: // $bb15
        $res=0; //@line 368 "pyexpat.c"
        __label__ = 36; break; //@line 368 "pyexpat.c"
      case 36: // $bb16
        var $151=$f; //@line 374 "pyexpat.c"
        var $152=$151+12; //@line 374 "pyexpat.c"
        var $153=HEAP[$152]; //@line 374 "pyexpat.c"
        var $154=$tstate; //@line 374 "pyexpat.c"
        var $155=$154+8; //@line 374 "pyexpat.c"
        HEAP[$155]=$153; //@line 374 "pyexpat.c"
        var $156=$f; //@line 375 "pyexpat.c"
        var $157=$156; //@line 375 "pyexpat.c"
        var $158=$157; //@line 375 "pyexpat.c"
        var $159=HEAP[$158]; //@line 375 "pyexpat.c"
        var $160=($159) - 1; //@line 375 "pyexpat.c"
        var $161=$157; //@line 375 "pyexpat.c"
        HEAP[$161]=$160; //@line 375 "pyexpat.c"
        var $162=$157; //@line 375 "pyexpat.c"
        var $163=HEAP[$162]; //@line 375 "pyexpat.c"
        var $164=($163)==0; //@line 375 "pyexpat.c"
        if ($164) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 375 "pyexpat.c"
      case 37: // $bb17
        var $165=$f; //@line 375 "pyexpat.c"
        var $166=$165; //@line 375 "pyexpat.c"
        var $167=$166+4; //@line 375 "pyexpat.c"
        var $168=HEAP[$167]; //@line 375 "pyexpat.c"
        var $169=$168+24; //@line 375 "pyexpat.c"
        var $170=HEAP[$169]; //@line 375 "pyexpat.c"
        var $171=$f; //@line 375 "pyexpat.c"
        var $172=$171; //@line 375 "pyexpat.c"
        FUNCTION_TABLE[$170]($172); //@line 375 "pyexpat.c"
        __label__ = 38; break; //@line 375 "pyexpat.c"
      case 38: // $bb18
        var $173=$res; //@line 376 "pyexpat.c"
        $1=$173; //@line 376 "pyexpat.c"
        __label__ = 39; break; //@line 376 "pyexpat.c"
      case 39: // $bb19
        var $174=$1; //@line 344 "pyexpat.c"
        $retval=$174; //@line 344 "pyexpat.c"
        var $retval20=$retval; //@line 344 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval20; //@line 344 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _string_intern($self, $str) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $str_addr;
        var $retval;
        var $0;
        var $iftmp_38;
        var $result;
        var $value;
        $self_addr=$self;
        $str_addr=$str;
        var $1=$self_addr; //@line 390 "pyexpat.c"
        var $2=$1+12; //@line 390 "pyexpat.c"
        var $3=HEAP[$2]; //@line 390 "pyexpat.c"
        var $4=($3)!=0; //@line 390 "pyexpat.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 390 "pyexpat.c"
      case 1: // $bb
        $iftmp_38=(FUNCTION_TABLE_OFFSET + 2); //@line 390 "pyexpat.c"
        __label__ = 3; break; //@line 390 "pyexpat.c"
      case 2: // $bb1
        $iftmp_38=(FUNCTION_TABLE_OFFSET + 4); //@line 390 "pyexpat.c"
        __label__ = 3; break; //@line 390 "pyexpat.c"
      case 3: // $bb2
        var $5=$iftmp_38; //@line 390 "pyexpat.c"
        var $6=$str_addr; //@line 390 "pyexpat.c"
        var $7=FUNCTION_TABLE[$5]($6); //@line 390 "pyexpat.c"
        $result=$7; //@line 390 "pyexpat.c"
        var $8=($7)==0; //@line 393 "pyexpat.c"
        if ($8) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 393 "pyexpat.c"
      case 4: // $bb3
        var $9=$result; //@line 394 "pyexpat.c"
        $0=$9; //@line 394 "pyexpat.c"
        __label__ = 14; break; //@line 394 "pyexpat.c"
      case 5: // $bb4
        var $10=$self_addr; //@line 395 "pyexpat.c"
        var $11=$10+44; //@line 395 "pyexpat.c"
        var $12=HEAP[$11]; //@line 395 "pyexpat.c"
        var $13=($12)==0; //@line 395 "pyexpat.c"
        if ($13) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 395 "pyexpat.c"
      case 6: // $bb5
        var $14=$result; //@line 396 "pyexpat.c"
        $0=$14; //@line 396 "pyexpat.c"
        __label__ = 14; break; //@line 396 "pyexpat.c"
      case 7: // $bb6
        var $15=$self_addr; //@line 397 "pyexpat.c"
        var $16=$15+44; //@line 397 "pyexpat.c"
        var $17=HEAP[$16]; //@line 397 "pyexpat.c"
        var $18=$result; //@line 397 "pyexpat.c"
        var $19=_PyDict_GetItem($17, $18); //@line 397 "pyexpat.c"
        $value=$19; //@line 397 "pyexpat.c"
        var $20=$value; //@line 398 "pyexpat.c"
        var $21=($20)==0; //@line 398 "pyexpat.c"
        if ($21) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 398 "pyexpat.c"
      case 8: // $bb7
        var $22=$self_addr; //@line 399 "pyexpat.c"
        var $23=$22+44; //@line 399 "pyexpat.c"
        var $24=HEAP[$23]; //@line 399 "pyexpat.c"
        var $25=$result; //@line 399 "pyexpat.c"
        var $26=$result; //@line 399 "pyexpat.c"
        var $27=_PyDict_SetItem($24, $25, $26); //@line 399 "pyexpat.c"
        var $28=($27)==0; //@line 399 "pyexpat.c"
        if ($28) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 399 "pyexpat.c"
      case 9: // $bb8
        var $29=$result; //@line 400 "pyexpat.c"
        $0=$29; //@line 400 "pyexpat.c"
        __label__ = 14; break; //@line 400 "pyexpat.c"
      case 10: // $bb9
        $0=0; //@line 402 "pyexpat.c"
        __label__ = 14; break; //@line 402 "pyexpat.c"
      case 11: // $bb10
        var $30=$value; //@line 404 "pyexpat.c"
        var $31=$30; //@line 404 "pyexpat.c"
        var $32=HEAP[$31]; //@line 404 "pyexpat.c"
        var $33=($32) + 1; //@line 404 "pyexpat.c"
        var $34=$value; //@line 404 "pyexpat.c"
        var $35=$34; //@line 404 "pyexpat.c"
        HEAP[$35]=$33; //@line 404 "pyexpat.c"
        var $36=$result; //@line 405 "pyexpat.c"
        var $37=$36; //@line 405 "pyexpat.c"
        var $38=HEAP[$37]; //@line 405 "pyexpat.c"
        var $39=($38) - 1; //@line 405 "pyexpat.c"
        var $40=$result; //@line 405 "pyexpat.c"
        var $41=$40; //@line 405 "pyexpat.c"
        HEAP[$41]=$39; //@line 405 "pyexpat.c"
        var $42=$result; //@line 405 "pyexpat.c"
        var $43=$42; //@line 405 "pyexpat.c"
        var $44=HEAP[$43]; //@line 405 "pyexpat.c"
        var $45=($44)==0; //@line 405 "pyexpat.c"
        if ($45) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 405 "pyexpat.c"
      case 12: // $bb11
        var $46=$result; //@line 405 "pyexpat.c"
        var $47=$46+4; //@line 405 "pyexpat.c"
        var $48=HEAP[$47]; //@line 405 "pyexpat.c"
        var $49=$48+24; //@line 405 "pyexpat.c"
        var $50=HEAP[$49]; //@line 405 "pyexpat.c"
        var $51=$result; //@line 405 "pyexpat.c"
        FUNCTION_TABLE[$50]($51); //@line 405 "pyexpat.c"
        __label__ = 13; break; //@line 405 "pyexpat.c"
      case 13: // $bb12
        var $52=$value; //@line 406 "pyexpat.c"
        $0=$52; //@line 406 "pyexpat.c"
        __label__ = 14; break; //@line 406 "pyexpat.c"
      case 14: // $bb13
        var $53=$0; //@line 394 "pyexpat.c"
        $retval=$53; //@line 394 "pyexpat.c"
        var $retval14=$retval; //@line 394 "pyexpat.c"
        ;
        return $retval14; //@line 394 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _call_character_handler($self, $buffer, $len) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i12;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i9;
        var $0;
        var $self_addr_i8;
        var $str_addr_i2;
        var $len_addr_i3;
        var $retval_i4;
        var $1;
        var $str_addr_i;
        var $len_addr_i;
        var $retval_i1;
        var $2;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $3;
        var $handler_i;
        var $self_addr;
        var $buffer_addr;
        var $len_addr;
        var $retval;
        var $iftmp_39;
        var $4;
        var $args;
        var $temp;
        $self_addr=$self;
        $buffer_addr=$buffer;
        $len_addr=$len;
        var $5=$self_addr; //@line 418 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=3;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $3=$14; //@line 148 "pyexpat.c"
        var $15=$3; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)==0; //@line 418 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 418 "pyexpat.c"
      case 1: // $bb
        $4=-1; //@line 419 "pyexpat.c"
        __label__ = 26; break; //@line 419 "pyexpat.c"
      case 2: // $bb1
        var $17=_PyTuple_New(1); //@line 421 "pyexpat.c"
        $args=$17; //@line 421 "pyexpat.c"
        var $18=$args; //@line 422 "pyexpat.c"
        var $19=($18)==0; //@line 422 "pyexpat.c"
        if ($19) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 422 "pyexpat.c"
      case 3: // $bb2
        $4=-1; //@line 423 "pyexpat.c"
        __label__ = 26; break; //@line 423 "pyexpat.c"
      case 4: // $bb3
        var $20=$self_addr; //@line 425 "pyexpat.c"
        var $21=$20+12; //@line 425 "pyexpat.c"
        var $22=HEAP[$21]; //@line 425 "pyexpat.c"
        var $23=($22)!=0; //@line 425 "pyexpat.c"
        var $24=$buffer_addr; //@line 425 "pyexpat.c"
        var $25=$len_addr; //@line 425 "pyexpat.c"
        if ($23) { __label__ = 5; break; } else { __label__ = 9; break; } //@line 425 "pyexpat.c"
      case 5: // $bb4
        $str_addr_i=$24;
        $len_addr_i=$25;
        var $26=$str_addr_i; //@line 187 "pyexpat.c"
        var $27=($26)==0; //@line 187 "pyexpat.c"
        if ($27) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 187 "pyexpat.c"
      case 6: // $bb_i
        var $28=HEAP[__Py_NoneStruct]; //@line 188 "pyexpat.c"
        var $29=($28) + 1; //@line 188 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$29; //@line 188 "pyexpat.c"
        $2=__Py_NoneStruct; //@line 189 "pyexpat.c"
        __label__ = 8; break; //@line 189 "pyexpat.c"
      case 7: // $bb1_i
        var $30=$str_addr_i; //@line 191 "pyexpat.c"
        var $31=$len_addr_i; //@line 191 "pyexpat.c"
        var $32=_PyUnicodeUCS2_DecodeUTF8($30, $31, __str5); //@line 191 "pyexpat.c"
        $2=$32; //@line 191 "pyexpat.c"
        __label__ = 8; break; //@line 191 "pyexpat.c"
      case 8: // $conv_string_len_to_unicode_exit
        var $33=$2; //@line 189 "pyexpat.c"
        $retval_i1=$33; //@line 189 "pyexpat.c"
        var $retval3_i=$retval_i1; //@line 189 "pyexpat.c"
        $iftmp_39=$retval3_i; //@line 425 "pyexpat.c"
        __lastLabel__ = 8; __label__ = 13; break; //@line 425 "pyexpat.c"
      case 9: // $bb5
        $str_addr_i2=$24;
        $len_addr_i3=$25;
        var $34=$str_addr_i2; //@line 217 "pyexpat.c"
        var $35=($34)==0; //@line 217 "pyexpat.c"
        if ($35) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 217 "pyexpat.c"
      case 10: // $bb_i5
        var $36=HEAP[__Py_NoneStruct]; //@line 218 "pyexpat.c"
        var $37=($36) + 1; //@line 218 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$37; //@line 218 "pyexpat.c"
        $1=__Py_NoneStruct; //@line 219 "pyexpat.c"
        __label__ = 12; break; //@line 219 "pyexpat.c"
      case 11: // $bb1_i6
        var $38=$str_addr_i2; //@line 221 "pyexpat.c"
        var $39=$len_addr_i3; //@line 221 "pyexpat.c"
        var $40=_PyString_FromStringAndSize($38, $39); //@line 221 "pyexpat.c"
        $1=$40; //@line 221 "pyexpat.c"
        __label__ = 12; break; //@line 221 "pyexpat.c"
      case 12: // $conv_string_len_to_utf8_exit
        var $41=$1; //@line 219 "pyexpat.c"
        $retval_i4=$41; //@line 219 "pyexpat.c"
        var $retval3_i7=$retval_i4; //@line 219 "pyexpat.c"
        $iftmp_39=$retval3_i7; //@line 425 "pyexpat.c"
        __lastLabel__ = 12; __label__ = 13; break; //@line 425 "pyexpat.c"
      case 13: // $bb6
        var $42=__lastLabel__ == 12 ? $retval3_i7 : ($retval3_i);
        $temp=$42; //@line 425 "pyexpat.c"
        var $43=($42)==0; //@line 431 "pyexpat.c"
        var $44=$args; //@line 432 "pyexpat.c"
        if ($43) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 431 "pyexpat.c"
      case 14: // $bb7
        var $45=$44; //@line 432 "pyexpat.c"
        var $46=HEAP[$45]; //@line 432 "pyexpat.c"
        var $47=($46) - 1; //@line 432 "pyexpat.c"
        var $48=$args; //@line 432 "pyexpat.c"
        var $49=$48; //@line 432 "pyexpat.c"
        HEAP[$49]=$47; //@line 432 "pyexpat.c"
        var $50=$args; //@line 432 "pyexpat.c"
        var $51=$50; //@line 432 "pyexpat.c"
        var $52=HEAP[$51]; //@line 432 "pyexpat.c"
        var $53=($52)==0; //@line 432 "pyexpat.c"
        if ($53) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 432 "pyexpat.c"
      case 15: // $bb8
        var $54=$args; //@line 432 "pyexpat.c"
        var $55=$54+4; //@line 432 "pyexpat.c"
        var $56=HEAP[$55]; //@line 432 "pyexpat.c"
        var $57=$56+24; //@line 432 "pyexpat.c"
        var $58=HEAP[$57]; //@line 432 "pyexpat.c"
        var $59=$args; //@line 432 "pyexpat.c"
        FUNCTION_TABLE[$58]($59); //@line 432 "pyexpat.c"
        __label__ = 16; break; //@line 432 "pyexpat.c"
      case 16: // $bb9
        var $60=$self_addr; //@line 433 "pyexpat.c"
        $self_addr_i8=$60;
        var $61=$self_addr_i8; //@line 256 "pyexpat.c"
        _clear_handlers($61, 0); //@line 256 "pyexpat.c"
        var $62=$self_addr_i8; //@line 257 "pyexpat.c"
        var $63=$62+8; //@line 257 "pyexpat.c"
        var $64=HEAP[$63]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($64, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $65=$self_addr; //@line 434 "pyexpat.c"
        var $66=$65+8; //@line 434 "pyexpat.c"
        var $67=HEAP[$66]; //@line 434 "pyexpat.c"
        _XML_SetCharacterDataHandler($67, (FUNCTION_TABLE_OFFSET + 8)); //@line 434 "pyexpat.c"
        $4=-1; //@line 436 "pyexpat.c"
        __label__ = 26; break; //@line 436 "pyexpat.c"
      case 17: // $bb10
        var $68=$44; //@line 438 "pyexpat.c"
        var $69=$68+12; //@line 438 "pyexpat.c"
        var $70=$69; //@line 438 "pyexpat.c"
        var $71=$temp; //@line 438 "pyexpat.c"
        HEAP[$70]=$71; //@line 438 "pyexpat.c"
        var $72=$self_addr; //@line 440 "pyexpat.c"
        var $73=$72+24; //@line 440 "pyexpat.c"
        HEAP[$73]=1; //@line 440 "pyexpat.c"
        var $74=$self_addr; //@line 441 "pyexpat.c"
        var $75=$74+48; //@line 441 "pyexpat.c"
        var $76=HEAP[$75]; //@line 441 "pyexpat.c"
        var $77=$76+12; //@line 441 "pyexpat.c"
        var $78=HEAP[$77]; //@line 441 "pyexpat.c"
        $slot_addr_i=3;
        $func_name_addr_i=__str7;
        $lineno_addr_i=441;
        var $79=$slot_addr_i; //@line 264 "pyexpat.c"
        var $80=_handler_info+$79*20; //@line 264 "pyexpat.c"
        var $81=$80+12; //@line 264 "pyexpat.c"
        var $82=HEAP[$81]; //@line 264 "pyexpat.c"
        var $83=($82)==0; //@line 264 "pyexpat.c"
        if ($83) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 264 "pyexpat.c"
      case 18: // $bb_i10
        var $84=$slot_addr_i; //@line 265 "pyexpat.c"
        var $85=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $86=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $87=_PyCode_NewEmpty(__str6, $85, $86); //@line 265 "pyexpat.c"
        var $88=_handler_info+$84*20; //@line 265 "pyexpat.c"
        var $89=$88+12; //@line 265 "pyexpat.c"
        HEAP[$89]=$87; //@line 265 "pyexpat.c"
        __label__ = 19; break; //@line 265 "pyexpat.c"
      case 19: // $getcode_exit
        var $90=$slot_addr_i; //@line 268 "pyexpat.c"
        var $91=_handler_info+$90*20; //@line 268 "pyexpat.c"
        var $92=$91+12; //@line 268 "pyexpat.c"
        var $93=HEAP[$92]; //@line 268 "pyexpat.c"
        $0=$93; //@line 268 "pyexpat.c"
        var $94=$0; //@line 268 "pyexpat.c"
        $retval_i9=$94; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i9; //@line 268 "pyexpat.c"
        var $95=$args; //@line 441 "pyexpat.c"
        var $96=$self_addr; //@line 441 "pyexpat.c"
        var $97=_call_with_frame($retval2_i, $78, $95, $96); //@line 441 "pyexpat.c"
        $temp=$97; //@line 441 "pyexpat.c"
        var $98=$self_addr; //@line 444 "pyexpat.c"
        var $99=$98+24; //@line 444 "pyexpat.c"
        HEAP[$99]=0; //@line 444 "pyexpat.c"
        var $100=$args; //@line 445 "pyexpat.c"
        var $101=$100; //@line 445 "pyexpat.c"
        var $102=HEAP[$101]; //@line 445 "pyexpat.c"
        var $103=($102) - 1; //@line 445 "pyexpat.c"
        var $104=$args; //@line 445 "pyexpat.c"
        var $105=$104; //@line 445 "pyexpat.c"
        HEAP[$105]=$103; //@line 445 "pyexpat.c"
        var $106=$args; //@line 445 "pyexpat.c"
        var $107=$106; //@line 445 "pyexpat.c"
        var $108=HEAP[$107]; //@line 445 "pyexpat.c"
        var $109=($108)==0; //@line 445 "pyexpat.c"
        if ($109) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 445 "pyexpat.c"
      case 20: // $bb11
        var $110=$args; //@line 445 "pyexpat.c"
        var $111=$110+4; //@line 445 "pyexpat.c"
        var $112=HEAP[$111]; //@line 445 "pyexpat.c"
        var $113=$112+24; //@line 445 "pyexpat.c"
        var $114=HEAP[$113]; //@line 445 "pyexpat.c"
        var $115=$args; //@line 445 "pyexpat.c"
        FUNCTION_TABLE[$114]($115); //@line 445 "pyexpat.c"
        __label__ = 21; break; //@line 445 "pyexpat.c"
      case 21: // $bb12
        var $116=$temp; //@line 446 "pyexpat.c"
        var $117=($116)==0; //@line 446 "pyexpat.c"
        if ($117) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 446 "pyexpat.c"
      case 22: // $bb13
        var $118=$self_addr; //@line 447 "pyexpat.c"
        $self_addr_i12=$118;
        var $119=$self_addr_i12; //@line 256 "pyexpat.c"
        _clear_handlers($119, 0); //@line 256 "pyexpat.c"
        var $120=$self_addr_i12; //@line 257 "pyexpat.c"
        var $121=$120+8; //@line 257 "pyexpat.c"
        var $122=HEAP[$121]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($122, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $123=$self_addr; //@line 448 "pyexpat.c"
        var $124=$123+8; //@line 448 "pyexpat.c"
        var $125=HEAP[$124]; //@line 448 "pyexpat.c"
        _XML_SetCharacterDataHandler($125, (FUNCTION_TABLE_OFFSET + 8)); //@line 448 "pyexpat.c"
        $4=-1; //@line 450 "pyexpat.c"
        __label__ = 26; break; //@line 450 "pyexpat.c"
      case 23: // $bb14
        var $126=$temp; //@line 452 "pyexpat.c"
        var $127=$126; //@line 452 "pyexpat.c"
        var $128=HEAP[$127]; //@line 452 "pyexpat.c"
        var $129=($128) - 1; //@line 452 "pyexpat.c"
        var $130=$temp; //@line 452 "pyexpat.c"
        var $131=$130; //@line 452 "pyexpat.c"
        HEAP[$131]=$129; //@line 452 "pyexpat.c"
        var $132=$temp; //@line 452 "pyexpat.c"
        var $133=$132; //@line 452 "pyexpat.c"
        var $134=HEAP[$133]; //@line 452 "pyexpat.c"
        var $135=($134)==0; //@line 452 "pyexpat.c"
        if ($135) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 452 "pyexpat.c"
      case 24: // $bb15
        var $136=$temp; //@line 452 "pyexpat.c"
        var $137=$136+4; //@line 452 "pyexpat.c"
        var $138=HEAP[$137]; //@line 452 "pyexpat.c"
        var $139=$138+24; //@line 452 "pyexpat.c"
        var $140=HEAP[$139]; //@line 452 "pyexpat.c"
        var $141=$temp; //@line 452 "pyexpat.c"
        FUNCTION_TABLE[$140]($141); //@line 452 "pyexpat.c"
        __label__ = 25; break; //@line 452 "pyexpat.c"
      case 25: // $bb16
        $4=0; //@line 453 "pyexpat.c"
        __label__ = 26; break; //@line 453 "pyexpat.c"
      case 26: // $bb17
        var $142=$4; //@line 419 "pyexpat.c"
        $retval=$142; //@line 419 "pyexpat.c"
        var $retval18=$retval; //@line 419 "pyexpat.c"
        ;
        return $retval18; //@line 419 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_CharacterDataHandler($userData, $data, $len) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i1;
        var $type_addr_i;
        var $retval_i2;
        var $0;
        var $handler_i;
        var $self_addr_i;
        var $retval_i;
        var $1;
        var $rc_i;
        var $userData_addr;
        var $data_addr;
        var $len_addr;
        var $self;
        $userData_addr=$userData;
        $data_addr=$data;
        $len_addr=$len;
        var $2=$userData_addr; //@line 470 "pyexpat.c"
        var $3=$2; //@line 470 "pyexpat.c"
        $self=$3; //@line 470 "pyexpat.c"
        var $4=$self; //@line 471 "pyexpat.c"
        var $5=$4+32; //@line 471 "pyexpat.c"
        var $6=HEAP[$5]; //@line 471 "pyexpat.c"
        var $7=($6)==0; //@line 471 "pyexpat.c"
        var $8=$self; //@line 472 "pyexpat.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 471 "pyexpat.c"
      case 1: // $bb
        var $9=$data_addr; //@line 472 "pyexpat.c"
        var $10=$len_addr; //@line 472 "pyexpat.c"
        var $11=_call_character_handler($8, $9, $10); //@line 472 "pyexpat.c"
        __label__ = 11; break; //@line 472 "pyexpat.c"
      case 2: // $bb1
        var $12=$8+40; //@line 474 "pyexpat.c"
        var $13=HEAP[$12]; //@line 474 "pyexpat.c"
        var $14=$len_addr; //@line 474 "pyexpat.c"
        var $15=($14) + ($13); //@line 474 "pyexpat.c"
        var $16=$self; //@line 474 "pyexpat.c"
        var $17=$16+36; //@line 474 "pyexpat.c"
        var $18=HEAP[$17]; //@line 474 "pyexpat.c"
        var $19=($15) > ($18); //@line 474 "pyexpat.c"
        if ($19) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 474 "pyexpat.c"
      case 3: // $bb2
        var $20=$self; //@line 475 "pyexpat.c"
        $self_addr_i=$20;
        var $21=$self_addr_i; //@line 460 "pyexpat.c"
        var $22=$21+32; //@line 460 "pyexpat.c"
        var $23=HEAP[$22]; //@line 460 "pyexpat.c"
        var $24=($23)==0; //@line 460 "pyexpat.c"
        if ($24) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 4: // $bb_i
        var $25=$self_addr_i; //@line 460 "pyexpat.c"
        var $26=$25+40; //@line 460 "pyexpat.c"
        var $27=HEAP[$26]; //@line 460 "pyexpat.c"
        var $28=($27)==0; //@line 460 "pyexpat.c"
        if ($28) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 460 "pyexpat.c"
      case 5: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i=0; //@line 461 "pyexpat.c"
        __label__ = 7; break;
      case 6: // $flush_character_buffer_exit
        var $29=$self_addr_i; //@line 462 "pyexpat.c"
        var $30=$29+40; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i; //@line 462 "pyexpat.c"
        var $33=$32+32; //@line 462 "pyexpat.c"
        var $34=HEAP[$33]; //@line 462 "pyexpat.c"
        var $35=$self_addr_i; //@line 462 "pyexpat.c"
        var $36=_call_character_handler($35, $34, $31); //@line 462 "pyexpat.c"
        $rc_i=$36; //@line 462 "pyexpat.c"
        var $37=$self_addr_i; //@line 463 "pyexpat.c"
        var $38=$37+40; //@line 463 "pyexpat.c"
        HEAP[$38]=0; //@line 463 "pyexpat.c"
        var $39=$rc_i; //@line 464 "pyexpat.c"
        $1=$39; //@line 464 "pyexpat.c"
        $retval_i=$39; //@line 461 "pyexpat.c"
        var $40=($39) < 0; //@line 475 "pyexpat.c"
        if ($40) { __label__ = 11; break; } else { __label__ = 7; break; } //@line 475 "pyexpat.c"
      case 7: // $bb3
        var $41=$self; //@line 480 "pyexpat.c"
        $self_addr_i1=$41;
        $type_addr_i=3;
        var $42=$self_addr_i1; //@line 147 "pyexpat.c"
        var $43=$42+48; //@line 147 "pyexpat.c"
        var $44=HEAP[$43]; //@line 147 "pyexpat.c"
        var $45=$type_addr_i; //@line 147 "pyexpat.c"
        var $46=$44+4*$45; //@line 147 "pyexpat.c"
        var $47=HEAP[$46]; //@line 147 "pyexpat.c"
        $handler_i=$47; //@line 147 "pyexpat.c"
        var $48=$handler_i; //@line 148 "pyexpat.c"
        var $49=($48)!=0; //@line 148 "pyexpat.c"
        var $50=($49); //@line 148 "pyexpat.c"
        $0=$50; //@line 148 "pyexpat.c"
        $retval_i2=$50; //@line 148 "pyexpat.c"
        var $51=($50)==0; //@line 480 "pyexpat.c"
        if ($51) { __label__ = 11; break; } else { __label__ = 8; break; } //@line 480 "pyexpat.c"
      case 8: // $bb4
        var $52=$self; //@line 483 "pyexpat.c"
        var $53=$52+36; //@line 483 "pyexpat.c"
        var $54=HEAP[$53]; //@line 483 "pyexpat.c"
        var $55=$len_addr; //@line 483 "pyexpat.c"
        var $56=($54) < ($55); //@line 483 "pyexpat.c"
        if ($56) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 483 "pyexpat.c"
      case 9: // $bb5
        var $57=$self; //@line 484 "pyexpat.c"
        var $58=$data_addr; //@line 484 "pyexpat.c"
        var $59=$len_addr; //@line 484 "pyexpat.c"
        var $60=_call_character_handler($57, $58, $59); //@line 484 "pyexpat.c"
        var $61=$self; //@line 485 "pyexpat.c"
        var $62=$61+40; //@line 485 "pyexpat.c"
        HEAP[$62]=0; //@line 485 "pyexpat.c"
        __label__ = 11; break; //@line 485 "pyexpat.c"
      case 10: // $bb6
        var $63=$len_addr; //@line 488 "pyexpat.c"
        var $64=$self; //@line 488 "pyexpat.c"
        var $65=$64+32; //@line 488 "pyexpat.c"
        var $66=HEAP[$65]; //@line 488 "pyexpat.c"
        var $67=$self; //@line 488 "pyexpat.c"
        var $68=$67+40; //@line 488 "pyexpat.c"
        var $69=HEAP[$68]; //@line 488 "pyexpat.c"
        var $70=$66+$69; //@line 488 "pyexpat.c"
        var $71=$data_addr; //@line 488 "pyexpat.c"
        _llvm_memcpy_p0i8_p0i8_i32($70, $71, $63, 1, 0); //@line 488 "pyexpat.c"
        var $72=$self; //@line 490 "pyexpat.c"
        var $73=$72+40; //@line 490 "pyexpat.c"
        var $74=HEAP[$73]; //@line 490 "pyexpat.c"
        var $75=$len_addr; //@line 490 "pyexpat.c"
        var $76=($75) + ($74); //@line 490 "pyexpat.c"
        var $77=$self; //@line 490 "pyexpat.c"
        var $78=$77+40; //@line 490 "pyexpat.c"
        HEAP[$78]=$76; //@line 490 "pyexpat.c"
        __label__ = 11; break; //@line 490 "pyexpat.c"
      case 11: // $return
        ;
        return; //@line 476 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_StartElementHandler($userData, $name, $atts) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i10;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i7;
        var $0;
        var $self_addr_i6;
        var $self_addr_i5;
        var $self_addr_i4;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $name_addr;
        var $atts_addr;
        var $iftmp_42;
        var $self;
        var $container;
        var $rv;
        var $args;
        var $i;
        var $max;
        var $n;
        var $v;
        $userData_addr=$userData;
        $name_addr=$name;
        $atts_addr=$atts;
        var $3=$userData_addr; //@line 499 "pyexpat.c"
        var $4=$3; //@line 499 "pyexpat.c"
        $self=$4; //@line 499 "pyexpat.c"
        var $5=$self; //@line 501 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=0;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 501 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 51; break; } //@line 501 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 505 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 505 "pyexpat.c"
        if ($37) { __label__ = 51; break; } else { __label__ = 5; break; } //@line 505 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 510 "pyexpat.c"
        var $39=$38+20; //@line 510 "pyexpat.c"
        var $40=HEAP[$39]; //@line 510 "pyexpat.c"
        var $41=($40)!=0; //@line 510 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 510 "pyexpat.c"
      case 6: // $bb2
        var $42=$self; //@line 511 "pyexpat.c"
        var $43=$42+8; //@line 511 "pyexpat.c"
        var $44=HEAP[$43]; //@line 511 "pyexpat.c"
        var $45=_XML_GetSpecifiedAttributeCount($44); //@line 511 "pyexpat.c"
        $max=$45; //@line 511 "pyexpat.c"
        __label__ = 9; break; //@line 511 "pyexpat.c"
      case 7: // $bb3
        $max=0; //@line 514 "pyexpat.c"
        var $46=$atts_addr; //@line 515 "pyexpat.c"
        var $47=$max; //@line 515 "pyexpat.c"
        var $48=$46+4*$47; //@line 515 "pyexpat.c"
        var $49=HEAP[$48]; //@line 515 "pyexpat.c"
        var $50=($49)!=0; //@line 515 "pyexpat.c"
        if ($50) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 515 "pyexpat.c"
      case 8: // $bb4
        var $51=$max; //@line 516 "pyexpat.c"
        var $52=($51) + 2; //@line 516 "pyexpat.c"
        $max=$52; //@line 516 "pyexpat.c"
        var $53=$atts_addr; //@line 515 "pyexpat.c"
        var $54=$max; //@line 515 "pyexpat.c"
        var $55=$53+4*$54; //@line 515 "pyexpat.c"
        var $56=HEAP[$55]; //@line 515 "pyexpat.c"
        var $57=($56)!=0; //@line 515 "pyexpat.c"
        if ($57) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 515 "pyexpat.c"
      case 9: // $bb6
        var $58=$self; //@line 519 "pyexpat.c"
        var $59=$58+16; //@line 519 "pyexpat.c"
        var $60=HEAP[$59]; //@line 519 "pyexpat.c"
        var $61=($60)!=0; //@line 519 "pyexpat.c"
        if ($61) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 519 "pyexpat.c"
      case 10: // $bb7
        var $62=$max; //@line 520 "pyexpat.c"
        var $63=_PyList_New($62); //@line 520 "pyexpat.c"
        $container=$63; //@line 520 "pyexpat.c"
        __lastLabel__ = 10; __label__ = 12; break; //@line 520 "pyexpat.c"
      case 11: // $bb8
        var $64=_PyDict_New(); //@line 522 "pyexpat.c"
        $container=$64; //@line 522 "pyexpat.c"
        __lastLabel__ = 11; __label__ = 12; break; //@line 522 "pyexpat.c"
      case 12: // $bb9
        var $65=__lastLabel__ == 11 ? $64 : ($63);
        var $66=($65)==0; //@line 523 "pyexpat.c"
        if ($66) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 523 "pyexpat.c"
      case 13: // $bb10
        var $67=$self; //@line 524 "pyexpat.c"
        $self_addr_i3=$67;
        var $68=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($68, 0); //@line 256 "pyexpat.c"
        var $69=$self_addr_i3; //@line 257 "pyexpat.c"
        var $70=$69+8; //@line 257 "pyexpat.c"
        var $71=HEAP[$70]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($71, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 51; break; //@line 524 "pyexpat.c"
      case 14: // $bb11
        $i=0; //@line 527 "pyexpat.c"
        __label__ = 38; break; //@line 527 "pyexpat.c"
      case 15: // $bb12
        var $72=$atts_addr; //@line 528 "pyexpat.c"
        var $73=$i; //@line 528 "pyexpat.c"
        var $74=$72+4*$73; //@line 528 "pyexpat.c"
        var $75=HEAP[$74]; //@line 528 "pyexpat.c"
        var $76=$self; //@line 528 "pyexpat.c"
        var $77=_string_intern($76, $75); //@line 528 "pyexpat.c"
        $n=$77; //@line 528 "pyexpat.c"
        var $78=$n; //@line 530 "pyexpat.c"
        var $79=($78)==0; //@line 530 "pyexpat.c"
        var $80=$self; //@line 531 "pyexpat.c"
        if ($79) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 530 "pyexpat.c"
      case 16: // $bb13
        $self_addr_i4=$80;
        var $81=$self_addr_i4; //@line 256 "pyexpat.c"
        _clear_handlers($81, 0); //@line 256 "pyexpat.c"
        var $82=$self_addr_i4; //@line 257 "pyexpat.c"
        var $83=$82+8; //@line 257 "pyexpat.c"
        var $84=HEAP[$83]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($84, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $85=$container; //@line 532 "pyexpat.c"
        var $86=$85; //@line 532 "pyexpat.c"
        var $87=HEAP[$86]; //@line 532 "pyexpat.c"
        var $88=($87) - 1; //@line 532 "pyexpat.c"
        var $89=$container; //@line 532 "pyexpat.c"
        var $90=$89; //@line 532 "pyexpat.c"
        HEAP[$90]=$88; //@line 532 "pyexpat.c"
        var $91=$container; //@line 532 "pyexpat.c"
        var $92=$91; //@line 532 "pyexpat.c"
        var $93=HEAP[$92]; //@line 532 "pyexpat.c"
        var $94=($93)==0; //@line 532 "pyexpat.c"
        if ($94) { __label__ = 17; break; } else { __label__ = 51; break; } //@line 532 "pyexpat.c"
      case 17: // $bb14
        var $95=$container; //@line 532 "pyexpat.c"
        var $96=$95+4; //@line 532 "pyexpat.c"
        var $97=HEAP[$96]; //@line 532 "pyexpat.c"
        var $98=$97+24; //@line 532 "pyexpat.c"
        var $99=HEAP[$98]; //@line 532 "pyexpat.c"
        var $100=$container; //@line 532 "pyexpat.c"
        FUNCTION_TABLE[$99]($100); //@line 532 "pyexpat.c"
        __label__ = 51; break; //@line 532 "pyexpat.c"
      case 18: // $bb16
        var $101=$80+12; //@line 535 "pyexpat.c"
        var $102=HEAP[$101]; //@line 535 "pyexpat.c"
        var $103=($102)!=0; //@line 535 "pyexpat.c"
        if ($103) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 535 "pyexpat.c"
      case 19: // $bb17
        $iftmp_42=(FUNCTION_TABLE_OFFSET + 2); //@line 535 "pyexpat.c"
        __label__ = 21; break; //@line 535 "pyexpat.c"
      case 20: // $bb18
        $iftmp_42=(FUNCTION_TABLE_OFFSET + 4); //@line 535 "pyexpat.c"
        __label__ = 21; break; //@line 535 "pyexpat.c"
      case 21: // $bb19
        var $104=$i; //@line 535 "pyexpat.c"
        var $105=($104) + 1; //@line 535 "pyexpat.c"
        var $106=$atts_addr; //@line 535 "pyexpat.c"
        var $107=$106+4*$105; //@line 535 "pyexpat.c"
        var $108=HEAP[$107]; //@line 535 "pyexpat.c"
        var $109=$iftmp_42; //@line 535 "pyexpat.c"
        var $110=FUNCTION_TABLE[$109]($108); //@line 535 "pyexpat.c"
        $v=$110; //@line 535 "pyexpat.c"
        var $111=($110)==0; //@line 536 "pyexpat.c"
        var $112=$self; //@line 537 "pyexpat.c"
        if ($111) { __label__ = 22; break; } else { __label__ = 26; break; } //@line 536 "pyexpat.c"
      case 22: // $bb20
        $self_addr_i5=$112;
        var $113=$self_addr_i5; //@line 256 "pyexpat.c"
        _clear_handlers($113, 0); //@line 256 "pyexpat.c"
        var $114=$self_addr_i5; //@line 257 "pyexpat.c"
        var $115=$114+8; //@line 257 "pyexpat.c"
        var $116=HEAP[$115]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($116, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $117=$container; //@line 538 "pyexpat.c"
        var $118=$117; //@line 538 "pyexpat.c"
        var $119=HEAP[$118]; //@line 538 "pyexpat.c"
        var $120=($119) - 1; //@line 538 "pyexpat.c"
        var $121=$container; //@line 538 "pyexpat.c"
        var $122=$121; //@line 538 "pyexpat.c"
        HEAP[$122]=$120; //@line 538 "pyexpat.c"
        var $123=$container; //@line 538 "pyexpat.c"
        var $124=$123; //@line 538 "pyexpat.c"
        var $125=HEAP[$124]; //@line 538 "pyexpat.c"
        var $126=($125)==0; //@line 538 "pyexpat.c"
        if ($126) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 538 "pyexpat.c"
      case 23: // $bb21
        var $127=$container; //@line 538 "pyexpat.c"
        var $128=$127+4; //@line 538 "pyexpat.c"
        var $129=HEAP[$128]; //@line 538 "pyexpat.c"
        var $130=$129+24; //@line 538 "pyexpat.c"
        var $131=HEAP[$130]; //@line 538 "pyexpat.c"
        var $132=$container; //@line 538 "pyexpat.c"
        FUNCTION_TABLE[$131]($132); //@line 538 "pyexpat.c"
        __label__ = 24; break; //@line 538 "pyexpat.c"
      case 24: // $bb22
        var $133=$n; //@line 539 "pyexpat.c"
        var $134=$133; //@line 539 "pyexpat.c"
        var $135=HEAP[$134]; //@line 539 "pyexpat.c"
        var $136=($135) - 1; //@line 539 "pyexpat.c"
        var $137=$n; //@line 539 "pyexpat.c"
        var $138=$137; //@line 539 "pyexpat.c"
        HEAP[$138]=$136; //@line 539 "pyexpat.c"
        var $139=$n; //@line 539 "pyexpat.c"
        var $140=$139; //@line 539 "pyexpat.c"
        var $141=HEAP[$140]; //@line 539 "pyexpat.c"
        var $142=($141)==0; //@line 539 "pyexpat.c"
        if ($142) { __label__ = 25; break; } else { __label__ = 51; break; } //@line 539 "pyexpat.c"
      case 25: // $bb23
        var $143=$n; //@line 539 "pyexpat.c"
        var $144=$143+4; //@line 539 "pyexpat.c"
        var $145=HEAP[$144]; //@line 539 "pyexpat.c"
        var $146=$145+24; //@line 539 "pyexpat.c"
        var $147=HEAP[$146]; //@line 539 "pyexpat.c"
        var $148=$n; //@line 539 "pyexpat.c"
        FUNCTION_TABLE[$147]($148); //@line 539 "pyexpat.c"
        __label__ = 51; break; //@line 539 "pyexpat.c"
      case 26: // $bb25
        var $149=$112+16; //@line 542 "pyexpat.c"
        var $150=HEAP[$149]; //@line 542 "pyexpat.c"
        var $151=($150)!=0; //@line 542 "pyexpat.c"
        var $152=$container; //@line 543 "pyexpat.c"
        if ($151) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 542 "pyexpat.c"
      case 27: // $bb26
        var $153=$152; //@line 543 "pyexpat.c"
        var $154=$153+12; //@line 543 "pyexpat.c"
        var $155=HEAP[$154]; //@line 543 "pyexpat.c"
        var $156=$i; //@line 543 "pyexpat.c"
        var $157=$155+4*$156; //@line 543 "pyexpat.c"
        var $158=$n; //@line 543 "pyexpat.c"
        HEAP[$157]=$158; //@line 543 "pyexpat.c"
        var $159=$container; //@line 544 "pyexpat.c"
        var $160=$159; //@line 544 "pyexpat.c"
        var $161=$160+12; //@line 544 "pyexpat.c"
        var $162=HEAP[$161]; //@line 544 "pyexpat.c"
        var $163=$i; //@line 544 "pyexpat.c"
        var $164=($163) + 1; //@line 544 "pyexpat.c"
        var $165=$162+4*$164; //@line 544 "pyexpat.c"
        var $166=$v; //@line 544 "pyexpat.c"
        HEAP[$165]=$166; //@line 544 "pyexpat.c"
        __label__ = 37; break; //@line 544 "pyexpat.c"
      case 28: // $bb27
        var $167=$n; //@line 546 "pyexpat.c"
        var $168=$v; //@line 546 "pyexpat.c"
        var $169=_PyDict_SetItem($152, $167, $168); //@line 546 "pyexpat.c"
        var $170=($169)!=0; //@line 546 "pyexpat.c"
        if ($170) { __label__ = 29; break; } else { __label__ = 33; break; } //@line 546 "pyexpat.c"
      case 29: // $bb28
        var $171=$self; //@line 547 "pyexpat.c"
        $self_addr_i6=$171;
        var $172=$self_addr_i6; //@line 256 "pyexpat.c"
        _clear_handlers($172, 0); //@line 256 "pyexpat.c"
        var $173=$self_addr_i6; //@line 257 "pyexpat.c"
        var $174=$173+8; //@line 257 "pyexpat.c"
        var $175=HEAP[$174]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($175, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $176=$n; //@line 548 "pyexpat.c"
        var $177=$176; //@line 548 "pyexpat.c"
        var $178=HEAP[$177]; //@line 548 "pyexpat.c"
        var $179=($178) - 1; //@line 548 "pyexpat.c"
        var $180=$n; //@line 548 "pyexpat.c"
        var $181=$180; //@line 548 "pyexpat.c"
        HEAP[$181]=$179; //@line 548 "pyexpat.c"
        var $182=$n; //@line 548 "pyexpat.c"
        var $183=$182; //@line 548 "pyexpat.c"
        var $184=HEAP[$183]; //@line 548 "pyexpat.c"
        var $185=($184)==0; //@line 548 "pyexpat.c"
        if ($185) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 548 "pyexpat.c"
      case 30: // $bb29
        var $186=$n; //@line 548 "pyexpat.c"
        var $187=$186+4; //@line 548 "pyexpat.c"
        var $188=HEAP[$187]; //@line 548 "pyexpat.c"
        var $189=$188+24; //@line 548 "pyexpat.c"
        var $190=HEAP[$189]; //@line 548 "pyexpat.c"
        var $191=$n; //@line 548 "pyexpat.c"
        FUNCTION_TABLE[$190]($191); //@line 548 "pyexpat.c"
        __label__ = 31; break; //@line 548 "pyexpat.c"
      case 31: // $bb30
        var $192=$v; //@line 549 "pyexpat.c"
        var $193=$192; //@line 549 "pyexpat.c"
        var $194=HEAP[$193]; //@line 549 "pyexpat.c"
        var $195=($194) - 1; //@line 549 "pyexpat.c"
        var $196=$v; //@line 549 "pyexpat.c"
        var $197=$196; //@line 549 "pyexpat.c"
        HEAP[$197]=$195; //@line 549 "pyexpat.c"
        var $198=$v; //@line 549 "pyexpat.c"
        var $199=$198; //@line 549 "pyexpat.c"
        var $200=HEAP[$199]; //@line 549 "pyexpat.c"
        var $201=($200)==0; //@line 549 "pyexpat.c"
        if ($201) { __label__ = 32; break; } else { __label__ = 51; break; } //@line 549 "pyexpat.c"
      case 32: // $bb31
        var $202=$v; //@line 549 "pyexpat.c"
        var $203=$202+4; //@line 549 "pyexpat.c"
        var $204=HEAP[$203]; //@line 549 "pyexpat.c"
        var $205=$204+24; //@line 549 "pyexpat.c"
        var $206=HEAP[$205]; //@line 549 "pyexpat.c"
        var $207=$v; //@line 549 "pyexpat.c"
        FUNCTION_TABLE[$206]($207); //@line 549 "pyexpat.c"
        __label__ = 51; break; //@line 549 "pyexpat.c"
      case 33: // $bb33
        var $208=$n; //@line 553 "pyexpat.c"
        var $209=$208; //@line 553 "pyexpat.c"
        var $210=HEAP[$209]; //@line 553 "pyexpat.c"
        var $211=($210) - 1; //@line 553 "pyexpat.c"
        var $212=$n; //@line 553 "pyexpat.c"
        var $213=$212; //@line 553 "pyexpat.c"
        HEAP[$213]=$211; //@line 553 "pyexpat.c"
        var $214=$n; //@line 553 "pyexpat.c"
        var $215=$214; //@line 553 "pyexpat.c"
        var $216=HEAP[$215]; //@line 553 "pyexpat.c"
        var $217=($216)==0; //@line 553 "pyexpat.c"
        if ($217) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 553 "pyexpat.c"
      case 34: // $bb34
        var $218=$n; //@line 553 "pyexpat.c"
        var $219=$218+4; //@line 553 "pyexpat.c"
        var $220=HEAP[$219]; //@line 553 "pyexpat.c"
        var $221=$220+24; //@line 553 "pyexpat.c"
        var $222=HEAP[$221]; //@line 553 "pyexpat.c"
        var $223=$n; //@line 553 "pyexpat.c"
        FUNCTION_TABLE[$222]($223); //@line 553 "pyexpat.c"
        __label__ = 35; break; //@line 553 "pyexpat.c"
      case 35: // $bb35
        var $224=$v; //@line 554 "pyexpat.c"
        var $225=$224; //@line 554 "pyexpat.c"
        var $226=HEAP[$225]; //@line 554 "pyexpat.c"
        var $227=($226) - 1; //@line 554 "pyexpat.c"
        var $228=$v; //@line 554 "pyexpat.c"
        var $229=$228; //@line 554 "pyexpat.c"
        HEAP[$229]=$227; //@line 554 "pyexpat.c"
        var $230=$v; //@line 554 "pyexpat.c"
        var $231=$230; //@line 554 "pyexpat.c"
        var $232=HEAP[$231]; //@line 554 "pyexpat.c"
        var $233=($232)==0; //@line 554 "pyexpat.c"
        if ($233) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 554 "pyexpat.c"
      case 36: // $bb36
        var $234=$v; //@line 554 "pyexpat.c"
        var $235=$234+4; //@line 554 "pyexpat.c"
        var $236=HEAP[$235]; //@line 554 "pyexpat.c"
        var $237=$236+24; //@line 554 "pyexpat.c"
        var $238=HEAP[$237]; //@line 554 "pyexpat.c"
        var $239=$v; //@line 554 "pyexpat.c"
        FUNCTION_TABLE[$238]($239); //@line 554 "pyexpat.c"
        __label__ = 37; break; //@line 554 "pyexpat.c"
      case 37: // $bb37
        var $240=$i; //@line 527 "pyexpat.c"
        var $241=($240) + 2; //@line 527 "pyexpat.c"
        $i=$241; //@line 527 "pyexpat.c"
        __label__ = 38; break; //@line 527 "pyexpat.c"
      case 38: // $bb38
        var $242=$i; //@line 527 "pyexpat.c"
        var $243=$max; //@line 527 "pyexpat.c"
        var $244=($242) < ($243); //@line 527 "pyexpat.c"
        if ($244) { __label__ = 15; break; } else { __label__ = 39; break; } //@line 527 "pyexpat.c"
      case 39: // $bb39
        var $245=$self; //@line 557 "pyexpat.c"
        var $246=$name_addr; //@line 557 "pyexpat.c"
        var $247=_string_intern($245, $246); //@line 557 "pyexpat.c"
        $args=$247; //@line 557 "pyexpat.c"
        var $248=$args; //@line 558 "pyexpat.c"
        var $249=($248)!=0; //@line 558 "pyexpat.c"
        if ($249) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 558 "pyexpat.c"
      case 40: // $bb41
        var $250=$args; //@line 559 "pyexpat.c"
        var $251=$container; //@line 559 "pyexpat.c"
        var $252=_Py_BuildValue(__str8, $250, $251); //@line 559 "pyexpat.c"
        $args=$252; //@line 559 "pyexpat.c"
        var $253=($252)==0; //@line 560 "pyexpat.c"
        if ($253) { __label__ = 41; break; } else { __label__ = 43; break; } //@line 560 "pyexpat.c"
      case 41: // $bb42
        var $254=$container; //@line 561 "pyexpat.c"
        var $255=$254; //@line 561 "pyexpat.c"
        var $256=HEAP[$255]; //@line 561 "pyexpat.c"
        var $257=($256) - 1; //@line 561 "pyexpat.c"
        var $258=$container; //@line 561 "pyexpat.c"
        var $259=$258; //@line 561 "pyexpat.c"
        HEAP[$259]=$257; //@line 561 "pyexpat.c"
        var $260=$container; //@line 561 "pyexpat.c"
        var $261=$260; //@line 561 "pyexpat.c"
        var $262=HEAP[$261]; //@line 561 "pyexpat.c"
        var $263=($262)==0; //@line 561 "pyexpat.c"
        if ($263) { __label__ = 42; break; } else { __label__ = 51; break; } //@line 561 "pyexpat.c"
      case 42: // $bb43
        var $264=$container; //@line 561 "pyexpat.c"
        var $265=$264+4; //@line 561 "pyexpat.c"
        var $266=HEAP[$265]; //@line 561 "pyexpat.c"
        var $267=$266+24; //@line 561 "pyexpat.c"
        var $268=HEAP[$267]; //@line 561 "pyexpat.c"
        var $269=$container; //@line 561 "pyexpat.c"
        FUNCTION_TABLE[$268]($269); //@line 561 "pyexpat.c"
        __label__ = 51; break; //@line 561 "pyexpat.c"
      case 43: // $bb45
        var $270=$self; //@line 565 "pyexpat.c"
        var $271=$270+24; //@line 565 "pyexpat.c"
        HEAP[$271]=1; //@line 565 "pyexpat.c"
        var $272=$self; //@line 566 "pyexpat.c"
        var $273=$272+48; //@line 566 "pyexpat.c"
        var $274=HEAP[$273]; //@line 566 "pyexpat.c"
        var $275=$274; //@line 566 "pyexpat.c"
        var $276=HEAP[$275]; //@line 566 "pyexpat.c"
        $slot_addr_i=0;
        $func_name_addr_i=__str9;
        $lineno_addr_i=566;
        var $277=$slot_addr_i; //@line 264 "pyexpat.c"
        var $278=_handler_info+$277*20; //@line 264 "pyexpat.c"
        var $279=$278+12; //@line 264 "pyexpat.c"
        var $280=HEAP[$279]; //@line 264 "pyexpat.c"
        var $281=($280)==0; //@line 264 "pyexpat.c"
        if ($281) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 264 "pyexpat.c"
      case 44: // $bb_i8
        var $282=$slot_addr_i; //@line 265 "pyexpat.c"
        var $283=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $284=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $285=_PyCode_NewEmpty(__str6, $283, $284); //@line 265 "pyexpat.c"
        var $286=_handler_info+$282*20; //@line 265 "pyexpat.c"
        var $287=$286+12; //@line 265 "pyexpat.c"
        HEAP[$287]=$285; //@line 265 "pyexpat.c"
        __label__ = 45; break; //@line 265 "pyexpat.c"
      case 45: // $getcode_exit
        var $288=$slot_addr_i; //@line 268 "pyexpat.c"
        var $289=_handler_info+$288*20; //@line 268 "pyexpat.c"
        var $290=$289+12; //@line 268 "pyexpat.c"
        var $291=HEAP[$290]; //@line 268 "pyexpat.c"
        $0=$291; //@line 268 "pyexpat.c"
        var $292=$0; //@line 268 "pyexpat.c"
        $retval_i7=$292; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i7; //@line 268 "pyexpat.c"
        var $293=$args; //@line 566 "pyexpat.c"
        var $294=$self; //@line 566 "pyexpat.c"
        var $295=_call_with_frame($retval2_i, $276, $293, $294); //@line 566 "pyexpat.c"
        $rv=$295; //@line 566 "pyexpat.c"
        var $296=$self; //@line 568 "pyexpat.c"
        var $297=$296+24; //@line 568 "pyexpat.c"
        HEAP[$297]=0; //@line 568 "pyexpat.c"
        var $298=$args; //@line 569 "pyexpat.c"
        var $299=$298; //@line 569 "pyexpat.c"
        var $300=HEAP[$299]; //@line 569 "pyexpat.c"
        var $301=($300) - 1; //@line 569 "pyexpat.c"
        var $302=$args; //@line 569 "pyexpat.c"
        var $303=$302; //@line 569 "pyexpat.c"
        HEAP[$303]=$301; //@line 569 "pyexpat.c"
        var $304=$args; //@line 569 "pyexpat.c"
        var $305=$304; //@line 569 "pyexpat.c"
        var $306=HEAP[$305]; //@line 569 "pyexpat.c"
        var $307=($306)==0; //@line 569 "pyexpat.c"
        if ($307) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 569 "pyexpat.c"
      case 46: // $bb46
        var $308=$args; //@line 569 "pyexpat.c"
        var $309=$308+4; //@line 569 "pyexpat.c"
        var $310=HEAP[$309]; //@line 569 "pyexpat.c"
        var $311=$310+24; //@line 569 "pyexpat.c"
        var $312=HEAP[$311]; //@line 569 "pyexpat.c"
        var $313=$args; //@line 569 "pyexpat.c"
        FUNCTION_TABLE[$312]($313); //@line 569 "pyexpat.c"
        __label__ = 47; break; //@line 569 "pyexpat.c"
      case 47: // $bb47
        var $314=$rv; //@line 570 "pyexpat.c"
        var $315=($314)==0; //@line 570 "pyexpat.c"
        if ($315) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 570 "pyexpat.c"
      case 48: // $bb48
        var $316=$self; //@line 571 "pyexpat.c"
        $self_addr_i10=$316;
        var $317=$self_addr_i10; //@line 256 "pyexpat.c"
        _clear_handlers($317, 0); //@line 256 "pyexpat.c"
        var $318=$self_addr_i10; //@line 257 "pyexpat.c"
        var $319=$318+8; //@line 257 "pyexpat.c"
        var $320=HEAP[$319]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($320, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 51; break; //@line 571 "pyexpat.c"
      case 49: // $bb49
        var $321=$rv; //@line 574 "pyexpat.c"
        var $322=$321; //@line 574 "pyexpat.c"
        var $323=HEAP[$322]; //@line 574 "pyexpat.c"
        var $324=($323) - 1; //@line 574 "pyexpat.c"
        var $325=$rv; //@line 574 "pyexpat.c"
        var $326=$325; //@line 574 "pyexpat.c"
        HEAP[$326]=$324; //@line 574 "pyexpat.c"
        var $327=$rv; //@line 574 "pyexpat.c"
        var $328=$327; //@line 574 "pyexpat.c"
        var $329=HEAP[$328]; //@line 574 "pyexpat.c"
        var $330=($329)==0; //@line 574 "pyexpat.c"
        if ($330) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 574 "pyexpat.c"
      case 50: // $bb50
        var $331=$rv; //@line 574 "pyexpat.c"
        var $332=$331+4; //@line 574 "pyexpat.c"
        var $333=HEAP[$332]; //@line 574 "pyexpat.c"
        var $334=$333+24; //@line 574 "pyexpat.c"
        var $335=HEAP[$334]; //@line 574 "pyexpat.c"
        var $336=$rv; //@line 574 "pyexpat.c"
        FUNCTION_TABLE[$335]($336); //@line 574 "pyexpat.c"
        __label__ = 51; break; //@line 574 "pyexpat.c"
      case 51: // $return
        ;
        return; //@line 506 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_EndElementHandler($userData, $name) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $name_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $name_addr=$name;
        var $3=$userData_addr; //@line 616 "pyexpat.c"
        var $4=$3; //@line 616 "pyexpat.c"
        $self=$4; //@line 616 "pyexpat.c"
        $args=0; //@line 616 "pyexpat.c"
        $rv=0; //@line 616 "pyexpat.c"
        var $5=$self; //@line 616 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=1;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 616 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 616 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 616 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 616 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 616 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 616 "pyexpat.c"
        var $39=$name_addr; //@line 616 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 616 "pyexpat.c"
        var $41=_Py_BuildValue(__str10, $40); //@line 616 "pyexpat.c"
        $args=$41; //@line 616 "pyexpat.c"
        var $42=($41)==0; //@line 616 "pyexpat.c"
        var $43=$self; //@line 616 "pyexpat.c"
        if ($42) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 616 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$43;
        var $44=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($44, 0); //@line 256 "pyexpat.c"
        var $45=$self_addr_i3; //@line 257 "pyexpat.c"
        var $46=$45+8; //@line 257 "pyexpat.c"
        var $47=HEAP[$46]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($47, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 616 "pyexpat.c"
      case 7: // $bb3
        var $48=$43+24; //@line 616 "pyexpat.c"
        HEAP[$48]=1; //@line 616 "pyexpat.c"
        var $49=$self; //@line 616 "pyexpat.c"
        var $50=$49+48; //@line 616 "pyexpat.c"
        var $51=HEAP[$50]; //@line 616 "pyexpat.c"
        var $52=$51+4; //@line 616 "pyexpat.c"
        var $53=HEAP[$52]; //@line 616 "pyexpat.c"
        $slot_addr_i=1;
        $func_name_addr_i=__str11;
        $lineno_addr_i=618;
        var $54=$slot_addr_i; //@line 264 "pyexpat.c"
        var $55=_handler_info+$54*20; //@line 264 "pyexpat.c"
        var $56=$55+12; //@line 264 "pyexpat.c"
        var $57=HEAP[$56]; //@line 264 "pyexpat.c"
        var $58=($57)==0; //@line 264 "pyexpat.c"
        if ($58) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $59=$slot_addr_i; //@line 265 "pyexpat.c"
        var $60=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $61=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $62=_PyCode_NewEmpty(__str6, $60, $61); //@line 265 "pyexpat.c"
        var $63=_handler_info+$59*20; //@line 265 "pyexpat.c"
        var $64=$63+12; //@line 265 "pyexpat.c"
        HEAP[$64]=$62; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $65=$slot_addr_i; //@line 268 "pyexpat.c"
        var $66=_handler_info+$65*20; //@line 268 "pyexpat.c"
        var $67=$66+12; //@line 268 "pyexpat.c"
        var $68=HEAP[$67]; //@line 268 "pyexpat.c"
        $0=$68; //@line 268 "pyexpat.c"
        var $69=$0; //@line 268 "pyexpat.c"
        $retval_i4=$69; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $70=$args; //@line 616 "pyexpat.c"
        var $71=$self; //@line 616 "pyexpat.c"
        var $72=_call_with_frame($retval2_i, $53, $70, $71); //@line 616 "pyexpat.c"
        $rv=$72; //@line 616 "pyexpat.c"
        var $73=$self; //@line 616 "pyexpat.c"
        var $74=$73+24; //@line 616 "pyexpat.c"
        HEAP[$74]=0; //@line 616 "pyexpat.c"
        var $75=$args; //@line 616 "pyexpat.c"
        var $76=$75; //@line 616 "pyexpat.c"
        var $77=HEAP[$76]; //@line 616 "pyexpat.c"
        var $78=($77) - 1; //@line 616 "pyexpat.c"
        var $79=$args; //@line 616 "pyexpat.c"
        var $80=$79; //@line 616 "pyexpat.c"
        HEAP[$80]=$78; //@line 616 "pyexpat.c"
        var $81=$args; //@line 616 "pyexpat.c"
        var $82=$81; //@line 616 "pyexpat.c"
        var $83=HEAP[$82]; //@line 616 "pyexpat.c"
        var $84=($83)==0; //@line 616 "pyexpat.c"
        if ($84) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 616 "pyexpat.c"
      case 10: // $bb4
        var $85=$args; //@line 616 "pyexpat.c"
        var $86=$85+4; //@line 616 "pyexpat.c"
        var $87=HEAP[$86]; //@line 616 "pyexpat.c"
        var $88=$87+24; //@line 616 "pyexpat.c"
        var $89=HEAP[$88]; //@line 616 "pyexpat.c"
        var $90=$args; //@line 616 "pyexpat.c"
        FUNCTION_TABLE[$89]($90); //@line 616 "pyexpat.c"
        __label__ = 11; break; //@line 616 "pyexpat.c"
      case 11: // $bb5
        var $91=$rv; //@line 616 "pyexpat.c"
        var $92=($91)==0; //@line 616 "pyexpat.c"
        if ($92) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 616 "pyexpat.c"
      case 12: // $bb6
        var $93=$self; //@line 616 "pyexpat.c"
        $self_addr_i7=$93;
        var $94=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($94, 0); //@line 256 "pyexpat.c"
        var $95=$self_addr_i7; //@line 257 "pyexpat.c"
        var $96=$95+8; //@line 257 "pyexpat.c"
        var $97=HEAP[$96]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($97, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 616 "pyexpat.c"
      case 13: // $bb7
        var $98=$rv; //@line 616 "pyexpat.c"
        var $99=$98; //@line 616 "pyexpat.c"
        var $100=HEAP[$99]; //@line 616 "pyexpat.c"
        var $101=($100) - 1; //@line 616 "pyexpat.c"
        var $102=$rv; //@line 616 "pyexpat.c"
        var $103=$102; //@line 616 "pyexpat.c"
        HEAP[$103]=$101; //@line 616 "pyexpat.c"
        var $104=$rv; //@line 616 "pyexpat.c"
        var $105=$104; //@line 616 "pyexpat.c"
        var $106=HEAP[$105]; //@line 616 "pyexpat.c"
        var $107=($106)==0; //@line 616 "pyexpat.c"
        if ($107) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 616 "pyexpat.c"
      case 14: // $bb8
        var $108=$rv; //@line 616 "pyexpat.c"
        var $109=$108+4; //@line 616 "pyexpat.c"
        var $110=HEAP[$109]; //@line 616 "pyexpat.c"
        var $111=$110+24; //@line 616 "pyexpat.c"
        var $112=HEAP[$111]; //@line 616 "pyexpat.c"
        var $113=$rv; //@line 616 "pyexpat.c"
        FUNCTION_TABLE[$112]($113); //@line 616 "pyexpat.c"
        __label__ = 15; break; //@line 616 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 616 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_ProcessingInstructionHandler($userData, $target, $data) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $target_addr;
        var $data_addr;
        var $iftmp_45;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $target_addr=$target;
        $data_addr=$data;
        var $3=$userData_addr; //@line 620 "pyexpat.c"
        var $4=$3; //@line 620 "pyexpat.c"
        $self=$4; //@line 620 "pyexpat.c"
        $args=0; //@line 620 "pyexpat.c"
        $rv=0; //@line 620 "pyexpat.c"
        var $5=$self; //@line 620 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=2;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 620 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 18; break; } //@line 620 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 620 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 620 "pyexpat.c"
        if ($37) { __label__ = 18; break; } else { __label__ = 5; break; } //@line 620 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 620 "pyexpat.c"
        var $39=$38+12; //@line 620 "pyexpat.c"
        var $40=HEAP[$39]; //@line 620 "pyexpat.c"
        var $41=($40)!=0; //@line 620 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 620 "pyexpat.c"
      case 6: // $bb2
        $iftmp_45=(FUNCTION_TABLE_OFFSET + 2); //@line 620 "pyexpat.c"
        __label__ = 8; break; //@line 620 "pyexpat.c"
      case 7: // $bb3
        $iftmp_45=(FUNCTION_TABLE_OFFSET + 4); //@line 620 "pyexpat.c"
        __label__ = 8; break; //@line 620 "pyexpat.c"
      case 8: // $bb4
        var $42=$self; //@line 620 "pyexpat.c"
        var $43=$target_addr; //@line 620 "pyexpat.c"
        var $44=_string_intern($42, $43); //@line 620 "pyexpat.c"
        var $45=$iftmp_45; //@line 620 "pyexpat.c"
        var $46=$data_addr; //@line 620 "pyexpat.c"
        var $47=_Py_BuildValue(__str12, $44, $45, $46); //@line 620 "pyexpat.c"
        $args=$47; //@line 620 "pyexpat.c"
        var $48=($47)==0; //@line 620 "pyexpat.c"
        var $49=$self; //@line 620 "pyexpat.c"
        if ($48) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 620 "pyexpat.c"
      case 9: // $bb5
        $self_addr_i3=$49;
        var $50=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($50, 0); //@line 256 "pyexpat.c"
        var $51=$self_addr_i3; //@line 257 "pyexpat.c"
        var $52=$51+8; //@line 257 "pyexpat.c"
        var $53=HEAP[$52]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($53, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 18; break; //@line 620 "pyexpat.c"
      case 10: // $bb6
        var $54=$49+24; //@line 620 "pyexpat.c"
        HEAP[$54]=1; //@line 620 "pyexpat.c"
        var $55=$self; //@line 620 "pyexpat.c"
        var $56=$55+48; //@line 620 "pyexpat.c"
        var $57=HEAP[$56]; //@line 620 "pyexpat.c"
        var $58=$57+8; //@line 620 "pyexpat.c"
        var $59=HEAP[$58]; //@line 620 "pyexpat.c"
        $slot_addr_i=2;
        $func_name_addr_i=__str13;
        $lineno_addr_i=624;
        var $60=$slot_addr_i; //@line 264 "pyexpat.c"
        var $61=_handler_info+$60*20; //@line 264 "pyexpat.c"
        var $62=$61+12; //@line 264 "pyexpat.c"
        var $63=HEAP[$62]; //@line 264 "pyexpat.c"
        var $64=($63)==0; //@line 264 "pyexpat.c"
        if ($64) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 264 "pyexpat.c"
      case 11: // $bb_i5
        var $65=$slot_addr_i; //@line 265 "pyexpat.c"
        var $66=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $67=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $68=_PyCode_NewEmpty(__str6, $66, $67); //@line 265 "pyexpat.c"
        var $69=_handler_info+$65*20; //@line 265 "pyexpat.c"
        var $70=$69+12; //@line 265 "pyexpat.c"
        HEAP[$70]=$68; //@line 265 "pyexpat.c"
        __label__ = 12; break; //@line 265 "pyexpat.c"
      case 12: // $getcode_exit
        var $71=$slot_addr_i; //@line 268 "pyexpat.c"
        var $72=_handler_info+$71*20; //@line 268 "pyexpat.c"
        var $73=$72+12; //@line 268 "pyexpat.c"
        var $74=HEAP[$73]; //@line 268 "pyexpat.c"
        $0=$74; //@line 268 "pyexpat.c"
        var $75=$0; //@line 268 "pyexpat.c"
        $retval_i4=$75; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $76=$args; //@line 620 "pyexpat.c"
        var $77=$self; //@line 620 "pyexpat.c"
        var $78=_call_with_frame($retval2_i, $59, $76, $77); //@line 620 "pyexpat.c"
        $rv=$78; //@line 620 "pyexpat.c"
        var $79=$self; //@line 620 "pyexpat.c"
        var $80=$79+24; //@line 620 "pyexpat.c"
        HEAP[$80]=0; //@line 620 "pyexpat.c"
        var $81=$args; //@line 620 "pyexpat.c"
        var $82=$81; //@line 620 "pyexpat.c"
        var $83=HEAP[$82]; //@line 620 "pyexpat.c"
        var $84=($83) - 1; //@line 620 "pyexpat.c"
        var $85=$args; //@line 620 "pyexpat.c"
        var $86=$85; //@line 620 "pyexpat.c"
        HEAP[$86]=$84; //@line 620 "pyexpat.c"
        var $87=$args; //@line 620 "pyexpat.c"
        var $88=$87; //@line 620 "pyexpat.c"
        var $89=HEAP[$88]; //@line 620 "pyexpat.c"
        var $90=($89)==0; //@line 620 "pyexpat.c"
        if ($90) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 620 "pyexpat.c"
      case 13: // $bb7
        var $91=$args; //@line 620 "pyexpat.c"
        var $92=$91+4; //@line 620 "pyexpat.c"
        var $93=HEAP[$92]; //@line 620 "pyexpat.c"
        var $94=$93+24; //@line 620 "pyexpat.c"
        var $95=HEAP[$94]; //@line 620 "pyexpat.c"
        var $96=$args; //@line 620 "pyexpat.c"
        FUNCTION_TABLE[$95]($96); //@line 620 "pyexpat.c"
        __label__ = 14; break; //@line 620 "pyexpat.c"
      case 14: // $bb8
        var $97=$rv; //@line 620 "pyexpat.c"
        var $98=($97)==0; //@line 620 "pyexpat.c"
        if ($98) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 620 "pyexpat.c"
      case 15: // $bb9
        var $99=$self; //@line 620 "pyexpat.c"
        $self_addr_i7=$99;
        var $100=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($100, 0); //@line 256 "pyexpat.c"
        var $101=$self_addr_i7; //@line 257 "pyexpat.c"
        var $102=$101+8; //@line 257 "pyexpat.c"
        var $103=HEAP[$102]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($103, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 18; break; //@line 620 "pyexpat.c"
      case 16: // $bb10
        var $104=$rv; //@line 620 "pyexpat.c"
        var $105=$104; //@line 620 "pyexpat.c"
        var $106=HEAP[$105]; //@line 620 "pyexpat.c"
        var $107=($106) - 1; //@line 620 "pyexpat.c"
        var $108=$rv; //@line 620 "pyexpat.c"
        var $109=$108; //@line 620 "pyexpat.c"
        HEAP[$109]=$107; //@line 620 "pyexpat.c"
        var $110=$rv; //@line 620 "pyexpat.c"
        var $111=$110; //@line 620 "pyexpat.c"
        var $112=HEAP[$111]; //@line 620 "pyexpat.c"
        var $113=($112)==0; //@line 620 "pyexpat.c"
        if ($113) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 620 "pyexpat.c"
      case 17: // $bb11
        var $114=$rv; //@line 620 "pyexpat.c"
        var $115=$114+4; //@line 620 "pyexpat.c"
        var $116=HEAP[$115]; //@line 620 "pyexpat.c"
        var $117=$116+24; //@line 620 "pyexpat.c"
        var $118=HEAP[$117]; //@line 620 "pyexpat.c"
        var $119=$rv; //@line 620 "pyexpat.c"
        FUNCTION_TABLE[$118]($119); //@line 620 "pyexpat.c"
        __label__ = 18; break; //@line 620 "pyexpat.c"
      case 18: // $return
        ;
        return; //@line 620 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_UnparsedEntityDeclHandler($userData, $entityName, $base, $systemId, $publicId, $notationName) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $entityName_addr;
        var $base_addr;
        var $systemId_addr;
        var $publicId_addr;
        var $notationName_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $entityName_addr=$entityName;
        $base_addr=$base;
        $systemId_addr=$systemId;
        $publicId_addr=$publicId;
        $notationName_addr=$notationName;
        var $3=$userData_addr; //@line 626 "pyexpat.c"
        var $4=$3; //@line 626 "pyexpat.c"
        $self=$4; //@line 626 "pyexpat.c"
        $args=0; //@line 626 "pyexpat.c"
        $rv=0; //@line 626 "pyexpat.c"
        var $5=$self; //@line 626 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=4;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 626 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 626 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 626 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 626 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 626 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 626 "pyexpat.c"
        var $39=$notationName_addr; //@line 626 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 626 "pyexpat.c"
        var $41=$self; //@line 626 "pyexpat.c"
        var $42=$publicId_addr; //@line 626 "pyexpat.c"
        var $43=_string_intern($41, $42); //@line 626 "pyexpat.c"
        var $44=$self; //@line 626 "pyexpat.c"
        var $45=$systemId_addr; //@line 626 "pyexpat.c"
        var $46=_string_intern($44, $45); //@line 626 "pyexpat.c"
        var $47=$self; //@line 626 "pyexpat.c"
        var $48=$base_addr; //@line 626 "pyexpat.c"
        var $49=_string_intern($47, $48); //@line 626 "pyexpat.c"
        var $50=$self; //@line 626 "pyexpat.c"
        var $51=$entityName_addr; //@line 626 "pyexpat.c"
        var $52=_string_intern($50, $51); //@line 626 "pyexpat.c"
        var $53=_Py_BuildValue(__str14, $52, $49, $46, $43, $40); //@line 626 "pyexpat.c"
        $args=$53; //@line 626 "pyexpat.c"
        var $54=($53)==0; //@line 626 "pyexpat.c"
        var $55=$self; //@line 626 "pyexpat.c"
        if ($54) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 626 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$55;
        var $56=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($56, 0); //@line 256 "pyexpat.c"
        var $57=$self_addr_i3; //@line 257 "pyexpat.c"
        var $58=$57+8; //@line 257 "pyexpat.c"
        var $59=HEAP[$58]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($59, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 626 "pyexpat.c"
      case 7: // $bb3
        var $60=$55+24; //@line 626 "pyexpat.c"
        HEAP[$60]=1; //@line 626 "pyexpat.c"
        var $61=$self; //@line 626 "pyexpat.c"
        var $62=$61+48; //@line 626 "pyexpat.c"
        var $63=HEAP[$62]; //@line 626 "pyexpat.c"
        var $64=$63+16; //@line 626 "pyexpat.c"
        var $65=HEAP[$64]; //@line 626 "pyexpat.c"
        $slot_addr_i=4;
        $func_name_addr_i=__str15;
        $lineno_addr_i=636;
        var $66=$slot_addr_i; //@line 264 "pyexpat.c"
        var $67=_handler_info+$66*20; //@line 264 "pyexpat.c"
        var $68=$67+12; //@line 264 "pyexpat.c"
        var $69=HEAP[$68]; //@line 264 "pyexpat.c"
        var $70=($69)==0; //@line 264 "pyexpat.c"
        if ($70) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $71=$slot_addr_i; //@line 265 "pyexpat.c"
        var $72=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $73=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $74=_PyCode_NewEmpty(__str6, $72, $73); //@line 265 "pyexpat.c"
        var $75=_handler_info+$71*20; //@line 265 "pyexpat.c"
        var $76=$75+12; //@line 265 "pyexpat.c"
        HEAP[$76]=$74; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $77=$slot_addr_i; //@line 268 "pyexpat.c"
        var $78=_handler_info+$77*20; //@line 268 "pyexpat.c"
        var $79=$78+12; //@line 268 "pyexpat.c"
        var $80=HEAP[$79]; //@line 268 "pyexpat.c"
        $0=$80; //@line 268 "pyexpat.c"
        var $81=$0; //@line 268 "pyexpat.c"
        $retval_i4=$81; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $82=$args; //@line 626 "pyexpat.c"
        var $83=$self; //@line 626 "pyexpat.c"
        var $84=_call_with_frame($retval2_i, $65, $82, $83); //@line 626 "pyexpat.c"
        $rv=$84; //@line 626 "pyexpat.c"
        var $85=$self; //@line 626 "pyexpat.c"
        var $86=$85+24; //@line 626 "pyexpat.c"
        HEAP[$86]=0; //@line 626 "pyexpat.c"
        var $87=$args; //@line 626 "pyexpat.c"
        var $88=$87; //@line 626 "pyexpat.c"
        var $89=HEAP[$88]; //@line 626 "pyexpat.c"
        var $90=($89) - 1; //@line 626 "pyexpat.c"
        var $91=$args; //@line 626 "pyexpat.c"
        var $92=$91; //@line 626 "pyexpat.c"
        HEAP[$92]=$90; //@line 626 "pyexpat.c"
        var $93=$args; //@line 626 "pyexpat.c"
        var $94=$93; //@line 626 "pyexpat.c"
        var $95=HEAP[$94]; //@line 626 "pyexpat.c"
        var $96=($95)==0; //@line 626 "pyexpat.c"
        if ($96) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 626 "pyexpat.c"
      case 10: // $bb4
        var $97=$args; //@line 626 "pyexpat.c"
        var $98=$97+4; //@line 626 "pyexpat.c"
        var $99=HEAP[$98]; //@line 626 "pyexpat.c"
        var $100=$99+24; //@line 626 "pyexpat.c"
        var $101=HEAP[$100]; //@line 626 "pyexpat.c"
        var $102=$args; //@line 626 "pyexpat.c"
        FUNCTION_TABLE[$101]($102); //@line 626 "pyexpat.c"
        __label__ = 11; break; //@line 626 "pyexpat.c"
      case 11: // $bb5
        var $103=$rv; //@line 626 "pyexpat.c"
        var $104=($103)==0; //@line 626 "pyexpat.c"
        if ($104) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 626 "pyexpat.c"
      case 12: // $bb6
        var $105=$self; //@line 626 "pyexpat.c"
        $self_addr_i7=$105;
        var $106=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($106, 0); //@line 256 "pyexpat.c"
        var $107=$self_addr_i7; //@line 257 "pyexpat.c"
        var $108=$107+8; //@line 257 "pyexpat.c"
        var $109=HEAP[$108]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($109, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 626 "pyexpat.c"
      case 13: // $bb7
        var $110=$rv; //@line 626 "pyexpat.c"
        var $111=$110; //@line 626 "pyexpat.c"
        var $112=HEAP[$111]; //@line 626 "pyexpat.c"
        var $113=($112) - 1; //@line 626 "pyexpat.c"
        var $114=$rv; //@line 626 "pyexpat.c"
        var $115=$114; //@line 626 "pyexpat.c"
        HEAP[$115]=$113; //@line 626 "pyexpat.c"
        var $116=$rv; //@line 626 "pyexpat.c"
        var $117=$116; //@line 626 "pyexpat.c"
        var $118=HEAP[$117]; //@line 626 "pyexpat.c"
        var $119=($118)==0; //@line 626 "pyexpat.c"
        if ($119) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 626 "pyexpat.c"
      case 14: // $bb8
        var $120=$rv; //@line 626 "pyexpat.c"
        var $121=$120+4; //@line 626 "pyexpat.c"
        var $122=HEAP[$121]; //@line 626 "pyexpat.c"
        var $123=$122+24; //@line 626 "pyexpat.c"
        var $124=HEAP[$123]; //@line 626 "pyexpat.c"
        var $125=$rv; //@line 626 "pyexpat.c"
        FUNCTION_TABLE[$124]($125); //@line 626 "pyexpat.c"
        __label__ = 15; break; //@line 626 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 626 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_EntityDeclHandler($userData, $entityName, $is_parameter_entity, $value, $value_length, $base, $systemId, $publicId, $notationName) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i18;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i15;
        var $0;
        var $self_addr_i14;
        var $str_addr_i7;
        var $len_addr_i8;
        var $retval_i9;
        var $1;
        var $str_addr_i;
        var $len_addr_i;
        var $retval_i3;
        var $2;
        var $self_addr_i1;
        var $retval_i2;
        var $3;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $4;
        var $handler_i;
        var $userData_addr;
        var $entityName_addr;
        var $is_parameter_entity_addr;
        var $value_addr;
        var $value_length_addr;
        var $base_addr;
        var $systemId_addr;
        var $publicId_addr;
        var $notationName_addr;
        var $iftmp_46;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $entityName_addr=$entityName;
        $is_parameter_entity_addr=$is_parameter_entity;
        $value_addr=$value;
        $value_length_addr=$value_length;
        $base_addr=$base;
        $systemId_addr=$systemId;
        $publicId_addr=$publicId;
        $notationName_addr=$notationName;
        var $5=$userData_addr; //@line 656 "pyexpat.c"
        var $6=$5; //@line 656 "pyexpat.c"
        $self=$6; //@line 656 "pyexpat.c"
        $args=0; //@line 656 "pyexpat.c"
        $rv=0; //@line 656 "pyexpat.c"
        var $7=$self; //@line 656 "pyexpat.c"
        $self_addr_i=$7;
        $type_addr_i=17;
        var $8=$self_addr_i; //@line 147 "pyexpat.c"
        var $9=$8+48; //@line 147 "pyexpat.c"
        var $10=HEAP[$9]; //@line 147 "pyexpat.c"
        var $11=$type_addr_i; //@line 147 "pyexpat.c"
        var $12=$10+4*$11; //@line 147 "pyexpat.c"
        var $13=HEAP[$12]; //@line 147 "pyexpat.c"
        $handler_i=$13; //@line 147 "pyexpat.c"
        var $14=$handler_i; //@line 148 "pyexpat.c"
        var $15=($14)!=0; //@line 148 "pyexpat.c"
        var $16=($15); //@line 148 "pyexpat.c"
        $4=$16; //@line 148 "pyexpat.c"
        var $17=$4; //@line 148 "pyexpat.c"
        $retval_i=$17; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $18=($retval1_i)!=0; //@line 656 "pyexpat.c"
        if ($18) { __label__ = 1; break; } else { __label__ = 24; break; } //@line 656 "pyexpat.c"
      case 1: // $bb
        var $19=$self; //@line 656 "pyexpat.c"
        $self_addr_i1=$19;
        var $20=$self_addr_i1; //@line 460 "pyexpat.c"
        var $21=$20+32; //@line 460 "pyexpat.c"
        var $22=HEAP[$21]; //@line 460 "pyexpat.c"
        var $23=($22)==0; //@line 460 "pyexpat.c"
        if ($23) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $24=$self_addr_i1; //@line 460 "pyexpat.c"
        var $25=$24+40; //@line 460 "pyexpat.c"
        var $26=HEAP[$25]; //@line 460 "pyexpat.c"
        var $27=($26)==0; //@line 460 "pyexpat.c"
        if ($27) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $3=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $28=$self_addr_i1; //@line 462 "pyexpat.c"
        var $29=$28+40; //@line 462 "pyexpat.c"
        var $30=HEAP[$29]; //@line 462 "pyexpat.c"
        var $31=$self_addr_i1; //@line 462 "pyexpat.c"
        var $32=$31+32; //@line 462 "pyexpat.c"
        var $33=HEAP[$32]; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 462 "pyexpat.c"
        var $35=_call_character_handler($34, $33, $30); //@line 462 "pyexpat.c"
        $rc_i=$35; //@line 462 "pyexpat.c"
        var $36=$self_addr_i1; //@line 463 "pyexpat.c"
        var $37=$36+40; //@line 463 "pyexpat.c"
        HEAP[$37]=0; //@line 463 "pyexpat.c"
        var $38=$rc_i; //@line 464 "pyexpat.c"
        $3=$38; //@line 464 "pyexpat.c"
        $retval_i2=$38; //@line 461 "pyexpat.c"
        var $39=($38) < 0; //@line 656 "pyexpat.c"
        if ($39) { __label__ = 24; break; } else { __label__ = 5; break; } //@line 656 "pyexpat.c"
      case 5: // $bb1
        var $40=$self; //@line 656 "pyexpat.c"
        var $41=$notationName_addr; //@line 656 "pyexpat.c"
        var $42=_string_intern($40, $41); //@line 656 "pyexpat.c"
        var $43=$self; //@line 656 "pyexpat.c"
        var $44=$publicId_addr; //@line 656 "pyexpat.c"
        var $45=_string_intern($43, $44); //@line 656 "pyexpat.c"
        var $46=$self; //@line 656 "pyexpat.c"
        var $47=$systemId_addr; //@line 656 "pyexpat.c"
        var $48=_string_intern($46, $47); //@line 656 "pyexpat.c"
        var $49=$self; //@line 656 "pyexpat.c"
        var $50=$base_addr; //@line 656 "pyexpat.c"
        var $51=_string_intern($49, $50); //@line 656 "pyexpat.c"
        var $52=$self; //@line 656 "pyexpat.c"
        var $53=$52+12; //@line 656 "pyexpat.c"
        var $54=HEAP[$53]; //@line 656 "pyexpat.c"
        var $55=($54)!=0; //@line 656 "pyexpat.c"
        var $56=$value_addr; //@line 656 "pyexpat.c"
        var $57=$value_length_addr; //@line 656 "pyexpat.c"
        if ($55) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 656 "pyexpat.c"
      case 6: // $bb2
        $str_addr_i=$56;
        $len_addr_i=$57;
        var $58=$str_addr_i; //@line 187 "pyexpat.c"
        var $59=($58)==0; //@line 187 "pyexpat.c"
        if ($59) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 187 "pyexpat.c"
      case 7: // $bb_i4
        var $60=HEAP[__Py_NoneStruct]; //@line 188 "pyexpat.c"
        var $61=($60) + 1; //@line 188 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$61; //@line 188 "pyexpat.c"
        $2=__Py_NoneStruct; //@line 189 "pyexpat.c"
        __label__ = 9; break; //@line 189 "pyexpat.c"
      case 8: // $bb1_i5
        var $62=$str_addr_i; //@line 191 "pyexpat.c"
        var $63=$len_addr_i; //@line 191 "pyexpat.c"
        var $64=_PyUnicodeUCS2_DecodeUTF8($62, $63, __str5); //@line 191 "pyexpat.c"
        $2=$64; //@line 191 "pyexpat.c"
        __label__ = 9; break; //@line 191 "pyexpat.c"
      case 9: // $conv_string_len_to_unicode_exit
        var $65=$2; //@line 189 "pyexpat.c"
        $retval_i3=$65; //@line 189 "pyexpat.c"
        var $retval3_i=$retval_i3; //@line 189 "pyexpat.c"
        $iftmp_46=$retval3_i; //@line 656 "pyexpat.c"
        __label__ = 14; break; //@line 656 "pyexpat.c"
      case 10: // $bb3
        $str_addr_i7=$56;
        $len_addr_i8=$57;
        var $66=$str_addr_i7; //@line 217 "pyexpat.c"
        var $67=($66)==0; //@line 217 "pyexpat.c"
        if ($67) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 217 "pyexpat.c"
      case 11: // $bb_i10
        var $68=HEAP[__Py_NoneStruct]; //@line 218 "pyexpat.c"
        var $69=($68) + 1; //@line 218 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$69; //@line 218 "pyexpat.c"
        $1=__Py_NoneStruct; //@line 219 "pyexpat.c"
        __label__ = 13; break; //@line 219 "pyexpat.c"
      case 12: // $bb1_i11
        var $70=$str_addr_i7; //@line 221 "pyexpat.c"
        var $71=$len_addr_i8; //@line 221 "pyexpat.c"
        var $72=_PyString_FromStringAndSize($70, $71); //@line 221 "pyexpat.c"
        $1=$72; //@line 221 "pyexpat.c"
        __label__ = 13; break; //@line 221 "pyexpat.c"
      case 13: // $conv_string_len_to_utf8_exit
        var $73=$1; //@line 219 "pyexpat.c"
        $retval_i9=$73; //@line 219 "pyexpat.c"
        var $retval3_i12=$retval_i9; //@line 219 "pyexpat.c"
        $iftmp_46=$retval3_i12; //@line 656 "pyexpat.c"
        __label__ = 14; break; //@line 656 "pyexpat.c"
      case 14: // $bb4
        var $74=$self; //@line 656 "pyexpat.c"
        var $75=$entityName_addr; //@line 656 "pyexpat.c"
        var $76=_string_intern($74, $75); //@line 656 "pyexpat.c"
        var $77=$is_parameter_entity_addr; //@line 656 "pyexpat.c"
        var $78=$iftmp_46; //@line 656 "pyexpat.c"
        var $79=_Py_BuildValue(__str16, $76, $77, $78, $51, $48, $45, $42); //@line 656 "pyexpat.c"
        $args=$79; //@line 656 "pyexpat.c"
        var $80=($79)==0; //@line 656 "pyexpat.c"
        var $81=$self; //@line 656 "pyexpat.c"
        if ($80) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 656 "pyexpat.c"
      case 15: // $bb5
        $self_addr_i14=$81;
        var $82=$self_addr_i14; //@line 256 "pyexpat.c"
        _clear_handlers($82, 0); //@line 256 "pyexpat.c"
        var $83=$self_addr_i14; //@line 257 "pyexpat.c"
        var $84=$83+8; //@line 257 "pyexpat.c"
        var $85=HEAP[$84]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($85, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 656 "pyexpat.c"
      case 16: // $bb6
        var $86=$81+24; //@line 656 "pyexpat.c"
        HEAP[$86]=1; //@line 656 "pyexpat.c"
        var $87=$self; //@line 656 "pyexpat.c"
        var $88=$87+48; //@line 656 "pyexpat.c"
        var $89=HEAP[$88]; //@line 656 "pyexpat.c"
        var $90=$89+68; //@line 656 "pyexpat.c"
        var $91=HEAP[$90]; //@line 656 "pyexpat.c"
        $slot_addr_i=17;
        $func_name_addr_i=__str17;
        $lineno_addr_i=673;
        var $92=$slot_addr_i; //@line 264 "pyexpat.c"
        var $93=_handler_info+$92*20; //@line 264 "pyexpat.c"
        var $94=$93+12; //@line 264 "pyexpat.c"
        var $95=HEAP[$94]; //@line 264 "pyexpat.c"
        var $96=($95)==0; //@line 264 "pyexpat.c"
        if ($96) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 264 "pyexpat.c"
      case 17: // $bb_i16
        var $97=$slot_addr_i; //@line 265 "pyexpat.c"
        var $98=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $99=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $100=_PyCode_NewEmpty(__str6, $98, $99); //@line 265 "pyexpat.c"
        var $101=_handler_info+$97*20; //@line 265 "pyexpat.c"
        var $102=$101+12; //@line 265 "pyexpat.c"
        HEAP[$102]=$100; //@line 265 "pyexpat.c"
        __label__ = 18; break; //@line 265 "pyexpat.c"
      case 18: // $getcode_exit
        var $103=$slot_addr_i; //@line 268 "pyexpat.c"
        var $104=_handler_info+$103*20; //@line 268 "pyexpat.c"
        var $105=$104+12; //@line 268 "pyexpat.c"
        var $106=HEAP[$105]; //@line 268 "pyexpat.c"
        $0=$106; //@line 268 "pyexpat.c"
        var $107=$0; //@line 268 "pyexpat.c"
        $retval_i15=$107; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i15; //@line 268 "pyexpat.c"
        var $108=$args; //@line 656 "pyexpat.c"
        var $109=$self; //@line 656 "pyexpat.c"
        var $110=_call_with_frame($retval2_i, $91, $108, $109); //@line 656 "pyexpat.c"
        $rv=$110; //@line 656 "pyexpat.c"
        var $111=$self; //@line 656 "pyexpat.c"
        var $112=$111+24; //@line 656 "pyexpat.c"
        HEAP[$112]=0; //@line 656 "pyexpat.c"
        var $113=$args; //@line 656 "pyexpat.c"
        var $114=$113; //@line 656 "pyexpat.c"
        var $115=HEAP[$114]; //@line 656 "pyexpat.c"
        var $116=($115) - 1; //@line 656 "pyexpat.c"
        var $117=$args; //@line 656 "pyexpat.c"
        var $118=$117; //@line 656 "pyexpat.c"
        HEAP[$118]=$116; //@line 656 "pyexpat.c"
        var $119=$args; //@line 656 "pyexpat.c"
        var $120=$119; //@line 656 "pyexpat.c"
        var $121=HEAP[$120]; //@line 656 "pyexpat.c"
        var $122=($121)==0; //@line 656 "pyexpat.c"
        if ($122) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 656 "pyexpat.c"
      case 19: // $bb7
        var $123=$args; //@line 656 "pyexpat.c"
        var $124=$123+4; //@line 656 "pyexpat.c"
        var $125=HEAP[$124]; //@line 656 "pyexpat.c"
        var $126=$125+24; //@line 656 "pyexpat.c"
        var $127=HEAP[$126]; //@line 656 "pyexpat.c"
        var $128=$args; //@line 656 "pyexpat.c"
        FUNCTION_TABLE[$127]($128); //@line 656 "pyexpat.c"
        __label__ = 20; break; //@line 656 "pyexpat.c"
      case 20: // $bb8
        var $129=$rv; //@line 656 "pyexpat.c"
        var $130=($129)==0; //@line 656 "pyexpat.c"
        if ($130) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 656 "pyexpat.c"
      case 21: // $bb9
        var $131=$self; //@line 656 "pyexpat.c"
        $self_addr_i18=$131;
        var $132=$self_addr_i18; //@line 256 "pyexpat.c"
        _clear_handlers($132, 0); //@line 256 "pyexpat.c"
        var $133=$self_addr_i18; //@line 257 "pyexpat.c"
        var $134=$133+8; //@line 257 "pyexpat.c"
        var $135=HEAP[$134]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($135, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 656 "pyexpat.c"
      case 22: // $bb10
        var $136=$rv; //@line 656 "pyexpat.c"
        var $137=$136; //@line 656 "pyexpat.c"
        var $138=HEAP[$137]; //@line 656 "pyexpat.c"
        var $139=($138) - 1; //@line 656 "pyexpat.c"
        var $140=$rv; //@line 656 "pyexpat.c"
        var $141=$140; //@line 656 "pyexpat.c"
        HEAP[$141]=$139; //@line 656 "pyexpat.c"
        var $142=$rv; //@line 656 "pyexpat.c"
        var $143=$142; //@line 656 "pyexpat.c"
        var $144=HEAP[$143]; //@line 656 "pyexpat.c"
        var $145=($144)==0; //@line 656 "pyexpat.c"
        if ($145) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 656 "pyexpat.c"
      case 23: // $bb11
        var $146=$rv; //@line 656 "pyexpat.c"
        var $147=$146+4; //@line 656 "pyexpat.c"
        var $148=HEAP[$147]; //@line 656 "pyexpat.c"
        var $149=$148+24; //@line 656 "pyexpat.c"
        var $150=HEAP[$149]; //@line 656 "pyexpat.c"
        var $151=$rv; //@line 656 "pyexpat.c"
        FUNCTION_TABLE[$150]($151); //@line 656 "pyexpat.c"
        __label__ = 24; break; //@line 656 "pyexpat.c"
      case 24: // $return
        ;
        return; //@line 656 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_XmlDeclHandler($userData, $version, $encoding, $standalone) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $version_addr;
        var $encoding_addr;
        var $standalone_addr;
        var $iftmp_48;
        var $iftmp_47;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $version_addr=$version;
        $encoding_addr=$encoding;
        $standalone_addr=$standalone;
        var $3=$userData_addr; //@line 676 "pyexpat.c"
        var $4=$3; //@line 676 "pyexpat.c"
        $self=$4; //@line 676 "pyexpat.c"
        $args=0; //@line 676 "pyexpat.c"
        $rv=0; //@line 676 "pyexpat.c"
        var $5=$self; //@line 676 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=18;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 676 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 21; break; } //@line 676 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 676 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 676 "pyexpat.c"
        if ($37) { __label__ = 21; break; } else { __label__ = 5; break; } //@line 676 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 676 "pyexpat.c"
        var $39=$38+12; //@line 676 "pyexpat.c"
        var $40=HEAP[$39]; //@line 676 "pyexpat.c"
        var $41=($40)!=0; //@line 676 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 676 "pyexpat.c"
      case 6: // $bb2
        $iftmp_47=(FUNCTION_TABLE_OFFSET + 2); //@line 676 "pyexpat.c"
        __label__ = 8; break; //@line 676 "pyexpat.c"
      case 7: // $bb3
        $iftmp_47=(FUNCTION_TABLE_OFFSET + 4); //@line 676 "pyexpat.c"
        __label__ = 8; break; //@line 676 "pyexpat.c"
      case 8: // $bb4
        var $42=$self; //@line 676 "pyexpat.c"
        var $43=$42+12; //@line 676 "pyexpat.c"
        var $44=HEAP[$43]; //@line 676 "pyexpat.c"
        var $45=($44)!=0; //@line 676 "pyexpat.c"
        if ($45) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 676 "pyexpat.c"
      case 9: // $bb5
        $iftmp_48=(FUNCTION_TABLE_OFFSET + 2); //@line 676 "pyexpat.c"
        __label__ = 11; break; //@line 676 "pyexpat.c"
      case 10: // $bb6
        $iftmp_48=(FUNCTION_TABLE_OFFSET + 4); //@line 676 "pyexpat.c"
        __label__ = 11; break; //@line 676 "pyexpat.c"
      case 11: // $bb7
        var $46=$iftmp_48; //@line 676 "pyexpat.c"
        var $47=$version_addr; //@line 676 "pyexpat.c"
        var $48=$iftmp_47; //@line 676 "pyexpat.c"
        var $49=$encoding_addr; //@line 676 "pyexpat.c"
        var $50=$standalone_addr; //@line 676 "pyexpat.c"
        var $51=_Py_BuildValue(__str18, $46, $47, $48, $49, $50); //@line 676 "pyexpat.c"
        $args=$51; //@line 676 "pyexpat.c"
        var $52=($51)==0; //@line 676 "pyexpat.c"
        var $53=$self; //@line 676 "pyexpat.c"
        if ($52) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 676 "pyexpat.c"
      case 12: // $bb8
        $self_addr_i3=$53;
        var $54=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($54, 0); //@line 256 "pyexpat.c"
        var $55=$self_addr_i3; //@line 257 "pyexpat.c"
        var $56=$55+8; //@line 257 "pyexpat.c"
        var $57=HEAP[$56]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($57, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 21; break; //@line 676 "pyexpat.c"
      case 13: // $bb9
        var $58=$53+24; //@line 676 "pyexpat.c"
        HEAP[$58]=1; //@line 676 "pyexpat.c"
        var $59=$self; //@line 676 "pyexpat.c"
        var $60=$59+48; //@line 676 "pyexpat.c"
        var $61=HEAP[$60]; //@line 676 "pyexpat.c"
        var $62=$61+72; //@line 676 "pyexpat.c"
        var $63=HEAP[$62]; //@line 676 "pyexpat.c"
        $slot_addr_i=18;
        $func_name_addr_i=__str19;
        $lineno_addr_i=683;
        var $64=$slot_addr_i; //@line 264 "pyexpat.c"
        var $65=_handler_info+$64*20; //@line 264 "pyexpat.c"
        var $66=$65+12; //@line 264 "pyexpat.c"
        var $67=HEAP[$66]; //@line 264 "pyexpat.c"
        var $68=($67)==0; //@line 264 "pyexpat.c"
        if ($68) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 264 "pyexpat.c"
      case 14: // $bb_i5
        var $69=$slot_addr_i; //@line 265 "pyexpat.c"
        var $70=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $71=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $72=_PyCode_NewEmpty(__str6, $70, $71); //@line 265 "pyexpat.c"
        var $73=_handler_info+$69*20; //@line 265 "pyexpat.c"
        var $74=$73+12; //@line 265 "pyexpat.c"
        HEAP[$74]=$72; //@line 265 "pyexpat.c"
        __label__ = 15; break; //@line 265 "pyexpat.c"
      case 15: // $getcode_exit
        var $75=$slot_addr_i; //@line 268 "pyexpat.c"
        var $76=_handler_info+$75*20; //@line 268 "pyexpat.c"
        var $77=$76+12; //@line 268 "pyexpat.c"
        var $78=HEAP[$77]; //@line 268 "pyexpat.c"
        $0=$78; //@line 268 "pyexpat.c"
        var $79=$0; //@line 268 "pyexpat.c"
        $retval_i4=$79; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $80=$args; //@line 676 "pyexpat.c"
        var $81=$self; //@line 676 "pyexpat.c"
        var $82=_call_with_frame($retval2_i, $63, $80, $81); //@line 676 "pyexpat.c"
        $rv=$82; //@line 676 "pyexpat.c"
        var $83=$self; //@line 676 "pyexpat.c"
        var $84=$83+24; //@line 676 "pyexpat.c"
        HEAP[$84]=0; //@line 676 "pyexpat.c"
        var $85=$args; //@line 676 "pyexpat.c"
        var $86=$85; //@line 676 "pyexpat.c"
        var $87=HEAP[$86]; //@line 676 "pyexpat.c"
        var $88=($87) - 1; //@line 676 "pyexpat.c"
        var $89=$args; //@line 676 "pyexpat.c"
        var $90=$89; //@line 676 "pyexpat.c"
        HEAP[$90]=$88; //@line 676 "pyexpat.c"
        var $91=$args; //@line 676 "pyexpat.c"
        var $92=$91; //@line 676 "pyexpat.c"
        var $93=HEAP[$92]; //@line 676 "pyexpat.c"
        var $94=($93)==0; //@line 676 "pyexpat.c"
        if ($94) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 676 "pyexpat.c"
      case 16: // $bb10
        var $95=$args; //@line 676 "pyexpat.c"
        var $96=$95+4; //@line 676 "pyexpat.c"
        var $97=HEAP[$96]; //@line 676 "pyexpat.c"
        var $98=$97+24; //@line 676 "pyexpat.c"
        var $99=HEAP[$98]; //@line 676 "pyexpat.c"
        var $100=$args; //@line 676 "pyexpat.c"
        FUNCTION_TABLE[$99]($100); //@line 676 "pyexpat.c"
        __label__ = 17; break; //@line 676 "pyexpat.c"
      case 17: // $bb11
        var $101=$rv; //@line 676 "pyexpat.c"
        var $102=($101)==0; //@line 676 "pyexpat.c"
        if ($102) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 676 "pyexpat.c"
      case 18: // $bb12
        var $103=$self; //@line 676 "pyexpat.c"
        $self_addr_i7=$103;
        var $104=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($104, 0); //@line 256 "pyexpat.c"
        var $105=$self_addr_i7; //@line 257 "pyexpat.c"
        var $106=$105+8; //@line 257 "pyexpat.c"
        var $107=HEAP[$106]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($107, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 21; break; //@line 676 "pyexpat.c"
      case 19: // $bb13
        var $108=$rv; //@line 676 "pyexpat.c"
        var $109=$108; //@line 676 "pyexpat.c"
        var $110=HEAP[$109]; //@line 676 "pyexpat.c"
        var $111=($110) - 1; //@line 676 "pyexpat.c"
        var $112=$rv; //@line 676 "pyexpat.c"
        var $113=$112; //@line 676 "pyexpat.c"
        HEAP[$113]=$111; //@line 676 "pyexpat.c"
        var $114=$rv; //@line 676 "pyexpat.c"
        var $115=$114; //@line 676 "pyexpat.c"
        var $116=HEAP[$115]; //@line 676 "pyexpat.c"
        var $117=($116)==0; //@line 676 "pyexpat.c"
        if ($117) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 676 "pyexpat.c"
      case 20: // $bb14
        var $118=$rv; //@line 676 "pyexpat.c"
        var $119=$118+4; //@line 676 "pyexpat.c"
        var $120=HEAP[$119]; //@line 676 "pyexpat.c"
        var $121=$120+24; //@line 676 "pyexpat.c"
        var $122=HEAP[$121]; //@line 676 "pyexpat.c"
        var $123=$rv; //@line 676 "pyexpat.c"
        FUNCTION_TABLE[$122]($123); //@line 676 "pyexpat.c"
        __label__ = 21; break; //@line 676 "pyexpat.c"
      case 21: // $return
        ;
        return; //@line 676 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _conv_content_model($model, $conv_string) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $model_addr;
        var $conv_string_addr;
        var $retval;
        var $0;
        var $result;
        var $children;
        var $i;
        var $child;
        $model_addr=$model;
        $conv_string_addr=$conv_string;
        $result=0; //@line 689 "pyexpat.c"
        var $1=$model_addr; //@line 690 "pyexpat.c"
        var $2=$1+12; //@line 690 "pyexpat.c"
        var $3=HEAP[$2]; //@line 690 "pyexpat.c"
        var $4=_PyTuple_New($3); //@line 690 "pyexpat.c"
        $children=$4; //@line 690 "pyexpat.c"
        var $5=$children; //@line 693 "pyexpat.c"
        var $6=($5)!=0; //@line 693 "pyexpat.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 693 "pyexpat.c"
      case 1: // $bb
        var $7=$model_addr; //@line 694 "pyexpat.c"
        var $8=$7+12; //@line 694 "pyexpat.c"
        var $9=HEAP[$8]; //@line 694 "pyexpat.c"
        var $10=($9) > 2147483646; //@line 694 "pyexpat.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 694 "pyexpat.c"
      case 2: // $bb1
        ___assert_fail(__str20, __str6, 694, ___PRETTY_FUNCTION___9748); //@line 694 "pyexpat.c"
        throw "Reached an unreachable!" //@line 694 "pyexpat.c"
      case 3: // $bb2
        $i=0; //@line 695 "pyexpat.c"
        __label__ = 10; break; //@line 695 "pyexpat.c"
      case 4: // $bb3
        var $11=$49+16; //@line 697 "pyexpat.c"
        var $12=HEAP[$11]; //@line 697 "pyexpat.c"
        var $13=$i; //@line 697 "pyexpat.c"
        var $14=$12+20*$13; //@line 697 "pyexpat.c"
        var $15=$conv_string_addr; //@line 697 "pyexpat.c"
        var $16=_conv_content_model($14, $15); //@line 697 "pyexpat.c"
        $child=$16; //@line 697 "pyexpat.c"
        var $17=$child; //@line 698 "pyexpat.c"
        var $18=($17)==0; //@line 698 "pyexpat.c"
        var $19=$children; //@line 699 "pyexpat.c"
        if ($18) { __label__ = 5; break; } else { __label__ = 9; break; } //@line 698 "pyexpat.c"
      case 5: // $bb4
        var $20=($19)!=0; //@line 699 "pyexpat.c"
        if ($20) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 699 "pyexpat.c"
      case 6: // $bb5
        var $21=$children; //@line 699 "pyexpat.c"
        var $22=$21; //@line 699 "pyexpat.c"
        var $23=HEAP[$22]; //@line 699 "pyexpat.c"
        var $24=($23) - 1; //@line 699 "pyexpat.c"
        var $25=$children; //@line 699 "pyexpat.c"
        var $26=$25; //@line 699 "pyexpat.c"
        HEAP[$26]=$24; //@line 699 "pyexpat.c"
        var $27=$children; //@line 699 "pyexpat.c"
        var $28=$27; //@line 699 "pyexpat.c"
        var $29=HEAP[$28]; //@line 699 "pyexpat.c"
        var $30=($29)==0; //@line 699 "pyexpat.c"
        if ($30) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 699 "pyexpat.c"
      case 7: // $bb6
        var $31=$children; //@line 699 "pyexpat.c"
        var $32=$31+4; //@line 699 "pyexpat.c"
        var $33=HEAP[$32]; //@line 699 "pyexpat.c"
        var $34=$33+24; //@line 699 "pyexpat.c"
        var $35=HEAP[$34]; //@line 699 "pyexpat.c"
        var $36=$children; //@line 699 "pyexpat.c"
        FUNCTION_TABLE[$35]($36); //@line 699 "pyexpat.c"
        __label__ = 8; break; //@line 699 "pyexpat.c"
      case 8: // $bb7
        $0=0; //@line 700 "pyexpat.c"
        __label__ = 13; break; //@line 700 "pyexpat.c"
      case 9: // $bb8
        var $37=$19; //@line 702 "pyexpat.c"
        var $38=$i; //@line 702 "pyexpat.c"
        var $39=$37+12; //@line 702 "pyexpat.c"
        var $40=$39+$38*4; //@line 702 "pyexpat.c"
        var $41=$child; //@line 702 "pyexpat.c"
        HEAP[$40]=$41; //@line 702 "pyexpat.c"
        var $42=$i; //@line 695 "pyexpat.c"
        var $43=($42) + 1; //@line 695 "pyexpat.c"
        $i=$43; //@line 695 "pyexpat.c"
        __label__ = 10; break; //@line 695 "pyexpat.c"
      case 10: // $bb9
        var $44=$model_addr; //@line 695 "pyexpat.c"
        var $45=$44+12; //@line 695 "pyexpat.c"
        var $46=HEAP[$45]; //@line 695 "pyexpat.c"
        var $47=$i; //@line 695 "pyexpat.c"
        var $48=($46) > ($47); //@line 695 "pyexpat.c"
        var $49=$model_addr; //@line 697 "pyexpat.c"
        if ($48) { __label__ = 4; break; } else { __label__ = 11; break; } //@line 695 "pyexpat.c"
      case 11: // $bb10
        var $50=$49+8; //@line 704 "pyexpat.c"
        var $51=HEAP[$50]; //@line 704 "pyexpat.c"
        var $52=$model_addr; //@line 704 "pyexpat.c"
        var $53=$52+4; //@line 704 "pyexpat.c"
        var $54=HEAP[$53]; //@line 704 "pyexpat.c"
        var $55=$model_addr; //@line 704 "pyexpat.c"
        var $56=$55; //@line 704 "pyexpat.c"
        var $57=HEAP[$56]; //@line 704 "pyexpat.c"
        var $58=$conv_string_addr; //@line 704 "pyexpat.c"
        var $59=$children; //@line 704 "pyexpat.c"
        var $60=_Py_BuildValue(__str21, $57, $54, $58, $51, $59); //@line 704 "pyexpat.c"
        $result=$60; //@line 704 "pyexpat.c"
        __label__ = 12; break; //@line 704 "pyexpat.c"
      case 12: // $bb11
        var $61=$result; //@line 708 "pyexpat.c"
        $0=$61; //@line 708 "pyexpat.c"
        __label__ = 13; break; //@line 708 "pyexpat.c"
      case 13: // $bb12
        var $62=$0; //@line 700 "pyexpat.c"
        $retval=$62; //@line 700 "pyexpat.c"
        var $retval13=$retval; //@line 700 "pyexpat.c"
        ;
        return $retval13; //@line 700 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_ElementDeclHandler($userData, $name, $model) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i9;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i6;
        var $0;
        var $self_addr_i5;
        var $self_addr_i4;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $name_addr;
        var $model_addr;
        var $iftmp_51;
        var $self;
        var $args;
        var $rv;
        var $modelobj;
        var $nameobj;
        $userData_addr=$userData;
        $name_addr=$name;
        $model_addr=$model;
        var $3=$userData_addr; //@line 716 "pyexpat.c"
        var $4=$3; //@line 716 "pyexpat.c"
        $self=$4; //@line 716 "pyexpat.c"
        $args=0; //@line 717 "pyexpat.c"
        var $5=$self; //@line 719 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=19;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 719 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 24; break; } //@line 719 "pyexpat.c"
      case 1: // $bb
        $rv=0; //@line 720 "pyexpat.c"
        var $17=$self; //@line 723 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 723 "pyexpat.c"
        if ($37) { __label__ = 24; break; } else { __label__ = 5; break; } //@line 723 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 726 "pyexpat.c"
        var $39=$38+12; //@line 726 "pyexpat.c"
        var $40=HEAP[$39]; //@line 726 "pyexpat.c"
        var $41=($40)!=0; //@line 726 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 726 "pyexpat.c"
      case 6: // $bb2
        $iftmp_51=(FUNCTION_TABLE_OFFSET + 2); //@line 726 "pyexpat.c"
        __label__ = 8; break; //@line 726 "pyexpat.c"
      case 7: // $bb3
        $iftmp_51=(FUNCTION_TABLE_OFFSET + 4); //@line 726 "pyexpat.c"
        __label__ = 8; break; //@line 726 "pyexpat.c"
      case 8: // $bb4
        var $42=$model_addr; //@line 726 "pyexpat.c"
        var $43=$iftmp_51; //@line 726 "pyexpat.c"
        var $44=_conv_content_model($42, $43); //@line 726 "pyexpat.c"
        $modelobj=$44; //@line 726 "pyexpat.c"
        var $45=($44)==0; //@line 733 "pyexpat.c"
        var $46=$self; //@line 734 "pyexpat.c"
        if ($45) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 733 "pyexpat.c"
      case 9: // $bb5
        $self_addr_i3=$46;
        var $47=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($47, 0); //@line 256 "pyexpat.c"
        var $48=$self_addr_i3; //@line 257 "pyexpat.c"
        var $49=$48+8; //@line 257 "pyexpat.c"
        var $50=HEAP[$49]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($50, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 734 "pyexpat.c"
      case 10: // $bb6
        var $51=$name_addr; //@line 737 "pyexpat.c"
        var $52=_string_intern($46, $51); //@line 737 "pyexpat.c"
        $nameobj=$52; //@line 737 "pyexpat.c"
        var $53=$nameobj; //@line 738 "pyexpat.c"
        var $54=($53)==0; //@line 738 "pyexpat.c"
        if ($54) { __label__ = 11; break; } else { __label__ = 14; break; } //@line 738 "pyexpat.c"
      case 11: // $bb7
        var $55=$modelobj; //@line 739 "pyexpat.c"
        var $56=$55; //@line 739 "pyexpat.c"
        var $57=HEAP[$56]; //@line 739 "pyexpat.c"
        var $58=($57) - 1; //@line 739 "pyexpat.c"
        var $59=$modelobj; //@line 739 "pyexpat.c"
        var $60=$59; //@line 739 "pyexpat.c"
        HEAP[$60]=$58; //@line 739 "pyexpat.c"
        var $61=$modelobj; //@line 739 "pyexpat.c"
        var $62=$61; //@line 739 "pyexpat.c"
        var $63=HEAP[$62]; //@line 739 "pyexpat.c"
        var $64=($63)==0; //@line 739 "pyexpat.c"
        if ($64) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 739 "pyexpat.c"
      case 12: // $bb8
        var $65=$modelobj; //@line 739 "pyexpat.c"
        var $66=$65+4; //@line 739 "pyexpat.c"
        var $67=HEAP[$66]; //@line 739 "pyexpat.c"
        var $68=$67+24; //@line 739 "pyexpat.c"
        var $69=HEAP[$68]; //@line 739 "pyexpat.c"
        var $70=$modelobj; //@line 739 "pyexpat.c"
        FUNCTION_TABLE[$69]($70); //@line 739 "pyexpat.c"
        __label__ = 13; break; //@line 739 "pyexpat.c"
      case 13: // $bb9
        var $71=$self; //@line 740 "pyexpat.c"
        $self_addr_i4=$71;
        var $72=$self_addr_i4; //@line 256 "pyexpat.c"
        _clear_handlers($72, 0); //@line 256 "pyexpat.c"
        var $73=$self_addr_i4; //@line 257 "pyexpat.c"
        var $74=$73+8; //@line 257 "pyexpat.c"
        var $75=HEAP[$74]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($75, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 740 "pyexpat.c"
      case 14: // $bb10
        var $76=$nameobj; //@line 743 "pyexpat.c"
        var $77=$modelobj; //@line 743 "pyexpat.c"
        var $78=_Py_BuildValue(__str22, $76, $77); //@line 743 "pyexpat.c"
        $args=$78; //@line 743 "pyexpat.c"
        var $79=$args; //@line 744 "pyexpat.c"
        var $80=($79)==0; //@line 744 "pyexpat.c"
        if ($80) { __label__ = 15; break; } else { __label__ = 18; break; } //@line 744 "pyexpat.c"
      case 15: // $bb11
        var $81=$modelobj; //@line 745 "pyexpat.c"
        var $82=$81; //@line 745 "pyexpat.c"
        var $83=HEAP[$82]; //@line 745 "pyexpat.c"
        var $84=($83) - 1; //@line 745 "pyexpat.c"
        var $85=$modelobj; //@line 745 "pyexpat.c"
        var $86=$85; //@line 745 "pyexpat.c"
        HEAP[$86]=$84; //@line 745 "pyexpat.c"
        var $87=$modelobj; //@line 745 "pyexpat.c"
        var $88=$87; //@line 745 "pyexpat.c"
        var $89=HEAP[$88]; //@line 745 "pyexpat.c"
        var $90=($89)==0; //@line 745 "pyexpat.c"
        if ($90) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 745 "pyexpat.c"
      case 16: // $bb12
        var $91=$modelobj; //@line 745 "pyexpat.c"
        var $92=$91+4; //@line 745 "pyexpat.c"
        var $93=HEAP[$92]; //@line 745 "pyexpat.c"
        var $94=$93+24; //@line 745 "pyexpat.c"
        var $95=HEAP[$94]; //@line 745 "pyexpat.c"
        var $96=$modelobj; //@line 745 "pyexpat.c"
        FUNCTION_TABLE[$95]($96); //@line 745 "pyexpat.c"
        __label__ = 17; break; //@line 745 "pyexpat.c"
      case 17: // $bb13
        var $97=$self; //@line 746 "pyexpat.c"
        $self_addr_i5=$97;
        var $98=$self_addr_i5; //@line 256 "pyexpat.c"
        _clear_handlers($98, 0); //@line 256 "pyexpat.c"
        var $99=$self_addr_i5; //@line 257 "pyexpat.c"
        var $100=$99+8; //@line 257 "pyexpat.c"
        var $101=HEAP[$100]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($101, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 746 "pyexpat.c"
      case 18: // $bb14
        var $102=$self; //@line 749 "pyexpat.c"
        var $103=$102+24; //@line 749 "pyexpat.c"
        HEAP[$103]=1; //@line 749 "pyexpat.c"
        var $104=$self; //@line 750 "pyexpat.c"
        var $105=$104+48; //@line 750 "pyexpat.c"
        var $106=HEAP[$105]; //@line 750 "pyexpat.c"
        var $107=$106+76; //@line 750 "pyexpat.c"
        var $108=HEAP[$107]; //@line 750 "pyexpat.c"
        $slot_addr_i=19;
        $func_name_addr_i=__str23;
        $lineno_addr_i=750;
        var $109=$slot_addr_i; //@line 264 "pyexpat.c"
        var $110=_handler_info+$109*20; //@line 264 "pyexpat.c"
        var $111=$110+12; //@line 264 "pyexpat.c"
        var $112=HEAP[$111]; //@line 264 "pyexpat.c"
        var $113=($112)==0; //@line 264 "pyexpat.c"
        if ($113) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 264 "pyexpat.c"
      case 19: // $bb_i7
        var $114=$slot_addr_i; //@line 265 "pyexpat.c"
        var $115=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $116=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $117=_PyCode_NewEmpty(__str6, $115, $116); //@line 265 "pyexpat.c"
        var $118=_handler_info+$114*20; //@line 265 "pyexpat.c"
        var $119=$118+12; //@line 265 "pyexpat.c"
        HEAP[$119]=$117; //@line 265 "pyexpat.c"
        __label__ = 20; break; //@line 265 "pyexpat.c"
      case 20: // $getcode_exit
        var $120=$slot_addr_i; //@line 268 "pyexpat.c"
        var $121=_handler_info+$120*20; //@line 268 "pyexpat.c"
        var $122=$121+12; //@line 268 "pyexpat.c"
        var $123=HEAP[$122]; //@line 268 "pyexpat.c"
        $0=$123; //@line 268 "pyexpat.c"
        var $124=$0; //@line 268 "pyexpat.c"
        $retval_i6=$124; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i6; //@line 268 "pyexpat.c"
        var $125=$args; //@line 750 "pyexpat.c"
        var $126=$self; //@line 750 "pyexpat.c"
        var $127=_call_with_frame($retval2_i, $108, $125, $126); //@line 750 "pyexpat.c"
        $rv=$127; //@line 750 "pyexpat.c"
        var $128=$self; //@line 752 "pyexpat.c"
        var $129=$128+24; //@line 752 "pyexpat.c"
        HEAP[$129]=0; //@line 752 "pyexpat.c"
        var $130=$rv; //@line 753 "pyexpat.c"
        var $131=($130)==0; //@line 753 "pyexpat.c"
        if ($131) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 753 "pyexpat.c"
      case 21: // $bb15
        var $132=$self; //@line 754 "pyexpat.c"
        $self_addr_i9=$132;
        var $133=$self_addr_i9; //@line 256 "pyexpat.c"
        _clear_handlers($133, 0); //@line 256 "pyexpat.c"
        var $134=$self_addr_i9; //@line 257 "pyexpat.c"
        var $135=$134+8; //@line 257 "pyexpat.c"
        var $136=HEAP[$135]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($136, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 754 "pyexpat.c"
      case 22: // $bb16
        var $137=$rv; //@line 757 "pyexpat.c"
        var $138=$137; //@line 757 "pyexpat.c"
        var $139=HEAP[$138]; //@line 757 "pyexpat.c"
        var $140=($139) - 1; //@line 757 "pyexpat.c"
        var $141=$rv; //@line 757 "pyexpat.c"
        var $142=$141; //@line 757 "pyexpat.c"
        HEAP[$142]=$140; //@line 757 "pyexpat.c"
        var $143=$rv; //@line 757 "pyexpat.c"
        var $144=$143; //@line 757 "pyexpat.c"
        var $145=HEAP[$144]; //@line 757 "pyexpat.c"
        var $146=($145)==0; //@line 757 "pyexpat.c"
        if ($146) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 757 "pyexpat.c"
      case 23: // $bb17
        var $147=$rv; //@line 757 "pyexpat.c"
        var $148=$147+4; //@line 757 "pyexpat.c"
        var $149=HEAP[$148]; //@line 757 "pyexpat.c"
        var $150=$149+24; //@line 757 "pyexpat.c"
        var $151=HEAP[$150]; //@line 757 "pyexpat.c"
        var $152=$rv; //@line 757 "pyexpat.c"
        FUNCTION_TABLE[$151]($152); //@line 757 "pyexpat.c"
        __label__ = 24; break; //@line 759 "pyexpat.c"
      case 24: // $finally
        var $153=$args; //@line 760 "pyexpat.c"
        var $154=($153)!=0; //@line 760 "pyexpat.c"
        if ($154) { __label__ = 25; break; } else { __label__ = 27; break; } //@line 760 "pyexpat.c"
      case 25: // $bb18
        var $155=$args; //@line 760 "pyexpat.c"
        var $156=$155; //@line 760 "pyexpat.c"
        var $157=HEAP[$156]; //@line 760 "pyexpat.c"
        var $158=($157) - 1; //@line 760 "pyexpat.c"
        var $159=$args; //@line 760 "pyexpat.c"
        var $160=$159; //@line 760 "pyexpat.c"
        HEAP[$160]=$158; //@line 760 "pyexpat.c"
        var $161=$args; //@line 760 "pyexpat.c"
        var $162=$161; //@line 760 "pyexpat.c"
        var $163=HEAP[$162]; //@line 760 "pyexpat.c"
        var $164=($163)==0; //@line 760 "pyexpat.c"
        if ($164) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 760 "pyexpat.c"
      case 26: // $bb19
        var $165=$args; //@line 760 "pyexpat.c"
        var $166=$165+4; //@line 760 "pyexpat.c"
        var $167=HEAP[$166]; //@line 760 "pyexpat.c"
        var $168=$167+24; //@line 760 "pyexpat.c"
        var $169=HEAP[$168]; //@line 760 "pyexpat.c"
        var $170=$args; //@line 760 "pyexpat.c"
        FUNCTION_TABLE[$169]($170); //@line 760 "pyexpat.c"
        __label__ = 27; break; //@line 760 "pyexpat.c"
      case 27: // $bb20
        var $171=$self; //@line 761 "pyexpat.c"
        var $172=$171+8; //@line 761 "pyexpat.c"
        var $173=HEAP[$172]; //@line 761 "pyexpat.c"
        var $174=$model_addr; //@line 761 "pyexpat.c"
        _XML_FreeContentModel($173, $174); //@line 761 "pyexpat.c"
        ;
        return; //@line 762 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_AttlistDeclHandler($userData, $elname, $attname, $att_type, $dflt, $isrequired) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $elname_addr;
        var $attname_addr;
        var $att_type_addr;
        var $dflt_addr;
        var $isrequired_addr;
        var $iftmp_53;
        var $iftmp_52;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $elname_addr=$elname;
        $attname_addr=$attname;
        $att_type_addr=$att_type;
        $dflt_addr=$dflt;
        $isrequired_addr=$isrequired;
        var $3=$userData_addr; //@line 765 "pyexpat.c"
        var $4=$3; //@line 765 "pyexpat.c"
        $self=$4; //@line 765 "pyexpat.c"
        $args=0; //@line 765 "pyexpat.c"
        $rv=0; //@line 765 "pyexpat.c"
        var $5=$self; //@line 765 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=20;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 765 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 21; break; } //@line 765 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 765 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 765 "pyexpat.c"
        if ($37) { __label__ = 21; break; } else { __label__ = 5; break; } //@line 765 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 765 "pyexpat.c"
        var $39=$38+12; //@line 765 "pyexpat.c"
        var $40=HEAP[$39]; //@line 765 "pyexpat.c"
        var $41=($40)!=0; //@line 765 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 765 "pyexpat.c"
      case 6: // $bb2
        $iftmp_52=(FUNCTION_TABLE_OFFSET + 2); //@line 765 "pyexpat.c"
        __label__ = 8; break; //@line 765 "pyexpat.c"
      case 7: // $bb3
        $iftmp_52=(FUNCTION_TABLE_OFFSET + 4); //@line 765 "pyexpat.c"
        __label__ = 8; break; //@line 765 "pyexpat.c"
      case 8: // $bb4
        var $42=$self; //@line 765 "pyexpat.c"
        var $43=$42+12; //@line 765 "pyexpat.c"
        var $44=HEAP[$43]; //@line 765 "pyexpat.c"
        var $45=($44)!=0; //@line 765 "pyexpat.c"
        if ($45) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 765 "pyexpat.c"
      case 9: // $bb5
        $iftmp_53=(FUNCTION_TABLE_OFFSET + 2); //@line 765 "pyexpat.c"
        __label__ = 11; break; //@line 765 "pyexpat.c"
      case 10: // $bb6
        $iftmp_53=(FUNCTION_TABLE_OFFSET + 4); //@line 765 "pyexpat.c"
        __label__ = 11; break; //@line 765 "pyexpat.c"
      case 11: // $bb7
        var $46=$self; //@line 765 "pyexpat.c"
        var $47=$attname_addr; //@line 765 "pyexpat.c"
        var $48=_string_intern($46, $47); //@line 765 "pyexpat.c"
        var $49=$self; //@line 765 "pyexpat.c"
        var $50=$elname_addr; //@line 765 "pyexpat.c"
        var $51=_string_intern($49, $50); //@line 765 "pyexpat.c"
        var $52=$iftmp_53; //@line 765 "pyexpat.c"
        var $53=$att_type_addr; //@line 765 "pyexpat.c"
        var $54=$iftmp_52; //@line 765 "pyexpat.c"
        var $55=$dflt_addr; //@line 765 "pyexpat.c"
        var $56=$isrequired_addr; //@line 765 "pyexpat.c"
        var $57=_Py_BuildValue(__str24, $51, $48, $52, $53, $54, $55, $56); //@line 765 "pyexpat.c"
        $args=$57; //@line 765 "pyexpat.c"
        var $58=($57)==0; //@line 765 "pyexpat.c"
        var $59=$self; //@line 765 "pyexpat.c"
        if ($58) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 765 "pyexpat.c"
      case 12: // $bb8
        $self_addr_i3=$59;
        var $60=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($60, 0); //@line 256 "pyexpat.c"
        var $61=$self_addr_i3; //@line 257 "pyexpat.c"
        var $62=$61+8; //@line 257 "pyexpat.c"
        var $63=HEAP[$62]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($63, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 21; break; //@line 765 "pyexpat.c"
      case 13: // $bb9
        var $64=$59+24; //@line 765 "pyexpat.c"
        HEAP[$64]=1; //@line 765 "pyexpat.c"
        var $65=$self; //@line 765 "pyexpat.c"
        var $66=$65+48; //@line 765 "pyexpat.c"
        var $67=HEAP[$66]; //@line 765 "pyexpat.c"
        var $68=$67+80; //@line 765 "pyexpat.c"
        var $69=HEAP[$68]; //@line 765 "pyexpat.c"
        $slot_addr_i=20;
        $func_name_addr_i=__str25;
        $lineno_addr_i=775;
        var $70=$slot_addr_i; //@line 264 "pyexpat.c"
        var $71=_handler_info+$70*20; //@line 264 "pyexpat.c"
        var $72=$71+12; //@line 264 "pyexpat.c"
        var $73=HEAP[$72]; //@line 264 "pyexpat.c"
        var $74=($73)==0; //@line 264 "pyexpat.c"
        if ($74) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 264 "pyexpat.c"
      case 14: // $bb_i5
        var $75=$slot_addr_i; //@line 265 "pyexpat.c"
        var $76=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $77=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $78=_PyCode_NewEmpty(__str6, $76, $77); //@line 265 "pyexpat.c"
        var $79=_handler_info+$75*20; //@line 265 "pyexpat.c"
        var $80=$79+12; //@line 265 "pyexpat.c"
        HEAP[$80]=$78; //@line 265 "pyexpat.c"
        __label__ = 15; break; //@line 265 "pyexpat.c"
      case 15: // $getcode_exit
        var $81=$slot_addr_i; //@line 268 "pyexpat.c"
        var $82=_handler_info+$81*20; //@line 268 "pyexpat.c"
        var $83=$82+12; //@line 268 "pyexpat.c"
        var $84=HEAP[$83]; //@line 268 "pyexpat.c"
        $0=$84; //@line 268 "pyexpat.c"
        var $85=$0; //@line 268 "pyexpat.c"
        $retval_i4=$85; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $86=$args; //@line 765 "pyexpat.c"
        var $87=$self; //@line 765 "pyexpat.c"
        var $88=_call_with_frame($retval2_i, $69, $86, $87); //@line 765 "pyexpat.c"
        $rv=$88; //@line 765 "pyexpat.c"
        var $89=$self; //@line 765 "pyexpat.c"
        var $90=$89+24; //@line 765 "pyexpat.c"
        HEAP[$90]=0; //@line 765 "pyexpat.c"
        var $91=$args; //@line 765 "pyexpat.c"
        var $92=$91; //@line 765 "pyexpat.c"
        var $93=HEAP[$92]; //@line 765 "pyexpat.c"
        var $94=($93) - 1; //@line 765 "pyexpat.c"
        var $95=$args; //@line 765 "pyexpat.c"
        var $96=$95; //@line 765 "pyexpat.c"
        HEAP[$96]=$94; //@line 765 "pyexpat.c"
        var $97=$args; //@line 765 "pyexpat.c"
        var $98=$97; //@line 765 "pyexpat.c"
        var $99=HEAP[$98]; //@line 765 "pyexpat.c"
        var $100=($99)==0; //@line 765 "pyexpat.c"
        if ($100) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 765 "pyexpat.c"
      case 16: // $bb10
        var $101=$args; //@line 765 "pyexpat.c"
        var $102=$101+4; //@line 765 "pyexpat.c"
        var $103=HEAP[$102]; //@line 765 "pyexpat.c"
        var $104=$103+24; //@line 765 "pyexpat.c"
        var $105=HEAP[$104]; //@line 765 "pyexpat.c"
        var $106=$args; //@line 765 "pyexpat.c"
        FUNCTION_TABLE[$105]($106); //@line 765 "pyexpat.c"
        __label__ = 17; break; //@line 765 "pyexpat.c"
      case 17: // $bb11
        var $107=$rv; //@line 765 "pyexpat.c"
        var $108=($107)==0; //@line 765 "pyexpat.c"
        if ($108) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 765 "pyexpat.c"
      case 18: // $bb12
        var $109=$self; //@line 765 "pyexpat.c"
        $self_addr_i7=$109;
        var $110=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($110, 0); //@line 256 "pyexpat.c"
        var $111=$self_addr_i7; //@line 257 "pyexpat.c"
        var $112=$111+8; //@line 257 "pyexpat.c"
        var $113=HEAP[$112]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($113, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 21; break; //@line 765 "pyexpat.c"
      case 19: // $bb13
        var $114=$rv; //@line 765 "pyexpat.c"
        var $115=$114; //@line 765 "pyexpat.c"
        var $116=HEAP[$115]; //@line 765 "pyexpat.c"
        var $117=($116) - 1; //@line 765 "pyexpat.c"
        var $118=$rv; //@line 765 "pyexpat.c"
        var $119=$118; //@line 765 "pyexpat.c"
        HEAP[$119]=$117; //@line 765 "pyexpat.c"
        var $120=$rv; //@line 765 "pyexpat.c"
        var $121=$120; //@line 765 "pyexpat.c"
        var $122=HEAP[$121]; //@line 765 "pyexpat.c"
        var $123=($122)==0; //@line 765 "pyexpat.c"
        if ($123) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 765 "pyexpat.c"
      case 20: // $bb14
        var $124=$rv; //@line 765 "pyexpat.c"
        var $125=$124+4; //@line 765 "pyexpat.c"
        var $126=HEAP[$125]; //@line 765 "pyexpat.c"
        var $127=$126+24; //@line 765 "pyexpat.c"
        var $128=HEAP[$127]; //@line 765 "pyexpat.c"
        var $129=$rv; //@line 765 "pyexpat.c"
        FUNCTION_TABLE[$128]($129); //@line 765 "pyexpat.c"
        __label__ = 21; break; //@line 765 "pyexpat.c"
      case 21: // $return
        ;
        return; //@line 765 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_SkippedEntityHandler($userData, $entityName, $is_parameter_entity) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $entityName_addr;
        var $is_parameter_entity_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $entityName_addr=$entityName;
        $is_parameter_entity_addr=$is_parameter_entity;
        var $3=$userData_addr; //@line 778 "pyexpat.c"
        var $4=$3; //@line 778 "pyexpat.c"
        $self=$4; //@line 778 "pyexpat.c"
        $args=0; //@line 778 "pyexpat.c"
        $rv=0; //@line 778 "pyexpat.c"
        var $5=$self; //@line 778 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=21;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 778 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 778 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 778 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 778 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 778 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 778 "pyexpat.c"
        var $39=$entityName_addr; //@line 778 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 778 "pyexpat.c"
        var $41=$is_parameter_entity_addr; //@line 778 "pyexpat.c"
        var $42=_Py_BuildValue(__str26, $40, $41); //@line 778 "pyexpat.c"
        $args=$42; //@line 778 "pyexpat.c"
        var $43=($42)==0; //@line 778 "pyexpat.c"
        var $44=$self; //@line 778 "pyexpat.c"
        if ($43) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 778 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$44;
        var $45=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($45, 0); //@line 256 "pyexpat.c"
        var $46=$self_addr_i3; //@line 257 "pyexpat.c"
        var $47=$46+8; //@line 257 "pyexpat.c"
        var $48=HEAP[$47]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($48, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 778 "pyexpat.c"
      case 7: // $bb3
        var $49=$44+24; //@line 778 "pyexpat.c"
        HEAP[$49]=1; //@line 778 "pyexpat.c"
        var $50=$self; //@line 778 "pyexpat.c"
        var $51=$50+48; //@line 778 "pyexpat.c"
        var $52=HEAP[$51]; //@line 778 "pyexpat.c"
        var $53=$52+84; //@line 778 "pyexpat.c"
        var $54=HEAP[$53]; //@line 778 "pyexpat.c"
        $slot_addr_i=21;
        $func_name_addr_i=__str27;
        $lineno_addr_i=783;
        var $55=$slot_addr_i; //@line 264 "pyexpat.c"
        var $56=_handler_info+$55*20; //@line 264 "pyexpat.c"
        var $57=$56+12; //@line 264 "pyexpat.c"
        var $58=HEAP[$57]; //@line 264 "pyexpat.c"
        var $59=($58)==0; //@line 264 "pyexpat.c"
        if ($59) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $60=$slot_addr_i; //@line 265 "pyexpat.c"
        var $61=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $62=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $63=_PyCode_NewEmpty(__str6, $61, $62); //@line 265 "pyexpat.c"
        var $64=_handler_info+$60*20; //@line 265 "pyexpat.c"
        var $65=$64+12; //@line 265 "pyexpat.c"
        HEAP[$65]=$63; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $66=$slot_addr_i; //@line 268 "pyexpat.c"
        var $67=_handler_info+$66*20; //@line 268 "pyexpat.c"
        var $68=$67+12; //@line 268 "pyexpat.c"
        var $69=HEAP[$68]; //@line 268 "pyexpat.c"
        $0=$69; //@line 268 "pyexpat.c"
        var $70=$0; //@line 268 "pyexpat.c"
        $retval_i4=$70; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $71=$args; //@line 778 "pyexpat.c"
        var $72=$self; //@line 778 "pyexpat.c"
        var $73=_call_with_frame($retval2_i, $54, $71, $72); //@line 778 "pyexpat.c"
        $rv=$73; //@line 778 "pyexpat.c"
        var $74=$self; //@line 778 "pyexpat.c"
        var $75=$74+24; //@line 778 "pyexpat.c"
        HEAP[$75]=0; //@line 778 "pyexpat.c"
        var $76=$args; //@line 778 "pyexpat.c"
        var $77=$76; //@line 778 "pyexpat.c"
        var $78=HEAP[$77]; //@line 778 "pyexpat.c"
        var $79=($78) - 1; //@line 778 "pyexpat.c"
        var $80=$args; //@line 778 "pyexpat.c"
        var $81=$80; //@line 778 "pyexpat.c"
        HEAP[$81]=$79; //@line 778 "pyexpat.c"
        var $82=$args; //@line 778 "pyexpat.c"
        var $83=$82; //@line 778 "pyexpat.c"
        var $84=HEAP[$83]; //@line 778 "pyexpat.c"
        var $85=($84)==0; //@line 778 "pyexpat.c"
        if ($85) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 778 "pyexpat.c"
      case 10: // $bb4
        var $86=$args; //@line 778 "pyexpat.c"
        var $87=$86+4; //@line 778 "pyexpat.c"
        var $88=HEAP[$87]; //@line 778 "pyexpat.c"
        var $89=$88+24; //@line 778 "pyexpat.c"
        var $90=HEAP[$89]; //@line 778 "pyexpat.c"
        var $91=$args; //@line 778 "pyexpat.c"
        FUNCTION_TABLE[$90]($91); //@line 778 "pyexpat.c"
        __label__ = 11; break; //@line 778 "pyexpat.c"
      case 11: // $bb5
        var $92=$rv; //@line 778 "pyexpat.c"
        var $93=($92)==0; //@line 778 "pyexpat.c"
        if ($93) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 778 "pyexpat.c"
      case 12: // $bb6
        var $94=$self; //@line 778 "pyexpat.c"
        $self_addr_i7=$94;
        var $95=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($95, 0); //@line 256 "pyexpat.c"
        var $96=$self_addr_i7; //@line 257 "pyexpat.c"
        var $97=$96+8; //@line 257 "pyexpat.c"
        var $98=HEAP[$97]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($98, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 778 "pyexpat.c"
      case 13: // $bb7
        var $99=$rv; //@line 778 "pyexpat.c"
        var $100=$99; //@line 778 "pyexpat.c"
        var $101=HEAP[$100]; //@line 778 "pyexpat.c"
        var $102=($101) - 1; //@line 778 "pyexpat.c"
        var $103=$rv; //@line 778 "pyexpat.c"
        var $104=$103; //@line 778 "pyexpat.c"
        HEAP[$104]=$102; //@line 778 "pyexpat.c"
        var $105=$rv; //@line 778 "pyexpat.c"
        var $106=$105; //@line 778 "pyexpat.c"
        var $107=HEAP[$106]; //@line 778 "pyexpat.c"
        var $108=($107)==0; //@line 778 "pyexpat.c"
        if ($108) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 778 "pyexpat.c"
      case 14: // $bb8
        var $109=$rv; //@line 778 "pyexpat.c"
        var $110=$109+4; //@line 778 "pyexpat.c"
        var $111=HEAP[$110]; //@line 778 "pyexpat.c"
        var $112=$111+24; //@line 778 "pyexpat.c"
        var $113=HEAP[$112]; //@line 778 "pyexpat.c"
        var $114=$rv; //@line 778 "pyexpat.c"
        FUNCTION_TABLE[$113]($114); //@line 778 "pyexpat.c"
        __label__ = 15; break; //@line 778 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 778 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_NotationDeclHandler($userData, $notationName, $base, $systemId, $publicId) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $notationName_addr;
        var $base_addr;
        var $systemId_addr;
        var $publicId_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $notationName_addr=$notationName;
        $base_addr=$base;
        $systemId_addr=$systemId;
        $publicId_addr=$publicId;
        var $3=$userData_addr; //@line 786 "pyexpat.c"
        var $4=$3; //@line 786 "pyexpat.c"
        $self=$4; //@line 786 "pyexpat.c"
        $args=0; //@line 786 "pyexpat.c"
        $rv=0; //@line 786 "pyexpat.c"
        var $5=$self; //@line 786 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=5;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 786 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 786 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 786 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 786 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 786 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 786 "pyexpat.c"
        var $39=$publicId_addr; //@line 786 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 786 "pyexpat.c"
        var $41=$self; //@line 786 "pyexpat.c"
        var $42=$systemId_addr; //@line 786 "pyexpat.c"
        var $43=_string_intern($41, $42); //@line 786 "pyexpat.c"
        var $44=$self; //@line 786 "pyexpat.c"
        var $45=$base_addr; //@line 786 "pyexpat.c"
        var $46=_string_intern($44, $45); //@line 786 "pyexpat.c"
        var $47=$self; //@line 786 "pyexpat.c"
        var $48=$notationName_addr; //@line 786 "pyexpat.c"
        var $49=_string_intern($47, $48); //@line 786 "pyexpat.c"
        var $50=_Py_BuildValue(__str28, $49, $46, $43, $40); //@line 786 "pyexpat.c"
        $args=$50; //@line 786 "pyexpat.c"
        var $51=($50)==0; //@line 786 "pyexpat.c"
        var $52=$self; //@line 786 "pyexpat.c"
        if ($51) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 786 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$52;
        var $53=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($53, 0); //@line 256 "pyexpat.c"
        var $54=$self_addr_i3; //@line 257 "pyexpat.c"
        var $55=$54+8; //@line 257 "pyexpat.c"
        var $56=HEAP[$55]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($56, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 786 "pyexpat.c"
      case 7: // $bb3
        var $57=$52+24; //@line 786 "pyexpat.c"
        HEAP[$57]=1; //@line 786 "pyexpat.c"
        var $58=$self; //@line 786 "pyexpat.c"
        var $59=$58+48; //@line 786 "pyexpat.c"
        var $60=HEAP[$59]; //@line 786 "pyexpat.c"
        var $61=$60+20; //@line 786 "pyexpat.c"
        var $62=HEAP[$61]; //@line 786 "pyexpat.c"
        $slot_addr_i=5;
        $func_name_addr_i=__str29;
        $lineno_addr_i=794;
        var $63=$slot_addr_i; //@line 264 "pyexpat.c"
        var $64=_handler_info+$63*20; //@line 264 "pyexpat.c"
        var $65=$64+12; //@line 264 "pyexpat.c"
        var $66=HEAP[$65]; //@line 264 "pyexpat.c"
        var $67=($66)==0; //@line 264 "pyexpat.c"
        if ($67) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $68=$slot_addr_i; //@line 265 "pyexpat.c"
        var $69=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $70=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $71=_PyCode_NewEmpty(__str6, $69, $70); //@line 265 "pyexpat.c"
        var $72=_handler_info+$68*20; //@line 265 "pyexpat.c"
        var $73=$72+12; //@line 265 "pyexpat.c"
        HEAP[$73]=$71; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $74=$slot_addr_i; //@line 268 "pyexpat.c"
        var $75=_handler_info+$74*20; //@line 268 "pyexpat.c"
        var $76=$75+12; //@line 268 "pyexpat.c"
        var $77=HEAP[$76]; //@line 268 "pyexpat.c"
        $0=$77; //@line 268 "pyexpat.c"
        var $78=$0; //@line 268 "pyexpat.c"
        $retval_i4=$78; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $79=$args; //@line 786 "pyexpat.c"
        var $80=$self; //@line 786 "pyexpat.c"
        var $81=_call_with_frame($retval2_i, $62, $79, $80); //@line 786 "pyexpat.c"
        $rv=$81; //@line 786 "pyexpat.c"
        var $82=$self; //@line 786 "pyexpat.c"
        var $83=$82+24; //@line 786 "pyexpat.c"
        HEAP[$83]=0; //@line 786 "pyexpat.c"
        var $84=$args; //@line 786 "pyexpat.c"
        var $85=$84; //@line 786 "pyexpat.c"
        var $86=HEAP[$85]; //@line 786 "pyexpat.c"
        var $87=($86) - 1; //@line 786 "pyexpat.c"
        var $88=$args; //@line 786 "pyexpat.c"
        var $89=$88; //@line 786 "pyexpat.c"
        HEAP[$89]=$87; //@line 786 "pyexpat.c"
        var $90=$args; //@line 786 "pyexpat.c"
        var $91=$90; //@line 786 "pyexpat.c"
        var $92=HEAP[$91]; //@line 786 "pyexpat.c"
        var $93=($92)==0; //@line 786 "pyexpat.c"
        if ($93) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 786 "pyexpat.c"
      case 10: // $bb4
        var $94=$args; //@line 786 "pyexpat.c"
        var $95=$94+4; //@line 786 "pyexpat.c"
        var $96=HEAP[$95]; //@line 786 "pyexpat.c"
        var $97=$96+24; //@line 786 "pyexpat.c"
        var $98=HEAP[$97]; //@line 786 "pyexpat.c"
        var $99=$args; //@line 786 "pyexpat.c"
        FUNCTION_TABLE[$98]($99); //@line 786 "pyexpat.c"
        __label__ = 11; break; //@line 786 "pyexpat.c"
      case 11: // $bb5
        var $100=$rv; //@line 786 "pyexpat.c"
        var $101=($100)==0; //@line 786 "pyexpat.c"
        if ($101) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 786 "pyexpat.c"
      case 12: // $bb6
        var $102=$self; //@line 786 "pyexpat.c"
        $self_addr_i7=$102;
        var $103=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($103, 0); //@line 256 "pyexpat.c"
        var $104=$self_addr_i7; //@line 257 "pyexpat.c"
        var $105=$104+8; //@line 257 "pyexpat.c"
        var $106=HEAP[$105]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($106, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 786 "pyexpat.c"
      case 13: // $bb7
        var $107=$rv; //@line 786 "pyexpat.c"
        var $108=$107; //@line 786 "pyexpat.c"
        var $109=HEAP[$108]; //@line 786 "pyexpat.c"
        var $110=($109) - 1; //@line 786 "pyexpat.c"
        var $111=$rv; //@line 786 "pyexpat.c"
        var $112=$111; //@line 786 "pyexpat.c"
        HEAP[$112]=$110; //@line 786 "pyexpat.c"
        var $113=$rv; //@line 786 "pyexpat.c"
        var $114=$113; //@line 786 "pyexpat.c"
        var $115=HEAP[$114]; //@line 786 "pyexpat.c"
        var $116=($115)==0; //@line 786 "pyexpat.c"
        if ($116) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 786 "pyexpat.c"
      case 14: // $bb8
        var $117=$rv; //@line 786 "pyexpat.c"
        var $118=$117+4; //@line 786 "pyexpat.c"
        var $119=HEAP[$118]; //@line 786 "pyexpat.c"
        var $120=$119+24; //@line 786 "pyexpat.c"
        var $121=HEAP[$120]; //@line 786 "pyexpat.c"
        var $122=$rv; //@line 786 "pyexpat.c"
        FUNCTION_TABLE[$121]($122); //@line 786 "pyexpat.c"
        __label__ = 15; break; //@line 786 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 786 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_StartNamespaceDeclHandler($userData, $prefix, $uri) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $prefix_addr;
        var $uri_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $prefix_addr=$prefix;
        $uri_addr=$uri;
        var $3=$userData_addr; //@line 796 "pyexpat.c"
        var $4=$3; //@line 796 "pyexpat.c"
        $self=$4; //@line 796 "pyexpat.c"
        $args=0; //@line 796 "pyexpat.c"
        $rv=0; //@line 796 "pyexpat.c"
        var $5=$self; //@line 796 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=6;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 796 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 796 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 796 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 796 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 796 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 796 "pyexpat.c"
        var $39=$uri_addr; //@line 796 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 796 "pyexpat.c"
        var $41=$self; //@line 796 "pyexpat.c"
        var $42=$prefix_addr; //@line 796 "pyexpat.c"
        var $43=_string_intern($41, $42); //@line 796 "pyexpat.c"
        var $44=_Py_BuildValue(__str8, $43, $40); //@line 796 "pyexpat.c"
        $args=$44; //@line 796 "pyexpat.c"
        var $45=($44)==0; //@line 796 "pyexpat.c"
        var $46=$self; //@line 796 "pyexpat.c"
        if ($45) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 796 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$46;
        var $47=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($47, 0); //@line 256 "pyexpat.c"
        var $48=$self_addr_i3; //@line 257 "pyexpat.c"
        var $49=$48+8; //@line 257 "pyexpat.c"
        var $50=HEAP[$49]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($50, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 796 "pyexpat.c"
      case 7: // $bb3
        var $51=$46+24; //@line 796 "pyexpat.c"
        HEAP[$51]=1; //@line 796 "pyexpat.c"
        var $52=$self; //@line 796 "pyexpat.c"
        var $53=$52+48; //@line 796 "pyexpat.c"
        var $54=HEAP[$53]; //@line 796 "pyexpat.c"
        var $55=$54+24; //@line 796 "pyexpat.c"
        var $56=HEAP[$55]; //@line 796 "pyexpat.c"
        $slot_addr_i=6;
        $func_name_addr_i=__str30;
        $lineno_addr_i=801;
        var $57=$slot_addr_i; //@line 264 "pyexpat.c"
        var $58=_handler_info+$57*20; //@line 264 "pyexpat.c"
        var $59=$58+12; //@line 264 "pyexpat.c"
        var $60=HEAP[$59]; //@line 264 "pyexpat.c"
        var $61=($60)==0; //@line 264 "pyexpat.c"
        if ($61) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $62=$slot_addr_i; //@line 265 "pyexpat.c"
        var $63=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $64=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $65=_PyCode_NewEmpty(__str6, $63, $64); //@line 265 "pyexpat.c"
        var $66=_handler_info+$62*20; //@line 265 "pyexpat.c"
        var $67=$66+12; //@line 265 "pyexpat.c"
        HEAP[$67]=$65; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $68=$slot_addr_i; //@line 268 "pyexpat.c"
        var $69=_handler_info+$68*20; //@line 268 "pyexpat.c"
        var $70=$69+12; //@line 268 "pyexpat.c"
        var $71=HEAP[$70]; //@line 268 "pyexpat.c"
        $0=$71; //@line 268 "pyexpat.c"
        var $72=$0; //@line 268 "pyexpat.c"
        $retval_i4=$72; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $73=$args; //@line 796 "pyexpat.c"
        var $74=$self; //@line 796 "pyexpat.c"
        var $75=_call_with_frame($retval2_i, $56, $73, $74); //@line 796 "pyexpat.c"
        $rv=$75; //@line 796 "pyexpat.c"
        var $76=$self; //@line 796 "pyexpat.c"
        var $77=$76+24; //@line 796 "pyexpat.c"
        HEAP[$77]=0; //@line 796 "pyexpat.c"
        var $78=$args; //@line 796 "pyexpat.c"
        var $79=$78; //@line 796 "pyexpat.c"
        var $80=HEAP[$79]; //@line 796 "pyexpat.c"
        var $81=($80) - 1; //@line 796 "pyexpat.c"
        var $82=$args; //@line 796 "pyexpat.c"
        var $83=$82; //@line 796 "pyexpat.c"
        HEAP[$83]=$81; //@line 796 "pyexpat.c"
        var $84=$args; //@line 796 "pyexpat.c"
        var $85=$84; //@line 796 "pyexpat.c"
        var $86=HEAP[$85]; //@line 796 "pyexpat.c"
        var $87=($86)==0; //@line 796 "pyexpat.c"
        if ($87) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 796 "pyexpat.c"
      case 10: // $bb4
        var $88=$args; //@line 796 "pyexpat.c"
        var $89=$88+4; //@line 796 "pyexpat.c"
        var $90=HEAP[$89]; //@line 796 "pyexpat.c"
        var $91=$90+24; //@line 796 "pyexpat.c"
        var $92=HEAP[$91]; //@line 796 "pyexpat.c"
        var $93=$args; //@line 796 "pyexpat.c"
        FUNCTION_TABLE[$92]($93); //@line 796 "pyexpat.c"
        __label__ = 11; break; //@line 796 "pyexpat.c"
      case 11: // $bb5
        var $94=$rv; //@line 796 "pyexpat.c"
        var $95=($94)==0; //@line 796 "pyexpat.c"
        if ($95) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 796 "pyexpat.c"
      case 12: // $bb6
        var $96=$self; //@line 796 "pyexpat.c"
        $self_addr_i7=$96;
        var $97=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($97, 0); //@line 256 "pyexpat.c"
        var $98=$self_addr_i7; //@line 257 "pyexpat.c"
        var $99=$98+8; //@line 257 "pyexpat.c"
        var $100=HEAP[$99]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($100, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 796 "pyexpat.c"
      case 13: // $bb7
        var $101=$rv; //@line 796 "pyexpat.c"
        var $102=$101; //@line 796 "pyexpat.c"
        var $103=HEAP[$102]; //@line 796 "pyexpat.c"
        var $104=($103) - 1; //@line 796 "pyexpat.c"
        var $105=$rv; //@line 796 "pyexpat.c"
        var $106=$105; //@line 796 "pyexpat.c"
        HEAP[$106]=$104; //@line 796 "pyexpat.c"
        var $107=$rv; //@line 796 "pyexpat.c"
        var $108=$107; //@line 796 "pyexpat.c"
        var $109=HEAP[$108]; //@line 796 "pyexpat.c"
        var $110=($109)==0; //@line 796 "pyexpat.c"
        if ($110) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 796 "pyexpat.c"
      case 14: // $bb8
        var $111=$rv; //@line 796 "pyexpat.c"
        var $112=$111+4; //@line 796 "pyexpat.c"
        var $113=HEAP[$112]; //@line 796 "pyexpat.c"
        var $114=$113+24; //@line 796 "pyexpat.c"
        var $115=HEAP[$114]; //@line 796 "pyexpat.c"
        var $116=$rv; //@line 796 "pyexpat.c"
        FUNCTION_TABLE[$115]($116); //@line 796 "pyexpat.c"
        __label__ = 15; break; //@line 796 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 796 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_EndNamespaceDeclHandler($userData, $prefix) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $prefix_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $prefix_addr=$prefix;
        var $3=$userData_addr; //@line 803 "pyexpat.c"
        var $4=$3; //@line 803 "pyexpat.c"
        $self=$4; //@line 803 "pyexpat.c"
        $args=0; //@line 803 "pyexpat.c"
        $rv=0; //@line 803 "pyexpat.c"
        var $5=$self; //@line 803 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=7;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 803 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 803 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 803 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 803 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 803 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 803 "pyexpat.c"
        var $39=$prefix_addr; //@line 803 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 803 "pyexpat.c"
        var $41=_Py_BuildValue(__str10, $40); //@line 803 "pyexpat.c"
        $args=$41; //@line 803 "pyexpat.c"
        var $42=($41)==0; //@line 803 "pyexpat.c"
        var $43=$self; //@line 803 "pyexpat.c"
        if ($42) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 803 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$43;
        var $44=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($44, 0); //@line 256 "pyexpat.c"
        var $45=$self_addr_i3; //@line 257 "pyexpat.c"
        var $46=$45+8; //@line 257 "pyexpat.c"
        var $47=HEAP[$46]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($47, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 803 "pyexpat.c"
      case 7: // $bb3
        var $48=$43+24; //@line 803 "pyexpat.c"
        HEAP[$48]=1; //@line 803 "pyexpat.c"
        var $49=$self; //@line 803 "pyexpat.c"
        var $50=$49+48; //@line 803 "pyexpat.c"
        var $51=HEAP[$50]; //@line 803 "pyexpat.c"
        var $52=$51+28; //@line 803 "pyexpat.c"
        var $53=HEAP[$52]; //@line 803 "pyexpat.c"
        $slot_addr_i=7;
        $func_name_addr_i=__str31;
        $lineno_addr_i=806;
        var $54=$slot_addr_i; //@line 264 "pyexpat.c"
        var $55=_handler_info+$54*20; //@line 264 "pyexpat.c"
        var $56=$55+12; //@line 264 "pyexpat.c"
        var $57=HEAP[$56]; //@line 264 "pyexpat.c"
        var $58=($57)==0; //@line 264 "pyexpat.c"
        if ($58) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $59=$slot_addr_i; //@line 265 "pyexpat.c"
        var $60=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $61=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $62=_PyCode_NewEmpty(__str6, $60, $61); //@line 265 "pyexpat.c"
        var $63=_handler_info+$59*20; //@line 265 "pyexpat.c"
        var $64=$63+12; //@line 265 "pyexpat.c"
        HEAP[$64]=$62; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $65=$slot_addr_i; //@line 268 "pyexpat.c"
        var $66=_handler_info+$65*20; //@line 268 "pyexpat.c"
        var $67=$66+12; //@line 268 "pyexpat.c"
        var $68=HEAP[$67]; //@line 268 "pyexpat.c"
        $0=$68; //@line 268 "pyexpat.c"
        var $69=$0; //@line 268 "pyexpat.c"
        $retval_i4=$69; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $70=$args; //@line 803 "pyexpat.c"
        var $71=$self; //@line 803 "pyexpat.c"
        var $72=_call_with_frame($retval2_i, $53, $70, $71); //@line 803 "pyexpat.c"
        $rv=$72; //@line 803 "pyexpat.c"
        var $73=$self; //@line 803 "pyexpat.c"
        var $74=$73+24; //@line 803 "pyexpat.c"
        HEAP[$74]=0; //@line 803 "pyexpat.c"
        var $75=$args; //@line 803 "pyexpat.c"
        var $76=$75; //@line 803 "pyexpat.c"
        var $77=HEAP[$76]; //@line 803 "pyexpat.c"
        var $78=($77) - 1; //@line 803 "pyexpat.c"
        var $79=$args; //@line 803 "pyexpat.c"
        var $80=$79; //@line 803 "pyexpat.c"
        HEAP[$80]=$78; //@line 803 "pyexpat.c"
        var $81=$args; //@line 803 "pyexpat.c"
        var $82=$81; //@line 803 "pyexpat.c"
        var $83=HEAP[$82]; //@line 803 "pyexpat.c"
        var $84=($83)==0; //@line 803 "pyexpat.c"
        if ($84) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 803 "pyexpat.c"
      case 10: // $bb4
        var $85=$args; //@line 803 "pyexpat.c"
        var $86=$85+4; //@line 803 "pyexpat.c"
        var $87=HEAP[$86]; //@line 803 "pyexpat.c"
        var $88=$87+24; //@line 803 "pyexpat.c"
        var $89=HEAP[$88]; //@line 803 "pyexpat.c"
        var $90=$args; //@line 803 "pyexpat.c"
        FUNCTION_TABLE[$89]($90); //@line 803 "pyexpat.c"
        __label__ = 11; break; //@line 803 "pyexpat.c"
      case 11: // $bb5
        var $91=$rv; //@line 803 "pyexpat.c"
        var $92=($91)==0; //@line 803 "pyexpat.c"
        if ($92) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 803 "pyexpat.c"
      case 12: // $bb6
        var $93=$self; //@line 803 "pyexpat.c"
        $self_addr_i7=$93;
        var $94=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($94, 0); //@line 256 "pyexpat.c"
        var $95=$self_addr_i7; //@line 257 "pyexpat.c"
        var $96=$95+8; //@line 257 "pyexpat.c"
        var $97=HEAP[$96]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($97, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 803 "pyexpat.c"
      case 13: // $bb7
        var $98=$rv; //@line 803 "pyexpat.c"
        var $99=$98; //@line 803 "pyexpat.c"
        var $100=HEAP[$99]; //@line 803 "pyexpat.c"
        var $101=($100) - 1; //@line 803 "pyexpat.c"
        var $102=$rv; //@line 803 "pyexpat.c"
        var $103=$102; //@line 803 "pyexpat.c"
        HEAP[$103]=$101; //@line 803 "pyexpat.c"
        var $104=$rv; //@line 803 "pyexpat.c"
        var $105=$104; //@line 803 "pyexpat.c"
        var $106=HEAP[$105]; //@line 803 "pyexpat.c"
        var $107=($106)==0; //@line 803 "pyexpat.c"
        if ($107) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 803 "pyexpat.c"
      case 14: // $bb8
        var $108=$rv; //@line 803 "pyexpat.c"
        var $109=$108+4; //@line 803 "pyexpat.c"
        var $110=HEAP[$109]; //@line 803 "pyexpat.c"
        var $111=$110+24; //@line 803 "pyexpat.c"
        var $112=HEAP[$111]; //@line 803 "pyexpat.c"
        var $113=$rv; //@line 803 "pyexpat.c"
        FUNCTION_TABLE[$112]($113); //@line 803 "pyexpat.c"
        __label__ = 15; break; //@line 803 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 803 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_CommentHandler($userData, $data) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $data_addr;
        var $iftmp_54;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $data_addr=$data;
        var $3=$userData_addr; //@line 808 "pyexpat.c"
        var $4=$3; //@line 808 "pyexpat.c"
        $self=$4; //@line 808 "pyexpat.c"
        $args=0; //@line 808 "pyexpat.c"
        $rv=0; //@line 808 "pyexpat.c"
        var $5=$self; //@line 808 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=8;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 808 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 18; break; } //@line 808 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 808 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 808 "pyexpat.c"
        if ($37) { __label__ = 18; break; } else { __label__ = 5; break; } //@line 808 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 808 "pyexpat.c"
        var $39=$38+12; //@line 808 "pyexpat.c"
        var $40=HEAP[$39]; //@line 808 "pyexpat.c"
        var $41=($40)!=0; //@line 808 "pyexpat.c"
        if ($41) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 808 "pyexpat.c"
      case 6: // $bb2
        $iftmp_54=(FUNCTION_TABLE_OFFSET + 2); //@line 808 "pyexpat.c"
        __label__ = 8; break; //@line 808 "pyexpat.c"
      case 7: // $bb3
        $iftmp_54=(FUNCTION_TABLE_OFFSET + 4); //@line 808 "pyexpat.c"
        __label__ = 8; break; //@line 808 "pyexpat.c"
      case 8: // $bb4
        var $42=$iftmp_54; //@line 808 "pyexpat.c"
        var $43=$data_addr; //@line 808 "pyexpat.c"
        var $44=_Py_BuildValue(__str32, $42, $43); //@line 808 "pyexpat.c"
        $args=$44; //@line 808 "pyexpat.c"
        var $45=($44)==0; //@line 808 "pyexpat.c"
        var $46=$self; //@line 808 "pyexpat.c"
        if ($45) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 808 "pyexpat.c"
      case 9: // $bb5
        $self_addr_i3=$46;
        var $47=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($47, 0); //@line 256 "pyexpat.c"
        var $48=$self_addr_i3; //@line 257 "pyexpat.c"
        var $49=$48+8; //@line 257 "pyexpat.c"
        var $50=HEAP[$49]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($50, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 18; break; //@line 808 "pyexpat.c"
      case 10: // $bb6
        var $51=$46+24; //@line 808 "pyexpat.c"
        HEAP[$51]=1; //@line 808 "pyexpat.c"
        var $52=$self; //@line 808 "pyexpat.c"
        var $53=$52+48; //@line 808 "pyexpat.c"
        var $54=HEAP[$53]; //@line 808 "pyexpat.c"
        var $55=$54+32; //@line 808 "pyexpat.c"
        var $56=HEAP[$55]; //@line 808 "pyexpat.c"
        $slot_addr_i=8;
        $func_name_addr_i=__str33;
        $lineno_addr_i=810;
        var $57=$slot_addr_i; //@line 264 "pyexpat.c"
        var $58=_handler_info+$57*20; //@line 264 "pyexpat.c"
        var $59=$58+12; //@line 264 "pyexpat.c"
        var $60=HEAP[$59]; //@line 264 "pyexpat.c"
        var $61=($60)==0; //@line 264 "pyexpat.c"
        if ($61) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 264 "pyexpat.c"
      case 11: // $bb_i5
        var $62=$slot_addr_i; //@line 265 "pyexpat.c"
        var $63=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $64=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $65=_PyCode_NewEmpty(__str6, $63, $64); //@line 265 "pyexpat.c"
        var $66=_handler_info+$62*20; //@line 265 "pyexpat.c"
        var $67=$66+12; //@line 265 "pyexpat.c"
        HEAP[$67]=$65; //@line 265 "pyexpat.c"
        __label__ = 12; break; //@line 265 "pyexpat.c"
      case 12: // $getcode_exit
        var $68=$slot_addr_i; //@line 268 "pyexpat.c"
        var $69=_handler_info+$68*20; //@line 268 "pyexpat.c"
        var $70=$69+12; //@line 268 "pyexpat.c"
        var $71=HEAP[$70]; //@line 268 "pyexpat.c"
        $0=$71; //@line 268 "pyexpat.c"
        var $72=$0; //@line 268 "pyexpat.c"
        $retval_i4=$72; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $73=$args; //@line 808 "pyexpat.c"
        var $74=$self; //@line 808 "pyexpat.c"
        var $75=_call_with_frame($retval2_i, $56, $73, $74); //@line 808 "pyexpat.c"
        $rv=$75; //@line 808 "pyexpat.c"
        var $76=$self; //@line 808 "pyexpat.c"
        var $77=$76+24; //@line 808 "pyexpat.c"
        HEAP[$77]=0; //@line 808 "pyexpat.c"
        var $78=$args; //@line 808 "pyexpat.c"
        var $79=$78; //@line 808 "pyexpat.c"
        var $80=HEAP[$79]; //@line 808 "pyexpat.c"
        var $81=($80) - 1; //@line 808 "pyexpat.c"
        var $82=$args; //@line 808 "pyexpat.c"
        var $83=$82; //@line 808 "pyexpat.c"
        HEAP[$83]=$81; //@line 808 "pyexpat.c"
        var $84=$args; //@line 808 "pyexpat.c"
        var $85=$84; //@line 808 "pyexpat.c"
        var $86=HEAP[$85]; //@line 808 "pyexpat.c"
        var $87=($86)==0; //@line 808 "pyexpat.c"
        if ($87) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 808 "pyexpat.c"
      case 13: // $bb7
        var $88=$args; //@line 808 "pyexpat.c"
        var $89=$88+4; //@line 808 "pyexpat.c"
        var $90=HEAP[$89]; //@line 808 "pyexpat.c"
        var $91=$90+24; //@line 808 "pyexpat.c"
        var $92=HEAP[$91]; //@line 808 "pyexpat.c"
        var $93=$args; //@line 808 "pyexpat.c"
        FUNCTION_TABLE[$92]($93); //@line 808 "pyexpat.c"
        __label__ = 14; break; //@line 808 "pyexpat.c"
      case 14: // $bb8
        var $94=$rv; //@line 808 "pyexpat.c"
        var $95=($94)==0; //@line 808 "pyexpat.c"
        if ($95) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 808 "pyexpat.c"
      case 15: // $bb9
        var $96=$self; //@line 808 "pyexpat.c"
        $self_addr_i7=$96;
        var $97=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($97, 0); //@line 256 "pyexpat.c"
        var $98=$self_addr_i7; //@line 257 "pyexpat.c"
        var $99=$98+8; //@line 257 "pyexpat.c"
        var $100=HEAP[$99]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($100, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 18; break; //@line 808 "pyexpat.c"
      case 16: // $bb10
        var $101=$rv; //@line 808 "pyexpat.c"
        var $102=$101; //@line 808 "pyexpat.c"
        var $103=HEAP[$102]; //@line 808 "pyexpat.c"
        var $104=($103) - 1; //@line 808 "pyexpat.c"
        var $105=$rv; //@line 808 "pyexpat.c"
        var $106=$105; //@line 808 "pyexpat.c"
        HEAP[$106]=$104; //@line 808 "pyexpat.c"
        var $107=$rv; //@line 808 "pyexpat.c"
        var $108=$107; //@line 808 "pyexpat.c"
        var $109=HEAP[$108]; //@line 808 "pyexpat.c"
        var $110=($109)==0; //@line 808 "pyexpat.c"
        if ($110) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 808 "pyexpat.c"
      case 17: // $bb11
        var $111=$rv; //@line 808 "pyexpat.c"
        var $112=$111+4; //@line 808 "pyexpat.c"
        var $113=HEAP[$112]; //@line 808 "pyexpat.c"
        var $114=$113+24; //@line 808 "pyexpat.c"
        var $115=HEAP[$114]; //@line 808 "pyexpat.c"
        var $116=$rv; //@line 808 "pyexpat.c"
        FUNCTION_TABLE[$115]($116); //@line 808 "pyexpat.c"
        __label__ = 18; break; //@line 808 "pyexpat.c"
      case 18: // $return
        ;
        return; //@line 808 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_StartCdataSectionHandler($userData) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        var $3=$userData_addr; //@line 812 "pyexpat.c"
        var $4=$3; //@line 812 "pyexpat.c"
        $self=$4; //@line 812 "pyexpat.c"
        $args=0; //@line 812 "pyexpat.c"
        $rv=0; //@line 812 "pyexpat.c"
        var $5=$self; //@line 812 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=9;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 812 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 812 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 812 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 812 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 812 "pyexpat.c"
      case 5: // $bb1
        var $38=_Py_BuildValue(__str34); //@line 812 "pyexpat.c"
        $args=$38; //@line 812 "pyexpat.c"
        var $39=($38)==0; //@line 812 "pyexpat.c"
        var $40=$self; //@line 812 "pyexpat.c"
        if ($39) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 812 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$40;
        var $41=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($41, 0); //@line 256 "pyexpat.c"
        var $42=$self_addr_i3; //@line 257 "pyexpat.c"
        var $43=$42+8; //@line 257 "pyexpat.c"
        var $44=HEAP[$43]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($44, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 812 "pyexpat.c"
      case 7: // $bb3
        var $45=$40+24; //@line 812 "pyexpat.c"
        HEAP[$45]=1; //@line 812 "pyexpat.c"
        var $46=$self; //@line 812 "pyexpat.c"
        var $47=$46+48; //@line 812 "pyexpat.c"
        var $48=HEAP[$47]; //@line 812 "pyexpat.c"
        var $49=$48+36; //@line 812 "pyexpat.c"
        var $50=HEAP[$49]; //@line 812 "pyexpat.c"
        $slot_addr_i=9;
        $func_name_addr_i=__str35;
        $lineno_addr_i=814;
        var $51=$slot_addr_i; //@line 264 "pyexpat.c"
        var $52=_handler_info+$51*20; //@line 264 "pyexpat.c"
        var $53=$52+12; //@line 264 "pyexpat.c"
        var $54=HEAP[$53]; //@line 264 "pyexpat.c"
        var $55=($54)==0; //@line 264 "pyexpat.c"
        if ($55) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $56=$slot_addr_i; //@line 265 "pyexpat.c"
        var $57=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $58=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $59=_PyCode_NewEmpty(__str6, $57, $58); //@line 265 "pyexpat.c"
        var $60=_handler_info+$56*20; //@line 265 "pyexpat.c"
        var $61=$60+12; //@line 265 "pyexpat.c"
        HEAP[$61]=$59; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $62=$slot_addr_i; //@line 268 "pyexpat.c"
        var $63=_handler_info+$62*20; //@line 268 "pyexpat.c"
        var $64=$63+12; //@line 268 "pyexpat.c"
        var $65=HEAP[$64]; //@line 268 "pyexpat.c"
        $0=$65; //@line 268 "pyexpat.c"
        var $66=$0; //@line 268 "pyexpat.c"
        $retval_i4=$66; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $67=$args; //@line 812 "pyexpat.c"
        var $68=$self; //@line 812 "pyexpat.c"
        var $69=_call_with_frame($retval2_i, $50, $67, $68); //@line 812 "pyexpat.c"
        $rv=$69; //@line 812 "pyexpat.c"
        var $70=$self; //@line 812 "pyexpat.c"
        var $71=$70+24; //@line 812 "pyexpat.c"
        HEAP[$71]=0; //@line 812 "pyexpat.c"
        var $72=$args; //@line 812 "pyexpat.c"
        var $73=$72; //@line 812 "pyexpat.c"
        var $74=HEAP[$73]; //@line 812 "pyexpat.c"
        var $75=($74) - 1; //@line 812 "pyexpat.c"
        var $76=$args; //@line 812 "pyexpat.c"
        var $77=$76; //@line 812 "pyexpat.c"
        HEAP[$77]=$75; //@line 812 "pyexpat.c"
        var $78=$args; //@line 812 "pyexpat.c"
        var $79=$78; //@line 812 "pyexpat.c"
        var $80=HEAP[$79]; //@line 812 "pyexpat.c"
        var $81=($80)==0; //@line 812 "pyexpat.c"
        if ($81) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 812 "pyexpat.c"
      case 10: // $bb4
        var $82=$args; //@line 812 "pyexpat.c"
        var $83=$82+4; //@line 812 "pyexpat.c"
        var $84=HEAP[$83]; //@line 812 "pyexpat.c"
        var $85=$84+24; //@line 812 "pyexpat.c"
        var $86=HEAP[$85]; //@line 812 "pyexpat.c"
        var $87=$args; //@line 812 "pyexpat.c"
        FUNCTION_TABLE[$86]($87); //@line 812 "pyexpat.c"
        __label__ = 11; break; //@line 812 "pyexpat.c"
      case 11: // $bb5
        var $88=$rv; //@line 812 "pyexpat.c"
        var $89=($88)==0; //@line 812 "pyexpat.c"
        if ($89) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 812 "pyexpat.c"
      case 12: // $bb6
        var $90=$self; //@line 812 "pyexpat.c"
        $self_addr_i7=$90;
        var $91=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($91, 0); //@line 256 "pyexpat.c"
        var $92=$self_addr_i7; //@line 257 "pyexpat.c"
        var $93=$92+8; //@line 257 "pyexpat.c"
        var $94=HEAP[$93]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($94, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 812 "pyexpat.c"
      case 13: // $bb7
        var $95=$rv; //@line 812 "pyexpat.c"
        var $96=$95; //@line 812 "pyexpat.c"
        var $97=HEAP[$96]; //@line 812 "pyexpat.c"
        var $98=($97) - 1; //@line 812 "pyexpat.c"
        var $99=$rv; //@line 812 "pyexpat.c"
        var $100=$99; //@line 812 "pyexpat.c"
        HEAP[$100]=$98; //@line 812 "pyexpat.c"
        var $101=$rv; //@line 812 "pyexpat.c"
        var $102=$101; //@line 812 "pyexpat.c"
        var $103=HEAP[$102]; //@line 812 "pyexpat.c"
        var $104=($103)==0; //@line 812 "pyexpat.c"
        if ($104) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 812 "pyexpat.c"
      case 14: // $bb8
        var $105=$rv; //@line 812 "pyexpat.c"
        var $106=$105+4; //@line 812 "pyexpat.c"
        var $107=HEAP[$106]; //@line 812 "pyexpat.c"
        var $108=$107+24; //@line 812 "pyexpat.c"
        var $109=HEAP[$108]; //@line 812 "pyexpat.c"
        var $110=$rv; //@line 812 "pyexpat.c"
        FUNCTION_TABLE[$109]($110); //@line 812 "pyexpat.c"
        __label__ = 15; break; //@line 812 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 812 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_EndCdataSectionHandler($userData) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        var $3=$userData_addr; //@line 816 "pyexpat.c"
        var $4=$3; //@line 816 "pyexpat.c"
        $self=$4; //@line 816 "pyexpat.c"
        $args=0; //@line 816 "pyexpat.c"
        $rv=0; //@line 816 "pyexpat.c"
        var $5=$self; //@line 816 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=10;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 816 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 816 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 816 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 816 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 816 "pyexpat.c"
      case 5: // $bb1
        var $38=_Py_BuildValue(__str34); //@line 816 "pyexpat.c"
        $args=$38; //@line 816 "pyexpat.c"
        var $39=($38)==0; //@line 816 "pyexpat.c"
        var $40=$self; //@line 816 "pyexpat.c"
        if ($39) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 816 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$40;
        var $41=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($41, 0); //@line 256 "pyexpat.c"
        var $42=$self_addr_i3; //@line 257 "pyexpat.c"
        var $43=$42+8; //@line 257 "pyexpat.c"
        var $44=HEAP[$43]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($44, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 816 "pyexpat.c"
      case 7: // $bb3
        var $45=$40+24; //@line 816 "pyexpat.c"
        HEAP[$45]=1; //@line 816 "pyexpat.c"
        var $46=$self; //@line 816 "pyexpat.c"
        var $47=$46+48; //@line 816 "pyexpat.c"
        var $48=HEAP[$47]; //@line 816 "pyexpat.c"
        var $49=$48+40; //@line 816 "pyexpat.c"
        var $50=HEAP[$49]; //@line 816 "pyexpat.c"
        $slot_addr_i=10;
        $func_name_addr_i=__str36;
        $lineno_addr_i=818;
        var $51=$slot_addr_i; //@line 264 "pyexpat.c"
        var $52=_handler_info+$51*20; //@line 264 "pyexpat.c"
        var $53=$52+12; //@line 264 "pyexpat.c"
        var $54=HEAP[$53]; //@line 264 "pyexpat.c"
        var $55=($54)==0; //@line 264 "pyexpat.c"
        if ($55) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $56=$slot_addr_i; //@line 265 "pyexpat.c"
        var $57=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $58=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $59=_PyCode_NewEmpty(__str6, $57, $58); //@line 265 "pyexpat.c"
        var $60=_handler_info+$56*20; //@line 265 "pyexpat.c"
        var $61=$60+12; //@line 265 "pyexpat.c"
        HEAP[$61]=$59; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $62=$slot_addr_i; //@line 268 "pyexpat.c"
        var $63=_handler_info+$62*20; //@line 268 "pyexpat.c"
        var $64=$63+12; //@line 268 "pyexpat.c"
        var $65=HEAP[$64]; //@line 268 "pyexpat.c"
        $0=$65; //@line 268 "pyexpat.c"
        var $66=$0; //@line 268 "pyexpat.c"
        $retval_i4=$66; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $67=$args; //@line 816 "pyexpat.c"
        var $68=$self; //@line 816 "pyexpat.c"
        var $69=_call_with_frame($retval2_i, $50, $67, $68); //@line 816 "pyexpat.c"
        $rv=$69; //@line 816 "pyexpat.c"
        var $70=$self; //@line 816 "pyexpat.c"
        var $71=$70+24; //@line 816 "pyexpat.c"
        HEAP[$71]=0; //@line 816 "pyexpat.c"
        var $72=$args; //@line 816 "pyexpat.c"
        var $73=$72; //@line 816 "pyexpat.c"
        var $74=HEAP[$73]; //@line 816 "pyexpat.c"
        var $75=($74) - 1; //@line 816 "pyexpat.c"
        var $76=$args; //@line 816 "pyexpat.c"
        var $77=$76; //@line 816 "pyexpat.c"
        HEAP[$77]=$75; //@line 816 "pyexpat.c"
        var $78=$args; //@line 816 "pyexpat.c"
        var $79=$78; //@line 816 "pyexpat.c"
        var $80=HEAP[$79]; //@line 816 "pyexpat.c"
        var $81=($80)==0; //@line 816 "pyexpat.c"
        if ($81) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 816 "pyexpat.c"
      case 10: // $bb4
        var $82=$args; //@line 816 "pyexpat.c"
        var $83=$82+4; //@line 816 "pyexpat.c"
        var $84=HEAP[$83]; //@line 816 "pyexpat.c"
        var $85=$84+24; //@line 816 "pyexpat.c"
        var $86=HEAP[$85]; //@line 816 "pyexpat.c"
        var $87=$args; //@line 816 "pyexpat.c"
        FUNCTION_TABLE[$86]($87); //@line 816 "pyexpat.c"
        __label__ = 11; break; //@line 816 "pyexpat.c"
      case 11: // $bb5
        var $88=$rv; //@line 816 "pyexpat.c"
        var $89=($88)==0; //@line 816 "pyexpat.c"
        if ($89) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 816 "pyexpat.c"
      case 12: // $bb6
        var $90=$self; //@line 816 "pyexpat.c"
        $self_addr_i7=$90;
        var $91=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($91, 0); //@line 256 "pyexpat.c"
        var $92=$self_addr_i7; //@line 257 "pyexpat.c"
        var $93=$92+8; //@line 257 "pyexpat.c"
        var $94=HEAP[$93]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($94, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 816 "pyexpat.c"
      case 13: // $bb7
        var $95=$rv; //@line 816 "pyexpat.c"
        var $96=$95; //@line 816 "pyexpat.c"
        var $97=HEAP[$96]; //@line 816 "pyexpat.c"
        var $98=($97) - 1; //@line 816 "pyexpat.c"
        var $99=$rv; //@line 816 "pyexpat.c"
        var $100=$99; //@line 816 "pyexpat.c"
        HEAP[$100]=$98; //@line 816 "pyexpat.c"
        var $101=$rv; //@line 816 "pyexpat.c"
        var $102=$101; //@line 816 "pyexpat.c"
        var $103=HEAP[$102]; //@line 816 "pyexpat.c"
        var $104=($103)==0; //@line 816 "pyexpat.c"
        if ($104) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 816 "pyexpat.c"
      case 14: // $bb8
        var $105=$rv; //@line 816 "pyexpat.c"
        var $106=$105+4; //@line 816 "pyexpat.c"
        var $107=HEAP[$106]; //@line 816 "pyexpat.c"
        var $108=$107+24; //@line 816 "pyexpat.c"
        var $109=HEAP[$108]; //@line 816 "pyexpat.c"
        var $110=$rv; //@line 816 "pyexpat.c"
        FUNCTION_TABLE[$109]($110); //@line 816 "pyexpat.c"
        __label__ = 15; break; //@line 816 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 816 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_DefaultHandler($userData, $s, $len) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i18;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i15;
        var $0;
        var $self_addr_i14;
        var $str_addr_i7;
        var $len_addr_i8;
        var $retval_i9;
        var $1;
        var $str_addr_i;
        var $len_addr_i;
        var $retval_i3;
        var $2;
        var $self_addr_i1;
        var $retval_i2;
        var $3;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $4;
        var $handler_i;
        var $userData_addr;
        var $s_addr;
        var $len_addr;
        var $iftmp_55;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $s_addr=$s;
        $len_addr=$len;
        var $5=$userData_addr; //@line 829 "pyexpat.c"
        var $6=$5; //@line 829 "pyexpat.c"
        $self=$6; //@line 829 "pyexpat.c"
        $args=0; //@line 829 "pyexpat.c"
        $rv=0; //@line 829 "pyexpat.c"
        var $7=$self; //@line 829 "pyexpat.c"
        $self_addr_i=$7;
        $type_addr_i=11;
        var $8=$self_addr_i; //@line 147 "pyexpat.c"
        var $9=$8+48; //@line 147 "pyexpat.c"
        var $10=HEAP[$9]; //@line 147 "pyexpat.c"
        var $11=$type_addr_i; //@line 147 "pyexpat.c"
        var $12=$10+4*$11; //@line 147 "pyexpat.c"
        var $13=HEAP[$12]; //@line 147 "pyexpat.c"
        $handler_i=$13; //@line 147 "pyexpat.c"
        var $14=$handler_i; //@line 148 "pyexpat.c"
        var $15=($14)!=0; //@line 148 "pyexpat.c"
        var $16=($15); //@line 148 "pyexpat.c"
        $4=$16; //@line 148 "pyexpat.c"
        var $17=$4; //@line 148 "pyexpat.c"
        $retval_i=$17; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $18=($retval1_i)!=0; //@line 829 "pyexpat.c"
        if ($18) { __label__ = 1; break; } else { __label__ = 24; break; } //@line 829 "pyexpat.c"
      case 1: // $bb
        var $19=$self; //@line 829 "pyexpat.c"
        $self_addr_i1=$19;
        var $20=$self_addr_i1; //@line 460 "pyexpat.c"
        var $21=$20+32; //@line 460 "pyexpat.c"
        var $22=HEAP[$21]; //@line 460 "pyexpat.c"
        var $23=($22)==0; //@line 460 "pyexpat.c"
        if ($23) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $24=$self_addr_i1; //@line 460 "pyexpat.c"
        var $25=$24+40; //@line 460 "pyexpat.c"
        var $26=HEAP[$25]; //@line 460 "pyexpat.c"
        var $27=($26)==0; //@line 460 "pyexpat.c"
        if ($27) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $3=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $28=$self_addr_i1; //@line 462 "pyexpat.c"
        var $29=$28+40; //@line 462 "pyexpat.c"
        var $30=HEAP[$29]; //@line 462 "pyexpat.c"
        var $31=$self_addr_i1; //@line 462 "pyexpat.c"
        var $32=$31+32; //@line 462 "pyexpat.c"
        var $33=HEAP[$32]; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 462 "pyexpat.c"
        var $35=_call_character_handler($34, $33, $30); //@line 462 "pyexpat.c"
        $rc_i=$35; //@line 462 "pyexpat.c"
        var $36=$self_addr_i1; //@line 463 "pyexpat.c"
        var $37=$36+40; //@line 463 "pyexpat.c"
        HEAP[$37]=0; //@line 463 "pyexpat.c"
        var $38=$rc_i; //@line 464 "pyexpat.c"
        $3=$38; //@line 464 "pyexpat.c"
        $retval_i2=$38; //@line 461 "pyexpat.c"
        var $39=($38) < 0; //@line 829 "pyexpat.c"
        if ($39) { __label__ = 24; break; } else { __label__ = 5; break; } //@line 829 "pyexpat.c"
      case 5: // $bb1
        var $40=$self; //@line 829 "pyexpat.c"
        var $41=$40+12; //@line 829 "pyexpat.c"
        var $42=HEAP[$41]; //@line 829 "pyexpat.c"
        var $43=($42)!=0; //@line 829 "pyexpat.c"
        var $44=$s_addr; //@line 829 "pyexpat.c"
        var $45=$len_addr; //@line 829 "pyexpat.c"
        if ($43) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 829 "pyexpat.c"
      case 6: // $bb2
        $str_addr_i=$44;
        $len_addr_i=$45;
        var $46=$str_addr_i; //@line 187 "pyexpat.c"
        var $47=($46)==0; //@line 187 "pyexpat.c"
        if ($47) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 187 "pyexpat.c"
      case 7: // $bb_i4
        var $48=HEAP[__Py_NoneStruct]; //@line 188 "pyexpat.c"
        var $49=($48) + 1; //@line 188 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$49; //@line 188 "pyexpat.c"
        $2=__Py_NoneStruct; //@line 189 "pyexpat.c"
        __label__ = 9; break; //@line 189 "pyexpat.c"
      case 8: // $bb1_i5
        var $50=$str_addr_i; //@line 191 "pyexpat.c"
        var $51=$len_addr_i; //@line 191 "pyexpat.c"
        var $52=_PyUnicodeUCS2_DecodeUTF8($50, $51, __str5); //@line 191 "pyexpat.c"
        $2=$52; //@line 191 "pyexpat.c"
        __label__ = 9; break; //@line 191 "pyexpat.c"
      case 9: // $conv_string_len_to_unicode_exit
        var $53=$2; //@line 189 "pyexpat.c"
        $retval_i3=$53; //@line 189 "pyexpat.c"
        var $retval3_i=$retval_i3; //@line 189 "pyexpat.c"
        $iftmp_55=$retval3_i; //@line 829 "pyexpat.c"
        __label__ = 14; break; //@line 829 "pyexpat.c"
      case 10: // $bb3
        $str_addr_i7=$44;
        $len_addr_i8=$45;
        var $54=$str_addr_i7; //@line 217 "pyexpat.c"
        var $55=($54)==0; //@line 217 "pyexpat.c"
        if ($55) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 217 "pyexpat.c"
      case 11: // $bb_i10
        var $56=HEAP[__Py_NoneStruct]; //@line 218 "pyexpat.c"
        var $57=($56) + 1; //@line 218 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$57; //@line 218 "pyexpat.c"
        $1=__Py_NoneStruct; //@line 219 "pyexpat.c"
        __label__ = 13; break; //@line 219 "pyexpat.c"
      case 12: // $bb1_i11
        var $58=$str_addr_i7; //@line 221 "pyexpat.c"
        var $59=$len_addr_i8; //@line 221 "pyexpat.c"
        var $60=_PyString_FromStringAndSize($58, $59); //@line 221 "pyexpat.c"
        $1=$60; //@line 221 "pyexpat.c"
        __label__ = 13; break; //@line 221 "pyexpat.c"
      case 13: // $conv_string_len_to_utf8_exit
        var $61=$1; //@line 219 "pyexpat.c"
        $retval_i9=$61; //@line 219 "pyexpat.c"
        var $retval3_i12=$retval_i9; //@line 219 "pyexpat.c"
        $iftmp_55=$retval3_i12; //@line 829 "pyexpat.c"
        __label__ = 14; break; //@line 829 "pyexpat.c"
      case 14: // $bb4
        var $62=$iftmp_55; //@line 829 "pyexpat.c"
        var $63=_Py_BuildValue(__str10, $62); //@line 829 "pyexpat.c"
        $args=$63; //@line 829 "pyexpat.c"
        var $64=($63)==0; //@line 829 "pyexpat.c"
        var $65=$self; //@line 829 "pyexpat.c"
        if ($64) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 829 "pyexpat.c"
      case 15: // $bb5
        $self_addr_i14=$65;
        var $66=$self_addr_i14; //@line 256 "pyexpat.c"
        _clear_handlers($66, 0); //@line 256 "pyexpat.c"
        var $67=$self_addr_i14; //@line 257 "pyexpat.c"
        var $68=$67+8; //@line 257 "pyexpat.c"
        var $69=HEAP[$68]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($69, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 829 "pyexpat.c"
      case 16: // $bb6
        var $70=$65+24; //@line 829 "pyexpat.c"
        HEAP[$70]=1; //@line 829 "pyexpat.c"
        var $71=$self; //@line 829 "pyexpat.c"
        var $72=$71+48; //@line 829 "pyexpat.c"
        var $73=HEAP[$72]; //@line 829 "pyexpat.c"
        var $74=$73+44; //@line 829 "pyexpat.c"
        var $75=HEAP[$74]; //@line 829 "pyexpat.c"
        $slot_addr_i=11;
        $func_name_addr_i=__str37;
        $lineno_addr_i=833;
        var $76=$slot_addr_i; //@line 264 "pyexpat.c"
        var $77=_handler_info+$76*20; //@line 264 "pyexpat.c"
        var $78=$77+12; //@line 264 "pyexpat.c"
        var $79=HEAP[$78]; //@line 264 "pyexpat.c"
        var $80=($79)==0; //@line 264 "pyexpat.c"
        if ($80) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 264 "pyexpat.c"
      case 17: // $bb_i16
        var $81=$slot_addr_i; //@line 265 "pyexpat.c"
        var $82=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $83=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $84=_PyCode_NewEmpty(__str6, $82, $83); //@line 265 "pyexpat.c"
        var $85=_handler_info+$81*20; //@line 265 "pyexpat.c"
        var $86=$85+12; //@line 265 "pyexpat.c"
        HEAP[$86]=$84; //@line 265 "pyexpat.c"
        __label__ = 18; break; //@line 265 "pyexpat.c"
      case 18: // $getcode_exit
        var $87=$slot_addr_i; //@line 268 "pyexpat.c"
        var $88=_handler_info+$87*20; //@line 268 "pyexpat.c"
        var $89=$88+12; //@line 268 "pyexpat.c"
        var $90=HEAP[$89]; //@line 268 "pyexpat.c"
        $0=$90; //@line 268 "pyexpat.c"
        var $91=$0; //@line 268 "pyexpat.c"
        $retval_i15=$91; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i15; //@line 268 "pyexpat.c"
        var $92=$args; //@line 829 "pyexpat.c"
        var $93=$self; //@line 829 "pyexpat.c"
        var $94=_call_with_frame($retval2_i, $75, $92, $93); //@line 829 "pyexpat.c"
        $rv=$94; //@line 829 "pyexpat.c"
        var $95=$self; //@line 829 "pyexpat.c"
        var $96=$95+24; //@line 829 "pyexpat.c"
        HEAP[$96]=0; //@line 829 "pyexpat.c"
        var $97=$args; //@line 829 "pyexpat.c"
        var $98=$97; //@line 829 "pyexpat.c"
        var $99=HEAP[$98]; //@line 829 "pyexpat.c"
        var $100=($99) - 1; //@line 829 "pyexpat.c"
        var $101=$args; //@line 829 "pyexpat.c"
        var $102=$101; //@line 829 "pyexpat.c"
        HEAP[$102]=$100; //@line 829 "pyexpat.c"
        var $103=$args; //@line 829 "pyexpat.c"
        var $104=$103; //@line 829 "pyexpat.c"
        var $105=HEAP[$104]; //@line 829 "pyexpat.c"
        var $106=($105)==0; //@line 829 "pyexpat.c"
        if ($106) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 829 "pyexpat.c"
      case 19: // $bb7
        var $107=$args; //@line 829 "pyexpat.c"
        var $108=$107+4; //@line 829 "pyexpat.c"
        var $109=HEAP[$108]; //@line 829 "pyexpat.c"
        var $110=$109+24; //@line 829 "pyexpat.c"
        var $111=HEAP[$110]; //@line 829 "pyexpat.c"
        var $112=$args; //@line 829 "pyexpat.c"
        FUNCTION_TABLE[$111]($112); //@line 829 "pyexpat.c"
        __label__ = 20; break; //@line 829 "pyexpat.c"
      case 20: // $bb8
        var $113=$rv; //@line 829 "pyexpat.c"
        var $114=($113)==0; //@line 829 "pyexpat.c"
        if ($114) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 829 "pyexpat.c"
      case 21: // $bb9
        var $115=$self; //@line 829 "pyexpat.c"
        $self_addr_i18=$115;
        var $116=$self_addr_i18; //@line 256 "pyexpat.c"
        _clear_handlers($116, 0); //@line 256 "pyexpat.c"
        var $117=$self_addr_i18; //@line 257 "pyexpat.c"
        var $118=$117+8; //@line 257 "pyexpat.c"
        var $119=HEAP[$118]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($119, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 829 "pyexpat.c"
      case 22: // $bb10
        var $120=$rv; //@line 829 "pyexpat.c"
        var $121=$120; //@line 829 "pyexpat.c"
        var $122=HEAP[$121]; //@line 829 "pyexpat.c"
        var $123=($122) - 1; //@line 829 "pyexpat.c"
        var $124=$rv; //@line 829 "pyexpat.c"
        var $125=$124; //@line 829 "pyexpat.c"
        HEAP[$125]=$123; //@line 829 "pyexpat.c"
        var $126=$rv; //@line 829 "pyexpat.c"
        var $127=$126; //@line 829 "pyexpat.c"
        var $128=HEAP[$127]; //@line 829 "pyexpat.c"
        var $129=($128)==0; //@line 829 "pyexpat.c"
        if ($129) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 829 "pyexpat.c"
      case 23: // $bb11
        var $130=$rv; //@line 829 "pyexpat.c"
        var $131=$130+4; //@line 829 "pyexpat.c"
        var $132=HEAP[$131]; //@line 829 "pyexpat.c"
        var $133=$132+24; //@line 829 "pyexpat.c"
        var $134=HEAP[$133]; //@line 829 "pyexpat.c"
        var $135=$rv; //@line 829 "pyexpat.c"
        FUNCTION_TABLE[$134]($135); //@line 829 "pyexpat.c"
        __label__ = 24; break; //@line 829 "pyexpat.c"
      case 24: // $return
        ;
        return; //@line 829 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_DefaultHandlerExpandHandler($userData, $s, $len) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i18;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i15;
        var $0;
        var $self_addr_i14;
        var $str_addr_i7;
        var $len_addr_i8;
        var $retval_i9;
        var $1;
        var $str_addr_i;
        var $len_addr_i;
        var $retval_i3;
        var $2;
        var $self_addr_i1;
        var $retval_i2;
        var $3;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $4;
        var $handler_i;
        var $userData_addr;
        var $s_addr;
        var $len_addr;
        var $iftmp_56;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $s_addr=$s;
        $len_addr=$len;
        var $5=$userData_addr; //@line 835 "pyexpat.c"
        var $6=$5; //@line 835 "pyexpat.c"
        $self=$6; //@line 835 "pyexpat.c"
        $args=0; //@line 835 "pyexpat.c"
        $rv=0; //@line 835 "pyexpat.c"
        var $7=$self; //@line 835 "pyexpat.c"
        $self_addr_i=$7;
        $type_addr_i=12;
        var $8=$self_addr_i; //@line 147 "pyexpat.c"
        var $9=$8+48; //@line 147 "pyexpat.c"
        var $10=HEAP[$9]; //@line 147 "pyexpat.c"
        var $11=$type_addr_i; //@line 147 "pyexpat.c"
        var $12=$10+4*$11; //@line 147 "pyexpat.c"
        var $13=HEAP[$12]; //@line 147 "pyexpat.c"
        $handler_i=$13; //@line 147 "pyexpat.c"
        var $14=$handler_i; //@line 148 "pyexpat.c"
        var $15=($14)!=0; //@line 148 "pyexpat.c"
        var $16=($15); //@line 148 "pyexpat.c"
        $4=$16; //@line 148 "pyexpat.c"
        var $17=$4; //@line 148 "pyexpat.c"
        $retval_i=$17; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $18=($retval1_i)!=0; //@line 835 "pyexpat.c"
        if ($18) { __label__ = 1; break; } else { __label__ = 24; break; } //@line 835 "pyexpat.c"
      case 1: // $bb
        var $19=$self; //@line 835 "pyexpat.c"
        $self_addr_i1=$19;
        var $20=$self_addr_i1; //@line 460 "pyexpat.c"
        var $21=$20+32; //@line 460 "pyexpat.c"
        var $22=HEAP[$21]; //@line 460 "pyexpat.c"
        var $23=($22)==0; //@line 460 "pyexpat.c"
        if ($23) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $24=$self_addr_i1; //@line 460 "pyexpat.c"
        var $25=$24+40; //@line 460 "pyexpat.c"
        var $26=HEAP[$25]; //@line 460 "pyexpat.c"
        var $27=($26)==0; //@line 460 "pyexpat.c"
        if ($27) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $3=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $28=$self_addr_i1; //@line 462 "pyexpat.c"
        var $29=$28+40; //@line 462 "pyexpat.c"
        var $30=HEAP[$29]; //@line 462 "pyexpat.c"
        var $31=$self_addr_i1; //@line 462 "pyexpat.c"
        var $32=$31+32; //@line 462 "pyexpat.c"
        var $33=HEAP[$32]; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 462 "pyexpat.c"
        var $35=_call_character_handler($34, $33, $30); //@line 462 "pyexpat.c"
        $rc_i=$35; //@line 462 "pyexpat.c"
        var $36=$self_addr_i1; //@line 463 "pyexpat.c"
        var $37=$36+40; //@line 463 "pyexpat.c"
        HEAP[$37]=0; //@line 463 "pyexpat.c"
        var $38=$rc_i; //@line 464 "pyexpat.c"
        $3=$38; //@line 464 "pyexpat.c"
        $retval_i2=$38; //@line 461 "pyexpat.c"
        var $39=($38) < 0; //@line 835 "pyexpat.c"
        if ($39) { __label__ = 24; break; } else { __label__ = 5; break; } //@line 835 "pyexpat.c"
      case 5: // $bb1
        var $40=$self; //@line 835 "pyexpat.c"
        var $41=$40+12; //@line 835 "pyexpat.c"
        var $42=HEAP[$41]; //@line 835 "pyexpat.c"
        var $43=($42)!=0; //@line 835 "pyexpat.c"
        var $44=$s_addr; //@line 835 "pyexpat.c"
        var $45=$len_addr; //@line 835 "pyexpat.c"
        if ($43) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 835 "pyexpat.c"
      case 6: // $bb2
        $str_addr_i=$44;
        $len_addr_i=$45;
        var $46=$str_addr_i; //@line 187 "pyexpat.c"
        var $47=($46)==0; //@line 187 "pyexpat.c"
        if ($47) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 187 "pyexpat.c"
      case 7: // $bb_i4
        var $48=HEAP[__Py_NoneStruct]; //@line 188 "pyexpat.c"
        var $49=($48) + 1; //@line 188 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$49; //@line 188 "pyexpat.c"
        $2=__Py_NoneStruct; //@line 189 "pyexpat.c"
        __label__ = 9; break; //@line 189 "pyexpat.c"
      case 8: // $bb1_i5
        var $50=$str_addr_i; //@line 191 "pyexpat.c"
        var $51=$len_addr_i; //@line 191 "pyexpat.c"
        var $52=_PyUnicodeUCS2_DecodeUTF8($50, $51, __str5); //@line 191 "pyexpat.c"
        $2=$52; //@line 191 "pyexpat.c"
        __label__ = 9; break; //@line 191 "pyexpat.c"
      case 9: // $conv_string_len_to_unicode_exit
        var $53=$2; //@line 189 "pyexpat.c"
        $retval_i3=$53; //@line 189 "pyexpat.c"
        var $retval3_i=$retval_i3; //@line 189 "pyexpat.c"
        $iftmp_56=$retval3_i; //@line 835 "pyexpat.c"
        __label__ = 14; break; //@line 835 "pyexpat.c"
      case 10: // $bb3
        $str_addr_i7=$44;
        $len_addr_i8=$45;
        var $54=$str_addr_i7; //@line 217 "pyexpat.c"
        var $55=($54)==0; //@line 217 "pyexpat.c"
        if ($55) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 217 "pyexpat.c"
      case 11: // $bb_i10
        var $56=HEAP[__Py_NoneStruct]; //@line 218 "pyexpat.c"
        var $57=($56) + 1; //@line 218 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$57; //@line 218 "pyexpat.c"
        $1=__Py_NoneStruct; //@line 219 "pyexpat.c"
        __label__ = 13; break; //@line 219 "pyexpat.c"
      case 12: // $bb1_i11
        var $58=$str_addr_i7; //@line 221 "pyexpat.c"
        var $59=$len_addr_i8; //@line 221 "pyexpat.c"
        var $60=_PyString_FromStringAndSize($58, $59); //@line 221 "pyexpat.c"
        $1=$60; //@line 221 "pyexpat.c"
        __label__ = 13; break; //@line 221 "pyexpat.c"
      case 13: // $conv_string_len_to_utf8_exit
        var $61=$1; //@line 219 "pyexpat.c"
        $retval_i9=$61; //@line 219 "pyexpat.c"
        var $retval3_i12=$retval_i9; //@line 219 "pyexpat.c"
        $iftmp_56=$retval3_i12; //@line 835 "pyexpat.c"
        __label__ = 14; break; //@line 835 "pyexpat.c"
      case 14: // $bb4
        var $62=$iftmp_56; //@line 835 "pyexpat.c"
        var $63=_Py_BuildValue(__str10, $62); //@line 835 "pyexpat.c"
        $args=$63; //@line 835 "pyexpat.c"
        var $64=($63)==0; //@line 835 "pyexpat.c"
        var $65=$self; //@line 835 "pyexpat.c"
        if ($64) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 835 "pyexpat.c"
      case 15: // $bb5
        $self_addr_i14=$65;
        var $66=$self_addr_i14; //@line 256 "pyexpat.c"
        _clear_handlers($66, 0); //@line 256 "pyexpat.c"
        var $67=$self_addr_i14; //@line 257 "pyexpat.c"
        var $68=$67+8; //@line 257 "pyexpat.c"
        var $69=HEAP[$68]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($69, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 835 "pyexpat.c"
      case 16: // $bb6
        var $70=$65+24; //@line 835 "pyexpat.c"
        HEAP[$70]=1; //@line 835 "pyexpat.c"
        var $71=$self; //@line 835 "pyexpat.c"
        var $72=$71+48; //@line 835 "pyexpat.c"
        var $73=HEAP[$72]; //@line 835 "pyexpat.c"
        var $74=$73+48; //@line 835 "pyexpat.c"
        var $75=HEAP[$74]; //@line 835 "pyexpat.c"
        $slot_addr_i=12;
        $func_name_addr_i=__str38;
        $lineno_addr_i=839;
        var $76=$slot_addr_i; //@line 264 "pyexpat.c"
        var $77=_handler_info+$76*20; //@line 264 "pyexpat.c"
        var $78=$77+12; //@line 264 "pyexpat.c"
        var $79=HEAP[$78]; //@line 264 "pyexpat.c"
        var $80=($79)==0; //@line 264 "pyexpat.c"
        if ($80) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 264 "pyexpat.c"
      case 17: // $bb_i16
        var $81=$slot_addr_i; //@line 265 "pyexpat.c"
        var $82=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $83=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $84=_PyCode_NewEmpty(__str6, $82, $83); //@line 265 "pyexpat.c"
        var $85=_handler_info+$81*20; //@line 265 "pyexpat.c"
        var $86=$85+12; //@line 265 "pyexpat.c"
        HEAP[$86]=$84; //@line 265 "pyexpat.c"
        __label__ = 18; break; //@line 265 "pyexpat.c"
      case 18: // $getcode_exit
        var $87=$slot_addr_i; //@line 268 "pyexpat.c"
        var $88=_handler_info+$87*20; //@line 268 "pyexpat.c"
        var $89=$88+12; //@line 268 "pyexpat.c"
        var $90=HEAP[$89]; //@line 268 "pyexpat.c"
        $0=$90; //@line 268 "pyexpat.c"
        var $91=$0; //@line 268 "pyexpat.c"
        $retval_i15=$91; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i15; //@line 268 "pyexpat.c"
        var $92=$args; //@line 835 "pyexpat.c"
        var $93=$self; //@line 835 "pyexpat.c"
        var $94=_call_with_frame($retval2_i, $75, $92, $93); //@line 835 "pyexpat.c"
        $rv=$94; //@line 835 "pyexpat.c"
        var $95=$self; //@line 835 "pyexpat.c"
        var $96=$95+24; //@line 835 "pyexpat.c"
        HEAP[$96]=0; //@line 835 "pyexpat.c"
        var $97=$args; //@line 835 "pyexpat.c"
        var $98=$97; //@line 835 "pyexpat.c"
        var $99=HEAP[$98]; //@line 835 "pyexpat.c"
        var $100=($99) - 1; //@line 835 "pyexpat.c"
        var $101=$args; //@line 835 "pyexpat.c"
        var $102=$101; //@line 835 "pyexpat.c"
        HEAP[$102]=$100; //@line 835 "pyexpat.c"
        var $103=$args; //@line 835 "pyexpat.c"
        var $104=$103; //@line 835 "pyexpat.c"
        var $105=HEAP[$104]; //@line 835 "pyexpat.c"
        var $106=($105)==0; //@line 835 "pyexpat.c"
        if ($106) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 835 "pyexpat.c"
      case 19: // $bb7
        var $107=$args; //@line 835 "pyexpat.c"
        var $108=$107+4; //@line 835 "pyexpat.c"
        var $109=HEAP[$108]; //@line 835 "pyexpat.c"
        var $110=$109+24; //@line 835 "pyexpat.c"
        var $111=HEAP[$110]; //@line 835 "pyexpat.c"
        var $112=$args; //@line 835 "pyexpat.c"
        FUNCTION_TABLE[$111]($112); //@line 835 "pyexpat.c"
        __label__ = 20; break; //@line 835 "pyexpat.c"
      case 20: // $bb8
        var $113=$rv; //@line 835 "pyexpat.c"
        var $114=($113)==0; //@line 835 "pyexpat.c"
        if ($114) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 835 "pyexpat.c"
      case 21: // $bb9
        var $115=$self; //@line 835 "pyexpat.c"
        $self_addr_i18=$115;
        var $116=$self_addr_i18; //@line 256 "pyexpat.c"
        _clear_handlers($116, 0); //@line 256 "pyexpat.c"
        var $117=$self_addr_i18; //@line 257 "pyexpat.c"
        var $118=$117+8; //@line 257 "pyexpat.c"
        var $119=HEAP[$118]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($119, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 24; break; //@line 835 "pyexpat.c"
      case 22: // $bb10
        var $120=$rv; //@line 835 "pyexpat.c"
        var $121=$120; //@line 835 "pyexpat.c"
        var $122=HEAP[$121]; //@line 835 "pyexpat.c"
        var $123=($122) - 1; //@line 835 "pyexpat.c"
        var $124=$rv; //@line 835 "pyexpat.c"
        var $125=$124; //@line 835 "pyexpat.c"
        HEAP[$125]=$123; //@line 835 "pyexpat.c"
        var $126=$rv; //@line 835 "pyexpat.c"
        var $127=$126; //@line 835 "pyexpat.c"
        var $128=HEAP[$127]; //@line 835 "pyexpat.c"
        var $129=($128)==0; //@line 835 "pyexpat.c"
        if ($129) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 835 "pyexpat.c"
      case 23: // $bb11
        var $130=$rv; //@line 835 "pyexpat.c"
        var $131=$130+4; //@line 835 "pyexpat.c"
        var $132=HEAP[$131]; //@line 835 "pyexpat.c"
        var $133=$132+24; //@line 835 "pyexpat.c"
        var $134=HEAP[$133]; //@line 835 "pyexpat.c"
        var $135=$rv; //@line 835 "pyexpat.c"
        FUNCTION_TABLE[$134]($135); //@line 835 "pyexpat.c"
        __label__ = 24; break; //@line 835 "pyexpat.c"
      case 24: // $return
        ;
        return; //@line 835 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_NotStandaloneHandler($userData) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $retval;
        var $3;
        var $self;
        var $args;
        var $rv;
        var $rc;
        $userData_addr=$userData;
        var $4=$userData_addr; //@line 842 "pyexpat.c"
        var $5=$4; //@line 842 "pyexpat.c"
        $self=$5; //@line 842 "pyexpat.c"
        $args=0; //@line 842 "pyexpat.c"
        $rv=0; //@line 842 "pyexpat.c"
        $rc=0; //@line 842 "pyexpat.c"
        var $6=$self; //@line 842 "pyexpat.c"
        $self_addr_i=$6;
        $type_addr_i=13;
        var $7=$self_addr_i; //@line 147 "pyexpat.c"
        var $8=$7+48; //@line 147 "pyexpat.c"
        var $9=HEAP[$8]; //@line 147 "pyexpat.c"
        var $10=$type_addr_i; //@line 147 "pyexpat.c"
        var $11=$9+4*$10; //@line 147 "pyexpat.c"
        var $12=HEAP[$11]; //@line 147 "pyexpat.c"
        $handler_i=$12; //@line 147 "pyexpat.c"
        var $13=$handler_i; //@line 148 "pyexpat.c"
        var $14=($13)!=0; //@line 148 "pyexpat.c"
        var $15=($14); //@line 148 "pyexpat.c"
        $2=$15; //@line 148 "pyexpat.c"
        var $16=$2; //@line 148 "pyexpat.c"
        $retval_i=$16; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $17=($retval1_i)!=0; //@line 842 "pyexpat.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 16; break; } //@line 842 "pyexpat.c"
      case 1: // $bb
        var $18=$self; //@line 842 "pyexpat.c"
        $self_addr_i1=$18;
        var $19=$self_addr_i1; //@line 460 "pyexpat.c"
        var $20=$19+32; //@line 460 "pyexpat.c"
        var $21=HEAP[$20]; //@line 460 "pyexpat.c"
        var $22=($21)==0; //@line 460 "pyexpat.c"
        if ($22) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $23=$self_addr_i1; //@line 460 "pyexpat.c"
        var $24=$23+40; //@line 460 "pyexpat.c"
        var $25=HEAP[$24]; //@line 460 "pyexpat.c"
        var $26=($25)==0; //@line 460 "pyexpat.c"
        if ($26) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 6; break;
      case 4: // $flush_character_buffer_exit
        var $27=$self_addr_i1; //@line 462 "pyexpat.c"
        var $28=$27+40; //@line 462 "pyexpat.c"
        var $29=HEAP[$28]; //@line 462 "pyexpat.c"
        var $30=$self_addr_i1; //@line 462 "pyexpat.c"
        var $31=$30+32; //@line 462 "pyexpat.c"
        var $32=HEAP[$31]; //@line 462 "pyexpat.c"
        var $33=$self_addr_i1; //@line 462 "pyexpat.c"
        var $34=_call_character_handler($33, $32, $29); //@line 462 "pyexpat.c"
        $rc_i=$34; //@line 462 "pyexpat.c"
        var $35=$self_addr_i1; //@line 463 "pyexpat.c"
        var $36=$35+40; //@line 463 "pyexpat.c"
        HEAP[$36]=0; //@line 463 "pyexpat.c"
        var $37=$rc_i; //@line 464 "pyexpat.c"
        $1=$37; //@line 464 "pyexpat.c"
        $retval_i2=$37; //@line 461 "pyexpat.c"
        var $38=($37) < 0; //@line 842 "pyexpat.c"
        if ($38) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 842 "pyexpat.c"
      case 5: // $bb1
        var $39=$rc; //@line 842 "pyexpat.c"
        $3=$39; //@line 842 "pyexpat.c"
        __label__ = 17; break; //@line 842 "pyexpat.c"
      case 6: // $bb2
        var $40=_Py_BuildValue(__str34); //@line 842 "pyexpat.c"
        $args=$40; //@line 842 "pyexpat.c"
        var $41=($40)==0; //@line 842 "pyexpat.c"
        var $42=$self; //@line 842 "pyexpat.c"
        if ($41) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 842 "pyexpat.c"
      case 7: // $bb3
        $self_addr_i3=$42;
        var $43=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($43, 0); //@line 256 "pyexpat.c"
        var $44=$self_addr_i3; //@line 257 "pyexpat.c"
        var $45=$44+8; //@line 257 "pyexpat.c"
        var $46=HEAP[$45]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($46, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $47=$rc; //@line 842 "pyexpat.c"
        $3=$47; //@line 842 "pyexpat.c"
        __label__ = 17; break; //@line 842 "pyexpat.c"
      case 8: // $bb4
        var $48=$42+24; //@line 842 "pyexpat.c"
        HEAP[$48]=1; //@line 842 "pyexpat.c"
        var $49=$self; //@line 842 "pyexpat.c"
        var $50=$49+48; //@line 842 "pyexpat.c"
        var $51=HEAP[$50]; //@line 842 "pyexpat.c"
        var $52=$51+52; //@line 842 "pyexpat.c"
        var $53=HEAP[$52]; //@line 842 "pyexpat.c"
        $slot_addr_i=13;
        $func_name_addr_i=__str39;
        $lineno_addr_i=844;
        var $54=$slot_addr_i; //@line 264 "pyexpat.c"
        var $55=_handler_info+$54*20; //@line 264 "pyexpat.c"
        var $56=$55+12; //@line 264 "pyexpat.c"
        var $57=HEAP[$56]; //@line 264 "pyexpat.c"
        var $58=($57)==0; //@line 264 "pyexpat.c"
        if ($58) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 264 "pyexpat.c"
      case 9: // $bb_i5
        var $59=$slot_addr_i; //@line 265 "pyexpat.c"
        var $60=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $61=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $62=_PyCode_NewEmpty(__str6, $60, $61); //@line 265 "pyexpat.c"
        var $63=_handler_info+$59*20; //@line 265 "pyexpat.c"
        var $64=$63+12; //@line 265 "pyexpat.c"
        HEAP[$64]=$62; //@line 265 "pyexpat.c"
        __label__ = 10; break; //@line 265 "pyexpat.c"
      case 10: // $getcode_exit
        var $65=$slot_addr_i; //@line 268 "pyexpat.c"
        var $66=_handler_info+$65*20; //@line 268 "pyexpat.c"
        var $67=$66+12; //@line 268 "pyexpat.c"
        var $68=HEAP[$67]; //@line 268 "pyexpat.c"
        $0=$68; //@line 268 "pyexpat.c"
        var $69=$0; //@line 268 "pyexpat.c"
        $retval_i4=$69; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $70=$args; //@line 842 "pyexpat.c"
        var $71=$self; //@line 842 "pyexpat.c"
        var $72=_call_with_frame($retval2_i, $53, $70, $71); //@line 842 "pyexpat.c"
        $rv=$72; //@line 842 "pyexpat.c"
        var $73=$self; //@line 842 "pyexpat.c"
        var $74=$73+24; //@line 842 "pyexpat.c"
        HEAP[$74]=0; //@line 842 "pyexpat.c"
        var $75=$args; //@line 842 "pyexpat.c"
        var $76=$75; //@line 842 "pyexpat.c"
        var $77=HEAP[$76]; //@line 842 "pyexpat.c"
        var $78=($77) - 1; //@line 842 "pyexpat.c"
        var $79=$args; //@line 842 "pyexpat.c"
        var $80=$79; //@line 842 "pyexpat.c"
        HEAP[$80]=$78; //@line 842 "pyexpat.c"
        var $81=$args; //@line 842 "pyexpat.c"
        var $82=$81; //@line 842 "pyexpat.c"
        var $83=HEAP[$82]; //@line 842 "pyexpat.c"
        var $84=($83)==0; //@line 842 "pyexpat.c"
        if ($84) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 842 "pyexpat.c"
      case 11: // $bb5
        var $85=$args; //@line 842 "pyexpat.c"
        var $86=$85+4; //@line 842 "pyexpat.c"
        var $87=HEAP[$86]; //@line 842 "pyexpat.c"
        var $88=$87+24; //@line 842 "pyexpat.c"
        var $89=HEAP[$88]; //@line 842 "pyexpat.c"
        var $90=$args; //@line 842 "pyexpat.c"
        FUNCTION_TABLE[$89]($90); //@line 842 "pyexpat.c"
        __label__ = 12; break; //@line 842 "pyexpat.c"
      case 12: // $bb6
        var $91=$rv; //@line 842 "pyexpat.c"
        var $92=($91)==0; //@line 842 "pyexpat.c"
        if ($92) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 842 "pyexpat.c"
      case 13: // $bb7
        var $93=$self; //@line 842 "pyexpat.c"
        $self_addr_i7=$93;
        var $94=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($94, 0); //@line 256 "pyexpat.c"
        var $95=$self_addr_i7; //@line 257 "pyexpat.c"
        var $96=$95+8; //@line 257 "pyexpat.c"
        var $97=HEAP[$96]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($97, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $98=$rc; //@line 842 "pyexpat.c"
        $3=$98; //@line 842 "pyexpat.c"
        __label__ = 17; break; //@line 842 "pyexpat.c"
      case 14: // $bb8
        var $99=$rv; //@line 842 "pyexpat.c"
        var $100=_PyInt_AsLong($99); //@line 842 "pyexpat.c"
        $rc=$100; //@line 842 "pyexpat.c"
        var $101=$rv; //@line 842 "pyexpat.c"
        var $102=$101; //@line 842 "pyexpat.c"
        var $103=HEAP[$102]; //@line 842 "pyexpat.c"
        var $104=($103) - 1; //@line 842 "pyexpat.c"
        var $105=$rv; //@line 842 "pyexpat.c"
        var $106=$105; //@line 842 "pyexpat.c"
        HEAP[$106]=$104; //@line 842 "pyexpat.c"
        var $107=$rv; //@line 842 "pyexpat.c"
        var $108=$107; //@line 842 "pyexpat.c"
        var $109=HEAP[$108]; //@line 842 "pyexpat.c"
        var $110=($109)==0; //@line 842 "pyexpat.c"
        if ($110) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 842 "pyexpat.c"
      case 15: // $bb9
        var $111=$rv; //@line 842 "pyexpat.c"
        var $112=$111+4; //@line 842 "pyexpat.c"
        var $113=HEAP[$112]; //@line 842 "pyexpat.c"
        var $114=$113+24; //@line 842 "pyexpat.c"
        var $115=HEAP[$114]; //@line 842 "pyexpat.c"
        var $116=$rv; //@line 842 "pyexpat.c"
        FUNCTION_TABLE[$115]($116); //@line 842 "pyexpat.c"
        __label__ = 16; break; //@line 842 "pyexpat.c"
      case 16: // $bb10
        var $117=$rc; //@line 842 "pyexpat.c"
        $3=$117; //@line 842 "pyexpat.c"
        __label__ = 17; break; //@line 842 "pyexpat.c"
      case 17: // $bb11
        var $118=$3; //@line 842 "pyexpat.c"
        $retval=$118; //@line 842 "pyexpat.c"
        var $retval12=$retval; //@line 842 "pyexpat.c"
        ;
        return $retval12; //@line 842 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_ExternalEntityRefHandler($parser, $context, $base, $systemId, $publicId) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $parser_addr;
        var $context_addr;
        var $base_addr;
        var $systemId_addr;
        var $publicId_addr;
        var $retval;
        var $iftmp_58;
        var $3;
        var $self;
        var $args;
        var $rv;
        var $rc;
        $parser_addr=$parser;
        $context_addr=$context;
        $base_addr=$base;
        $systemId_addr=$systemId;
        $publicId_addr=$publicId;
        var $4=$parser_addr; //@line 846 "pyexpat.c"
        var $5=$4; //@line 846 "pyexpat.c"
        var $6=HEAP[$5]; //@line 846 "pyexpat.c"
        var $7=$6; //@line 846 "pyexpat.c"
        $self=$7; //@line 846 "pyexpat.c"
        $args=0; //@line 846 "pyexpat.c"
        $rv=0; //@line 846 "pyexpat.c"
        $rc=0; //@line 846 "pyexpat.c"
        var $8=$self; //@line 846 "pyexpat.c"
        $self_addr_i=$8;
        $type_addr_i=14;
        var $9=$self_addr_i; //@line 147 "pyexpat.c"
        var $10=$9+48; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        var $12=$type_addr_i; //@line 147 "pyexpat.c"
        var $13=$11+4*$12; //@line 147 "pyexpat.c"
        var $14=HEAP[$13]; //@line 147 "pyexpat.c"
        $handler_i=$14; //@line 147 "pyexpat.c"
        var $15=$handler_i; //@line 148 "pyexpat.c"
        var $16=($15)!=0; //@line 148 "pyexpat.c"
        var $17=($16); //@line 148 "pyexpat.c"
        $2=$17; //@line 148 "pyexpat.c"
        var $18=$2; //@line 148 "pyexpat.c"
        $retval_i=$18; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $19=($retval1_i)!=0; //@line 846 "pyexpat.c"
        if ($19) { __label__ = 1; break; } else { __label__ = 19; break; } //@line 846 "pyexpat.c"
      case 1: // $bb
        var $20=$self; //@line 846 "pyexpat.c"
        $self_addr_i1=$20;
        var $21=$self_addr_i1; //@line 460 "pyexpat.c"
        var $22=$21+32; //@line 460 "pyexpat.c"
        var $23=HEAP[$22]; //@line 460 "pyexpat.c"
        var $24=($23)==0; //@line 460 "pyexpat.c"
        if ($24) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $25=$self_addr_i1; //@line 460 "pyexpat.c"
        var $26=$25+40; //@line 460 "pyexpat.c"
        var $27=HEAP[$26]; //@line 460 "pyexpat.c"
        var $28=($27)==0; //@line 460 "pyexpat.c"
        if ($28) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 6; break;
      case 4: // $flush_character_buffer_exit
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+40; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=$32+32; //@line 462 "pyexpat.c"
        var $34=HEAP[$33]; //@line 462 "pyexpat.c"
        var $35=$self_addr_i1; //@line 462 "pyexpat.c"
        var $36=_call_character_handler($35, $34, $31); //@line 462 "pyexpat.c"
        $rc_i=$36; //@line 462 "pyexpat.c"
        var $37=$self_addr_i1; //@line 463 "pyexpat.c"
        var $38=$37+40; //@line 463 "pyexpat.c"
        HEAP[$38]=0; //@line 463 "pyexpat.c"
        var $39=$rc_i; //@line 464 "pyexpat.c"
        $1=$39; //@line 464 "pyexpat.c"
        $retval_i2=$39; //@line 461 "pyexpat.c"
        var $40=($39) < 0; //@line 846 "pyexpat.c"
        if ($40) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 846 "pyexpat.c"
      case 5: // $bb1
        var $41=$rc; //@line 846 "pyexpat.c"
        $3=$41; //@line 846 "pyexpat.c"
        __label__ = 20; break; //@line 846 "pyexpat.c"
      case 6: // $bb2
        var $42=$self; //@line 846 "pyexpat.c"
        var $43=$publicId_addr; //@line 846 "pyexpat.c"
        var $44=_string_intern($42, $43); //@line 846 "pyexpat.c"
        var $45=$self; //@line 846 "pyexpat.c"
        var $46=$systemId_addr; //@line 846 "pyexpat.c"
        var $47=_string_intern($45, $46); //@line 846 "pyexpat.c"
        var $48=$self; //@line 846 "pyexpat.c"
        var $49=$base_addr; //@line 846 "pyexpat.c"
        var $50=_string_intern($48, $49); //@line 846 "pyexpat.c"
        var $51=$self; //@line 846 "pyexpat.c"
        var $52=$51+12; //@line 846 "pyexpat.c"
        var $53=HEAP[$52]; //@line 846 "pyexpat.c"
        var $54=($53)!=0; //@line 846 "pyexpat.c"
        if ($54) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 846 "pyexpat.c"
      case 7: // $bb3
        $iftmp_58=(FUNCTION_TABLE_OFFSET + 2); //@line 846 "pyexpat.c"
        __label__ = 9; break; //@line 846 "pyexpat.c"
      case 8: // $bb4
        $iftmp_58=(FUNCTION_TABLE_OFFSET + 4); //@line 846 "pyexpat.c"
        __label__ = 9; break; //@line 846 "pyexpat.c"
      case 9: // $bb5
        var $55=$iftmp_58; //@line 846 "pyexpat.c"
        var $56=$context_addr; //@line 846 "pyexpat.c"
        var $57=_Py_BuildValue(__str40, $55, $56, $50, $47, $44); //@line 846 "pyexpat.c"
        $args=$57; //@line 846 "pyexpat.c"
        var $58=($57)==0; //@line 846 "pyexpat.c"
        var $59=$self; //@line 846 "pyexpat.c"
        if ($58) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 846 "pyexpat.c"
      case 10: // $bb6
        $self_addr_i3=$59;
        var $60=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($60, 0); //@line 256 "pyexpat.c"
        var $61=$self_addr_i3; //@line 257 "pyexpat.c"
        var $62=$61+8; //@line 257 "pyexpat.c"
        var $63=HEAP[$62]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($63, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $64=$rc; //@line 846 "pyexpat.c"
        $3=$64; //@line 846 "pyexpat.c"
        __label__ = 20; break; //@line 846 "pyexpat.c"
      case 11: // $bb7
        var $65=$59+24; //@line 846 "pyexpat.c"
        HEAP[$65]=1; //@line 846 "pyexpat.c"
        var $66=$self; //@line 846 "pyexpat.c"
        var $67=$66+48; //@line 846 "pyexpat.c"
        var $68=HEAP[$67]; //@line 846 "pyexpat.c"
        var $69=$68+56; //@line 846 "pyexpat.c"
        var $70=HEAP[$69]; //@line 846 "pyexpat.c"
        $slot_addr_i=14;
        $func_name_addr_i=__str41;
        $lineno_addr_i=857;
        var $71=$slot_addr_i; //@line 264 "pyexpat.c"
        var $72=_handler_info+$71*20; //@line 264 "pyexpat.c"
        var $73=$72+12; //@line 264 "pyexpat.c"
        var $74=HEAP[$73]; //@line 264 "pyexpat.c"
        var $75=($74)==0; //@line 264 "pyexpat.c"
        if ($75) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 264 "pyexpat.c"
      case 12: // $bb_i5
        var $76=$slot_addr_i; //@line 265 "pyexpat.c"
        var $77=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $78=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $79=_PyCode_NewEmpty(__str6, $77, $78); //@line 265 "pyexpat.c"
        var $80=_handler_info+$76*20; //@line 265 "pyexpat.c"
        var $81=$80+12; //@line 265 "pyexpat.c"
        HEAP[$81]=$79; //@line 265 "pyexpat.c"
        __label__ = 13; break; //@line 265 "pyexpat.c"
      case 13: // $getcode_exit
        var $82=$slot_addr_i; //@line 268 "pyexpat.c"
        var $83=_handler_info+$82*20; //@line 268 "pyexpat.c"
        var $84=$83+12; //@line 268 "pyexpat.c"
        var $85=HEAP[$84]; //@line 268 "pyexpat.c"
        $0=$85; //@line 268 "pyexpat.c"
        var $86=$0; //@line 268 "pyexpat.c"
        $retval_i4=$86; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $87=$args; //@line 846 "pyexpat.c"
        var $88=$self; //@line 846 "pyexpat.c"
        var $89=_call_with_frame($retval2_i, $70, $87, $88); //@line 846 "pyexpat.c"
        $rv=$89; //@line 846 "pyexpat.c"
        var $90=$self; //@line 846 "pyexpat.c"
        var $91=$90+24; //@line 846 "pyexpat.c"
        HEAP[$91]=0; //@line 846 "pyexpat.c"
        var $92=$args; //@line 846 "pyexpat.c"
        var $93=$92; //@line 846 "pyexpat.c"
        var $94=HEAP[$93]; //@line 846 "pyexpat.c"
        var $95=($94) - 1; //@line 846 "pyexpat.c"
        var $96=$args; //@line 846 "pyexpat.c"
        var $97=$96; //@line 846 "pyexpat.c"
        HEAP[$97]=$95; //@line 846 "pyexpat.c"
        var $98=$args; //@line 846 "pyexpat.c"
        var $99=$98; //@line 846 "pyexpat.c"
        var $100=HEAP[$99]; //@line 846 "pyexpat.c"
        var $101=($100)==0; //@line 846 "pyexpat.c"
        if ($101) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 846 "pyexpat.c"
      case 14: // $bb8
        var $102=$args; //@line 846 "pyexpat.c"
        var $103=$102+4; //@line 846 "pyexpat.c"
        var $104=HEAP[$103]; //@line 846 "pyexpat.c"
        var $105=$104+24; //@line 846 "pyexpat.c"
        var $106=HEAP[$105]; //@line 846 "pyexpat.c"
        var $107=$args; //@line 846 "pyexpat.c"
        FUNCTION_TABLE[$106]($107); //@line 846 "pyexpat.c"
        __label__ = 15; break; //@line 846 "pyexpat.c"
      case 15: // $bb9
        var $108=$rv; //@line 846 "pyexpat.c"
        var $109=($108)==0; //@line 846 "pyexpat.c"
        if ($109) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 846 "pyexpat.c"
      case 16: // $bb10
        var $110=$self; //@line 846 "pyexpat.c"
        $self_addr_i7=$110;
        var $111=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($111, 0); //@line 256 "pyexpat.c"
        var $112=$self_addr_i7; //@line 257 "pyexpat.c"
        var $113=$112+8; //@line 257 "pyexpat.c"
        var $114=HEAP[$113]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($114, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        var $115=$rc; //@line 846 "pyexpat.c"
        $3=$115; //@line 846 "pyexpat.c"
        __label__ = 20; break; //@line 846 "pyexpat.c"
      case 17: // $bb11
        var $116=$rv; //@line 846 "pyexpat.c"
        var $117=_PyInt_AsLong($116); //@line 846 "pyexpat.c"
        $rc=$117; //@line 846 "pyexpat.c"
        var $118=$rv; //@line 846 "pyexpat.c"
        var $119=$118; //@line 846 "pyexpat.c"
        var $120=HEAP[$119]; //@line 846 "pyexpat.c"
        var $121=($120) - 1; //@line 846 "pyexpat.c"
        var $122=$rv; //@line 846 "pyexpat.c"
        var $123=$122; //@line 846 "pyexpat.c"
        HEAP[$123]=$121; //@line 846 "pyexpat.c"
        var $124=$rv; //@line 846 "pyexpat.c"
        var $125=$124; //@line 846 "pyexpat.c"
        var $126=HEAP[$125]; //@line 846 "pyexpat.c"
        var $127=($126)==0; //@line 846 "pyexpat.c"
        if ($127) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 846 "pyexpat.c"
      case 18: // $bb12
        var $128=$rv; //@line 846 "pyexpat.c"
        var $129=$128+4; //@line 846 "pyexpat.c"
        var $130=HEAP[$129]; //@line 846 "pyexpat.c"
        var $131=$130+24; //@line 846 "pyexpat.c"
        var $132=HEAP[$131]; //@line 846 "pyexpat.c"
        var $133=$rv; //@line 846 "pyexpat.c"
        FUNCTION_TABLE[$132]($133); //@line 846 "pyexpat.c"
        __label__ = 19; break; //@line 846 "pyexpat.c"
      case 19: // $bb13
        var $134=$rc; //@line 846 "pyexpat.c"
        $3=$134; //@line 846 "pyexpat.c"
        __label__ = 20; break; //@line 846 "pyexpat.c"
      case 20: // $bb14
        var $135=$3; //@line 846 "pyexpat.c"
        $retval=$135; //@line 846 "pyexpat.c"
        var $retval15=$retval; //@line 846 "pyexpat.c"
        ;
        return $retval15; //@line 846 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_StartDoctypeDeclHandler($userData, $doctypeName, $sysid, $pubid, $has_internal_subset) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $doctypeName_addr;
        var $sysid_addr;
        var $pubid_addr;
        var $has_internal_subset_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        $doctypeName_addr=$doctypeName;
        $sysid_addr=$sysid;
        $pubid_addr=$pubid;
        $has_internal_subset_addr=$has_internal_subset;
        var $3=$userData_addr; //@line 861 "pyexpat.c"
        var $4=$3; //@line 861 "pyexpat.c"
        $self=$4; //@line 861 "pyexpat.c"
        $args=0; //@line 861 "pyexpat.c"
        $rv=0; //@line 861 "pyexpat.c"
        var $5=$self; //@line 861 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=15;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 861 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 861 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 861 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 861 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 861 "pyexpat.c"
      case 5: // $bb1
        var $38=$self; //@line 861 "pyexpat.c"
        var $39=$pubid_addr; //@line 861 "pyexpat.c"
        var $40=_string_intern($38, $39); //@line 861 "pyexpat.c"
        var $41=$self; //@line 861 "pyexpat.c"
        var $42=$sysid_addr; //@line 861 "pyexpat.c"
        var $43=_string_intern($41, $42); //@line 861 "pyexpat.c"
        var $44=$self; //@line 861 "pyexpat.c"
        var $45=$doctypeName_addr; //@line 861 "pyexpat.c"
        var $46=_string_intern($44, $45); //@line 861 "pyexpat.c"
        var $47=$has_internal_subset_addr; //@line 861 "pyexpat.c"
        var $48=_Py_BuildValue(__str42, $46, $43, $40, $47); //@line 861 "pyexpat.c"
        $args=$48; //@line 861 "pyexpat.c"
        var $49=($48)==0; //@line 861 "pyexpat.c"
        var $50=$self; //@line 861 "pyexpat.c"
        if ($49) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 861 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$50;
        var $51=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($51, 0); //@line 256 "pyexpat.c"
        var $52=$self_addr_i3; //@line 257 "pyexpat.c"
        var $53=$52+8; //@line 257 "pyexpat.c"
        var $54=HEAP[$53]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($54, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 861 "pyexpat.c"
      case 7: // $bb3
        var $55=$50+24; //@line 861 "pyexpat.c"
        HEAP[$55]=1; //@line 861 "pyexpat.c"
        var $56=$self; //@line 861 "pyexpat.c"
        var $57=$56+48; //@line 861 "pyexpat.c"
        var $58=HEAP[$57]; //@line 861 "pyexpat.c"
        var $59=$58+60; //@line 861 "pyexpat.c"
        var $60=HEAP[$59]; //@line 861 "pyexpat.c"
        $slot_addr_i=15;
        $func_name_addr_i=__str43;
        $lineno_addr_i=867;
        var $61=$slot_addr_i; //@line 264 "pyexpat.c"
        var $62=_handler_info+$61*20; //@line 264 "pyexpat.c"
        var $63=$62+12; //@line 264 "pyexpat.c"
        var $64=HEAP[$63]; //@line 264 "pyexpat.c"
        var $65=($64)==0; //@line 264 "pyexpat.c"
        if ($65) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $66=$slot_addr_i; //@line 265 "pyexpat.c"
        var $67=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $68=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $69=_PyCode_NewEmpty(__str6, $67, $68); //@line 265 "pyexpat.c"
        var $70=_handler_info+$66*20; //@line 265 "pyexpat.c"
        var $71=$70+12; //@line 265 "pyexpat.c"
        HEAP[$71]=$69; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $72=$slot_addr_i; //@line 268 "pyexpat.c"
        var $73=_handler_info+$72*20; //@line 268 "pyexpat.c"
        var $74=$73+12; //@line 268 "pyexpat.c"
        var $75=HEAP[$74]; //@line 268 "pyexpat.c"
        $0=$75; //@line 268 "pyexpat.c"
        var $76=$0; //@line 268 "pyexpat.c"
        $retval_i4=$76; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $77=$args; //@line 861 "pyexpat.c"
        var $78=$self; //@line 861 "pyexpat.c"
        var $79=_call_with_frame($retval2_i, $60, $77, $78); //@line 861 "pyexpat.c"
        $rv=$79; //@line 861 "pyexpat.c"
        var $80=$self; //@line 861 "pyexpat.c"
        var $81=$80+24; //@line 861 "pyexpat.c"
        HEAP[$81]=0; //@line 861 "pyexpat.c"
        var $82=$args; //@line 861 "pyexpat.c"
        var $83=$82; //@line 861 "pyexpat.c"
        var $84=HEAP[$83]; //@line 861 "pyexpat.c"
        var $85=($84) - 1; //@line 861 "pyexpat.c"
        var $86=$args; //@line 861 "pyexpat.c"
        var $87=$86; //@line 861 "pyexpat.c"
        HEAP[$87]=$85; //@line 861 "pyexpat.c"
        var $88=$args; //@line 861 "pyexpat.c"
        var $89=$88; //@line 861 "pyexpat.c"
        var $90=HEAP[$89]; //@line 861 "pyexpat.c"
        var $91=($90)==0; //@line 861 "pyexpat.c"
        if ($91) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 861 "pyexpat.c"
      case 10: // $bb4
        var $92=$args; //@line 861 "pyexpat.c"
        var $93=$92+4; //@line 861 "pyexpat.c"
        var $94=HEAP[$93]; //@line 861 "pyexpat.c"
        var $95=$94+24; //@line 861 "pyexpat.c"
        var $96=HEAP[$95]; //@line 861 "pyexpat.c"
        var $97=$args; //@line 861 "pyexpat.c"
        FUNCTION_TABLE[$96]($97); //@line 861 "pyexpat.c"
        __label__ = 11; break; //@line 861 "pyexpat.c"
      case 11: // $bb5
        var $98=$rv; //@line 861 "pyexpat.c"
        var $99=($98)==0; //@line 861 "pyexpat.c"
        if ($99) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 861 "pyexpat.c"
      case 12: // $bb6
        var $100=$self; //@line 861 "pyexpat.c"
        $self_addr_i7=$100;
        var $101=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($101, 0); //@line 256 "pyexpat.c"
        var $102=$self_addr_i7; //@line 257 "pyexpat.c"
        var $103=$102+8; //@line 257 "pyexpat.c"
        var $104=HEAP[$103]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($104, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 861 "pyexpat.c"
      case 13: // $bb7
        var $105=$rv; //@line 861 "pyexpat.c"
        var $106=$105; //@line 861 "pyexpat.c"
        var $107=HEAP[$106]; //@line 861 "pyexpat.c"
        var $108=($107) - 1; //@line 861 "pyexpat.c"
        var $109=$rv; //@line 861 "pyexpat.c"
        var $110=$109; //@line 861 "pyexpat.c"
        HEAP[$110]=$108; //@line 861 "pyexpat.c"
        var $111=$rv; //@line 861 "pyexpat.c"
        var $112=$111; //@line 861 "pyexpat.c"
        var $113=HEAP[$112]; //@line 861 "pyexpat.c"
        var $114=($113)==0; //@line 861 "pyexpat.c"
        if ($114) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 861 "pyexpat.c"
      case 14: // $bb8
        var $115=$rv; //@line 861 "pyexpat.c"
        var $116=$115+4; //@line 861 "pyexpat.c"
        var $117=HEAP[$116]; //@line 861 "pyexpat.c"
        var $118=$117+24; //@line 861 "pyexpat.c"
        var $119=HEAP[$118]; //@line 861 "pyexpat.c"
        var $120=$rv; //@line 861 "pyexpat.c"
        FUNCTION_TABLE[$119]($120); //@line 861 "pyexpat.c"
        __label__ = 15; break; //@line 861 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 861 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _my_EndDoctypeDeclHandler($userData) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i7;
        var $slot_addr_i;
        var $func_name_addr_i;
        var $lineno_addr_i;
        var $retval_i4;
        var $0;
        var $self_addr_i3;
        var $self_addr_i1;
        var $retval_i2;
        var $1;
        var $rc_i;
        var $self_addr_i;
        var $type_addr_i;
        var $retval_i;
        var $2;
        var $handler_i;
        var $userData_addr;
        var $self;
        var $args;
        var $rv;
        $userData_addr=$userData;
        var $3=$userData_addr; //@line 869 "pyexpat.c"
        var $4=$3; //@line 869 "pyexpat.c"
        $self=$4; //@line 869 "pyexpat.c"
        $args=0; //@line 869 "pyexpat.c"
        $rv=0; //@line 869 "pyexpat.c"
        var $5=$self; //@line 869 "pyexpat.c"
        $self_addr_i=$5;
        $type_addr_i=16;
        var $6=$self_addr_i; //@line 147 "pyexpat.c"
        var $7=$6+48; //@line 147 "pyexpat.c"
        var $8=HEAP[$7]; //@line 147 "pyexpat.c"
        var $9=$type_addr_i; //@line 147 "pyexpat.c"
        var $10=$8+4*$9; //@line 147 "pyexpat.c"
        var $11=HEAP[$10]; //@line 147 "pyexpat.c"
        $handler_i=$11; //@line 147 "pyexpat.c"
        var $12=$handler_i; //@line 148 "pyexpat.c"
        var $13=($12)!=0; //@line 148 "pyexpat.c"
        var $14=($13); //@line 148 "pyexpat.c"
        $2=$14; //@line 148 "pyexpat.c"
        var $15=$2; //@line 148 "pyexpat.c"
        $retval_i=$15; //@line 148 "pyexpat.c"
        var $retval1_i=$retval_i; //@line 148 "pyexpat.c"
        var $16=($retval1_i)!=0; //@line 869 "pyexpat.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 15; break; } //@line 869 "pyexpat.c"
      case 1: // $bb
        var $17=$self; //@line 869 "pyexpat.c"
        $self_addr_i1=$17;
        var $18=$self_addr_i1; //@line 460 "pyexpat.c"
        var $19=$18+32; //@line 460 "pyexpat.c"
        var $20=HEAP[$19]; //@line 460 "pyexpat.c"
        var $21=($20)==0; //@line 460 "pyexpat.c"
        if ($21) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 460 "pyexpat.c"
      case 2: // $bb_i
        var $22=$self_addr_i1; //@line 460 "pyexpat.c"
        var $23=$22+40; //@line 460 "pyexpat.c"
        var $24=HEAP[$23]; //@line 460 "pyexpat.c"
        var $25=($24)==0; //@line 460 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 460 "pyexpat.c"
      case 3: // $flush_character_buffer_exit_thread
        $1=0; //@line 461 "pyexpat.c"
        $retval_i2=0; //@line 461 "pyexpat.c"
        __label__ = 5; break;
      case 4: // $flush_character_buffer_exit
        var $26=$self_addr_i1; //@line 462 "pyexpat.c"
        var $27=$26+40; //@line 462 "pyexpat.c"
        var $28=HEAP[$27]; //@line 462 "pyexpat.c"
        var $29=$self_addr_i1; //@line 462 "pyexpat.c"
        var $30=$29+32; //@line 462 "pyexpat.c"
        var $31=HEAP[$30]; //@line 462 "pyexpat.c"
        var $32=$self_addr_i1; //@line 462 "pyexpat.c"
        var $33=_call_character_handler($32, $31, $28); //@line 462 "pyexpat.c"
        $rc_i=$33; //@line 462 "pyexpat.c"
        var $34=$self_addr_i1; //@line 463 "pyexpat.c"
        var $35=$34+40; //@line 463 "pyexpat.c"
        HEAP[$35]=0; //@line 463 "pyexpat.c"
        var $36=$rc_i; //@line 464 "pyexpat.c"
        $1=$36; //@line 464 "pyexpat.c"
        $retval_i2=$36; //@line 461 "pyexpat.c"
        var $37=($36) < 0; //@line 869 "pyexpat.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 5; break; } //@line 869 "pyexpat.c"
      case 5: // $bb1
        var $38=_Py_BuildValue(__str34); //@line 869 "pyexpat.c"
        $args=$38; //@line 869 "pyexpat.c"
        var $39=($38)==0; //@line 869 "pyexpat.c"
        var $40=$self; //@line 869 "pyexpat.c"
        if ($39) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 869 "pyexpat.c"
      case 6: // $bb2
        $self_addr_i3=$40;
        var $41=$self_addr_i3; //@line 256 "pyexpat.c"
        _clear_handlers($41, 0); //@line 256 "pyexpat.c"
        var $42=$self_addr_i3; //@line 257 "pyexpat.c"
        var $43=$42+8; //@line 257 "pyexpat.c"
        var $44=HEAP[$43]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($44, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 869 "pyexpat.c"
      case 7: // $bb3
        var $45=$40+24; //@line 869 "pyexpat.c"
        HEAP[$45]=1; //@line 869 "pyexpat.c"
        var $46=$self; //@line 869 "pyexpat.c"
        var $47=$46+48; //@line 869 "pyexpat.c"
        var $48=HEAP[$47]; //@line 869 "pyexpat.c"
        var $49=$48+64; //@line 869 "pyexpat.c"
        var $50=HEAP[$49]; //@line 869 "pyexpat.c"
        $slot_addr_i=16;
        $func_name_addr_i=__str44;
        $lineno_addr_i=869;
        var $51=$slot_addr_i; //@line 264 "pyexpat.c"
        var $52=_handler_info+$51*20; //@line 264 "pyexpat.c"
        var $53=$52+12; //@line 264 "pyexpat.c"
        var $54=HEAP[$53]; //@line 264 "pyexpat.c"
        var $55=($54)==0; //@line 264 "pyexpat.c"
        if ($55) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 264 "pyexpat.c"
      case 8: // $bb_i5
        var $56=$slot_addr_i; //@line 265 "pyexpat.c"
        var $57=$func_name_addr_i; //@line 265 "pyexpat.c"
        var $58=$lineno_addr_i; //@line 265 "pyexpat.c"
        var $59=_PyCode_NewEmpty(__str6, $57, $58); //@line 265 "pyexpat.c"
        var $60=_handler_info+$56*20; //@line 265 "pyexpat.c"
        var $61=$60+12; //@line 265 "pyexpat.c"
        HEAP[$61]=$59; //@line 265 "pyexpat.c"
        __label__ = 9; break; //@line 265 "pyexpat.c"
      case 9: // $getcode_exit
        var $62=$slot_addr_i; //@line 268 "pyexpat.c"
        var $63=_handler_info+$62*20; //@line 268 "pyexpat.c"
        var $64=$63+12; //@line 268 "pyexpat.c"
        var $65=HEAP[$64]; //@line 268 "pyexpat.c"
        $0=$65; //@line 268 "pyexpat.c"
        var $66=$0; //@line 268 "pyexpat.c"
        $retval_i4=$66; //@line 268 "pyexpat.c"
        var $retval2_i=$retval_i4; //@line 268 "pyexpat.c"
        var $67=$args; //@line 869 "pyexpat.c"
        var $68=$self; //@line 869 "pyexpat.c"
        var $69=_call_with_frame($retval2_i, $50, $67, $68); //@line 869 "pyexpat.c"
        $rv=$69; //@line 869 "pyexpat.c"
        var $70=$self; //@line 869 "pyexpat.c"
        var $71=$70+24; //@line 869 "pyexpat.c"
        HEAP[$71]=0; //@line 869 "pyexpat.c"
        var $72=$args; //@line 869 "pyexpat.c"
        var $73=$72; //@line 869 "pyexpat.c"
        var $74=HEAP[$73]; //@line 869 "pyexpat.c"
        var $75=($74) - 1; //@line 869 "pyexpat.c"
        var $76=$args; //@line 869 "pyexpat.c"
        var $77=$76; //@line 869 "pyexpat.c"
        HEAP[$77]=$75; //@line 869 "pyexpat.c"
        var $78=$args; //@line 869 "pyexpat.c"
        var $79=$78; //@line 869 "pyexpat.c"
        var $80=HEAP[$79]; //@line 869 "pyexpat.c"
        var $81=($80)==0; //@line 869 "pyexpat.c"
        if ($81) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 869 "pyexpat.c"
      case 10: // $bb4
        var $82=$args; //@line 869 "pyexpat.c"
        var $83=$82+4; //@line 869 "pyexpat.c"
        var $84=HEAP[$83]; //@line 869 "pyexpat.c"
        var $85=$84+24; //@line 869 "pyexpat.c"
        var $86=HEAP[$85]; //@line 869 "pyexpat.c"
        var $87=$args; //@line 869 "pyexpat.c"
        FUNCTION_TABLE[$86]($87); //@line 869 "pyexpat.c"
        __label__ = 11; break; //@line 869 "pyexpat.c"
      case 11: // $bb5
        var $88=$rv; //@line 869 "pyexpat.c"
        var $89=($88)==0; //@line 869 "pyexpat.c"
        if ($89) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 869 "pyexpat.c"
      case 12: // $bb6
        var $90=$self; //@line 869 "pyexpat.c"
        $self_addr_i7=$90;
        var $91=$self_addr_i7; //@line 256 "pyexpat.c"
        _clear_handlers($91, 0); //@line 256 "pyexpat.c"
        var $92=$self_addr_i7; //@line 257 "pyexpat.c"
        var $93=$92+8; //@line 257 "pyexpat.c"
        var $94=HEAP[$93]; //@line 257 "pyexpat.c"
        _XML_SetExternalEntityRefHandler($94, (FUNCTION_TABLE_OFFSET + 6)); //@line 257 "pyexpat.c"
        __label__ = 15; break; //@line 869 "pyexpat.c"
      case 13: // $bb7
        var $95=$rv; //@line 869 "pyexpat.c"
        var $96=$95; //@line 869 "pyexpat.c"
        var $97=HEAP[$96]; //@line 869 "pyexpat.c"
        var $98=($97) - 1; //@line 869 "pyexpat.c"
        var $99=$rv; //@line 869 "pyexpat.c"
        var $100=$99; //@line 869 "pyexpat.c"
        HEAP[$100]=$98; //@line 869 "pyexpat.c"
        var $101=$rv; //@line 869 "pyexpat.c"
        var $102=$101; //@line 869 "pyexpat.c"
        var $103=HEAP[$102]; //@line 869 "pyexpat.c"
        var $104=($103)==0; //@line 869 "pyexpat.c"
        if ($104) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 869 "pyexpat.c"
      case 14: // $bb8
        var $105=$rv; //@line 869 "pyexpat.c"
        var $106=$105+4; //@line 869 "pyexpat.c"
        var $107=HEAP[$106]; //@line 869 "pyexpat.c"
        var $108=$107+24; //@line 869 "pyexpat.c"
        var $109=HEAP[$108]; //@line 869 "pyexpat.c"
        var $110=$rv; //@line 869 "pyexpat.c"
        FUNCTION_TABLE[$109]($110); //@line 869 "pyexpat.c"
        __label__ = 15; break; //@line 869 "pyexpat.c"
      case 15: // $return
        ;
        return; //@line 869 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _get_parse_result($self, $rv) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr_i;
        var $retval_i;
        var $0;
        var $rc_i;
        var $self_addr;
        var $rv_addr;
        var $retval;
        var $1;
        $self_addr=$self;
        $rv_addr=$rv;
        var $2=_PyErr_Occurred(); //@line 876 "pyexpat.c"
        var $3=($2)!=0; //@line 876 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 876 "pyexpat.c"
      case 1: // $bb
        $1=0; //@line 877 "pyexpat.c"
        __label__ = 10; break; //@line 877 "pyexpat.c"
      case 2: // $bb1
        var $4=$rv_addr; //@line 879 "pyexpat.c"
        var $5=($4)==0; //@line 879 "pyexpat.c"
        var $6=$self_addr; //@line 880 "pyexpat.c"
        if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 879 "pyexpat.c"
      case 3: // $bb2
        var $7=$6+8; //@line 880 "pyexpat.c"
        var $8=HEAP[$7]; //@line 880 "pyexpat.c"
        var $9=_XML_GetErrorCode($8); //@line 880 "pyexpat.c"
        var $10=$self_addr; //@line 880 "pyexpat.c"
        var $11=_set_error($10, $9); //@line 880 "pyexpat.c"
        $1=$11; //@line 880 "pyexpat.c"
        __label__ = 10; break; //@line 880 "pyexpat.c"
      case 4: // $bb3
        $self_addr_i=$6;
        var $12=$self_addr_i; //@line 460 "pyexpat.c"
        var $13=$12+32; //@line 460 "pyexpat.c"
        var $14=HEAP[$13]; //@line 460 "pyexpat.c"
        var $15=($14)==0; //@line 460 "pyexpat.c"
        if ($15) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 460 "pyexpat.c"
      case 5: // $bb_i
        var $16=$self_addr_i; //@line 460 "pyexpat.c"
        var $17=$16+40; //@line 460 "pyexpat.c"
        var $18=HEAP[$17]; //@line 460 "pyexpat.c"
        var $19=($18)==0; //@line 460 "pyexpat.c"
        if ($19) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 460 "pyexpat.c"
      case 6: // $flush_character_buffer_exit_thread
        $0=0; //@line 461 "pyexpat.c"
        $retval_i=0; //@line 461 "pyexpat.c"
        __label__ = 9; break;
      case 7: // $flush_character_buffer_exit
        var $20=$self_addr_i; //@line 462 "pyexpat.c"
        var $21=$20+40; //@line 462 "pyexpat.c"
        var $22=HEAP[$21]; //@line 462 "pyexpat.c"
        var $23=$self_addr_i; //@line 462 "pyexpat.c"
        var $24=$23+32; //@line 462 "pyexpat.c"
        var $25=HEAP[$24]; //@line 462 "pyexpat.c"
        var $26=$self_addr_i; //@line 462 "pyexpat.c"
        var $27=_call_character_handler($26, $25, $22); //@line 462 "pyexpat.c"
        $rc_i=$27; //@line 462 "pyexpat.c"
        var $28=$self_addr_i; //@line 463 "pyexpat.c"
        var $29=$28+40; //@line 463 "pyexpat.c"
        HEAP[$29]=0; //@line 463 "pyexpat.c"
        var $30=$rc_i; //@line 464 "pyexpat.c"
        $0=$30; //@line 464 "pyexpat.c"
        $retval_i=$30; //@line 461 "pyexpat.c"
        var $31=($30) < 0; //@line 882 "pyexpat.c"
        if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 882 "pyexpat.c"
      case 8: // $bb4
        $1=0; //@line 883 "pyexpat.c"
        __label__ = 10; break; //@line 883 "pyexpat.c"
      case 9: // $bb5
        var $32=$rv_addr; //@line 885 "pyexpat.c"
        var $33=_PyInt_FromLong($32); //@line 885 "pyexpat.c"
        $1=$33; //@line 885 "pyexpat.c"
        __label__ = 10; break; //@line 885 "pyexpat.c"
      case 10: // $bb6
        var $34=$1; //@line 877 "pyexpat.c"
        $retval=$34; //@line 877 "pyexpat.c"
        var $retval7=$retval; //@line 877 "pyexpat.c"
        ;
        return $retval7; //@line 877 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_Parse($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 12; _memset(__stackBase__, 0, 12);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $s=__stackBase__;
        var $slen=__stackBase__+4;
        var $isFinal=__stackBase__+8;
        $self_addr=$self;
        $args_addr=$args;
        HEAP[$isFinal]=0; //@line 897 "pyexpat.c"
        var $1=$args_addr; //@line 899 "pyexpat.c"
        var $2=_PyArg_ParseTuple($1, __str45, $s, $slen, $isFinal); //@line 899 "pyexpat.c"
        var $3=($2)==0; //@line 899 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 899 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 900 "pyexpat.c"
        __label__ = 3; break; //@line 900 "pyexpat.c"
      case 2: // $bb1
        var $4=HEAP[$isFinal]; //@line 902 "pyexpat.c"
        var $5=HEAP[$slen]; //@line 902 "pyexpat.c"
        var $6=HEAP[$s]; //@line 902 "pyexpat.c"
        var $7=$self_addr; //@line 902 "pyexpat.c"
        var $8=$7+8; //@line 902 "pyexpat.c"
        var $9=HEAP[$8]; //@line 902 "pyexpat.c"
        var $10=_XML_Parse($9, $6, $5, $4); //@line 902 "pyexpat.c"
        var $11=$self_addr; //@line 902 "pyexpat.c"
        var $12=_get_parse_result($11, $10); //@line 902 "pyexpat.c"
        $0=$12; //@line 902 "pyexpat.c"
        __label__ = 3; break; //@line 902 "pyexpat.c"
      case 3: // $bb2
        var $13=$0; //@line 900 "pyexpat.c"
        $retval=$13; //@line 900 "pyexpat.c"
        var $retval3=$retval; //@line 900 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval3; //@line 900 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_ParseFile($self, $f) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $buf_addr_i;
        var $buf_size_addr_i;
        var $meth_addr_i;
        var $retval_i;
        var $0;
        var $arg_i;
        var $bytes_i;
        var $str_i;
        var $len_i;
        var $self_addr;
        var $f_addr;
        var $retval;
        var $1;
        var $rv;
        var $readmethod;
        var $bytes_read;
        var $buf;
        $self_addr=$self;
        $f_addr=$f;
        $rv=1; //@line 964 "pyexpat.c"
        $readmethod=0; //@line 965 "pyexpat.c"
        var $2=$f_addr; //@line 967 "pyexpat.c"
        var $3=_PyObject_GetAttrString($2, __str48); //@line 967 "pyexpat.c"
        $readmethod=$3; //@line 967 "pyexpat.c"
        var $4=$readmethod; //@line 968 "pyexpat.c"
        var $5=($4)==0; //@line 968 "pyexpat.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 968 "pyexpat.c"
      case 1: // $bb
        var $6=HEAP[_PyExc_TypeError]; //@line 969 "pyexpat.c"
        _PyErr_SetString($6, __str49); //@line 969 "pyexpat.c"
        $1=0; //@line 971 "pyexpat.c"
        __label__ = 39; break; //@line 971 "pyexpat.c"
      case 2: // $bb1
        var $7=$self_addr; //@line 976 "pyexpat.c"
        var $8=$7+8; //@line 976 "pyexpat.c"
        var $9=HEAP[$8]; //@line 976 "pyexpat.c"
        var $10=_XML_GetBuffer($9, 2048); //@line 976 "pyexpat.c"
        $buf=$10; //@line 976 "pyexpat.c"
        var $11=($10)==0; //@line 977 "pyexpat.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 977 "pyexpat.c"
      case 3: // $bb2
        var $12=$readmethod; //@line 978 "pyexpat.c"
        var $13=($12)!=0; //@line 978 "pyexpat.c"
        if ($13) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 978 "pyexpat.c"
      case 4: // $bb3
        var $14=$readmethod; //@line 978 "pyexpat.c"
        var $15=$14; //@line 978 "pyexpat.c"
        var $16=HEAP[$15]; //@line 978 "pyexpat.c"
        var $17=($16) - 1; //@line 978 "pyexpat.c"
        var $18=$readmethod; //@line 978 "pyexpat.c"
        var $19=$18; //@line 978 "pyexpat.c"
        HEAP[$19]=$17; //@line 978 "pyexpat.c"
        var $20=$readmethod; //@line 978 "pyexpat.c"
        var $21=$20; //@line 978 "pyexpat.c"
        var $22=HEAP[$21]; //@line 978 "pyexpat.c"
        var $23=($22)==0; //@line 978 "pyexpat.c"
        if ($23) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 978 "pyexpat.c"
      case 5: // $bb4
        var $24=$readmethod; //@line 978 "pyexpat.c"
        var $25=$24+4; //@line 978 "pyexpat.c"
        var $26=HEAP[$25]; //@line 978 "pyexpat.c"
        var $27=$26+24; //@line 978 "pyexpat.c"
        var $28=HEAP[$27]; //@line 978 "pyexpat.c"
        var $29=$readmethod; //@line 978 "pyexpat.c"
        FUNCTION_TABLE[$28]($29); //@line 978 "pyexpat.c"
        __label__ = 6; break; //@line 978 "pyexpat.c"
      case 6: // $bb5
        var $30=_PyErr_NoMemory(); //@line 979 "pyexpat.c"
        $1=$30; //@line 979 "pyexpat.c"
        __label__ = 39; break; //@line 979 "pyexpat.c"
      case 7: // $bb6
        var $31=$buf; //@line 982 "pyexpat.c"
        var $32=$readmethod; //@line 982 "pyexpat.c"
        $buf_addr_i=$31;
        $buf_size_addr_i=2048;
        $meth_addr_i=$32;
        $arg_i=0; //@line 912 "pyexpat.c"
        $bytes_i=0; //@line 913 "pyexpat.c"
        $str_i=0; //@line 914 "pyexpat.c"
        $len_i=-1; //@line 915 "pyexpat.c"
        var $33=$buf_size_addr_i; //@line 917 "pyexpat.c"
        var $34=_PyInt_FromLong($33); //@line 917 "pyexpat.c"
        $bytes_i=$34; //@line 917 "pyexpat.c"
        var $35=$bytes_i; //@line 917 "pyexpat.c"
        var $36=($35)==0; //@line 917 "pyexpat.c"
        if ($36) { __label__ = 17; break; } else { __label__ = 8; break; } //@line 917 "pyexpat.c"
      case 8: // $bb_i
        var $37=_PyTuple_New(1); //@line 920 "pyexpat.c"
        $arg_i=$37; //@line 920 "pyexpat.c"
        var $38=$arg_i; //@line 920 "pyexpat.c"
        var $39=($38)==0; //@line 920 "pyexpat.c"
        if ($39) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 920 "pyexpat.c"
      case 9: // $bb1_i
        var $40=$bytes_i; //@line 921 "pyexpat.c"
        var $41=$40; //@line 921 "pyexpat.c"
        var $42=HEAP[$41]; //@line 921 "pyexpat.c"
        var $43=($42) - 1; //@line 921 "pyexpat.c"
        var $44=$bytes_i; //@line 921 "pyexpat.c"
        var $45=$44; //@line 921 "pyexpat.c"
        HEAP[$45]=$43; //@line 921 "pyexpat.c"
        var $46=$bytes_i; //@line 921 "pyexpat.c"
        var $47=$46; //@line 921 "pyexpat.c"
        var $48=HEAP[$47]; //@line 921 "pyexpat.c"
        var $49=($48)==0; //@line 921 "pyexpat.c"
        if ($49) { __label__ = 10; break; } else { __label__ = 17; break; } //@line 921 "pyexpat.c"
      case 10: // $bb2_i
        var $50=$bytes_i; //@line 921 "pyexpat.c"
        var $51=$50+4; //@line 921 "pyexpat.c"
        var $52=HEAP[$51]; //@line 921 "pyexpat.c"
        var $53=$52+24; //@line 921 "pyexpat.c"
        var $54=HEAP[$53]; //@line 921 "pyexpat.c"
        var $55=$bytes_i; //@line 921 "pyexpat.c"
        FUNCTION_TABLE[$54]($55); //@line 921 "pyexpat.c"
        __label__ = 17; break; //@line 921 "pyexpat.c"
      case 11: // $bb4_i
        var $56=$arg_i; //@line 925 "pyexpat.c"
        var $57=$56; //@line 925 "pyexpat.c"
        var $58=$57+12; //@line 925 "pyexpat.c"
        var $59=$58; //@line 925 "pyexpat.c"
        var $60=$bytes_i; //@line 925 "pyexpat.c"
        HEAP[$59]=$60; //@line 925 "pyexpat.c"
        var $61=$meth_addr_i; //@line 930 "pyexpat.c"
        var $62=$arg_i; //@line 930 "pyexpat.c"
        var $63=_PyObject_Call($61, $62, 0); //@line 930 "pyexpat.c"
        $str_i=$63; //@line 930 "pyexpat.c"
        var $64=$str_i; //@line 932 "pyexpat.c"
        var $65=($64)==0; //@line 932 "pyexpat.c"
        if ($65) { __label__ = 17; break; } else { __label__ = 12; break; } //@line 932 "pyexpat.c"
      case 12: // $bb5_i
        var $66=$str_i; //@line 936 "pyexpat.c"
        var $67=$66+4; //@line 936 "pyexpat.c"
        var $68=HEAP[$67]; //@line 936 "pyexpat.c"
        var $69=$68+84; //@line 936 "pyexpat.c"
        var $70=HEAP[$69]; //@line 936 "pyexpat.c"
        var $71=($70) & 134217728; //@line 936 "pyexpat.c"
        var $72=($71)==0; //@line 936 "pyexpat.c"
        var $73=$str_i; //@line 937 "pyexpat.c"
        if ($72) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 936 "pyexpat.c"
      case 13: // $bb6_i
        var $74=$73+4; //@line 937 "pyexpat.c"
        var $75=HEAP[$74]; //@line 937 "pyexpat.c"
        var $76=$75+12; //@line 937 "pyexpat.c"
        var $77=HEAP[$76]; //@line 937 "pyexpat.c"
        var $78=HEAP[_PyExc_TypeError]; //@line 937 "pyexpat.c"
        var $79=_PyErr_Format($78, __str46, $77); //@line 937 "pyexpat.c"
        __label__ = 17; break; //@line 937 "pyexpat.c"
      case 14: // $bb7_i
        var $80=$73; //@line 942 "pyexpat.c"
        var $81=$80+8; //@line 942 "pyexpat.c"
        var $82=HEAP[$81]; //@line 942 "pyexpat.c"
        $len_i=$82; //@line 942 "pyexpat.c"
        var $83=$len_i; //@line 943 "pyexpat.c"
        var $84=$buf_size_addr_i; //@line 943 "pyexpat.c"
        var $85=($83) > ($84); //@line 943 "pyexpat.c"
        if ($85) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 943 "pyexpat.c"
      case 15: // $bb8_i
        var $86=HEAP[_PyExc_ValueError]; //@line 944 "pyexpat.c"
        var $87=$buf_size_addr_i; //@line 944 "pyexpat.c"
        var $88=$len_i; //@line 944 "pyexpat.c"
        var $89=_PyErr_Format($86, __str47, $87, $88); //@line 944 "pyexpat.c"
        __label__ = 17; break; //@line 944 "pyexpat.c"
      case 16: // $bb9_i
        var $90=$len_i; //@line 950 "pyexpat.c"
        var $91=$str_i; //@line 950 "pyexpat.c"
        var $92=_PyString_AsString($91); //@line 950 "pyexpat.c"
        var $93=$buf_addr_i; //@line 950 "pyexpat.c"
        _llvm_memcpy_p0i8_p0i8_i32($93, $92, $90, 1, 0); //@line 950 "pyexpat.c"
        __label__ = 17; break; //@line 951 "pyexpat.c"
      case 17: // $finally_i
        var $94=$arg_i; //@line 952 "pyexpat.c"
        var $95=($94)!=0; //@line 952 "pyexpat.c"
        if ($95) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 952 "pyexpat.c"
      case 18: // $bb10_i
        var $96=$arg_i; //@line 952 "pyexpat.c"
        var $97=$96; //@line 952 "pyexpat.c"
        var $98=HEAP[$97]; //@line 952 "pyexpat.c"
        var $99=($98) - 1; //@line 952 "pyexpat.c"
        var $100=$arg_i; //@line 952 "pyexpat.c"
        var $101=$100; //@line 952 "pyexpat.c"
        HEAP[$101]=$99; //@line 952 "pyexpat.c"
        var $102=$arg_i; //@line 952 "pyexpat.c"
        var $103=$102; //@line 952 "pyexpat.c"
        var $104=HEAP[$103]; //@line 952 "pyexpat.c"
        var $105=($104)==0; //@line 952 "pyexpat.c"
        if ($105) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 952 "pyexpat.c"
      case 19: // $bb11_i
        var $106=$arg_i; //@line 952 "pyexpat.c"
        var $107=$106+4; //@line 952 "pyexpat.c"
        var $108=HEAP[$107]; //@line 952 "pyexpat.c"
        var $109=$108+24; //@line 952 "pyexpat.c"
        var $110=HEAP[$109]; //@line 952 "pyexpat.c"
        var $111=$arg_i; //@line 952 "pyexpat.c"
        FUNCTION_TABLE[$110]($111); //@line 952 "pyexpat.c"
        __label__ = 20; break; //@line 952 "pyexpat.c"
      case 20: // $bb12_i
        var $112=$str_i; //@line 953 "pyexpat.c"
        var $113=($112)!=0; //@line 953 "pyexpat.c"
        if ($113) { __label__ = 21; break; } else { __label__ = 23; break; } //@line 953 "pyexpat.c"
      case 21: // $bb13_i
        var $114=$str_i; //@line 953 "pyexpat.c"
        var $115=$114; //@line 953 "pyexpat.c"
        var $116=HEAP[$115]; //@line 953 "pyexpat.c"
        var $117=($116) - 1; //@line 953 "pyexpat.c"
        var $118=$str_i; //@line 953 "pyexpat.c"
        var $119=$118; //@line 953 "pyexpat.c"
        HEAP[$119]=$117; //@line 953 "pyexpat.c"
        var $120=$str_i; //@line 953 "pyexpat.c"
        var $121=$120; //@line 953 "pyexpat.c"
        var $122=HEAP[$121]; //@line 953 "pyexpat.c"
        var $123=($122)==0; //@line 953 "pyexpat.c"
        if ($123) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 953 "pyexpat.c"
      case 22: // $bb14_i
        var $124=$str_i; //@line 953 "pyexpat.c"
        var $125=$124+4; //@line 953 "pyexpat.c"
        var $126=HEAP[$125]; //@line 953 "pyexpat.c"
        var $127=$126+24; //@line 953 "pyexpat.c"
        var $128=HEAP[$127]; //@line 953 "pyexpat.c"
        var $129=$str_i; //@line 953 "pyexpat.c"
        FUNCTION_TABLE[$128]($129); //@line 953 "pyexpat.c"
        __label__ = 23; break; //@line 953 "pyexpat.c"
      case 23: // $readinst_exit
        var $130=$len_i; //@line 954 "pyexpat.c"
        $0=$130; //@line 954 "pyexpat.c"
        $retval_i=$130; //@line 954 "pyexpat.c"
        $bytes_read=$130; //@line 982 "pyexpat.c"
        var $131=($130) < 0; //@line 983 "pyexpat.c"
        if ($131) { __label__ = 24; break; } else { __label__ = 28; break; } //@line 983 "pyexpat.c"
      case 24: // $bb7
        var $132=$readmethod; //@line 984 "pyexpat.c"
        var $133=($132)!=0; //@line 984 "pyexpat.c"
        if ($133) { __label__ = 25; break; } else { __label__ = 27; break; } //@line 984 "pyexpat.c"
      case 25: // $bb8
        var $134=$readmethod; //@line 984 "pyexpat.c"
        var $135=$134; //@line 984 "pyexpat.c"
        var $136=HEAP[$135]; //@line 984 "pyexpat.c"
        var $137=($136) - 1; //@line 984 "pyexpat.c"
        var $138=$readmethod; //@line 984 "pyexpat.c"
        var $139=$138; //@line 984 "pyexpat.c"
        HEAP[$139]=$137; //@line 984 "pyexpat.c"
        var $140=$readmethod; //@line 984 "pyexpat.c"
        var $141=$140; //@line 984 "pyexpat.c"
        var $142=HEAP[$141]; //@line 984 "pyexpat.c"
        var $143=($142)==0; //@line 984 "pyexpat.c"
        if ($143) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 984 "pyexpat.c"
      case 26: // $bb9
        var $144=$readmethod; //@line 984 "pyexpat.c"
        var $145=$144+4; //@line 984 "pyexpat.c"
        var $146=HEAP[$145]; //@line 984 "pyexpat.c"
        var $147=$146+24; //@line 984 "pyexpat.c"
        var $148=HEAP[$147]; //@line 984 "pyexpat.c"
        var $149=$readmethod; //@line 984 "pyexpat.c"
        FUNCTION_TABLE[$148]($149); //@line 984 "pyexpat.c"
        __label__ = 27; break; //@line 984 "pyexpat.c"
      case 27: // $bb10
        $1=0; //@line 985 "pyexpat.c"
        __label__ = 39; break; //@line 985 "pyexpat.c"
      case 28: // $bb11
        var $150=$bytes_read; //@line 988 "pyexpat.c"
        var $151=($150)==0; //@line 988 "pyexpat.c"
        var $152=($151); //@line 988 "pyexpat.c"
        var $153=$self_addr; //@line 988 "pyexpat.c"
        var $154=$153+8; //@line 988 "pyexpat.c"
        var $155=HEAP[$154]; //@line 988 "pyexpat.c"
        var $156=$bytes_read; //@line 988 "pyexpat.c"
        var $157=_XML_ParseBuffer($155, $156, $152); //@line 988 "pyexpat.c"
        $rv=$157; //@line 988 "pyexpat.c"
        var $158=_PyErr_Occurred(); //@line 989 "pyexpat.c"
        var $159=($158)!=0; //@line 989 "pyexpat.c"
        if ($159) { __label__ = 29; break; } else { __label__ = 33; break; } //@line 989 "pyexpat.c"
      case 29: // $bb12
        var $160=$readmethod; //@line 990 "pyexpat.c"
        var $161=($160)!=0; //@line 990 "pyexpat.c"
        if ($161) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 990 "pyexpat.c"
      case 30: // $bb13
        var $162=$readmethod; //@line 990 "pyexpat.c"
        var $163=$162; //@line 990 "pyexpat.c"
        var $164=HEAP[$163]; //@line 990 "pyexpat.c"
        var $165=($164) - 1; //@line 990 "pyexpat.c"
        var $166=$readmethod; //@line 990 "pyexpat.c"
        var $167=$166; //@line 990 "pyexpat.c"
        HEAP[$167]=$165; //@line 990 "pyexpat.c"
        var $168=$readmethod; //@line 990 "pyexpat.c"
        var $169=$168; //@line 990 "pyexpat.c"
        var $170=HEAP[$169]; //@line 990 "pyexpat.c"
        var $171=($170)==0; //@line 990 "pyexpat.c"
        if ($171) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 990 "pyexpat.c"
      case 31: // $bb14
        var $172=$readmethod; //@line 990 "pyexpat.c"
        var $173=$172+4; //@line 990 "pyexpat.c"
        var $174=HEAP[$173]; //@line 990 "pyexpat.c"
        var $175=$174+24; //@line 990 "pyexpat.c"
        var $176=HEAP[$175]; //@line 990 "pyexpat.c"
        var $177=$readmethod; //@line 990 "pyexpat.c"
        FUNCTION_TABLE[$176]($177); //@line 990 "pyexpat.c"
        __label__ = 32; break; //@line 990 "pyexpat.c"
      case 32: // $bb15
        $1=0; //@line 991 "pyexpat.c"
        __label__ = 39; break; //@line 991 "pyexpat.c"
      case 33: // $bb16
        var $178=$rv; //@line 994 "pyexpat.c"
        var $179=($178)==0; //@line 994 "pyexpat.c"
        if ($179) { __label__ = 35; break; } else { __label__ = 34; break; } //@line 994 "pyexpat.c"
      case 34: // $bb17
        var $180=$bytes_read; //@line 994 "pyexpat.c"
        var $181=($180)==0; //@line 994 "pyexpat.c"
        if ($181) { __label__ = 35; break; } else { __label__ = 2; break; } //@line 994 "pyexpat.c"
      case 35: // $bb19
        var $182=$readmethod; //@line 997 "pyexpat.c"
        var $183=($182)!=0; //@line 997 "pyexpat.c"
        if ($183) { __label__ = 36; break; } else { __label__ = 38; break; } //@line 997 "pyexpat.c"
      case 36: // $bb20
        var $184=$readmethod; //@line 997 "pyexpat.c"
        var $185=$184; //@line 997 "pyexpat.c"
        var $186=HEAP[$185]; //@line 997 "pyexpat.c"
        var $187=($186) - 1; //@line 997 "pyexpat.c"
        var $188=$readmethod; //@line 997 "pyexpat.c"
        var $189=$188; //@line 997 "pyexpat.c"
        HEAP[$189]=$187; //@line 997 "pyexpat.c"
        var $190=$readmethod; //@line 997 "pyexpat.c"
        var $191=$190; //@line 997 "pyexpat.c"
        var $192=HEAP[$191]; //@line 997 "pyexpat.c"
        var $193=($192)==0; //@line 997 "pyexpat.c"
        if ($193) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 997 "pyexpat.c"
      case 37: // $bb21
        var $194=$readmethod; //@line 997 "pyexpat.c"
        var $195=$194+4; //@line 997 "pyexpat.c"
        var $196=HEAP[$195]; //@line 997 "pyexpat.c"
        var $197=$196+24; //@line 997 "pyexpat.c"
        var $198=HEAP[$197]; //@line 997 "pyexpat.c"
        var $199=$readmethod; //@line 997 "pyexpat.c"
        FUNCTION_TABLE[$198]($199); //@line 997 "pyexpat.c"
        __label__ = 38; break; //@line 997 "pyexpat.c"
      case 38: // $bb22
        var $200=$self_addr; //@line 998 "pyexpat.c"
        var $201=$rv; //@line 998 "pyexpat.c"
        var $202=_get_parse_result($200, $201); //@line 998 "pyexpat.c"
        $1=$202; //@line 998 "pyexpat.c"
        __label__ = 39; break; //@line 998 "pyexpat.c"
      case 39: // $bb23
        var $203=$1; //@line 971 "pyexpat.c"
        $retval=$203; //@line 971 "pyexpat.c"
        var $retval24=$retval; //@line 971 "pyexpat.c"
        ;
        return $retval24; //@line 971 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_SetBase($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $base=__stackBase__;
        $self_addr=$self;
        $args_addr=$args;
        var $1=$args_addr; //@line 1010 "pyexpat.c"
        var $2=_PyArg_ParseTuple($1, __str50, $base); //@line 1010 "pyexpat.c"
        var $3=($2)==0; //@line 1010 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1010 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 1011 "pyexpat.c"
        __label__ = 5; break; //@line 1011 "pyexpat.c"
      case 2: // $bb1
        var $4=HEAP[$base]; //@line 1012 "pyexpat.c"
        var $5=$self_addr; //@line 1012 "pyexpat.c"
        var $6=$5+8; //@line 1012 "pyexpat.c"
        var $7=HEAP[$6]; //@line 1012 "pyexpat.c"
        var $8=_XML_SetBase($7, $4); //@line 1012 "pyexpat.c"
        var $9=($8)==0; //@line 1012 "pyexpat.c"
        if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1012 "pyexpat.c"
      case 3: // $bb2
        var $10=_PyErr_NoMemory(); //@line 1013 "pyexpat.c"
        $0=$10; //@line 1013 "pyexpat.c"
        __label__ = 5; break; //@line 1013 "pyexpat.c"
      case 4: // $bb3
        var $11=HEAP[__Py_NoneStruct]; //@line 1015 "pyexpat.c"
        var $12=($11) + 1; //@line 1015 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$12; //@line 1015 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 1016 "pyexpat.c"
        __label__ = 5; break; //@line 1016 "pyexpat.c"
      case 5: // $bb4
        var $13=$0; //@line 1011 "pyexpat.c"
        $retval=$13; //@line 1011 "pyexpat.c"
        var $retval5=$retval; //@line 1011 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval5; //@line 1011 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_GetBase($self, $unused) {
    ;
    var __label__;
  
    var $self_addr;
    var $unused_addr;
    var $retval;
    var $0;
    $self_addr=$self;
    $unused_addr=$unused;
    var $1=$self_addr; //@line 1026 "pyexpat.c"
    var $2=$1+8; //@line 1026 "pyexpat.c"
    var $3=HEAP[$2]; //@line 1026 "pyexpat.c"
    var $4=_XML_GetBase($3); //@line 1026 "pyexpat.c"
    var $5=_Py_BuildValue(__str51, $4); //@line 1026 "pyexpat.c"
    $0=$5; //@line 1026 "pyexpat.c"
    var $6=$0; //@line 1026 "pyexpat.c"
    $retval=$6; //@line 1026 "pyexpat.c"
    var $retval1=$retval; //@line 1026 "pyexpat.c"
    ;
    return $retval1; //@line 1026 "pyexpat.c"
  }
  

  function _xmlparse_GetInputContext($self, $unused) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $unused_addr;
        var $retval;
        var $0;
        var $offset=__stackBase__;
        var $size=__stackBase__+4;
        var $buffer;
        $self_addr=$self;
        $unused_addr=$unused;
        var $1=$self_addr; //@line 1038 "pyexpat.c"
        var $2=$1+24; //@line 1038 "pyexpat.c"
        var $3=HEAP[$2]; //@line 1038 "pyexpat.c"
        var $4=($3)!=0; //@line 1038 "pyexpat.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 1038 "pyexpat.c"
      case 1: // $bb
        var $5=$self_addr; //@line 1041 "pyexpat.c"
        var $6=$5+8; //@line 1041 "pyexpat.c"
        var $7=HEAP[$6]; //@line 1041 "pyexpat.c"
        var $8=_XML_GetInputContext($7, $offset, $size); //@line 1041 "pyexpat.c"
        $buffer=$8; //@line 1041 "pyexpat.c"
        var $9=$buffer; //@line 1043 "pyexpat.c"
        var $10=($9)!=0; //@line 1043 "pyexpat.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1043 "pyexpat.c"
      case 2: // $bb1
        var $11=HEAP[$size]; //@line 1044 "pyexpat.c"
        var $12=HEAP[$offset]; //@line 1044 "pyexpat.c"
        var $13=($11) - ($12); //@line 1044 "pyexpat.c"
        var $14=HEAP[$offset]; //@line 1044 "pyexpat.c"
        var $15=$buffer; //@line 1044 "pyexpat.c"
        var $16=$15+$14; //@line 1044 "pyexpat.c"
        var $17=_PyString_FromStringAndSize($16, $13); //@line 1044 "pyexpat.c"
        $0=$17; //@line 1044 "pyexpat.c"
        __label__ = 5; break; //@line 1044 "pyexpat.c"
      case 3: // $bb2
        var $18=HEAP[__Py_NoneStruct]; //@line 1047 "pyexpat.c"
        var $19=($18) + 1; //@line 1047 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$19; //@line 1047 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 1047 "pyexpat.c"
        __label__ = 5; break; //@line 1047 "pyexpat.c"
      case 4: // $bb3
        var $20=HEAP[__Py_NoneStruct]; //@line 1050 "pyexpat.c"
        var $21=($20) + 1; //@line 1050 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$21; //@line 1050 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 1050 "pyexpat.c"
        __label__ = 5; break; //@line 1050 "pyexpat.c"
      case 5: // $bb4
        var $22=$0; //@line 1044 "pyexpat.c"
        $retval=$22; //@line 1044 "pyexpat.c"
        var $retval5=$retval; //@line 1044 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval5; //@line 1044 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_ExternalEntityParserCreate($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $context=__stackBase__;
        var $encoding=__stackBase__+4;
        var $new_parser;
        var $i;
        var $handler;
        $self_addr=$self;
        $args_addr=$args;
        HEAP[$encoding]=0; //@line 1062 "pyexpat.c"
        var $1=$args_addr; //@line 1066 "pyexpat.c"
        var $2=_PyArg_ParseTuple($1, __str52, $context, $encoding); //@line 1066 "pyexpat.c"
        var $3=($2)==0; //@line 1066 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1066 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 1068 "pyexpat.c"
        __label__ = 25; break; //@line 1068 "pyexpat.c"
      case 2: // $bb1
        var $4=__PyObject_GC_New(_Xmlparsetype); //@line 1076 "pyexpat.c"
        var $5=$4; //@line 1076 "pyexpat.c"
        $new_parser=$5; //@line 1076 "pyexpat.c"
        var $6=$new_parser; //@line 1079 "pyexpat.c"
        var $7=($6)==0; //@line 1079 "pyexpat.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1079 "pyexpat.c"
      case 3: // $bb2
        $0=0; //@line 1080 "pyexpat.c"
        __label__ = 25; break; //@line 1080 "pyexpat.c"
      case 4: // $bb3
        var $8=$self_addr; //@line 1081 "pyexpat.c"
        var $9=$8+36; //@line 1081 "pyexpat.c"
        var $10=HEAP[$9]; //@line 1081 "pyexpat.c"
        var $11=$new_parser; //@line 1081 "pyexpat.c"
        var $12=$11+36; //@line 1081 "pyexpat.c"
        HEAP[$12]=$10; //@line 1081 "pyexpat.c"
        var $13=$new_parser; //@line 1082 "pyexpat.c"
        var $14=$13+40; //@line 1082 "pyexpat.c"
        HEAP[$14]=0; //@line 1082 "pyexpat.c"
        var $15=$self_addr; //@line 1083 "pyexpat.c"
        var $16=$15+32; //@line 1083 "pyexpat.c"
        var $17=HEAP[$16]; //@line 1083 "pyexpat.c"
        var $18=($17)!=0; //@line 1083 "pyexpat.c"
        var $19=$new_parser; //@line 1084 "pyexpat.c"
        if ($18) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 1083 "pyexpat.c"
      case 5: // $bb4
        var $20=$19+36; //@line 1084 "pyexpat.c"
        var $21=HEAP[$20]; //@line 1084 "pyexpat.c"
        var $22=_malloc($21); //@line 1084 "pyexpat.c"
        var $23=$new_parser; //@line 1084 "pyexpat.c"
        var $24=$23+32; //@line 1084 "pyexpat.c"
        HEAP[$24]=$22; //@line 1084 "pyexpat.c"
        var $25=$new_parser; //@line 1085 "pyexpat.c"
        var $26=$25+32; //@line 1085 "pyexpat.c"
        var $27=HEAP[$26]; //@line 1085 "pyexpat.c"
        var $28=($27)==0; //@line 1085 "pyexpat.c"
        if ($28) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 1085 "pyexpat.c"
      case 6: // $bb5
        var $29=$new_parser; //@line 1091 "pyexpat.c"
        var $30=$29; //@line 1091 "pyexpat.c"
        _PyObject_GC_Del($30); //@line 1091 "pyexpat.c"
        var $31=_PyErr_NoMemory(); //@line 1093 "pyexpat.c"
        $0=$31; //@line 1093 "pyexpat.c"
        __label__ = 25; break; //@line 1093 "pyexpat.c"
      case 7: // $bb7
        var $32=$19+32; //@line 1097 "pyexpat.c"
        HEAP[$32]=0; //@line 1097 "pyexpat.c"
        __label__ = 8; break; //@line 1097 "pyexpat.c"
      case 8: // $bb8
        var $33=$self_addr; //@line 1098 "pyexpat.c"
        var $34=$33+12; //@line 1098 "pyexpat.c"
        var $35=HEAP[$34]; //@line 1098 "pyexpat.c"
        var $36=$new_parser; //@line 1098 "pyexpat.c"
        var $37=$36+12; //@line 1098 "pyexpat.c"
        HEAP[$37]=$35; //@line 1098 "pyexpat.c"
        var $38=$self_addr; //@line 1099 "pyexpat.c"
        var $39=$38+16; //@line 1099 "pyexpat.c"
        var $40=HEAP[$39]; //@line 1099 "pyexpat.c"
        var $41=$new_parser; //@line 1099 "pyexpat.c"
        var $42=$41+16; //@line 1099 "pyexpat.c"
        HEAP[$42]=$40; //@line 1099 "pyexpat.c"
        var $43=$self_addr; //@line 1100 "pyexpat.c"
        var $44=$43+20; //@line 1100 "pyexpat.c"
        var $45=HEAP[$44]; //@line 1100 "pyexpat.c"
        var $46=$new_parser; //@line 1100 "pyexpat.c"
        var $47=$46+20; //@line 1100 "pyexpat.c"
        HEAP[$47]=$45; //@line 1100 "pyexpat.c"
        var $48=$new_parser; //@line 1101 "pyexpat.c"
        var $49=$48+24; //@line 1101 "pyexpat.c"
        HEAP[$49]=0; //@line 1101 "pyexpat.c"
        var $50=$self_addr; //@line 1102 "pyexpat.c"
        var $51=$50+28; //@line 1102 "pyexpat.c"
        var $52=HEAP[$51]; //@line 1102 "pyexpat.c"
        var $53=$new_parser; //@line 1102 "pyexpat.c"
        var $54=$53+28; //@line 1102 "pyexpat.c"
        HEAP[$54]=$52; //@line 1102 "pyexpat.c"
        var $55=HEAP[$encoding]; //@line 1103 "pyexpat.c"
        var $56=HEAP[$context]; //@line 1103 "pyexpat.c"
        var $57=$self_addr; //@line 1103 "pyexpat.c"
        var $58=$57+8; //@line 1103 "pyexpat.c"
        var $59=HEAP[$58]; //@line 1103 "pyexpat.c"
        var $60=_XML_ExternalEntityParserCreate($59, $56, $55); //@line 1103 "pyexpat.c"
        var $61=$new_parser; //@line 1103 "pyexpat.c"
        var $62=$61+8; //@line 1103 "pyexpat.c"
        HEAP[$62]=$60; //@line 1103 "pyexpat.c"
        var $63=$new_parser; //@line 1105 "pyexpat.c"
        var $64=$63+48; //@line 1105 "pyexpat.c"
        HEAP[$64]=0; //@line 1105 "pyexpat.c"
        var $65=$self_addr; //@line 1106 "pyexpat.c"
        var $66=$65+44; //@line 1106 "pyexpat.c"
        var $67=HEAP[$66]; //@line 1106 "pyexpat.c"
        var $68=$new_parser; //@line 1106 "pyexpat.c"
        var $69=$68+44; //@line 1106 "pyexpat.c"
        HEAP[$69]=$67; //@line 1106 "pyexpat.c"
        var $70=$new_parser; //@line 1107 "pyexpat.c"
        var $71=$70+44; //@line 1107 "pyexpat.c"
        var $72=HEAP[$71]; //@line 1107 "pyexpat.c"
        var $73=($72)!=0; //@line 1107 "pyexpat.c"
        if ($73) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1107 "pyexpat.c"
      case 9: // $bb9
        var $74=$new_parser; //@line 1107 "pyexpat.c"
        var $75=$74+44; //@line 1107 "pyexpat.c"
        var $76=HEAP[$75]; //@line 1107 "pyexpat.c"
        var $77=$76; //@line 1107 "pyexpat.c"
        var $78=HEAP[$77]; //@line 1107 "pyexpat.c"
        var $79=($78) + 1; //@line 1107 "pyexpat.c"
        var $80=$76; //@line 1107 "pyexpat.c"
        HEAP[$80]=$79; //@line 1107 "pyexpat.c"
        __label__ = 10; break; //@line 1107 "pyexpat.c"
      case 10: // $bb10
        var $81=$new_parser; //@line 1109 "pyexpat.c"
        var $82=$81; //@line 1109 "pyexpat.c"
        _PyObject_GC_Track($82); //@line 1109 "pyexpat.c"
        var $83=$new_parser; //@line 1114 "pyexpat.c"
        var $84=$83+8; //@line 1114 "pyexpat.c"
        var $85=HEAP[$84]; //@line 1114 "pyexpat.c"
        var $86=($85)==0; //@line 1114 "pyexpat.c"
        var $87=$new_parser; //@line 1115 "pyexpat.c"
        if ($86) { __label__ = 11; break; } else { __label__ = 14; break; } //@line 1114 "pyexpat.c"
      case 11: // $bb11
        var $88=$87; //@line 1115 "pyexpat.c"
        var $89=$88; //@line 1115 "pyexpat.c"
        var $90=HEAP[$89]; //@line 1115 "pyexpat.c"
        var $91=($90) - 1; //@line 1115 "pyexpat.c"
        var $92=$88; //@line 1115 "pyexpat.c"
        HEAP[$92]=$91; //@line 1115 "pyexpat.c"
        var $93=$88; //@line 1115 "pyexpat.c"
        var $94=HEAP[$93]; //@line 1115 "pyexpat.c"
        var $95=($94)==0; //@line 1115 "pyexpat.c"
        if ($95) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1115 "pyexpat.c"
      case 12: // $bb12
        var $96=$new_parser; //@line 1115 "pyexpat.c"
        var $97=$96; //@line 1115 "pyexpat.c"
        var $98=$97+4; //@line 1115 "pyexpat.c"
        var $99=HEAP[$98]; //@line 1115 "pyexpat.c"
        var $100=$99+24; //@line 1115 "pyexpat.c"
        var $101=HEAP[$100]; //@line 1115 "pyexpat.c"
        var $102=$new_parser; //@line 1115 "pyexpat.c"
        var $103=$102; //@line 1115 "pyexpat.c"
        FUNCTION_TABLE[$101]($103); //@line 1115 "pyexpat.c"
        __label__ = 13; break; //@line 1115 "pyexpat.c"
      case 13: // $bb13
        var $104=_PyErr_NoMemory(); //@line 1116 "pyexpat.c"
        $0=$104; //@line 1116 "pyexpat.c"
        __label__ = 25; break; //@line 1116 "pyexpat.c"
      case 14: // $bb14
        var $105=$87+8; //@line 1119 "pyexpat.c"
        var $106=HEAP[$105]; //@line 1119 "pyexpat.c"
        var $107=$new_parser; //@line 1119 "pyexpat.c"
        var $108=$107; //@line 1119 "pyexpat.c"
        _XML_SetUserData($106, $108); //@line 1119 "pyexpat.c"
        $i=0; //@line 1122 "pyexpat.c"
        var $109=$i; //@line 1122 "pyexpat.c"
        var $110=_handler_info+$109*20; //@line 1122 "pyexpat.c"
        var $111=$110; //@line 1122 "pyexpat.c"
        var $112=HEAP[$111]; //@line 1122 "pyexpat.c"
        var $113=($112)!=0; //@line 1122 "pyexpat.c"
        var $114=$i; //@line 1122 "pyexpat.c"
        if ($113) { __lastLabel__ = 14; __label__ = 15; break; } else { __lastLabel__ = 14; __label__ = 16; break; } //@line 1122 "pyexpat.c"
      case 15: // $bb15
        var $115=__lastLabel__ == 15 ? $122 : ($114);
        var $116=($115) + 1; //@line 1122 "pyexpat.c"
        $i=$116; //@line 1122 "pyexpat.c"
        var $117=$i; //@line 1122 "pyexpat.c"
        var $118=_handler_info+$117*20; //@line 1122 "pyexpat.c"
        var $119=$118; //@line 1122 "pyexpat.c"
        var $120=HEAP[$119]; //@line 1122 "pyexpat.c"
        var $121=($120)!=0; //@line 1122 "pyexpat.c"
        var $122=$i; //@line 1122 "pyexpat.c"
        if ($121) { __lastLabel__ = 15; __label__ = 15; break; } else { __lastLabel__ = 15; __label__ = 16; break; } //@line 1122 "pyexpat.c"
      case 16: // $bb17
        var $_lcssa=__lastLabel__ == 14 ? $114 : ($122);
        var $123=($_lcssa) * 4; //@line 1125 "pyexpat.c"
        var $124=_malloc($123); //@line 1125 "pyexpat.c"
        var $125=$124; //@line 1125 "pyexpat.c"
        var $126=$new_parser; //@line 1125 "pyexpat.c"
        var $127=$126+48; //@line 1125 "pyexpat.c"
        HEAP[$127]=$125; //@line 1125 "pyexpat.c"
        var $128=$new_parser; //@line 1126 "pyexpat.c"
        var $129=$128+48; //@line 1126 "pyexpat.c"
        var $130=HEAP[$129]; //@line 1126 "pyexpat.c"
        var $131=($130)==0; //@line 1126 "pyexpat.c"
        var $132=$new_parser; //@line 1127 "pyexpat.c"
        if ($131) { __label__ = 17; break; } else { __label__ = 20; break; } //@line 1126 "pyexpat.c"
      case 17: // $bb18
        var $133=$132; //@line 1127 "pyexpat.c"
        var $134=$133; //@line 1127 "pyexpat.c"
        var $135=HEAP[$134]; //@line 1127 "pyexpat.c"
        var $136=($135) - 1; //@line 1127 "pyexpat.c"
        var $137=$133; //@line 1127 "pyexpat.c"
        HEAP[$137]=$136; //@line 1127 "pyexpat.c"
        var $138=$133; //@line 1127 "pyexpat.c"
        var $139=HEAP[$138]; //@line 1127 "pyexpat.c"
        var $140=($139)==0; //@line 1127 "pyexpat.c"
        if ($140) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1127 "pyexpat.c"
      case 18: // $bb19
        var $141=$new_parser; //@line 1127 "pyexpat.c"
        var $142=$141; //@line 1127 "pyexpat.c"
        var $143=$142+4; //@line 1127 "pyexpat.c"
        var $144=HEAP[$143]; //@line 1127 "pyexpat.c"
        var $145=$144+24; //@line 1127 "pyexpat.c"
        var $146=HEAP[$145]; //@line 1127 "pyexpat.c"
        var $147=$new_parser; //@line 1127 "pyexpat.c"
        var $148=$147; //@line 1127 "pyexpat.c"
        FUNCTION_TABLE[$146]($148); //@line 1127 "pyexpat.c"
        __label__ = 19; break; //@line 1127 "pyexpat.c"
      case 19: // $bb20
        var $149=_PyErr_NoMemory(); //@line 1128 "pyexpat.c"
        $0=$149; //@line 1128 "pyexpat.c"
        __label__ = 25; break; //@line 1128 "pyexpat.c"
      case 20: // $bb21
        _clear_handlers($132, 1); //@line 1130 "pyexpat.c"
        $i=0; //@line 1133 "pyexpat.c"
        var $150=$i; //@line 1133 "pyexpat.c"
        var $151=_handler_info+$150*20; //@line 1133 "pyexpat.c"
        var $152=$151; //@line 1133 "pyexpat.c"
        var $153=HEAP[$152]; //@line 1133 "pyexpat.c"
        var $154=($153)!=0; //@line 1133 "pyexpat.c"
        if ($154) { __label__ = 21; break; } else { __label__ = 24; break; } //@line 1133 "pyexpat.c"
      case 21: // $bb22
        var $155=$self_addr; //@line 1134 "pyexpat.c"
        var $156=$155+48; //@line 1134 "pyexpat.c"
        var $157=HEAP[$156]; //@line 1134 "pyexpat.c"
        var $158=$i; //@line 1134 "pyexpat.c"
        var $159=$157+4*$158; //@line 1134 "pyexpat.c"
        var $160=HEAP[$159]; //@line 1134 "pyexpat.c"
        $handler=$160; //@line 1134 "pyexpat.c"
        var $161=($160)!=0; //@line 1135 "pyexpat.c"
        if ($161) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1135 "pyexpat.c"
      case 22: // $bb23
        var $162=$handler; //@line 1136 "pyexpat.c"
        var $163=$162; //@line 1136 "pyexpat.c"
        var $164=HEAP[$163]; //@line 1136 "pyexpat.c"
        var $165=($164) + 1; //@line 1136 "pyexpat.c"
        var $166=$handler; //@line 1136 "pyexpat.c"
        var $167=$166; //@line 1136 "pyexpat.c"
        HEAP[$167]=$165; //@line 1136 "pyexpat.c"
        var $168=$new_parser; //@line 1137 "pyexpat.c"
        var $169=$168+48; //@line 1137 "pyexpat.c"
        var $170=HEAP[$169]; //@line 1137 "pyexpat.c"
        var $171=$i; //@line 1137 "pyexpat.c"
        var $172=$170+4*$171; //@line 1137 "pyexpat.c"
        var $173=$handler; //@line 1137 "pyexpat.c"
        HEAP[$172]=$173; //@line 1137 "pyexpat.c"
        var $174=$i; //@line 1138 "pyexpat.c"
        var $175=_handler_info+$174*20; //@line 1138 "pyexpat.c"
        var $176=$175+4; //@line 1138 "pyexpat.c"
        var $177=HEAP[$176]; //@line 1138 "pyexpat.c"
        var $178=$i; //@line 1138 "pyexpat.c"
        var $179=_handler_info+$178*20; //@line 1138 "pyexpat.c"
        var $180=$179+8; //@line 1138 "pyexpat.c"
        var $181=HEAP[$180]; //@line 1138 "pyexpat.c"
        var $182=$new_parser; //@line 1138 "pyexpat.c"
        var $183=$182+8; //@line 1138 "pyexpat.c"
        var $184=HEAP[$183]; //@line 1138 "pyexpat.c"
        FUNCTION_TABLE[$177]($184, $181); //@line 1138 "pyexpat.c"
        __label__ = 23; break; //@line 1138 "pyexpat.c"
      case 23: // $bb24
        var $185=$i; //@line 1133 "pyexpat.c"
        var $186=($185) + 1; //@line 1133 "pyexpat.c"
        $i=$186; //@line 1133 "pyexpat.c"
        var $187=$i; //@line 1133 "pyexpat.c"
        var $188=_handler_info+$187*20; //@line 1133 "pyexpat.c"
        var $189=$188; //@line 1133 "pyexpat.c"
        var $190=HEAP[$189]; //@line 1133 "pyexpat.c"
        var $191=($190)!=0; //@line 1133 "pyexpat.c"
        if ($191) { __label__ = 21; break; } else { __label__ = 24; break; } //@line 1133 "pyexpat.c"
      case 24: // $bb26
        var $192=$new_parser; //@line 1142 "pyexpat.c"
        var $193=$192; //@line 1142 "pyexpat.c"
        $0=$193; //@line 1142 "pyexpat.c"
        __label__ = 25; break; //@line 1142 "pyexpat.c"
      case 25: // $bb27
        var $194=$0; //@line 1068 "pyexpat.c"
        $retval=$194; //@line 1068 "pyexpat.c"
        var $retval28=$retval; //@line 1068 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval28; //@line 1068 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_SetParamEntityParsing($p, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $p_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $flag=__stackBase__;
        $p_addr=$p;
        $args_addr=$args;
        var $1=$args_addr; //@line 1157 "pyexpat.c"
        var $2=_PyArg_ParseTuple($1, __str53, $flag); //@line 1157 "pyexpat.c"
        var $3=($2)==0; //@line 1157 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1157 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 1158 "pyexpat.c"
        __label__ = 3; break; //@line 1158 "pyexpat.c"
      case 2: // $bb1
        var $4=HEAP[$flag]; //@line 1159 "pyexpat.c"
        var $5=$p_addr; //@line 1159 "pyexpat.c"
        var $6=$5+8; //@line 1159 "pyexpat.c"
        var $7=HEAP[$6]; //@line 1159 "pyexpat.c"
        var $8=_XML_SetParamEntityParsing($7, $4); //@line 1159 "pyexpat.c"
        HEAP[$flag]=$8; //@line 1159 "pyexpat.c"
        var $9=HEAP[$flag]; //@line 1160 "pyexpat.c"
        var $10=_PyInt_FromLong($9); //@line 1160 "pyexpat.c"
        $0=$10; //@line 1160 "pyexpat.c"
        __label__ = 3; break; //@line 1160 "pyexpat.c"
      case 3: // $bb2
        var $11=$0; //@line 1158 "pyexpat.c"
        $retval=$11; //@line 1158 "pyexpat.c"
        var $retval3=$retval; //@line 1158 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval3; //@line 1158 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_UseForeignDTD($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $flagobj=__stackBase__;
        var $flag;
        var $rc;
        $self_addr=$self;
        $args_addr=$args;
        HEAP[$flagobj]=0; //@line 1176 "pyexpat.c"
        $flag=1; //@line 1177 "pyexpat.c"
        var $1=$args_addr; //@line 1179 "pyexpat.c"
        var $2=_PyArg_UnpackTuple($1, __str54, 0, 1, $flagobj); //@line 1179 "pyexpat.c"
        var $3=($2)==0; //@line 1179 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1179 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 1180 "pyexpat.c"
        __label__ = 7; break; //@line 1180 "pyexpat.c"
      case 2: // $bb1
        var $4=HEAP[$flagobj]; //@line 1181 "pyexpat.c"
        var $5=($4)!=0; //@line 1181 "pyexpat.c"
        if ($5) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1181 "pyexpat.c"
      case 3: // $bb2
        var $6=HEAP[$flagobj]; //@line 1182 "pyexpat.c"
        var $7=_PyObject_IsTrue($6); //@line 1182 "pyexpat.c"
        var $8=($7)!=0; //@line 1182 "pyexpat.c"
        var $9=($8); //@line 1182 "pyexpat.c"
        $flag=$9; //@line 1182 "pyexpat.c"
        __label__ = 4; break; //@line 1182 "pyexpat.c"
      case 4: // $bb3
        var $10=$flag; //@line 1183 "pyexpat.c"
        var $11=($10); //@line 1183 "pyexpat.c"
        var $12=$self_addr; //@line 1183 "pyexpat.c"
        var $13=$12+8; //@line 1183 "pyexpat.c"
        var $14=HEAP[$13]; //@line 1183 "pyexpat.c"
        var $15=((($11)) & 255); //@line 1183 "pyexpat.c"
        var $16=_XML_UseForeignDTD($14, $15); //@line 1183 "pyexpat.c"
        $rc=$16; //@line 1183 "pyexpat.c"
        var $17=($16)!=0; //@line 1184 "pyexpat.c"
        if ($17) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1184 "pyexpat.c"
      case 5: // $bb4
        var $18=$self_addr; //@line 1185 "pyexpat.c"
        var $19=$rc; //@line 1185 "pyexpat.c"
        var $20=_set_error($18, $19); //@line 1185 "pyexpat.c"
        $0=$20; //@line 1185 "pyexpat.c"
        __label__ = 7; break; //@line 1185 "pyexpat.c"
      case 6: // $bb5
        var $21=HEAP[__Py_NoneStruct]; //@line 1187 "pyexpat.c"
        var $22=($21) + 1; //@line 1187 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$22; //@line 1187 "pyexpat.c"
        $0=__Py_NoneStruct; //@line 1188 "pyexpat.c"
        __label__ = 7; break; //@line 1188 "pyexpat.c"
      case 7: // $bb6
        var $23=$0; //@line 1180 "pyexpat.c"
        $retval=$23; //@line 1180 "pyexpat.c"
        var $retval7=$retval; //@line 1180 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval7; //@line 1180 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyUnknownEncodingHandler($encodingHandlerData, $name, $info) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $encodingHandlerData_addr;
        var $name_addr;
        var $info_addr;
        var $retval;
        var $0;
        var $_u_string;
        var $result;
        var $i;
        var $c;
        $encodingHandlerData_addr=$encodingHandlerData;
        $name_addr=$name;
        $info_addr=$info;
        $_u_string=0; //@line 1241 "pyexpat.c"
        $result=0; //@line 1242 "pyexpat.c"
        var $1=$name_addr; //@line 1246 "pyexpat.c"
        var $2=_PyUnicodeUCS2_Decode(_template_buffer, 256, $1, __str62); //@line 1246 "pyexpat.c"
        var $3=$2; //@line 1246 "pyexpat.c"
        $_u_string=$3; //@line 1246 "pyexpat.c"
        var $4=$_u_string; //@line 1249 "pyexpat.c"
        var $5=($4)==0; //@line 1249 "pyexpat.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1249 "pyexpat.c"
      case 1: // $bb
        var $6=$result; //@line 1250 "pyexpat.c"
        $0=$6; //@line 1250 "pyexpat.c"
        __label__ = 10; break; //@line 1250 "pyexpat.c"
      case 2: // $bb1
        $i=0; //@line 1252 "pyexpat.c"
        __label__ = 3; break;
      case 3: // $bb2
        var $7=$_u_string; //@line 1254 "pyexpat.c"
        var $8=$7+12; //@line 1254 "pyexpat.c"
        var $9=HEAP[$8]; //@line 1254 "pyexpat.c"
        var $10=$i; //@line 1254 "pyexpat.c"
        var $11=$9+2*$10; //@line 1254 "pyexpat.c"
        var $12=HEAP[$11]; //@line 1254 "pyexpat.c"
        $c=$12; //@line 1254 "pyexpat.c"
        var $13=($12)==-3; //@line 1255 "pyexpat.c"
        var $14=$i; //@line 1256 "pyexpat.c"
        if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1255 "pyexpat.c"
      case 4: // $bb3
        var $15=$info_addr; //@line 1256 "pyexpat.c"
        var $16=$15; //@line 1256 "pyexpat.c"
        var $17=$16+$14*4; //@line 1256 "pyexpat.c"
        HEAP[$17]=-1; //@line 1256 "pyexpat.c"
        __label__ = 6; break; //@line 1256 "pyexpat.c"
      case 5: // $bb4
        var $18=$c; //@line 1258 "pyexpat.c"
        var $19=($18); //@line 1258 "pyexpat.c"
        var $20=$info_addr; //@line 1258 "pyexpat.c"
        var $21=$20; //@line 1258 "pyexpat.c"
        var $22=$21+$14*4; //@line 1258 "pyexpat.c"
        HEAP[$22]=$19; //@line 1258 "pyexpat.c"
        __label__ = 6; break; //@line 1258 "pyexpat.c"
      case 6: // $bb5
        var $23=$i; //@line 1252 "pyexpat.c"
        var $24=($23) + 1; //@line 1252 "pyexpat.c"
        $i=$24; //@line 1252 "pyexpat.c"
        var $25=($24) <= 255; //@line 1252 "pyexpat.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 1252 "pyexpat.c"
      case 7: // $bb7
        var $26=$info_addr; //@line 1260 "pyexpat.c"
        var $27=$26+1024; //@line 1260 "pyexpat.c"
        HEAP[$27]=0; //@line 1260 "pyexpat.c"
        var $28=$info_addr; //@line 1261 "pyexpat.c"
        var $29=$28+1028; //@line 1261 "pyexpat.c"
        HEAP[$29]=0; //@line 1261 "pyexpat.c"
        var $30=$info_addr; //@line 1262 "pyexpat.c"
        var $31=$30+1032; //@line 1262 "pyexpat.c"
        HEAP[$31]=0; //@line 1262 "pyexpat.c"
        $result=1; //@line 1263 "pyexpat.c"
        var $32=$_u_string; //@line 1264 "pyexpat.c"
        var $33=$32; //@line 1264 "pyexpat.c"
        var $34=$33; //@line 1264 "pyexpat.c"
        var $35=HEAP[$34]; //@line 1264 "pyexpat.c"
        var $36=($35) - 1; //@line 1264 "pyexpat.c"
        var $37=$33; //@line 1264 "pyexpat.c"
        HEAP[$37]=$36; //@line 1264 "pyexpat.c"
        var $38=$33; //@line 1264 "pyexpat.c"
        var $39=HEAP[$38]; //@line 1264 "pyexpat.c"
        var $40=($39)==0; //@line 1264 "pyexpat.c"
        if ($40) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1264 "pyexpat.c"
      case 8: // $bb8
        var $41=$_u_string; //@line 1264 "pyexpat.c"
        var $42=$41; //@line 1264 "pyexpat.c"
        var $43=$42+4; //@line 1264 "pyexpat.c"
        var $44=HEAP[$43]; //@line 1264 "pyexpat.c"
        var $45=$44+24; //@line 1264 "pyexpat.c"
        var $46=HEAP[$45]; //@line 1264 "pyexpat.c"
        var $47=$_u_string; //@line 1264 "pyexpat.c"
        var $48=$47; //@line 1264 "pyexpat.c"
        FUNCTION_TABLE[$46]($48); //@line 1264 "pyexpat.c"
        __label__ = 9; break; //@line 1264 "pyexpat.c"
      case 9: // $bb9
        var $49=$result; //@line 1265 "pyexpat.c"
        $0=$49; //@line 1265 "pyexpat.c"
        __label__ = 10; break; //@line 1265 "pyexpat.c"
      case 10: // $bb10
        var $50=$0; //@line 1250 "pyexpat.c"
        $retval=$50; //@line 1250 "pyexpat.c"
        var $retval11=$retval; //@line 1250 "pyexpat.c"
        ;
        return $retval11; //@line 1250 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_dealloc($self) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $i;
        var $temp;
        $self_addr=$self;
        var $0=$self_addr; //@line 1343 "pyexpat.c"
        var $1=$0; //@line 1343 "pyexpat.c"
        _PyObject_GC_UnTrack($1); //@line 1343 "pyexpat.c"
        var $2=$self_addr; //@line 1347 "pyexpat.c"
        var $3=$2+8; //@line 1347 "pyexpat.c"
        var $4=HEAP[$3]; //@line 1347 "pyexpat.c"
        var $5=($4)!=0; //@line 1347 "pyexpat.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1347 "pyexpat.c"
      case 1: // $bb
        var $6=$self_addr; //@line 1348 "pyexpat.c"
        var $7=$6+8; //@line 1348 "pyexpat.c"
        var $8=HEAP[$7]; //@line 1348 "pyexpat.c"
        _XML_ParserFree($8); //@line 1348 "pyexpat.c"
        __label__ = 2; break; //@line 1348 "pyexpat.c"
      case 2: // $bb1
        var $9=$self_addr; //@line 1349 "pyexpat.c"
        var $10=$9+8; //@line 1349 "pyexpat.c"
        HEAP[$10]=0; //@line 1349 "pyexpat.c"
        var $11=$self_addr; //@line 1351 "pyexpat.c"
        var $12=$11+48; //@line 1351 "pyexpat.c"
        var $13=HEAP[$12]; //@line 1351 "pyexpat.c"
        var $14=($13)!=0; //@line 1351 "pyexpat.c"
        if ($14) { __label__ = 3; break; } else { __label__ = 9; break; } //@line 1351 "pyexpat.c"
      case 3: // $bb2
        $i=0; //@line 1353 "pyexpat.c"
        var $15=$i; //@line 1353 "pyexpat.c"
        var $16=_handler_info+$15*20; //@line 1353 "pyexpat.c"
        var $17=$16; //@line 1353 "pyexpat.c"
        var $18=HEAP[$17]; //@line 1353 "pyexpat.c"
        var $19=($18)!=0; //@line 1353 "pyexpat.c"
        var $20=$self_addr; //@line 1354 "pyexpat.c"
        var $21=$20+48; //@line 1354 "pyexpat.c"
        var $22=HEAP[$21]; //@line 1354 "pyexpat.c"
        if ($19) { __lastLabel__ = 3; __label__ = 4; break; } else { __lastLabel__ = 3; __label__ = 8; break; } //@line 1353 "pyexpat.c"
      case 4: // $bb3
        var $23=__lastLabel__ == 7 ? $59 : ($22);
        var $24=$i; //@line 1354 "pyexpat.c"
        var $25=$23+4*$24; //@line 1354 "pyexpat.c"
        var $26=HEAP[$25]; //@line 1354 "pyexpat.c"
        $temp=$26; //@line 1354 "pyexpat.c"
        var $27=$self_addr; //@line 1355 "pyexpat.c"
        var $28=$27+48; //@line 1355 "pyexpat.c"
        var $29=HEAP[$28]; //@line 1355 "pyexpat.c"
        var $30=$i; //@line 1355 "pyexpat.c"
        var $31=$29+4*$30; //@line 1355 "pyexpat.c"
        HEAP[$31]=0; //@line 1355 "pyexpat.c"
        var $32=$temp; //@line 1356 "pyexpat.c"
        var $33=($32)!=0; //@line 1356 "pyexpat.c"
        if ($33) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 1356 "pyexpat.c"
      case 5: // $bb4
        var $34=$temp; //@line 1356 "pyexpat.c"
        var $35=$34; //@line 1356 "pyexpat.c"
        var $36=HEAP[$35]; //@line 1356 "pyexpat.c"
        var $37=($36) - 1; //@line 1356 "pyexpat.c"
        var $38=$temp; //@line 1356 "pyexpat.c"
        var $39=$38; //@line 1356 "pyexpat.c"
        HEAP[$39]=$37; //@line 1356 "pyexpat.c"
        var $40=$temp; //@line 1356 "pyexpat.c"
        var $41=$40; //@line 1356 "pyexpat.c"
        var $42=HEAP[$41]; //@line 1356 "pyexpat.c"
        var $43=($42)==0; //@line 1356 "pyexpat.c"
        if ($43) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1356 "pyexpat.c"
      case 6: // $bb5
        var $44=$temp; //@line 1356 "pyexpat.c"
        var $45=$44+4; //@line 1356 "pyexpat.c"
        var $46=HEAP[$45]; //@line 1356 "pyexpat.c"
        var $47=$46+24; //@line 1356 "pyexpat.c"
        var $48=HEAP[$47]; //@line 1356 "pyexpat.c"
        var $49=$temp; //@line 1356 "pyexpat.c"
        FUNCTION_TABLE[$48]($49); //@line 1356 "pyexpat.c"
        __label__ = 7; break; //@line 1356 "pyexpat.c"
      case 7: // $bb6
        var $50=$i; //@line 1353 "pyexpat.c"
        var $51=($50) + 1; //@line 1353 "pyexpat.c"
        $i=$51; //@line 1353 "pyexpat.c"
        var $52=$i; //@line 1353 "pyexpat.c"
        var $53=_handler_info+$52*20; //@line 1353 "pyexpat.c"
        var $54=$53; //@line 1353 "pyexpat.c"
        var $55=HEAP[$54]; //@line 1353 "pyexpat.c"
        var $56=($55)!=0; //@line 1353 "pyexpat.c"
        var $57=$self_addr; //@line 1354 "pyexpat.c"
        var $58=$57+48; //@line 1354 "pyexpat.c"
        var $59=HEAP[$58]; //@line 1354 "pyexpat.c"
        if ($56) { __lastLabel__ = 7; __label__ = 4; break; } else { __lastLabel__ = 7; __label__ = 8; break; } //@line 1353 "pyexpat.c"
      case 8: // $bb8
        var $_lcssa=__lastLabel__ == 3 ? $22 : ($59);
        var $60=$_lcssa; //@line 1358 "pyexpat.c"
        _free($60); //@line 1358 "pyexpat.c"
        var $61=$self_addr; //@line 1359 "pyexpat.c"
        var $62=$61+48; //@line 1359 "pyexpat.c"
        HEAP[$62]=0; //@line 1359 "pyexpat.c"
        __label__ = 9; break; //@line 1359 "pyexpat.c"
      case 9: // $bb9
        var $63=$self_addr; //@line 1361 "pyexpat.c"
        var $64=$63+32; //@line 1361 "pyexpat.c"
        var $65=HEAP[$64]; //@line 1361 "pyexpat.c"
        var $66=($65)!=0; //@line 1361 "pyexpat.c"
        if ($66) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1361 "pyexpat.c"
      case 10: // $bb10
        var $67=$self_addr; //@line 1362 "pyexpat.c"
        var $68=$67+32; //@line 1362 "pyexpat.c"
        var $69=HEAP[$68]; //@line 1362 "pyexpat.c"
        _free($69); //@line 1362 "pyexpat.c"
        var $70=$self_addr; //@line 1363 "pyexpat.c"
        var $71=$70+32; //@line 1363 "pyexpat.c"
        HEAP[$71]=0; //@line 1363 "pyexpat.c"
        __label__ = 11; break; //@line 1363 "pyexpat.c"
      case 11: // $bb11
        var $72=$self_addr; //@line 1365 "pyexpat.c"
        var $73=$72+44; //@line 1365 "pyexpat.c"
        var $74=HEAP[$73]; //@line 1365 "pyexpat.c"
        var $75=($74)!=0; //@line 1365 "pyexpat.c"
        if ($75) { __label__ = 12; break; } else { __label__ = 14; break; } //@line 1365 "pyexpat.c"
      case 12: // $bb12
        var $76=$self_addr; //@line 1365 "pyexpat.c"
        var $77=$76+44; //@line 1365 "pyexpat.c"
        var $78=HEAP[$77]; //@line 1365 "pyexpat.c"
        var $79=$78; //@line 1365 "pyexpat.c"
        var $80=HEAP[$79]; //@line 1365 "pyexpat.c"
        var $81=($80) - 1; //@line 1365 "pyexpat.c"
        var $82=$78; //@line 1365 "pyexpat.c"
        HEAP[$82]=$81; //@line 1365 "pyexpat.c"
        var $83=$78; //@line 1365 "pyexpat.c"
        var $84=HEAP[$83]; //@line 1365 "pyexpat.c"
        var $85=($84)==0; //@line 1365 "pyexpat.c"
        if ($85) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1365 "pyexpat.c"
      case 13: // $bb13
        var $86=$self_addr; //@line 1365 "pyexpat.c"
        var $87=$86+44; //@line 1365 "pyexpat.c"
        var $88=HEAP[$87]; //@line 1365 "pyexpat.c"
        var $89=$88+4; //@line 1365 "pyexpat.c"
        var $90=HEAP[$89]; //@line 1365 "pyexpat.c"
        var $91=$90+24; //@line 1365 "pyexpat.c"
        var $92=HEAP[$91]; //@line 1365 "pyexpat.c"
        var $93=$self_addr; //@line 1365 "pyexpat.c"
        var $94=$93+44; //@line 1365 "pyexpat.c"
        var $95=HEAP[$94]; //@line 1365 "pyexpat.c"
        FUNCTION_TABLE[$92]($95); //@line 1365 "pyexpat.c"
        __label__ = 14; break; //@line 1365 "pyexpat.c"
      case 14: // $bb14
        var $96=$self_addr; //@line 1371 "pyexpat.c"
        var $97=$96; //@line 1371 "pyexpat.c"
        _PyObject_GC_Del($97); //@line 1371 "pyexpat.c"
        ;
        return; //@line 1373 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_getattr($self, $name) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hinfo_addr_i;
        var $retval_i41;
        var $0;
        var $name_i;
        var $istrue_addr_i32;
        var $retval_i33;
        var $1;
        var $iftmp_110_i34;
        var $result_i35;
        var $istrue_addr_i23;
        var $retval_i24;
        var $2;
        var $iftmp_110_i25;
        var $result_i26;
        var $istrue_addr_i14;
        var $retval_i15;
        var $3;
        var $iftmp_110_i16;
        var $result_i17;
        var $istrue_addr_i5;
        var $retval_i6;
        var $4;
        var $iftmp_110_i7;
        var $result_i8;
        var $istrue_addr_i;
        var $retval_i1;
        var $5;
        var $iftmp_110_i;
        var $result_i;
        var $name_addr_i;
        var $retval_i;
        var $6;
        var $i_i;
        var $self_addr;
        var $name_addr;
        var $retval;
        var $7;
        var $handlernum;
        var $result;
        var $i;
        var $rc;
        var $o;
        var $o50;
        var $o56;
        var $o62;
        var $o68;
        var $o74;
        var $o80;
        var $o86;
        var $o92;
        var $o98;
        var $o104;
        var $o110;
        var $o116;
        var $o122;
        var $o128;
        var $o134;
        $self_addr=$self;
        $name_addr=$name;
        var $8=$name_addr; //@line 1398 "pyexpat.c"
        $name_addr_i=$8;
        $i_i=0; //@line 1379 "pyexpat.c"
        __label__ = 3; break; //@line 1379 "pyexpat.c"
      case 1: // $bb_i
        var $9=$i_i; //@line 1380 "pyexpat.c"
        var $10=_handler_info+$9*20; //@line 1380 "pyexpat.c"
        var $11=$10; //@line 1380 "pyexpat.c"
        var $12=HEAP[$11]; //@line 1380 "pyexpat.c"
        var $13=$name_addr_i; //@line 1380 "pyexpat.c"
        var $14=_strcmp($13, $12); //@line 1380 "pyexpat.c"
        var $15=($14)==0; //@line 1380 "pyexpat.c"
        var $16=$i_i; //@line 1381 "pyexpat.c"
        if ($15) { __label__ = 5; break; } else { __label__ = 2; break; } //@line 1380 "pyexpat.c"
      case 2: // $bb2_i
        var $17=($16) + 1; //@line 1379 "pyexpat.c"
        $i_i=$17; //@line 1379 "pyexpat.c"
        __label__ = 3; break; //@line 1379 "pyexpat.c"
      case 3: // $bb3_i
        var $18=$i_i; //@line 1379 "pyexpat.c"
        var $19=_handler_info+$18*20; //@line 1379 "pyexpat.c"
        var $20=$19; //@line 1379 "pyexpat.c"
        var $21=HEAP[$20]; //@line 1379 "pyexpat.c"
        var $22=($21)!=0; //@line 1379 "pyexpat.c"
        if ($22) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 1379 "pyexpat.c"
      case 4: // $handlername2int_exit_thread
        $6=-1; //@line 1384 "pyexpat.c"
        $retval_i=-1; //@line 1381 "pyexpat.c"
        $handlernum=-1; //@line 1398 "pyexpat.c"
        __label__ = 9; break;
      case 5: // $handlername2int_exit
        $6=$16; //@line 1381 "pyexpat.c"
        $retval_i=$16; //@line 1381 "pyexpat.c"
        $handlernum=$16; //@line 1398 "pyexpat.c"
        var $23=($16)!=-1; //@line 1400 "pyexpat.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 9; break; } //@line 1400 "pyexpat.c"
      case 6: // $bb
        var $24=$self_addr; //@line 1401 "pyexpat.c"
        var $25=$24+48; //@line 1401 "pyexpat.c"
        var $26=HEAP[$25]; //@line 1401 "pyexpat.c"
        var $27=$handlernum; //@line 1401 "pyexpat.c"
        var $28=$26+4*$27; //@line 1401 "pyexpat.c"
        var $29=HEAP[$28]; //@line 1401 "pyexpat.c"
        $result=$29; //@line 1401 "pyexpat.c"
        var $30=$result; //@line 1402 "pyexpat.c"
        var $31=($30)==0; //@line 1402 "pyexpat.c"
        if ($31) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1402 "pyexpat.c"
      case 7: // $bb1
        $result=__Py_NoneStruct; //@line 1403 "pyexpat.c"
        __label__ = 8; break; //@line 1403 "pyexpat.c"
      case 8: // $bb2
        var $32=$result; //@line 1404 "pyexpat.c"
        var $33=$32; //@line 1404 "pyexpat.c"
        var $34=HEAP[$33]; //@line 1404 "pyexpat.c"
        var $35=($34) + 1; //@line 1404 "pyexpat.c"
        var $36=$result; //@line 1404 "pyexpat.c"
        var $37=$36; //@line 1404 "pyexpat.c"
        HEAP[$37]=$35; //@line 1404 "pyexpat.c"
        var $38=$result; //@line 1405 "pyexpat.c"
        $7=$38; //@line 1405 "pyexpat.c"
        __label__ = 133; break; //@line 1405 "pyexpat.c"
      case 9: // $bb3
        var $39=$name_addr; //@line 1407 "pyexpat.c"
        var $40=$39; //@line 1407 "pyexpat.c"
        var $41=HEAP[$40]; //@line 1407 "pyexpat.c"
        var $42=($41)==69; //@line 1407 "pyexpat.c"
        if ($42) { __label__ = 10; break; } else { __label__ = 18; break; } //@line 1407 "pyexpat.c"
      case 10: // $bb4
        var $43=$name_addr; //@line 1408 "pyexpat.c"
        var $44=_strcmp($43, __str64); //@line 1408 "pyexpat.c"
        var $45=($44)==0; //@line 1408 "pyexpat.c"
        if ($45) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1408 "pyexpat.c"
      case 11: // $bb5
        var $46=$self_addr; //@line 1409 "pyexpat.c"
        var $47=$46+8; //@line 1409 "pyexpat.c"
        var $48=HEAP[$47]; //@line 1409 "pyexpat.c"
        var $49=_XML_GetErrorCode($48); //@line 1409 "pyexpat.c"
        var $50=_PyInt_FromLong($49); //@line 1409 "pyexpat.c"
        $7=$50; //@line 1409 "pyexpat.c"
        __label__ = 133; break; //@line 1409 "pyexpat.c"
      case 12: // $bb6
        var $51=$name_addr; //@line 1411 "pyexpat.c"
        var $52=_strcmp($51, __str65); //@line 1411 "pyexpat.c"
        var $53=($52)==0; //@line 1411 "pyexpat.c"
        if ($53) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1411 "pyexpat.c"
      case 13: // $bb7
        var $54=$self_addr; //@line 1412 "pyexpat.c"
        var $55=$54+8; //@line 1412 "pyexpat.c"
        var $56=HEAP[$55]; //@line 1412 "pyexpat.c"
        var $57=_XML_GetCurrentLineNumber($56); //@line 1412 "pyexpat.c"
        var $58=_PyInt_FromLong($57); //@line 1412 "pyexpat.c"
        $7=$58; //@line 1412 "pyexpat.c"
        __label__ = 133; break; //@line 1412 "pyexpat.c"
      case 14: // $bb8
        var $59=$name_addr; //@line 1414 "pyexpat.c"
        var $60=_strcmp($59, __str66); //@line 1414 "pyexpat.c"
        var $61=($60)==0; //@line 1414 "pyexpat.c"
        if ($61) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 1414 "pyexpat.c"
      case 15: // $bb9
        var $62=$self_addr; //@line 1415 "pyexpat.c"
        var $63=$62+8; //@line 1415 "pyexpat.c"
        var $64=HEAP[$63]; //@line 1415 "pyexpat.c"
        var $65=_XML_GetCurrentColumnNumber($64); //@line 1415 "pyexpat.c"
        var $66=_PyInt_FromLong($65); //@line 1415 "pyexpat.c"
        $7=$66; //@line 1415 "pyexpat.c"
        __label__ = 133; break; //@line 1415 "pyexpat.c"
      case 16: // $bb10
        var $67=$name_addr; //@line 1417 "pyexpat.c"
        var $68=_strcmp($67, __str67); //@line 1417 "pyexpat.c"
        var $69=($68)==0; //@line 1417 "pyexpat.c"
        if ($69) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1417 "pyexpat.c"
      case 17: // $bb11
        var $70=$self_addr; //@line 1418 "pyexpat.c"
        var $71=$70+8; //@line 1418 "pyexpat.c"
        var $72=HEAP[$71]; //@line 1418 "pyexpat.c"
        var $73=_XML_GetCurrentByteIndex($72); //@line 1418 "pyexpat.c"
        var $74=_PyInt_FromLong($73); //@line 1418 "pyexpat.c"
        $7=$74; //@line 1418 "pyexpat.c"
        __label__ = 133; break; //@line 1418 "pyexpat.c"
      case 18: // $bb12
        var $75=$name_addr; //@line 1421 "pyexpat.c"
        var $76=$75; //@line 1421 "pyexpat.c"
        var $77=HEAP[$76]; //@line 1421 "pyexpat.c"
        var $78=($77)==67; //@line 1421 "pyexpat.c"
        if ($78) { __label__ = 19; break; } else { __label__ = 25; break; } //@line 1421 "pyexpat.c"
      case 19: // $bb13
        var $79=$name_addr; //@line 1422 "pyexpat.c"
        var $80=_strcmp($79, __str68); //@line 1422 "pyexpat.c"
        var $81=($80)==0; //@line 1422 "pyexpat.c"
        if ($81) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1422 "pyexpat.c"
      case 20: // $bb14
        var $82=$self_addr; //@line 1423 "pyexpat.c"
        var $83=$82+8; //@line 1423 "pyexpat.c"
        var $84=HEAP[$83]; //@line 1423 "pyexpat.c"
        var $85=_XML_GetCurrentLineNumber($84); //@line 1423 "pyexpat.c"
        var $86=_PyInt_FromLong($85); //@line 1423 "pyexpat.c"
        $7=$86; //@line 1423 "pyexpat.c"
        __label__ = 133; break; //@line 1423 "pyexpat.c"
      case 21: // $bb15
        var $87=$name_addr; //@line 1425 "pyexpat.c"
        var $88=_strcmp($87, __str69); //@line 1425 "pyexpat.c"
        var $89=($88)==0; //@line 1425 "pyexpat.c"
        if ($89) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1425 "pyexpat.c"
      case 22: // $bb16
        var $90=$self_addr; //@line 1426 "pyexpat.c"
        var $91=$90+8; //@line 1426 "pyexpat.c"
        var $92=HEAP[$91]; //@line 1426 "pyexpat.c"
        var $93=_XML_GetCurrentColumnNumber($92); //@line 1426 "pyexpat.c"
        var $94=_PyInt_FromLong($93); //@line 1426 "pyexpat.c"
        $7=$94; //@line 1426 "pyexpat.c"
        __label__ = 133; break; //@line 1426 "pyexpat.c"
      case 23: // $bb17
        var $95=$name_addr; //@line 1428 "pyexpat.c"
        var $96=_strcmp($95, __str70); //@line 1428 "pyexpat.c"
        var $97=($96)==0; //@line 1428 "pyexpat.c"
        if ($97) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 1428 "pyexpat.c"
      case 24: // $bb18
        var $98=$self_addr; //@line 1429 "pyexpat.c"
        var $99=$98+8; //@line 1429 "pyexpat.c"
        var $100=HEAP[$99]; //@line 1429 "pyexpat.c"
        var $101=_XML_GetCurrentByteIndex($100); //@line 1429 "pyexpat.c"
        var $102=_PyInt_FromLong($101); //@line 1429 "pyexpat.c"
        $7=$102; //@line 1429 "pyexpat.c"
        __label__ = 133; break; //@line 1429 "pyexpat.c"
      case 25: // $bb19
        var $103=$name_addr; //@line 1432 "pyexpat.c"
        var $104=$103; //@line 1432 "pyexpat.c"
        var $105=HEAP[$104]; //@line 1432 "pyexpat.c"
        var $106=($105)==98; //@line 1432 "pyexpat.c"
        if ($106) { __label__ = 26; break; } else { __label__ = 35; break; } //@line 1432 "pyexpat.c"
      case 26: // $bb20
        var $107=$name_addr; //@line 1433 "pyexpat.c"
        var $108=_strcmp($107, __str71); //@line 1433 "pyexpat.c"
        var $109=($108)==0; //@line 1433 "pyexpat.c"
        if ($109) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1433 "pyexpat.c"
      case 27: // $bb21
        var $110=$self_addr; //@line 1434 "pyexpat.c"
        var $111=$110+36; //@line 1434 "pyexpat.c"
        var $112=HEAP[$111]; //@line 1434 "pyexpat.c"
        var $113=_PyInt_FromLong($112); //@line 1434 "pyexpat.c"
        $7=$113; //@line 1434 "pyexpat.c"
        __label__ = 133; break; //@line 1434 "pyexpat.c"
      case 28: // $bb22
        var $114=$name_addr; //@line 1435 "pyexpat.c"
        var $115=_strcmp($114, __str72); //@line 1435 "pyexpat.c"
        var $116=($115)==0; //@line 1435 "pyexpat.c"
        if ($116) { __label__ = 29; break; } else { __label__ = 33; break; } //@line 1435 "pyexpat.c"
      case 29: // $bb23
        var $117=$self_addr; //@line 1436 "pyexpat.c"
        var $118=$117+32; //@line 1436 "pyexpat.c"
        var $119=HEAP[$118]; //@line 1436 "pyexpat.c"
        var $120=($119)!=0; //@line 1436 "pyexpat.c"
        var $121=($120); //@line 1436 "pyexpat.c"
        $istrue_addr_i=$121;
        var $122=$istrue_addr_i; //@line 1390 "pyexpat.c"
        var $123=($122)!=0; //@line 1390 "pyexpat.c"
        if ($123) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1390 "pyexpat.c"
      case 30: // $bb_i2
        $iftmp_110_i=__Py_TrueStruct; //@line 1390 "pyexpat.c"
        __label__ = 32; break; //@line 1390 "pyexpat.c"
      case 31: // $bb1_i3
        $iftmp_110_i=__Py_ZeroStruct; //@line 1390 "pyexpat.c"
        __label__ = 32; break; //@line 1390 "pyexpat.c"
      case 32: // $get_pybool_exit
        var $124=$iftmp_110_i; //@line 1390 "pyexpat.c"
        $result_i=$124; //@line 1390 "pyexpat.c"
        var $125=$result_i; //@line 1391 "pyexpat.c"
        var $126=$125; //@line 1391 "pyexpat.c"
        var $127=HEAP[$126]; //@line 1391 "pyexpat.c"
        var $128=($127) + 1; //@line 1391 "pyexpat.c"
        var $129=$result_i; //@line 1391 "pyexpat.c"
        var $130=$129; //@line 1391 "pyexpat.c"
        HEAP[$130]=$128; //@line 1391 "pyexpat.c"
        var $131=$result_i; //@line 1392 "pyexpat.c"
        $5=$131; //@line 1392 "pyexpat.c"
        var $132=$5; //@line 1392 "pyexpat.c"
        $retval_i1=$132; //@line 1392 "pyexpat.c"
        var $retval3_i=$retval_i1; //@line 1392 "pyexpat.c"
        $7=$retval3_i; //@line 1436 "pyexpat.c"
        __label__ = 133; break; //@line 1436 "pyexpat.c"
      case 33: // $bb24
        var $133=$name_addr; //@line 1437 "pyexpat.c"
        var $134=_strcmp($133, __str73); //@line 1437 "pyexpat.c"
        var $135=($134)==0; //@line 1437 "pyexpat.c"
        if ($135) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 1437 "pyexpat.c"
      case 34: // $bb25
        var $136=$self_addr; //@line 1438 "pyexpat.c"
        var $137=$136+40; //@line 1438 "pyexpat.c"
        var $138=HEAP[$137]; //@line 1438 "pyexpat.c"
        var $139=_PyInt_FromLong($138); //@line 1438 "pyexpat.c"
        $7=$139; //@line 1438 "pyexpat.c"
        __label__ = 133; break; //@line 1438 "pyexpat.c"
      case 35: // $bb26
        var $140=$name_addr; //@line 1440 "pyexpat.c"
        var $141=_strcmp($140, __str74); //@line 1440 "pyexpat.c"
        var $142=($141)==0; //@line 1440 "pyexpat.c"
        if ($142) { __label__ = 36; break; } else { __label__ = 40; break; } //@line 1440 "pyexpat.c"
      case 36: // $bb27
        var $143=$self_addr; //@line 1441 "pyexpat.c"
        var $144=$143+28; //@line 1441 "pyexpat.c"
        var $145=HEAP[$144]; //@line 1441 "pyexpat.c"
        $istrue_addr_i5=$145;
        var $146=$istrue_addr_i5; //@line 1390 "pyexpat.c"
        var $147=($146)!=0; //@line 1390 "pyexpat.c"
        if ($147) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 1390 "pyexpat.c"
      case 37: // $bb_i9
        $iftmp_110_i7=__Py_TrueStruct; //@line 1390 "pyexpat.c"
        __label__ = 39; break; //@line 1390 "pyexpat.c"
      case 38: // $bb1_i10
        $iftmp_110_i7=__Py_ZeroStruct; //@line 1390 "pyexpat.c"
        __label__ = 39; break; //@line 1390 "pyexpat.c"
      case 39: // $get_pybool_exit13
        var $148=$iftmp_110_i7; //@line 1390 "pyexpat.c"
        $result_i8=$148; //@line 1390 "pyexpat.c"
        var $149=$result_i8; //@line 1391 "pyexpat.c"
        var $150=$149; //@line 1391 "pyexpat.c"
        var $151=HEAP[$150]; //@line 1391 "pyexpat.c"
        var $152=($151) + 1; //@line 1391 "pyexpat.c"
        var $153=$result_i8; //@line 1391 "pyexpat.c"
        var $154=$153; //@line 1391 "pyexpat.c"
        HEAP[$154]=$152; //@line 1391 "pyexpat.c"
        var $155=$result_i8; //@line 1392 "pyexpat.c"
        $4=$155; //@line 1392 "pyexpat.c"
        var $156=$4; //@line 1392 "pyexpat.c"
        $retval_i6=$156; //@line 1392 "pyexpat.c"
        var $retval3_i11=$retval_i6; //@line 1392 "pyexpat.c"
        $7=$retval3_i11; //@line 1441 "pyexpat.c"
        __label__ = 133; break; //@line 1441 "pyexpat.c"
      case 40: // $bb28
        var $157=$name_addr; //@line 1442 "pyexpat.c"
        var $158=_strcmp($157, __str75); //@line 1442 "pyexpat.c"
        var $159=($158)==0; //@line 1442 "pyexpat.c"
        if ($159) { __label__ = 41; break; } else { __label__ = 45; break; } //@line 1442 "pyexpat.c"
      case 41: // $bb29
        var $160=$self_addr; //@line 1443 "pyexpat.c"
        var $161=$160+16; //@line 1443 "pyexpat.c"
        var $162=HEAP[$161]; //@line 1443 "pyexpat.c"
        $istrue_addr_i14=$162;
        var $163=$istrue_addr_i14; //@line 1390 "pyexpat.c"
        var $164=($163)!=0; //@line 1390 "pyexpat.c"
        if ($164) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 1390 "pyexpat.c"
      case 42: // $bb_i18
        $iftmp_110_i16=__Py_TrueStruct; //@line 1390 "pyexpat.c"
        __label__ = 44; break; //@line 1390 "pyexpat.c"
      case 43: // $bb1_i19
        $iftmp_110_i16=__Py_ZeroStruct; //@line 1390 "pyexpat.c"
        __label__ = 44; break; //@line 1390 "pyexpat.c"
      case 44: // $get_pybool_exit22
        var $165=$iftmp_110_i16; //@line 1390 "pyexpat.c"
        $result_i17=$165; //@line 1390 "pyexpat.c"
        var $166=$result_i17; //@line 1391 "pyexpat.c"
        var $167=$166; //@line 1391 "pyexpat.c"
        var $168=HEAP[$167]; //@line 1391 "pyexpat.c"
        var $169=($168) + 1; //@line 1391 "pyexpat.c"
        var $170=$result_i17; //@line 1391 "pyexpat.c"
        var $171=$170; //@line 1391 "pyexpat.c"
        HEAP[$171]=$169; //@line 1391 "pyexpat.c"
        var $172=$result_i17; //@line 1392 "pyexpat.c"
        $3=$172; //@line 1392 "pyexpat.c"
        var $173=$3; //@line 1392 "pyexpat.c"
        $retval_i15=$173; //@line 1392 "pyexpat.c"
        var $retval3_i20=$retval_i15; //@line 1392 "pyexpat.c"
        $7=$retval3_i20; //@line 1443 "pyexpat.c"
        __label__ = 133; break; //@line 1443 "pyexpat.c"
      case 45: // $bb30
        var $174=$name_addr; //@line 1444 "pyexpat.c"
        var $175=_strcmp($174, __str76); //@line 1444 "pyexpat.c"
        var $176=($175)==0; //@line 1444 "pyexpat.c"
        if ($176) { __label__ = 46; break; } else { __label__ = 50; break; } //@line 1444 "pyexpat.c"
      case 46: // $bb31
        var $177=$self_addr; //@line 1445 "pyexpat.c"
        var $178=$177+12; //@line 1445 "pyexpat.c"
        var $179=HEAP[$178]; //@line 1445 "pyexpat.c"
        $istrue_addr_i23=$179;
        var $180=$istrue_addr_i23; //@line 1390 "pyexpat.c"
        var $181=($180)!=0; //@line 1390 "pyexpat.c"
        if ($181) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 1390 "pyexpat.c"
      case 47: // $bb_i27
        $iftmp_110_i25=__Py_TrueStruct; //@line 1390 "pyexpat.c"
        __label__ = 49; break; //@line 1390 "pyexpat.c"
      case 48: // $bb1_i28
        $iftmp_110_i25=__Py_ZeroStruct; //@line 1390 "pyexpat.c"
        __label__ = 49; break; //@line 1390 "pyexpat.c"
      case 49: // $get_pybool_exit31
        var $182=$iftmp_110_i25; //@line 1390 "pyexpat.c"
        $result_i26=$182; //@line 1390 "pyexpat.c"
        var $183=$result_i26; //@line 1391 "pyexpat.c"
        var $184=$183; //@line 1391 "pyexpat.c"
        var $185=HEAP[$184]; //@line 1391 "pyexpat.c"
        var $186=($185) + 1; //@line 1391 "pyexpat.c"
        var $187=$result_i26; //@line 1391 "pyexpat.c"
        var $188=$187; //@line 1391 "pyexpat.c"
        HEAP[$188]=$186; //@line 1391 "pyexpat.c"
        var $189=$result_i26; //@line 1392 "pyexpat.c"
        $2=$189; //@line 1392 "pyexpat.c"
        var $190=$2; //@line 1392 "pyexpat.c"
        $retval_i24=$190; //@line 1392 "pyexpat.c"
        var $retval3_i29=$retval_i24; //@line 1392 "pyexpat.c"
        $7=$retval3_i29; //@line 1445 "pyexpat.c"
        __label__ = 133; break; //@line 1445 "pyexpat.c"
      case 50: // $bb32
        var $191=$name_addr; //@line 1446 "pyexpat.c"
        var $192=_strcmp($191, __str77); //@line 1446 "pyexpat.c"
        var $193=($192)==0; //@line 1446 "pyexpat.c"
        if ($193) { __label__ = 51; break; } else { __label__ = 55; break; } //@line 1446 "pyexpat.c"
      case 51: // $bb33
        var $194=$self_addr; //@line 1447 "pyexpat.c"
        var $195=$194+20; //@line 1447 "pyexpat.c"
        var $196=HEAP[$195]; //@line 1447 "pyexpat.c"
        $istrue_addr_i32=$196;
        var $197=$istrue_addr_i32; //@line 1390 "pyexpat.c"
        var $198=($197)!=0; //@line 1390 "pyexpat.c"
        if ($198) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 1390 "pyexpat.c"
      case 52: // $bb_i36
        $iftmp_110_i34=__Py_TrueStruct; //@line 1390 "pyexpat.c"
        __label__ = 54; break; //@line 1390 "pyexpat.c"
      case 53: // $bb1_i37
        $iftmp_110_i34=__Py_ZeroStruct; //@line 1390 "pyexpat.c"
        __label__ = 54; break; //@line 1390 "pyexpat.c"
      case 54: // $get_pybool_exit40
        var $199=$iftmp_110_i34; //@line 1390 "pyexpat.c"
        $result_i35=$199; //@line 1390 "pyexpat.c"
        var $200=$result_i35; //@line 1391 "pyexpat.c"
        var $201=$200; //@line 1391 "pyexpat.c"
        var $202=HEAP[$201]; //@line 1391 "pyexpat.c"
        var $203=($202) + 1; //@line 1391 "pyexpat.c"
        var $204=$result_i35; //@line 1391 "pyexpat.c"
        var $205=$204; //@line 1391 "pyexpat.c"
        HEAP[$205]=$203; //@line 1391 "pyexpat.c"
        var $206=$result_i35; //@line 1392 "pyexpat.c"
        $1=$206; //@line 1392 "pyexpat.c"
        var $207=$1; //@line 1392 "pyexpat.c"
        $retval_i33=$207; //@line 1392 "pyexpat.c"
        var $retval3_i38=$retval_i33; //@line 1392 "pyexpat.c"
        $7=$retval3_i38; //@line 1447 "pyexpat.c"
        __label__ = 133; break; //@line 1447 "pyexpat.c"
      case 55: // $bb34
        var $208=$name_addr; //@line 1448 "pyexpat.c"
        var $209=_strcmp($208, __str78); //@line 1448 "pyexpat.c"
        var $210=($209)==0; //@line 1448 "pyexpat.c"
        if ($210) { __label__ = 56; break; } else { __label__ = 59; break; } //@line 1448 "pyexpat.c"
      case 56: // $bb35
        var $211=$self_addr; //@line 1449 "pyexpat.c"
        var $212=$211+44; //@line 1449 "pyexpat.c"
        var $213=HEAP[$212]; //@line 1449 "pyexpat.c"
        var $214=($213)==0; //@line 1449 "pyexpat.c"
        if ($214) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 1449 "pyexpat.c"
      case 57: // $bb36
        var $215=HEAP[__Py_NoneStruct]; //@line 1450 "pyexpat.c"
        var $216=($215) + 1; //@line 1450 "pyexpat.c"
        HEAP[__Py_NoneStruct]=$216; //@line 1450 "pyexpat.c"
        $7=__Py_NoneStruct; //@line 1451 "pyexpat.c"
        __label__ = 133; break; //@line 1451 "pyexpat.c"
      case 58: // $bb37
        var $217=$self_addr; //@line 1454 "pyexpat.c"
        var $218=$217+44; //@line 1454 "pyexpat.c"
        var $219=HEAP[$218]; //@line 1454 "pyexpat.c"
        var $220=$219; //@line 1454 "pyexpat.c"
        var $221=HEAP[$220]; //@line 1454 "pyexpat.c"
        var $222=($221) + 1; //@line 1454 "pyexpat.c"
        var $223=$219; //@line 1454 "pyexpat.c"
        HEAP[$223]=$222; //@line 1454 "pyexpat.c"
        var $224=$self_addr; //@line 1455 "pyexpat.c"
        var $225=$224+44; //@line 1455 "pyexpat.c"
        var $226=HEAP[$225]; //@line 1455 "pyexpat.c"
        $7=$226; //@line 1455 "pyexpat.c"
        __label__ = 133; break; //@line 1455 "pyexpat.c"
      case 59: // $bb38
        var $227=$name_addr; //@line 1467 "pyexpat.c"
        var $228=_strcmp($227, __str79); //@line 1467 "pyexpat.c"
        var $229=($228)==0; //@line 1467 "pyexpat.c"
        if ($229) { __label__ = 60; break; } else { __label__ = 132; break; } //@line 1467 "pyexpat.c"
      case 60: // $bb39
        var $230=_PyList_New(0); //@line 1469 "pyexpat.c"
        $rc=$230; //@line 1469 "pyexpat.c"
        var $231=$rc; //@line 1470 "pyexpat.c"
        var $232=($231)==0; //@line 1470 "pyexpat.c"
        if ($232) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 1470 "pyexpat.c"
      case 61: // $bb40
        $7=0; //@line 1471 "pyexpat.c"
        __label__ = 133; break; //@line 1471 "pyexpat.c"
      case 62: // $bb41
        $i=0; //@line 1472 "pyexpat.c"
        var $233=$i; //@line 1472 "pyexpat.c"
        var $234=_handler_info+$233*20; //@line 1472 "pyexpat.c"
        var $235=$234; //@line 1472 "pyexpat.c"
        var $236=HEAP[$235]; //@line 1472 "pyexpat.c"
        var $237=($236)!=0; //@line 1472 "pyexpat.c"
        if ($237) { __label__ = 63; break; } else { __label__ = 71; break; } //@line 1472 "pyexpat.c"
      case 63: // $bb42
        var $238=$i; //@line 1473 "pyexpat.c"
        var $239=_handler_info+$238*20; //@line 1473 "pyexpat.c"
        $hinfo_addr_i=$239;
        var $240=$hinfo_addr_i; //@line 154 "pyexpat.c"
        var $241=$240+16; //@line 154 "pyexpat.c"
        var $242=HEAP[$241]; //@line 154 "pyexpat.c"
        $name_i=$242; //@line 154 "pyexpat.c"
        var $243=($242)==0; //@line 155 "pyexpat.c"
        if ($243) { __label__ = 64; break; } else { __label__ = 66; break; } //@line 155 "pyexpat.c"
      case 64: // $bb1_i42
        var $244=$hinfo_addr_i; //@line 156 "pyexpat.c"
        var $245=$244; //@line 156 "pyexpat.c"
        var $246=HEAP[$245]; //@line 156 "pyexpat.c"
        var $247=_PyString_FromString($246); //@line 156 "pyexpat.c"
        $name_i=$247; //@line 156 "pyexpat.c"
        var $248=$hinfo_addr_i; //@line 157 "pyexpat.c"
        var $249=$248+16; //@line 157 "pyexpat.c"
        var $250=$name_i; //@line 157 "pyexpat.c"
        HEAP[$249]=$250; //@line 157 "pyexpat.c"
        var $_pr_i=$name_i;
        var $251=($_pr_i)!=0; //@line 159 "pyexpat.c"
        if ($251) { __label__ = 66; break; } else { __label__ = 65; break; } //@line 159 "pyexpat.c"
      case 65: // $get_handler_name_exit_thread
        $0=$_pr_i; //@line 160 "pyexpat.c"
        $retval_i41=$_pr_i; //@line 160 "pyexpat.c"
        $o=$_pr_i; //@line 1473 "pyexpat.c"
        __label__ = 70; break;
      case 66: // $get_handler_name_exit
        var $252=$name_i; //@line 159 "pyexpat.c"
        var $253=$252; //@line 159 "pyexpat.c"
        var $254=HEAP[$253]; //@line 159 "pyexpat.c"
        var $255=($254) + 1; //@line 159 "pyexpat.c"
        var $256=$name_i; //@line 159 "pyexpat.c"
        var $257=$256; //@line 159 "pyexpat.c"
        HEAP[$257]=$255; //@line 159 "pyexpat.c"
        var $_pr=$name_i;
        $0=$_pr; //@line 160 "pyexpat.c"
        $retval_i41=$_pr; //@line 160 "pyexpat.c"
        $o=$_pr; //@line 1473 "pyexpat.c"
        var $258=($_pr)!=0; //@line 1474 "pyexpat.c"
        if ($258) { __label__ = 67; break; } else { __label__ = 70; break; } //@line 1474 "pyexpat.c"
      case 67: // $bb44
        var $259=$rc; //@line 1475 "pyexpat.c"
        var $260=$o; //@line 1475 "pyexpat.c"
        var $261=_PyList_Append($259, $260); //@line 1475 "pyexpat.c"
        var $_pr45=$o;
        var $262=($_pr45)!=0; //@line 1476 "pyexpat.c"
        if ($262) { __label__ = 68; break; } else { __label__ = 70; break; } //@line 1476 "pyexpat.c"
      case 68: // $bb45
        var $263=$o; //@line 1476 "pyexpat.c"
        var $264=$263; //@line 1476 "pyexpat.c"
        var $265=HEAP[$264]; //@line 1476 "pyexpat.c"
        var $266=($265) - 1; //@line 1476 "pyexpat.c"
        var $267=$o; //@line 1476 "pyexpat.c"
        var $268=$267; //@line 1476 "pyexpat.c"
        HEAP[$268]=$266; //@line 1476 "pyexpat.c"
        var $269=$o; //@line 1476 "pyexpat.c"
        var $270=$269; //@line 1476 "pyexpat.c"
        var $271=HEAP[$270]; //@line 1476 "pyexpat.c"
        var $272=($271)==0; //@line 1476 "pyexpat.c"
        if ($272) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 1476 "pyexpat.c"
      case 69: // $bb46
        var $273=$o; //@line 1476 "pyexpat.c"
        var $274=$273+4; //@line 1476 "pyexpat.c"
        var $275=HEAP[$274]; //@line 1476 "pyexpat.c"
        var $276=$275+24; //@line 1476 "pyexpat.c"
        var $277=HEAP[$276]; //@line 1476 "pyexpat.c"
        var $278=$o; //@line 1476 "pyexpat.c"
        FUNCTION_TABLE[$277]($278); //@line 1476 "pyexpat.c"
        __label__ = 70; break; //@line 1476 "pyexpat.c"
      case 70: // $bb47
        var $279=$i; //@line 1472 "pyexpat.c"
        var $280=($279) + 1; //@line 1472 "pyexpat.c"
        $i=$280; //@line 1472 "pyexpat.c"
        var $281=$i; //@line 1472 "pyexpat.c"
        var $282=_handler_info+$281*20; //@line 1472 "pyexpat.c"
        var $283=$282; //@line 1472 "pyexpat.c"
        var $284=HEAP[$283]; //@line 1472 "pyexpat.c"
        var $285=($284)!=0; //@line 1472 "pyexpat.c"
        if ($285) { __label__ = 63; break; } else { __label__ = 71; break; } //@line 1472 "pyexpat.c"
      case 71: // $bb49
        var $286=_PyString_FromString(__str64); //@line 1478 "pyexpat.c"
        $o50=$286; //@line 1478 "pyexpat.c"
        var $287=($286)!=0; //@line 1478 "pyexpat.c"
        if ($287) { __label__ = 72; break; } else { __label__ = 75; break; } //@line 1478 "pyexpat.c"
      case 72: // $bb52
        var $288=$rc; //@line 1478 "pyexpat.c"
        var $289=$o50; //@line 1478 "pyexpat.c"
        var $290=_PyList_Append($288, $289); //@line 1478 "pyexpat.c"
        var $_pr46=$o50;
        var $291=($_pr46)!=0; //@line 1478 "pyexpat.c"
        if ($291) { __label__ = 73; break; } else { __label__ = 75; break; } //@line 1478 "pyexpat.c"
      case 73: // $bb53
        var $292=$o50; //@line 1478 "pyexpat.c"
        var $293=$292; //@line 1478 "pyexpat.c"
        var $294=HEAP[$293]; //@line 1478 "pyexpat.c"
        var $295=($294) - 1; //@line 1478 "pyexpat.c"
        var $296=$o50; //@line 1478 "pyexpat.c"
        var $297=$296; //@line 1478 "pyexpat.c"
        HEAP[$297]=$295; //@line 1478 "pyexpat.c"
        var $298=$o50; //@line 1478 "pyexpat.c"
        var $299=$298; //@line 1478 "pyexpat.c"
        var $300=HEAP[$299]; //@line 1478 "pyexpat.c"
        var $301=($300)==0; //@line 1478 "pyexpat.c"
        if ($301) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 1478 "pyexpat.c"
      case 74: // $bb54
        var $302=$o50; //@line 1478 "pyexpat.c"
        var $303=$302+4; //@line 1478 "pyexpat.c"
        var $304=HEAP[$303]; //@line 1478 "pyexpat.c"
        var $305=$304+24; //@line 1478 "pyexpat.c"
        var $306=HEAP[$305]; //@line 1478 "pyexpat.c"
        var $307=$o50; //@line 1478 "pyexpat.c"
        FUNCTION_TABLE[$306]($307); //@line 1478 "pyexpat.c"
        __label__ = 75; break; //@line 1478 "pyexpat.c"
      case 75: // $bb55
        var $308=_PyString_FromString(__str65); //@line 1479 "pyexpat.c"
        $o56=$308; //@line 1479 "pyexpat.c"
        var $309=($308)!=0; //@line 1479 "pyexpat.c"
        if ($309) { __label__ = 76; break; } else { __label__ = 79; break; } //@line 1479 "pyexpat.c"
      case 76: // $bb58
        var $310=$rc; //@line 1479 "pyexpat.c"
        var $311=$o56; //@line 1479 "pyexpat.c"
        var $312=_PyList_Append($310, $311); //@line 1479 "pyexpat.c"
        var $_pr47=$o56;
        var $313=($_pr47)!=0; //@line 1479 "pyexpat.c"
        if ($313) { __label__ = 77; break; } else { __label__ = 79; break; } //@line 1479 "pyexpat.c"
      case 77: // $bb59
        var $314=$o56; //@line 1479 "pyexpat.c"
        var $315=$314; //@line 1479 "pyexpat.c"
        var $316=HEAP[$315]; //@line 1479 "pyexpat.c"
        var $317=($316) - 1; //@line 1479 "pyexpat.c"
        var $318=$o56; //@line 1479 "pyexpat.c"
        var $319=$318; //@line 1479 "pyexpat.c"
        HEAP[$319]=$317; //@line 1479 "pyexpat.c"
        var $320=$o56; //@line 1479 "pyexpat.c"
        var $321=$320; //@line 1479 "pyexpat.c"
        var $322=HEAP[$321]; //@line 1479 "pyexpat.c"
        var $323=($322)==0; //@line 1479 "pyexpat.c"
        if ($323) { __label__ = 78; break; } else { __label__ = 79; break; } //@line 1479 "pyexpat.c"
      case 78: // $bb60
        var $324=$o56; //@line 1479 "pyexpat.c"
        var $325=$324+4; //@line 1479 "pyexpat.c"
        var $326=HEAP[$325]; //@line 1479 "pyexpat.c"
        var $327=$326+24; //@line 1479 "pyexpat.c"
        var $328=HEAP[$327]; //@line 1479 "pyexpat.c"
        var $329=$o56; //@line 1479 "pyexpat.c"
        FUNCTION_TABLE[$328]($329); //@line 1479 "pyexpat.c"
        __label__ = 79; break; //@line 1479 "pyexpat.c"
      case 79: // $bb61
        var $330=_PyString_FromString(__str66); //@line 1480 "pyexpat.c"
        $o62=$330; //@line 1480 "pyexpat.c"
        var $331=($330)!=0; //@line 1480 "pyexpat.c"
        if ($331) { __label__ = 80; break; } else { __label__ = 83; break; } //@line 1480 "pyexpat.c"
      case 80: // $bb64
        var $332=$rc; //@line 1480 "pyexpat.c"
        var $333=$o62; //@line 1480 "pyexpat.c"
        var $334=_PyList_Append($332, $333); //@line 1480 "pyexpat.c"
        var $_pr48=$o62;
        var $335=($_pr48)!=0; //@line 1480 "pyexpat.c"
        if ($335) { __label__ = 81; break; } else { __label__ = 83; break; } //@line 1480 "pyexpat.c"
      case 81: // $bb65
        var $336=$o62; //@line 1480 "pyexpat.c"
        var $337=$336; //@line 1480 "pyexpat.c"
        var $338=HEAP[$337]; //@line 1480 "pyexpat.c"
        var $339=($338) - 1; //@line 1480 "pyexpat.c"
        var $340=$o62; //@line 1480 "pyexpat.c"
        var $341=$340; //@line 1480 "pyexpat.c"
        HEAP[$341]=$339; //@line 1480 "pyexpat.c"
        var $342=$o62; //@line 1480 "pyexpat.c"
        var $343=$342; //@line 1480 "pyexpat.c"
        var $344=HEAP[$343]; //@line 1480 "pyexpat.c"
        var $345=($344)==0; //@line 1480 "pyexpat.c"
        if ($345) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 1480 "pyexpat.c"
      case 82: // $bb66
        var $346=$o62; //@line 1480 "pyexpat.c"
        var $347=$346+4; //@line 1480 "pyexpat.c"
        var $348=HEAP[$347]; //@line 1480 "pyexpat.c"
        var $349=$348+24; //@line 1480 "pyexpat.c"
        var $350=HEAP[$349]; //@line 1480 "pyexpat.c"
        var $351=$o62; //@line 1480 "pyexpat.c"
        FUNCTION_TABLE[$350]($351); //@line 1480 "pyexpat.c"
        __label__ = 83; break; //@line 1480 "pyexpat.c"
      case 83: // $bb67
        var $352=_PyString_FromString(__str67); //@line 1481 "pyexpat.c"
        $o68=$352; //@line 1481 "pyexpat.c"
        var $353=($352)!=0; //@line 1481 "pyexpat.c"
        if ($353) { __label__ = 84; break; } else { __label__ = 87; break; } //@line 1481 "pyexpat.c"
      case 84: // $bb70
        var $354=$rc; //@line 1481 "pyexpat.c"
        var $355=$o68; //@line 1481 "pyexpat.c"
        var $356=_PyList_Append($354, $355); //@line 1481 "pyexpat.c"
        var $_pr49=$o68;
        var $357=($_pr49)!=0; //@line 1481 "pyexpat.c"
        if ($357) { __label__ = 85; break; } else { __label__ = 87; break; } //@line 1481 "pyexpat.c"
      case 85: // $bb71
        var $358=$o68; //@line 1481 "pyexpat.c"
        var $359=$358; //@line 1481 "pyexpat.c"
        var $360=HEAP[$359]; //@line 1481 "pyexpat.c"
        var $361=($360) - 1; //@line 1481 "pyexpat.c"
        var $362=$o68; //@line 1481 "pyexpat.c"
        var $363=$362; //@line 1481 "pyexpat.c"
        HEAP[$363]=$361; //@line 1481 "pyexpat.c"
        var $364=$o68; //@line 1481 "pyexpat.c"
        var $365=$364; //@line 1481 "pyexpat.c"
        var $366=HEAP[$365]; //@line 1481 "pyexpat.c"
        var $367=($366)==0; //@line 1481 "pyexpat.c"
        if ($367) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 1481 "pyexpat.c"
      case 86: // $bb72
        var $368=$o68; //@line 1481 "pyexpat.c"
        var $369=$368+4; //@line 1481 "pyexpat.c"
        var $370=HEAP[$369]; //@line 1481 "pyexpat.c"
        var $371=$370+24; //@line 1481 "pyexpat.c"
        var $372=HEAP[$371]; //@line 1481 "pyexpat.c"
        var $373=$o68; //@line 1481 "pyexpat.c"
        FUNCTION_TABLE[$372]($373); //@line 1481 "pyexpat.c"
        __label__ = 87; break; //@line 1481 "pyexpat.c"
      case 87: // $bb73
        var $374=_PyString_FromString(__str68); //@line 1482 "pyexpat.c"
        $o74=$374; //@line 1482 "pyexpat.c"
        var $375=($374)!=0; //@line 1482 "pyexpat.c"
        if ($375) { __label__ = 88; break; } else { __label__ = 91; break; } //@line 1482 "pyexpat.c"
      case 88: // $bb76
        var $376=$rc; //@line 1482 "pyexpat.c"
        var $377=$o74; //@line 1482 "pyexpat.c"
        var $378=_PyList_Append($376, $377); //@line 1482 "pyexpat.c"
        var $_pr50=$o74;
        var $379=($_pr50)!=0; //@line 1482 "pyexpat.c"
        if ($379) { __label__ = 89; break; } else { __label__ = 91; break; } //@line 1482 "pyexpat.c"
      case 89: // $bb77
        var $380=$o74; //@line 1482 "pyexpat.c"
        var $381=$380; //@line 1482 "pyexpat.c"
        var $382=HEAP[$381]; //@line 1482 "pyexpat.c"
        var $383=($382) - 1; //@line 1482 "pyexpat.c"
        var $384=$o74; //@line 1482 "pyexpat.c"
        var $385=$384; //@line 1482 "pyexpat.c"
        HEAP[$385]=$383; //@line 1482 "pyexpat.c"
        var $386=$o74; //@line 1482 "pyexpat.c"
        var $387=$386; //@line 1482 "pyexpat.c"
        var $388=HEAP[$387]; //@line 1482 "pyexpat.c"
        var $389=($388)==0; //@line 1482 "pyexpat.c"
        if ($389) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 1482 "pyexpat.c"
      case 90: // $bb78
        var $390=$o74; //@line 1482 "pyexpat.c"
        var $391=$390+4; //@line 1482 "pyexpat.c"
        var $392=HEAP[$391]; //@line 1482 "pyexpat.c"
        var $393=$392+24; //@line 1482 "pyexpat.c"
        var $394=HEAP[$393]; //@line 1482 "pyexpat.c"
        var $395=$o74; //@line 1482 "pyexpat.c"
        FUNCTION_TABLE[$394]($395); //@line 1482 "pyexpat.c"
        __label__ = 91; break; //@line 1482 "pyexpat.c"
      case 91: // $bb79
        var $396=_PyString_FromString(__str69); //@line 1483 "pyexpat.c"
        $o80=$396; //@line 1483 "pyexpat.c"
        var $397=($396)!=0; //@line 1483 "pyexpat.c"
        if ($397) { __label__ = 92; break; } else { __label__ = 95; break; } //@line 1483 "pyexpat.c"
      case 92: // $bb82
        var $398=$rc; //@line 1483 "pyexpat.c"
        var $399=$o80; //@line 1483 "pyexpat.c"
        var $400=_PyList_Append($398, $399); //@line 1483 "pyexpat.c"
        var $_pr51=$o80;
        var $401=($_pr51)!=0; //@line 1483 "pyexpat.c"
        if ($401) { __label__ = 93; break; } else { __label__ = 95; break; } //@line 1483 "pyexpat.c"
      case 93: // $bb83
        var $402=$o80; //@line 1483 "pyexpat.c"
        var $403=$402; //@line 1483 "pyexpat.c"
        var $404=HEAP[$403]; //@line 1483 "pyexpat.c"
        var $405=($404) - 1; //@line 1483 "pyexpat.c"
        var $406=$o80; //@line 1483 "pyexpat.c"
        var $407=$406; //@line 1483 "pyexpat.c"
        HEAP[$407]=$405; //@line 1483 "pyexpat.c"
        var $408=$o80; //@line 1483 "pyexpat.c"
        var $409=$408; //@line 1483 "pyexpat.c"
        var $410=HEAP[$409]; //@line 1483 "pyexpat.c"
        var $411=($410)==0; //@line 1483 "pyexpat.c"
        if ($411) { __label__ = 94; break; } else { __label__ = 95; break; } //@line 1483 "pyexpat.c"
      case 94: // $bb84
        var $412=$o80; //@line 1483 "pyexpat.c"
        var $413=$412+4; //@line 1483 "pyexpat.c"
        var $414=HEAP[$413]; //@line 1483 "pyexpat.c"
        var $415=$414+24; //@line 1483 "pyexpat.c"
        var $416=HEAP[$415]; //@line 1483 "pyexpat.c"
        var $417=$o80; //@line 1483 "pyexpat.c"
        FUNCTION_TABLE[$416]($417); //@line 1483 "pyexpat.c"
        __label__ = 95; break; //@line 1483 "pyexpat.c"
      case 95: // $bb85
        var $418=_PyString_FromString(__str70); //@line 1484 "pyexpat.c"
        $o86=$418; //@line 1484 "pyexpat.c"
        var $419=($418)!=0; //@line 1484 "pyexpat.c"
        if ($419) { __label__ = 96; break; } else { __label__ = 99; break; } //@line 1484 "pyexpat.c"
      case 96: // $bb88
        var $420=$rc; //@line 1484 "pyexpat.c"
        var $421=$o86; //@line 1484 "pyexpat.c"
        var $422=_PyList_Append($420, $421); //@line 1484 "pyexpat.c"
        var $_pr52=$o86;
        var $423=($_pr52)!=0; //@line 1484 "pyexpat.c"
        if ($423) { __label__ = 97; break; } else { __label__ = 99; break; } //@line 1484 "pyexpat.c"
      case 97: // $bb89
        var $424=$o86; //@line 1484 "pyexpat.c"
        var $425=$424; //@line 1484 "pyexpat.c"
        var $426=HEAP[$425]; //@line 1484 "pyexpat.c"
        var $427=($426) - 1; //@line 1484 "pyexpat.c"
        var $428=$o86; //@line 1484 "pyexpat.c"
        var $429=$428; //@line 1484 "pyexpat.c"
        HEAP[$429]=$427; //@line 1484 "pyexpat.c"
        var $430=$o86; //@line 1484 "pyexpat.c"
        var $431=$430; //@line 1484 "pyexpat.c"
        var $432=HEAP[$431]; //@line 1484 "pyexpat.c"
        var $433=($432)==0; //@line 1484 "pyexpat.c"
        if ($433) { __label__ = 98; break; } else { __label__ = 99; break; } //@line 1484 "pyexpat.c"
      case 98: // $bb90
        var $434=$o86; //@line 1484 "pyexpat.c"
        var $435=$434+4; //@line 1484 "pyexpat.c"
        var $436=HEAP[$435]; //@line 1484 "pyexpat.c"
        var $437=$436+24; //@line 1484 "pyexpat.c"
        var $438=HEAP[$437]; //@line 1484 "pyexpat.c"
        var $439=$o86; //@line 1484 "pyexpat.c"
        FUNCTION_TABLE[$438]($439); //@line 1484 "pyexpat.c"
        __label__ = 99; break; //@line 1484 "pyexpat.c"
      case 99: // $bb91
        var $440=_PyString_FromString(__str71); //@line 1485 "pyexpat.c"
        $o92=$440; //@line 1485 "pyexpat.c"
        var $441=($440)!=0; //@line 1485 "pyexpat.c"
        if ($441) { __label__ = 100; break; } else { __label__ = 103; break; } //@line 1485 "pyexpat.c"
      case 100: // $bb94
        var $442=$rc; //@line 1485 "pyexpat.c"
        var $443=$o92; //@line 1485 "pyexpat.c"
        var $444=_PyList_Append($442, $443); //@line 1485 "pyexpat.c"
        var $_pr53=$o92;
        var $445=($_pr53)!=0; //@line 1485 "pyexpat.c"
        if ($445) { __label__ = 101; break; } else { __label__ = 103; break; } //@line 1485 "pyexpat.c"
      case 101: // $bb95
        var $446=$o92; //@line 1485 "pyexpat.c"
        var $447=$446; //@line 1485 "pyexpat.c"
        var $448=HEAP[$447]; //@line 1485 "pyexpat.c"
        var $449=($448) - 1; //@line 1485 "pyexpat.c"
        var $450=$o92; //@line 1485 "pyexpat.c"
        var $451=$450; //@line 1485 "pyexpat.c"
        HEAP[$451]=$449; //@line 1485 "pyexpat.c"
        var $452=$o92; //@line 1485 "pyexpat.c"
        var $453=$452; //@line 1485 "pyexpat.c"
        var $454=HEAP[$453]; //@line 1485 "pyexpat.c"
        var $455=($454)==0; //@line 1485 "pyexpat.c"
        if ($455) { __label__ = 102; break; } else { __label__ = 103; break; } //@line 1485 "pyexpat.c"
      case 102: // $bb96
        var $456=$o92; //@line 1485 "pyexpat.c"
        var $457=$456+4; //@line 1485 "pyexpat.c"
        var $458=HEAP[$457]; //@line 1485 "pyexpat.c"
        var $459=$458+24; //@line 1485 "pyexpat.c"
        var $460=HEAP[$459]; //@line 1485 "pyexpat.c"
        var $461=$o92; //@line 1485 "pyexpat.c"
        FUNCTION_TABLE[$460]($461); //@line 1485 "pyexpat.c"
        __label__ = 103; break; //@line 1485 "pyexpat.c"
      case 103: // $bb97
        var $462=_PyString_FromString(__str72); //@line 1486 "pyexpat.c"
        $o98=$462; //@line 1486 "pyexpat.c"
        var $463=($462)!=0; //@line 1486 "pyexpat.c"
        if ($463) { __label__ = 104; break; } else { __label__ = 107; break; } //@line 1486 "pyexpat.c"
      case 104: // $bb100
        var $464=$rc; //@line 1486 "pyexpat.c"
        var $465=$o98; //@line 1486 "pyexpat.c"
        var $466=_PyList_Append($464, $465); //@line 1486 "pyexpat.c"
        var $_pr54=$o98;
        var $467=($_pr54)!=0; //@line 1486 "pyexpat.c"
        if ($467) { __label__ = 105; break; } else { __label__ = 107; break; } //@line 1486 "pyexpat.c"
      case 105: // $bb101
        var $468=$o98; //@line 1486 "pyexpat.c"
        var $469=$468; //@line 1486 "pyexpat.c"
        var $470=HEAP[$469]; //@line 1486 "pyexpat.c"
        var $471=($470) - 1; //@line 1486 "pyexpat.c"
        var $472=$o98; //@line 1486 "pyexpat.c"
        var $473=$472; //@line 1486 "pyexpat.c"
        HEAP[$473]=$471; //@line 1486 "pyexpat.c"
        var $474=$o98; //@line 1486 "pyexpat.c"
        var $475=$474; //@line 1486 "pyexpat.c"
        var $476=HEAP[$475]; //@line 1486 "pyexpat.c"
        var $477=($476)==0; //@line 1486 "pyexpat.c"
        if ($477) { __label__ = 106; break; } else { __label__ = 107; break; } //@line 1486 "pyexpat.c"
      case 106: // $bb102
        var $478=$o98; //@line 1486 "pyexpat.c"
        var $479=$478+4; //@line 1486 "pyexpat.c"
        var $480=HEAP[$479]; //@line 1486 "pyexpat.c"
        var $481=$480+24; //@line 1486 "pyexpat.c"
        var $482=HEAP[$481]; //@line 1486 "pyexpat.c"
        var $483=$o98; //@line 1486 "pyexpat.c"
        FUNCTION_TABLE[$482]($483); //@line 1486 "pyexpat.c"
        __label__ = 107; break; //@line 1486 "pyexpat.c"
      case 107: // $bb103
        var $484=_PyString_FromString(__str73); //@line 1487 "pyexpat.c"
        $o104=$484; //@line 1487 "pyexpat.c"
        var $485=($484)!=0; //@line 1487 "pyexpat.c"
        if ($485) { __label__ = 108; break; } else { __label__ = 111; break; } //@line 1487 "pyexpat.c"
      case 108: // $bb106
        var $486=$rc; //@line 1487 "pyexpat.c"
        var $487=$o104; //@line 1487 "pyexpat.c"
        var $488=_PyList_Append($486, $487); //@line 1487 "pyexpat.c"
        var $_pr55=$o104;
        var $489=($_pr55)!=0; //@line 1487 "pyexpat.c"
        if ($489) { __label__ = 109; break; } else { __label__ = 111; break; } //@line 1487 "pyexpat.c"
      case 109: // $bb107
        var $490=$o104; //@line 1487 "pyexpat.c"
        var $491=$490; //@line 1487 "pyexpat.c"
        var $492=HEAP[$491]; //@line 1487 "pyexpat.c"
        var $493=($492) - 1; //@line 1487 "pyexpat.c"
        var $494=$o104; //@line 1487 "pyexpat.c"
        var $495=$494; //@line 1487 "pyexpat.c"
        HEAP[$495]=$493; //@line 1487 "pyexpat.c"
        var $496=$o104; //@line 1487 "pyexpat.c"
        var $497=$496; //@line 1487 "pyexpat.c"
        var $498=HEAP[$497]; //@line 1487 "pyexpat.c"
        var $499=($498)==0; //@line 1487 "pyexpat.c"
        if ($499) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 1487 "pyexpat.c"
      case 110: // $bb108
        var $500=$o104; //@line 1487 "pyexpat.c"
        var $501=$500+4; //@line 1487 "pyexpat.c"
        var $502=HEAP[$501]; //@line 1487 "pyexpat.c"
        var $503=$502+24; //@line 1487 "pyexpat.c"
        var $504=HEAP[$503]; //@line 1487 "pyexpat.c"
        var $505=$o104; //@line 1487 "pyexpat.c"
        FUNCTION_TABLE[$504]($505); //@line 1487 "pyexpat.c"
        __label__ = 111; break; //@line 1487 "pyexpat.c"
      case 111: // $bb109
        var $506=_PyString_FromString(__str74); //@line 1488 "pyexpat.c"
        $o110=$506; //@line 1488 "pyexpat.c"
        var $507=($506)!=0; //@line 1488 "pyexpat.c"
        if ($507) { __label__ = 112; break; } else { __label__ = 115; break; } //@line 1488 "pyexpat.c"
      case 112: // $bb112
        var $508=$rc; //@line 1488 "pyexpat.c"
        var $509=$o110; //@line 1488 "pyexpat.c"
        var $510=_PyList_Append($508, $509); //@line 1488 "pyexpat.c"
        var $_pr56=$o110;
        var $511=($_pr56)!=0; //@line 1488 "pyexpat.c"
        if ($511) { __label__ = 113; break; } else { __label__ = 115; break; } //@line 1488 "pyexpat.c"
      case 113: // $bb113
        var $512=$o110; //@line 1488 "pyexpat.c"
        var $513=$512; //@line 1488 "pyexpat.c"
        var $514=HEAP[$513]; //@line 1488 "pyexpat.c"
        var $515=($514) - 1; //@line 1488 "pyexpat.c"
        var $516=$o110; //@line 1488 "pyexpat.c"
        var $517=$516; //@line 1488 "pyexpat.c"
        HEAP[$517]=$515; //@line 1488 "pyexpat.c"
        var $518=$o110; //@line 1488 "pyexpat.c"
        var $519=$518; //@line 1488 "pyexpat.c"
        var $520=HEAP[$519]; //@line 1488 "pyexpat.c"
        var $521=($520)==0; //@line 1488 "pyexpat.c"
        if ($521) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 1488 "pyexpat.c"
      case 114: // $bb114
        var $522=$o110; //@line 1488 "pyexpat.c"
        var $523=$522+4; //@line 1488 "pyexpat.c"
        var $524=HEAP[$523]; //@line 1488 "pyexpat.c"
        var $525=$524+24; //@line 1488 "pyexpat.c"
        var $526=HEAP[$525]; //@line 1488 "pyexpat.c"
        var $527=$o110; //@line 1488 "pyexpat.c"
        FUNCTION_TABLE[$526]($527); //@line 1488 "pyexpat.c"
        __label__ = 115; break; //@line 1488 "pyexpat.c"
      case 115: // $bb115
        var $528=_PyString_FromString(__str75); //@line 1489 "pyexpat.c"
        $o116=$528; //@line 1489 "pyexpat.c"
        var $529=($528)!=0; //@line 1489 "pyexpat.c"
        if ($529) { __label__ = 116; break; } else { __label__ = 119; break; } //@line 1489 "pyexpat.c"
      case 116: // $bb118
        var $530=$rc; //@line 1489 "pyexpat.c"
        var $531=$o116; //@line 1489 "pyexpat.c"
        var $532=_PyList_Append($530, $531); //@line 1489 "pyexpat.c"
        var $_pr57=$o116;
        var $533=($_pr57)!=0; //@line 1489 "pyexpat.c"
        if ($533) { __label__ = 117; break; } else { __label__ = 119; break; } //@line 1489 "pyexpat.c"
      case 117: // $bb119
        var $534=$o116; //@line 1489 "pyexpat.c"
        var $535=$534; //@line 1489 "pyexpat.c"
        var $536=HEAP[$535]; //@line 1489 "pyexpat.c"
        var $537=($536) - 1; //@line 1489 "pyexpat.c"
        var $538=$o116; //@line 1489 "pyexpat.c"
        var $539=$538; //@line 1489 "pyexpat.c"
        HEAP[$539]=$537; //@line 1489 "pyexpat.c"
        var $540=$o116; //@line 1489 "pyexpat.c"
        var $541=$540; //@line 1489 "pyexpat.c"
        var $542=HEAP[$541]; //@line 1489 "pyexpat.c"
        var $543=($542)==0; //@line 1489 "pyexpat.c"
        if ($543) { __label__ = 118; break; } else { __label__ = 119; break; } //@line 1489 "pyexpat.c"
      case 118: // $bb120
        var $544=$o116; //@line 1489 "pyexpat.c"
        var $545=$544+4; //@line 1489 "pyexpat.c"
        var $546=HEAP[$545]; //@line 1489 "pyexpat.c"
        var $547=$546+24; //@line 1489 "pyexpat.c"
        var $548=HEAP[$547]; //@line 1489 "pyexpat.c"
        var $549=$o116; //@line 1489 "pyexpat.c"
        FUNCTION_TABLE[$548]($549); //@line 1489 "pyexpat.c"
        __label__ = 119; break; //@line 1489 "pyexpat.c"
      case 119: // $bb121
        var $550=_PyString_FromString(__str76); //@line 1490 "pyexpat.c"
        $o122=$550; //@line 1490 "pyexpat.c"
        var $551=($550)!=0; //@line 1490 "pyexpat.c"
        if ($551) { __label__ = 120; break; } else { __label__ = 123; break; } //@line 1490 "pyexpat.c"
      case 120: // $bb124
        var $552=$rc; //@line 1490 "pyexpat.c"
        var $553=$o122; //@line 1490 "pyexpat.c"
        var $554=_PyList_Append($552, $553); //@line 1490 "pyexpat.c"
        var $_pr58=$o122;
        var $555=($_pr58)!=0; //@line 1490 "pyexpat.c"
        if ($555) { __label__ = 121; break; } else { __label__ = 123; break; } //@line 1490 "pyexpat.c"
      case 121: // $bb125
        var $556=$o122; //@line 1490 "pyexpat.c"
        var $557=$556; //@line 1490 "pyexpat.c"
        var $558=HEAP[$557]; //@line 1490 "pyexpat.c"
        var $559=($558) - 1; //@line 1490 "pyexpat.c"
        var $560=$o122; //@line 1490 "pyexpat.c"
        var $561=$560; //@line 1490 "pyexpat.c"
        HEAP[$561]=$559; //@line 1490 "pyexpat.c"
        var $562=$o122; //@line 1490 "pyexpat.c"
        var $563=$562; //@line 1490 "pyexpat.c"
        var $564=HEAP[$563]; //@line 1490 "pyexpat.c"
        var $565=($564)==0; //@line 1490 "pyexpat.c"
        if ($565) { __label__ = 122; break; } else { __label__ = 123; break; } //@line 1490 "pyexpat.c"
      case 122: // $bb126
        var $566=$o122; //@line 1490 "pyexpat.c"
        var $567=$566+4; //@line 1490 "pyexpat.c"
        var $568=HEAP[$567]; //@line 1490 "pyexpat.c"
        var $569=$568+24; //@line 1490 "pyexpat.c"
        var $570=HEAP[$569]; //@line 1490 "pyexpat.c"
        var $571=$o122; //@line 1490 "pyexpat.c"
        FUNCTION_TABLE[$570]($571); //@line 1490 "pyexpat.c"
        __label__ = 123; break; //@line 1490 "pyexpat.c"
      case 123: // $bb127
        var $572=_PyString_FromString(__str77); //@line 1491 "pyexpat.c"
        $o128=$572; //@line 1491 "pyexpat.c"
        var $573=($572)!=0; //@line 1491 "pyexpat.c"
        if ($573) { __label__ = 124; break; } else { __label__ = 127; break; } //@line 1491 "pyexpat.c"
      case 124: // $bb130
        var $574=$rc; //@line 1491 "pyexpat.c"
        var $575=$o128; //@line 1491 "pyexpat.c"
        var $576=_PyList_Append($574, $575); //@line 1491 "pyexpat.c"
        var $_pr59=$o128;
        var $577=($_pr59)!=0; //@line 1491 "pyexpat.c"
        if ($577) { __label__ = 125; break; } else { __label__ = 127; break; } //@line 1491 "pyexpat.c"
      case 125: // $bb131
        var $578=$o128; //@line 1491 "pyexpat.c"
        var $579=$578; //@line 1491 "pyexpat.c"
        var $580=HEAP[$579]; //@line 1491 "pyexpat.c"
        var $581=($580) - 1; //@line 1491 "pyexpat.c"
        var $582=$o128; //@line 1491 "pyexpat.c"
        var $583=$582; //@line 1491 "pyexpat.c"
        HEAP[$583]=$581; //@line 1491 "pyexpat.c"
        var $584=$o128; //@line 1491 "pyexpat.c"
        var $585=$584; //@line 1491 "pyexpat.c"
        var $586=HEAP[$585]; //@line 1491 "pyexpat.c"
        var $587=($586)==0; //@line 1491 "pyexpat.c"
        if ($587) { __label__ = 126; break; } else { __label__ = 127; break; } //@line 1491 "pyexpat.c"
      case 126: // $bb132
        var $588=$o128; //@line 1491 "pyexpat.c"
        var $589=$588+4; //@line 1491 "pyexpat.c"
        var $590=HEAP[$589]; //@line 1491 "pyexpat.c"
        var $591=$590+24; //@line 1491 "pyexpat.c"
        var $592=HEAP[$591]; //@line 1491 "pyexpat.c"
        var $593=$o128; //@line 1491 "pyexpat.c"
        FUNCTION_TABLE[$592]($593); //@line 1491 "pyexpat.c"
        __label__ = 127; break; //@line 1491 "pyexpat.c"
      case 127: // $bb133
        var $594=_PyString_FromString(__str78); //@line 1492 "pyexpat.c"
        $o134=$594; //@line 1492 "pyexpat.c"
        var $595=($594)!=0; //@line 1492 "pyexpat.c"
        if ($595) { __label__ = 128; break; } else { __label__ = 131; break; } //@line 1492 "pyexpat.c"
      case 128: // $bb136
        var $596=$rc; //@line 1492 "pyexpat.c"
        var $597=$o134; //@line 1492 "pyexpat.c"
        var $598=_PyList_Append($596, $597); //@line 1492 "pyexpat.c"
        var $_pr60=$o134;
        var $599=($_pr60)!=0; //@line 1492 "pyexpat.c"
        if ($599) { __label__ = 129; break; } else { __label__ = 131; break; } //@line 1492 "pyexpat.c"
      case 129: // $bb137
        var $600=$o134; //@line 1492 "pyexpat.c"
        var $601=$600; //@line 1492 "pyexpat.c"
        var $602=HEAP[$601]; //@line 1492 "pyexpat.c"
        var $603=($602) - 1; //@line 1492 "pyexpat.c"
        var $604=$o134; //@line 1492 "pyexpat.c"
        var $605=$604; //@line 1492 "pyexpat.c"
        HEAP[$605]=$603; //@line 1492 "pyexpat.c"
        var $606=$o134; //@line 1492 "pyexpat.c"
        var $607=$606; //@line 1492 "pyexpat.c"
        var $608=HEAP[$607]; //@line 1492 "pyexpat.c"
        var $609=($608)==0; //@line 1492 "pyexpat.c"
        if ($609) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 1492 "pyexpat.c"
      case 130: // $bb138
        var $610=$o134; //@line 1492 "pyexpat.c"
        var $611=$610+4; //@line 1492 "pyexpat.c"
        var $612=HEAP[$611]; //@line 1492 "pyexpat.c"
        var $613=$612+24; //@line 1492 "pyexpat.c"
        var $614=HEAP[$613]; //@line 1492 "pyexpat.c"
        var $615=$o134; //@line 1492 "pyexpat.c"
        FUNCTION_TABLE[$614]($615); //@line 1492 "pyexpat.c"
        __label__ = 131; break; //@line 1492 "pyexpat.c"
      case 131: // $bb139
        var $616=$rc; //@line 1495 "pyexpat.c"
        $7=$616; //@line 1495 "pyexpat.c"
        __label__ = 133; break; //@line 1495 "pyexpat.c"
      case 132: // $bb140
        var $617=$self_addr; //@line 1497 "pyexpat.c"
        var $618=$617; //@line 1497 "pyexpat.c"
        var $619=$name_addr; //@line 1497 "pyexpat.c"
        var $620=_Py_FindMethod(_xmlparse_methods, $618, $619); //@line 1497 "pyexpat.c"
        $7=$620; //@line 1497 "pyexpat.c"
        __label__ = 133; break; //@line 1497 "pyexpat.c"
      case 133: // $bb141
        var $621=$7; //@line 1405 "pyexpat.c"
        $retval=$621; //@line 1405 "pyexpat.c"
        var $retval142=$retval; //@line 1405 "pyexpat.c"
        ;
        return $retval142; //@line 1405 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_setattr($self, $name, $v) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $name_addr_i_i;
        var $retval_i_i;
        var $0;
        var $i_i_i;
        var $self_addr_i17;
        var $name_addr_i;
        var $v_addr_i;
        var $retval_i18;
        var $1;
        var $handlernum_i;
        var $c_handler_i;
        var $temp_i;
        var $self_addr_i9;
        var $retval_i10;
        var $2;
        var $rc_i11;
        var $self_addr_i1;
        var $retval_i2;
        var $3;
        var $rc_i3;
        var $self_addr_i;
        var $retval_i;
        var $4;
        var $rc_i;
        var $self_addr;
        var $name_addr;
        var $v_addr;
        var $retval;
        var $5;
        var $new_buffer_size;
        $self_addr=$self;
        $name_addr=$name;
        $v_addr=$v;
        var $6=$v_addr; //@line 1540 "pyexpat.c"
        var $7=($6)==0; //@line 1540 "pyexpat.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1540 "pyexpat.c"
      case 1: // $bb
        var $8=HEAP[_PyExc_RuntimeError]; //@line 1541 "pyexpat.c"
        _PyErr_SetString($8, __str80); //@line 1541 "pyexpat.c"
        $5=-1; //@line 1542 "pyexpat.c"
        __label__ = 78; break; //@line 1542 "pyexpat.c"
      case 2: // $bb1
        var $9=$name_addr; //@line 1544 "pyexpat.c"
        var $10=_strcmp($9, __str72); //@line 1544 "pyexpat.c"
        var $11=($10)==0; //@line 1544 "pyexpat.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 16; break; } //@line 1544 "pyexpat.c"
      case 3: // $bb2
        var $12=$v_addr; //@line 1545 "pyexpat.c"
        var $13=_PyObject_IsTrue($12); //@line 1545 "pyexpat.c"
        var $14=($13)!=0; //@line 1545 "pyexpat.c"
        var $15=$self_addr; //@line 1546 "pyexpat.c"
        var $16=$15+32; //@line 1546 "pyexpat.c"
        var $17=HEAP[$16]; //@line 1546 "pyexpat.c"
        if ($14) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 1545 "pyexpat.c"
      case 4: // $bb3
        var $18=($17)==0; //@line 1546 "pyexpat.c"
        if ($18) { __label__ = 5; break; } else { __label__ = 15; break; } //@line 1546 "pyexpat.c"
      case 5: // $bb4
        var $19=$self_addr; //@line 1547 "pyexpat.c"
        var $20=$19+36; //@line 1547 "pyexpat.c"
        var $21=HEAP[$20]; //@line 1547 "pyexpat.c"
        var $22=_malloc($21); //@line 1547 "pyexpat.c"
        var $23=$self_addr; //@line 1547 "pyexpat.c"
        var $24=$23+32; //@line 1547 "pyexpat.c"
        HEAP[$24]=$22; //@line 1547 "pyexpat.c"
        var $25=$self_addr; //@line 1548 "pyexpat.c"
        var $26=$25+32; //@line 1548 "pyexpat.c"
        var $27=HEAP[$26]; //@line 1548 "pyexpat.c"
        var $28=($27)==0; //@line 1548 "pyexpat.c"
        if ($28) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1548 "pyexpat.c"
      case 6: // $bb5
        var $29=_PyErr_NoMemory(); //@line 1549 "pyexpat.c"
        $5=-1; //@line 1550 "pyexpat.c"
        __label__ = 78; break; //@line 1550 "pyexpat.c"
      case 7: // $bb6
        var $30=$self_addr; //@line 1552 "pyexpat.c"
        var $31=$30+40; //@line 1552 "pyexpat.c"
        HEAP[$31]=0; //@line 1552 "pyexpat.c"
        __label__ = 15; break; //@line 1552 "pyexpat.c"
      case 8: // $bb8
        var $32=($17)!=0; //@line 1555 "pyexpat.c"
        if ($32) { __label__ = 9; break; } else { __label__ = 15; break; } //@line 1555 "pyexpat.c"
      case 9: // $bb9
        var $33=$self_addr; //@line 1556 "pyexpat.c"
        $self_addr_i=$33;
        var $34=$self_addr_i; //@line 460 "pyexpat.c"
        var $35=$34+32; //@line 460 "pyexpat.c"
        var $36=HEAP[$35]; //@line 460 "pyexpat.c"
        var $37=($36)==0; //@line 460 "pyexpat.c"
        if ($37) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 460 "pyexpat.c"
      case 10: // $bb_i
        var $38=$self_addr_i; //@line 460 "pyexpat.c"
        var $39=$38+40; //@line 460 "pyexpat.c"
        var $40=HEAP[$39]; //@line 460 "pyexpat.c"
        var $41=($40)==0; //@line 460 "pyexpat.c"
        if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 460 "pyexpat.c"
      case 11: // $flush_character_buffer_exit_thread
        $4=0; //@line 461 "pyexpat.c"
        $retval_i=0; //@line 461 "pyexpat.c"
        __label__ = 14; break;
      case 12: // $flush_character_buffer_exit
        var $42=$self_addr_i; //@line 462 "pyexpat.c"
        var $43=$42+40; //@line 462 "pyexpat.c"
        var $44=HEAP[$43]; //@line 462 "pyexpat.c"
        var $45=$self_addr_i; //@line 462 "pyexpat.c"
        var $46=$45+32; //@line 462 "pyexpat.c"
        var $47=HEAP[$46]; //@line 462 "pyexpat.c"
        var $48=$self_addr_i; //@line 462 "pyexpat.c"
        var $49=_call_character_handler($48, $47, $44); //@line 462 "pyexpat.c"
        $rc_i=$49; //@line 462 "pyexpat.c"
        var $50=$self_addr_i; //@line 463 "pyexpat.c"
        var $51=$50+40; //@line 463 "pyexpat.c"
        HEAP[$51]=0; //@line 463 "pyexpat.c"
        var $52=$rc_i; //@line 464 "pyexpat.c"
        $4=$52; //@line 464 "pyexpat.c"
        $retval_i=$52; //@line 461 "pyexpat.c"
        var $53=($52) < 0; //@line 1556 "pyexpat.c"
        if ($53) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1556 "pyexpat.c"
      case 13: // $bb10
        $5=-1; //@line 1557 "pyexpat.c"
        __label__ = 78; break; //@line 1557 "pyexpat.c"
      case 14: // $bb11
        var $54=$self_addr; //@line 1558 "pyexpat.c"
        var $55=$54+32; //@line 1558 "pyexpat.c"
        var $56=HEAP[$55]; //@line 1558 "pyexpat.c"
        _free($56); //@line 1558 "pyexpat.c"
        var $57=$self_addr; //@line 1559 "pyexpat.c"
        var $58=$57+32; //@line 1559 "pyexpat.c"
        HEAP[$58]=0; //@line 1559 "pyexpat.c"
        __label__ = 15; break; //@line 1559 "pyexpat.c"
      case 15: // $bb12
        $5=0; //@line 1561 "pyexpat.c"
        __label__ = 78; break; //@line 1561 "pyexpat.c"
      case 16: // $bb13
        var $59=$name_addr; //@line 1563 "pyexpat.c"
        var $60=_strcmp($59, __str74); //@line 1563 "pyexpat.c"
        var $61=($60)==0; //@line 1563 "pyexpat.c"
        if ($61) { __label__ = 17; break; } else { __label__ = 21; break; } //@line 1563 "pyexpat.c"
      case 17: // $bb14
        var $62=$v_addr; //@line 1564 "pyexpat.c"
        var $63=_PyObject_IsTrue($62); //@line 1564 "pyexpat.c"
        var $64=($63)!=0; //@line 1564 "pyexpat.c"
        var $65=$self_addr; //@line 1565 "pyexpat.c"
        var $66=$65+28; //@line 1565 "pyexpat.c"
        if ($64) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1564 "pyexpat.c"
      case 18: // $bb15
        HEAP[$66]=1; //@line 1565 "pyexpat.c"
        __label__ = 20; break; //@line 1565 "pyexpat.c"
      case 19: // $bb16
        HEAP[$66]=0; //@line 1567 "pyexpat.c"
        __label__ = 20; break; //@line 1567 "pyexpat.c"
      case 20: // $bb17
        var $67=$self_addr; //@line 1568 "pyexpat.c"
        var $68=$67+28; //@line 1568 "pyexpat.c"
        var $69=HEAP[$68]; //@line 1568 "pyexpat.c"
        var $70=$self_addr; //@line 1568 "pyexpat.c"
        var $71=$70+8; //@line 1568 "pyexpat.c"
        var $72=HEAP[$71]; //@line 1568 "pyexpat.c"
        _XML_SetReturnNSTriplet($72, $69); //@line 1568 "pyexpat.c"
        $5=0; //@line 1569 "pyexpat.c"
        __label__ = 78; break; //@line 1569 "pyexpat.c"
      case 21: // $bb18
        var $73=$name_addr; //@line 1571 "pyexpat.c"
        var $74=_strcmp($73, __str75); //@line 1571 "pyexpat.c"
        var $75=($74)==0; //@line 1571 "pyexpat.c"
        if ($75) { __label__ = 22; break; } else { __label__ = 26; break; } //@line 1571 "pyexpat.c"
      case 22: // $bb19
        var $76=$v_addr; //@line 1572 "pyexpat.c"
        var $77=_PyObject_IsTrue($76); //@line 1572 "pyexpat.c"
        var $78=($77)!=0; //@line 1572 "pyexpat.c"
        var $79=$self_addr; //@line 1573 "pyexpat.c"
        var $80=$79+16; //@line 1573 "pyexpat.c"
        if ($78) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1572 "pyexpat.c"
      case 23: // $bb20
        HEAP[$80]=1; //@line 1573 "pyexpat.c"
        __label__ = 25; break; //@line 1573 "pyexpat.c"
      case 24: // $bb21
        HEAP[$80]=0; //@line 1575 "pyexpat.c"
        __label__ = 25; break; //@line 1575 "pyexpat.c"
      case 25: // $bb22
        $5=0; //@line 1576 "pyexpat.c"
        __label__ = 78; break; //@line 1576 "pyexpat.c"
      case 26: // $bb23
        var $81=$name_addr; //@line 1578 "pyexpat.c"
        var $82=_strcmp($81, __str76); //@line 1578 "pyexpat.c"
        var $83=($82)==0; //@line 1578 "pyexpat.c"
        if ($83) { __label__ = 27; break; } else { __label__ = 31; break; } //@line 1578 "pyexpat.c"
      case 27: // $bb24
        var $84=$v_addr; //@line 1579 "pyexpat.c"
        var $85=_PyObject_IsTrue($84); //@line 1579 "pyexpat.c"
        var $86=($85)!=0; //@line 1579 "pyexpat.c"
        var $87=$self_addr; //@line 1585 "pyexpat.c"
        var $88=$87+12; //@line 1585 "pyexpat.c"
        if ($86) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1579 "pyexpat.c"
      case 28: // $bb25
        HEAP[$88]=1; //@line 1585 "pyexpat.c"
        __label__ = 30; break; //@line 1585 "pyexpat.c"
      case 29: // $bb26
        HEAP[$88]=0; //@line 1589 "pyexpat.c"
        __label__ = 30; break; //@line 1589 "pyexpat.c"
      case 30: // $bb27
        $5=0; //@line 1590 "pyexpat.c"
        __label__ = 78; break; //@line 1590 "pyexpat.c"
      case 31: // $bb28
        var $89=$name_addr; //@line 1592 "pyexpat.c"
        var $90=_strcmp($89, __str77); //@line 1592 "pyexpat.c"
        var $91=($90)==0; //@line 1592 "pyexpat.c"
        if ($91) { __label__ = 32; break; } else { __label__ = 36; break; } //@line 1592 "pyexpat.c"
      case 32: // $bb29
        var $92=$v_addr; //@line 1593 "pyexpat.c"
        var $93=_PyObject_IsTrue($92); //@line 1593 "pyexpat.c"
        var $94=($93)!=0; //@line 1593 "pyexpat.c"
        var $95=$self_addr; //@line 1594 "pyexpat.c"
        var $96=$95+20; //@line 1594 "pyexpat.c"
        if ($94) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 1593 "pyexpat.c"
      case 33: // $bb30
        HEAP[$96]=1; //@line 1594 "pyexpat.c"
        __label__ = 35; break; //@line 1594 "pyexpat.c"
      case 34: // $bb31
        HEAP[$96]=0; //@line 1596 "pyexpat.c"
        __label__ = 35; break; //@line 1596 "pyexpat.c"
      case 35: // $bb32
        $5=0; //@line 1597 "pyexpat.c"
        __label__ = 78; break; //@line 1597 "pyexpat.c"
      case 36: // $bb33
        var $97=$name_addr; //@line 1600 "pyexpat.c"
        var $98=_strcmp($97, __str71); //@line 1600 "pyexpat.c"
        var $99=($98)==0; //@line 1600 "pyexpat.c"
        if ($99) { __label__ = 37; break; } else { __label__ = 54; break; } //@line 1600 "pyexpat.c"
      case 37: // $bb34
        var $100=$v_addr; //@line 1602 "pyexpat.c"
        var $101=$100+4; //@line 1602 "pyexpat.c"
        var $102=HEAP[$101]; //@line 1602 "pyexpat.c"
        var $103=$102+84; //@line 1602 "pyexpat.c"
        var $104=HEAP[$103]; //@line 1602 "pyexpat.c"
        var $105=($104) & 8388608; //@line 1602 "pyexpat.c"
        var $106=($105)==0; //@line 1602 "pyexpat.c"
        if ($106) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 1602 "pyexpat.c"
      case 38: // $bb35
        var $107=HEAP[_PyExc_TypeError]; //@line 1603 "pyexpat.c"
        _PyErr_SetString($107, __str81); //@line 1603 "pyexpat.c"
        $5=-1; //@line 1604 "pyexpat.c"
        __label__ = 78; break; //@line 1604 "pyexpat.c"
      case 39: // $bb36
        var $108=$v_addr; //@line 1607 "pyexpat.c"
        var $109=$108; //@line 1607 "pyexpat.c"
        var $110=$109+8; //@line 1607 "pyexpat.c"
        var $111=HEAP[$110]; //@line 1607 "pyexpat.c"
        $new_buffer_size=$111; //@line 1607 "pyexpat.c"
        var $112=$self_addr; //@line 1609 "pyexpat.c"
        var $113=$112+36; //@line 1609 "pyexpat.c"
        var $114=HEAP[$113]; //@line 1609 "pyexpat.c"
        var $115=$new_buffer_size; //@line 1609 "pyexpat.c"
        var $116=($114)==($115); //@line 1609 "pyexpat.c"
        if ($116) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1609 "pyexpat.c"
      case 40: // $bb37
        $5=0; //@line 1610 "pyexpat.c"
        __label__ = 78; break; //@line 1610 "pyexpat.c"
      case 41: // $bb38
        var $117=$new_buffer_size; //@line 1613 "pyexpat.c"
        var $118=($117) <= 0; //@line 1613 "pyexpat.c"
        if ($118) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 1613 "pyexpat.c"
      case 42: // $bb39
        var $119=HEAP[_PyExc_ValueError]; //@line 1614 "pyexpat.c"
        _PyErr_SetString($119, __str82); //@line 1614 "pyexpat.c"
        $5=-1; //@line 1615 "pyexpat.c"
        __label__ = 78; break; //@line 1615 "pyexpat.c"
      case 43: // $bb40
        var $120=$self_addr; //@line 1626 "pyexpat.c"
        var $121=$120+32; //@line 1626 "pyexpat.c"
        var $122=HEAP[$121]; //@line 1626 "pyexpat.c"
        var $123=($122)!=0; //@line 1626 "pyexpat.c"
        if ($123) { __label__ = 44; break; } else { __label__ = 51; break; } //@line 1626 "pyexpat.c"
      case 44: // $bb41
        var $124=$self_addr; //@line 1628 "pyexpat.c"
        var $125=$124+40; //@line 1628 "pyexpat.c"
        var $126=HEAP[$125]; //@line 1628 "pyexpat.c"
        var $127=($126)!=0; //@line 1628 "pyexpat.c"
        if ($127) { __label__ = 45; break; } else { __label__ = 50; break; } //@line 1628 "pyexpat.c"
      case 45: // $bb42
        var $128=$self_addr; //@line 1629 "pyexpat.c"
        $self_addr_i1=$128;
        var $129=$self_addr_i1; //@line 460 "pyexpat.c"
        var $130=$129+32; //@line 460 "pyexpat.c"
        var $131=HEAP[$130]; //@line 460 "pyexpat.c"
        var $132=($131)==0; //@line 460 "pyexpat.c"
        if ($132) { __label__ = 47; break; } else { __label__ = 46; break; } //@line 460 "pyexpat.c"
      case 46: // $bb_i4
        var $133=$self_addr_i1; //@line 460 "pyexpat.c"
        var $134=$133+40; //@line 460 "pyexpat.c"
        var $135=HEAP[$134]; //@line 460 "pyexpat.c"
        var $136=($135)==0; //@line 460 "pyexpat.c"
        if ($136) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 460 "pyexpat.c"
      case 47: // $bb1_i5
        $3=0; //@line 461 "pyexpat.c"
        __label__ = 49; break; //@line 461 "pyexpat.c"
      case 48: // $bb2_i6
        var $137=$self_addr_i1; //@line 462 "pyexpat.c"
        var $138=$137+40; //@line 462 "pyexpat.c"
        var $139=HEAP[$138]; //@line 462 "pyexpat.c"
        var $140=$self_addr_i1; //@line 462 "pyexpat.c"
        var $141=$140+32; //@line 462 "pyexpat.c"
        var $142=HEAP[$141]; //@line 462 "pyexpat.c"
        var $143=$self_addr_i1; //@line 462 "pyexpat.c"
        var $144=_call_character_handler($143, $142, $139); //@line 462 "pyexpat.c"
        $rc_i3=$144; //@line 462 "pyexpat.c"
        var $145=$self_addr_i1; //@line 463 "pyexpat.c"
        var $146=$145+40; //@line 463 "pyexpat.c"
        HEAP[$146]=0; //@line 463 "pyexpat.c"
        var $147=$rc_i3; //@line 464 "pyexpat.c"
        $3=$147; //@line 464 "pyexpat.c"
        __label__ = 49; break; //@line 464 "pyexpat.c"
      case 49: // $flush_character_buffer_exit8
        var $148=$3; //@line 461 "pyexpat.c"
        $retval_i2=$148; //@line 461 "pyexpat.c"
        __label__ = 50; break; //@line 1629 "pyexpat.c"
      case 50: // $bb43
        var $149=$self_addr; //@line 1632 "pyexpat.c"
        var $150=$149+32; //@line 1632 "pyexpat.c"
        var $151=HEAP[$150]; //@line 1632 "pyexpat.c"
        _free($151); //@line 1632 "pyexpat.c"
        __label__ = 51; break; //@line 1632 "pyexpat.c"
      case 51: // $bb44
        var $152=$new_buffer_size; //@line 1634 "pyexpat.c"
        var $153=_malloc($152); //@line 1634 "pyexpat.c"
        var $154=$self_addr; //@line 1634 "pyexpat.c"
        var $155=$154+32; //@line 1634 "pyexpat.c"
        HEAP[$155]=$153; //@line 1634 "pyexpat.c"
        var $156=$self_addr; //@line 1635 "pyexpat.c"
        var $157=$156+32; //@line 1635 "pyexpat.c"
        var $158=HEAP[$157]; //@line 1635 "pyexpat.c"
        var $159=($158)==0; //@line 1635 "pyexpat.c"
        if ($159) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 1635 "pyexpat.c"
      case 52: // $bb45
        var $160=_PyErr_NoMemory(); //@line 1636 "pyexpat.c"
        $5=-1; //@line 1637 "pyexpat.c"
        __label__ = 78; break; //@line 1637 "pyexpat.c"
      case 53: // $bb46
        var $161=$self_addr; //@line 1639 "pyexpat.c"
        var $162=$161+36; //@line 1639 "pyexpat.c"
        var $163=$new_buffer_size; //@line 1639 "pyexpat.c"
        HEAP[$162]=$163; //@line 1639 "pyexpat.c"
        $5=0; //@line 1640 "pyexpat.c"
        __label__ = 78; break; //@line 1640 "pyexpat.c"
      case 54: // $bb47
        var $164=$name_addr; //@line 1643 "pyexpat.c"
        var $165=_strcmp($164, __str83); //@line 1643 "pyexpat.c"
        var $166=($165)==0; //@line 1643 "pyexpat.c"
        if ($166) { __label__ = 55; break; } else { __label__ = 60; break; } //@line 1643 "pyexpat.c"
      case 55: // $bb48
        var $167=$self_addr; //@line 1649 "pyexpat.c"
        $self_addr_i9=$167;
        var $168=$self_addr_i9; //@line 460 "pyexpat.c"
        var $169=$168+32; //@line 460 "pyexpat.c"
        var $170=HEAP[$169]; //@line 460 "pyexpat.c"
        var $171=($170)==0; //@line 460 "pyexpat.c"
        if ($171) { __label__ = 57; break; } else { __label__ = 56; break; } //@line 460 "pyexpat.c"
      case 56: // $bb_i12
        var $172=$self_addr_i9; //@line 460 "pyexpat.c"
        var $173=$172+40; //@line 460 "pyexpat.c"
        var $174=HEAP[$173]; //@line 460 "pyexpat.c"
        var $175=($174)==0; //@line 460 "pyexpat.c"
        if ($175) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 460 "pyexpat.c"
      case 57: // $flush_character_buffer_exit16_thread
        $2=0; //@line 461 "pyexpat.c"
        $retval_i10=0; //@line 461 "pyexpat.c"
        __label__ = 60; break;
      case 58: // $flush_character_buffer_exit16
        var $176=$self_addr_i9; //@line 462 "pyexpat.c"
        var $177=$176+40; //@line 462 "pyexpat.c"
        var $178=HEAP[$177]; //@line 462 "pyexpat.c"
        var $179=$self_addr_i9; //@line 462 "pyexpat.c"
        var $180=$179+32; //@line 462 "pyexpat.c"
        var $181=HEAP[$180]; //@line 462 "pyexpat.c"
        var $182=$self_addr_i9; //@line 462 "pyexpat.c"
        var $183=_call_character_handler($182, $181, $178); //@line 462 "pyexpat.c"
        $rc_i11=$183; //@line 462 "pyexpat.c"
        var $184=$self_addr_i9; //@line 463 "pyexpat.c"
        var $185=$184+40; //@line 463 "pyexpat.c"
        HEAP[$185]=0; //@line 463 "pyexpat.c"
        var $186=$rc_i11; //@line 464 "pyexpat.c"
        $2=$186; //@line 464 "pyexpat.c"
        $retval_i10=$186; //@line 461 "pyexpat.c"
        var $187=($186) < 0; //@line 1649 "pyexpat.c"
        if ($187) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 1649 "pyexpat.c"
      case 59: // $bb49
        $5=-1; //@line 1650 "pyexpat.c"
        __label__ = 78; break; //@line 1650 "pyexpat.c"
      case 60: // $bb50
        var $188=$self_addr; //@line 1652 "pyexpat.c"
        var $189=$name_addr; //@line 1652 "pyexpat.c"
        var $190=$v_addr; //@line 1652 "pyexpat.c"
        $self_addr_i17=$188;
        $name_addr_i=$189;
        $v_addr_i=$190;
        var $191=$name_addr_i; //@line 1503 "pyexpat.c"
        $name_addr_i_i=$191;
        $i_i_i=0; //@line 1379 "pyexpat.c"
        __label__ = 63; break; //@line 1379 "pyexpat.c"
      case 61: // $bb_i_i
        var $192=$i_i_i; //@line 1380 "pyexpat.c"
        var $193=_handler_info+$192*20; //@line 1380 "pyexpat.c"
        var $194=$193; //@line 1380 "pyexpat.c"
        var $195=HEAP[$194]; //@line 1380 "pyexpat.c"
        var $196=$name_addr_i_i; //@line 1380 "pyexpat.c"
        var $197=_strcmp($196, $195); //@line 1380 "pyexpat.c"
        var $198=($197)==0; //@line 1380 "pyexpat.c"
        var $199=$i_i_i; //@line 1381 "pyexpat.c"
        if ($198) { __label__ = 65; break; } else { __label__ = 62; break; } //@line 1380 "pyexpat.c"
      case 62: // $bb2_i_i
        var $200=($199) + 1; //@line 1379 "pyexpat.c"
        $i_i_i=$200; //@line 1379 "pyexpat.c"
        __label__ = 63; break; //@line 1379 "pyexpat.c"
      case 63: // $bb3_i_i
        var $201=$i_i_i; //@line 1379 "pyexpat.c"
        var $202=_handler_info+$201*20; //@line 1379 "pyexpat.c"
        var $203=$202; //@line 1379 "pyexpat.c"
        var $204=HEAP[$203]; //@line 1379 "pyexpat.c"
        var $205=($204)!=0; //@line 1379 "pyexpat.c"
        if ($205) { __label__ = 61; break; } else { __label__ = 64; break; } //@line 1379 "pyexpat.c"
      case 64: // $handlername2int_exit_thread_i
        $0=-1; //@line 1384 "pyexpat.c"
        $retval_i_i=-1; //@line 1381 "pyexpat.c"
        $handlernum_i=-1; //@line 1503 "pyexpat.c"
        __label__ = 77; break;
      case 65: // $handlername2int_exit_i
        $0=$199; //@line 1381 "pyexpat.c"
        $retval_i_i=$199; //@line 1381 "pyexpat.c"
        $handlernum_i=$199; //@line 1503 "pyexpat.c"
        var $206=($199) >= 0; //@line 1504 "pyexpat.c"
        if ($206) { __label__ = 66; break; } else { __label__ = 77; break; } //@line 1504 "pyexpat.c"
      case 66: // $bb_i19
        $c_handler_i=0; //@line 1505 "pyexpat.c"
        var $207=$self_addr_i17; //@line 1506 "pyexpat.c"
        var $208=$207+48; //@line 1506 "pyexpat.c"
        var $209=HEAP[$208]; //@line 1506 "pyexpat.c"
        var $210=$handlernum_i; //@line 1506 "pyexpat.c"
        var $211=$209+4*$210; //@line 1506 "pyexpat.c"
        var $212=HEAP[$211]; //@line 1506 "pyexpat.c"
        $temp_i=$212; //@line 1506 "pyexpat.c"
        var $213=$v_addr_i; //@line 1508 "pyexpat.c"
        var $214=($213)==(__Py_NoneStruct); //@line 1508 "pyexpat.c"
        if ($214) { __label__ = 67; break; } else { __label__ = 71; break; } //@line 1508 "pyexpat.c"
      case 67: // $bb1_i20
        var $215=$handlernum_i; //@line 1520 "pyexpat.c"
        var $216=($215)==3; //@line 1520 "pyexpat.c"
        if ($216) { __label__ = 68; break; } else { __label__ = 70; break; } //@line 1520 "pyexpat.c"
      case 68: // $bb2_i21
        var $217=$self_addr_i17; //@line 1520 "pyexpat.c"
        var $218=$217+24; //@line 1520 "pyexpat.c"
        var $219=HEAP[$218]; //@line 1520 "pyexpat.c"
        var $220=($219)!=0; //@line 1520 "pyexpat.c"
        if ($220) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 1520 "pyexpat.c"
      case 69: // $bb3_i
        $c_handler_i=(FUNCTION_TABLE_OFFSET + 8); //@line 1521 "pyexpat.c"
        __label__ = 70; break; //@line 1521 "pyexpat.c"
      case 70: // $bb4_i
        $v_addr_i=0; //@line 1522 "pyexpat.c"
        __label__ = 73; break; //@line 1522 "pyexpat.c"
      case 71: // $bb5_i
        var $221=$v_addr_i; //@line 1524 "pyexpat.c"
        var $222=($221)!=0; //@line 1524 "pyexpat.c"
        if ($222) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 1524 "pyexpat.c"
      case 72: // $bb6_i
        var $223=$v_addr_i; //@line 1525 "pyexpat.c"
        var $224=$223; //@line 1525 "pyexpat.c"
        var $225=HEAP[$224]; //@line 1525 "pyexpat.c"
        var $226=($225) + 1; //@line 1525 "pyexpat.c"
        var $227=$v_addr_i; //@line 1525 "pyexpat.c"
        var $228=$227; //@line 1525 "pyexpat.c"
        HEAP[$228]=$226; //@line 1525 "pyexpat.c"
        var $229=$handlernum_i; //@line 1526 "pyexpat.c"
        var $230=_handler_info+$229*20; //@line 1526 "pyexpat.c"
        var $231=$230+8; //@line 1526 "pyexpat.c"
        var $232=HEAP[$231]; //@line 1526 "pyexpat.c"
        $c_handler_i=$232; //@line 1526 "pyexpat.c"
        __label__ = 73; break; //@line 1526 "pyexpat.c"
      case 73: // $bb7_i
        var $233=$self_addr_i17; //@line 1528 "pyexpat.c"
        var $234=$233+48; //@line 1528 "pyexpat.c"
        var $235=HEAP[$234]; //@line 1528 "pyexpat.c"
        var $236=$handlernum_i; //@line 1528 "pyexpat.c"
        var $237=$235+4*$236; //@line 1528 "pyexpat.c"
        var $238=$v_addr_i; //@line 1528 "pyexpat.c"
        HEAP[$237]=$238; //@line 1528 "pyexpat.c"
        var $239=$temp_i; //@line 1529 "pyexpat.c"
        var $240=($239)!=0; //@line 1529 "pyexpat.c"
        if ($240) { __label__ = 74; break; } else { __label__ = 76; break; } //@line 1529 "pyexpat.c"
      case 74: // $bb8_i
        var $241=$temp_i; //@line 1529 "pyexpat.c"
        var $242=$241; //@line 1529 "pyexpat.c"
        var $243=HEAP[$242]; //@line 1529 "pyexpat.c"
        var $244=($243) - 1; //@line 1529 "pyexpat.c"
        var $245=$temp_i; //@line 1529 "pyexpat.c"
        var $246=$245; //@line 1529 "pyexpat.c"
        HEAP[$246]=$244; //@line 1529 "pyexpat.c"
        var $247=$temp_i; //@line 1529 "pyexpat.c"
        var $248=$247; //@line 1529 "pyexpat.c"
        var $249=HEAP[$248]; //@line 1529 "pyexpat.c"
        var $250=($249)==0; //@line 1529 "pyexpat.c"
        if ($250) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 1529 "pyexpat.c"
      case 75: // $bb9_i
        var $251=$temp_i; //@line 1529 "pyexpat.c"
        var $252=$251+4; //@line 1529 "pyexpat.c"
        var $253=HEAP[$252]; //@line 1529 "pyexpat.c"
        var $254=$253+24; //@line 1529 "pyexpat.c"
        var $255=HEAP[$254]; //@line 1529 "pyexpat.c"
        var $256=$temp_i; //@line 1529 "pyexpat.c"
        FUNCTION_TABLE[$255]($256); //@line 1529 "pyexpat.c"
        __label__ = 76; break; //@line 1529 "pyexpat.c"
      case 76: // $bb51
        var $257=$handlernum_i; //@line 1530 "pyexpat.c"
        var $258=_handler_info+$257*20; //@line 1530 "pyexpat.c"
        var $259=$258+4; //@line 1530 "pyexpat.c"
        var $260=HEAP[$259]; //@line 1530 "pyexpat.c"
        var $261=$self_addr_i17; //@line 1530 "pyexpat.c"
        var $262=$261+8; //@line 1530 "pyexpat.c"
        var $263=HEAP[$262]; //@line 1530 "pyexpat.c"
        var $264=$c_handler_i; //@line 1530 "pyexpat.c"
        FUNCTION_TABLE[$260]($263, $264); //@line 1530 "pyexpat.c"
        $1=1; //@line 1531 "pyexpat.c"
        $retval_i18=1; //@line 1531 "pyexpat.c"
        $5=0; //@line 1653 "pyexpat.c"
        __label__ = 78; break; //@line 1653 "pyexpat.c"
      case 77: // $bb52
        $1=0; //@line 1533 "pyexpat.c"
        $retval_i18=0; //@line 1531 "pyexpat.c"
        var $265=HEAP[_PyExc_AttributeError]; //@line 1655 "pyexpat.c"
        var $266=$name_addr; //@line 1655 "pyexpat.c"
        _PyErr_SetString($265, $266); //@line 1655 "pyexpat.c"
        $5=-1; //@line 1656 "pyexpat.c"
        __label__ = 78; break; //@line 1656 "pyexpat.c"
      case 78: // $bb53
        var $267=$5; //@line 1542 "pyexpat.c"
        $retval=$267; //@line 1542 "pyexpat.c"
        var $retval54=$retval; //@line 1542 "pyexpat.c"
        ;
        return $retval54; //@line 1542 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_traverse($op, $visit, $arg) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $op_addr;
        var $visit_addr;
        var $arg_addr;
        var $retval;
        var $0;
        var $i;
        var $vret;
        $op_addr=$op;
        $visit_addr=$visit;
        $arg_addr=$arg;
        $i=0; //@line 1664 "pyexpat.c"
        __label__ = 5; break; //@line 1664 "pyexpat.c"
      case 1: // $bb
        var $1=$op_addr; //@line 1665 "pyexpat.c"
        var $2=$1+48; //@line 1665 "pyexpat.c"
        var $3=HEAP[$2]; //@line 1665 "pyexpat.c"
        var $4=$i; //@line 1665 "pyexpat.c"
        var $5=$3+4*$4; //@line 1665 "pyexpat.c"
        var $6=HEAP[$5]; //@line 1665 "pyexpat.c"
        var $7=($6)!=0; //@line 1665 "pyexpat.c"
        if ($7) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 1665 "pyexpat.c"
      case 2: // $bb1
        var $8=$op_addr; //@line 1665 "pyexpat.c"
        var $9=$8+48; //@line 1665 "pyexpat.c"
        var $10=HEAP[$9]; //@line 1665 "pyexpat.c"
        var $11=$i; //@line 1665 "pyexpat.c"
        var $12=$10+4*$11; //@line 1665 "pyexpat.c"
        var $13=HEAP[$12]; //@line 1665 "pyexpat.c"
        var $14=$visit_addr; //@line 1665 "pyexpat.c"
        var $15=$arg_addr; //@line 1665 "pyexpat.c"
        var $16=FUNCTION_TABLE[$14]($13, $15); //@line 1665 "pyexpat.c"
        $vret=$16; //@line 1665 "pyexpat.c"
        var $17=$vret; //@line 1665 "pyexpat.c"
        var $18=($17)!=0; //@line 1665 "pyexpat.c"
        if ($18) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1665 "pyexpat.c"
      case 3: // $bb2
        var $19=$vret; //@line 1665 "pyexpat.c"
        $0=$19; //@line 1665 "pyexpat.c"
        __label__ = 7; break; //@line 1665 "pyexpat.c"
      case 4: // $bb3
        var $20=$i; //@line 1664 "pyexpat.c"
        var $21=($20) + 1; //@line 1664 "pyexpat.c"
        $i=$21; //@line 1664 "pyexpat.c"
        __label__ = 5; break; //@line 1664 "pyexpat.c"
      case 5: // $bb4
        var $22=$i; //@line 1664 "pyexpat.c"
        var $23=_handler_info+$22*20; //@line 1664 "pyexpat.c"
        var $24=$23; //@line 1664 "pyexpat.c"
        var $25=HEAP[$24]; //@line 1664 "pyexpat.c"
        var $26=($25)!=0; //@line 1664 "pyexpat.c"
        if ($26) { __label__ = 1; break; } else { __label__ = 6; break; } //@line 1664 "pyexpat.c"
      case 6: // $bb5
        $0=0; //@line 1666 "pyexpat.c"
        __label__ = 7; break; //@line 1666 "pyexpat.c"
      case 7: // $bb6
        var $27=$0; //@line 1665 "pyexpat.c"
        $retval=$27; //@line 1665 "pyexpat.c"
        var $retval7=$retval; //@line 1665 "pyexpat.c"
        ;
        return $retval7; //@line 1665 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _xmlparse_clear($op) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $op_addr;
        var $retval;
        var $0;
        var $_py_tmp;
        $op_addr=$op;
        var $1=$op_addr; //@line 1672 "pyexpat.c"
        _clear_handlers($1, 0); //@line 1672 "pyexpat.c"
        var $2=$op_addr; //@line 1673 "pyexpat.c"
        var $3=$2+44; //@line 1673 "pyexpat.c"
        var $4=HEAP[$3]; //@line 1673 "pyexpat.c"
        var $5=($4)!=0; //@line 1673 "pyexpat.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 1673 "pyexpat.c"
      case 1: // $bb
        var $6=$op_addr; //@line 1673 "pyexpat.c"
        var $7=$6+44; //@line 1673 "pyexpat.c"
        var $8=HEAP[$7]; //@line 1673 "pyexpat.c"
        $_py_tmp=$8; //@line 1673 "pyexpat.c"
        var $9=$op_addr; //@line 1673 "pyexpat.c"
        var $10=$9+44; //@line 1673 "pyexpat.c"
        HEAP[$10]=0; //@line 1673 "pyexpat.c"
        var $11=$_py_tmp; //@line 1673 "pyexpat.c"
        var $12=$11; //@line 1673 "pyexpat.c"
        var $13=HEAP[$12]; //@line 1673 "pyexpat.c"
        var $14=($13) - 1; //@line 1673 "pyexpat.c"
        var $15=$_py_tmp; //@line 1673 "pyexpat.c"
        var $16=$15; //@line 1673 "pyexpat.c"
        HEAP[$16]=$14; //@line 1673 "pyexpat.c"
        var $17=$_py_tmp; //@line 1673 "pyexpat.c"
        var $18=$17; //@line 1673 "pyexpat.c"
        var $19=HEAP[$18]; //@line 1673 "pyexpat.c"
        var $20=($19)==0; //@line 1673 "pyexpat.c"
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1673 "pyexpat.c"
      case 2: // $bb1
        var $21=$_py_tmp; //@line 1673 "pyexpat.c"
        var $22=$21+4; //@line 1673 "pyexpat.c"
        var $23=HEAP[$22]; //@line 1673 "pyexpat.c"
        var $24=$23+24; //@line 1673 "pyexpat.c"
        var $25=HEAP[$24]; //@line 1673 "pyexpat.c"
        var $26=$_py_tmp; //@line 1673 "pyexpat.c"
        FUNCTION_TABLE[$25]($26); //@line 1673 "pyexpat.c"
        __label__ = 3; break; //@line 1673 "pyexpat.c"
      case 3: // $bb2
        $0=0; //@line 1674 "pyexpat.c"
        var $27=$0; //@line 1674 "pyexpat.c"
        $retval=$27; //@line 1674 "pyexpat.c"
        var $retval3=$retval; //@line 1674 "pyexpat.c"
        ;
        return $retval3; //@line 1674 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _pyexpat_ParserCreate($notused, $args, $kw) {
    var __stackBase__  = STACKTOP; STACKTOP += 12; _memset(__stackBase__, 0, 12);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $encoding_addr_i;
        var $namespace_separator_addr_i;
        var $intern_addr_i;
        var $retval_i;
        var $0;
        var $i_i;
        var $self_i;
        var $notused_addr;
        var $args_addr;
        var $kw_addr;
        var $retval;
        var $1;
        var $encoding=__stackBase__;
        var $namespace_separator=__stackBase__+4;
        var $intern=__stackBase__+8;
        var $result;
        var $intern_decref;
        $notused_addr=$notused;
        $args_addr=$args;
        $kw_addr=$kw;
        HEAP[$encoding]=0; //@line 1725 "pyexpat.c"
        HEAP[$namespace_separator]=0; //@line 1726 "pyexpat.c"
        HEAP[$intern]=0; //@line 1727 "pyexpat.c"
        $intern_decref=0; //@line 1729 "pyexpat.c"
        var $2=$args_addr; //@line 1733 "pyexpat.c"
        var $3=$kw_addr; //@line 1733 "pyexpat.c"
        var $4=_PyArg_ParseTupleAndKeywords($2, $3, __str85, _kwlist_11531, $encoding, $namespace_separator, $intern); //@line 1733 "pyexpat.c"
        var $5=($4)==0; //@line 1733 "pyexpat.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1733 "pyexpat.c"
      case 1: // $bb
        $1=0; //@line 1735 "pyexpat.c"
        __label__ = 35; break; //@line 1735 "pyexpat.c"
      case 2: // $bb1
        var $6=HEAP[$namespace_separator]; //@line 1736 "pyexpat.c"
        var $7=($6)!=0; //@line 1736 "pyexpat.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1736 "pyexpat.c"
      case 3: // $bb2
        var $8=HEAP[$namespace_separator]; //@line 1736 "pyexpat.c"
        var $9=_strlen($8); //@line 1736 "pyexpat.c"
        var $10=($9) > 1; //@line 1736 "pyexpat.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1736 "pyexpat.c"
      case 4: // $bb3
        var $11=HEAP[_PyExc_ValueError]; //@line 1738 "pyexpat.c"
        _PyErr_SetString($11, __str88); //@line 1738 "pyexpat.c"
        $1=0; //@line 1741 "pyexpat.c"
        __label__ = 35; break; //@line 1741 "pyexpat.c"
      case 5: // $bb4
        var $12=HEAP[$intern]; //@line 1745 "pyexpat.c"
        var $13=($12)==(__Py_NoneStruct); //@line 1745 "pyexpat.c"
        if ($13) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1745 "pyexpat.c"
      case 6: // $bb5
        HEAP[$intern]=0; //@line 1746 "pyexpat.c"
        __label__ = 13; break; //@line 1746 "pyexpat.c"
      case 7: // $bb6
        var $14=HEAP[$intern]; //@line 1747 "pyexpat.c"
        var $15=($14)==0; //@line 1747 "pyexpat.c"
        if ($15) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 1747 "pyexpat.c"
      case 8: // $bb7
        var $16=_PyDict_New(); //@line 1748 "pyexpat.c"
        HEAP[$intern]=$16; //@line 1748 "pyexpat.c"
        var $17=HEAP[$intern]; //@line 1749 "pyexpat.c"
        var $18=($17)==0; //@line 1749 "pyexpat.c"
        if ($18) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1749 "pyexpat.c"
      case 9: // $bb8
        $1=0; //@line 1750 "pyexpat.c"
        __label__ = 35; break; //@line 1750 "pyexpat.c"
      case 10: // $bb9
        $intern_decref=1; //@line 1751 "pyexpat.c"
        __label__ = 13; break; //@line 1751 "pyexpat.c"
      case 11: // $bb10
        var $19=HEAP[$intern]; //@line 1753 "pyexpat.c"
        var $20=$19+4; //@line 1753 "pyexpat.c"
        var $21=HEAP[$20]; //@line 1753 "pyexpat.c"
        var $22=$21+84; //@line 1753 "pyexpat.c"
        var $23=HEAP[$22]; //@line 1753 "pyexpat.c"
        var $24=($23) & 536870912; //@line 1753 "pyexpat.c"
        var $25=($24)==0; //@line 1753 "pyexpat.c"
        if ($25) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1753 "pyexpat.c"
      case 12: // $bb11
        var $26=HEAP[_PyExc_TypeError]; //@line 1754 "pyexpat.c"
        _PyErr_SetString($26, __str89); //@line 1754 "pyexpat.c"
        $1=0; //@line 1755 "pyexpat.c"
        __label__ = 35; break; //@line 1755 "pyexpat.c"
      case 13: // $bb12
        var $27=HEAP[$intern]; //@line 1758 "pyexpat.c"
        var $28=HEAP[$namespace_separator]; //@line 1758 "pyexpat.c"
        var $29=HEAP[$encoding]; //@line 1758 "pyexpat.c"
        $encoding_addr_i=$29;
        $namespace_separator_addr_i=$28;
        $intern_addr_i=$27;
        var $30=__PyObject_GC_New(_Xmlparsetype); //@line 1278 "pyexpat.c"
        var $31=$30; //@line 1278 "pyexpat.c"
        $self_i=$31; //@line 1278 "pyexpat.c"
        var $32=($31)==0; //@line 1282 "pyexpat.c"
        if ($32) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1282 "pyexpat.c"
      case 14: // $bb_i
        $0=0; //@line 1283 "pyexpat.c"
        __label__ = 31; break; //@line 1283 "pyexpat.c"
      case 15: // $bb1_i
        var $33=$self_i; //@line 1286 "pyexpat.c"
        var $34=$33+12; //@line 1286 "pyexpat.c"
        HEAP[$34]=1; //@line 1286 "pyexpat.c"
        var $35=$self_i; //@line 1291 "pyexpat.c"
        var $36=$35+32; //@line 1291 "pyexpat.c"
        HEAP[$36]=0; //@line 1291 "pyexpat.c"
        var $37=$self_i; //@line 1292 "pyexpat.c"
        var $38=$37+36; //@line 1292 "pyexpat.c"
        HEAP[$38]=8192; //@line 1292 "pyexpat.c"
        var $39=$self_i; //@line 1293 "pyexpat.c"
        var $40=$39+40; //@line 1293 "pyexpat.c"
        HEAP[$40]=0; //@line 1293 "pyexpat.c"
        var $41=$self_i; //@line 1294 "pyexpat.c"
        var $42=$41+16; //@line 1294 "pyexpat.c"
        HEAP[$42]=0; //@line 1294 "pyexpat.c"
        var $43=$self_i; //@line 1295 "pyexpat.c"
        var $44=$43+20; //@line 1295 "pyexpat.c"
        HEAP[$44]=0; //@line 1295 "pyexpat.c"
        var $45=$self_i; //@line 1296 "pyexpat.c"
        var $46=$45+24; //@line 1296 "pyexpat.c"
        HEAP[$46]=0; //@line 1296 "pyexpat.c"
        var $47=$self_i; //@line 1297 "pyexpat.c"
        var $48=$47+28; //@line 1297 "pyexpat.c"
        HEAP[$48]=0; //@line 1297 "pyexpat.c"
        var $49=$self_i; //@line 1298 "pyexpat.c"
        var $50=$49+48; //@line 1298 "pyexpat.c"
        HEAP[$50]=0; //@line 1298 "pyexpat.c"
        var $51=$namespace_separator_addr_i; //@line 1299 "pyexpat.c"
        var $52=($51)!=0; //@line 1299 "pyexpat.c"
        if ($52) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1299 "pyexpat.c"
      case 16: // $bb2_i
        var $53=$namespace_separator_addr_i; //@line 1300 "pyexpat.c"
        var $54=HEAP[$53]; //@line 1300 "pyexpat.c"
        var $55=($54); //@line 1300 "pyexpat.c"
        var $56=$encoding_addr_i; //@line 1300 "pyexpat.c"
        var $57=((($55)) & 255); //@line 1300 "pyexpat.c"
        var $58=_XML_ParserCreateNS($56, $57); //@line 1300 "pyexpat.c"
        var $59=$self_i; //@line 1300 "pyexpat.c"
        var $60=$59+8; //@line 1300 "pyexpat.c"
        HEAP[$60]=$58; //@line 1300 "pyexpat.c"
        __label__ = 18; break; //@line 1300 "pyexpat.c"
      case 17: // $bb3_i
        var $61=$encoding_addr_i; //@line 1303 "pyexpat.c"
        var $62=_XML_ParserCreate($61); //@line 1303 "pyexpat.c"
        var $63=$self_i; //@line 1303 "pyexpat.c"
        var $64=$63+8; //@line 1303 "pyexpat.c"
        HEAP[$64]=$62; //@line 1303 "pyexpat.c"
        __label__ = 18; break; //@line 1303 "pyexpat.c"
      case 18: // $bb4_i
        var $65=$self_i; //@line 1305 "pyexpat.c"
        var $66=$65+44; //@line 1305 "pyexpat.c"
        var $67=$intern_addr_i; //@line 1305 "pyexpat.c"
        HEAP[$66]=$67; //@line 1305 "pyexpat.c"
        var $68=$self_i; //@line 1306 "pyexpat.c"
        var $69=$68+44; //@line 1306 "pyexpat.c"
        var $70=HEAP[$69]; //@line 1306 "pyexpat.c"
        var $71=($70)!=0; //@line 1306 "pyexpat.c"
        if ($71) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1306 "pyexpat.c"
      case 19: // $bb5_i
        var $72=$self_i; //@line 1306 "pyexpat.c"
        var $73=$72+44; //@line 1306 "pyexpat.c"
        var $74=HEAP[$73]; //@line 1306 "pyexpat.c"
        var $75=$74; //@line 1306 "pyexpat.c"
        var $76=HEAP[$75]; //@line 1306 "pyexpat.c"
        var $77=($76) + 1; //@line 1306 "pyexpat.c"
        var $78=$74; //@line 1306 "pyexpat.c"
        HEAP[$78]=$77; //@line 1306 "pyexpat.c"
        __label__ = 20; break; //@line 1306 "pyexpat.c"
      case 20: // $bb6_i
        var $79=$self_i; //@line 1308 "pyexpat.c"
        var $80=$79; //@line 1308 "pyexpat.c"
        _PyObject_GC_Track($80); //@line 1308 "pyexpat.c"
        var $81=$self_i; //@line 1312 "pyexpat.c"
        var $82=$81+8; //@line 1312 "pyexpat.c"
        var $83=HEAP[$82]; //@line 1312 "pyexpat.c"
        var $84=($83)==0; //@line 1312 "pyexpat.c"
        if ($84) { __label__ = 21; break; } else { __label__ = 24; break; } //@line 1312 "pyexpat.c"
      case 21: // $bb7_i
        var $85=HEAP[_PyExc_RuntimeError]; //@line 1313 "pyexpat.c"
        _PyErr_SetString($85, __str63); //@line 1313 "pyexpat.c"
        var $86=$self_i; //@line 1315 "pyexpat.c"
        var $87=$86; //@line 1315 "pyexpat.c"
        var $88=$87; //@line 1315 "pyexpat.c"
        var $89=HEAP[$88]; //@line 1315 "pyexpat.c"
        var $90=($89) - 1; //@line 1315 "pyexpat.c"
        var $91=$87; //@line 1315 "pyexpat.c"
        HEAP[$91]=$90; //@line 1315 "pyexpat.c"
        var $92=$87; //@line 1315 "pyexpat.c"
        var $93=HEAP[$92]; //@line 1315 "pyexpat.c"
        var $94=($93)==0; //@line 1315 "pyexpat.c"
        if ($94) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1315 "pyexpat.c"
      case 22: // $bb8_i
        var $95=$self_i; //@line 1315 "pyexpat.c"
        var $96=$95; //@line 1315 "pyexpat.c"
        var $97=$96+4; //@line 1315 "pyexpat.c"
        var $98=HEAP[$97]; //@line 1315 "pyexpat.c"
        var $99=$98+24; //@line 1315 "pyexpat.c"
        var $100=HEAP[$99]; //@line 1315 "pyexpat.c"
        var $101=$self_i; //@line 1315 "pyexpat.c"
        var $102=$101; //@line 1315 "pyexpat.c"
        FUNCTION_TABLE[$100]($102); //@line 1315 "pyexpat.c"
        __label__ = 23; break; //@line 1315 "pyexpat.c"
      case 23: // $bb9_i
        $0=0; //@line 1316 "pyexpat.c"
        __label__ = 31; break; //@line 1316 "pyexpat.c"
      case 24: // $bb10_i
        var $103=$self_i; //@line 1318 "pyexpat.c"
        var $104=$103+8; //@line 1318 "pyexpat.c"
        var $105=HEAP[$104]; //@line 1318 "pyexpat.c"
        var $106=$self_i; //@line 1318 "pyexpat.c"
        var $107=$106; //@line 1318 "pyexpat.c"
        _XML_SetUserData($105, $107); //@line 1318 "pyexpat.c"
        var $108=$self_i; //@line 1320 "pyexpat.c"
        var $109=$108+8; //@line 1320 "pyexpat.c"
        var $110=HEAP[$109]; //@line 1320 "pyexpat.c"
        _XML_SetUnknownEncodingHandler($110, (FUNCTION_TABLE_OFFSET + 10), 0); //@line 1320 "pyexpat.c"
        $i_i=0; //@line 1324 "pyexpat.c"
        var $111=$i_i; //@line 1324 "pyexpat.c"
        var $112=_handler_info+$111*20; //@line 1324 "pyexpat.c"
        var $113=$112; //@line 1324 "pyexpat.c"
        var $114=HEAP[$113]; //@line 1324 "pyexpat.c"
        var $115=($114)!=0; //@line 1324 "pyexpat.c"
        var $116=$i_i; //@line 1324 "pyexpat.c"
        if ($115) { __lastLabel__ = 24; __label__ = 25; break; } else { __lastLabel__ = 24; __label__ = 26; break; } //@line 1324 "pyexpat.c"
      case 25: // $bb11_i
        var $117=__lastLabel__ == 25 ? $124 : ($116);
        var $118=($117) + 1; //@line 1324 "pyexpat.c"
        $i_i=$118; //@line 1324 "pyexpat.c"
        var $119=$i_i; //@line 1324 "pyexpat.c"
        var $120=_handler_info+$119*20; //@line 1324 "pyexpat.c"
        var $121=$120; //@line 1324 "pyexpat.c"
        var $122=HEAP[$121]; //@line 1324 "pyexpat.c"
        var $123=($122)!=0; //@line 1324 "pyexpat.c"
        var $124=$i_i; //@line 1324 "pyexpat.c"
        if ($123) { __lastLabel__ = 25; __label__ = 25; break; } else { __lastLabel__ = 25; __label__ = 26; break; } //@line 1324 "pyexpat.c"
      case 26: // $bb13_i
        var $_lcssa_i=__lastLabel__ == 24 ? $116 : ($124);
        var $125=($_lcssa_i) * 4; //@line 1327 "pyexpat.c"
        var $126=_malloc($125); //@line 1327 "pyexpat.c"
        var $127=$126; //@line 1327 "pyexpat.c"
        var $128=$self_i; //@line 1327 "pyexpat.c"
        var $129=$128+48; //@line 1327 "pyexpat.c"
        HEAP[$129]=$127; //@line 1327 "pyexpat.c"
        var $130=$self_i; //@line 1328 "pyexpat.c"
        var $131=$130+48; //@line 1328 "pyexpat.c"
        var $132=HEAP[$131]; //@line 1328 "pyexpat.c"
        var $133=($132)==0; //@line 1328 "pyexpat.c"
        var $134=$self_i; //@line 1329 "pyexpat.c"
        if ($133) { __label__ = 27; break; } else { __label__ = 30; break; } //@line 1328 "pyexpat.c"
      case 27: // $bb14_i
        var $135=$134; //@line 1329 "pyexpat.c"
        var $136=$135; //@line 1329 "pyexpat.c"
        var $137=HEAP[$136]; //@line 1329 "pyexpat.c"
        var $138=($137) - 1; //@line 1329 "pyexpat.c"
        var $139=$135; //@line 1329 "pyexpat.c"
        HEAP[$139]=$138; //@line 1329 "pyexpat.c"
        var $140=$135; //@line 1329 "pyexpat.c"
        var $141=HEAP[$140]; //@line 1329 "pyexpat.c"
        var $142=($141)==0; //@line 1329 "pyexpat.c"
        if ($142) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1329 "pyexpat.c"
      case 28: // $bb15_i
        var $143=$self_i; //@line 1329 "pyexpat.c"
        var $144=$143; //@line 1329 "pyexpat.c"
        var $145=$144+4; //@line 1329 "pyexpat.c"
        var $146=HEAP[$145]; //@line 1329 "pyexpat.c"
        var $147=$146+24; //@line 1329 "pyexpat.c"
        var $148=HEAP[$147]; //@line 1329 "pyexpat.c"
        var $149=$self_i; //@line 1329 "pyexpat.c"
        var $150=$149; //@line 1329 "pyexpat.c"
        FUNCTION_TABLE[$148]($150); //@line 1329 "pyexpat.c"
        __label__ = 29; break; //@line 1329 "pyexpat.c"
      case 29: // $bb16_i
        var $151=_PyErr_NoMemory(); //@line 1330 "pyexpat.c"
        $0=$151; //@line 1330 "pyexpat.c"
        __label__ = 31; break; //@line 1330 "pyexpat.c"
      case 30: // $bb17_i
        _clear_handlers($134, 1); //@line 1332 "pyexpat.c"
        var $152=$self_i; //@line 1334 "pyexpat.c"
        var $153=$152; //@line 1334 "pyexpat.c"
        $0=$153; //@line 1334 "pyexpat.c"
        __label__ = 31; break; //@line 1334 "pyexpat.c"
      case 31: // $newxmlparseobject_exit
        var $154=$0; //@line 1283 "pyexpat.c"
        $retval_i=$154; //@line 1283 "pyexpat.c"
        var $retval19_i=$retval_i; //@line 1283 "pyexpat.c"
        $result=$retval19_i; //@line 1758 "pyexpat.c"
        var $155=$intern_decref; //@line 1759 "pyexpat.c"
        var $156=($155)!=0; //@line 1759 "pyexpat.c"
        if ($156) { __label__ = 32; break; } else { __label__ = 34; break; } //@line 1759 "pyexpat.c"
      case 32: // $bb13
        var $157=HEAP[$intern]; //@line 1760 "pyexpat.c"
        var $158=$157; //@line 1760 "pyexpat.c"
        var $159=HEAP[$158]; //@line 1760 "pyexpat.c"
        var $160=($159) - 1; //@line 1760 "pyexpat.c"
        var $161=$157; //@line 1760 "pyexpat.c"
        HEAP[$161]=$160; //@line 1760 "pyexpat.c"
        var $162=$157; //@line 1760 "pyexpat.c"
        var $163=HEAP[$162]; //@line 1760 "pyexpat.c"
        var $164=($163)==0; //@line 1760 "pyexpat.c"
        if ($164) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 1760 "pyexpat.c"
      case 33: // $bb14
        var $165=HEAP[$intern]; //@line 1760 "pyexpat.c"
        var $166=$165+4; //@line 1760 "pyexpat.c"
        var $167=HEAP[$166]; //@line 1760 "pyexpat.c"
        var $168=$167+24; //@line 1760 "pyexpat.c"
        var $169=HEAP[$168]; //@line 1760 "pyexpat.c"
        var $170=HEAP[$intern]; //@line 1760 "pyexpat.c"
        FUNCTION_TABLE[$169]($170); //@line 1760 "pyexpat.c"
        __label__ = 34; break; //@line 1760 "pyexpat.c"
      case 34: // $bb15
        var $171=$result; //@line 1762 "pyexpat.c"
        $1=$171; //@line 1762 "pyexpat.c"
        __label__ = 35; break; //@line 1762 "pyexpat.c"
      case 35: // $bb16
        var $172=$1; //@line 1735 "pyexpat.c"
        $retval=$172; //@line 1735 "pyexpat.c"
        var $retval17=$retval; //@line 1735 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval17; //@line 1735 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _pyexpat_ErrorString($self, $args) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $args_addr;
        var $retval;
        var $0;
        var $code=__stackBase__;
        $self_addr=$self;
        $args_addr=$args;
        HEAP[$code]=0; //@line 1772 "pyexpat.c"
        var $1=$args_addr; //@line 1774 "pyexpat.c"
        var $2=_PyArg_ParseTuple($1, __str90, $code); //@line 1774 "pyexpat.c"
        var $3=($2)==0; //@line 1774 "pyexpat.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1774 "pyexpat.c"
      case 1: // $bb
        $0=0; //@line 1775 "pyexpat.c"
        __label__ = 3; break; //@line 1775 "pyexpat.c"
      case 2: // $bb1
        var $4=HEAP[$code]; //@line 1776 "pyexpat.c"
        var $5=_XML_ErrorString($4); //@line 1776 "pyexpat.c"
        var $6=_Py_BuildValue(__str51, $5); //@line 1776 "pyexpat.c"
        $0=$6; //@line 1776 "pyexpat.c"
        __label__ = 3; break; //@line 1776 "pyexpat.c"
      case 3: // $bb2
        var $7=$0; //@line 1775 "pyexpat.c"
        $retval=$7; //@line 1775 "pyexpat.c"
        var $retval3=$retval; //@line 1775 "pyexpat.c"
        STACKTOP = __stackBase__;
        return $retval3; //@line 1775 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _initpyexpat() {
    var __stackBase__  = STACKTOP; STACKTOP += 12; _memset(__stackBase__, 0, 12);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $i_i;
        var $m;
        var $d;
        var $errmod_name;
        var $errors_module;
        var $modelmod_name;
        var $model_module;
        var $sys_modules;
        var $version;
        var $capi_object;
        var $info=__stackBase__;
        var $features;
        var $list;
        var $i;
        var $ok;
        var $item;
        var $0=_PyString_FromString(__str93); //@line 1819 "pyexpat.c"
        $errmod_name=$0; //@line 1819 "pyexpat.c"
        var $1=$errmod_name; //@line 1828 "pyexpat.c"
        var $2=($1)==0; //@line 1828 "pyexpat.c"
        if ($2) { __label__ = 37; break; } else { __label__ = 1; break; } //@line 1828 "pyexpat.c"
      case 1: // $bb
        var $3=_PyString_FromString(__str94); //@line 1830 "pyexpat.c"
        $modelmod_name=$3; //@line 1830 "pyexpat.c"
        var $4=$modelmod_name; //@line 1831 "pyexpat.c"
        var $5=($4)==0; //@line 1831 "pyexpat.c"
        if ($5) { __label__ = 37; break; } else { __label__ = 2; break; } //@line 1831 "pyexpat.c"
      case 2: // $bb1
        HEAP[_Xmlparsetype+4]=_PyType_Type; //@line 1834 "pyexpat.c"
        var $6=_Py_InitModule4(__str95, _pyexpat_methods, _pyexpat_module_documentation, 0, 1013); //@line 1837 "pyexpat.c"
        $m=$6; //@line 1837 "pyexpat.c"
        var $7=$m; //@line 1839 "pyexpat.c"
        var $8=($7)==0; //@line 1839 "pyexpat.c"
        if ($8) { __label__ = 37; break; } else { __label__ = 3; break; } //@line 1839 "pyexpat.c"
      case 3: // $bb2
        var $9=HEAP[_ErrorObject]; //@line 1843 "pyexpat.c"
        var $10=($9)==0; //@line 1843 "pyexpat.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1843 "pyexpat.c"
      case 4: // $bb3
        var $11=_PyErr_NewException(__str96, 0, 0); //@line 1844 "pyexpat.c"
        HEAP[_ErrorObject]=$11; //@line 1844 "pyexpat.c"
        var $12=HEAP[_ErrorObject]; //@line 1846 "pyexpat.c"
        var $13=($12)==0; //@line 1846 "pyexpat.c"
        if ($13) { __label__ = 37; break; } else { __label__ = 5; break; } //@line 1846 "pyexpat.c"
      case 5: // $bb4
        var $14=HEAP[_ErrorObject]; //@line 1849 "pyexpat.c"
        var $15=$14; //@line 1849 "pyexpat.c"
        var $16=HEAP[$15]; //@line 1849 "pyexpat.c"
        var $17=($16) + 1; //@line 1849 "pyexpat.c"
        var $18=$14; //@line 1849 "pyexpat.c"
        HEAP[$18]=$17; //@line 1849 "pyexpat.c"
        var $19=HEAP[_ErrorObject]; //@line 1850 "pyexpat.c"
        var $20=$m; //@line 1850 "pyexpat.c"
        var $21=_PyModule_AddObject($20, __str97, $19); //@line 1850 "pyexpat.c"
        var $22=HEAP[_ErrorObject]; //@line 1851 "pyexpat.c"
        var $23=$22; //@line 1851 "pyexpat.c"
        var $24=HEAP[$23]; //@line 1851 "pyexpat.c"
        var $25=($24) + 1; //@line 1851 "pyexpat.c"
        var $26=$22; //@line 1851 "pyexpat.c"
        HEAP[$26]=$25; //@line 1851 "pyexpat.c"
        var $27=HEAP[_ErrorObject]; //@line 1852 "pyexpat.c"
        var $28=$m; //@line 1852 "pyexpat.c"
        var $29=_PyModule_AddObject($28, __str98, $27); //@line 1852 "pyexpat.c"
        var $30=HEAP[_Xmlparsetype]; //@line 1853 "pyexpat.c"
        var $31=($30) + 1; //@line 1853 "pyexpat.c"
        HEAP[_Xmlparsetype]=$31; //@line 1853 "pyexpat.c"
        var $32=$m; //@line 1854 "pyexpat.c"
        var $33=_PyModule_AddObject($32, __str99, _Xmlparsetype); //@line 1854 "pyexpat.c"
        var $34=_PyString_FromString(__str100); //@line 1856 "pyexpat.c"
        $version=$34; //@line 1856 "pyexpat.c"
        var $35=($34)==0; //@line 1857 "pyexpat.c"
        if ($35) { __label__ = 37; break; } else { __label__ = 6; break; } //@line 1857 "pyexpat.c"
      case 6: // $bb5
        var $36=$m; //@line 1859 "pyexpat.c"
        var $37=$version; //@line 1859 "pyexpat.c"
        var $38=_PyModule_AddObject($36, __str101, $37); //@line 1859 "pyexpat.c"
        var $39=_XML_ExpatVersion(); //@line 1860 "pyexpat.c"
        var $40=$m; //@line 1860 "pyexpat.c"
        var $41=_PyModule_AddStringConstant($40, __str102, $39); //@line 1860 "pyexpat.c"
        _XML_ExpatVersionInfo($info); //@line 1863 "pyexpat.c"
        var $42=$info+8; //@line 1864 "pyexpat.c"
        var $43=HEAP[$42]; //@line 1864 "pyexpat.c"
        var $44=$info+4; //@line 1864 "pyexpat.c"
        var $45=HEAP[$44]; //@line 1864 "pyexpat.c"
        var $46=$info; //@line 1864 "pyexpat.c"
        var $47=HEAP[$46]; //@line 1864 "pyexpat.c"
        var $48=_Py_BuildValue(__str103, $47, $45, $43); //@line 1864 "pyexpat.c"
        var $49=$m; //@line 1864 "pyexpat.c"
        var $50=_PyModule_AddObject($49, __str104, $48); //@line 1864 "pyexpat.c"
        $i_i=0; //@line 1230 "pyexpat.c"
        __label__ = 7; break;
      case 7: // $bb_i
        var $51=$i_i; //@line 1231 "pyexpat.c"
        var $52=$i_i; //@line 1231 "pyexpat.c"
        var $53=((($52)) & 255); //@line 1231 "pyexpat.c"
        var $54=_template_buffer+$51; //@line 1231 "pyexpat.c"
        HEAP[$54]=$53; //@line 1231 "pyexpat.c"
        var $55=$i_i; //@line 1230 "pyexpat.c"
        var $56=($55) + 1; //@line 1230 "pyexpat.c"
        $i_i=$56; //@line 1230 "pyexpat.c"
        var $57=($56) <= 255; //@line 1230 "pyexpat.c"
        if ($57) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1230 "pyexpat.c"
      case 8: // $init_template_buffer_exit
        HEAP[_template_buffer+256]=0; //@line 1233 "pyexpat.c"
        var $58=$m; //@line 1875 "pyexpat.c"
        var $59=_PyModule_AddStringConstant($58, __str105, __str106); //@line 1875 "pyexpat.c"
        var $60=_PySys_GetObject(__str107); //@line 1877 "pyexpat.c"
        $sys_modules=$60; //@line 1877 "pyexpat.c"
        var $61=$m; //@line 1878 "pyexpat.c"
        var $62=_PyModule_GetDict($61); //@line 1878 "pyexpat.c"
        $d=$62; //@line 1878 "pyexpat.c"
        var $63=$d; //@line 1879 "pyexpat.c"
        var $64=$errmod_name; //@line 1879 "pyexpat.c"
        var $65=_PyDict_GetItem($63, $64); //@line 1879 "pyexpat.c"
        $errors_module=$65; //@line 1879 "pyexpat.c"
        var $66=$errors_module; //@line 1880 "pyexpat.c"
        var $67=($66)==0; //@line 1880 "pyexpat.c"
        if ($67) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 1880 "pyexpat.c"
      case 9: // $bb6
        var $68=_PyModule_New(__str93); //@line 1881 "pyexpat.c"
        $errors_module=$68; //@line 1881 "pyexpat.c"
        var $69=$errors_module; //@line 1882 "pyexpat.c"
        var $70=($69)!=0; //@line 1882 "pyexpat.c"
        if ($70) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1882 "pyexpat.c"
      case 10: // $bb7
        var $71=$sys_modules; //@line 1883 "pyexpat.c"
        var $72=$errmod_name; //@line 1883 "pyexpat.c"
        var $73=$errors_module; //@line 1883 "pyexpat.c"
        var $74=_PyDict_SetItem($71, $72, $73); //@line 1883 "pyexpat.c"
        var $75=$m; //@line 1885 "pyexpat.c"
        var $76=$errors_module; //@line 1885 "pyexpat.c"
        var $77=_PyModule_AddObject($75, __str108, $76); //@line 1885 "pyexpat.c"
        __label__ = 11; break; //@line 1885 "pyexpat.c"
      case 11: // $bb8
        var $78=$errmod_name; //@line 1888 "pyexpat.c"
        var $79=$78; //@line 1888 "pyexpat.c"
        var $80=HEAP[$79]; //@line 1888 "pyexpat.c"
        var $81=($80) - 1; //@line 1888 "pyexpat.c"
        var $82=$errmod_name; //@line 1888 "pyexpat.c"
        var $83=$82; //@line 1888 "pyexpat.c"
        HEAP[$83]=$81; //@line 1888 "pyexpat.c"
        var $84=$errmod_name; //@line 1888 "pyexpat.c"
        var $85=$84; //@line 1888 "pyexpat.c"
        var $86=HEAP[$85]; //@line 1888 "pyexpat.c"
        var $87=($86)==0; //@line 1888 "pyexpat.c"
        if ($87) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1888 "pyexpat.c"
      case 12: // $bb9
        var $88=$errmod_name; //@line 1888 "pyexpat.c"
        var $89=$88+4; //@line 1888 "pyexpat.c"
        var $90=HEAP[$89]; //@line 1888 "pyexpat.c"
        var $91=$90+24; //@line 1888 "pyexpat.c"
        var $92=HEAP[$91]; //@line 1888 "pyexpat.c"
        var $93=$errmod_name; //@line 1888 "pyexpat.c"
        FUNCTION_TABLE[$92]($93); //@line 1888 "pyexpat.c"
        __label__ = 13; break; //@line 1888 "pyexpat.c"
      case 13: // $bb10
        var $94=$d; //@line 1889 "pyexpat.c"
        var $95=$modelmod_name; //@line 1889 "pyexpat.c"
        var $96=_PyDict_GetItem($94, $95); //@line 1889 "pyexpat.c"
        $model_module=$96; //@line 1889 "pyexpat.c"
        var $97=($96)==0; //@line 1890 "pyexpat.c"
        if ($97) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 1890 "pyexpat.c"
      case 14: // $bb11
        var $98=_PyModule_New(__str94); //@line 1891 "pyexpat.c"
        $model_module=$98; //@line 1891 "pyexpat.c"
        var $99=$model_module; //@line 1892 "pyexpat.c"
        var $100=($99)!=0; //@line 1892 "pyexpat.c"
        if ($100) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 1892 "pyexpat.c"
      case 15: // $bb12
        var $101=$sys_modules; //@line 1893 "pyexpat.c"
        var $102=$modelmod_name; //@line 1893 "pyexpat.c"
        var $103=$model_module; //@line 1893 "pyexpat.c"
        var $104=_PyDict_SetItem($101, $102, $103); //@line 1893 "pyexpat.c"
        var $105=$m; //@line 1895 "pyexpat.c"
        var $106=$model_module; //@line 1895 "pyexpat.c"
        var $107=_PyModule_AddObject($105, __str109, $106); //@line 1895 "pyexpat.c"
        __label__ = 16; break; //@line 1895 "pyexpat.c"
      case 16: // $bb13
        var $108=$modelmod_name; //@line 1898 "pyexpat.c"
        var $109=$108; //@line 1898 "pyexpat.c"
        var $110=HEAP[$109]; //@line 1898 "pyexpat.c"
        var $111=($110) - 1; //@line 1898 "pyexpat.c"
        var $112=$modelmod_name; //@line 1898 "pyexpat.c"
        var $113=$112; //@line 1898 "pyexpat.c"
        HEAP[$113]=$111; //@line 1898 "pyexpat.c"
        var $114=$modelmod_name; //@line 1898 "pyexpat.c"
        var $115=$114; //@line 1898 "pyexpat.c"
        var $116=HEAP[$115]; //@line 1898 "pyexpat.c"
        var $117=($116)==0; //@line 1898 "pyexpat.c"
        if ($117) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1898 "pyexpat.c"
      case 17: // $bb14
        var $118=$modelmod_name; //@line 1898 "pyexpat.c"
        var $119=$118+4; //@line 1898 "pyexpat.c"
        var $120=HEAP[$119]; //@line 1898 "pyexpat.c"
        var $121=$120+24; //@line 1898 "pyexpat.c"
        var $122=HEAP[$121]; //@line 1898 "pyexpat.c"
        var $123=$modelmod_name; //@line 1898 "pyexpat.c"
        FUNCTION_TABLE[$122]($123); //@line 1898 "pyexpat.c"
        __label__ = 18; break; //@line 1898 "pyexpat.c"
      case 18: // $bb15
        var $124=$errors_module; //@line 1899 "pyexpat.c"
        var $125=($124)==0; //@line 1899 "pyexpat.c"
        if ($125) { __label__ = 37; break; } else { __label__ = 19; break; } //@line 1899 "pyexpat.c"
      case 19: // $bb16
        var $126=$model_module; //@line 1899 "pyexpat.c"
        var $127=($126)==0; //@line 1899 "pyexpat.c"
        if ($127) { __label__ = 37; break; } else { __label__ = 20; break; } //@line 1899 "pyexpat.c"
      case 20: // $bb18
        var $128=_XML_GetFeatureList(); //@line 1905 "pyexpat.c"
        $features=$128; //@line 1905 "pyexpat.c"
        var $129=_PyList_New(0); //@line 1906 "pyexpat.c"
        $list=$129; //@line 1906 "pyexpat.c"
        var $130=$list; //@line 1907 "pyexpat.c"
        var $131=($130)==0; //@line 1907 "pyexpat.c"
        if ($131) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1907 "pyexpat.c"
      case 21: // $bb19
        _PyErr_Clear(); //@line 1909 "pyexpat.c"
        __label__ = 35; break; //@line 1909 "pyexpat.c"
      case 22: // $bb20
        $i=0; //@line 1911 "pyexpat.c"
        __label__ = 32; break; //@line 1911 "pyexpat.c"
      case 23: // $bb21
        var $132=$features; //@line 1915 "pyexpat.c"
        var $133=$i; //@line 1915 "pyexpat.c"
        var $134=$132+12*$133; //@line 1915 "pyexpat.c"
        var $135=$134+8; //@line 1915 "pyexpat.c"
        var $136=HEAP[$135]; //@line 1915 "pyexpat.c"
        var $137=$features; //@line 1915 "pyexpat.c"
        var $138=$i; //@line 1915 "pyexpat.c"
        var $139=$137+12*$138; //@line 1915 "pyexpat.c"
        var $140=$139+4; //@line 1915 "pyexpat.c"
        var $141=HEAP[$140]; //@line 1915 "pyexpat.c"
        var $142=_Py_BuildValue(__str110, $141, $136); //@line 1915 "pyexpat.c"
        $item=$142; //@line 1915 "pyexpat.c"
        var $143=$item; //@line 1916 "pyexpat.c"
        var $144=($143)==0; //@line 1916 "pyexpat.c"
        var $145=$list; //@line 1917 "pyexpat.c"
        if ($144) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 1916 "pyexpat.c"
      case 24: // $bb22
        var $146=$145; //@line 1917 "pyexpat.c"
        var $147=HEAP[$146]; //@line 1917 "pyexpat.c"
        var $148=($147) - 1; //@line 1917 "pyexpat.c"
        var $149=$list; //@line 1917 "pyexpat.c"
        var $150=$149; //@line 1917 "pyexpat.c"
        HEAP[$150]=$148; //@line 1917 "pyexpat.c"
        var $151=$list; //@line 1917 "pyexpat.c"
        var $152=$151; //@line 1917 "pyexpat.c"
        var $153=HEAP[$152]; //@line 1917 "pyexpat.c"
        var $154=($153)==0; //@line 1917 "pyexpat.c"
        if ($154) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1917 "pyexpat.c"
      case 25: // $bb23
        var $155=$list; //@line 1917 "pyexpat.c"
        var $156=$155+4; //@line 1917 "pyexpat.c"
        var $157=HEAP[$156]; //@line 1917 "pyexpat.c"
        var $158=$157+24; //@line 1917 "pyexpat.c"
        var $159=HEAP[$158]; //@line 1917 "pyexpat.c"
        var $160=$list; //@line 1917 "pyexpat.c"
        FUNCTION_TABLE[$159]($160); //@line 1917 "pyexpat.c"
        __label__ = 26; break; //@line 1917 "pyexpat.c"
      case 26: // $bb31_thread
        $list=0; //@line 1918 "pyexpat.c"
        __label__ = 35; break;
      case 27: // $bb25
        var $161=$item; //@line 1921 "pyexpat.c"
        var $162=_PyList_Append($145, $161); //@line 1921 "pyexpat.c"
        $ok=$162; //@line 1921 "pyexpat.c"
        var $163=$item; //@line 1922 "pyexpat.c"
        var $164=$163; //@line 1922 "pyexpat.c"
        var $165=HEAP[$164]; //@line 1922 "pyexpat.c"
        var $166=($165) - 1; //@line 1922 "pyexpat.c"
        var $167=$item; //@line 1922 "pyexpat.c"
        var $168=$167; //@line 1922 "pyexpat.c"
        HEAP[$168]=$166; //@line 1922 "pyexpat.c"
        var $169=$item; //@line 1922 "pyexpat.c"
        var $170=$169; //@line 1922 "pyexpat.c"
        var $171=HEAP[$170]; //@line 1922 "pyexpat.c"
        var $172=($171)==0; //@line 1922 "pyexpat.c"
        if ($172) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1922 "pyexpat.c"
      case 28: // $bb26
        var $173=$item; //@line 1922 "pyexpat.c"
        var $174=$173+4; //@line 1922 "pyexpat.c"
        var $175=HEAP[$174]; //@line 1922 "pyexpat.c"
        var $176=$175+24; //@line 1922 "pyexpat.c"
        var $177=HEAP[$176]; //@line 1922 "pyexpat.c"
        var $178=$item; //@line 1922 "pyexpat.c"
        FUNCTION_TABLE[$177]($178); //@line 1922 "pyexpat.c"
        __label__ = 29; break; //@line 1922 "pyexpat.c"
      case 29: // $bb27
        var $179=$ok; //@line 1923 "pyexpat.c"
        var $180=($179) < 0; //@line 1923 "pyexpat.c"
        if ($180) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1923 "pyexpat.c"
      case 30: // $bb28
        _PyErr_Clear(); //@line 1924 "pyexpat.c"
        __label__ = 33; break; //@line 1924 "pyexpat.c"
      case 31: // $bb29
        var $181=$i; //@line 1912 "pyexpat.c"
        var $182=($181) + 1; //@line 1912 "pyexpat.c"
        $i=$182; //@line 1912 "pyexpat.c"
        __label__ = 32; break; //@line 1912 "pyexpat.c"
      case 32: // $bb30
        var $183=$features; //@line 1912 "pyexpat.c"
        var $184=$i; //@line 1912 "pyexpat.c"
        var $185=$183+12*$184; //@line 1912 "pyexpat.c"
        var $186=$185; //@line 1912 "pyexpat.c"
        var $187=HEAP[$186]; //@line 1912 "pyexpat.c"
        var $188=($187)!=0; //@line 1912 "pyexpat.c"
        if ($188) { __label__ = 23; break; } else { __label__ = 33; break; } //@line 1912 "pyexpat.c"
      case 33: // $bb31
        var $_pr=$list;
        var $189=($_pr)!=0; //@line 1928 "pyexpat.c"
        if ($189) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 1928 "pyexpat.c"
      case 34: // $bb32
        var $190=$m; //@line 1929 "pyexpat.c"
        var $191=$list; //@line 1929 "pyexpat.c"
        var $192=_PyModule_AddObject($190, __str111, $191); //@line 1929 "pyexpat.c"
        __label__ = 35; break; //@line 1929 "pyexpat.c"
      case 35: // $bb33
        var $193=_XML_ErrorString(1); //@line 1938 "pyexpat.c"
        var $194=$errors_module; //@line 1938 "pyexpat.c"
        var $195=_PyModule_AddStringConstant($194, __str112, $193); //@line 1938 "pyexpat.c"
        var $196=_XML_ErrorString(2); //@line 1939 "pyexpat.c"
        var $197=$errors_module; //@line 1939 "pyexpat.c"
        var $198=_PyModule_AddStringConstant($197, __str113, $196); //@line 1939 "pyexpat.c"
        var $199=_XML_ErrorString(3); //@line 1940 "pyexpat.c"
        var $200=$errors_module; //@line 1940 "pyexpat.c"
        var $201=_PyModule_AddStringConstant($200, __str114, $199); //@line 1940 "pyexpat.c"
        var $202=_XML_ErrorString(4); //@line 1941 "pyexpat.c"
        var $203=$errors_module; //@line 1941 "pyexpat.c"
        var $204=_PyModule_AddStringConstant($203, __str115, $202); //@line 1941 "pyexpat.c"
        var $205=_XML_ErrorString(5); //@line 1942 "pyexpat.c"
        var $206=$errors_module; //@line 1942 "pyexpat.c"
        var $207=_PyModule_AddStringConstant($206, __str116, $205); //@line 1942 "pyexpat.c"
        var $208=_XML_ErrorString(6); //@line 1943 "pyexpat.c"
        var $209=$errors_module; //@line 1943 "pyexpat.c"
        var $210=_PyModule_AddStringConstant($209, __str117, $208); //@line 1943 "pyexpat.c"
        var $211=_XML_ErrorString(7); //@line 1944 "pyexpat.c"
        var $212=$errors_module; //@line 1944 "pyexpat.c"
        var $213=_PyModule_AddStringConstant($212, __str118, $211); //@line 1944 "pyexpat.c"
        var $214=_XML_ErrorString(8); //@line 1945 "pyexpat.c"
        var $215=$errors_module; //@line 1945 "pyexpat.c"
        var $216=_PyModule_AddStringConstant($215, __str119, $214); //@line 1945 "pyexpat.c"
        var $217=_XML_ErrorString(9); //@line 1946 "pyexpat.c"
        var $218=$errors_module; //@line 1946 "pyexpat.c"
        var $219=_PyModule_AddStringConstant($218, __str120, $217); //@line 1946 "pyexpat.c"
        var $220=_XML_ErrorString(10); //@line 1947 "pyexpat.c"
        var $221=$errors_module; //@line 1947 "pyexpat.c"
        var $222=_PyModule_AddStringConstant($221, __str121, $220); //@line 1947 "pyexpat.c"
        var $223=_XML_ErrorString(11); //@line 1948 "pyexpat.c"
        var $224=$errors_module; //@line 1948 "pyexpat.c"
        var $225=_PyModule_AddStringConstant($224, __str122, $223); //@line 1948 "pyexpat.c"
        var $226=_XML_ErrorString(12); //@line 1949 "pyexpat.c"
        var $227=$errors_module; //@line 1949 "pyexpat.c"
        var $228=_PyModule_AddStringConstant($227, __str123, $226); //@line 1949 "pyexpat.c"
        var $229=_XML_ErrorString(13); //@line 1950 "pyexpat.c"
        var $230=$errors_module; //@line 1950 "pyexpat.c"
        var $231=_PyModule_AddStringConstant($230, __str124, $229); //@line 1950 "pyexpat.c"
        var $232=_XML_ErrorString(14); //@line 1951 "pyexpat.c"
        var $233=$errors_module; //@line 1951 "pyexpat.c"
        var $234=_PyModule_AddStringConstant($233, __str125, $232); //@line 1951 "pyexpat.c"
        var $235=_XML_ErrorString(15); //@line 1952 "pyexpat.c"
        var $236=$errors_module; //@line 1952 "pyexpat.c"
        var $237=_PyModule_AddStringConstant($236, __str126, $235); //@line 1952 "pyexpat.c"
        var $238=_XML_ErrorString(16); //@line 1953 "pyexpat.c"
        var $239=$errors_module; //@line 1953 "pyexpat.c"
        var $240=_PyModule_AddStringConstant($239, __str127, $238); //@line 1953 "pyexpat.c"
        var $241=_XML_ErrorString(17); //@line 1954 "pyexpat.c"
        var $242=$errors_module; //@line 1954 "pyexpat.c"
        var $243=_PyModule_AddStringConstant($242, __str128, $241); //@line 1954 "pyexpat.c"
        var $244=_XML_ErrorString(18); //@line 1955 "pyexpat.c"
        var $245=$errors_module; //@line 1955 "pyexpat.c"
        var $246=_PyModule_AddStringConstant($245, __str129, $244); //@line 1955 "pyexpat.c"
        var $247=_XML_ErrorString(19); //@line 1956 "pyexpat.c"
        var $248=$errors_module; //@line 1956 "pyexpat.c"
        var $249=_PyModule_AddStringConstant($248, __str130, $247); //@line 1956 "pyexpat.c"
        var $250=_XML_ErrorString(20); //@line 1957 "pyexpat.c"
        var $251=$errors_module; //@line 1957 "pyexpat.c"
        var $252=_PyModule_AddStringConstant($251, __str131, $250); //@line 1957 "pyexpat.c"
        var $253=_XML_ErrorString(21); //@line 1958 "pyexpat.c"
        var $254=$errors_module; //@line 1958 "pyexpat.c"
        var $255=_PyModule_AddStringConstant($254, __str132, $253); //@line 1958 "pyexpat.c"
        var $256=_XML_ErrorString(22); //@line 1959 "pyexpat.c"
        var $257=$errors_module; //@line 1959 "pyexpat.c"
        var $258=_PyModule_AddStringConstant($257, __str133, $256); //@line 1959 "pyexpat.c"
        var $259=_XML_ErrorString(23); //@line 1960 "pyexpat.c"
        var $260=$errors_module; //@line 1960 "pyexpat.c"
        var $261=_PyModule_AddStringConstant($260, __str134, $259); //@line 1960 "pyexpat.c"
        var $262=_XML_ErrorString(24); //@line 1961 "pyexpat.c"
        var $263=$errors_module; //@line 1961 "pyexpat.c"
        var $264=_PyModule_AddStringConstant($263, __str135, $262); //@line 1961 "pyexpat.c"
        var $265=_XML_ErrorString(25); //@line 1962 "pyexpat.c"
        var $266=$errors_module; //@line 1962 "pyexpat.c"
        var $267=_PyModule_AddStringConstant($266, __str136, $265); //@line 1962 "pyexpat.c"
        var $268=_XML_ErrorString(26); //@line 1963 "pyexpat.c"
        var $269=$errors_module; //@line 1963 "pyexpat.c"
        var $270=_PyModule_AddStringConstant($269, __str137, $268); //@line 1963 "pyexpat.c"
        var $271=_XML_ErrorString(27); //@line 1965 "pyexpat.c"
        var $272=$errors_module; //@line 1965 "pyexpat.c"
        var $273=_PyModule_AddStringConstant($272, __str138, $271); //@line 1965 "pyexpat.c"
        var $274=_XML_ErrorString(28); //@line 1967 "pyexpat.c"
        var $275=$errors_module; //@line 1967 "pyexpat.c"
        var $276=_PyModule_AddStringConstant($275, __str139, $274); //@line 1967 "pyexpat.c"
        var $277=_XML_ErrorString(29); //@line 1968 "pyexpat.c"
        var $278=$errors_module; //@line 1968 "pyexpat.c"
        var $279=_PyModule_AddStringConstant($278, __str140, $277); //@line 1968 "pyexpat.c"
        var $280=_XML_ErrorString(30); //@line 1969 "pyexpat.c"
        var $281=$errors_module; //@line 1969 "pyexpat.c"
        var $282=_PyModule_AddStringConstant($281, __str141, $280); //@line 1969 "pyexpat.c"
        var $283=_XML_ErrorString(31); //@line 1970 "pyexpat.c"
        var $284=$errors_module; //@line 1970 "pyexpat.c"
        var $285=_PyModule_AddStringConstant($284, __str142, $283); //@line 1970 "pyexpat.c"
        var $286=_XML_ErrorString(32); //@line 1971 "pyexpat.c"
        var $287=$errors_module; //@line 1971 "pyexpat.c"
        var $288=_PyModule_AddStringConstant($287, __str143, $286); //@line 1971 "pyexpat.c"
        var $289=_XML_ErrorString(33); //@line 1972 "pyexpat.c"
        var $290=$errors_module; //@line 1972 "pyexpat.c"
        var $291=_PyModule_AddStringConstant($290, __str144, $289); //@line 1972 "pyexpat.c"
        var $292=_XML_ErrorString(34); //@line 1973 "pyexpat.c"
        var $293=$errors_module; //@line 1973 "pyexpat.c"
        var $294=_PyModule_AddStringConstant($293, __str145, $292); //@line 1973 "pyexpat.c"
        var $295=_XML_ErrorString(35); //@line 1974 "pyexpat.c"
        var $296=$errors_module; //@line 1974 "pyexpat.c"
        var $297=_PyModule_AddStringConstant($296, __str146, $295); //@line 1974 "pyexpat.c"
        var $298=_XML_ErrorString(36); //@line 1975 "pyexpat.c"
        var $299=$errors_module; //@line 1975 "pyexpat.c"
        var $300=_PyModule_AddStringConstant($299, __str147, $298); //@line 1975 "pyexpat.c"
        var $301=_XML_ErrorString(37); //@line 1976 "pyexpat.c"
        var $302=$errors_module; //@line 1976 "pyexpat.c"
        var $303=_PyModule_AddStringConstant($302, __str148, $301); //@line 1976 "pyexpat.c"
        var $304=$errors_module; //@line 1978 "pyexpat.c"
        var $305=_PyModule_AddStringConstant($304, __str149, __str150); //@line 1978 "pyexpat.c"
        var $306=$m; //@line 1984 "pyexpat.c"
        var $307=_PyModule_AddIntConstant($306, __str151, 0); //@line 1984 "pyexpat.c"
        var $308=$m; //@line 1985 "pyexpat.c"
        var $309=_PyModule_AddIntConstant($308, __str152, 1); //@line 1985 "pyexpat.c"
        var $310=$m; //@line 1986 "pyexpat.c"
        var $311=_PyModule_AddIntConstant($310, __str153, 2); //@line 1986 "pyexpat.c"
        var $312=$model_module; //@line 1990 "pyexpat.c"
        var $313=_PyModule_AddStringConstant($312, __str149, __str154); //@line 1990 "pyexpat.c"
        var $314=$model_module; //@line 1993 "pyexpat.c"
        var $315=_PyModule_AddIntConstant($314, __str155, 1); //@line 1993 "pyexpat.c"
        var $316=$model_module; //@line 1994 "pyexpat.c"
        var $317=_PyModule_AddIntConstant($316, __str156, 2); //@line 1994 "pyexpat.c"
        var $318=$model_module; //@line 1995 "pyexpat.c"
        var $319=_PyModule_AddIntConstant($318, __str157, 3); //@line 1995 "pyexpat.c"
        var $320=$model_module; //@line 1996 "pyexpat.c"
        var $321=_PyModule_AddIntConstant($320, __str158, 4); //@line 1996 "pyexpat.c"
        var $322=$model_module; //@line 1997 "pyexpat.c"
        var $323=_PyModule_AddIntConstant($322, __str159, 5); //@line 1997 "pyexpat.c"
        var $324=$model_module; //@line 1998 "pyexpat.c"
        var $325=_PyModule_AddIntConstant($324, __str160, 6); //@line 1998 "pyexpat.c"
        var $326=$model_module; //@line 2000 "pyexpat.c"
        var $327=_PyModule_AddIntConstant($326, __str161, 0); //@line 2000 "pyexpat.c"
        var $328=$model_module; //@line 2001 "pyexpat.c"
        var $329=_PyModule_AddIntConstant($328, __str162, 1); //@line 2001 "pyexpat.c"
        var $330=$model_module; //@line 2002 "pyexpat.c"
        var $331=_PyModule_AddIntConstant($330, __str163, 2); //@line 2002 "pyexpat.c"
        var $332=$model_module; //@line 2003 "pyexpat.c"
        var $333=_PyModule_AddIntConstant($332, __str164, 3); //@line 2003 "pyexpat.c"
        HEAP[_capi_11610+4]=80; //@line 2007 "pyexpat.c"
        HEAP[_capi_11610]=__str165; //@line 2008 "pyexpat.c"
        HEAP[_capi_11610+8]=2; //@line 2009 "pyexpat.c"
        HEAP[_capi_11610+12]=0; //@line 2010 "pyexpat.c"
        HEAP[_capi_11610+16]=1; //@line 2011 "pyexpat.c"
        HEAP[_capi_11610+20]=(FUNCTION_TABLE_OFFSET + 12); //@line 2012 "pyexpat.c"
        HEAP[_capi_11610+24]=(FUNCTION_TABLE_OFFSET + 14); //@line 2013 "pyexpat.c"
        HEAP[_capi_11610+28]=(FUNCTION_TABLE_OFFSET + 16); //@line 2014 "pyexpat.c"
        HEAP[_capi_11610+32]=(FUNCTION_TABLE_OFFSET + 18); //@line 2015 "pyexpat.c"
        HEAP[_capi_11610+36]=(FUNCTION_TABLE_OFFSET + 20); //@line 2016 "pyexpat.c"
        HEAP[_capi_11610+40]=(FUNCTION_TABLE_OFFSET + 22); //@line 2017 "pyexpat.c"
        HEAP[_capi_11610+44]=(FUNCTION_TABLE_OFFSET + 24); //@line 2018 "pyexpat.c"
        HEAP[_capi_11610+48]=(FUNCTION_TABLE_OFFSET + 26); //@line 2019 "pyexpat.c"
        HEAP[_capi_11610+52]=(FUNCTION_TABLE_OFFSET + 28); //@line 2020 "pyexpat.c"
        HEAP[_capi_11610+56]=(FUNCTION_TABLE_OFFSET + 30); //@line 2021 "pyexpat.c"
        HEAP[_capi_11610+60]=(FUNCTION_TABLE_OFFSET + 32); //@line 2022 "pyexpat.c"
        HEAP[_capi_11610+64]=(FUNCTION_TABLE_OFFSET + 34); //@line 2023 "pyexpat.c"
        HEAP[_capi_11610+68]=(FUNCTION_TABLE_OFFSET + 36); //@line 2024 "pyexpat.c"
        HEAP[_capi_11610+72]=(FUNCTION_TABLE_OFFSET + 38); //@line 2025 "pyexpat.c"
        HEAP[_capi_11610+76]=(FUNCTION_TABLE_OFFSET + 40); //@line 2026 "pyexpat.c"
        var $334=_PyCapsule_New(_capi_11610, __str166, 0); //@line 2029 "pyexpat.c"
        $capi_object=$334; //@line 2029 "pyexpat.c"
        var $335=($334)!=0; //@line 2030 "pyexpat.c"
        if ($335) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 2030 "pyexpat.c"
      case 36: // $bb34
        var $336=$m; //@line 2031 "pyexpat.c"
        var $337=$capi_object; //@line 2031 "pyexpat.c"
        var $338=_PyModule_AddObject($336, __str167, $337); //@line 2031 "pyexpat.c"
        __label__ = 37; break; //@line 2031 "pyexpat.c"
      case 37: // $return
        STACKTOP = __stackBase__;
        return; //@line 1829 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  Module["_initpyexpat"] = _initpyexpat;

  function _clear_handlers($self, $initial) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $self_addr;
        var $initial_addr;
        var $i;
        var $temp;
        $self_addr=$self;
        $initial_addr=$initial;
        $i=0; //@line 2037 "pyexpat.c"
        var $0=$i; //@line 2040 "pyexpat.c"
        var $1=_handler_info+$0*20; //@line 2040 "pyexpat.c"
        var $2=$1; //@line 2040 "pyexpat.c"
        var $3=HEAP[$2]; //@line 2040 "pyexpat.c"
        var $4=($3)!=0; //@line 2040 "pyexpat.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 2040 "pyexpat.c"
      case 1: // $bb
        var $5=$initial_addr; //@line 2041 "pyexpat.c"
        var $6=($5)!=0; //@line 2041 "pyexpat.c"
        var $7=$self_addr; //@line 2042 "pyexpat.c"
        var $8=$7+48; //@line 2042 "pyexpat.c"
        var $9=HEAP[$8]; //@line 2042 "pyexpat.c"
        var $10=$i; //@line 2042 "pyexpat.c"
        var $11=$9+4*$10; //@line 2042 "pyexpat.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2041 "pyexpat.c"
      case 2: // $bb1
        HEAP[$11]=0; //@line 2042 "pyexpat.c"
        __label__ = 7; break; //@line 2042 "pyexpat.c"
      case 3: // $bb2
        var $12=HEAP[$11]; //@line 2044 "pyexpat.c"
        $temp=$12; //@line 2044 "pyexpat.c"
        var $13=$self_addr; //@line 2045 "pyexpat.c"
        var $14=$13+48; //@line 2045 "pyexpat.c"
        var $15=HEAP[$14]; //@line 2045 "pyexpat.c"
        var $16=$i; //@line 2045 "pyexpat.c"
        var $17=$15+4*$16; //@line 2045 "pyexpat.c"
        HEAP[$17]=0; //@line 2045 "pyexpat.c"
        var $18=$temp; //@line 2046 "pyexpat.c"
        var $19=($18)!=0; //@line 2046 "pyexpat.c"
        if ($19) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 2046 "pyexpat.c"
      case 4: // $bb3
        var $20=$temp; //@line 2046 "pyexpat.c"
        var $21=$20; //@line 2046 "pyexpat.c"
        var $22=HEAP[$21]; //@line 2046 "pyexpat.c"
        var $23=($22) - 1; //@line 2046 "pyexpat.c"
        var $24=$temp; //@line 2046 "pyexpat.c"
        var $25=$24; //@line 2046 "pyexpat.c"
        HEAP[$25]=$23; //@line 2046 "pyexpat.c"
        var $26=$temp; //@line 2046 "pyexpat.c"
        var $27=$26; //@line 2046 "pyexpat.c"
        var $28=HEAP[$27]; //@line 2046 "pyexpat.c"
        var $29=($28)==0; //@line 2046 "pyexpat.c"
        if ($29) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2046 "pyexpat.c"
      case 5: // $bb4
        var $30=$temp; //@line 2046 "pyexpat.c"
        var $31=$30+4; //@line 2046 "pyexpat.c"
        var $32=HEAP[$31]; //@line 2046 "pyexpat.c"
        var $33=$32+24; //@line 2046 "pyexpat.c"
        var $34=HEAP[$33]; //@line 2046 "pyexpat.c"
        var $35=$temp; //@line 2046 "pyexpat.c"
        FUNCTION_TABLE[$34]($35); //@line 2046 "pyexpat.c"
        __label__ = 6; break; //@line 2046 "pyexpat.c"
      case 6: // $bb5
        var $36=$i; //@line 2047 "pyexpat.c"
        var $37=_handler_info+$36*20; //@line 2047 "pyexpat.c"
        var $38=$37+4; //@line 2047 "pyexpat.c"
        var $39=HEAP[$38]; //@line 2047 "pyexpat.c"
        var $40=$self_addr; //@line 2047 "pyexpat.c"
        var $41=$40+8; //@line 2047 "pyexpat.c"
        var $42=HEAP[$41]; //@line 2047 "pyexpat.c"
        FUNCTION_TABLE[$39]($42, 0); //@line 2047 "pyexpat.c"
        __label__ = 7; break; //@line 2047 "pyexpat.c"
      case 7: // $bb6
        var $43=$i; //@line 2040 "pyexpat.c"
        var $44=($43) + 1; //@line 2040 "pyexpat.c"
        $i=$44; //@line 2040 "pyexpat.c"
        var $45=$i; //@line 2040 "pyexpat.c"
        var $46=_handler_info+$45*20; //@line 2040 "pyexpat.c"
        var $47=$46; //@line 2040 "pyexpat.c"
        var $48=HEAP[$47]; //@line 2040 "pyexpat.c"
        var $49=($48)!=0; //@line 2040 "pyexpat.c"
        if ($49) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 2040 "pyexpat.c"
      case 8: // $return
        ;
        return; //@line 2050 "pyexpat.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ParserCreate($encodingName) {
    ;
    var __label__;
  
    var $encodingName_addr;
    var $retval;
    var $0;
    $encodingName_addr=$encodingName;
    var $1=$encodingName_addr; //@line 656 "xmlparse.c"
    var $2=_PyExpat_XML_ParserCreate_MM($1, 0, 0); //@line 656 "xmlparse.c"
    $0=$2; //@line 656 "xmlparse.c"
    var $3=$0; //@line 656 "xmlparse.c"
    $retval=$3; //@line 656 "xmlparse.c"
    var $retval1=$retval; //@line 656 "xmlparse.c"
    ;
    return $retval1; //@line 656 "xmlparse.c"
  }
  

  function _PyExpat_XML_ParserCreateNS($encodingName, $nsSep) {
    var __stackBase__  = STACKTOP; STACKTOP += 2; _memset(__stackBase__, 0, 2);
    var __label__;
  
    var $encodingName_addr;
    var $nsSep_addr;
    var $retval;
    var $0;
    var $tmp=__stackBase__;
    $encodingName_addr=$encodingName;
    $nsSep_addr=$nsSep;
    var $1=$tmp; //@line 663 "xmlparse.c"
    var $2=$nsSep_addr; //@line 663 "xmlparse.c"
    HEAP[$1]=$2; //@line 663 "xmlparse.c"
    var $3=$encodingName_addr; //@line 664 "xmlparse.c"
    var $tmp1=$tmp; //@line 664 "xmlparse.c"
    var $4=_PyExpat_XML_ParserCreate_MM($3, 0, $tmp1); //@line 664 "xmlparse.c"
    $0=$4; //@line 664 "xmlparse.c"
    var $5=$0; //@line 664 "xmlparse.c"
    $retval=$5; //@line 664 "xmlparse.c"
    var $retval2=$retval; //@line 664 "xmlparse.c"
    STACKTOP = __stackBase__;
    return $retval2; //@line 664 "xmlparse.c"
  }
  

  function _PyExpat_XML_ParserCreate_MM($encodingName, $memsuite, $nameSep) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $encodingName_addr;
        var $memsuite_addr;
        var $nameSep_addr;
        var $retval;
        var $0;
        var $parser;
        $encodingName_addr=$encodingName;
        $memsuite_addr=$memsuite;
        $nameSep_addr=$nameSep;
        var $1=$encodingName_addr; //@line 679 "xmlparse.c"
        var $2=$memsuite_addr; //@line 679 "xmlparse.c"
        var $3=$nameSep_addr; //@line 679 "xmlparse.c"
        var $4=_parserCreate($1, $2, $3, 0); //@line 679 "xmlparse.c"
        $parser=$4; //@line 679 "xmlparse.c"
        var $5=$parser; //@line 680 "xmlparse.c"
        var $6=($5)!=0; //@line 680 "xmlparse.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 680 "xmlparse.c"
      case 1: // $bb
        var $7=$parser; //@line 680 "xmlparse.c"
        var $8=$7+232; //@line 680 "xmlparse.c"
        var $9=HEAP[$8]; //@line 680 "xmlparse.c"
        var $10=($9)!=0; //@line 680 "xmlparse.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 680 "xmlparse.c"
      case 2: // $bb1
        var $11=$parser; //@line 684 "xmlparse.c"
        var $12=_setContext($11, _implicitContext); //@line 684 "xmlparse.c"
        var $13=($12)==0; //@line 684 "xmlparse.c"
        if ($13) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 684 "xmlparse.c"
      case 3: // $bb2
        var $14=$parser; //@line 685 "xmlparse.c"
        _PyExpat_XML_ParserFree($14); //@line 685 "xmlparse.c"
        $0=0; //@line 686 "xmlparse.c"
        __label__ = 5; break; //@line 686 "xmlparse.c"
      case 4: // $bb3
        var $15=$parser; //@line 689 "xmlparse.c"
        $0=$15; //@line 689 "xmlparse.c"
        __label__ = 5; break; //@line 689 "xmlparse.c"
      case 5: // $bb4
        var $16=$0; //@line 686 "xmlparse.c"
        $retval=$16; //@line 686 "xmlparse.c"
        var $retval5=$retval; //@line 686 "xmlparse.c"
        ;
        return $retval5; //@line 686 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _parserCreate($encodingName, $memsuite, $nameSep, $dtd) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr_i5;
        var $ms_addr_i6;
        var $retval_i3;
        var $0;
        var $retval_i2;
        var $1;
        var $pool_addr_i;
        var $ms_addr_i1;
        var $pool_addr_i8_i;
        var $ms_addr_i9_i;
        var $p_addr_i6_i;
        var $ms_addr_i7_i;
        var $p_addr_i4_i;
        var $ms_addr_i5_i;
        var $p_addr_i2_i;
        var $ms_addr_i3_i;
        var $p_addr_i_i;
        var $ms_addr_i1_i;
        var $pool_addr_i_i;
        var $ms_addr_i_i;
        var $ms_addr_i;
        var $retval_i;
        var $2;
        var $p_i;
        var $encodingName_addr;
        var $memsuite_addr;
        var $nameSep_addr;
        var $dtd_addr;
        var $retval;
        var $3;
        var $parser;
        var $mtemp;
        var $mtemp4;
        $encodingName_addr=$encodingName;
        $memsuite_addr=$memsuite;
        $nameSep_addr=$nameSep;
        $dtd_addr=$dtd;
        var $4=$memsuite_addr; //@line 700 "xmlparse.c"
        var $5=($4)!=0; //@line 700 "xmlparse.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 700 "xmlparse.c"
      case 1: // $bb
        var $6=$memsuite_addr; //@line 702 "xmlparse.c"
        var $7=$6; //@line 702 "xmlparse.c"
        var $8=HEAP[$7]; //@line 702 "xmlparse.c"
        var $9=FUNCTION_TABLE[$8](472); //@line 702 "xmlparse.c"
        var $10=$9; //@line 702 "xmlparse.c"
        $parser=$10; //@line 702 "xmlparse.c"
        var $11=$parser; //@line 704 "xmlparse.c"
        var $12=($11)!=0; //@line 704 "xmlparse.c"
        if ($12) { __label__ = 2; break; } else { __label__ = 5; break; } //@line 704 "xmlparse.c"
      case 2: // $bb1
        var $13=$parser; //@line 705 "xmlparse.c"
        var $14=$13+12; //@line 705 "xmlparse.c"
        $mtemp=$14; //@line 705 "xmlparse.c"
        var $15=$memsuite_addr; //@line 706 "xmlparse.c"
        var $16=$15; //@line 706 "xmlparse.c"
        var $17=HEAP[$16]; //@line 706 "xmlparse.c"
        var $18=$mtemp; //@line 706 "xmlparse.c"
        var $19=$18; //@line 706 "xmlparse.c"
        HEAP[$19]=$17; //@line 706 "xmlparse.c"
        var $20=$memsuite_addr; //@line 707 "xmlparse.c"
        var $21=$20+4; //@line 707 "xmlparse.c"
        var $22=HEAP[$21]; //@line 707 "xmlparse.c"
        var $23=$mtemp; //@line 707 "xmlparse.c"
        var $24=$23+4; //@line 707 "xmlparse.c"
        HEAP[$24]=$22; //@line 707 "xmlparse.c"
        var $25=$memsuite_addr; //@line 708 "xmlparse.c"
        var $26=$25+8; //@line 708 "xmlparse.c"
        var $27=HEAP[$26]; //@line 708 "xmlparse.c"
        var $28=$mtemp; //@line 708 "xmlparse.c"
        var $29=$28+8; //@line 708 "xmlparse.c"
        HEAP[$29]=$27; //@line 708 "xmlparse.c"
        __label__ = 6; break; //@line 708 "xmlparse.c"
      case 3: // $bb3
        var $30=_malloc(472); //@line 713 "xmlparse.c"
        var $31=$30; //@line 713 "xmlparse.c"
        $parser=$31; //@line 713 "xmlparse.c"
        var $32=$parser; //@line 714 "xmlparse.c"
        var $33=($32)!=0; //@line 714 "xmlparse.c"
        if ($33) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 714 "xmlparse.c"
      case 4: // $bb5
        var $34=$parser; //@line 715 "xmlparse.c"
        var $35=$34+12; //@line 715 "xmlparse.c"
        $mtemp4=$35; //@line 715 "xmlparse.c"
        var $36=$mtemp4; //@line 716 "xmlparse.c"
        var $37=$36; //@line 716 "xmlparse.c"
        HEAP[$37]=(FUNCTION_TABLE_OFFSET + 42); //@line 716 "xmlparse.c"
        var $38=$mtemp4; //@line 717 "xmlparse.c"
        var $39=$38+4; //@line 717 "xmlparse.c"
        HEAP[$39]=(FUNCTION_TABLE_OFFSET + 44); //@line 717 "xmlparse.c"
        var $40=$mtemp4; //@line 718 "xmlparse.c"
        var $41=$40+8; //@line 718 "xmlparse.c"
        HEAP[$41]=(FUNCTION_TABLE_OFFSET + 46); //@line 718 "xmlparse.c"
        __label__ = 6; break; //@line 718 "xmlparse.c"
      case 5: // $bb6_thread
        var $42=$parser; //@line 723 "xmlparse.c"
        __lastLabel__ = 5; __label__ = 7; break;
      case 6: // $bb6
        var $_pr=$parser;
        var $43=($_pr)==0; //@line 722 "xmlparse.c"
        var $44=$parser; //@line 723 "xmlparse.c"
        if ($43) { __lastLabel__ = 6; __label__ = 7; break; } else { __lastLabel__ = 6; __label__ = 8; break; } //@line 722 "xmlparse.c"
      case 7: // $bb7
        var $45=__lastLabel__ == 5 ? $42 : ($44);
        $3=$45; //@line 723 "xmlparse.c"
        __label__ = 26; break; //@line 723 "xmlparse.c"
      case 8: // $bb8
        var $46=$44+8; //@line 725 "xmlparse.c"
        HEAP[$46]=0; //@line 725 "xmlparse.c"
        var $47=$parser; //@line 726 "xmlparse.c"
        var $48=$47+32; //@line 726 "xmlparse.c"
        HEAP[$48]=0; //@line 726 "xmlparse.c"
        var $49=$parser; //@line 728 "xmlparse.c"
        var $50=$49+364; //@line 728 "xmlparse.c"
        HEAP[$50]=16; //@line 728 "xmlparse.c"
        var $51=$parser; //@line 729 "xmlparse.c"
        var $52=$51+12; //@line 729 "xmlparse.c"
        var $53=$52; //@line 729 "xmlparse.c"
        var $54=HEAP[$53]; //@line 729 "xmlparse.c"
        var $55=$parser; //@line 729 "xmlparse.c"
        var $56=$55+364; //@line 729 "xmlparse.c"
        var $57=HEAP[$56]; //@line 729 "xmlparse.c"
        var $58=($57) * 16; //@line 729 "xmlparse.c"
        var $59=FUNCTION_TABLE[$54]($58); //@line 729 "xmlparse.c"
        var $60=$59; //@line 729 "xmlparse.c"
        var $61=$parser; //@line 729 "xmlparse.c"
        var $62=$61+376; //@line 729 "xmlparse.c"
        HEAP[$62]=$60; //@line 729 "xmlparse.c"
        var $63=$parser; //@line 730 "xmlparse.c"
        var $64=$63+376; //@line 730 "xmlparse.c"
        var $65=HEAP[$64]; //@line 730 "xmlparse.c"
        var $66=($65)==0; //@line 730 "xmlparse.c"
        var $67=$parser; //@line 731 "xmlparse.c"
        var $68=$67+12; //@line 731 "xmlparse.c"
        if ($66) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 730 "xmlparse.c"
      case 9: // $bb9
        var $69=$68+8; //@line 731 "xmlparse.c"
        var $70=HEAP[$69]; //@line 731 "xmlparse.c"
        var $71=$parser; //@line 731 "xmlparse.c"
        var $72=$71; //@line 731 "xmlparse.c"
        FUNCTION_TABLE[$70]($72); //@line 731 "xmlparse.c"
        $3=0; //@line 732 "xmlparse.c"
        __label__ = 26; break; //@line 732 "xmlparse.c"
      case 10: // $bb10
        var $73=$68; //@line 734 "xmlparse.c"
        var $74=HEAP[$73]; //@line 734 "xmlparse.c"
        var $75=FUNCTION_TABLE[$74](1024); //@line 734 "xmlparse.c"
        var $76=$parser; //@line 734 "xmlparse.c"
        var $77=$76+44; //@line 734 "xmlparse.c"
        HEAP[$77]=$75; //@line 734 "xmlparse.c"
        var $78=$parser; //@line 735 "xmlparse.c"
        var $79=$78+44; //@line 735 "xmlparse.c"
        var $80=HEAP[$79]; //@line 735 "xmlparse.c"
        var $81=($80)==0; //@line 735 "xmlparse.c"
        var $82=$parser; //@line 736 "xmlparse.c"
        if ($81) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 735 "xmlparse.c"
      case 11: // $bb11
        var $83=$82+12; //@line 736 "xmlparse.c"
        var $84=$83+8; //@line 736 "xmlparse.c"
        var $85=HEAP[$84]; //@line 736 "xmlparse.c"
        var $86=$parser; //@line 736 "xmlparse.c"
        var $87=$86+376; //@line 736 "xmlparse.c"
        var $88=HEAP[$87]; //@line 736 "xmlparse.c"
        var $89=$88; //@line 736 "xmlparse.c"
        FUNCTION_TABLE[$85]($89); //@line 736 "xmlparse.c"
        var $90=$parser; //@line 737 "xmlparse.c"
        var $91=$90+12; //@line 737 "xmlparse.c"
        var $92=$91+8; //@line 737 "xmlparse.c"
        var $93=HEAP[$92]; //@line 737 "xmlparse.c"
        var $94=$parser; //@line 737 "xmlparse.c"
        var $95=$94; //@line 737 "xmlparse.c"
        FUNCTION_TABLE[$93]($95); //@line 737 "xmlparse.c"
        $3=0; //@line 738 "xmlparse.c"
        __label__ = 26; break; //@line 738 "xmlparse.c"
      case 12: // $bb12
        var $96=$82+44; //@line 740 "xmlparse.c"
        var $97=HEAP[$96]; //@line 740 "xmlparse.c"
        var $98=$97+1024; //@line 740 "xmlparse.c"
        var $99=$parser; //@line 740 "xmlparse.c"
        var $100=$99+48; //@line 740 "xmlparse.c"
        HEAP[$100]=$98; //@line 740 "xmlparse.c"
        var $101=$dtd_addr; //@line 742 "xmlparse.c"
        var $102=($101)!=0; //@line 742 "xmlparse.c"
        var $103=$parser; //@line 743 "xmlparse.c"
        if ($102) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 742 "xmlparse.c"
      case 13: // $bb13
        var $104=$103+340; //@line 743 "xmlparse.c"
        var $105=$dtd_addr; //@line 743 "xmlparse.c"
        HEAP[$104]=$105; //@line 743 "xmlparse.c"
        __label__ = 19; break; //@line 743 "xmlparse.c"
      case 14: // $bb14
        var $106=$103+12; //@line 745 "xmlparse.c"
        $ms_addr_i=$106;
        var $107=$ms_addr_i; //@line 5519 "xmlparse.c"
        var $108=$107; //@line 5519 "xmlparse.c"
        var $109=HEAP[$108]; //@line 5519 "xmlparse.c"
        var $110=FUNCTION_TABLE[$109](168); //@line 5519 "xmlparse.c"
        var $111=$110; //@line 5519 "xmlparse.c"
        $p_i=$111; //@line 5519 "xmlparse.c"
        var $112=$p_i; //@line 5520 "xmlparse.c"
        var $113=($112)==0; //@line 5520 "xmlparse.c"
        var $114=$p_i; //@line 5521 "xmlparse.c"
        if ($113) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 5520 "xmlparse.c"
      case 15: // $bb_i
        $2=$114; //@line 5521 "xmlparse.c"
        __label__ = 17; break; //@line 5521 "xmlparse.c"
      case 16: // $bb1_i
        var $115=$114+80; //@line 5522 "xmlparse.c"
        var $116=$ms_addr_i; //@line 5522 "xmlparse.c"
        $pool_addr_i_i=$115;
        $ms_addr_i_i=$116;
        var $117=$pool_addr_i_i; //@line 5968 "xmlparse.c"
        var $118=$117; //@line 5968 "xmlparse.c"
        HEAP[$118]=0; //@line 5968 "xmlparse.c"
        var $119=$pool_addr_i_i; //@line 5969 "xmlparse.c"
        var $120=$119+4; //@line 5969 "xmlparse.c"
        HEAP[$120]=0; //@line 5969 "xmlparse.c"
        var $121=$pool_addr_i_i; //@line 5970 "xmlparse.c"
        var $122=$121+16; //@line 5970 "xmlparse.c"
        HEAP[$122]=0; //@line 5970 "xmlparse.c"
        var $123=$pool_addr_i_i; //@line 5971 "xmlparse.c"
        var $124=$123+12; //@line 5971 "xmlparse.c"
        HEAP[$124]=0; //@line 5971 "xmlparse.c"
        var $125=$pool_addr_i_i; //@line 5972 "xmlparse.c"
        var $126=$125+8; //@line 5972 "xmlparse.c"
        HEAP[$126]=0; //@line 5972 "xmlparse.c"
        var $127=$pool_addr_i_i; //@line 5973 "xmlparse.c"
        var $128=$127+20; //@line 5973 "xmlparse.c"
        var $129=$ms_addr_i_i; //@line 5973 "xmlparse.c"
        HEAP[$128]=$129; //@line 5973 "xmlparse.c"
        var $130=$p_i; //@line 5523 "xmlparse.c"
        var $131=$130+104; //@line 5523 "xmlparse.c"
        var $132=$ms_addr_i; //@line 5523 "xmlparse.c"
        $pool_addr_i8_i=$131;
        $ms_addr_i9_i=$132;
        var $133=$pool_addr_i8_i; //@line 5968 "xmlparse.c"
        var $134=$133; //@line 5968 "xmlparse.c"
        HEAP[$134]=0; //@line 5968 "xmlparse.c"
        var $135=$pool_addr_i8_i; //@line 5969 "xmlparse.c"
        var $136=$135+4; //@line 5969 "xmlparse.c"
        HEAP[$136]=0; //@line 5969 "xmlparse.c"
        var $137=$pool_addr_i8_i; //@line 5970 "xmlparse.c"
        var $138=$137+16; //@line 5970 "xmlparse.c"
        HEAP[$138]=0; //@line 5970 "xmlparse.c"
        var $139=$pool_addr_i8_i; //@line 5971 "xmlparse.c"
        var $140=$139+12; //@line 5971 "xmlparse.c"
        HEAP[$140]=0; //@line 5971 "xmlparse.c"
        var $141=$pool_addr_i8_i; //@line 5972 "xmlparse.c"
        var $142=$141+8; //@line 5972 "xmlparse.c"
        HEAP[$142]=0; //@line 5972 "xmlparse.c"
        var $143=$pool_addr_i8_i; //@line 5973 "xmlparse.c"
        var $144=$143+20; //@line 5973 "xmlparse.c"
        var $145=$ms_addr_i9_i; //@line 5973 "xmlparse.c"
        HEAP[$144]=$145; //@line 5973 "xmlparse.c"
        var $146=$p_i; //@line 5524 "xmlparse.c"
        var $147=$146; //@line 5524 "xmlparse.c"
        var $148=$ms_addr_i; //@line 5524 "xmlparse.c"
        $p_addr_i6_i=$147;
        $ms_addr_i7_i=$148;
        var $149=$p_addr_i6_i; //@line 5940 "xmlparse.c"
        var $150=$149+4; //@line 5940 "xmlparse.c"
        HEAP[$150]=0; //@line 5940 "xmlparse.c"
        var $151=$p_addr_i6_i; //@line 5941 "xmlparse.c"
        var $152=$151+8; //@line 5941 "xmlparse.c"
        HEAP[$152]=0; //@line 5941 "xmlparse.c"
        var $153=$p_addr_i6_i; //@line 5942 "xmlparse.c"
        var $154=$153+12; //@line 5942 "xmlparse.c"
        HEAP[$154]=0; //@line 5942 "xmlparse.c"
        var $155=$p_addr_i6_i; //@line 5943 "xmlparse.c"
        var $156=$155; //@line 5943 "xmlparse.c"
        HEAP[$156]=0; //@line 5943 "xmlparse.c"
        var $157=$p_addr_i6_i; //@line 5944 "xmlparse.c"
        var $158=$157+16; //@line 5944 "xmlparse.c"
        var $159=$ms_addr_i7_i; //@line 5944 "xmlparse.c"
        HEAP[$158]=$159; //@line 5944 "xmlparse.c"
        var $160=$p_i; //@line 5525 "xmlparse.c"
        var $161=$160+20; //@line 5525 "xmlparse.c"
        var $162=$ms_addr_i; //@line 5525 "xmlparse.c"
        $p_addr_i4_i=$161;
        $ms_addr_i5_i=$162;
        var $163=$p_addr_i4_i; //@line 5940 "xmlparse.c"
        var $164=$163+4; //@line 5940 "xmlparse.c"
        HEAP[$164]=0; //@line 5940 "xmlparse.c"
        var $165=$p_addr_i4_i; //@line 5941 "xmlparse.c"
        var $166=$165+8; //@line 5941 "xmlparse.c"
        HEAP[$166]=0; //@line 5941 "xmlparse.c"
        var $167=$p_addr_i4_i; //@line 5942 "xmlparse.c"
        var $168=$167+12; //@line 5942 "xmlparse.c"
        HEAP[$168]=0; //@line 5942 "xmlparse.c"
        var $169=$p_addr_i4_i; //@line 5943 "xmlparse.c"
        var $170=$169; //@line 5943 "xmlparse.c"
        HEAP[$170]=0; //@line 5943 "xmlparse.c"
        var $171=$p_addr_i4_i; //@line 5944 "xmlparse.c"
        var $172=$171+16; //@line 5944 "xmlparse.c"
        var $173=$ms_addr_i5_i; //@line 5944 "xmlparse.c"
        HEAP[$172]=$173; //@line 5944 "xmlparse.c"
        var $174=$p_i; //@line 5526 "xmlparse.c"
        var $175=$174+40; //@line 5526 "xmlparse.c"
        var $176=$ms_addr_i; //@line 5526 "xmlparse.c"
        $p_addr_i2_i=$175;
        $ms_addr_i3_i=$176;
        var $177=$p_addr_i2_i; //@line 5940 "xmlparse.c"
        var $178=$177+4; //@line 5940 "xmlparse.c"
        HEAP[$178]=0; //@line 5940 "xmlparse.c"
        var $179=$p_addr_i2_i; //@line 5941 "xmlparse.c"
        var $180=$179+8; //@line 5941 "xmlparse.c"
        HEAP[$180]=0; //@line 5941 "xmlparse.c"
        var $181=$p_addr_i2_i; //@line 5942 "xmlparse.c"
        var $182=$181+12; //@line 5942 "xmlparse.c"
        HEAP[$182]=0; //@line 5942 "xmlparse.c"
        var $183=$p_addr_i2_i; //@line 5943 "xmlparse.c"
        var $184=$183; //@line 5943 "xmlparse.c"
        HEAP[$184]=0; //@line 5943 "xmlparse.c"
        var $185=$p_addr_i2_i; //@line 5944 "xmlparse.c"
        var $186=$185+16; //@line 5944 "xmlparse.c"
        var $187=$ms_addr_i3_i; //@line 5944 "xmlparse.c"
        HEAP[$186]=$187; //@line 5944 "xmlparse.c"
        var $188=$p_i; //@line 5527 "xmlparse.c"
        var $189=$188+60; //@line 5527 "xmlparse.c"
        var $190=$ms_addr_i; //@line 5527 "xmlparse.c"
        $p_addr_i_i=$189;
        $ms_addr_i1_i=$190;
        var $191=$p_addr_i_i; //@line 5940 "xmlparse.c"
        var $192=$191+4; //@line 5940 "xmlparse.c"
        HEAP[$192]=0; //@line 5940 "xmlparse.c"
        var $193=$p_addr_i_i; //@line 5941 "xmlparse.c"
        var $194=$193+8; //@line 5941 "xmlparse.c"
        HEAP[$194]=0; //@line 5941 "xmlparse.c"
        var $195=$p_addr_i_i; //@line 5942 "xmlparse.c"
        var $196=$195+12; //@line 5942 "xmlparse.c"
        HEAP[$196]=0; //@line 5942 "xmlparse.c"
        var $197=$p_addr_i_i; //@line 5943 "xmlparse.c"
        var $198=$197; //@line 5943 "xmlparse.c"
        HEAP[$198]=0; //@line 5943 "xmlparse.c"
        var $199=$p_addr_i_i; //@line 5944 "xmlparse.c"
        var $200=$199+16; //@line 5944 "xmlparse.c"
        var $201=$ms_addr_i1_i; //@line 5944 "xmlparse.c"
        HEAP[$200]=$201; //@line 5944 "xmlparse.c"
        var $202=$p_i; //@line 5532 "xmlparse.c"
        var $203=$202+132; //@line 5532 "xmlparse.c"
        var $204=$203; //@line 5532 "xmlparse.c"
        HEAP[$204]=0; //@line 5532 "xmlparse.c"
        var $205=$p_i; //@line 5533 "xmlparse.c"
        var $206=$205+132; //@line 5533 "xmlparse.c"
        var $207=$206+4; //@line 5533 "xmlparse.c"
        HEAP[$207]=0; //@line 5533 "xmlparse.c"
        var $208=$p_i; //@line 5535 "xmlparse.c"
        var $209=$208+140; //@line 5535 "xmlparse.c"
        HEAP[$209]=0; //@line 5535 "xmlparse.c"
        var $210=$p_i; //@line 5536 "xmlparse.c"
        var $211=$210+164; //@line 5536 "xmlparse.c"
        HEAP[$211]=0; //@line 5536 "xmlparse.c"
        var $212=$p_i; //@line 5537 "xmlparse.c"
        var $213=$212+144; //@line 5537 "xmlparse.c"
        HEAP[$213]=0; //@line 5537 "xmlparse.c"
        var $214=$p_i; //@line 5538 "xmlparse.c"
        var $215=$214+160; //@line 5538 "xmlparse.c"
        HEAP[$215]=0; //@line 5538 "xmlparse.c"
        var $216=$p_i; //@line 5539 "xmlparse.c"
        var $217=$216+152; //@line 5539 "xmlparse.c"
        HEAP[$217]=0; //@line 5539 "xmlparse.c"
        var $218=$p_i; //@line 5540 "xmlparse.c"
        var $219=$218+156; //@line 5540 "xmlparse.c"
        HEAP[$219]=0; //@line 5540 "xmlparse.c"
        var $220=$p_i; //@line 5541 "xmlparse.c"
        var $221=$220+148; //@line 5541 "xmlparse.c"
        HEAP[$221]=0; //@line 5541 "xmlparse.c"
        var $222=$p_i; //@line 5543 "xmlparse.c"
        var $223=$222+128; //@line 5543 "xmlparse.c"
        HEAP[$223]=1; //@line 5543 "xmlparse.c"
        var $224=$p_i; //@line 5544 "xmlparse.c"
        var $225=$224+129; //@line 5544 "xmlparse.c"
        HEAP[$225]=0; //@line 5544 "xmlparse.c"
        var $226=$p_i; //@line 5545 "xmlparse.c"
        var $227=$226+130; //@line 5545 "xmlparse.c"
        HEAP[$227]=0; //@line 5545 "xmlparse.c"
        var $228=$p_i; //@line 5546 "xmlparse.c"
        $2=$228; //@line 5546 "xmlparse.c"
        __label__ = 17; break; //@line 5546 "xmlparse.c"
      case 17: // $dtdCreate_exit
        var $229=$2; //@line 5521 "xmlparse.c"
        $retval_i=$229; //@line 5521 "xmlparse.c"
        var $retval3_i=$retval_i; //@line 5521 "xmlparse.c"
        var $230=$parser; //@line 745 "xmlparse.c"
        var $231=$230+340; //@line 745 "xmlparse.c"
        HEAP[$231]=$retval3_i; //@line 745 "xmlparse.c"
        var $232=$parser; //@line 746 "xmlparse.c"
        var $233=$232+340; //@line 746 "xmlparse.c"
        var $234=HEAP[$233]; //@line 746 "xmlparse.c"
        var $235=($234)==0; //@line 746 "xmlparse.c"
        if ($235) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 746 "xmlparse.c"
      case 18: // $bb15
        var $236=$parser; //@line 747 "xmlparse.c"
        var $237=$236+12; //@line 747 "xmlparse.c"
        var $238=$237+8; //@line 747 "xmlparse.c"
        var $239=HEAP[$238]; //@line 747 "xmlparse.c"
        var $240=$parser; //@line 747 "xmlparse.c"
        var $241=$240+44; //@line 747 "xmlparse.c"
        var $242=HEAP[$241]; //@line 747 "xmlparse.c"
        FUNCTION_TABLE[$239]($242); //@line 747 "xmlparse.c"
        var $243=$parser; //@line 748 "xmlparse.c"
        var $244=$243+12; //@line 748 "xmlparse.c"
        var $245=$244+8; //@line 748 "xmlparse.c"
        var $246=HEAP[$245]; //@line 748 "xmlparse.c"
        var $247=$parser; //@line 748 "xmlparse.c"
        var $248=$247+376; //@line 748 "xmlparse.c"
        var $249=HEAP[$248]; //@line 748 "xmlparse.c"
        var $250=$249; //@line 748 "xmlparse.c"
        FUNCTION_TABLE[$246]($250); //@line 748 "xmlparse.c"
        var $251=$parser; //@line 749 "xmlparse.c"
        var $252=$251+12; //@line 749 "xmlparse.c"
        var $253=$252+8; //@line 749 "xmlparse.c"
        var $254=HEAP[$253]; //@line 749 "xmlparse.c"
        var $255=$parser; //@line 749 "xmlparse.c"
        var $256=$255; //@line 749 "xmlparse.c"
        FUNCTION_TABLE[$254]($256); //@line 749 "xmlparse.c"
        $3=0; //@line 750 "xmlparse.c"
        __label__ = 26; break; //@line 750 "xmlparse.c"
      case 19: // $bb16
        var $257=$parser; //@line 754 "xmlparse.c"
        var $258=$257+360; //@line 754 "xmlparse.c"
        HEAP[$258]=0; //@line 754 "xmlparse.c"
        var $259=$parser; //@line 755 "xmlparse.c"
        var $260=$259+352; //@line 755 "xmlparse.c"
        HEAP[$260]=0; //@line 755 "xmlparse.c"
        var $261=$parser; //@line 756 "xmlparse.c"
        var $262=$261+288; //@line 756 "xmlparse.c"
        HEAP[$262]=0; //@line 756 "xmlparse.c"
        var $263=$parser; //@line 758 "xmlparse.c"
        var $264=$263+452; //@line 758 "xmlparse.c"
        HEAP[$264]=0; //@line 758 "xmlparse.c"
        var $265=$parser; //@line 759 "xmlparse.c"
        var $266=$265+448; //@line 759 "xmlparse.c"
        HEAP[$266]=0; //@line 759 "xmlparse.c"
        var $267=$parser; //@line 761 "xmlparse.c"
        var $268=$267+124; //@line 761 "xmlparse.c"
        HEAP[$268]=0; //@line 761 "xmlparse.c"
        var $269=$parser; //@line 762 "xmlparse.c"
        var $270=$269+244; //@line 762 "xmlparse.c"
        HEAP[$270]=0; //@line 762 "xmlparse.c"
        var $271=$parser; //@line 764 "xmlparse.c"
        var $272=$271+456; //@line 764 "xmlparse.c"
        HEAP[$272]=33; //@line 764 "xmlparse.c"
        var $273=$parser; //@line 765 "xmlparse.c"
        var $274=$273+232; //@line 765 "xmlparse.c"
        HEAP[$274]=0; //@line 765 "xmlparse.c"
        var $275=$parser; //@line 766 "xmlparse.c"
        var $276=$275+233; //@line 766 "xmlparse.c"
        HEAP[$276]=0; //@line 766 "xmlparse.c"
        var $277=$parser; //@line 768 "xmlparse.c"
        var $278=$277+380; //@line 768 "xmlparse.c"
        HEAP[$278]=0; //@line 768 "xmlparse.c"
        var $279=$parser; //@line 769 "xmlparse.c"
        var $280=$279+384; //@line 769 "xmlparse.c"
        HEAP[$280]=0; //@line 769 "xmlparse.c"
        var $281=$parser; //@line 770 "xmlparse.c"
        var $282=$281+388; //@line 770 "xmlparse.c"
        HEAP[$282]=0; //@line 770 "xmlparse.c"
        var $283=$parser; //@line 772 "xmlparse.c"
        var $284=$283+12; //@line 772 "xmlparse.c"
        var $285=$parser; //@line 772 "xmlparse.c"
        var $286=$285+400; //@line 772 "xmlparse.c"
        $pool_addr_i=$286;
        $ms_addr_i1=$284;
        var $287=$pool_addr_i; //@line 5968 "xmlparse.c"
        var $288=$287; //@line 5968 "xmlparse.c"
        HEAP[$288]=0; //@line 5968 "xmlparse.c"
        var $289=$pool_addr_i; //@line 5969 "xmlparse.c"
        var $290=$289+4; //@line 5969 "xmlparse.c"
        HEAP[$290]=0; //@line 5969 "xmlparse.c"
        var $291=$pool_addr_i; //@line 5970 "xmlparse.c"
        var $292=$291+16; //@line 5970 "xmlparse.c"
        HEAP[$292]=0; //@line 5970 "xmlparse.c"
        var $293=$pool_addr_i; //@line 5971 "xmlparse.c"
        var $294=$293+12; //@line 5971 "xmlparse.c"
        HEAP[$294]=0; //@line 5971 "xmlparse.c"
        var $295=$pool_addr_i; //@line 5972 "xmlparse.c"
        var $296=$295+8; //@line 5972 "xmlparse.c"
        HEAP[$296]=0; //@line 5972 "xmlparse.c"
        var $297=$pool_addr_i; //@line 5973 "xmlparse.c"
        var $298=$297+20; //@line 5973 "xmlparse.c"
        var $299=$ms_addr_i1; //@line 5973 "xmlparse.c"
        HEAP[$298]=$299; //@line 5973 "xmlparse.c"
        var $300=$parser; //@line 773 "xmlparse.c"
        var $301=$300+12; //@line 773 "xmlparse.c"
        var $302=$parser; //@line 773 "xmlparse.c"
        var $303=$302+424; //@line 773 "xmlparse.c"
        $pool_addr_i5=$303;
        $ms_addr_i6=$301;
        var $304=$pool_addr_i5; //@line 5968 "xmlparse.c"
        var $305=$304; //@line 5968 "xmlparse.c"
        HEAP[$305]=0; //@line 5968 "xmlparse.c"
        var $306=$pool_addr_i5; //@line 5969 "xmlparse.c"
        var $307=$306+4; //@line 5969 "xmlparse.c"
        HEAP[$307]=0; //@line 5969 "xmlparse.c"
        var $308=$pool_addr_i5; //@line 5970 "xmlparse.c"
        var $309=$308+16; //@line 5970 "xmlparse.c"
        HEAP[$309]=0; //@line 5970 "xmlparse.c"
        var $310=$pool_addr_i5; //@line 5971 "xmlparse.c"
        var $311=$310+12; //@line 5971 "xmlparse.c"
        HEAP[$311]=0; //@line 5971 "xmlparse.c"
        var $312=$pool_addr_i5; //@line 5972 "xmlparse.c"
        var $313=$312+8; //@line 5972 "xmlparse.c"
        HEAP[$313]=0; //@line 5972 "xmlparse.c"
        var $314=$pool_addr_i5; //@line 5973 "xmlparse.c"
        var $315=$314+20; //@line 5973 "xmlparse.c"
        var $316=$ms_addr_i6; //@line 5973 "xmlparse.c"
        HEAP[$315]=$316; //@line 5973 "xmlparse.c"
        var $317=$parser; //@line 774 "xmlparse.c"
        var $318=$encodingName_addr; //@line 774 "xmlparse.c"
        _parserInit($317, $318); //@line 774 "xmlparse.c"
        var $319=$encodingName_addr; //@line 776 "xmlparse.c"
        var $320=($319)!=0; //@line 776 "xmlparse.c"
        if ($320) { __label__ = 20; break; } else { __label__ = 22; break; } //@line 776 "xmlparse.c"
      case 20: // $bb17
        var $321=$parser; //@line 776 "xmlparse.c"
        var $322=$321+228; //@line 776 "xmlparse.c"
        var $323=HEAP[$322]; //@line 776 "xmlparse.c"
        var $324=($323)==0; //@line 776 "xmlparse.c"
        if ($324) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 776 "xmlparse.c"
      case 21: // $bb18
        var $325=$parser; //@line 777 "xmlparse.c"
        _PyExpat_XML_ParserFree($325); //@line 777 "xmlparse.c"
        $3=0; //@line 778 "xmlparse.c"
        __label__ = 26; break; //@line 778 "xmlparse.c"
      case 22: // $bb19
        var $326=$nameSep_addr; //@line 781 "xmlparse.c"
        var $327=($326)!=0; //@line 781 "xmlparse.c"
        if ($327) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 781 "xmlparse.c"
      case 23: // $bb20
        var $328=$parser; //@line 782 "xmlparse.c"
        var $329=$328+232; //@line 782 "xmlparse.c"
        HEAP[$329]=1; //@line 782 "xmlparse.c"
        $0=_internal_utf8_encoding; //@line 4 "xmltok_ns.c"
        var $330=$0; //@line 4 "xmltok_ns.c"
        $retval_i3=$330; //@line 4 "xmltok_ns.c"
        var $retval1_i4=$retval_i3; //@line 4 "xmltok_ns.c"
        var $331=$parser; //@line 783 "xmlparse.c"
        var $332=$331+224; //@line 783 "xmlparse.c"
        HEAP[$332]=$retval1_i4; //@line 783 "xmlparse.c"
        var $333=$nameSep_addr; //@line 784 "xmlparse.c"
        var $334=HEAP[$333]; //@line 784 "xmlparse.c"
        var $335=$parser; //@line 784 "xmlparse.c"
        var $336=$335+456; //@line 784 "xmlparse.c"
        HEAP[$336]=$334; //@line 784 "xmlparse.c"
        __label__ = 25; break; //@line 784 "xmlparse.c"
      case 24: // $bb21
        $1=_internal_utf8_encoding; //@line 4 "xmltok_ns.c"
        var $337=$1; //@line 4 "xmltok_ns.c"
        $retval_i2=$337; //@line 4 "xmltok_ns.c"
        var $retval1_i=$retval_i2; //@line 4 "xmltok_ns.c"
        var $338=$parser; //@line 787 "xmlparse.c"
        var $339=$338+224; //@line 787 "xmlparse.c"
        HEAP[$339]=$retval1_i; //@line 787 "xmlparse.c"
        __label__ = 25; break; //@line 787 "xmlparse.c"
      case 25: // $bb22
        var $340=$parser; //@line 790 "xmlparse.c"
        $3=$340; //@line 790 "xmlparse.c"
        __label__ = 26; break; //@line 790 "xmlparse.c"
      case 26: // $bb23
        var $341=$3; //@line 723 "xmlparse.c"
        $retval=$341; //@line 723 "xmlparse.c"
        var $retval24=$retval; //@line 723 "xmlparse.c"
        ;
        return $retval24; //@line 723 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _parserInit($parser, $encodingName) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $parser_addr;
        var $encodingName_addr;
        var $iftmp_0;
        $parser_addr=$parser;
        $encodingName_addr=$encodingName;
        var $0=$parser_addr; //@line 796 "xmlparse.c"
        var $1=$0+264; //@line 796 "xmlparse.c"
        HEAP[$1]=(FUNCTION_TABLE_OFFSET + 48); //@line 796 "xmlparse.c"
        var $2=$parser_addr; //@line 797 "xmlparse.c"
        var $3=$2+252; //@line 797 "xmlparse.c"
        $state_addr_i=$3;
        var $4=$state_addr_i; //@line 1312 "xmlrole.c"
        var $5=$4; //@line 1312 "xmlrole.c"
        HEAP[$5]=(FUNCTION_TABLE_OFFSET + 50); //@line 1312 "xmlrole.c"
        var $6=$encodingName_addr; //@line 798 "xmlparse.c"
        var $7=($6)!=0; //@line 798 "xmlparse.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 798 "xmlparse.c"
      case 1: // $bb
        var $8=$parser_addr; //@line 798 "xmlparse.c"
        var $9=$8+400; //@line 798 "xmlparse.c"
        var $10=$encodingName_addr; //@line 798 "xmlparse.c"
        var $11=_poolCopyString($9, $10); //@line 798 "xmlparse.c"
        $iftmp_0=$11; //@line 798 "xmlparse.c"
        __label__ = 3; break; //@line 798 "xmlparse.c"
      case 2: // $bb1
        $iftmp_0=0; //@line 798 "xmlparse.c"
        __label__ = 3; break; //@line 798 "xmlparse.c"
      case 3: // $bb2
        var $12=$parser_addr; //@line 798 "xmlparse.c"
        var $13=$12+228; //@line 798 "xmlparse.c"
        var $14=$iftmp_0; //@line 798 "xmlparse.c"
        HEAP[$13]=$14; //@line 798 "xmlparse.c"
        var $15=$parser_addr; //@line 801 "xmlparse.c"
        var $16=$15+344; //@line 801 "xmlparse.c"
        HEAP[$16]=0; //@line 801 "xmlparse.c"
        var $17=$parser_addr; //@line 802 "xmlparse.c"
        var $18=$17+144; //@line 802 "xmlparse.c"
        var $19=$parser_addr; //@line 802 "xmlparse.c"
        var $20=$19+148; //@line 802 "xmlparse.c"
        var $21=_PyExpat_XmlInitEncoding($20, $18, 0); //@line 802 "xmlparse.c"
        var $22=$parser_addr; //@line 803 "xmlparse.c"
        var $23=$22; //@line 803 "xmlparse.c"
        HEAP[$23]=0; //@line 803 "xmlparse.c"
        var $24=$parser_addr; //@line 804 "xmlparse.c"
        var $25=$24+4; //@line 804 "xmlparse.c"
        HEAP[$25]=0; //@line 804 "xmlparse.c"
        var $26=$parser_addr; //@line 805 "xmlparse.c"
        var $27=$26+52; //@line 805 "xmlparse.c"
        HEAP[$27]=0; //@line 805 "xmlparse.c"
        var $28=$parser_addr; //@line 806 "xmlparse.c"
        var $29=$28+56; //@line 806 "xmlparse.c"
        HEAP[$29]=0; //@line 806 "xmlparse.c"
        var $30=$parser_addr; //@line 807 "xmlparse.c"
        var $31=$30+60; //@line 807 "xmlparse.c"
        HEAP[$31]=0; //@line 807 "xmlparse.c"
        var $32=$parser_addr; //@line 808 "xmlparse.c"
        var $33=$32+64; //@line 808 "xmlparse.c"
        HEAP[$33]=0; //@line 808 "xmlparse.c"
        var $34=$parser_addr; //@line 809 "xmlparse.c"
        var $35=$34+68; //@line 809 "xmlparse.c"
        HEAP[$35]=0; //@line 809 "xmlparse.c"
        var $36=$parser_addr; //@line 810 "xmlparse.c"
        var $37=$36+72; //@line 810 "xmlparse.c"
        HEAP[$37]=0; //@line 810 "xmlparse.c"
        var $38=$parser_addr; //@line 811 "xmlparse.c"
        var $39=$38+76; //@line 811 "xmlparse.c"
        HEAP[$39]=0; //@line 811 "xmlparse.c"
        var $40=$parser_addr; //@line 812 "xmlparse.c"
        var $41=$40+80; //@line 812 "xmlparse.c"
        HEAP[$41]=0; //@line 812 "xmlparse.c"
        var $42=$parser_addr; //@line 813 "xmlparse.c"
        var $43=$42+84; //@line 813 "xmlparse.c"
        HEAP[$43]=0; //@line 813 "xmlparse.c"
        var $44=$parser_addr; //@line 814 "xmlparse.c"
        var $45=$44+88; //@line 814 "xmlparse.c"
        HEAP[$45]=0; //@line 814 "xmlparse.c"
        var $46=$parser_addr; //@line 815 "xmlparse.c"
        var $47=$46+92; //@line 815 "xmlparse.c"
        HEAP[$47]=0; //@line 815 "xmlparse.c"
        var $48=$parser_addr; //@line 816 "xmlparse.c"
        var $49=$48+96; //@line 816 "xmlparse.c"
        HEAP[$49]=0; //@line 816 "xmlparse.c"
        var $50=$parser_addr; //@line 817 "xmlparse.c"
        var $51=$50+100; //@line 817 "xmlparse.c"
        HEAP[$51]=0; //@line 817 "xmlparse.c"
        var $52=$parser_addr; //@line 818 "xmlparse.c"
        var $53=$52+104; //@line 818 "xmlparse.c"
        HEAP[$53]=0; //@line 818 "xmlparse.c"
        var $54=$parser_addr; //@line 819 "xmlparse.c"
        var $55=$54+108; //@line 819 "xmlparse.c"
        HEAP[$55]=0; //@line 819 "xmlparse.c"
        var $56=$parser_addr; //@line 820 "xmlparse.c"
        var $57=$56+112; //@line 820 "xmlparse.c"
        HEAP[$57]=0; //@line 820 "xmlparse.c"
        var $58=$parser_addr; //@line 821 "xmlparse.c"
        var $59=$58+116; //@line 821 "xmlparse.c"
        var $60=$parser_addr; //@line 821 "xmlparse.c"
        HEAP[$59]=$60; //@line 821 "xmlparse.c"
        var $61=$parser_addr; //@line 822 "xmlparse.c"
        var $62=$61+120; //@line 822 "xmlparse.c"
        HEAP[$62]=0; //@line 822 "xmlparse.c"
        var $63=$parser_addr; //@line 823 "xmlparse.c"
        var $64=$63+128; //@line 823 "xmlparse.c"
        HEAP[$64]=0; //@line 823 "xmlparse.c"
        var $65=$parser_addr; //@line 824 "xmlparse.c"
        var $66=$65+132; //@line 824 "xmlparse.c"
        HEAP[$66]=0; //@line 824 "xmlparse.c"
        var $67=$parser_addr; //@line 825 "xmlparse.c"
        var $68=$67+136; //@line 825 "xmlparse.c"
        HEAP[$68]=0; //@line 825 "xmlparse.c"
        var $69=$parser_addr; //@line 826 "xmlparse.c"
        var $70=$69+140; //@line 826 "xmlparse.c"
        HEAP[$70]=0; //@line 826 "xmlparse.c"
        var $71=$parser_addr; //@line 827 "xmlparse.c"
        var $72=$71+8; //@line 827 "xmlparse.c"
        var $73=HEAP[$72]; //@line 827 "xmlparse.c"
        var $74=$parser_addr; //@line 827 "xmlparse.c"
        var $75=$74+24; //@line 827 "xmlparse.c"
        HEAP[$75]=$73; //@line 827 "xmlparse.c"
        var $76=$parser_addr; //@line 828 "xmlparse.c"
        var $77=$76+8; //@line 828 "xmlparse.c"
        var $78=HEAP[$77]; //@line 828 "xmlparse.c"
        var $79=$parser_addr; //@line 828 "xmlparse.c"
        var $80=$79+28; //@line 828 "xmlparse.c"
        HEAP[$80]=$78; //@line 828 "xmlparse.c"
        var $81=$parser_addr; //@line 829 "xmlparse.c"
        var $82=$81+36; //@line 829 "xmlparse.c"
        HEAP[$82]=0; //@line 829 "xmlparse.c"
        var $83=$parser_addr; //@line 830 "xmlparse.c"
        var $84=$83+40; //@line 830 "xmlparse.c"
        HEAP[$84]=0; //@line 830 "xmlparse.c"
        var $85=$parser_addr; //@line 831 "xmlparse.c"
        var $86=$85+328; //@line 831 "xmlparse.c"
        HEAP[$86]=0; //@line 831 "xmlparse.c"
        var $87=$parser_addr; //@line 832 "xmlparse.c"
        var $88=$87+332; //@line 832 "xmlparse.c"
        HEAP[$88]=0; //@line 832 "xmlparse.c"
        var $89=$parser_addr; //@line 833 "xmlparse.c"
        var $90=$89+300; //@line 833 "xmlparse.c"
        HEAP[$90]=0; //@line 833 "xmlparse.c"
        var $91=$parser_addr; //@line 834 "xmlparse.c"
        var $92=$91+304; //@line 834 "xmlparse.c"
        HEAP[$92]=0; //@line 834 "xmlparse.c"
        var $93=$parser_addr; //@line 835 "xmlparse.c"
        var $94=$93+308; //@line 835 "xmlparse.c"
        HEAP[$94]=0; //@line 835 "xmlparse.c"
        var $95=$parser_addr; //@line 836 "xmlparse.c"
        var $96=$95+312; //@line 836 "xmlparse.c"
        HEAP[$96]=0; //@line 836 "xmlparse.c"
        var $97=$parser_addr; //@line 837 "xmlparse.c"
        var $98=$97+316; //@line 837 "xmlparse.c"
        HEAP[$98]=0; //@line 837 "xmlparse.c"
        var $99=$parser_addr; //@line 838 "xmlparse.c"
        var $100=$99+320; //@line 838 "xmlparse.c"
        HEAP[$100]=0; //@line 838 "xmlparse.c"
        var $101=$parser_addr; //@line 839 "xmlparse.c"
        var $102=$101+324; //@line 839 "xmlparse.c"
        HEAP[$102]=0; //@line 839 "xmlparse.c"
        var $103=$parser_addr; //@line 840 "xmlparse.c"
        var $104=$103+336; //@line 840 "xmlparse.c"
        HEAP[$104]=0; //@line 840 "xmlparse.c"
        var $105=$parser_addr; //@line 841 "xmlparse.c"
        var $106=$105+337; //@line 841 "xmlparse.c"
        HEAP[$106]=0; //@line 841 "xmlparse.c"
        var $107=$parser_addr; //@line 842 "xmlparse.c"
        var $108=$107+392; //@line 842 "xmlparse.c"
        var $109=$108; //@line 842 "xmlparse.c"
        _llvm_memset_p0i8_i32($109, 0, 8, 1, 0); //@line 842 "xmlparse.c"
        var $110=$parser_addr; //@line 843 "xmlparse.c"
        var $111=$110+268; //@line 843 "xmlparse.c"
        HEAP[$111]=0; //@line 843 "xmlparse.c"
        var $112=$parser_addr; //@line 844 "xmlparse.c"
        var $113=$112+272; //@line 844 "xmlparse.c"
        HEAP[$113]=0; //@line 844 "xmlparse.c"
        var $114=$parser_addr; //@line 845 "xmlparse.c"
        var $115=$114+276; //@line 845 "xmlparse.c"
        HEAP[$115]=0; //@line 845 "xmlparse.c"
        var $116=$parser_addr; //@line 846 "xmlparse.c"
        var $117=$116+280; //@line 846 "xmlparse.c"
        HEAP[$117]=0; //@line 846 "xmlparse.c"
        var $118=$parser_addr; //@line 847 "xmlparse.c"
        var $119=$118+284; //@line 847 "xmlparse.c"
        HEAP[$119]=0; //@line 847 "xmlparse.c"
        var $120=$parser_addr; //@line 848 "xmlparse.c"
        var $121=$120+292; //@line 848 "xmlparse.c"
        HEAP[$121]=1; //@line 848 "xmlparse.c"
        var $122=$parser_addr; //@line 849 "xmlparse.c"
        var $123=$122+296; //@line 849 "xmlparse.c"
        HEAP[$123]=0; //@line 849 "xmlparse.c"
        var $124=$parser_addr; //@line 850 "xmlparse.c"
        var $125=$124+348; //@line 850 "xmlparse.c"
        HEAP[$125]=0; //@line 850 "xmlparse.c"
        var $126=$parser_addr; //@line 851 "xmlparse.c"
        var $127=$126+356; //@line 851 "xmlparse.c"
        HEAP[$127]=0; //@line 851 "xmlparse.c"
        var $128=$parser_addr; //@line 852 "xmlparse.c"
        var $129=$128+368; //@line 852 "xmlparse.c"
        HEAP[$129]=0; //@line 852 "xmlparse.c"
        var $130=$parser_addr; //@line 853 "xmlparse.c"
        var $131=$130+236; //@line 853 "xmlparse.c"
        HEAP[$131]=0; //@line 853 "xmlparse.c"
        var $132=$parser_addr; //@line 854 "xmlparse.c"
        var $133=$132+248; //@line 854 "xmlparse.c"
        HEAP[$133]=0; //@line 854 "xmlparse.c"
        var $134=$parser_addr; //@line 855 "xmlparse.c"
        var $135=$134+240; //@line 855 "xmlparse.c"
        HEAP[$135]=0; //@line 855 "xmlparse.c"
        var $136=$parser_addr; //@line 856 "xmlparse.c"
        var $137=$136+460; //@line 856 "xmlparse.c"
        HEAP[$137]=0; //@line 856 "xmlparse.c"
        var $138=$parser_addr; //@line 857 "xmlparse.c"
        var $139=$138+464; //@line 857 "xmlparse.c"
        var $140=$139; //@line 857 "xmlparse.c"
        HEAP[$140]=0; //@line 857 "xmlparse.c"
        ;
        return; //@line 863 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ParserReset($parser, $encodingName) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr_i12;
        var $p_i13;
        var $tem_i14;
        var $pool_addr_i;
        var $p_i;
        var $tem_i;
        var $pool_addr_i27_i;
        var $p_i28_i;
        var $tem_i29_i;
        var $pool_addr_i_i;
        var $p_i_i;
        var $tem_i23_i;
        var $table_addr_i17_i;
        var $i_i18_i;
        var $table_addr_i11_i;
        var $i_i12_i;
        var $table_addr_i5_i;
        var $i_i6_i;
        var $table_addr_i2_i;
        var $i_i_i;
        var $iter_addr_i1_i;
        var $retval_i_i;
        var $0;
        var $tem_i_i;
        var $iter_addr_i_i;
        var $table_addr_i_i;
        var $p_addr_i;
        var $ms_addr_i;
        var $iter_i=__stackBase__;
        var $e_i;
        var $parser_addr_i1;
        var $bindings_addr_i2;
        var $b_i3;
        var $parser_addr_i;
        var $bindings_addr_i;
        var $b_i;
        var $parser_addr;
        var $encodingName_addr;
        var $retval;
        var $1;
        var $tStk;
        var $openEntityList;
        var $tag;
        var $openEntity;
        $parser_addr=$parser;
        $encodingName_addr=$encodingName;
        var $2=$parser_addr; //@line 882 "xmlparse.c"
        var $3=$2+460; //@line 882 "xmlparse.c"
        var $4=HEAP[$3]; //@line 882 "xmlparse.c"
        var $5=($4)!=0; //@line 882 "xmlparse.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 882 "xmlparse.c"
      case 1: // $bb
        $1=0; //@line 883 "xmlparse.c"
        __label__ = 46; break; //@line 883 "xmlparse.c"
      case 2: // $bb1
        var $6=$parser_addr; //@line 885 "xmlparse.c"
        var $7=$6+348; //@line 885 "xmlparse.c"
        var $8=HEAP[$7]; //@line 885 "xmlparse.c"
        $tStk=$8; //@line 885 "xmlparse.c"
        var $9=($8)!=0; //@line 886 "xmlparse.c"
        if ($9) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 886 "xmlparse.c"
      case 3: // $bb2
        var $10=$tStk; //@line 887 "xmlparse.c"
        $tag=$10; //@line 887 "xmlparse.c"
        var $11=$tStk; //@line 888 "xmlparse.c"
        var $12=$11; //@line 888 "xmlparse.c"
        var $13=HEAP[$12]; //@line 888 "xmlparse.c"
        $tStk=$13; //@line 888 "xmlparse.c"
        var $14=$parser_addr; //@line 889 "xmlparse.c"
        var $15=$14+352; //@line 889 "xmlparse.c"
        var $16=HEAP[$15]; //@line 889 "xmlparse.c"
        var $17=$tag; //@line 889 "xmlparse.c"
        var $18=$17; //@line 889 "xmlparse.c"
        HEAP[$18]=$16; //@line 889 "xmlparse.c"
        var $19=$tag; //@line 890 "xmlparse.c"
        var $20=$19+44; //@line 890 "xmlparse.c"
        var $21=HEAP[$20]; //@line 890 "xmlparse.c"
        var $22=$parser_addr; //@line 890 "xmlparse.c"
        $parser_addr_i=$22;
        $bindings_addr_i=$21;
        var $23=($21)!=0; //@line 869 "xmlparse.c"
        if ($23) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 869 "xmlparse.c"
      case 4: // $bb_i
        var $24=$bindings_addr_i; //@line 870 "xmlparse.c"
        $b_i=$24; //@line 870 "xmlparse.c"
        var $25=$bindings_addr_i; //@line 871 "xmlparse.c"
        var $26=$25+4; //@line 871 "xmlparse.c"
        var $27=HEAP[$26]; //@line 871 "xmlparse.c"
        $bindings_addr_i=$27; //@line 871 "xmlparse.c"
        var $28=$parser_addr_i; //@line 872 "xmlparse.c"
        var $29=$28+360; //@line 872 "xmlparse.c"
        var $30=HEAP[$29]; //@line 872 "xmlparse.c"
        var $31=$b_i; //@line 872 "xmlparse.c"
        var $32=$31+4; //@line 872 "xmlparse.c"
        HEAP[$32]=$30; //@line 872 "xmlparse.c"
        var $33=$parser_addr_i; //@line 873 "xmlparse.c"
        var $34=$33+360; //@line 873 "xmlparse.c"
        var $35=$b_i; //@line 873 "xmlparse.c"
        HEAP[$34]=$35; //@line 873 "xmlparse.c"
        var $_pr_i=$bindings_addr_i;
        var $36=($_pr_i)!=0; //@line 869 "xmlparse.c"
        if ($36) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 869 "xmlparse.c"
      case 5: // $moveToFreeBindingList_exit
        var $37=$tag; //@line 891 "xmlparse.c"
        var $38=$37+44; //@line 891 "xmlparse.c"
        HEAP[$38]=0; //@line 891 "xmlparse.c"
        var $39=$parser_addr; //@line 892 "xmlparse.c"
        var $40=$39+352; //@line 892 "xmlparse.c"
        var $41=$tag; //@line 892 "xmlparse.c"
        HEAP[$40]=$41; //@line 892 "xmlparse.c"
        var $_pr=$tStk;
        var $42=($_pr)!=0; //@line 886 "xmlparse.c"
        if ($42) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 886 "xmlparse.c"
      case 6: // $bb4
        var $43=$parser_addr; //@line 895 "xmlparse.c"
        var $44=$43+284; //@line 895 "xmlparse.c"
        var $45=HEAP[$44]; //@line 895 "xmlparse.c"
        $openEntityList=$45; //@line 895 "xmlparse.c"
        var $46=($45)!=0; //@line 896 "xmlparse.c"
        if ($46) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 896 "xmlparse.c"
      case 7: // $bb5
        var $47=$openEntityList; //@line 897 "xmlparse.c"
        $openEntity=$47; //@line 897 "xmlparse.c"
        var $48=$openEntity; //@line 898 "xmlparse.c"
        var $49=$48+8; //@line 898 "xmlparse.c"
        var $50=HEAP[$49]; //@line 898 "xmlparse.c"
        $openEntityList=$50; //@line 898 "xmlparse.c"
        var $51=$parser_addr; //@line 899 "xmlparse.c"
        var $52=$51+288; //@line 899 "xmlparse.c"
        var $53=HEAP[$52]; //@line 899 "xmlparse.c"
        var $54=$openEntity; //@line 899 "xmlparse.c"
        var $55=$54+8; //@line 899 "xmlparse.c"
        HEAP[$55]=$53; //@line 899 "xmlparse.c"
        var $56=$parser_addr; //@line 900 "xmlparse.c"
        var $57=$56+288; //@line 900 "xmlparse.c"
        var $58=$openEntity; //@line 900 "xmlparse.c"
        HEAP[$57]=$58; //@line 900 "xmlparse.c"
        var $_pr20=$openEntityList;
        var $59=($_pr20)!=0; //@line 896 "xmlparse.c"
        if ($59) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 896 "xmlparse.c"
      case 8: // $bb7
        var $60=$parser_addr; //@line 902 "xmlparse.c"
        var $61=$60+356; //@line 902 "xmlparse.c"
        var $62=HEAP[$61]; //@line 902 "xmlparse.c"
        var $63=$parser_addr; //@line 902 "xmlparse.c"
        $parser_addr_i1=$63;
        $bindings_addr_i2=$62;
        var $64=($62)!=0; //@line 869 "xmlparse.c"
        if ($64) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 869 "xmlparse.c"
      case 9: // $bb_i5
        var $65=$bindings_addr_i2; //@line 870 "xmlparse.c"
        $b_i3=$65; //@line 870 "xmlparse.c"
        var $66=$bindings_addr_i2; //@line 871 "xmlparse.c"
        var $67=$66+4; //@line 871 "xmlparse.c"
        var $68=HEAP[$67]; //@line 871 "xmlparse.c"
        $bindings_addr_i2=$68; //@line 871 "xmlparse.c"
        var $69=$parser_addr_i1; //@line 872 "xmlparse.c"
        var $70=$69+360; //@line 872 "xmlparse.c"
        var $71=HEAP[$70]; //@line 872 "xmlparse.c"
        var $72=$b_i3; //@line 872 "xmlparse.c"
        var $73=$72+4; //@line 872 "xmlparse.c"
        HEAP[$73]=$71; //@line 872 "xmlparse.c"
        var $74=$parser_addr_i1; //@line 873 "xmlparse.c"
        var $75=$74+360; //@line 873 "xmlparse.c"
        var $76=$b_i3; //@line 873 "xmlparse.c"
        HEAP[$75]=$76; //@line 873 "xmlparse.c"
        var $_pr_i4=$bindings_addr_i2;
        var $77=($_pr_i4)!=0; //@line 869 "xmlparse.c"
        if ($77) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 869 "xmlparse.c"
      case 10: // $moveToFreeBindingList_exit6
        var $78=$parser_addr; //@line 903 "xmlparse.c"
        var $79=$78+12; //@line 903 "xmlparse.c"
        var $80=$79+8; //@line 903 "xmlparse.c"
        var $81=HEAP[$80]; //@line 903 "xmlparse.c"
        var $82=$parser_addr; //@line 903 "xmlparse.c"
        var $83=$82+236; //@line 903 "xmlparse.c"
        var $84=HEAP[$83]; //@line 903 "xmlparse.c"
        FUNCTION_TABLE[$81]($84); //@line 903 "xmlparse.c"
        var $85=$parser_addr; //@line 904 "xmlparse.c"
        var $86=$85+248; //@line 904 "xmlparse.c"
        var $87=HEAP[$86]; //@line 904 "xmlparse.c"
        var $88=($87)!=0; //@line 904 "xmlparse.c"
        if ($88) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 904 "xmlparse.c"
      case 11: // $bb8
        var $89=$parser_addr; //@line 905 "xmlparse.c"
        var $90=$89+248; //@line 905 "xmlparse.c"
        var $91=HEAP[$90]; //@line 905 "xmlparse.c"
        var $92=$parser_addr; //@line 905 "xmlparse.c"
        var $93=$92+240; //@line 905 "xmlparse.c"
        var $94=HEAP[$93]; //@line 905 "xmlparse.c"
        FUNCTION_TABLE[$91]($94); //@line 905 "xmlparse.c"
        __label__ = 12; break; //@line 905 "xmlparse.c"
      case 12: // $bb9
        var $95=$parser_addr; //@line 906 "xmlparse.c"
        var $96=$95+400; //@line 906 "xmlparse.c"
        $pool_addr_i=$96;
        var $97=$pool_addr_i; //@line 5979 "xmlparse.c"
        var $98=$97+4; //@line 5979 "xmlparse.c"
        var $99=HEAP[$98]; //@line 5979 "xmlparse.c"
        var $100=($99)==0; //@line 5979 "xmlparse.c"
        var $101=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $102=$101; //@line 5980 "xmlparse.c"
        var $103=HEAP[$102]; //@line 5980 "xmlparse.c"
        if ($100) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 5979 "xmlparse.c"
      case 13: // $bb_i8
        var $104=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $105=$104+4; //@line 5980 "xmlparse.c"
        HEAP[$105]=$103; //@line 5980 "xmlparse.c"
        __label__ = 16; break; //@line 5980 "xmlparse.c"
      case 14: // $bb1_i9
        $p_i=$103; //@line 5982 "xmlparse.c"
        var $106=($103)!=0; //@line 5983 "xmlparse.c"
        if ($106) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 5983 "xmlparse.c"
      case 15: // $bb2_i10
        var $107=$p_i; //@line 5984 "xmlparse.c"
        var $108=$107; //@line 5984 "xmlparse.c"
        var $109=HEAP[$108]; //@line 5984 "xmlparse.c"
        $tem_i=$109; //@line 5984 "xmlparse.c"
        var $110=$pool_addr_i; //@line 5985 "xmlparse.c"
        var $111=$110+4; //@line 5985 "xmlparse.c"
        var $112=HEAP[$111]; //@line 5985 "xmlparse.c"
        var $113=$p_i; //@line 5985 "xmlparse.c"
        var $114=$113; //@line 5985 "xmlparse.c"
        HEAP[$114]=$112; //@line 5985 "xmlparse.c"
        var $115=$pool_addr_i; //@line 5986 "xmlparse.c"
        var $116=$115+4; //@line 5986 "xmlparse.c"
        var $117=$p_i; //@line 5986 "xmlparse.c"
        HEAP[$116]=$117; //@line 5986 "xmlparse.c"
        var $118=$tem_i; //@line 5987 "xmlparse.c"
        $p_i=$118; //@line 5987 "xmlparse.c"
        var $119=($118)!=0; //@line 5983 "xmlparse.c"
        if ($119) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 5983 "xmlparse.c"
      case 16: // $poolClear_exit
        var $120=$pool_addr_i; //@line 5990 "xmlparse.c"
        var $121=$120; //@line 5990 "xmlparse.c"
        HEAP[$121]=0; //@line 5990 "xmlparse.c"
        var $122=$pool_addr_i; //@line 5991 "xmlparse.c"
        var $123=$122+16; //@line 5991 "xmlparse.c"
        HEAP[$123]=0; //@line 5991 "xmlparse.c"
        var $124=$pool_addr_i; //@line 5992 "xmlparse.c"
        var $125=$124+12; //@line 5992 "xmlparse.c"
        HEAP[$125]=0; //@line 5992 "xmlparse.c"
        var $126=$pool_addr_i; //@line 5993 "xmlparse.c"
        var $127=$126+8; //@line 5993 "xmlparse.c"
        HEAP[$127]=0; //@line 5993 "xmlparse.c"
        var $128=$parser_addr; //@line 907 "xmlparse.c"
        var $129=$128+424; //@line 907 "xmlparse.c"
        $pool_addr_i12=$129;
        var $130=$pool_addr_i12; //@line 5979 "xmlparse.c"
        var $131=$130+4; //@line 5979 "xmlparse.c"
        var $132=HEAP[$131]; //@line 5979 "xmlparse.c"
        var $133=($132)==0; //@line 5979 "xmlparse.c"
        var $134=$pool_addr_i12; //@line 5980 "xmlparse.c"
        var $135=$134; //@line 5980 "xmlparse.c"
        var $136=HEAP[$135]; //@line 5980 "xmlparse.c"
        if ($133) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 5979 "xmlparse.c"
      case 17: // $bb_i15
        var $137=$pool_addr_i12; //@line 5980 "xmlparse.c"
        var $138=$137+4; //@line 5980 "xmlparse.c"
        HEAP[$138]=$136; //@line 5980 "xmlparse.c"
        __label__ = 20; break; //@line 5980 "xmlparse.c"
      case 18: // $bb1_i16
        $p_i13=$136; //@line 5982 "xmlparse.c"
        var $139=($136)!=0; //@line 5983 "xmlparse.c"
        if ($139) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 5983 "xmlparse.c"
      case 19: // $bb2_i17
        var $140=$p_i13; //@line 5984 "xmlparse.c"
        var $141=$140; //@line 5984 "xmlparse.c"
        var $142=HEAP[$141]; //@line 5984 "xmlparse.c"
        $tem_i14=$142; //@line 5984 "xmlparse.c"
        var $143=$pool_addr_i12; //@line 5985 "xmlparse.c"
        var $144=$143+4; //@line 5985 "xmlparse.c"
        var $145=HEAP[$144]; //@line 5985 "xmlparse.c"
        var $146=$p_i13; //@line 5985 "xmlparse.c"
        var $147=$146; //@line 5985 "xmlparse.c"
        HEAP[$147]=$145; //@line 5985 "xmlparse.c"
        var $148=$pool_addr_i12; //@line 5986 "xmlparse.c"
        var $149=$148+4; //@line 5986 "xmlparse.c"
        var $150=$p_i13; //@line 5986 "xmlparse.c"
        HEAP[$149]=$150; //@line 5986 "xmlparse.c"
        var $151=$tem_i14; //@line 5987 "xmlparse.c"
        $p_i13=$151; //@line 5987 "xmlparse.c"
        var $152=($151)!=0; //@line 5983 "xmlparse.c"
        if ($152) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 5983 "xmlparse.c"
      case 20: // $poolClear_exit19
        var $153=$pool_addr_i12; //@line 5990 "xmlparse.c"
        var $154=$153; //@line 5990 "xmlparse.c"
        HEAP[$154]=0; //@line 5990 "xmlparse.c"
        var $155=$pool_addr_i12; //@line 5991 "xmlparse.c"
        var $156=$155+16; //@line 5991 "xmlparse.c"
        HEAP[$156]=0; //@line 5991 "xmlparse.c"
        var $157=$pool_addr_i12; //@line 5992 "xmlparse.c"
        var $158=$157+12; //@line 5992 "xmlparse.c"
        HEAP[$158]=0; //@line 5992 "xmlparse.c"
        var $159=$pool_addr_i12; //@line 5993 "xmlparse.c"
        var $160=$159+8; //@line 5993 "xmlparse.c"
        HEAP[$160]=0; //@line 5993 "xmlparse.c"
        var $161=$parser_addr; //@line 908 "xmlparse.c"
        var $162=$encodingName_addr; //@line 908 "xmlparse.c"
        _parserInit($161, $162); //@line 908 "xmlparse.c"
        var $163=$parser_addr; //@line 909 "xmlparse.c"
        var $164=$163+12; //@line 909 "xmlparse.c"
        var $165=$parser_addr; //@line 909 "xmlparse.c"
        var $166=$165+340; //@line 909 "xmlparse.c"
        var $167=HEAP[$166]; //@line 909 "xmlparse.c"
        $p_addr_i=$167;
        $ms_addr_i=$164;
        var $168=$p_addr_i; //@line 5553 "xmlparse.c"
        var $169=$168+20; //@line 5553 "xmlparse.c"
        $iter_addr_i_i=$iter_i;
        $table_addr_i_i=$169;
        var $170=$table_addr_i_i; //@line 5950 "xmlparse.c"
        var $171=$170; //@line 5950 "xmlparse.c"
        var $172=HEAP[$171]; //@line 5950 "xmlparse.c"
        var $173=$iter_addr_i_i; //@line 5950 "xmlparse.c"
        var $174=$173; //@line 5950 "xmlparse.c"
        HEAP[$174]=$172; //@line 5950 "xmlparse.c"
        var $175=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $176=$175; //@line 5951 "xmlparse.c"
        var $177=HEAP[$176]; //@line 5951 "xmlparse.c"
        var $178=$table_addr_i_i; //@line 5951 "xmlparse.c"
        var $179=$178+8; //@line 5951 "xmlparse.c"
        var $180=HEAP[$179]; //@line 5951 "xmlparse.c"
        var $181=$177+4*$180; //@line 5951 "xmlparse.c"
        var $182=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $183=$182+4; //@line 5951 "xmlparse.c"
        HEAP[$183]=$181; //@line 5951 "xmlparse.c"
        __label__ = 21; break; //@line 5553 "xmlparse.c"
      case 21: // $bb_i7
        $iter_addr_i1_i=$iter_i;
        __label__ = 24; break; //@line 5957 "xmlparse.c"
      case 22: // $bb_i_i
        var $184=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $185=$184; //@line 5958 "xmlparse.c"
        var $186=HEAP[$185]; //@line 5958 "xmlparse.c"
        var $187=HEAP[$186]; //@line 5958 "xmlparse.c"
        $tem_i_i=$187; //@line 5958 "xmlparse.c"
        var $188=$186+4; //@line 5958 "xmlparse.c"
        var $189=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $190=$189; //@line 5958 "xmlparse.c"
        HEAP[$190]=$188; //@line 5958 "xmlparse.c"
        var $191=$tem_i_i; //@line 5959 "xmlparse.c"
        var $192=($191)!=0; //@line 5959 "xmlparse.c"
        if ($192) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 5959 "xmlparse.c"
      case 23: // $bb1_i_i
        var $193=$tem_i_i; //@line 5960 "xmlparse.c"
        $0=$193; //@line 5960 "xmlparse.c"
        __label__ = 26; break; //@line 5960 "xmlparse.c"
      case 24: // $bb2_i_i
        var $194=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $195=$194; //@line 5957 "xmlparse.c"
        var $196=HEAP[$195]; //@line 5957 "xmlparse.c"
        var $197=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $198=$197+4; //@line 5957 "xmlparse.c"
        var $199=HEAP[$198]; //@line 5957 "xmlparse.c"
        var $200=($196)!=($199); //@line 5957 "xmlparse.c"
        if ($200) { __label__ = 22; break; } else { __label__ = 25; break; } //@line 5957 "xmlparse.c"
      case 25: // $bb3_i_i
        $0=0; //@line 5962 "xmlparse.c"
        __label__ = 26; break; //@line 5962 "xmlparse.c"
      case 26: // $hashTableIterNext_exit_i
        var $201=$0; //@line 5960 "xmlparse.c"
        $retval_i_i=$201; //@line 5960 "xmlparse.c"
        var $retval5_i_i=$retval_i_i; //@line 5960 "xmlparse.c"
        var $202=$retval5_i_i; //@line 5555 "xmlparse.c"
        $e_i=$202; //@line 5555 "xmlparse.c"
        var $203=($202)==0; //@line 5556 "xmlparse.c"
        if ($203) { __label__ = 29; break; } else { __label__ = 27; break; } //@line 5556 "xmlparse.c"
      case 27: // $bb1_i
        var $204=$e_i; //@line 5558 "xmlparse.c"
        var $205=$204+16; //@line 5558 "xmlparse.c"
        var $206=HEAP[$205]; //@line 5558 "xmlparse.c"
        var $207=($206)!=0; //@line 5558 "xmlparse.c"
        if ($207) { __label__ = 28; break; } else { __label__ = 21; break; } //@line 5558 "xmlparse.c"
      case 28: // $bb2_i
        var $208=$ms_addr_i; //@line 5559 "xmlparse.c"
        var $209=$208+8; //@line 5559 "xmlparse.c"
        var $210=HEAP[$209]; //@line 5559 "xmlparse.c"
        var $211=$e_i; //@line 5559 "xmlparse.c"
        var $212=$211+20; //@line 5559 "xmlparse.c"
        var $213=HEAP[$212]; //@line 5559 "xmlparse.c"
        var $214=$213; //@line 5559 "xmlparse.c"
        FUNCTION_TABLE[$210]($214); //@line 5559 "xmlparse.c"
        __label__ = 21; break; //@line 5559 "xmlparse.c"
      case 29: // $bb4_i
        var $215=$p_addr_i; //@line 5561 "xmlparse.c"
        var $216=$215; //@line 5561 "xmlparse.c"
        $table_addr_i2_i=$216;
        $i_i_i=0; //@line 5921 "xmlparse.c"
        var $217=$table_addr_i2_i; //@line 5921 "xmlparse.c"
        var $218=$217+8; //@line 5921 "xmlparse.c"
        var $219=HEAP[$218]; //@line 5921 "xmlparse.c"
        var $220=$i_i_i; //@line 5921 "xmlparse.c"
        var $221=($219) > ($220); //@line 5921 "xmlparse.c"
        var $222=$table_addr_i2_i; //@line 5922 "xmlparse.c"
        if ($221) { __lastLabel__ = 29; __label__ = 30; break; } else { __lastLabel__ = 29; __label__ = 31; break; } //@line 5921 "xmlparse.c"
      case 30: // $bb_i3_i
        var $223=__lastLabel__ == 30 ? $247 : ($222);
        var $224=$223+16; //@line 5922 "xmlparse.c"
        var $225=HEAP[$224]; //@line 5922 "xmlparse.c"
        var $226=$225+8; //@line 5922 "xmlparse.c"
        var $227=HEAP[$226]; //@line 5922 "xmlparse.c"
        var $228=$table_addr_i2_i; //@line 5922 "xmlparse.c"
        var $229=$228; //@line 5922 "xmlparse.c"
        var $230=HEAP[$229]; //@line 5922 "xmlparse.c"
        var $231=$i_i_i; //@line 5922 "xmlparse.c"
        var $232=$230+4*$231; //@line 5922 "xmlparse.c"
        var $233=HEAP[$232]; //@line 5922 "xmlparse.c"
        var $234=$233; //@line 5922 "xmlparse.c"
        FUNCTION_TABLE[$227]($234); //@line 5922 "xmlparse.c"
        var $235=$table_addr_i2_i; //@line 5923 "xmlparse.c"
        var $236=$235; //@line 5923 "xmlparse.c"
        var $237=HEAP[$236]; //@line 5923 "xmlparse.c"
        var $238=$i_i_i; //@line 5923 "xmlparse.c"
        var $239=$237+4*$238; //@line 5923 "xmlparse.c"
        HEAP[$239]=0; //@line 5923 "xmlparse.c"
        var $240=$i_i_i; //@line 5921 "xmlparse.c"
        var $241=($240) + 1; //@line 5921 "xmlparse.c"
        $i_i_i=$241; //@line 5921 "xmlparse.c"
        var $242=$table_addr_i2_i; //@line 5921 "xmlparse.c"
        var $243=$242+8; //@line 5921 "xmlparse.c"
        var $244=HEAP[$243]; //@line 5921 "xmlparse.c"
        var $245=$i_i_i; //@line 5921 "xmlparse.c"
        var $246=($244) > ($245); //@line 5921 "xmlparse.c"
        var $247=$table_addr_i2_i; //@line 5922 "xmlparse.c"
        if ($246) { __lastLabel__ = 30; __label__ = 30; break; } else { __lastLabel__ = 30; __label__ = 31; break; } //@line 5921 "xmlparse.c"
      case 31: // $hashTableClear_exit_i
        var $_lcssa_i_i=__lastLabel__ == 29 ? $222 : ($247);
        var $248=$_lcssa_i_i+12; //@line 5925 "xmlparse.c"
        HEAP[$248]=0; //@line 5925 "xmlparse.c"
        var $249=$p_addr_i; //@line 5566 "xmlparse.c"
        var $250=$249+20; //@line 5566 "xmlparse.c"
        $table_addr_i5_i=$250;
        $i_i6_i=0; //@line 5921 "xmlparse.c"
        var $251=$table_addr_i5_i; //@line 5921 "xmlparse.c"
        var $252=$251+8; //@line 5921 "xmlparse.c"
        var $253=HEAP[$252]; //@line 5921 "xmlparse.c"
        var $254=$i_i6_i; //@line 5921 "xmlparse.c"
        var $255=($253) > ($254); //@line 5921 "xmlparse.c"
        var $256=$table_addr_i5_i; //@line 5922 "xmlparse.c"
        if ($255) { __lastLabel__ = 31; __label__ = 32; break; } else { __lastLabel__ = 31; __label__ = 33; break; } //@line 5921 "xmlparse.c"
      case 32: // $bb_i7_i
        var $257=__lastLabel__ == 32 ? $281 : ($256);
        var $258=$257+16; //@line 5922 "xmlparse.c"
        var $259=HEAP[$258]; //@line 5922 "xmlparse.c"
        var $260=$259+8; //@line 5922 "xmlparse.c"
        var $261=HEAP[$260]; //@line 5922 "xmlparse.c"
        var $262=$table_addr_i5_i; //@line 5922 "xmlparse.c"
        var $263=$262; //@line 5922 "xmlparse.c"
        var $264=HEAP[$263]; //@line 5922 "xmlparse.c"
        var $265=$i_i6_i; //@line 5922 "xmlparse.c"
        var $266=$264+4*$265; //@line 5922 "xmlparse.c"
        var $267=HEAP[$266]; //@line 5922 "xmlparse.c"
        var $268=$267; //@line 5922 "xmlparse.c"
        FUNCTION_TABLE[$261]($268); //@line 5922 "xmlparse.c"
        var $269=$table_addr_i5_i; //@line 5923 "xmlparse.c"
        var $270=$269; //@line 5923 "xmlparse.c"
        var $271=HEAP[$270]; //@line 5923 "xmlparse.c"
        var $272=$i_i6_i; //@line 5923 "xmlparse.c"
        var $273=$271+4*$272; //@line 5923 "xmlparse.c"
        HEAP[$273]=0; //@line 5923 "xmlparse.c"
        var $274=$i_i6_i; //@line 5921 "xmlparse.c"
        var $275=($274) + 1; //@line 5921 "xmlparse.c"
        $i_i6_i=$275; //@line 5921 "xmlparse.c"
        var $276=$table_addr_i5_i; //@line 5921 "xmlparse.c"
        var $277=$276+8; //@line 5921 "xmlparse.c"
        var $278=HEAP[$277]; //@line 5921 "xmlparse.c"
        var $279=$i_i6_i; //@line 5921 "xmlparse.c"
        var $280=($278) > ($279); //@line 5921 "xmlparse.c"
        var $281=$table_addr_i5_i; //@line 5922 "xmlparse.c"
        if ($280) { __lastLabel__ = 32; __label__ = 32; break; } else { __lastLabel__ = 32; __label__ = 33; break; } //@line 5921 "xmlparse.c"
      case 33: // $hashTableClear_exit10_i
        var $_lcssa_i8_i=__lastLabel__ == 31 ? $256 : ($281);
        var $282=$_lcssa_i8_i+12; //@line 5925 "xmlparse.c"
        HEAP[$282]=0; //@line 5925 "xmlparse.c"
        var $283=$p_addr_i; //@line 5567 "xmlparse.c"
        var $284=$283+40; //@line 5567 "xmlparse.c"
        $table_addr_i11_i=$284;
        $i_i12_i=0; //@line 5921 "xmlparse.c"
        var $285=$table_addr_i11_i; //@line 5921 "xmlparse.c"
        var $286=$285+8; //@line 5921 "xmlparse.c"
        var $287=HEAP[$286]; //@line 5921 "xmlparse.c"
        var $288=$i_i12_i; //@line 5921 "xmlparse.c"
        var $289=($287) > ($288); //@line 5921 "xmlparse.c"
        var $290=$table_addr_i11_i; //@line 5922 "xmlparse.c"
        if ($289) { __lastLabel__ = 33; __label__ = 34; break; } else { __lastLabel__ = 33; __label__ = 35; break; } //@line 5921 "xmlparse.c"
      case 34: // $bb_i13_i
        var $291=__lastLabel__ == 34 ? $315 : ($290);
        var $292=$291+16; //@line 5922 "xmlparse.c"
        var $293=HEAP[$292]; //@line 5922 "xmlparse.c"
        var $294=$293+8; //@line 5922 "xmlparse.c"
        var $295=HEAP[$294]; //@line 5922 "xmlparse.c"
        var $296=$table_addr_i11_i; //@line 5922 "xmlparse.c"
        var $297=$296; //@line 5922 "xmlparse.c"
        var $298=HEAP[$297]; //@line 5922 "xmlparse.c"
        var $299=$i_i12_i; //@line 5922 "xmlparse.c"
        var $300=$298+4*$299; //@line 5922 "xmlparse.c"
        var $301=HEAP[$300]; //@line 5922 "xmlparse.c"
        var $302=$301; //@line 5922 "xmlparse.c"
        FUNCTION_TABLE[$295]($302); //@line 5922 "xmlparse.c"
        var $303=$table_addr_i11_i; //@line 5923 "xmlparse.c"
        var $304=$303; //@line 5923 "xmlparse.c"
        var $305=HEAP[$304]; //@line 5923 "xmlparse.c"
        var $306=$i_i12_i; //@line 5923 "xmlparse.c"
        var $307=$305+4*$306; //@line 5923 "xmlparse.c"
        HEAP[$307]=0; //@line 5923 "xmlparse.c"
        var $308=$i_i12_i; //@line 5921 "xmlparse.c"
        var $309=($308) + 1; //@line 5921 "xmlparse.c"
        $i_i12_i=$309; //@line 5921 "xmlparse.c"
        var $310=$table_addr_i11_i; //@line 5921 "xmlparse.c"
        var $311=$310+8; //@line 5921 "xmlparse.c"
        var $312=HEAP[$311]; //@line 5921 "xmlparse.c"
        var $313=$i_i12_i; //@line 5921 "xmlparse.c"
        var $314=($312) > ($313); //@line 5921 "xmlparse.c"
        var $315=$table_addr_i11_i; //@line 5922 "xmlparse.c"
        if ($314) { __lastLabel__ = 34; __label__ = 34; break; } else { __lastLabel__ = 34; __label__ = 35; break; } //@line 5921 "xmlparse.c"
      case 35: // $hashTableClear_exit16_i
        var $_lcssa_i14_i=__lastLabel__ == 33 ? $290 : ($315);
        var $316=$_lcssa_i14_i+12; //@line 5925 "xmlparse.c"
        HEAP[$316]=0; //@line 5925 "xmlparse.c"
        var $317=$p_addr_i; //@line 5568 "xmlparse.c"
        var $318=$317+60; //@line 5568 "xmlparse.c"
        $table_addr_i17_i=$318;
        $i_i18_i=0; //@line 5921 "xmlparse.c"
        var $319=$table_addr_i17_i; //@line 5921 "xmlparse.c"
        var $320=$319+8; //@line 5921 "xmlparse.c"
        var $321=HEAP[$320]; //@line 5921 "xmlparse.c"
        var $322=$i_i18_i; //@line 5921 "xmlparse.c"
        var $323=($321) > ($322); //@line 5921 "xmlparse.c"
        var $324=$table_addr_i17_i; //@line 5922 "xmlparse.c"
        if ($323) { __lastLabel__ = 35; __label__ = 36; break; } else { __lastLabel__ = 35; __label__ = 37; break; } //@line 5921 "xmlparse.c"
      case 36: // $bb_i19_i
        var $325=__lastLabel__ == 36 ? $349 : ($324);
        var $326=$325+16; //@line 5922 "xmlparse.c"
        var $327=HEAP[$326]; //@line 5922 "xmlparse.c"
        var $328=$327+8; //@line 5922 "xmlparse.c"
        var $329=HEAP[$328]; //@line 5922 "xmlparse.c"
        var $330=$table_addr_i17_i; //@line 5922 "xmlparse.c"
        var $331=$330; //@line 5922 "xmlparse.c"
        var $332=HEAP[$331]; //@line 5922 "xmlparse.c"
        var $333=$i_i18_i; //@line 5922 "xmlparse.c"
        var $334=$332+4*$333; //@line 5922 "xmlparse.c"
        var $335=HEAP[$334]; //@line 5922 "xmlparse.c"
        var $336=$335; //@line 5922 "xmlparse.c"
        FUNCTION_TABLE[$329]($336); //@line 5922 "xmlparse.c"
        var $337=$table_addr_i17_i; //@line 5923 "xmlparse.c"
        var $338=$337; //@line 5923 "xmlparse.c"
        var $339=HEAP[$338]; //@line 5923 "xmlparse.c"
        var $340=$i_i18_i; //@line 5923 "xmlparse.c"
        var $341=$339+4*$340; //@line 5923 "xmlparse.c"
        HEAP[$341]=0; //@line 5923 "xmlparse.c"
        var $342=$i_i18_i; //@line 5921 "xmlparse.c"
        var $343=($342) + 1; //@line 5921 "xmlparse.c"
        $i_i18_i=$343; //@line 5921 "xmlparse.c"
        var $344=$table_addr_i17_i; //@line 5921 "xmlparse.c"
        var $345=$344+8; //@line 5921 "xmlparse.c"
        var $346=HEAP[$345]; //@line 5921 "xmlparse.c"
        var $347=$i_i18_i; //@line 5921 "xmlparse.c"
        var $348=($346) > ($347); //@line 5921 "xmlparse.c"
        var $349=$table_addr_i17_i; //@line 5922 "xmlparse.c"
        if ($348) { __lastLabel__ = 36; __label__ = 36; break; } else { __lastLabel__ = 36; __label__ = 37; break; } //@line 5921 "xmlparse.c"
      case 37: // $hashTableClear_exit22_i
        var $_lcssa_i20_i=__lastLabel__ == 35 ? $324 : ($349);
        var $350=$_lcssa_i20_i+12; //@line 5925 "xmlparse.c"
        HEAP[$350]=0; //@line 5925 "xmlparse.c"
        var $351=$p_addr_i; //@line 5569 "xmlparse.c"
        var $352=$351+80; //@line 5569 "xmlparse.c"
        $pool_addr_i_i=$352;
        var $353=$pool_addr_i_i; //@line 5979 "xmlparse.c"
        var $354=$353+4; //@line 5979 "xmlparse.c"
        var $355=HEAP[$354]; //@line 5979 "xmlparse.c"
        var $356=($355)==0; //@line 5979 "xmlparse.c"
        var $357=$pool_addr_i_i; //@line 5980 "xmlparse.c"
        var $358=$357; //@line 5980 "xmlparse.c"
        var $359=HEAP[$358]; //@line 5980 "xmlparse.c"
        if ($356) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 5979 "xmlparse.c"
      case 38: // $bb_i24_i
        var $360=$pool_addr_i_i; //@line 5980 "xmlparse.c"
        var $361=$360+4; //@line 5980 "xmlparse.c"
        HEAP[$361]=$359; //@line 5980 "xmlparse.c"
        __label__ = 41; break; //@line 5980 "xmlparse.c"
      case 39: // $bb1_i25_i
        $p_i_i=$359; //@line 5982 "xmlparse.c"
        var $362=($359)!=0; //@line 5983 "xmlparse.c"
        if ($362) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 5983 "xmlparse.c"
      case 40: // $bb2_i26_i
        var $363=$p_i_i; //@line 5984 "xmlparse.c"
        var $364=$363; //@line 5984 "xmlparse.c"
        var $365=HEAP[$364]; //@line 5984 "xmlparse.c"
        $tem_i23_i=$365; //@line 5984 "xmlparse.c"
        var $366=$pool_addr_i_i; //@line 5985 "xmlparse.c"
        var $367=$366+4; //@line 5985 "xmlparse.c"
        var $368=HEAP[$367]; //@line 5985 "xmlparse.c"
        var $369=$p_i_i; //@line 5985 "xmlparse.c"
        var $370=$369; //@line 5985 "xmlparse.c"
        HEAP[$370]=$368; //@line 5985 "xmlparse.c"
        var $371=$pool_addr_i_i; //@line 5986 "xmlparse.c"
        var $372=$371+4; //@line 5986 "xmlparse.c"
        var $373=$p_i_i; //@line 5986 "xmlparse.c"
        HEAP[$372]=$373; //@line 5986 "xmlparse.c"
        var $374=$tem_i23_i; //@line 5987 "xmlparse.c"
        $p_i_i=$374; //@line 5987 "xmlparse.c"
        var $375=($374)!=0; //@line 5983 "xmlparse.c"
        if ($375) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 5983 "xmlparse.c"
      case 41: // $poolClear_exit_i
        var $376=$pool_addr_i_i; //@line 5990 "xmlparse.c"
        var $377=$376; //@line 5990 "xmlparse.c"
        HEAP[$377]=0; //@line 5990 "xmlparse.c"
        var $378=$pool_addr_i_i; //@line 5991 "xmlparse.c"
        var $379=$378+16; //@line 5991 "xmlparse.c"
        HEAP[$379]=0; //@line 5991 "xmlparse.c"
        var $380=$pool_addr_i_i; //@line 5992 "xmlparse.c"
        var $381=$380+12; //@line 5992 "xmlparse.c"
        HEAP[$381]=0; //@line 5992 "xmlparse.c"
        var $382=$pool_addr_i_i; //@line 5993 "xmlparse.c"
        var $383=$382+8; //@line 5993 "xmlparse.c"
        HEAP[$383]=0; //@line 5993 "xmlparse.c"
        var $384=$p_addr_i; //@line 5570 "xmlparse.c"
        var $385=$384+104; //@line 5570 "xmlparse.c"
        $pool_addr_i27_i=$385;
        var $386=$pool_addr_i27_i; //@line 5979 "xmlparse.c"
        var $387=$386+4; //@line 5979 "xmlparse.c"
        var $388=HEAP[$387]; //@line 5979 "xmlparse.c"
        var $389=($388)==0; //@line 5979 "xmlparse.c"
        var $390=$pool_addr_i27_i; //@line 5980 "xmlparse.c"
        var $391=$390; //@line 5980 "xmlparse.c"
        var $392=HEAP[$391]; //@line 5980 "xmlparse.c"
        if ($389) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 5979 "xmlparse.c"
      case 42: // $bb_i30_i
        var $393=$pool_addr_i27_i; //@line 5980 "xmlparse.c"
        var $394=$393+4; //@line 5980 "xmlparse.c"
        HEAP[$394]=$392; //@line 5980 "xmlparse.c"
        __label__ = 45; break; //@line 5980 "xmlparse.c"
      case 43: // $bb1_i31_i
        $p_i28_i=$392; //@line 5982 "xmlparse.c"
        var $395=($392)!=0; //@line 5983 "xmlparse.c"
        if ($395) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 5983 "xmlparse.c"
      case 44: // $bb2_i32_i
        var $396=$p_i28_i; //@line 5984 "xmlparse.c"
        var $397=$396; //@line 5984 "xmlparse.c"
        var $398=HEAP[$397]; //@line 5984 "xmlparse.c"
        $tem_i29_i=$398; //@line 5984 "xmlparse.c"
        var $399=$pool_addr_i27_i; //@line 5985 "xmlparse.c"
        var $400=$399+4; //@line 5985 "xmlparse.c"
        var $401=HEAP[$400]; //@line 5985 "xmlparse.c"
        var $402=$p_i28_i; //@line 5985 "xmlparse.c"
        var $403=$402; //@line 5985 "xmlparse.c"
        HEAP[$403]=$401; //@line 5985 "xmlparse.c"
        var $404=$pool_addr_i27_i; //@line 5986 "xmlparse.c"
        var $405=$404+4; //@line 5986 "xmlparse.c"
        var $406=$p_i28_i; //@line 5986 "xmlparse.c"
        HEAP[$405]=$406; //@line 5986 "xmlparse.c"
        var $407=$tem_i29_i; //@line 5987 "xmlparse.c"
        $p_i28_i=$407; //@line 5987 "xmlparse.c"
        var $408=($407)!=0; //@line 5983 "xmlparse.c"
        if ($408) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 5983 "xmlparse.c"
      case 45: // $dtdReset_exit
        var $409=$pool_addr_i27_i; //@line 5990 "xmlparse.c"
        var $410=$409; //@line 5990 "xmlparse.c"
        HEAP[$410]=0; //@line 5990 "xmlparse.c"
        var $411=$pool_addr_i27_i; //@line 5991 "xmlparse.c"
        var $412=$411+16; //@line 5991 "xmlparse.c"
        HEAP[$412]=0; //@line 5991 "xmlparse.c"
        var $413=$pool_addr_i27_i; //@line 5992 "xmlparse.c"
        var $414=$413+12; //@line 5992 "xmlparse.c"
        HEAP[$414]=0; //@line 5992 "xmlparse.c"
        var $415=$pool_addr_i27_i; //@line 5993 "xmlparse.c"
        var $416=$415+8; //@line 5993 "xmlparse.c"
        HEAP[$416]=0; //@line 5993 "xmlparse.c"
        var $417=$p_addr_i; //@line 5571 "xmlparse.c"
        var $418=$417+132; //@line 5571 "xmlparse.c"
        var $419=$418; //@line 5571 "xmlparse.c"
        HEAP[$419]=0; //@line 5571 "xmlparse.c"
        var $420=$p_addr_i; //@line 5572 "xmlparse.c"
        var $421=$420+132; //@line 5572 "xmlparse.c"
        var $422=$421+4; //@line 5572 "xmlparse.c"
        HEAP[$422]=0; //@line 5572 "xmlparse.c"
        var $423=$p_addr_i; //@line 5574 "xmlparse.c"
        var $424=$423+140; //@line 5574 "xmlparse.c"
        HEAP[$424]=0; //@line 5574 "xmlparse.c"
        var $425=$ms_addr_i; //@line 5576 "xmlparse.c"
        var $426=$425+8; //@line 5576 "xmlparse.c"
        var $427=HEAP[$426]; //@line 5576 "xmlparse.c"
        var $428=$p_addr_i; //@line 5576 "xmlparse.c"
        var $429=$428+164; //@line 5576 "xmlparse.c"
        var $430=HEAP[$429]; //@line 5576 "xmlparse.c"
        var $431=$430; //@line 5576 "xmlparse.c"
        FUNCTION_TABLE[$427]($431); //@line 5576 "xmlparse.c"
        var $432=$p_addr_i; //@line 5577 "xmlparse.c"
        var $433=$432+164; //@line 5577 "xmlparse.c"
        HEAP[$433]=0; //@line 5577 "xmlparse.c"
        var $434=$ms_addr_i; //@line 5578 "xmlparse.c"
        var $435=$434+8; //@line 5578 "xmlparse.c"
        var $436=HEAP[$435]; //@line 5578 "xmlparse.c"
        var $437=$p_addr_i; //@line 5578 "xmlparse.c"
        var $438=$437+144; //@line 5578 "xmlparse.c"
        var $439=HEAP[$438]; //@line 5578 "xmlparse.c"
        var $440=$439; //@line 5578 "xmlparse.c"
        FUNCTION_TABLE[$436]($440); //@line 5578 "xmlparse.c"
        var $441=$p_addr_i; //@line 5579 "xmlparse.c"
        var $442=$441+144; //@line 5579 "xmlparse.c"
        HEAP[$442]=0; //@line 5579 "xmlparse.c"
        var $443=$p_addr_i; //@line 5581 "xmlparse.c"
        var $444=$443+160; //@line 5581 "xmlparse.c"
        HEAP[$444]=0; //@line 5581 "xmlparse.c"
        var $445=$p_addr_i; //@line 5582 "xmlparse.c"
        var $446=$445+152; //@line 5582 "xmlparse.c"
        HEAP[$446]=0; //@line 5582 "xmlparse.c"
        var $447=$p_addr_i; //@line 5583 "xmlparse.c"
        var $448=$447+156; //@line 5583 "xmlparse.c"
        HEAP[$448]=0; //@line 5583 "xmlparse.c"
        var $449=$p_addr_i; //@line 5584 "xmlparse.c"
        var $450=$449+148; //@line 5584 "xmlparse.c"
        HEAP[$450]=0; //@line 5584 "xmlparse.c"
        var $451=$p_addr_i; //@line 5586 "xmlparse.c"
        var $452=$451+128; //@line 5586 "xmlparse.c"
        HEAP[$452]=1; //@line 5586 "xmlparse.c"
        var $453=$p_addr_i; //@line 5587 "xmlparse.c"
        var $454=$453+129; //@line 5587 "xmlparse.c"
        HEAP[$454]=0; //@line 5587 "xmlparse.c"
        var $455=$p_addr_i; //@line 5588 "xmlparse.c"
        var $456=$455+130; //@line 5588 "xmlparse.c"
        HEAP[$456]=0; //@line 5588 "xmlparse.c"
        var $457=$parser_addr; //@line 910 "xmlparse.c"
        var $458=_setContext($457, _implicitContext); //@line 910 "xmlparse.c"
        var $459=($458); //@line 910 "xmlparse.c"
        $1=$459; //@line 910 "xmlparse.c"
        __label__ = 46; break; //@line 910 "xmlparse.c"
      case 46: // $bb10
        var $460=$1; //@line 883 "xmlparse.c"
        $retval=$460; //@line 883 "xmlparse.c"
        var $retval11=$retval; //@line 883 "xmlparse.c"
        var $retval1112=((($retval11)) & 255); //@line 883 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval1112; //@line 883 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_SetEncoding($parser, $encodingName) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $encodingName_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        $encodingName_addr=$encodingName;
        var $1=$parser_addr; //@line 920 "xmlparse.c"
        var $2=$1+464; //@line 920 "xmlparse.c"
        var $3=$2; //@line 920 "xmlparse.c"
        var $4=HEAP[$3]; //@line 920 "xmlparse.c"
        var $5=($4)==1; //@line 920 "xmlparse.c"
        if ($5) { __label__ = 2; break; } else { __label__ = 1; break; } //@line 920 "xmlparse.c"
      case 1: // $bb
        var $6=$parser_addr; //@line 920 "xmlparse.c"
        var $7=$6+464; //@line 920 "xmlparse.c"
        var $8=$7; //@line 920 "xmlparse.c"
        var $9=HEAP[$8]; //@line 920 "xmlparse.c"
        var $10=($9)==3; //@line 920 "xmlparse.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 920 "xmlparse.c"
      case 2: // $bb1
        $0=0; //@line 921 "xmlparse.c"
        __label__ = 8; break; //@line 921 "xmlparse.c"
      case 3: // $bb2
        var $11=$encodingName_addr; //@line 922 "xmlparse.c"
        var $12=($11)==0; //@line 922 "xmlparse.c"
        var $13=$parser_addr; //@line 923 "xmlparse.c"
        if ($12) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 922 "xmlparse.c"
      case 4: // $bb3
        var $14=$13+228; //@line 923 "xmlparse.c"
        HEAP[$14]=0; //@line 923 "xmlparse.c"
        __label__ = 7; break; //@line 923 "xmlparse.c"
      case 5: // $bb4
        var $15=$13+400; //@line 925 "xmlparse.c"
        var $16=$encodingName_addr; //@line 925 "xmlparse.c"
        var $17=_poolCopyString($15, $16); //@line 925 "xmlparse.c"
        var $18=$parser_addr; //@line 925 "xmlparse.c"
        var $19=$18+228; //@line 925 "xmlparse.c"
        HEAP[$19]=$17; //@line 925 "xmlparse.c"
        var $20=$parser_addr; //@line 926 "xmlparse.c"
        var $21=$20+228; //@line 926 "xmlparse.c"
        var $22=HEAP[$21]; //@line 926 "xmlparse.c"
        var $23=($22)==0; //@line 926 "xmlparse.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 926 "xmlparse.c"
      case 6: // $bb5
        $0=0; //@line 927 "xmlparse.c"
        __label__ = 8; break; //@line 927 "xmlparse.c"
      case 7: // $bb6
        $0=1; //@line 929 "xmlparse.c"
        __label__ = 8; break; //@line 929 "xmlparse.c"
      case 8: // $bb7
        var $24=$0; //@line 921 "xmlparse.c"
        $retval=$24; //@line 921 "xmlparse.c"
        var $retval8=$retval; //@line 921 "xmlparse.c"
        ;
        return $retval8; //@line 921 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ExternalEntityParserCreate($oldParser, $context, $encodingName) {
    var __stackBase__  = STACKTOP; STACKTOP += 18; _memset(__stackBase__, 0, 18);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $iter_addr_i23_i;
        var $retval_i24_i;
        var $0;
        var $tem_i25_i;
        var $iter_addr_i21_i;
        var $table_addr_i22_i;
        var $iter_addr_i11_i;
        var $retval_i12_i;
        var $1;
        var $tem_i13_i;
        var $iter_addr_i9_i;
        var $table_addr_i10_i;
        var $iter_addr_i1_i;
        var $retval_i2_i;
        var $2;
        var $tem_i3_i;
        var $pool_addr_i_i_i;
        var $s_addr_i_i_i;
        var $n_addr_i_i_i;
        var $retval_i2_i_i;
        var $iftmp_279_i_i_i;
        var $3;
        var $iter_addr_i1_i_i;
        var $retval_i_i_i;
        var $4;
        var $tem_i_i_i;
        var $iter_addr_i_i_i;
        var $table_addr_i_i_i;
        var $newTable_addr_i_i;
        var $newPool_addr_i_i;
        var $oldTable_addr_i_i;
        var $retval_i_i;
        var $5;
        var $iter_i_i=__stackBase__;
        var $cachedOldBase_i_i;
        var $cachedNewBase_i_i;
        var $newE_i_i;
        var $name_i_i;
        var $oldE_i_i;
        var $tem_i_i;
        var $tem20_i_i;
        var $tem25_i_i;
        var $iter_addr_i_i;
        var $table_addr_i_i;
        var $newDtd_addr_i;
        var $oldDtd_addr_i;
        var $ms_addr_i;
        var $retval_i;
        var $iftmp_273_i;
        var $6;
        var $iter_i=__stackBase__+8;
        var $name_i;
        var $oldP_i;
        var $newA_i;
        var $name8_i;
        var $oldA_i;
        var $i_i;
        var $newE_i;
        var $name26_i;
        var $oldE_i;
        var $oldParser_addr;
        var $context_addr;
        var $encodingName_addr;
        var $retval;
        var $7;
        var $parser;
        var $newDtd;
        var $oldDtd;
        var $oldStartElementHandler;
        var $oldEndElementHandler;
        var $oldCharacterDataHandler;
        var $oldProcessingInstructionHandler;
        var $oldCommentHandler;
        var $oldStartCdataSectionHandler;
        var $oldEndCdataSectionHandler;
        var $oldDefaultHandler;
        var $oldUnparsedEntityDeclHandler;
        var $oldNotationDeclHandler;
        var $oldStartNamespaceDeclHandler;
        var $oldEndNamespaceDeclHandler;
        var $oldNotStandaloneHandler;
        var $oldExternalEntityRefHandler;
        var $oldSkippedEntityHandler;
        var $oldUnknownEncodingHandler;
        var $oldElementDeclHandler;
        var $oldAttlistDeclHandler;
        var $oldEntityDeclHandler;
        var $oldXmlDeclHandler;
        var $oldDeclElementType;
        var $oldUserData;
        var $oldHandlerArg;
        var $oldDefaultExpandInternalEntities;
        var $oldExternalEntityRefHandlerArg;
        var $oldns_triplets;
        var $tmp=__stackBase__+16;
        $oldParser_addr=$oldParser;
        $context_addr=$context;
        $encodingName_addr=$encodingName;
        var $8=$oldParser_addr; //@line 937 "xmlparse.c"
        $parser=$8; //@line 937 "xmlparse.c"
        $newDtd=0; //@line 938 "xmlparse.c"
        var $9=$parser; //@line 939 "xmlparse.c"
        var $10=$9+340; //@line 939 "xmlparse.c"
        var $11=HEAP[$10]; //@line 939 "xmlparse.c"
        $oldDtd=$11; //@line 939 "xmlparse.c"
        var $12=$parser; //@line 940 "xmlparse.c"
        var $13=$12+52; //@line 940 "xmlparse.c"
        var $14=HEAP[$13]; //@line 940 "xmlparse.c"
        $oldStartElementHandler=$14; //@line 940 "xmlparse.c"
        var $15=$parser; //@line 941 "xmlparse.c"
        var $16=$15+56; //@line 941 "xmlparse.c"
        var $17=HEAP[$16]; //@line 941 "xmlparse.c"
        $oldEndElementHandler=$17; //@line 941 "xmlparse.c"
        var $18=$parser; //@line 942 "xmlparse.c"
        var $19=$18+60; //@line 942 "xmlparse.c"
        var $20=HEAP[$19]; //@line 942 "xmlparse.c"
        $oldCharacterDataHandler=$20; //@line 942 "xmlparse.c"
        var $21=$parser; //@line 944 "xmlparse.c"
        var $22=$21+64; //@line 944 "xmlparse.c"
        var $23=HEAP[$22]; //@line 944 "xmlparse.c"
        $oldProcessingInstructionHandler=$23; //@line 944 "xmlparse.c"
        var $24=$parser; //@line 945 "xmlparse.c"
        var $25=$24+68; //@line 945 "xmlparse.c"
        var $26=HEAP[$25]; //@line 945 "xmlparse.c"
        $oldCommentHandler=$26; //@line 945 "xmlparse.c"
        var $27=$parser; //@line 947 "xmlparse.c"
        var $28=$27+72; //@line 947 "xmlparse.c"
        var $29=HEAP[$28]; //@line 947 "xmlparse.c"
        $oldStartCdataSectionHandler=$29; //@line 947 "xmlparse.c"
        var $30=$parser; //@line 949 "xmlparse.c"
        var $31=$30+76; //@line 949 "xmlparse.c"
        var $32=HEAP[$31]; //@line 949 "xmlparse.c"
        $oldEndCdataSectionHandler=$32; //@line 949 "xmlparse.c"
        var $33=$parser; //@line 950 "xmlparse.c"
        var $34=$33+80; //@line 950 "xmlparse.c"
        var $35=HEAP[$34]; //@line 950 "xmlparse.c"
        $oldDefaultHandler=$35; //@line 950 "xmlparse.c"
        var $36=$parser; //@line 952 "xmlparse.c"
        var $37=$36+92; //@line 952 "xmlparse.c"
        var $38=HEAP[$37]; //@line 952 "xmlparse.c"
        $oldUnparsedEntityDeclHandler=$38; //@line 952 "xmlparse.c"
        var $39=$parser; //@line 953 "xmlparse.c"
        var $40=$39+96; //@line 953 "xmlparse.c"
        var $41=HEAP[$40]; //@line 953 "xmlparse.c"
        $oldNotationDeclHandler=$41; //@line 953 "xmlparse.c"
        var $42=$parser; //@line 955 "xmlparse.c"
        var $43=$42+100; //@line 955 "xmlparse.c"
        var $44=HEAP[$43]; //@line 955 "xmlparse.c"
        $oldStartNamespaceDeclHandler=$44; //@line 955 "xmlparse.c"
        var $45=$parser; //@line 957 "xmlparse.c"
        var $46=$45+104; //@line 957 "xmlparse.c"
        var $47=HEAP[$46]; //@line 957 "xmlparse.c"
        $oldEndNamespaceDeclHandler=$47; //@line 957 "xmlparse.c"
        var $48=$parser; //@line 958 "xmlparse.c"
        var $49=$48+108; //@line 958 "xmlparse.c"
        var $50=HEAP[$49]; //@line 958 "xmlparse.c"
        $oldNotStandaloneHandler=$50; //@line 958 "xmlparse.c"
        var $51=$parser; //@line 960 "xmlparse.c"
        var $52=$51+112; //@line 960 "xmlparse.c"
        var $53=HEAP[$52]; //@line 960 "xmlparse.c"
        $oldExternalEntityRefHandler=$53; //@line 960 "xmlparse.c"
        var $54=$parser; //@line 961 "xmlparse.c"
        var $55=$54+120; //@line 961 "xmlparse.c"
        var $56=HEAP[$55]; //@line 961 "xmlparse.c"
        $oldSkippedEntityHandler=$56; //@line 961 "xmlparse.c"
        var $57=$parser; //@line 963 "xmlparse.c"
        var $58=$57+124; //@line 963 "xmlparse.c"
        var $59=HEAP[$58]; //@line 963 "xmlparse.c"
        $oldUnknownEncodingHandler=$59; //@line 963 "xmlparse.c"
        var $60=$parser; //@line 964 "xmlparse.c"
        var $61=$60+128; //@line 964 "xmlparse.c"
        var $62=HEAP[$61]; //@line 964 "xmlparse.c"
        $oldElementDeclHandler=$62; //@line 964 "xmlparse.c"
        var $63=$parser; //@line 965 "xmlparse.c"
        var $64=$63+132; //@line 965 "xmlparse.c"
        var $65=HEAP[$64]; //@line 965 "xmlparse.c"
        $oldAttlistDeclHandler=$65; //@line 965 "xmlparse.c"
        var $66=$parser; //@line 966 "xmlparse.c"
        var $67=$66+136; //@line 966 "xmlparse.c"
        var $68=HEAP[$67]; //@line 966 "xmlparse.c"
        $oldEntityDeclHandler=$68; //@line 966 "xmlparse.c"
        var $69=$parser; //@line 967 "xmlparse.c"
        var $70=$69+140; //@line 967 "xmlparse.c"
        var $71=HEAP[$70]; //@line 967 "xmlparse.c"
        $oldXmlDeclHandler=$71; //@line 967 "xmlparse.c"
        var $72=$parser; //@line 968 "xmlparse.c"
        var $73=$72+328; //@line 968 "xmlparse.c"
        var $74=HEAP[$73]; //@line 968 "xmlparse.c"
        $oldDeclElementType=$74; //@line 968 "xmlparse.c"
        var $75=$parser; //@line 970 "xmlparse.c"
        var $76=$75; //@line 970 "xmlparse.c"
        var $77=HEAP[$76]; //@line 970 "xmlparse.c"
        $oldUserData=$77; //@line 970 "xmlparse.c"
        var $78=$parser; //@line 971 "xmlparse.c"
        var $79=$78+4; //@line 971 "xmlparse.c"
        var $80=HEAP[$79]; //@line 971 "xmlparse.c"
        $oldHandlerArg=$80; //@line 971 "xmlparse.c"
        var $81=$parser; //@line 972 "xmlparse.c"
        var $82=$81+292; //@line 972 "xmlparse.c"
        var $83=HEAP[$82]; //@line 972 "xmlparse.c"
        $oldDefaultExpandInternalEntities=$83; //@line 972 "xmlparse.c"
        var $84=$parser; //@line 973 "xmlparse.c"
        var $85=$84+116; //@line 973 "xmlparse.c"
        var $86=HEAP[$85]; //@line 973 "xmlparse.c"
        $oldExternalEntityRefHandlerArg=$86; //@line 973 "xmlparse.c"
        var $87=$parser; //@line 978 "xmlparse.c"
        var $88=$87+233; //@line 978 "xmlparse.c"
        var $89=HEAP[$88]; //@line 978 "xmlparse.c"
        $oldns_triplets=$89; //@line 978 "xmlparse.c"
        var $90=$parser; //@line 990 "xmlparse.c"
        var $91=$90+232; //@line 990 "xmlparse.c"
        var $92=HEAP[$91]; //@line 990 "xmlparse.c"
        var $93=($92)!=0; //@line 990 "xmlparse.c"
        var $94=$parser; //@line 992 "xmlparse.c"
        if ($93) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 990 "xmlparse.c"
      case 1: // $bb
        var $95=$94+456; //@line 992 "xmlparse.c"
        var $96=HEAP[$95]; //@line 992 "xmlparse.c"
        var $97=$tmp; //@line 992 "xmlparse.c"
        HEAP[$97]=$96; //@line 992 "xmlparse.c"
        var $98=$parser; //@line 993 "xmlparse.c"
        var $99=$98+12; //@line 993 "xmlparse.c"
        var $100=$encodingName_addr; //@line 993 "xmlparse.c"
        var $tmp1=$tmp; //@line 993 "xmlparse.c"
        var $101=$newDtd; //@line 993 "xmlparse.c"
        var $102=_parserCreate($100, $99, $tmp1, $101); //@line 993 "xmlparse.c"
        $parser=$102; //@line 993 "xmlparse.c"
        __lastLabel__ = 1; __label__ = 3; break; //@line 993 "xmlparse.c"
      case 2: // $bb2
        var $103=$94+12; //@line 996 "xmlparse.c"
        var $104=$encodingName_addr; //@line 996 "xmlparse.c"
        var $105=$newDtd; //@line 996 "xmlparse.c"
        var $106=_parserCreate($104, $103, 0, $105); //@line 996 "xmlparse.c"
        $parser=$106; //@line 996 "xmlparse.c"
        __lastLabel__ = 2; __label__ = 3; break; //@line 996 "xmlparse.c"
      case 3: // $bb3
        var $107=__lastLabel__ == 2 ? $106 : ($102);
        var $108=($107)==0; //@line 999 "xmlparse.c"
        if ($108) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 999 "xmlparse.c"
      case 4: // $bb4
        $7=0; //@line 1000 "xmlparse.c"
        __label__ = 111; break; //@line 1000 "xmlparse.c"
      case 5: // $bb5
        var $109=$parser; //@line 1002 "xmlparse.c"
        var $110=$109+52; //@line 1002 "xmlparse.c"
        var $111=$oldStartElementHandler; //@line 1002 "xmlparse.c"
        HEAP[$110]=$111; //@line 1002 "xmlparse.c"
        var $112=$parser; //@line 1003 "xmlparse.c"
        var $113=$112+56; //@line 1003 "xmlparse.c"
        var $114=$oldEndElementHandler; //@line 1003 "xmlparse.c"
        HEAP[$113]=$114; //@line 1003 "xmlparse.c"
        var $115=$parser; //@line 1004 "xmlparse.c"
        var $116=$115+60; //@line 1004 "xmlparse.c"
        var $117=$oldCharacterDataHandler; //@line 1004 "xmlparse.c"
        HEAP[$116]=$117; //@line 1004 "xmlparse.c"
        var $118=$parser; //@line 1005 "xmlparse.c"
        var $119=$118+64; //@line 1005 "xmlparse.c"
        var $120=$oldProcessingInstructionHandler; //@line 1005 "xmlparse.c"
        HEAP[$119]=$120; //@line 1005 "xmlparse.c"
        var $121=$parser; //@line 1006 "xmlparse.c"
        var $122=$121+68; //@line 1006 "xmlparse.c"
        var $123=$oldCommentHandler; //@line 1006 "xmlparse.c"
        HEAP[$122]=$123; //@line 1006 "xmlparse.c"
        var $124=$parser; //@line 1007 "xmlparse.c"
        var $125=$124+72; //@line 1007 "xmlparse.c"
        var $126=$oldStartCdataSectionHandler; //@line 1007 "xmlparse.c"
        HEAP[$125]=$126; //@line 1007 "xmlparse.c"
        var $127=$parser; //@line 1008 "xmlparse.c"
        var $128=$127+76; //@line 1008 "xmlparse.c"
        var $129=$oldEndCdataSectionHandler; //@line 1008 "xmlparse.c"
        HEAP[$128]=$129; //@line 1008 "xmlparse.c"
        var $130=$parser; //@line 1009 "xmlparse.c"
        var $131=$130+80; //@line 1009 "xmlparse.c"
        var $132=$oldDefaultHandler; //@line 1009 "xmlparse.c"
        HEAP[$131]=$132; //@line 1009 "xmlparse.c"
        var $133=$parser; //@line 1010 "xmlparse.c"
        var $134=$133+92; //@line 1010 "xmlparse.c"
        var $135=$oldUnparsedEntityDeclHandler; //@line 1010 "xmlparse.c"
        HEAP[$134]=$135; //@line 1010 "xmlparse.c"
        var $136=$parser; //@line 1011 "xmlparse.c"
        var $137=$136+96; //@line 1011 "xmlparse.c"
        var $138=$oldNotationDeclHandler; //@line 1011 "xmlparse.c"
        HEAP[$137]=$138; //@line 1011 "xmlparse.c"
        var $139=$parser; //@line 1012 "xmlparse.c"
        var $140=$139+100; //@line 1012 "xmlparse.c"
        var $141=$oldStartNamespaceDeclHandler; //@line 1012 "xmlparse.c"
        HEAP[$140]=$141; //@line 1012 "xmlparse.c"
        var $142=$parser; //@line 1013 "xmlparse.c"
        var $143=$142+104; //@line 1013 "xmlparse.c"
        var $144=$oldEndNamespaceDeclHandler; //@line 1013 "xmlparse.c"
        HEAP[$143]=$144; //@line 1013 "xmlparse.c"
        var $145=$parser; //@line 1014 "xmlparse.c"
        var $146=$145+108; //@line 1014 "xmlparse.c"
        var $147=$oldNotStandaloneHandler; //@line 1014 "xmlparse.c"
        HEAP[$146]=$147; //@line 1014 "xmlparse.c"
        var $148=$parser; //@line 1015 "xmlparse.c"
        var $149=$148+112; //@line 1015 "xmlparse.c"
        var $150=$oldExternalEntityRefHandler; //@line 1015 "xmlparse.c"
        HEAP[$149]=$150; //@line 1015 "xmlparse.c"
        var $151=$parser; //@line 1016 "xmlparse.c"
        var $152=$151+120; //@line 1016 "xmlparse.c"
        var $153=$oldSkippedEntityHandler; //@line 1016 "xmlparse.c"
        HEAP[$152]=$153; //@line 1016 "xmlparse.c"
        var $154=$parser; //@line 1017 "xmlparse.c"
        var $155=$154+124; //@line 1017 "xmlparse.c"
        var $156=$oldUnknownEncodingHandler; //@line 1017 "xmlparse.c"
        HEAP[$155]=$156; //@line 1017 "xmlparse.c"
        var $157=$parser; //@line 1018 "xmlparse.c"
        var $158=$157+128; //@line 1018 "xmlparse.c"
        var $159=$oldElementDeclHandler; //@line 1018 "xmlparse.c"
        HEAP[$158]=$159; //@line 1018 "xmlparse.c"
        var $160=$parser; //@line 1019 "xmlparse.c"
        var $161=$160+132; //@line 1019 "xmlparse.c"
        var $162=$oldAttlistDeclHandler; //@line 1019 "xmlparse.c"
        HEAP[$161]=$162; //@line 1019 "xmlparse.c"
        var $163=$parser; //@line 1020 "xmlparse.c"
        var $164=$163+136; //@line 1020 "xmlparse.c"
        var $165=$oldEntityDeclHandler; //@line 1020 "xmlparse.c"
        HEAP[$164]=$165; //@line 1020 "xmlparse.c"
        var $166=$parser; //@line 1021 "xmlparse.c"
        var $167=$166+140; //@line 1021 "xmlparse.c"
        var $168=$oldXmlDeclHandler; //@line 1021 "xmlparse.c"
        HEAP[$167]=$168; //@line 1021 "xmlparse.c"
        var $169=$parser; //@line 1022 "xmlparse.c"
        var $170=$169+328; //@line 1022 "xmlparse.c"
        var $171=$oldDeclElementType; //@line 1022 "xmlparse.c"
        HEAP[$170]=$171; //@line 1022 "xmlparse.c"
        var $172=$parser; //@line 1023 "xmlparse.c"
        var $173=$172; //@line 1023 "xmlparse.c"
        var $174=$oldUserData; //@line 1023 "xmlparse.c"
        HEAP[$173]=$174; //@line 1023 "xmlparse.c"
        var $175=$oldUserData; //@line 1024 "xmlparse.c"
        var $176=$oldHandlerArg; //@line 1024 "xmlparse.c"
        var $177=($175)==($176); //@line 1024 "xmlparse.c"
        var $178=$parser; //@line 1025 "xmlparse.c"
        if ($177) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1024 "xmlparse.c"
      case 6: // $bb6
        var $179=$178; //@line 1025 "xmlparse.c"
        var $180=HEAP[$179]; //@line 1025 "xmlparse.c"
        var $181=$parser; //@line 1025 "xmlparse.c"
        var $182=$181+4; //@line 1025 "xmlparse.c"
        HEAP[$182]=$180; //@line 1025 "xmlparse.c"
        __label__ = 8; break; //@line 1025 "xmlparse.c"
      case 7: // $bb7
        var $183=$178+4; //@line 1027 "xmlparse.c"
        var $184=$parser; //@line 1027 "xmlparse.c"
        var $185=$184; //@line 1027 "xmlparse.c"
        HEAP[$183]=$185; //@line 1027 "xmlparse.c"
        __label__ = 8; break; //@line 1027 "xmlparse.c"
      case 8: // $bb8
        var $186=$oldExternalEntityRefHandlerArg; //@line 1028 "xmlparse.c"
        var $187=$oldParser_addr; //@line 1028 "xmlparse.c"
        var $188=($186)!=($187); //@line 1028 "xmlparse.c"
        if ($188) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1028 "xmlparse.c"
      case 9: // $bb9
        var $189=$parser; //@line 1029 "xmlparse.c"
        var $190=$189+116; //@line 1029 "xmlparse.c"
        var $191=$oldExternalEntityRefHandlerArg; //@line 1029 "xmlparse.c"
        HEAP[$190]=$191; //@line 1029 "xmlparse.c"
        __label__ = 10; break; //@line 1029 "xmlparse.c"
      case 10: // $bb10
        var $192=$parser; //@line 1030 "xmlparse.c"
        var $193=$192+292; //@line 1030 "xmlparse.c"
        var $194=$oldDefaultExpandInternalEntities; //@line 1030 "xmlparse.c"
        HEAP[$193]=$194; //@line 1030 "xmlparse.c"
        var $195=$parser; //@line 1031 "xmlparse.c"
        var $196=$195+233; //@line 1031 "xmlparse.c"
        var $197=$oldns_triplets; //@line 1031 "xmlparse.c"
        HEAP[$196]=$197; //@line 1031 "xmlparse.c"
        var $198=$parser; //@line 1032 "xmlparse.c"
        var $199=$198+460; //@line 1032 "xmlparse.c"
        var $200=$oldParser_addr; //@line 1032 "xmlparse.c"
        HEAP[$199]=$200; //@line 1032 "xmlparse.c"
        var $201=$parser; //@line 1038 "xmlparse.c"
        var $202=$201+12; //@line 1038 "xmlparse.c"
        var $203=$parser; //@line 1038 "xmlparse.c"
        var $204=$203+340; //@line 1038 "xmlparse.c"
        var $205=HEAP[$204]; //@line 1038 "xmlparse.c"
        var $206=$oldDtd; //@line 1038 "xmlparse.c"
        $newDtd_addr_i=$205;
        $oldDtd_addr_i=$206;
        $ms_addr_i=$202;
        var $207=$oldDtd_addr_i; //@line 5629 "xmlparse.c"
        var $208=$207+60; //@line 5629 "xmlparse.c"
        $iter_addr_i_i=$iter_i;
        $table_addr_i_i=$208;
        var $209=$table_addr_i_i; //@line 5950 "xmlparse.c"
        var $210=$209; //@line 5950 "xmlparse.c"
        var $211=HEAP[$210]; //@line 5950 "xmlparse.c"
        var $212=$iter_addr_i_i; //@line 5950 "xmlparse.c"
        var $213=$212; //@line 5950 "xmlparse.c"
        HEAP[$213]=$211; //@line 5950 "xmlparse.c"
        var $214=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $215=$214; //@line 5951 "xmlparse.c"
        var $216=HEAP[$215]; //@line 5951 "xmlparse.c"
        var $217=$table_addr_i_i; //@line 5951 "xmlparse.c"
        var $218=$217+8; //@line 5951 "xmlparse.c"
        var $219=HEAP[$218]; //@line 5951 "xmlparse.c"
        var $220=$216+4*$219; //@line 5951 "xmlparse.c"
        var $221=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $222=$221+4; //@line 5951 "xmlparse.c"
        HEAP[$222]=$220; //@line 5951 "xmlparse.c"
        __label__ = 11; break; //@line 5629 "xmlparse.c"
      case 11: // $bb_i
        $iter_addr_i1_i=$iter_i;
        __label__ = 14; break; //@line 5957 "xmlparse.c"
      case 12: // $bb_i4_i
        var $223=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $224=$223; //@line 5958 "xmlparse.c"
        var $225=HEAP[$224]; //@line 5958 "xmlparse.c"
        var $226=HEAP[$225]; //@line 5958 "xmlparse.c"
        $tem_i3_i=$226; //@line 5958 "xmlparse.c"
        var $227=$225+4; //@line 5958 "xmlparse.c"
        var $228=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $229=$228; //@line 5958 "xmlparse.c"
        HEAP[$229]=$227; //@line 5958 "xmlparse.c"
        var $230=$tem_i3_i; //@line 5959 "xmlparse.c"
        var $231=($230)!=0; //@line 5959 "xmlparse.c"
        if ($231) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 5959 "xmlparse.c"
      case 13: // $bb1_i5_i
        var $232=$tem_i3_i; //@line 5960 "xmlparse.c"
        $2=$232; //@line 5960 "xmlparse.c"
        __label__ = 16; break; //@line 5960 "xmlparse.c"
      case 14: // $bb2_i6_i
        var $233=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $234=$233; //@line 5957 "xmlparse.c"
        var $235=HEAP[$234]; //@line 5957 "xmlparse.c"
        var $236=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $237=$236+4; //@line 5957 "xmlparse.c"
        var $238=HEAP[$237]; //@line 5957 "xmlparse.c"
        var $239=($235)!=($238); //@line 5957 "xmlparse.c"
        if ($239) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 5957 "xmlparse.c"
      case 15: // $bb3_i7_i
        $2=0; //@line 5962 "xmlparse.c"
        __label__ = 16; break; //@line 5962 "xmlparse.c"
      case 16: // $hashTableIterNext_exit_i
        var $240=$2; //@line 5960 "xmlparse.c"
        $retval_i2_i=$240; //@line 5960 "xmlparse.c"
        var $retval5_i_i=$retval_i2_i; //@line 5960 "xmlparse.c"
        var $241=$retval5_i_i; //@line 5632 "xmlparse.c"
        $oldP_i=$241; //@line 5632 "xmlparse.c"
        var $242=($241)==0; //@line 5633 "xmlparse.c"
        if ($242) { __label__ = 21; break; } else { __label__ = 17; break; } //@line 5633 "xmlparse.c"
      case 17: // $bb1_i
        var $243=$oldP_i; //@line 5635 "xmlparse.c"
        var $244=$243; //@line 5635 "xmlparse.c"
        var $245=HEAP[$244]; //@line 5635 "xmlparse.c"
        var $246=$newDtd_addr_i; //@line 5635 "xmlparse.c"
        var $247=$246+80; //@line 5635 "xmlparse.c"
        var $248=_poolCopyString($247, $245); //@line 5635 "xmlparse.c"
        $name_i=$248; //@line 5635 "xmlparse.c"
        var $249=$name_i; //@line 5636 "xmlparse.c"
        var $250=($249)==0; //@line 5636 "xmlparse.c"
        if ($250) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 5636 "xmlparse.c"
      case 18: // $bb2_i
        $6=0; //@line 5637 "xmlparse.c"
        __label__ = 107; break; //@line 5637 "xmlparse.c"
      case 19: // $bb3_i
        var $251=$newDtd_addr_i; //@line 5638 "xmlparse.c"
        var $252=$251+60; //@line 5638 "xmlparse.c"
        var $253=$name_i; //@line 5638 "xmlparse.c"
        var $254=_lookup($252, $253, 8); //@line 5638 "xmlparse.c"
        var $255=($254)==0; //@line 5638 "xmlparse.c"
        if ($255) { __label__ = 20; break; } else { __label__ = 11; break; } //@line 5638 "xmlparse.c"
      case 20: // $bb4_i
        $6=0; //@line 5639 "xmlparse.c"
        __label__ = 107; break; //@line 5639 "xmlparse.c"
      case 21: // $bb6_i
        var $256=$oldDtd_addr_i; //@line 5642 "xmlparse.c"
        var $257=$256+40; //@line 5642 "xmlparse.c"
        $iter_addr_i9_i=$iter_i;
        $table_addr_i10_i=$257;
        var $258=$table_addr_i10_i; //@line 5950 "xmlparse.c"
        var $259=$258; //@line 5950 "xmlparse.c"
        var $260=HEAP[$259]; //@line 5950 "xmlparse.c"
        var $261=$iter_addr_i9_i; //@line 5950 "xmlparse.c"
        var $262=$261; //@line 5950 "xmlparse.c"
        HEAP[$262]=$260; //@line 5950 "xmlparse.c"
        var $263=$iter_addr_i9_i; //@line 5951 "xmlparse.c"
        var $264=$263; //@line 5951 "xmlparse.c"
        var $265=HEAP[$264]; //@line 5951 "xmlparse.c"
        var $266=$table_addr_i10_i; //@line 5951 "xmlparse.c"
        var $267=$266+8; //@line 5951 "xmlparse.c"
        var $268=HEAP[$267]; //@line 5951 "xmlparse.c"
        var $269=$265+4*$268; //@line 5951 "xmlparse.c"
        var $270=$iter_addr_i9_i; //@line 5951 "xmlparse.c"
        var $271=$270+4; //@line 5951 "xmlparse.c"
        HEAP[$271]=$269; //@line 5951 "xmlparse.c"
        __label__ = 22; break; //@line 5642 "xmlparse.c"
      case 22: // $bb7_i
        $iter_addr_i11_i=$iter_i;
        __label__ = 25; break; //@line 5957 "xmlparse.c"
      case 23: // $bb_i14_i
        var $272=$iter_addr_i11_i; //@line 5958 "xmlparse.c"
        var $273=$272; //@line 5958 "xmlparse.c"
        var $274=HEAP[$273]; //@line 5958 "xmlparse.c"
        var $275=HEAP[$274]; //@line 5958 "xmlparse.c"
        $tem_i13_i=$275; //@line 5958 "xmlparse.c"
        var $276=$274+4; //@line 5958 "xmlparse.c"
        var $277=$iter_addr_i11_i; //@line 5958 "xmlparse.c"
        var $278=$277; //@line 5958 "xmlparse.c"
        HEAP[$278]=$276; //@line 5958 "xmlparse.c"
        var $279=$tem_i13_i; //@line 5959 "xmlparse.c"
        var $280=($279)!=0; //@line 5959 "xmlparse.c"
        if ($280) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 5959 "xmlparse.c"
      case 24: // $bb1_i15_i
        var $281=$tem_i13_i; //@line 5960 "xmlparse.c"
        $1=$281; //@line 5960 "xmlparse.c"
        __label__ = 27; break; //@line 5960 "xmlparse.c"
      case 25: // $bb2_i16_i
        var $282=$iter_addr_i11_i; //@line 5957 "xmlparse.c"
        var $283=$282; //@line 5957 "xmlparse.c"
        var $284=HEAP[$283]; //@line 5957 "xmlparse.c"
        var $285=$iter_addr_i11_i; //@line 5957 "xmlparse.c"
        var $286=$285+4; //@line 5957 "xmlparse.c"
        var $287=HEAP[$286]; //@line 5957 "xmlparse.c"
        var $288=($284)!=($287); //@line 5957 "xmlparse.c"
        if ($288) { __label__ = 23; break; } else { __label__ = 26; break; } //@line 5957 "xmlparse.c"
      case 26: // $bb3_i17_i
        $1=0; //@line 5962 "xmlparse.c"
        __label__ = 27; break; //@line 5962 "xmlparse.c"
      case 27: // $hashTableIterNext_exit20_i
        var $289=$1; //@line 5960 "xmlparse.c"
        $retval_i12_i=$289; //@line 5960 "xmlparse.c"
        var $retval5_i18_i=$retval_i12_i; //@line 5960 "xmlparse.c"
        var $290=$retval5_i18_i; //@line 5649 "xmlparse.c"
        $oldA_i=$290; //@line 5649 "xmlparse.c"
        var $291=($290)==0; //@line 5651 "xmlparse.c"
        if ($291) { __label__ = 39; break; } else { __label__ = 28; break; } //@line 5651 "xmlparse.c"
      case 28: // $bb9_i
        var $292=$newDtd_addr_i; //@line 5654 "xmlparse.c"
        var $293=$292+80; //@line 5654 "xmlparse.c"
        var $294=$293+12; //@line 5654 "xmlparse.c"
        var $295=HEAP[$294]; //@line 5654 "xmlparse.c"
        var $296=$newDtd_addr_i; //@line 5654 "xmlparse.c"
        var $297=$296+80; //@line 5654 "xmlparse.c"
        var $298=$297+8; //@line 5654 "xmlparse.c"
        var $299=HEAP[$298]; //@line 5654 "xmlparse.c"
        var $300=($295)!=($299); //@line 5654 "xmlparse.c"
        if ($300) { __label__ = 31; break; } else { __label__ = 29; break; } //@line 5654 "xmlparse.c"
      case 29: // $bb10_i
        var $301=$newDtd_addr_i; //@line 5654 "xmlparse.c"
        var $302=$301+80; //@line 5654 "xmlparse.c"
        var $303=_poolGrow($302); //@line 5654 "xmlparse.c"
        var $304=($303)!=0; //@line 5654 "xmlparse.c"
        if ($304) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 5654 "xmlparse.c"
      case 30: // $bb14_i
        $iftmp_273_i=1; //@line 5654 "xmlparse.c"
        $6=0; //@line 5655 "xmlparse.c"
        __label__ = 107; break; //@line 5655 "xmlparse.c"
      case 31: // $bb15_i
        var $305=$newDtd_addr_i; //@line 5654 "xmlparse.c"
        var $306=$305+80; //@line 5654 "xmlparse.c"
        var $307=$306+12; //@line 5654 "xmlparse.c"
        var $308=HEAP[$307]; //@line 5654 "xmlparse.c"
        HEAP[$308]=0; //@line 5654 "xmlparse.c"
        var $309=$308+1; //@line 5654 "xmlparse.c"
        var $310=$newDtd_addr_i; //@line 5654 "xmlparse.c"
        var $311=$310+80; //@line 5654 "xmlparse.c"
        var $312=$311+12; //@line 5654 "xmlparse.c"
        HEAP[$312]=$309; //@line 5654 "xmlparse.c"
        $iftmp_273_i=0; //@line 5654 "xmlparse.c"
        var $313=$oldA_i; //@line 5656 "xmlparse.c"
        var $314=$313; //@line 5656 "xmlparse.c"
        var $315=HEAP[$314]; //@line 5656 "xmlparse.c"
        var $316=$newDtd_addr_i; //@line 5656 "xmlparse.c"
        var $317=$316+80; //@line 5656 "xmlparse.c"
        var $318=_poolCopyString($317, $315); //@line 5656 "xmlparse.c"
        $name8_i=$318; //@line 5656 "xmlparse.c"
        var $319=($318)==0; //@line 5657 "xmlparse.c"
        if ($319) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 5657 "xmlparse.c"
      case 32: // $bb16_i
        $6=0; //@line 5658 "xmlparse.c"
        __label__ = 107; break; //@line 5658 "xmlparse.c"
      case 33: // $bb17_i
        var $320=$name8_i; //@line 5659 "xmlparse.c"
        var $321=$320+1; //@line 5659 "xmlparse.c"
        $name8_i=$321; //@line 5659 "xmlparse.c"
        var $322=$newDtd_addr_i; //@line 5660 "xmlparse.c"
        var $323=$322+40; //@line 5660 "xmlparse.c"
        var $324=$name8_i; //@line 5660 "xmlparse.c"
        var $325=_lookup($323, $324, 12); //@line 5660 "xmlparse.c"
        var $326=$325; //@line 5660 "xmlparse.c"
        $newA_i=$326; //@line 5660 "xmlparse.c"
        var $327=$newA_i; //@line 5662 "xmlparse.c"
        var $328=($327)==0; //@line 5662 "xmlparse.c"
        if ($328) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 5662 "xmlparse.c"
      case 34: // $bb18_i
        $6=0; //@line 5663 "xmlparse.c"
        __label__ = 107; break; //@line 5663 "xmlparse.c"
      case 35: // $bb19_i
        var $329=$oldA_i; //@line 5664 "xmlparse.c"
        var $330=$329+8; //@line 5664 "xmlparse.c"
        var $331=HEAP[$330]; //@line 5664 "xmlparse.c"
        var $332=$newA_i; //@line 5664 "xmlparse.c"
        var $333=$332+8; //@line 5664 "xmlparse.c"
        HEAP[$333]=$331; //@line 5664 "xmlparse.c"
        var $334=$oldA_i; //@line 5665 "xmlparse.c"
        var $335=$334+4; //@line 5665 "xmlparse.c"
        var $336=HEAP[$335]; //@line 5665 "xmlparse.c"
        var $337=($336)!=0; //@line 5665 "xmlparse.c"
        if ($337) { __label__ = 36; break; } else { __label__ = 22; break; } //@line 5665 "xmlparse.c"
      case 36: // $bb20_i
        var $338=$oldA_i; //@line 5666 "xmlparse.c"
        var $339=$338+9; //@line 5666 "xmlparse.c"
        var $340=HEAP[$339]; //@line 5666 "xmlparse.c"
        var $341=$newA_i; //@line 5666 "xmlparse.c"
        var $342=$341+9; //@line 5666 "xmlparse.c"
        HEAP[$342]=$340; //@line 5666 "xmlparse.c"
        var $343=$oldA_i; //@line 5667 "xmlparse.c"
        var $344=$343+4; //@line 5667 "xmlparse.c"
        var $345=HEAP[$344]; //@line 5667 "xmlparse.c"
        var $346=$oldDtd_addr_i; //@line 5667 "xmlparse.c"
        var $347=$346+132; //@line 5667 "xmlparse.c"
        var $348=($345)==($347); //@line 5667 "xmlparse.c"
        if ($348) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 5667 "xmlparse.c"
      case 37: // $bb21_i
        var $349=$newDtd_addr_i; //@line 5668 "xmlparse.c"
        var $350=$349+132; //@line 5668 "xmlparse.c"
        var $351=$newA_i; //@line 5668 "xmlparse.c"
        var $352=$351+4; //@line 5668 "xmlparse.c"
        HEAP[$352]=$350; //@line 5668 "xmlparse.c"
        __label__ = 22; break; //@line 5668 "xmlparse.c"
      case 38: // $bb22_i
        var $353=$oldA_i; //@line 5670 "xmlparse.c"
        var $354=$353+4; //@line 5670 "xmlparse.c"
        var $355=HEAP[$354]; //@line 5670 "xmlparse.c"
        var $356=$355; //@line 5670 "xmlparse.c"
        var $357=HEAP[$356]; //@line 5670 "xmlparse.c"
        var $358=$newDtd_addr_i; //@line 5670 "xmlparse.c"
        var $359=$358+60; //@line 5670 "xmlparse.c"
        var $360=_lookup($359, $357, 0); //@line 5670 "xmlparse.c"
        var $361=$360; //@line 5670 "xmlparse.c"
        var $362=$newA_i; //@line 5670 "xmlparse.c"
        var $363=$362+4; //@line 5670 "xmlparse.c"
        HEAP[$363]=$361; //@line 5670 "xmlparse.c"
        __label__ = 22; break; //@line 5670 "xmlparse.c"
      case 39: // $bb24_i
        var $364=$oldDtd_addr_i; //@line 5677 "xmlparse.c"
        var $365=$364+20; //@line 5677 "xmlparse.c"
        $iter_addr_i21_i=$iter_i;
        $table_addr_i22_i=$365;
        var $366=$table_addr_i22_i; //@line 5950 "xmlparse.c"
        var $367=$366; //@line 5950 "xmlparse.c"
        var $368=HEAP[$367]; //@line 5950 "xmlparse.c"
        var $369=$iter_addr_i21_i; //@line 5950 "xmlparse.c"
        var $370=$369; //@line 5950 "xmlparse.c"
        HEAP[$370]=$368; //@line 5950 "xmlparse.c"
        var $371=$iter_addr_i21_i; //@line 5951 "xmlparse.c"
        var $372=$371; //@line 5951 "xmlparse.c"
        var $373=HEAP[$372]; //@line 5951 "xmlparse.c"
        var $374=$table_addr_i22_i; //@line 5951 "xmlparse.c"
        var $375=$374+8; //@line 5951 "xmlparse.c"
        var $376=HEAP[$375]; //@line 5951 "xmlparse.c"
        var $377=$373+4*$376; //@line 5951 "xmlparse.c"
        var $378=$iter_addr_i21_i; //@line 5951 "xmlparse.c"
        var $379=$378+4; //@line 5951 "xmlparse.c"
        HEAP[$379]=$377; //@line 5951 "xmlparse.c"
        __label__ = 40; break; //@line 5677 "xmlparse.c"
      case 40: // $bb25_i
        $iter_addr_i23_i=$iter_i;
        __label__ = 43; break; //@line 5957 "xmlparse.c"
      case 41: // $bb_i26_i
        var $380=$iter_addr_i23_i; //@line 5958 "xmlparse.c"
        var $381=$380; //@line 5958 "xmlparse.c"
        var $382=HEAP[$381]; //@line 5958 "xmlparse.c"
        var $383=HEAP[$382]; //@line 5958 "xmlparse.c"
        $tem_i25_i=$383; //@line 5958 "xmlparse.c"
        var $384=$382+4; //@line 5958 "xmlparse.c"
        var $385=$iter_addr_i23_i; //@line 5958 "xmlparse.c"
        var $386=$385; //@line 5958 "xmlparse.c"
        HEAP[$386]=$384; //@line 5958 "xmlparse.c"
        var $387=$tem_i25_i; //@line 5959 "xmlparse.c"
        var $388=($387)!=0; //@line 5959 "xmlparse.c"
        if ($388) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 5959 "xmlparse.c"
      case 42: // $bb1_i27_i
        var $389=$tem_i25_i; //@line 5960 "xmlparse.c"
        $0=$389; //@line 5960 "xmlparse.c"
        __label__ = 45; break; //@line 5960 "xmlparse.c"
      case 43: // $bb2_i28_i
        var $390=$iter_addr_i23_i; //@line 5957 "xmlparse.c"
        var $391=$390; //@line 5957 "xmlparse.c"
        var $392=HEAP[$391]; //@line 5957 "xmlparse.c"
        var $393=$iter_addr_i23_i; //@line 5957 "xmlparse.c"
        var $394=$393+4; //@line 5957 "xmlparse.c"
        var $395=HEAP[$394]; //@line 5957 "xmlparse.c"
        var $396=($392)!=($395); //@line 5957 "xmlparse.c"
        if ($396) { __label__ = 41; break; } else { __label__ = 44; break; } //@line 5957 "xmlparse.c"
      case 44: // $bb3_i29_i
        $0=0; //@line 5962 "xmlparse.c"
        __label__ = 45; break; //@line 5962 "xmlparse.c"
      case 45: // $hashTableIterNext_exit32_i
        var $397=$0; //@line 5960 "xmlparse.c"
        $retval_i24_i=$397; //@line 5960 "xmlparse.c"
        var $retval5_i30_i=$retval_i24_i; //@line 5960 "xmlparse.c"
        var $398=$retval5_i30_i; //@line 5683 "xmlparse.c"
        $oldE_i=$398; //@line 5683 "xmlparse.c"
        var $399=($398)==0; //@line 5684 "xmlparse.c"
        if ($399) { __label__ = 64; break; } else { __label__ = 46; break; } //@line 5684 "xmlparse.c"
      case 46: // $bb27_i
        var $400=$oldE_i; //@line 5686 "xmlparse.c"
        var $401=$400; //@line 5686 "xmlparse.c"
        var $402=HEAP[$401]; //@line 5686 "xmlparse.c"
        var $403=$newDtd_addr_i; //@line 5686 "xmlparse.c"
        var $404=$403+80; //@line 5686 "xmlparse.c"
        var $405=_poolCopyString($404, $402); //@line 5686 "xmlparse.c"
        $name26_i=$405; //@line 5686 "xmlparse.c"
        var $406=$name26_i; //@line 5687 "xmlparse.c"
        var $407=($406)==0; //@line 5687 "xmlparse.c"
        if ($407) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 5687 "xmlparse.c"
      case 47: // $bb28_i
        $6=0; //@line 5688 "xmlparse.c"
        __label__ = 107; break; //@line 5688 "xmlparse.c"
      case 48: // $bb29_i
        var $408=$newDtd_addr_i; //@line 5689 "xmlparse.c"
        var $409=$408+20; //@line 5689 "xmlparse.c"
        var $410=$name26_i; //@line 5689 "xmlparse.c"
        var $411=_lookup($409, $410, 24); //@line 5689 "xmlparse.c"
        var $412=$411; //@line 5689 "xmlparse.c"
        $newE_i=$412; //@line 5689 "xmlparse.c"
        var $413=$newE_i; //@line 5691 "xmlparse.c"
        var $414=($413)==0; //@line 5691 "xmlparse.c"
        if ($414) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 5691 "xmlparse.c"
      case 49: // $bb30_i
        $6=0; //@line 5692 "xmlparse.c"
        __label__ = 107; break; //@line 5692 "xmlparse.c"
      case 50: // $bb31_i
        var $415=$oldE_i; //@line 5693 "xmlparse.c"
        var $416=$415+12; //@line 5693 "xmlparse.c"
        var $417=HEAP[$416]; //@line 5693 "xmlparse.c"
        var $418=($417)!=0; //@line 5693 "xmlparse.c"
        if ($418) { __label__ = 51; break; } else { __label__ = 53; break; } //@line 5693 "xmlparse.c"
      case 51: // $bb32_i
        var $419=$ms_addr_i; //@line 5694 "xmlparse.c"
        var $420=$419; //@line 5694 "xmlparse.c"
        var $421=HEAP[$420]; //@line 5694 "xmlparse.c"
        var $422=$oldE_i; //@line 5694 "xmlparse.c"
        var $423=$422+12; //@line 5694 "xmlparse.c"
        var $424=HEAP[$423]; //@line 5694 "xmlparse.c"
        var $425=($424) * 12; //@line 5694 "xmlparse.c"
        var $426=FUNCTION_TABLE[$421]($425); //@line 5694 "xmlparse.c"
        var $427=$426; //@line 5694 "xmlparse.c"
        var $428=$newE_i; //@line 5694 "xmlparse.c"
        var $429=$428+20; //@line 5694 "xmlparse.c"
        HEAP[$429]=$427; //@line 5694 "xmlparse.c"
        var $430=$newE_i; //@line 5696 "xmlparse.c"
        var $431=$430+20; //@line 5696 "xmlparse.c"
        var $432=HEAP[$431]; //@line 5696 "xmlparse.c"
        var $433=($432)==0; //@line 5696 "xmlparse.c"
        if ($433) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 5696 "xmlparse.c"
      case 52: // $bb33_i
        var $434=$ms_addr_i; //@line 5697 "xmlparse.c"
        var $435=$434+8; //@line 5697 "xmlparse.c"
        var $436=HEAP[$435]; //@line 5697 "xmlparse.c"
        var $437=$newE_i; //@line 5697 "xmlparse.c"
        var $438=$437; //@line 5697 "xmlparse.c"
        FUNCTION_TABLE[$436]($438); //@line 5697 "xmlparse.c"
        $6=0; //@line 5698 "xmlparse.c"
        __label__ = 107; break; //@line 5698 "xmlparse.c"
      case 53: // $bb34_i
        var $439=$oldE_i; //@line 5701 "xmlparse.c"
        var $440=$439+8; //@line 5701 "xmlparse.c"
        var $441=HEAP[$440]; //@line 5701 "xmlparse.c"
        var $442=($441)!=0; //@line 5701 "xmlparse.c"
        if ($442) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 5701 "xmlparse.c"
      case 54: // $bb35_i
        var $443=$oldE_i; //@line 5702 "xmlparse.c"
        var $444=$443+8; //@line 5702 "xmlparse.c"
        var $445=HEAP[$444]; //@line 5702 "xmlparse.c"
        var $446=$445; //@line 5702 "xmlparse.c"
        var $447=HEAP[$446]; //@line 5702 "xmlparse.c"
        var $448=$newDtd_addr_i; //@line 5702 "xmlparse.c"
        var $449=$448+40; //@line 5702 "xmlparse.c"
        var $450=_lookup($449, $447, 0); //@line 5702 "xmlparse.c"
        var $451=$450; //@line 5702 "xmlparse.c"
        var $452=$newE_i; //@line 5702 "xmlparse.c"
        var $453=$452+8; //@line 5702 "xmlparse.c"
        HEAP[$453]=$451; //@line 5702 "xmlparse.c"
        __label__ = 55; break; //@line 5702 "xmlparse.c"
      case 55: // $bb36_i
        var $454=$oldE_i; //@line 5704 "xmlparse.c"
        var $455=$454+12; //@line 5704 "xmlparse.c"
        var $456=HEAP[$455]; //@line 5704 "xmlparse.c"
        var $457=$newE_i; //@line 5704 "xmlparse.c"
        var $458=$457+12; //@line 5704 "xmlparse.c"
        HEAP[$458]=$456; //@line 5704 "xmlparse.c"
        var $459=$newE_i; //@line 5704 "xmlparse.c"
        var $460=$459+12; //@line 5704 "xmlparse.c"
        var $461=HEAP[$460]; //@line 5704 "xmlparse.c"
        var $462=$newE_i; //@line 5704 "xmlparse.c"
        var $463=$462+16; //@line 5704 "xmlparse.c"
        HEAP[$463]=$461; //@line 5704 "xmlparse.c"
        var $464=$oldE_i; //@line 5705 "xmlparse.c"
        var $465=$464+4; //@line 5705 "xmlparse.c"
        var $466=HEAP[$465]; //@line 5705 "xmlparse.c"
        var $467=($466)!=0; //@line 5705 "xmlparse.c"
        if ($467) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 5705 "xmlparse.c"
      case 56: // $bb37_i
        var $468=$oldE_i; //@line 5706 "xmlparse.c"
        var $469=$468+4; //@line 5706 "xmlparse.c"
        var $470=HEAP[$469]; //@line 5706 "xmlparse.c"
        var $471=$470; //@line 5706 "xmlparse.c"
        var $472=HEAP[$471]; //@line 5706 "xmlparse.c"
        var $473=$newDtd_addr_i; //@line 5706 "xmlparse.c"
        var $474=$473+60; //@line 5706 "xmlparse.c"
        var $475=_lookup($474, $472, 0); //@line 5706 "xmlparse.c"
        var $476=$475; //@line 5706 "xmlparse.c"
        var $477=$newE_i; //@line 5706 "xmlparse.c"
        var $478=$477+4; //@line 5706 "xmlparse.c"
        HEAP[$478]=$476; //@line 5706 "xmlparse.c"
        __label__ = 57; break; //@line 5706 "xmlparse.c"
      case 57: // $bb38_i
        $i_i=0; //@line 5708 "xmlparse.c"
        __label__ = 63; break; //@line 5708 "xmlparse.c"
      case 58: // $bb39_i
        var $479=$newE_i; //@line 5709 "xmlparse.c"
        var $480=$479+20; //@line 5709 "xmlparse.c"
        var $481=HEAP[$480]; //@line 5709 "xmlparse.c"
        var $482=$i_i; //@line 5709 "xmlparse.c"
        var $483=$481+12*$482; //@line 5709 "xmlparse.c"
        var $484=$oldE_i; //@line 5709 "xmlparse.c"
        var $485=$484+20; //@line 5709 "xmlparse.c"
        var $486=HEAP[$485]; //@line 5709 "xmlparse.c"
        var $487=$i_i; //@line 5709 "xmlparse.c"
        var $488=$486+12*$487; //@line 5709 "xmlparse.c"
        var $489=$488; //@line 5709 "xmlparse.c"
        var $490=HEAP[$489]; //@line 5709 "xmlparse.c"
        var $491=$490; //@line 5709 "xmlparse.c"
        var $492=HEAP[$491]; //@line 5709 "xmlparse.c"
        var $493=$newDtd_addr_i; //@line 5709 "xmlparse.c"
        var $494=$493+40; //@line 5709 "xmlparse.c"
        var $495=_lookup($494, $492, 0); //@line 5709 "xmlparse.c"
        var $496=$495; //@line 5709 "xmlparse.c"
        var $497=$483; //@line 5709 "xmlparse.c"
        HEAP[$497]=$496; //@line 5709 "xmlparse.c"
        var $498=$newE_i; //@line 5711 "xmlparse.c"
        var $499=$498+20; //@line 5711 "xmlparse.c"
        var $500=HEAP[$499]; //@line 5711 "xmlparse.c"
        var $501=$i_i; //@line 5711 "xmlparse.c"
        var $502=$500+12*$501; //@line 5711 "xmlparse.c"
        var $503=$oldE_i; //@line 5711 "xmlparse.c"
        var $504=$503+20; //@line 5711 "xmlparse.c"
        var $505=HEAP[$504]; //@line 5711 "xmlparse.c"
        var $506=$i_i; //@line 5711 "xmlparse.c"
        var $507=$505+12*$506; //@line 5711 "xmlparse.c"
        var $508=$507+4; //@line 5711 "xmlparse.c"
        var $509=HEAP[$508]; //@line 5711 "xmlparse.c"
        var $510=$502+4; //@line 5711 "xmlparse.c"
        HEAP[$510]=$509; //@line 5711 "xmlparse.c"
        var $511=$oldE_i; //@line 5712 "xmlparse.c"
        var $512=$511+20; //@line 5712 "xmlparse.c"
        var $513=HEAP[$512]; //@line 5712 "xmlparse.c"
        var $514=$i_i; //@line 5712 "xmlparse.c"
        var $515=$513+12*$514; //@line 5712 "xmlparse.c"
        var $516=$515+8; //@line 5712 "xmlparse.c"
        var $517=HEAP[$516]; //@line 5712 "xmlparse.c"
        var $518=($517)!=0; //@line 5712 "xmlparse.c"
        var $519=$newE_i; //@line 5713 "xmlparse.c"
        var $520=$519+20; //@line 5713 "xmlparse.c"
        var $521=HEAP[$520]; //@line 5713 "xmlparse.c"
        var $522=$i_i; //@line 5713 "xmlparse.c"
        var $523=$521+12*$522; //@line 5713 "xmlparse.c"
        if ($518) { __label__ = 59; break; } else { __label__ = 61; break; } //@line 5712 "xmlparse.c"
      case 59: // $bb40_i
        var $524=$oldE_i; //@line 5713 "xmlparse.c"
        var $525=$524+20; //@line 5713 "xmlparse.c"
        var $526=HEAP[$525]; //@line 5713 "xmlparse.c"
        var $527=$i_i; //@line 5713 "xmlparse.c"
        var $528=$526+12*$527; //@line 5713 "xmlparse.c"
        var $529=$528+8; //@line 5713 "xmlparse.c"
        var $530=HEAP[$529]; //@line 5713 "xmlparse.c"
        var $531=$newDtd_addr_i; //@line 5713 "xmlparse.c"
        var $532=$531+80; //@line 5713 "xmlparse.c"
        var $533=_poolCopyString($532, $530); //@line 5713 "xmlparse.c"
        var $534=$523+8; //@line 5713 "xmlparse.c"
        HEAP[$534]=$533; //@line 5713 "xmlparse.c"
        var $535=$newE_i; //@line 5715 "xmlparse.c"
        var $536=$535+20; //@line 5715 "xmlparse.c"
        var $537=HEAP[$536]; //@line 5715 "xmlparse.c"
        var $538=$i_i; //@line 5715 "xmlparse.c"
        var $539=$537+12*$538; //@line 5715 "xmlparse.c"
        var $540=$539+8; //@line 5715 "xmlparse.c"
        var $541=HEAP[$540]; //@line 5715 "xmlparse.c"
        var $542=($541)==0; //@line 5715 "xmlparse.c"
        if ($542) { __label__ = 60; break; } else { __label__ = 62; break; } //@line 5715 "xmlparse.c"
      case 60: // $bb41_i
        $6=0; //@line 5716 "xmlparse.c"
        __label__ = 107; break; //@line 5716 "xmlparse.c"
      case 61: // $bb43_i
        var $543=$523+8; //@line 5719 "xmlparse.c"
        HEAP[$543]=0; //@line 5719 "xmlparse.c"
        __label__ = 62; break; //@line 5719 "xmlparse.c"
      case 62: // $bb44_i
        var $544=$i_i; //@line 5708 "xmlparse.c"
        var $545=($544) + 1; //@line 5708 "xmlparse.c"
        $i_i=$545; //@line 5708 "xmlparse.c"
        __label__ = 63; break; //@line 5708 "xmlparse.c"
      case 63: // $bb45_i
        var $546=$newE_i; //@line 5708 "xmlparse.c"
        var $547=$546+12; //@line 5708 "xmlparse.c"
        var $548=HEAP[$547]; //@line 5708 "xmlparse.c"
        var $549=$i_i; //@line 5708 "xmlparse.c"
        var $550=($548) > ($549); //@line 5708 "xmlparse.c"
        if ($550) { __label__ = 58; break; } else { __label__ = 40; break; } //@line 5708 "xmlparse.c"
      case 64: // $bb47_i
        var $551=$oldDtd_addr_i; //@line 5724 "xmlparse.c"
        var $552=$551; //@line 5724 "xmlparse.c"
        var $553=$newDtd_addr_i; //@line 5724 "xmlparse.c"
        var $554=$553+80; //@line 5724 "xmlparse.c"
        var $555=$newDtd_addr_i; //@line 5724 "xmlparse.c"
        var $556=$555; //@line 5724 "xmlparse.c"
        $newTable_addr_i_i=$556;
        $newPool_addr_i_i=$554;
        $oldTable_addr_i_i=$552;
        $cachedOldBase_i_i=0; //@line 5758 "xmlparse.c"
        $cachedNewBase_i_i=0; //@line 5759 "xmlparse.c"
        var $557=$oldTable_addr_i_i; //@line 5761 "xmlparse.c"
        $iter_addr_i_i_i=$iter_i_i;
        $table_addr_i_i_i=$557;
        var $558=$table_addr_i_i_i; //@line 5950 "xmlparse.c"
        var $559=$558; //@line 5950 "xmlparse.c"
        var $560=HEAP[$559]; //@line 5950 "xmlparse.c"
        var $561=$iter_addr_i_i_i; //@line 5950 "xmlparse.c"
        var $562=$561; //@line 5950 "xmlparse.c"
        HEAP[$562]=$560; //@line 5950 "xmlparse.c"
        var $563=$iter_addr_i_i_i; //@line 5951 "xmlparse.c"
        var $564=$563; //@line 5951 "xmlparse.c"
        var $565=HEAP[$564]; //@line 5951 "xmlparse.c"
        var $566=$table_addr_i_i_i; //@line 5951 "xmlparse.c"
        var $567=$566+8; //@line 5951 "xmlparse.c"
        var $568=HEAP[$567]; //@line 5951 "xmlparse.c"
        var $569=$565+4*$568; //@line 5951 "xmlparse.c"
        var $570=$iter_addr_i_i_i; //@line 5951 "xmlparse.c"
        var $571=$570+4; //@line 5951 "xmlparse.c"
        HEAP[$571]=$569; //@line 5951 "xmlparse.c"
        __label__ = 65; break; //@line 5761 "xmlparse.c"
      case 65: // $bb_i_i
        $iter_addr_i1_i_i=$iter_i_i;
        __label__ = 68; break; //@line 5957 "xmlparse.c"
      case 66: // $bb_i_i_i
        var $572=$iter_addr_i1_i_i; //@line 5958 "xmlparse.c"
        var $573=$572; //@line 5958 "xmlparse.c"
        var $574=HEAP[$573]; //@line 5958 "xmlparse.c"
        var $575=HEAP[$574]; //@line 5958 "xmlparse.c"
        $tem_i_i_i=$575; //@line 5958 "xmlparse.c"
        var $576=$574+4; //@line 5958 "xmlparse.c"
        var $577=$iter_addr_i1_i_i; //@line 5958 "xmlparse.c"
        var $578=$577; //@line 5958 "xmlparse.c"
        HEAP[$578]=$576; //@line 5958 "xmlparse.c"
        var $579=$tem_i_i_i; //@line 5959 "xmlparse.c"
        var $580=($579)!=0; //@line 5959 "xmlparse.c"
        if ($580) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 5959 "xmlparse.c"
      case 67: // $bb1_i_i_i
        var $581=$tem_i_i_i; //@line 5960 "xmlparse.c"
        $4=$581; //@line 5960 "xmlparse.c"
        __label__ = 70; break; //@line 5960 "xmlparse.c"
      case 68: // $bb2_i_i_i
        var $582=$iter_addr_i1_i_i; //@line 5957 "xmlparse.c"
        var $583=$582; //@line 5957 "xmlparse.c"
        var $584=HEAP[$583]; //@line 5957 "xmlparse.c"
        var $585=$iter_addr_i1_i_i; //@line 5957 "xmlparse.c"
        var $586=$585+4; //@line 5957 "xmlparse.c"
        var $587=HEAP[$586]; //@line 5957 "xmlparse.c"
        var $588=($584)!=($587); //@line 5957 "xmlparse.c"
        if ($588) { __label__ = 66; break; } else { __label__ = 69; break; } //@line 5957 "xmlparse.c"
      case 69: // $bb3_i_i_i
        $4=0; //@line 5962 "xmlparse.c"
        __label__ = 70; break; //@line 5962 "xmlparse.c"
      case 70: // $hashTableIterNext_exit_i_i
        var $589=$4; //@line 5960 "xmlparse.c"
        $retval_i_i_i=$589; //@line 5960 "xmlparse.c"
        var $retval5_i_i_i=$retval_i_i_i; //@line 5960 "xmlparse.c"
        var $590=$retval5_i_i_i; //@line 5766 "xmlparse.c"
        $oldE_i_i=$590; //@line 5766 "xmlparse.c"
        var $591=($590)==0; //@line 5767 "xmlparse.c"
        if ($591) { __label__ = 108; break; } else { __label__ = 71; break; } //@line 5767 "xmlparse.c"
      case 71: // $bb1_i_i
        var $592=$oldE_i_i; //@line 5769 "xmlparse.c"
        var $593=$592; //@line 5769 "xmlparse.c"
        var $594=HEAP[$593]; //@line 5769 "xmlparse.c"
        var $595=$newPool_addr_i_i; //@line 5769 "xmlparse.c"
        var $596=_poolCopyString($595, $594); //@line 5769 "xmlparse.c"
        $name_i_i=$596; //@line 5769 "xmlparse.c"
        var $597=$name_i_i; //@line 5770 "xmlparse.c"
        var $598=($597)==0; //@line 5770 "xmlparse.c"
        if ($598) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 5770 "xmlparse.c"
      case 72: // $bb2_i_i
        $5=0; //@line 5771 "xmlparse.c"
        __label__ = 106; break; //@line 5771 "xmlparse.c"
      case 73: // $bb3_i_i
        var $599=$newTable_addr_i_i; //@line 5772 "xmlparse.c"
        var $600=$name_i_i; //@line 5772 "xmlparse.c"
        var $601=_lookup($599, $600, 36); //@line 5772 "xmlparse.c"
        var $602=$601; //@line 5772 "xmlparse.c"
        $newE_i_i=$602; //@line 5772 "xmlparse.c"
        var $603=$newE_i_i; //@line 5773 "xmlparse.c"
        var $604=($603)==0; //@line 5773 "xmlparse.c"
        if ($604) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 5773 "xmlparse.c"
      case 74: // $bb4_i_i
        $5=0; //@line 5774 "xmlparse.c"
        __label__ = 106; break; //@line 5774 "xmlparse.c"
      case 75: // $bb5_i_i
        var $605=$oldE_i_i; //@line 5775 "xmlparse.c"
        var $606=$605+16; //@line 5775 "xmlparse.c"
        var $607=HEAP[$606]; //@line 5775 "xmlparse.c"
        var $608=($607)!=0; //@line 5775 "xmlparse.c"
        var $609=$oldE_i_i; //@line 5776 "xmlparse.c"
        if ($608) { __label__ = 76; break; } else { __label__ = 88; break; } //@line 5775 "xmlparse.c"
      case 76: // $bb6_i_i
        var $610=$609+16; //@line 5776 "xmlparse.c"
        var $611=HEAP[$610]; //@line 5776 "xmlparse.c"
        var $612=$newPool_addr_i_i; //@line 5776 "xmlparse.c"
        var $613=_poolCopyString($612, $611); //@line 5776 "xmlparse.c"
        $tem_i_i=$613; //@line 5776 "xmlparse.c"
        var $614=$tem_i_i; //@line 5777 "xmlparse.c"
        var $615=($614)==0; //@line 5777 "xmlparse.c"
        if ($615) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 5777 "xmlparse.c"
      case 77: // $bb7_i_i
        $5=0; //@line 5778 "xmlparse.c"
        __label__ = 106; break; //@line 5778 "xmlparse.c"
      case 78: // $bb8_i_i
        var $616=$newE_i_i; //@line 5779 "xmlparse.c"
        var $617=$616+16; //@line 5779 "xmlparse.c"
        var $618=$tem_i_i; //@line 5779 "xmlparse.c"
        HEAP[$617]=$618; //@line 5779 "xmlparse.c"
        var $619=$oldE_i_i; //@line 5780 "xmlparse.c"
        var $620=$619+20; //@line 5780 "xmlparse.c"
        var $621=HEAP[$620]; //@line 5780 "xmlparse.c"
        var $622=($621)!=0; //@line 5780 "xmlparse.c"
        if ($622) { __label__ = 79; break; } else { __label__ = 84; break; } //@line 5780 "xmlparse.c"
      case 79: // $bb9_i_i
        var $623=$oldE_i_i; //@line 5781 "xmlparse.c"
        var $624=$623+20; //@line 5781 "xmlparse.c"
        var $625=HEAP[$624]; //@line 5781 "xmlparse.c"
        var $626=$cachedOldBase_i_i; //@line 5781 "xmlparse.c"
        var $627=($625)==($626); //@line 5781 "xmlparse.c"
        if ($627) { __label__ = 80; break; } else { __label__ = 81; break; } //@line 5781 "xmlparse.c"
      case 80: // $bb10_i_i
        var $628=$newE_i_i; //@line 5782 "xmlparse.c"
        var $629=$628+20; //@line 5782 "xmlparse.c"
        var $630=$cachedNewBase_i_i; //@line 5782 "xmlparse.c"
        HEAP[$629]=$630; //@line 5782 "xmlparse.c"
        __label__ = 84; break; //@line 5782 "xmlparse.c"
      case 81: // $bb11_i_i
        var $631=$oldE_i_i; //@line 5784 "xmlparse.c"
        var $632=$631+20; //@line 5784 "xmlparse.c"
        var $633=HEAP[$632]; //@line 5784 "xmlparse.c"
        $cachedOldBase_i_i=$633; //@line 5784 "xmlparse.c"
        var $634=$newPool_addr_i_i; //@line 5785 "xmlparse.c"
        var $635=$cachedOldBase_i_i; //@line 5785 "xmlparse.c"
        var $636=_poolCopyString($634, $635); //@line 5785 "xmlparse.c"
        $tem_i_i=$636; //@line 5785 "xmlparse.c"
        var $637=$tem_i_i; //@line 5786 "xmlparse.c"
        var $638=($637)==0; //@line 5786 "xmlparse.c"
        if ($638) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 5786 "xmlparse.c"
      case 82: // $bb12_i_i
        $5=0; //@line 5787 "xmlparse.c"
        __label__ = 106; break; //@line 5787 "xmlparse.c"
      case 83: // $bb13_i_i
        var $639=$newE_i_i; //@line 5788 "xmlparse.c"
        var $640=$639+20; //@line 5788 "xmlparse.c"
        var $641=$tem_i_i; //@line 5788 "xmlparse.c"
        HEAP[$640]=$641; //@line 5788 "xmlparse.c"
        var $642=$newE_i_i; //@line 5788 "xmlparse.c"
        var $643=$642+20; //@line 5788 "xmlparse.c"
        var $644=HEAP[$643]; //@line 5788 "xmlparse.c"
        $cachedNewBase_i_i=$644; //@line 5788 "xmlparse.c"
        __label__ = 84; break; //@line 5788 "xmlparse.c"
      case 84: // $bb14_i_i
        var $645=$oldE_i_i; //@line 5791 "xmlparse.c"
        var $646=$645+24; //@line 5791 "xmlparse.c"
        var $647=HEAP[$646]; //@line 5791 "xmlparse.c"
        var $648=($647)!=0; //@line 5791 "xmlparse.c"
        if ($648) { __label__ = 85; break; } else { __label__ = 101; break; } //@line 5791 "xmlparse.c"
      case 85: // $bb15_i_i
        var $649=$oldE_i_i; //@line 5792 "xmlparse.c"
        var $650=$649+24; //@line 5792 "xmlparse.c"
        var $651=HEAP[$650]; //@line 5792 "xmlparse.c"
        var $652=$newPool_addr_i_i; //@line 5792 "xmlparse.c"
        var $653=_poolCopyString($652, $651); //@line 5792 "xmlparse.c"
        $tem_i_i=$653; //@line 5792 "xmlparse.c"
        var $654=$tem_i_i; //@line 5793 "xmlparse.c"
        var $655=($654)==0; //@line 5793 "xmlparse.c"
        if ($655) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 5793 "xmlparse.c"
      case 86: // $bb16_i_i
        $5=0; //@line 5794 "xmlparse.c"
        __label__ = 106; break; //@line 5794 "xmlparse.c"
      case 87: // $bb17_i_i
        var $656=$newE_i_i; //@line 5795 "xmlparse.c"
        var $657=$656+24; //@line 5795 "xmlparse.c"
        var $658=$tem_i_i; //@line 5795 "xmlparse.c"
        HEAP[$657]=$658; //@line 5795 "xmlparse.c"
        __label__ = 101; break; //@line 5795 "xmlparse.c"
      case 88: // $bb19_i_i
        var $659=$609+8; //@line 5800 "xmlparse.c"
        var $660=HEAP[$659]; //@line 5800 "xmlparse.c"
        var $661=$oldE_i_i; //@line 5800 "xmlparse.c"
        var $662=$661+4; //@line 5800 "xmlparse.c"
        var $663=HEAP[$662]; //@line 5800 "xmlparse.c"
        var $664=$newPool_addr_i_i; //@line 5800 "xmlparse.c"
        $pool_addr_i_i_i=$664;
        $s_addr_i_i_i=$663;
        $n_addr_i_i_i=$660;
        var $665=$pool_addr_i_i_i; //@line 6044 "xmlparse.c"
        var $666=$665+12; //@line 6044 "xmlparse.c"
        var $667=HEAP[$666]; //@line 6044 "xmlparse.c"
        var $668=($667)==0; //@line 6044 "xmlparse.c"
        if ($668) { __lastLabel__ = 88; __label__ = 89; break; } else { __lastLabel__ = 88; __label__ = 96; break; } //@line 6044 "xmlparse.c"
      case 89: // $bb_i3_i_i
        var $669=$pool_addr_i_i_i; //@line 6044 "xmlparse.c"
        var $670=_poolGrow($669); //@line 6044 "xmlparse.c"
        var $671=($670)==0; //@line 6044 "xmlparse.c"
        if ($671) { __label__ = 90; break; } else { __label__ = 95; break; } //@line 6044 "xmlparse.c"
      case 90: // $bb1_i4_i_i
        $3=0; //@line 6045 "xmlparse.c"
        __label__ = 97; break; //@line 6045 "xmlparse.c"
      case 91: // $bb3_i5_i_i
        var $672=$695+12; //@line 6047 "xmlparse.c"
        var $673=HEAP[$672]; //@line 6047 "xmlparse.c"
        var $674=$pool_addr_i_i_i; //@line 6047 "xmlparse.c"
        var $675=$674+8; //@line 6047 "xmlparse.c"
        var $676=HEAP[$675]; //@line 6047 "xmlparse.c"
        var $677=($673)!=($676); //@line 6047 "xmlparse.c"
        if ($677) { __label__ = 94; break; } else { __label__ = 92; break; } //@line 6047 "xmlparse.c"
      case 92: // $bb4_i_i_i
        var $678=$pool_addr_i_i_i; //@line 6047 "xmlparse.c"
        var $679=_poolGrow($678); //@line 6047 "xmlparse.c"
        var $680=($679)!=0; //@line 6047 "xmlparse.c"
        if ($680) { __label__ = 94; break; } else { __label__ = 93; break; } //@line 6047 "xmlparse.c"
      case 93: // $bb8_i_i_i
        $iftmp_279_i_i_i=1; //@line 6047 "xmlparse.c"
        $3=0; //@line 6048 "xmlparse.c"
        __label__ = 97; break; //@line 6048 "xmlparse.c"
      case 94: // $bb9_i_i_i
        var $681=$pool_addr_i_i_i; //@line 6047 "xmlparse.c"
        var $682=$681+12; //@line 6047 "xmlparse.c"
        var $683=HEAP[$682]; //@line 6047 "xmlparse.c"
        var $684=$s_addr_i_i_i; //@line 6047 "xmlparse.c"
        var $685=HEAP[$684]; //@line 6047 "xmlparse.c"
        HEAP[$683]=$685; //@line 6047 "xmlparse.c"
        var $686=$683+1; //@line 6047 "xmlparse.c"
        var $687=$pool_addr_i_i_i; //@line 6047 "xmlparse.c"
        var $688=$687+12; //@line 6047 "xmlparse.c"
        HEAP[$688]=$686; //@line 6047 "xmlparse.c"
        $iftmp_279_i_i_i=0; //@line 6047 "xmlparse.c"
        var $689=$n_addr_i_i_i; //@line 6046 "xmlparse.c"
        var $690=($689) - 1; //@line 6046 "xmlparse.c"
        $n_addr_i_i_i=$690; //@line 6046 "xmlparse.c"
        var $691=$s_addr_i_i_i; //@line 6046 "xmlparse.c"
        var $692=$691+1; //@line 6046 "xmlparse.c"
        $s_addr_i_i_i=$692; //@line 6046 "xmlparse.c"
        __lastLabel__ = 94; __label__ = 96; break; //@line 6046 "xmlparse.c"
      case 95: // $bb10thread_pre_split_i_i_i
        var $_pr_i_i_i=$n_addr_i_i_i;
        __lastLabel__ = 95; __label__ = 96; break;
      case 96: // $bb10_i_i_i
        var $693=__lastLabel__ == 94 ? $690 : (__lastLabel__ == 95 ? $_pr_i_i_i : ($660));
        var $694=($693) > 0; //@line 6046 "xmlparse.c"
        var $695=$pool_addr_i_i_i; //@line 6047 "xmlparse.c"
        if ($694) { __label__ = 91; break; } else { __label__ = 98; break; } //@line 6046 "xmlparse.c"
      case 97: // $poolCopyStringN_exit_thread_i_i
        $retval_i2_i_i=0; //@line 6045 "xmlparse.c"
        $tem20_i_i=0; //@line 5800 "xmlparse.c"
        __label__ = 99; break;
      case 98: // $poolCopyStringN_exit_i_i
        var $696=$695+16; //@line 6050 "xmlparse.c"
        var $697=HEAP[$696]; //@line 6050 "xmlparse.c"
        $s_addr_i_i_i=$697; //@line 6050 "xmlparse.c"
        var $698=$pool_addr_i_i_i; //@line 6051 "xmlparse.c"
        var $699=$698+12; //@line 6051 "xmlparse.c"
        var $700=HEAP[$699]; //@line 6051 "xmlparse.c"
        var $701=$pool_addr_i_i_i; //@line 6051 "xmlparse.c"
        var $702=$701+16; //@line 6051 "xmlparse.c"
        HEAP[$702]=$700; //@line 6051 "xmlparse.c"
        var $703=$s_addr_i_i_i; //@line 6052 "xmlparse.c"
        $3=$703; //@line 6052 "xmlparse.c"
        $retval_i2_i_i=$703; //@line 6045 "xmlparse.c"
        $tem20_i_i=$703; //@line 5800 "xmlparse.c"
        var $704=($703)==0; //@line 5801 "xmlparse.c"
        if ($704) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 5801 "xmlparse.c"
      case 99: // $bb21_i_i
        $5=0; //@line 5802 "xmlparse.c"
        __label__ = 106; break; //@line 5802 "xmlparse.c"
      case 100: // $bb22_i_i
        var $705=$newE_i_i; //@line 5803 "xmlparse.c"
        var $706=$705+4; //@line 5803 "xmlparse.c"
        var $707=$tem20_i_i; //@line 5803 "xmlparse.c"
        HEAP[$706]=$707; //@line 5803 "xmlparse.c"
        var $708=$oldE_i_i; //@line 5804 "xmlparse.c"
        var $709=$708+8; //@line 5804 "xmlparse.c"
        var $710=HEAP[$709]; //@line 5804 "xmlparse.c"
        var $711=$newE_i_i; //@line 5804 "xmlparse.c"
        var $712=$711+8; //@line 5804 "xmlparse.c"
        HEAP[$712]=$710; //@line 5804 "xmlparse.c"
        __label__ = 101; break; //@line 5804 "xmlparse.c"
      case 101: // $bb23_i_i
        var $713=$oldE_i_i; //@line 5806 "xmlparse.c"
        var $714=$713+28; //@line 5806 "xmlparse.c"
        var $715=HEAP[$714]; //@line 5806 "xmlparse.c"
        var $716=($715)!=0; //@line 5806 "xmlparse.c"
        if ($716) { __label__ = 102; break; } else { __label__ = 105; break; } //@line 5806 "xmlparse.c"
      case 102: // $bb24_i_i
        var $717=$oldE_i_i; //@line 5807 "xmlparse.c"
        var $718=$717+28; //@line 5807 "xmlparse.c"
        var $719=HEAP[$718]; //@line 5807 "xmlparse.c"
        var $720=$newPool_addr_i_i; //@line 5807 "xmlparse.c"
        var $721=_poolCopyString($720, $719); //@line 5807 "xmlparse.c"
        $tem25_i_i=$721; //@line 5807 "xmlparse.c"
        var $722=$tem25_i_i; //@line 5808 "xmlparse.c"
        var $723=($722)==0; //@line 5808 "xmlparse.c"
        if ($723) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 5808 "xmlparse.c"
      case 103: // $bb26_i_i
        $5=0; //@line 5809 "xmlparse.c"
        __label__ = 106; break; //@line 5809 "xmlparse.c"
      case 104: // $bb27_i_i
        var $724=$newE_i_i; //@line 5810 "xmlparse.c"
        var $725=$724+28; //@line 5810 "xmlparse.c"
        var $726=$tem25_i_i; //@line 5810 "xmlparse.c"
        HEAP[$725]=$726; //@line 5810 "xmlparse.c"
        __label__ = 105; break; //@line 5810 "xmlparse.c"
      case 105: // $bb28_i_i
        var $727=$oldE_i_i; //@line 5812 "xmlparse.c"
        var $728=$727+33; //@line 5812 "xmlparse.c"
        var $729=HEAP[$728]; //@line 5812 "xmlparse.c"
        var $730=$newE_i_i; //@line 5812 "xmlparse.c"
        var $731=$730+33; //@line 5812 "xmlparse.c"
        HEAP[$731]=$729; //@line 5812 "xmlparse.c"
        var $732=$oldE_i_i; //@line 5813 "xmlparse.c"
        var $733=$732+34; //@line 5813 "xmlparse.c"
        var $734=HEAP[$733]; //@line 5813 "xmlparse.c"
        var $735=$newE_i_i; //@line 5813 "xmlparse.c"
        var $736=$735+34; //@line 5813 "xmlparse.c"
        HEAP[$736]=$734; //@line 5813 "xmlparse.c"
        __label__ = 65; break; //@line 5813 "xmlparse.c"
      case 106: // $bb48_i
        $retval_i_i=0; //@line 5771 "xmlparse.c"
        $6=0; //@line 5727 "xmlparse.c"
        __label__ = 107; break; //@line 5727 "xmlparse.c"
      case 107: // $dtdCopy_exit_thread
        $retval_i=0; //@line 5637 "xmlparse.c"
        __label__ = 109; break;
      case 108: // $bb11
        $5=1; //@line 5815 "xmlparse.c"
        $retval_i_i=1; //@line 5771 "xmlparse.c"
        var $737=$oldDtd_addr_i; //@line 5737 "xmlparse.c"
        var $738=$737+128; //@line 5737 "xmlparse.c"
        var $739=HEAP[$738]; //@line 5737 "xmlparse.c"
        var $740=$newDtd_addr_i; //@line 5737 "xmlparse.c"
        var $741=$740+128; //@line 5737 "xmlparse.c"
        HEAP[$741]=$739; //@line 5737 "xmlparse.c"
        var $742=$oldDtd_addr_i; //@line 5738 "xmlparse.c"
        var $743=$742+129; //@line 5738 "xmlparse.c"
        var $744=HEAP[$743]; //@line 5738 "xmlparse.c"
        var $745=$newDtd_addr_i; //@line 5738 "xmlparse.c"
        var $746=$745+129; //@line 5738 "xmlparse.c"
        HEAP[$746]=$744; //@line 5738 "xmlparse.c"
        var $747=$oldDtd_addr_i; //@line 5739 "xmlparse.c"
        var $748=$747+130; //@line 5739 "xmlparse.c"
        var $749=HEAP[$748]; //@line 5739 "xmlparse.c"
        var $750=$newDtd_addr_i; //@line 5739 "xmlparse.c"
        var $751=$750+130; //@line 5739 "xmlparse.c"
        HEAP[$751]=$749; //@line 5739 "xmlparse.c"
        var $752=$oldDtd_addr_i; //@line 5742 "xmlparse.c"
        var $753=$752+140; //@line 5742 "xmlparse.c"
        var $754=HEAP[$753]; //@line 5742 "xmlparse.c"
        var $755=$newDtd_addr_i; //@line 5742 "xmlparse.c"
        var $756=$755+140; //@line 5742 "xmlparse.c"
        HEAP[$756]=$754; //@line 5742 "xmlparse.c"
        var $757=$oldDtd_addr_i; //@line 5743 "xmlparse.c"
        var $758=$757+144; //@line 5743 "xmlparse.c"
        var $759=HEAP[$758]; //@line 5743 "xmlparse.c"
        var $760=$newDtd_addr_i; //@line 5743 "xmlparse.c"
        var $761=$760+144; //@line 5743 "xmlparse.c"
        HEAP[$761]=$759; //@line 5743 "xmlparse.c"
        var $762=$oldDtd_addr_i; //@line 5744 "xmlparse.c"
        var $763=$762+148; //@line 5744 "xmlparse.c"
        var $764=HEAP[$763]; //@line 5744 "xmlparse.c"
        var $765=$newDtd_addr_i; //@line 5744 "xmlparse.c"
        var $766=$765+148; //@line 5744 "xmlparse.c"
        HEAP[$766]=$764; //@line 5744 "xmlparse.c"
        var $767=$oldDtd_addr_i; //@line 5745 "xmlparse.c"
        var $768=$767+152; //@line 5745 "xmlparse.c"
        var $769=HEAP[$768]; //@line 5745 "xmlparse.c"
        var $770=$newDtd_addr_i; //@line 5745 "xmlparse.c"
        var $771=$770+152; //@line 5745 "xmlparse.c"
        HEAP[$771]=$769; //@line 5745 "xmlparse.c"
        var $772=$oldDtd_addr_i; //@line 5746 "xmlparse.c"
        var $773=$772+160; //@line 5746 "xmlparse.c"
        var $774=HEAP[$773]; //@line 5746 "xmlparse.c"
        var $775=$newDtd_addr_i; //@line 5746 "xmlparse.c"
        var $776=$775+160; //@line 5746 "xmlparse.c"
        HEAP[$776]=$774; //@line 5746 "xmlparse.c"
        var $777=$oldDtd_addr_i; //@line 5747 "xmlparse.c"
        var $778=$777+164; //@line 5747 "xmlparse.c"
        var $779=HEAP[$778]; //@line 5747 "xmlparse.c"
        var $780=$newDtd_addr_i; //@line 5747 "xmlparse.c"
        var $781=$780+164; //@line 5747 "xmlparse.c"
        HEAP[$781]=$779; //@line 5747 "xmlparse.c"
        $6=1; //@line 5749 "xmlparse.c"
        $retval_i=1; //@line 5637 "xmlparse.c"
        var $782=$parser; //@line 1038 "xmlparse.c"
        var $783=$context_addr; //@line 1038 "xmlparse.c"
        var $784=_setContext($782, $783); //@line 1038 "xmlparse.c"
        var $785=($784)==0; //@line 1038 "xmlparse.c"
        if ($785) { __label__ = 109; break; } else { __label__ = 110; break; } //@line 1038 "xmlparse.c"
      case 109: // $bb12
        var $786=$parser; //@line 1040 "xmlparse.c"
        _PyExpat_XML_ParserFree($786); //@line 1040 "xmlparse.c"
        $7=0; //@line 1041 "xmlparse.c"
        __label__ = 111; break; //@line 1041 "xmlparse.c"
      case 110: // $bb13
        var $787=$parser; //@line 1043 "xmlparse.c"
        var $788=$787+264; //@line 1043 "xmlparse.c"
        HEAP[$788]=(FUNCTION_TABLE_OFFSET + 52); //@line 1043 "xmlparse.c"
        var $789=$parser; //@line 1059 "xmlparse.c"
        $7=$789; //@line 1059 "xmlparse.c"
        __label__ = 111; break; //@line 1059 "xmlparse.c"
      case 111: // $bb14
        var $790=$7; //@line 1000 "xmlparse.c"
        $retval=$790; //@line 1000 "xmlparse.c"
        var $retval15=$retval; //@line 1000 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval15; //@line 1000 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ParserFree($parser) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $table_addr_i19_i;
        var $i_i20_i;
        var $table_addr_i12_i;
        var $i_i13_i;
        var $table_addr_i5_i;
        var $i_i6_i;
        var $table_addr_i2_i;
        var $i_i_i;
        var $iter_addr_i1_i;
        var $retval_i_i;
        var $0;
        var $tem_i_i;
        var $iter_addr_i_i;
        var $table_addr_i_i;
        var $p_addr_i;
        var $isDocEntity_addr_i;
        var $ms_addr_i;
        var $iter_i=__stackBase__;
        var $e_i;
        var $bindings_addr_i7;
        var $parser_addr_i8;
        var $b_i9;
        var $bindings_addr_i1;
        var $parser_addr_i2;
        var $b_i3;
        var $bindings_addr_i;
        var $parser_addr_i;
        var $b_i;
        var $parser_addr;
        var $tagList;
        var $entityList;
        var $p;
        var $openEntity;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1080 "xmlparse.c"
        var $2=($1)==0; //@line 1080 "xmlparse.c"
        if ($2) { __label__ = 41; break; } else { __label__ = 1; break; } //@line 1080 "xmlparse.c"
      case 1: // $bb
        var $3=$parser_addr; //@line 1083 "xmlparse.c"
        var $4=$3+348; //@line 1083 "xmlparse.c"
        var $5=HEAP[$4]; //@line 1083 "xmlparse.c"
        $tagList=$5; //@line 1083 "xmlparse.c"
        __lastLabel__ = 1; __label__ = 2; break; //@line 1083 "xmlparse.c"
      case 2: // $bb1
        var $6=__lastLabel__ == 7 ? $_pr : ($5);
        var $7=($6)==0; //@line 1086 "xmlparse.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1086 "xmlparse.c"
      case 3: // $bb2
        var $8=$parser_addr; //@line 1087 "xmlparse.c"
        var $9=$8+352; //@line 1087 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1087 "xmlparse.c"
        var $11=($10)==0; //@line 1087 "xmlparse.c"
        var $12=$parser_addr; //@line 1099 "xmlparse.c"
        if ($11) { __label__ = 8; break; } else { __label__ = 4; break; } //@line 1087 "xmlparse.c"
      case 4: // $bb3
        var $13=$12+352; //@line 1089 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1089 "xmlparse.c"
        $tagList=$14; //@line 1089 "xmlparse.c"
        var $15=$parser_addr; //@line 1090 "xmlparse.c"
        var $16=$15+352; //@line 1090 "xmlparse.c"
        HEAP[$16]=0; //@line 1090 "xmlparse.c"
        __label__ = 5; break; //@line 1090 "xmlparse.c"
      case 5: // $bb4
        var $17=$tagList; //@line 1092 "xmlparse.c"
        $p=$17; //@line 1092 "xmlparse.c"
        var $18=$tagList; //@line 1093 "xmlparse.c"
        var $19=$18; //@line 1093 "xmlparse.c"
        var $20=HEAP[$19]; //@line 1093 "xmlparse.c"
        $tagList=$20; //@line 1093 "xmlparse.c"
        var $21=$parser_addr; //@line 1094 "xmlparse.c"
        var $22=$21+12; //@line 1094 "xmlparse.c"
        var $23=$22+8; //@line 1094 "xmlparse.c"
        var $24=HEAP[$23]; //@line 1094 "xmlparse.c"
        var $25=$p; //@line 1094 "xmlparse.c"
        var $26=$25+36; //@line 1094 "xmlparse.c"
        var $27=HEAP[$26]; //@line 1094 "xmlparse.c"
        FUNCTION_TABLE[$24]($27); //@line 1094 "xmlparse.c"
        var $28=$p; //@line 1095 "xmlparse.c"
        var $29=$28+44; //@line 1095 "xmlparse.c"
        var $30=HEAP[$29]; //@line 1095 "xmlparse.c"
        var $31=$parser_addr; //@line 1095 "xmlparse.c"
        $bindings_addr_i=$30;
        $parser_addr_i=$31;
        $b_i=$30; //@line 1066 "xmlparse.c"
        var $32=($30)==0; //@line 1067 "xmlparse.c"
        if ($32) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 1067 "xmlparse.c"
      case 6: // $bb1_i
        var $33=$b_i; //@line 1069 "xmlparse.c"
        var $34=$33+4; //@line 1069 "xmlparse.c"
        var $35=HEAP[$34]; //@line 1069 "xmlparse.c"
        $bindings_addr_i=$35; //@line 1069 "xmlparse.c"
        var $36=$parser_addr_i; //@line 1070 "xmlparse.c"
        var $37=$36+12; //@line 1070 "xmlparse.c"
        var $38=$37+8; //@line 1070 "xmlparse.c"
        var $39=HEAP[$38]; //@line 1070 "xmlparse.c"
        var $40=$b_i; //@line 1070 "xmlparse.c"
        var $41=$40+16; //@line 1070 "xmlparse.c"
        var $42=HEAP[$41]; //@line 1070 "xmlparse.c"
        FUNCTION_TABLE[$39]($42); //@line 1070 "xmlparse.c"
        var $43=$parser_addr_i; //@line 1071 "xmlparse.c"
        var $44=$43+12; //@line 1071 "xmlparse.c"
        var $45=$44+8; //@line 1071 "xmlparse.c"
        var $46=HEAP[$45]; //@line 1071 "xmlparse.c"
        var $47=$b_i; //@line 1071 "xmlparse.c"
        var $48=$47; //@line 1071 "xmlparse.c"
        FUNCTION_TABLE[$46]($48); //@line 1071 "xmlparse.c"
        var $_pr_i=$bindings_addr_i;
        $b_i=$_pr_i; //@line 1066 "xmlparse.c"
        var $49=($_pr_i)==0; //@line 1067 "xmlparse.c"
        if ($49) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 1067 "xmlparse.c"
      case 7: // $destroyBindings_exit
        var $50=$parser_addr; //@line 1096 "xmlparse.c"
        var $51=$50+12; //@line 1096 "xmlparse.c"
        var $52=$51+8; //@line 1096 "xmlparse.c"
        var $53=HEAP[$52]; //@line 1096 "xmlparse.c"
        var $54=$p; //@line 1096 "xmlparse.c"
        var $55=$54; //@line 1096 "xmlparse.c"
        FUNCTION_TABLE[$53]($55); //@line 1096 "xmlparse.c"
        var $_pr=$tagList;
        __lastLabel__ = 7; __label__ = 2; break; //@line 1096 "xmlparse.c"
      case 8: // $bb5
        var $56=$12+284; //@line 1099 "xmlparse.c"
        var $57=HEAP[$56]; //@line 1099 "xmlparse.c"
        $entityList=$57; //@line 1099 "xmlparse.c"
        __lastLabel__ = 8; __label__ = 9; break; //@line 1099 "xmlparse.c"
      case 9: // $bb6
        var $58=__lastLabel__ == 12 ? $_pr14 : ($57);
        var $59=($58)==0; //@line 1102 "xmlparse.c"
        if ($59) { __label__ = 10; break; } else { __label__ = 12; break; } //@line 1102 "xmlparse.c"
      case 10: // $bb7
        var $60=$parser_addr; //@line 1103 "xmlparse.c"
        var $61=$60+288; //@line 1103 "xmlparse.c"
        var $62=HEAP[$61]; //@line 1103 "xmlparse.c"
        var $63=($62)==0; //@line 1103 "xmlparse.c"
        var $64=$parser_addr; //@line 1113 "xmlparse.c"
        if ($63) { __label__ = 13; break; } else { __label__ = 11; break; } //@line 1103 "xmlparse.c"
      case 11: // $bb8
        var $65=$64+288; //@line 1105 "xmlparse.c"
        var $66=HEAP[$65]; //@line 1105 "xmlparse.c"
        $entityList=$66; //@line 1105 "xmlparse.c"
        var $67=$parser_addr; //@line 1106 "xmlparse.c"
        var $68=$67+288; //@line 1106 "xmlparse.c"
        HEAP[$68]=0; //@line 1106 "xmlparse.c"
        __label__ = 12; break; //@line 1106 "xmlparse.c"
      case 12: // $bb9
        var $69=$entityList; //@line 1108 "xmlparse.c"
        $openEntity=$69; //@line 1108 "xmlparse.c"
        var $70=$entityList; //@line 1109 "xmlparse.c"
        var $71=$70+8; //@line 1109 "xmlparse.c"
        var $72=HEAP[$71]; //@line 1109 "xmlparse.c"
        $entityList=$72; //@line 1109 "xmlparse.c"
        var $73=$parser_addr; //@line 1110 "xmlparse.c"
        var $74=$73+12; //@line 1110 "xmlparse.c"
        var $75=$74+8; //@line 1110 "xmlparse.c"
        var $76=HEAP[$75]; //@line 1110 "xmlparse.c"
        var $77=$openEntity; //@line 1110 "xmlparse.c"
        var $78=$77; //@line 1110 "xmlparse.c"
        FUNCTION_TABLE[$76]($78); //@line 1110 "xmlparse.c"
        var $_pr14=$entityList;
        __lastLabel__ = 12; __label__ = 9; break; //@line 1110 "xmlparse.c"
      case 13: // $bb10
        var $79=$64+360; //@line 1113 "xmlparse.c"
        var $80=HEAP[$79]; //@line 1113 "xmlparse.c"
        var $81=$parser_addr; //@line 1113 "xmlparse.c"
        $bindings_addr_i1=$80;
        $parser_addr_i2=$81;
        $b_i3=$80; //@line 1066 "xmlparse.c"
        var $82=($80)==0; //@line 1067 "xmlparse.c"
        if ($82) { __label__ = 15; break; } else { __label__ = 14; break; } //@line 1067 "xmlparse.c"
      case 14: // $bb1_i5
        var $83=$b_i3; //@line 1069 "xmlparse.c"
        var $84=$83+4; //@line 1069 "xmlparse.c"
        var $85=HEAP[$84]; //@line 1069 "xmlparse.c"
        $bindings_addr_i1=$85; //@line 1069 "xmlparse.c"
        var $86=$parser_addr_i2; //@line 1070 "xmlparse.c"
        var $87=$86+12; //@line 1070 "xmlparse.c"
        var $88=$87+8; //@line 1070 "xmlparse.c"
        var $89=HEAP[$88]; //@line 1070 "xmlparse.c"
        var $90=$b_i3; //@line 1070 "xmlparse.c"
        var $91=$90+16; //@line 1070 "xmlparse.c"
        var $92=HEAP[$91]; //@line 1070 "xmlparse.c"
        FUNCTION_TABLE[$89]($92); //@line 1070 "xmlparse.c"
        var $93=$parser_addr_i2; //@line 1071 "xmlparse.c"
        var $94=$93+12; //@line 1071 "xmlparse.c"
        var $95=$94+8; //@line 1071 "xmlparse.c"
        var $96=HEAP[$95]; //@line 1071 "xmlparse.c"
        var $97=$b_i3; //@line 1071 "xmlparse.c"
        var $98=$97; //@line 1071 "xmlparse.c"
        FUNCTION_TABLE[$96]($98); //@line 1071 "xmlparse.c"
        var $_pr_i4=$bindings_addr_i1;
        $b_i3=$_pr_i4; //@line 1066 "xmlparse.c"
        var $99=($_pr_i4)==0; //@line 1067 "xmlparse.c"
        if ($99) { __label__ = 15; break; } else { __label__ = 14; break; } //@line 1067 "xmlparse.c"
      case 15: // $destroyBindings_exit6
        var $100=$parser_addr; //@line 1114 "xmlparse.c"
        var $101=$100+356; //@line 1114 "xmlparse.c"
        var $102=HEAP[$101]; //@line 1114 "xmlparse.c"
        var $103=$parser_addr; //@line 1114 "xmlparse.c"
        $bindings_addr_i7=$102;
        $parser_addr_i8=$103;
        $b_i9=$102; //@line 1066 "xmlparse.c"
        var $104=($102)==0; //@line 1067 "xmlparse.c"
        if ($104) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1067 "xmlparse.c"
      case 16: // $bb1_i11
        var $105=$b_i9; //@line 1069 "xmlparse.c"
        var $106=$105+4; //@line 1069 "xmlparse.c"
        var $107=HEAP[$106]; //@line 1069 "xmlparse.c"
        $bindings_addr_i7=$107; //@line 1069 "xmlparse.c"
        var $108=$parser_addr_i8; //@line 1070 "xmlparse.c"
        var $109=$108+12; //@line 1070 "xmlparse.c"
        var $110=$109+8; //@line 1070 "xmlparse.c"
        var $111=HEAP[$110]; //@line 1070 "xmlparse.c"
        var $112=$b_i9; //@line 1070 "xmlparse.c"
        var $113=$112+16; //@line 1070 "xmlparse.c"
        var $114=HEAP[$113]; //@line 1070 "xmlparse.c"
        FUNCTION_TABLE[$111]($114); //@line 1070 "xmlparse.c"
        var $115=$parser_addr_i8; //@line 1071 "xmlparse.c"
        var $116=$115+12; //@line 1071 "xmlparse.c"
        var $117=$116+8; //@line 1071 "xmlparse.c"
        var $118=HEAP[$117]; //@line 1071 "xmlparse.c"
        var $119=$b_i9; //@line 1071 "xmlparse.c"
        var $120=$119; //@line 1071 "xmlparse.c"
        FUNCTION_TABLE[$118]($120); //@line 1071 "xmlparse.c"
        var $_pr_i10=$bindings_addr_i7;
        $b_i9=$_pr_i10; //@line 1066 "xmlparse.c"
        var $121=($_pr_i10)==0; //@line 1067 "xmlparse.c"
        if ($121) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1067 "xmlparse.c"
      case 17: // $destroyBindings_exit12
        var $122=$parser_addr; //@line 1115 "xmlparse.c"
        var $123=$122+400; //@line 1115 "xmlparse.c"
        _poolDestroy($123); //@line 1115 "xmlparse.c"
        var $124=$parser_addr; //@line 1116 "xmlparse.c"
        var $125=$124+424; //@line 1116 "xmlparse.c"
        _poolDestroy($125); //@line 1116 "xmlparse.c"
        var $126=$parser_addr; //@line 1123 "xmlparse.c"
        var $127=$126+340; //@line 1123 "xmlparse.c"
        var $128=HEAP[$127]; //@line 1123 "xmlparse.c"
        var $129=($128)!=0; //@line 1123 "xmlparse.c"
        if ($129) { __label__ = 18; break; } else { __label__ = 38; break; } //@line 1123 "xmlparse.c"
      case 18: // $bb11
        var $130=$parser_addr; //@line 1125 "xmlparse.c"
        var $131=$130+12; //@line 1125 "xmlparse.c"
        var $132=$parser_addr; //@line 1125 "xmlparse.c"
        var $133=$132+460; //@line 1125 "xmlparse.c"
        var $134=HEAP[$133]; //@line 1125 "xmlparse.c"
        var $135=($134)==0; //@line 1125 "xmlparse.c"
        var $136=($135); //@line 1125 "xmlparse.c"
        var $137=$parser_addr; //@line 1125 "xmlparse.c"
        var $138=$137+340; //@line 1125 "xmlparse.c"
        var $139=HEAP[$138]; //@line 1125 "xmlparse.c"
        var $140=((($136)) & 255); //@line 1125 "xmlparse.c"
        $p_addr_i=$139;
        $isDocEntity_addr_i=$140;
        $ms_addr_i=$131;
        var $141=$p_addr_i; //@line 5595 "xmlparse.c"
        var $142=$141+20; //@line 5595 "xmlparse.c"
        $iter_addr_i_i=$iter_i;
        $table_addr_i_i=$142;
        var $143=$table_addr_i_i; //@line 5950 "xmlparse.c"
        var $144=$143; //@line 5950 "xmlparse.c"
        var $145=HEAP[$144]; //@line 5950 "xmlparse.c"
        var $146=$iter_addr_i_i; //@line 5950 "xmlparse.c"
        var $147=$146; //@line 5950 "xmlparse.c"
        HEAP[$147]=$145; //@line 5950 "xmlparse.c"
        var $148=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $149=$148; //@line 5951 "xmlparse.c"
        var $150=HEAP[$149]; //@line 5951 "xmlparse.c"
        var $151=$table_addr_i_i; //@line 5951 "xmlparse.c"
        var $152=$151+8; //@line 5951 "xmlparse.c"
        var $153=HEAP[$152]; //@line 5951 "xmlparse.c"
        var $154=$150+4*$153; //@line 5951 "xmlparse.c"
        var $155=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $156=$155+4; //@line 5951 "xmlparse.c"
        HEAP[$156]=$154; //@line 5951 "xmlparse.c"
        __label__ = 19; break; //@line 5595 "xmlparse.c"
      case 19: // $bb_i
        $iter_addr_i1_i=$iter_i;
        __label__ = 22; break; //@line 5957 "xmlparse.c"
      case 20: // $bb_i_i
        var $157=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $158=$157; //@line 5958 "xmlparse.c"
        var $159=HEAP[$158]; //@line 5958 "xmlparse.c"
        var $160=HEAP[$159]; //@line 5958 "xmlparse.c"
        $tem_i_i=$160; //@line 5958 "xmlparse.c"
        var $161=$159+4; //@line 5958 "xmlparse.c"
        var $162=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $163=$162; //@line 5958 "xmlparse.c"
        HEAP[$163]=$161; //@line 5958 "xmlparse.c"
        var $164=$tem_i_i; //@line 5959 "xmlparse.c"
        var $165=($164)!=0; //@line 5959 "xmlparse.c"
        if ($165) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 5959 "xmlparse.c"
      case 21: // $bb1_i_i
        var $166=$tem_i_i; //@line 5960 "xmlparse.c"
        $0=$166; //@line 5960 "xmlparse.c"
        __label__ = 24; break; //@line 5960 "xmlparse.c"
      case 22: // $bb2_i_i
        var $167=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $168=$167; //@line 5957 "xmlparse.c"
        var $169=HEAP[$168]; //@line 5957 "xmlparse.c"
        var $170=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $171=$170+4; //@line 5957 "xmlparse.c"
        var $172=HEAP[$171]; //@line 5957 "xmlparse.c"
        var $173=($169)!=($172); //@line 5957 "xmlparse.c"
        if ($173) { __label__ = 20; break; } else { __label__ = 23; break; } //@line 5957 "xmlparse.c"
      case 23: // $bb3_i_i
        $0=0; //@line 5962 "xmlparse.c"
        __label__ = 24; break; //@line 5962 "xmlparse.c"
      case 24: // $hashTableIterNext_exit_i
        var $174=$0; //@line 5960 "xmlparse.c"
        $retval_i_i=$174; //@line 5960 "xmlparse.c"
        var $retval5_i_i=$retval_i_i; //@line 5960 "xmlparse.c"
        var $175=$retval5_i_i; //@line 5597 "xmlparse.c"
        $e_i=$175; //@line 5597 "xmlparse.c"
        var $176=($175)==0; //@line 5598 "xmlparse.c"
        if ($176) { __label__ = 27; break; } else { __label__ = 25; break; } //@line 5598 "xmlparse.c"
      case 25: // $bb1_i13
        var $177=$e_i; //@line 5600 "xmlparse.c"
        var $178=$177+16; //@line 5600 "xmlparse.c"
        var $179=HEAP[$178]; //@line 5600 "xmlparse.c"
        var $180=($179)!=0; //@line 5600 "xmlparse.c"
        if ($180) { __label__ = 26; break; } else { __label__ = 19; break; } //@line 5600 "xmlparse.c"
      case 26: // $bb2_i
        var $181=$ms_addr_i; //@line 5601 "xmlparse.c"
        var $182=$181+8; //@line 5601 "xmlparse.c"
        var $183=HEAP[$182]; //@line 5601 "xmlparse.c"
        var $184=$e_i; //@line 5601 "xmlparse.c"
        var $185=$184+20; //@line 5601 "xmlparse.c"
        var $186=HEAP[$185]; //@line 5601 "xmlparse.c"
        var $187=$186; //@line 5601 "xmlparse.c"
        FUNCTION_TABLE[$183]($187); //@line 5601 "xmlparse.c"
        __label__ = 19; break; //@line 5601 "xmlparse.c"
      case 27: // $bb4_i
        var $188=$p_addr_i; //@line 5603 "xmlparse.c"
        var $189=$188; //@line 5603 "xmlparse.c"
        $table_addr_i2_i=$189;
        $i_i_i=0; //@line 5932 "xmlparse.c"
        var $190=$table_addr_i2_i; //@line 5932 "xmlparse.c"
        var $191=$190+8; //@line 5932 "xmlparse.c"
        var $192=HEAP[$191]; //@line 5932 "xmlparse.c"
        var $193=$i_i_i; //@line 5932 "xmlparse.c"
        var $194=($192) > ($193); //@line 5932 "xmlparse.c"
        var $195=$table_addr_i2_i; //@line 5933 "xmlparse.c"
        var $196=$195+16; //@line 5933 "xmlparse.c"
        var $197=HEAP[$196]; //@line 5933 "xmlparse.c"
        var $198=$197+8; //@line 5933 "xmlparse.c"
        var $199=HEAP[$198]; //@line 5933 "xmlparse.c"
        var $200=$table_addr_i2_i; //@line 5933 "xmlparse.c"
        var $201=$200; //@line 5933 "xmlparse.c"
        var $202=HEAP[$201]; //@line 5933 "xmlparse.c"
        if ($194) { __lastLabel__ = 27; __label__ = 28; break; } else { __lastLabel__ = 27; __label__ = 29; break; } //@line 5932 "xmlparse.c"
      case 28: // $bb_i3_i
        var $203=__lastLabel__ == 28 ? $223 : ($202);
        var $204=__lastLabel__ == 28 ? $220 : ($199);
        var $205=$i_i_i; //@line 5933 "xmlparse.c"
        var $206=$203+4*$205; //@line 5933 "xmlparse.c"
        var $207=HEAP[$206]; //@line 5933 "xmlparse.c"
        var $208=$207; //@line 5933 "xmlparse.c"
        FUNCTION_TABLE[$204]($208); //@line 5933 "xmlparse.c"
        var $209=$i_i_i; //@line 5932 "xmlparse.c"
        var $210=($209) + 1; //@line 5932 "xmlparse.c"
        $i_i_i=$210; //@line 5932 "xmlparse.c"
        var $211=$table_addr_i2_i; //@line 5932 "xmlparse.c"
        var $212=$211+8; //@line 5932 "xmlparse.c"
        var $213=HEAP[$212]; //@line 5932 "xmlparse.c"
        var $214=$i_i_i; //@line 5932 "xmlparse.c"
        var $215=($213) > ($214); //@line 5932 "xmlparse.c"
        var $216=$table_addr_i2_i; //@line 5933 "xmlparse.c"
        var $217=$216+16; //@line 5933 "xmlparse.c"
        var $218=HEAP[$217]; //@line 5933 "xmlparse.c"
        var $219=$218+8; //@line 5933 "xmlparse.c"
        var $220=HEAP[$219]; //@line 5933 "xmlparse.c"
        var $221=$table_addr_i2_i; //@line 5933 "xmlparse.c"
        var $222=$221; //@line 5933 "xmlparse.c"
        var $223=HEAP[$222]; //@line 5933 "xmlparse.c"
        if ($215) { __lastLabel__ = 28; __label__ = 28; break; } else { __lastLabel__ = 28; __label__ = 29; break; } //@line 5932 "xmlparse.c"
      case 29: // $hashTableDestroy_exit_i
        var $_lcssa1_i_i=__lastLabel__ == 27 ? $202 : ($223);
        var $_lcssa_i_i=__lastLabel__ == 27 ? $199 : ($220);
        var $224=$_lcssa1_i_i; //@line 5934 "xmlparse.c"
        FUNCTION_TABLE[$_lcssa_i_i]($224); //@line 5934 "xmlparse.c"
        var $225=$p_addr_i; //@line 5607 "xmlparse.c"
        var $226=$225+20; //@line 5607 "xmlparse.c"
        $table_addr_i5_i=$226;
        $i_i6_i=0; //@line 5932 "xmlparse.c"
        var $227=$table_addr_i5_i; //@line 5932 "xmlparse.c"
        var $228=$227+8; //@line 5932 "xmlparse.c"
        var $229=HEAP[$228]; //@line 5932 "xmlparse.c"
        var $230=$i_i6_i; //@line 5932 "xmlparse.c"
        var $231=($229) > ($230); //@line 5932 "xmlparse.c"
        var $232=$table_addr_i5_i; //@line 5933 "xmlparse.c"
        var $233=$232+16; //@line 5933 "xmlparse.c"
        var $234=HEAP[$233]; //@line 5933 "xmlparse.c"
        var $235=$234+8; //@line 5933 "xmlparse.c"
        var $236=HEAP[$235]; //@line 5933 "xmlparse.c"
        var $237=$table_addr_i5_i; //@line 5933 "xmlparse.c"
        var $238=$237; //@line 5933 "xmlparse.c"
        var $239=HEAP[$238]; //@line 5933 "xmlparse.c"
        if ($231) { __lastLabel__ = 29; __label__ = 30; break; } else { __lastLabel__ = 29; __label__ = 31; break; } //@line 5932 "xmlparse.c"
      case 30: // $bb_i7_i
        var $240=__lastLabel__ == 30 ? $260 : ($239);
        var $241=__lastLabel__ == 30 ? $257 : ($236);
        var $242=$i_i6_i; //@line 5933 "xmlparse.c"
        var $243=$240+4*$242; //@line 5933 "xmlparse.c"
        var $244=HEAP[$243]; //@line 5933 "xmlparse.c"
        var $245=$244; //@line 5933 "xmlparse.c"
        FUNCTION_TABLE[$241]($245); //@line 5933 "xmlparse.c"
        var $246=$i_i6_i; //@line 5932 "xmlparse.c"
        var $247=($246) + 1; //@line 5932 "xmlparse.c"
        $i_i6_i=$247; //@line 5932 "xmlparse.c"
        var $248=$table_addr_i5_i; //@line 5932 "xmlparse.c"
        var $249=$248+8; //@line 5932 "xmlparse.c"
        var $250=HEAP[$249]; //@line 5932 "xmlparse.c"
        var $251=$i_i6_i; //@line 5932 "xmlparse.c"
        var $252=($250) > ($251); //@line 5932 "xmlparse.c"
        var $253=$table_addr_i5_i; //@line 5933 "xmlparse.c"
        var $254=$253+16; //@line 5933 "xmlparse.c"
        var $255=HEAP[$254]; //@line 5933 "xmlparse.c"
        var $256=$255+8; //@line 5933 "xmlparse.c"
        var $257=HEAP[$256]; //@line 5933 "xmlparse.c"
        var $258=$table_addr_i5_i; //@line 5933 "xmlparse.c"
        var $259=$258; //@line 5933 "xmlparse.c"
        var $260=HEAP[$259]; //@line 5933 "xmlparse.c"
        if ($252) { __lastLabel__ = 30; __label__ = 30; break; } else { __lastLabel__ = 30; __label__ = 31; break; } //@line 5932 "xmlparse.c"
      case 31: // $hashTableDestroy_exit11_i
        var $_lcssa1_i8_i=__lastLabel__ == 29 ? $239 : ($260);
        var $_lcssa_i9_i=__lastLabel__ == 29 ? $236 : ($257);
        var $261=$_lcssa1_i8_i; //@line 5934 "xmlparse.c"
        FUNCTION_TABLE[$_lcssa_i9_i]($261); //@line 5934 "xmlparse.c"
        var $262=$p_addr_i; //@line 5608 "xmlparse.c"
        var $263=$262+40; //@line 5608 "xmlparse.c"
        $table_addr_i12_i=$263;
        $i_i13_i=0; //@line 5932 "xmlparse.c"
        var $264=$table_addr_i12_i; //@line 5932 "xmlparse.c"
        var $265=$264+8; //@line 5932 "xmlparse.c"
        var $266=HEAP[$265]; //@line 5932 "xmlparse.c"
        var $267=$i_i13_i; //@line 5932 "xmlparse.c"
        var $268=($266) > ($267); //@line 5932 "xmlparse.c"
        var $269=$table_addr_i12_i; //@line 5933 "xmlparse.c"
        var $270=$269+16; //@line 5933 "xmlparse.c"
        var $271=HEAP[$270]; //@line 5933 "xmlparse.c"
        var $272=$271+8; //@line 5933 "xmlparse.c"
        var $273=HEAP[$272]; //@line 5933 "xmlparse.c"
        var $274=$table_addr_i12_i; //@line 5933 "xmlparse.c"
        var $275=$274; //@line 5933 "xmlparse.c"
        var $276=HEAP[$275]; //@line 5933 "xmlparse.c"
        if ($268) { __lastLabel__ = 31; __label__ = 32; break; } else { __lastLabel__ = 31; __label__ = 33; break; } //@line 5932 "xmlparse.c"
      case 32: // $bb_i14_i
        var $277=__lastLabel__ == 32 ? $297 : ($276);
        var $278=__lastLabel__ == 32 ? $294 : ($273);
        var $279=$i_i13_i; //@line 5933 "xmlparse.c"
        var $280=$277+4*$279; //@line 5933 "xmlparse.c"
        var $281=HEAP[$280]; //@line 5933 "xmlparse.c"
        var $282=$281; //@line 5933 "xmlparse.c"
        FUNCTION_TABLE[$278]($282); //@line 5933 "xmlparse.c"
        var $283=$i_i13_i; //@line 5932 "xmlparse.c"
        var $284=($283) + 1; //@line 5932 "xmlparse.c"
        $i_i13_i=$284; //@line 5932 "xmlparse.c"
        var $285=$table_addr_i12_i; //@line 5932 "xmlparse.c"
        var $286=$285+8; //@line 5932 "xmlparse.c"
        var $287=HEAP[$286]; //@line 5932 "xmlparse.c"
        var $288=$i_i13_i; //@line 5932 "xmlparse.c"
        var $289=($287) > ($288); //@line 5932 "xmlparse.c"
        var $290=$table_addr_i12_i; //@line 5933 "xmlparse.c"
        var $291=$290+16; //@line 5933 "xmlparse.c"
        var $292=HEAP[$291]; //@line 5933 "xmlparse.c"
        var $293=$292+8; //@line 5933 "xmlparse.c"
        var $294=HEAP[$293]; //@line 5933 "xmlparse.c"
        var $295=$table_addr_i12_i; //@line 5933 "xmlparse.c"
        var $296=$295; //@line 5933 "xmlparse.c"
        var $297=HEAP[$296]; //@line 5933 "xmlparse.c"
        if ($289) { __lastLabel__ = 32; __label__ = 32; break; } else { __lastLabel__ = 32; __label__ = 33; break; } //@line 5932 "xmlparse.c"
      case 33: // $hashTableDestroy_exit18_i
        var $_lcssa1_i15_i=__lastLabel__ == 31 ? $276 : ($297);
        var $_lcssa_i16_i=__lastLabel__ == 31 ? $273 : ($294);
        var $298=$_lcssa1_i15_i; //@line 5934 "xmlparse.c"
        FUNCTION_TABLE[$_lcssa_i16_i]($298); //@line 5934 "xmlparse.c"
        var $299=$p_addr_i; //@line 5609 "xmlparse.c"
        var $300=$299+60; //@line 5609 "xmlparse.c"
        $table_addr_i19_i=$300;
        $i_i20_i=0; //@line 5932 "xmlparse.c"
        var $301=$table_addr_i19_i; //@line 5932 "xmlparse.c"
        var $302=$301+8; //@line 5932 "xmlparse.c"
        var $303=HEAP[$302]; //@line 5932 "xmlparse.c"
        var $304=$i_i20_i; //@line 5932 "xmlparse.c"
        var $305=($303) > ($304); //@line 5932 "xmlparse.c"
        var $306=$table_addr_i19_i; //@line 5933 "xmlparse.c"
        var $307=$306+16; //@line 5933 "xmlparse.c"
        var $308=HEAP[$307]; //@line 5933 "xmlparse.c"
        var $309=$308+8; //@line 5933 "xmlparse.c"
        var $310=HEAP[$309]; //@line 5933 "xmlparse.c"
        var $311=$table_addr_i19_i; //@line 5933 "xmlparse.c"
        var $312=$311; //@line 5933 "xmlparse.c"
        var $313=HEAP[$312]; //@line 5933 "xmlparse.c"
        if ($305) { __lastLabel__ = 33; __label__ = 34; break; } else { __lastLabel__ = 33; __label__ = 35; break; } //@line 5932 "xmlparse.c"
      case 34: // $bb_i21_i
        var $314=__lastLabel__ == 34 ? $334 : ($313);
        var $315=__lastLabel__ == 34 ? $331 : ($310);
        var $316=$i_i20_i; //@line 5933 "xmlparse.c"
        var $317=$314+4*$316; //@line 5933 "xmlparse.c"
        var $318=HEAP[$317]; //@line 5933 "xmlparse.c"
        var $319=$318; //@line 5933 "xmlparse.c"
        FUNCTION_TABLE[$315]($319); //@line 5933 "xmlparse.c"
        var $320=$i_i20_i; //@line 5932 "xmlparse.c"
        var $321=($320) + 1; //@line 5932 "xmlparse.c"
        $i_i20_i=$321; //@line 5932 "xmlparse.c"
        var $322=$table_addr_i19_i; //@line 5932 "xmlparse.c"
        var $323=$322+8; //@line 5932 "xmlparse.c"
        var $324=HEAP[$323]; //@line 5932 "xmlparse.c"
        var $325=$i_i20_i; //@line 5932 "xmlparse.c"
        var $326=($324) > ($325); //@line 5932 "xmlparse.c"
        var $327=$table_addr_i19_i; //@line 5933 "xmlparse.c"
        var $328=$327+16; //@line 5933 "xmlparse.c"
        var $329=HEAP[$328]; //@line 5933 "xmlparse.c"
        var $330=$329+8; //@line 5933 "xmlparse.c"
        var $331=HEAP[$330]; //@line 5933 "xmlparse.c"
        var $332=$table_addr_i19_i; //@line 5933 "xmlparse.c"
        var $333=$332; //@line 5933 "xmlparse.c"
        var $334=HEAP[$333]; //@line 5933 "xmlparse.c"
        if ($326) { __lastLabel__ = 34; __label__ = 34; break; } else { __lastLabel__ = 34; __label__ = 35; break; } //@line 5932 "xmlparse.c"
      case 35: // $hashTableDestroy_exit25_i
        var $_lcssa1_i22_i=__lastLabel__ == 33 ? $313 : ($334);
        var $_lcssa_i23_i=__lastLabel__ == 33 ? $310 : ($331);
        var $335=$_lcssa1_i22_i; //@line 5934 "xmlparse.c"
        FUNCTION_TABLE[$_lcssa_i23_i]($335); //@line 5934 "xmlparse.c"
        var $336=$p_addr_i; //@line 5610 "xmlparse.c"
        var $337=$336+80; //@line 5610 "xmlparse.c"
        _poolDestroy($337); //@line 5610 "xmlparse.c"
        var $338=$p_addr_i; //@line 5611 "xmlparse.c"
        var $339=$338+104; //@line 5611 "xmlparse.c"
        _poolDestroy($339); //@line 5611 "xmlparse.c"
        var $340=$isDocEntity_addr_i; //@line 5612 "xmlparse.c"
        var $341=($340)!=0; //@line 5612 "xmlparse.c"
        if ($341) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 5612 "xmlparse.c"
      case 36: // $bb5_i
        var $342=$ms_addr_i; //@line 5613 "xmlparse.c"
        var $343=$342+8; //@line 5613 "xmlparse.c"
        var $344=HEAP[$343]; //@line 5613 "xmlparse.c"
        var $345=$p_addr_i; //@line 5613 "xmlparse.c"
        var $346=$345+164; //@line 5613 "xmlparse.c"
        var $347=HEAP[$346]; //@line 5613 "xmlparse.c"
        var $348=$347; //@line 5613 "xmlparse.c"
        FUNCTION_TABLE[$344]($348); //@line 5613 "xmlparse.c"
        var $349=$ms_addr_i; //@line 5614 "xmlparse.c"
        var $350=$349+8; //@line 5614 "xmlparse.c"
        var $351=HEAP[$350]; //@line 5614 "xmlparse.c"
        var $352=$p_addr_i; //@line 5614 "xmlparse.c"
        var $353=$352+144; //@line 5614 "xmlparse.c"
        var $354=HEAP[$353]; //@line 5614 "xmlparse.c"
        var $355=$354; //@line 5614 "xmlparse.c"
        FUNCTION_TABLE[$351]($355); //@line 5614 "xmlparse.c"
        __label__ = 37; break; //@line 5614 "xmlparse.c"
      case 37: // $dtdDestroy_exit
        var $356=$ms_addr_i; //@line 5616 "xmlparse.c"
        var $357=$356+8; //@line 5616 "xmlparse.c"
        var $358=HEAP[$357]; //@line 5616 "xmlparse.c"
        var $359=$p_addr_i; //@line 5616 "xmlparse.c"
        var $360=$359; //@line 5616 "xmlparse.c"
        FUNCTION_TABLE[$358]($360); //@line 5616 "xmlparse.c"
        __label__ = 38; break; //@line 1125 "xmlparse.c"
      case 38: // $bb12
        var $361=$parser_addr; //@line 1126 "xmlparse.c"
        var $362=$361+12; //@line 1126 "xmlparse.c"
        var $363=$362+8; //@line 1126 "xmlparse.c"
        var $364=HEAP[$363]; //@line 1126 "xmlparse.c"
        var $365=$parser_addr; //@line 1126 "xmlparse.c"
        var $366=$365+376; //@line 1126 "xmlparse.c"
        var $367=HEAP[$366]; //@line 1126 "xmlparse.c"
        var $368=$367; //@line 1126 "xmlparse.c"
        FUNCTION_TABLE[$364]($368); //@line 1126 "xmlparse.c"
        var $369=$parser_addr; //@line 1127 "xmlparse.c"
        var $370=$369+12; //@line 1127 "xmlparse.c"
        var $371=$370+8; //@line 1127 "xmlparse.c"
        var $372=HEAP[$371]; //@line 1127 "xmlparse.c"
        var $373=$parser_addr; //@line 1127 "xmlparse.c"
        var $374=$373+448; //@line 1127 "xmlparse.c"
        var $375=HEAP[$374]; //@line 1127 "xmlparse.c"
        FUNCTION_TABLE[$372]($375); //@line 1127 "xmlparse.c"
        var $376=$parser_addr; //@line 1128 "xmlparse.c"
        var $377=$376+12; //@line 1128 "xmlparse.c"
        var $378=$377+8; //@line 1128 "xmlparse.c"
        var $379=HEAP[$378]; //@line 1128 "xmlparse.c"
        var $380=$parser_addr; //@line 1128 "xmlparse.c"
        var $381=$380+8; //@line 1128 "xmlparse.c"
        var $382=HEAP[$381]; //@line 1128 "xmlparse.c"
        FUNCTION_TABLE[$379]($382); //@line 1128 "xmlparse.c"
        var $383=$parser_addr; //@line 1129 "xmlparse.c"
        var $384=$383+12; //@line 1129 "xmlparse.c"
        var $385=$384+8; //@line 1129 "xmlparse.c"
        var $386=HEAP[$385]; //@line 1129 "xmlparse.c"
        var $387=$parser_addr; //@line 1129 "xmlparse.c"
        var $388=$387+44; //@line 1129 "xmlparse.c"
        var $389=HEAP[$388]; //@line 1129 "xmlparse.c"
        FUNCTION_TABLE[$386]($389); //@line 1129 "xmlparse.c"
        var $390=$parser_addr; //@line 1130 "xmlparse.c"
        var $391=$390+12; //@line 1130 "xmlparse.c"
        var $392=$391+8; //@line 1130 "xmlparse.c"
        var $393=HEAP[$392]; //@line 1130 "xmlparse.c"
        var $394=$parser_addr; //@line 1130 "xmlparse.c"
        var $395=$394+380; //@line 1130 "xmlparse.c"
        var $396=HEAP[$395]; //@line 1130 "xmlparse.c"
        var $397=$396; //@line 1130 "xmlparse.c"
        FUNCTION_TABLE[$393]($397); //@line 1130 "xmlparse.c"
        var $398=$parser_addr; //@line 1131 "xmlparse.c"
        var $399=$398+12; //@line 1131 "xmlparse.c"
        var $400=$399+8; //@line 1131 "xmlparse.c"
        var $401=HEAP[$400]; //@line 1131 "xmlparse.c"
        var $402=$parser_addr; //@line 1131 "xmlparse.c"
        var $403=$402+236; //@line 1131 "xmlparse.c"
        var $404=HEAP[$403]; //@line 1131 "xmlparse.c"
        FUNCTION_TABLE[$401]($404); //@line 1131 "xmlparse.c"
        var $405=$parser_addr; //@line 1132 "xmlparse.c"
        var $406=$405+248; //@line 1132 "xmlparse.c"
        var $407=HEAP[$406]; //@line 1132 "xmlparse.c"
        var $408=($407)!=0; //@line 1132 "xmlparse.c"
        if ($408) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 1132 "xmlparse.c"
      case 39: // $bb13
        var $409=$parser_addr; //@line 1133 "xmlparse.c"
        var $410=$409+248; //@line 1133 "xmlparse.c"
        var $411=HEAP[$410]; //@line 1133 "xmlparse.c"
        var $412=$parser_addr; //@line 1133 "xmlparse.c"
        var $413=$412+240; //@line 1133 "xmlparse.c"
        var $414=HEAP[$413]; //@line 1133 "xmlparse.c"
        FUNCTION_TABLE[$411]($414); //@line 1133 "xmlparse.c"
        __label__ = 40; break; //@line 1133 "xmlparse.c"
      case 40: // $bb14
        var $415=$parser_addr; //@line 1134 "xmlparse.c"
        var $416=$415+12; //@line 1134 "xmlparse.c"
        var $417=$416+8; //@line 1134 "xmlparse.c"
        var $418=HEAP[$417]; //@line 1134 "xmlparse.c"
        var $419=$parser_addr; //@line 1134 "xmlparse.c"
        var $420=$419; //@line 1134 "xmlparse.c"
        FUNCTION_TABLE[$418]($420); //@line 1134 "xmlparse.c"
        __label__ = 41; break; //@line 1134 "xmlparse.c"
      case 41: // $return
        STACKTOP = __stackBase__;
        return; //@line 1081 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_UseParserAsHandlerArg($parser) {
    ;
    var __label__;
  
    var $parser_addr;
    $parser_addr=$parser;
    var $0=$parser_addr; //@line 1140 "xmlparse.c"
    var $1=$0+4; //@line 1140 "xmlparse.c"
    var $2=$parser_addr; //@line 1140 "xmlparse.c"
    var $3=$2; //@line 1140 "xmlparse.c"
    HEAP[$1]=$3; //@line 1140 "xmlparse.c"
    ;
    return; //@line 1141 "xmlparse.c"
  }
  

  function _PyExpat_XML_UseForeignDTD($parser, $useDTD) {
    ;
    var __label__;
  
    var $parser_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $0=25; //@line 1153 "xmlparse.c"
    var $1=$0; //@line 1153 "xmlparse.c"
    $retval=$1; //@line 1153 "xmlparse.c"
    var $retval1=$retval; //@line 1153 "xmlparse.c"
    ;
    return $retval1; //@line 1153 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetReturnNSTriplet($parser, $do_nst) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $do_nst_addr;
        $parser_addr=$parser;
        $do_nst_addr=$do_nst;
        var $0=$parser_addr; //@line 1161 "xmlparse.c"
        var $1=$0+464; //@line 1161 "xmlparse.c"
        var $2=$1; //@line 1161 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1161 "xmlparse.c"
        var $4=($3)==1; //@line 1161 "xmlparse.c"
        if ($4) { __label__ = 3; break; } else { __label__ = 1; break; } //@line 1161 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 1161 "xmlparse.c"
        var $6=$5+464; //@line 1161 "xmlparse.c"
        var $7=$6; //@line 1161 "xmlparse.c"
        var $8=HEAP[$7]; //@line 1161 "xmlparse.c"
        var $9=($8)==3; //@line 1161 "xmlparse.c"
        if ($9) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 1161 "xmlparse.c"
      case 2: // $bb2
        var $10=$do_nst_addr; //@line 1163 "xmlparse.c"
        var $11=($10)!=0; //@line 1163 "xmlparse.c"
        var $12=($11); //@line 1163 "xmlparse.c"
        var $13=$parser_addr; //@line 1163 "xmlparse.c"
        var $14=$13+233; //@line 1163 "xmlparse.c"
        HEAP[$14]=$12; //@line 1163 "xmlparse.c"
        __label__ = 3; break; //@line 1163 "xmlparse.c"
      case 3: // $return
        ;
        return; //@line 1162 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_SetUserData($parser, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $p_addr;
        $parser_addr=$parser;
        $p_addr=$p;
        var $0=$parser_addr; //@line 1169 "xmlparse.c"
        var $1=$0+4; //@line 1169 "xmlparse.c"
        var $2=HEAP[$1]; //@line 1169 "xmlparse.c"
        var $3=$parser_addr; //@line 1169 "xmlparse.c"
        var $4=$3; //@line 1169 "xmlparse.c"
        var $5=HEAP[$4]; //@line 1169 "xmlparse.c"
        var $6=($2)==($5); //@line 1169 "xmlparse.c"
        var $7=$parser_addr; //@line 1170 "xmlparse.c"
        var $8=$7; //@line 1170 "xmlparse.c"
        var $9=$p_addr; //@line 1170 "xmlparse.c"
        HEAP[$8]=$9; //@line 1170 "xmlparse.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1169 "xmlparse.c"
      case 1: // $bb
        var $10=$parser_addr; //@line 1170 "xmlparse.c"
        var $11=$10; //@line 1170 "xmlparse.c"
        var $12=HEAP[$11]; //@line 1170 "xmlparse.c"
        var $13=$parser_addr; //@line 1170 "xmlparse.c"
        var $14=$13+4; //@line 1170 "xmlparse.c"
        HEAP[$14]=$12; //@line 1170 "xmlparse.c"
        __label__ = 2; break; //@line 1170 "xmlparse.c"
      case 2: // $return
        ;
        return; //@line 1173 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_SetBase($parser, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $p_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        $p_addr=$p;
        var $1=$p_addr; //@line 1178 "xmlparse.c"
        var $2=($1)!=0; //@line 1178 "xmlparse.c"
        var $3=$parser_addr; //@line 1179 "xmlparse.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 1178 "xmlparse.c"
      case 1: // $bb
        var $4=$3+340; //@line 1179 "xmlparse.c"
        var $5=HEAP[$4]; //@line 1179 "xmlparse.c"
        var $6=$5+80; //@line 1179 "xmlparse.c"
        var $7=$p_addr; //@line 1179 "xmlparse.c"
        var $8=_poolCopyString($6, $7); //@line 1179 "xmlparse.c"
        $p_addr=$8; //@line 1179 "xmlparse.c"
        var $9=$p_addr; //@line 1180 "xmlparse.c"
        var $10=($9)==0; //@line 1180 "xmlparse.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1180 "xmlparse.c"
      case 2: // $bb1
        $0=0; //@line 1181 "xmlparse.c"
        __label__ = 6; break; //@line 1181 "xmlparse.c"
      case 3: // $bb2
        var $11=$parser_addr; //@line 1182 "xmlparse.c"
        var $12=$11+344; //@line 1182 "xmlparse.c"
        var $13=$p_addr; //@line 1182 "xmlparse.c"
        HEAP[$12]=$13; //@line 1182 "xmlparse.c"
        __label__ = 5; break; //@line 1182 "xmlparse.c"
      case 4: // $bb3
        var $14=$3+344; //@line 1185 "xmlparse.c"
        HEAP[$14]=0; //@line 1185 "xmlparse.c"
        __label__ = 5; break; //@line 1185 "xmlparse.c"
      case 5: // $bb4
        $0=1; //@line 1186 "xmlparse.c"
        __label__ = 6; break; //@line 1186 "xmlparse.c"
      case 6: // $bb5
        var $15=$0; //@line 1181 "xmlparse.c"
        $retval=$15; //@line 1181 "xmlparse.c"
        var $retval6=$retval; //@line 1181 "xmlparse.c"
        ;
        return $retval6; //@line 1181 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetBase($parser) {
    ;
    var __label__;
  
    var $parser_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    var $1=$parser_addr; //@line 1192 "xmlparse.c"
    var $2=$1+344; //@line 1192 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1192 "xmlparse.c"
    $0=$3; //@line 1192 "xmlparse.c"
    var $4=$0; //@line 1192 "xmlparse.c"
    $retval=$4; //@line 1192 "xmlparse.c"
    var $retval1=$retval; //@line 1192 "xmlparse.c"
    ;
    return $retval1; //@line 1192 "xmlparse.c"
  }
  

  function _PyExpat_XML_GetSpecifiedAttributeCount($parser) {
    ;
    var __label__;
  
    var $parser_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    var $1=$parser_addr; //@line 1198 "xmlparse.c"
    var $2=$1+368; //@line 1198 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1198 "xmlparse.c"
    $0=$3; //@line 1198 "xmlparse.c"
    var $4=$0; //@line 1198 "xmlparse.c"
    $retval=$4; //@line 1198 "xmlparse.c"
    var $retval1=$retval; //@line 1198 "xmlparse.c"
    ;
    return $retval1; //@line 1198 "xmlparse.c"
  }
  

  function _PyExpat_XML_GetIdAttributeIndex($parser) {
    ;
    var __label__;
  
    var $parser_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    var $1=$parser_addr; //@line 1204 "xmlparse.c"
    var $2=$1+372; //@line 1204 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1204 "xmlparse.c"
    $0=$3; //@line 1204 "xmlparse.c"
    var $4=$0; //@line 1204 "xmlparse.c"
    $retval=$4; //@line 1204 "xmlparse.c"
    var $retval1=$retval; //@line 1204 "xmlparse.c"
    ;
    return $retval1; //@line 1204 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetElementHandler($parser, $start, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    var $end_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1212 "xmlparse.c"
    var $1=$0+52; //@line 1212 "xmlparse.c"
    var $2=$start_addr; //@line 1212 "xmlparse.c"
    HEAP[$1]=$2; //@line 1212 "xmlparse.c"
    var $3=$parser_addr; //@line 1213 "xmlparse.c"
    var $4=$3+56; //@line 1213 "xmlparse.c"
    var $5=$end_addr; //@line 1213 "xmlparse.c"
    HEAP[$4]=$5; //@line 1213 "xmlparse.c"
    ;
    return; //@line 1214 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetStartElementHandler($parser, $start) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    var $0=$parser_addr; //@line 1219 "xmlparse.c"
    var $1=$0+52; //@line 1219 "xmlparse.c"
    var $2=$start_addr; //@line 1219 "xmlparse.c"
    HEAP[$1]=$2; //@line 1219 "xmlparse.c"
    ;
    return; //@line 1220 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetEndElementHandler($parser, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $end_addr;
    $parser_addr=$parser;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1225 "xmlparse.c"
    var $1=$0+56; //@line 1225 "xmlparse.c"
    var $2=$end_addr; //@line 1225 "xmlparse.c"
    HEAP[$1]=$2; //@line 1225 "xmlparse.c"
    ;
    return; //@line 1226 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetCharacterDataHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1232 "xmlparse.c"
    var $1=$0+60; //@line 1232 "xmlparse.c"
    var $2=$handler_addr; //@line 1232 "xmlparse.c"
    HEAP[$1]=$2; //@line 1232 "xmlparse.c"
    ;
    return; //@line 1233 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetProcessingInstructionHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1239 "xmlparse.c"
    var $1=$0+64; //@line 1239 "xmlparse.c"
    var $2=$handler_addr; //@line 1239 "xmlparse.c"
    HEAP[$1]=$2; //@line 1239 "xmlparse.c"
    ;
    return; //@line 1240 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetCommentHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1246 "xmlparse.c"
    var $1=$0+68; //@line 1246 "xmlparse.c"
    var $2=$handler_addr; //@line 1246 "xmlparse.c"
    HEAP[$1]=$2; //@line 1246 "xmlparse.c"
    ;
    return; //@line 1247 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetCdataSectionHandler($parser, $start, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    var $end_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1254 "xmlparse.c"
    var $1=$0+72; //@line 1254 "xmlparse.c"
    var $2=$start_addr; //@line 1254 "xmlparse.c"
    HEAP[$1]=$2; //@line 1254 "xmlparse.c"
    var $3=$parser_addr; //@line 1255 "xmlparse.c"
    var $4=$3+76; //@line 1255 "xmlparse.c"
    var $5=$end_addr; //@line 1255 "xmlparse.c"
    HEAP[$4]=$5; //@line 1255 "xmlparse.c"
    ;
    return; //@line 1256 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetStartCdataSectionHandler($parser, $start) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    var $0=$parser_addr; //@line 1261 "xmlparse.c"
    var $1=$0+72; //@line 1261 "xmlparse.c"
    var $2=$start_addr; //@line 1261 "xmlparse.c"
    HEAP[$1]=$2; //@line 1261 "xmlparse.c"
    ;
    return; //@line 1262 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetEndCdataSectionHandler($parser, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $end_addr;
    $parser_addr=$parser;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1267 "xmlparse.c"
    var $1=$0+76; //@line 1267 "xmlparse.c"
    var $2=$end_addr; //@line 1267 "xmlparse.c"
    HEAP[$1]=$2; //@line 1267 "xmlparse.c"
    ;
    return; //@line 1268 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetDefaultHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1274 "xmlparse.c"
    var $1=$0+80; //@line 1274 "xmlparse.c"
    var $2=$handler_addr; //@line 1274 "xmlparse.c"
    HEAP[$1]=$2; //@line 1274 "xmlparse.c"
    var $3=$parser_addr; //@line 1275 "xmlparse.c"
    var $4=$3+292; //@line 1275 "xmlparse.c"
    HEAP[$4]=0; //@line 1275 "xmlparse.c"
    ;
    return; //@line 1276 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetDefaultHandlerExpand($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1282 "xmlparse.c"
    var $1=$0+80; //@line 1282 "xmlparse.c"
    var $2=$handler_addr; //@line 1282 "xmlparse.c"
    HEAP[$1]=$2; //@line 1282 "xmlparse.c"
    var $3=$parser_addr; //@line 1283 "xmlparse.c"
    var $4=$3+292; //@line 1283 "xmlparse.c"
    HEAP[$4]=1; //@line 1283 "xmlparse.c"
    ;
    return; //@line 1284 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetDoctypeDeclHandler($parser, $start, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    var $end_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1291 "xmlparse.c"
    var $1=$0+84; //@line 1291 "xmlparse.c"
    var $2=$start_addr; //@line 1291 "xmlparse.c"
    HEAP[$1]=$2; //@line 1291 "xmlparse.c"
    var $3=$parser_addr; //@line 1292 "xmlparse.c"
    var $4=$3+88; //@line 1292 "xmlparse.c"
    var $5=$end_addr; //@line 1292 "xmlparse.c"
    HEAP[$4]=$5; //@line 1292 "xmlparse.c"
    ;
    return; //@line 1293 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetStartDoctypeDeclHandler($parser, $start) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    var $0=$parser_addr; //@line 1298 "xmlparse.c"
    var $1=$0+84; //@line 1298 "xmlparse.c"
    var $2=$start_addr; //@line 1298 "xmlparse.c"
    HEAP[$1]=$2; //@line 1298 "xmlparse.c"
    ;
    return; //@line 1299 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetEndDoctypeDeclHandler($parser, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $end_addr;
    $parser_addr=$parser;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1304 "xmlparse.c"
    var $1=$0+88; //@line 1304 "xmlparse.c"
    var $2=$end_addr; //@line 1304 "xmlparse.c"
    HEAP[$1]=$2; //@line 1304 "xmlparse.c"
    ;
    return; //@line 1305 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetUnparsedEntityDeclHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1311 "xmlparse.c"
    var $1=$0+92; //@line 1311 "xmlparse.c"
    var $2=$handler_addr; //@line 1311 "xmlparse.c"
    HEAP[$1]=$2; //@line 1311 "xmlparse.c"
    ;
    return; //@line 1312 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetNotationDeclHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1318 "xmlparse.c"
    var $1=$0+96; //@line 1318 "xmlparse.c"
    var $2=$handler_addr; //@line 1318 "xmlparse.c"
    HEAP[$1]=$2; //@line 1318 "xmlparse.c"
    ;
    return; //@line 1319 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetNamespaceDeclHandler($parser, $start, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    var $end_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1326 "xmlparse.c"
    var $1=$0+100; //@line 1326 "xmlparse.c"
    var $2=$start_addr; //@line 1326 "xmlparse.c"
    HEAP[$1]=$2; //@line 1326 "xmlparse.c"
    var $3=$parser_addr; //@line 1327 "xmlparse.c"
    var $4=$3+104; //@line 1327 "xmlparse.c"
    var $5=$end_addr; //@line 1327 "xmlparse.c"
    HEAP[$4]=$5; //@line 1327 "xmlparse.c"
    ;
    return; //@line 1328 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetStartNamespaceDeclHandler($parser, $start) {
    ;
    var __label__;
  
    var $parser_addr;
    var $start_addr;
    $parser_addr=$parser;
    $start_addr=$start;
    var $0=$parser_addr; //@line 1333 "xmlparse.c"
    var $1=$0+100; //@line 1333 "xmlparse.c"
    var $2=$start_addr; //@line 1333 "xmlparse.c"
    HEAP[$1]=$2; //@line 1333 "xmlparse.c"
    ;
    return; //@line 1334 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetEndNamespaceDeclHandler($parser, $end) {
    ;
    var __label__;
  
    var $parser_addr;
    var $end_addr;
    $parser_addr=$parser;
    $end_addr=$end;
    var $0=$parser_addr; //@line 1339 "xmlparse.c"
    var $1=$0+104; //@line 1339 "xmlparse.c"
    var $2=$end_addr; //@line 1339 "xmlparse.c"
    HEAP[$1]=$2; //@line 1339 "xmlparse.c"
    ;
    return; //@line 1340 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetNotStandaloneHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1346 "xmlparse.c"
    var $1=$0+108; //@line 1346 "xmlparse.c"
    var $2=$handler_addr; //@line 1346 "xmlparse.c"
    HEAP[$1]=$2; //@line 1346 "xmlparse.c"
    ;
    return; //@line 1347 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetExternalEntityRefHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1353 "xmlparse.c"
    var $1=$0+112; //@line 1353 "xmlparse.c"
    var $2=$handler_addr; //@line 1353 "xmlparse.c"
    HEAP[$1]=$2; //@line 1353 "xmlparse.c"
    ;
    return; //@line 1354 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetExternalEntityRefHandlerArg($parser, $arg) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $arg_addr;
        $parser_addr=$parser;
        $arg_addr=$arg;
        var $0=$arg_addr; //@line 1359 "xmlparse.c"
        var $1=($0)!=0; //@line 1359 "xmlparse.c"
        if ($1) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1359 "xmlparse.c"
      case 1: // $bb
        var $2=$arg_addr; //@line 1360 "xmlparse.c"
        var $3=$2; //@line 1360 "xmlparse.c"
        var $4=$parser_addr; //@line 1360 "xmlparse.c"
        var $5=$4+116; //@line 1360 "xmlparse.c"
        HEAP[$5]=$3; //@line 1360 "xmlparse.c"
        __label__ = 3; break; //@line 1360 "xmlparse.c"
      case 2: // $bb1
        var $6=$parser_addr; //@line 1362 "xmlparse.c"
        var $7=$6+116; //@line 1362 "xmlparse.c"
        var $8=$parser_addr; //@line 1362 "xmlparse.c"
        HEAP[$7]=$8; //@line 1362 "xmlparse.c"
        __label__ = 3; break; //@line 1362 "xmlparse.c"
      case 3: // $return
        ;
        return; //@line 1363 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_SetSkippedEntityHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1369 "xmlparse.c"
    var $1=$0+120; //@line 1369 "xmlparse.c"
    var $2=$handler_addr; //@line 1369 "xmlparse.c"
    HEAP[$1]=$2; //@line 1369 "xmlparse.c"
    ;
    return; //@line 1370 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetUnknownEncodingHandler($parser, $handler, $data) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    var $data_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    $data_addr=$data;
    var $0=$parser_addr; //@line 1377 "xmlparse.c"
    var $1=$0+124; //@line 1377 "xmlparse.c"
    var $2=$handler_addr; //@line 1377 "xmlparse.c"
    HEAP[$1]=$2; //@line 1377 "xmlparse.c"
    var $3=$parser_addr; //@line 1378 "xmlparse.c"
    var $4=$3+244; //@line 1378 "xmlparse.c"
    var $5=$data_addr; //@line 1378 "xmlparse.c"
    HEAP[$4]=$5; //@line 1378 "xmlparse.c"
    ;
    return; //@line 1379 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetElementDeclHandler($parser, $eldecl) {
    ;
    var __label__;
  
    var $parser_addr;
    var $eldecl_addr;
    $parser_addr=$parser;
    $eldecl_addr=$eldecl;
    var $0=$parser_addr; //@line 1385 "xmlparse.c"
    var $1=$0+128; //@line 1385 "xmlparse.c"
    var $2=$eldecl_addr; //@line 1385 "xmlparse.c"
    HEAP[$1]=$2; //@line 1385 "xmlparse.c"
    ;
    return; //@line 1386 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetAttlistDeclHandler($parser, $attdecl) {
    ;
    var __label__;
  
    var $parser_addr;
    var $attdecl_addr;
    $parser_addr=$parser;
    $attdecl_addr=$attdecl;
    var $0=$parser_addr; //@line 1392 "xmlparse.c"
    var $1=$0+132; //@line 1392 "xmlparse.c"
    var $2=$attdecl_addr; //@line 1392 "xmlparse.c"
    HEAP[$1]=$2; //@line 1392 "xmlparse.c"
    ;
    return; //@line 1393 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetEntityDeclHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1399 "xmlparse.c"
    var $1=$0+136; //@line 1399 "xmlparse.c"
    var $2=$handler_addr; //@line 1399 "xmlparse.c"
    HEAP[$1]=$2; //@line 1399 "xmlparse.c"
    ;
    return; //@line 1400 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetXmlDeclHandler($parser, $handler) {
    ;
    var __label__;
  
    var $parser_addr;
    var $handler_addr;
    $parser_addr=$parser;
    $handler_addr=$handler;
    var $0=$parser_addr; //@line 1405 "xmlparse.c"
    var $1=$0+140; //@line 1405 "xmlparse.c"
    var $2=$handler_addr; //@line 1405 "xmlparse.c"
    HEAP[$1]=$2; //@line 1405 "xmlparse.c"
    ;
    return; //@line 1406 "xmlparse.c"
  }
  

  function _PyExpat_XML_SetParamEntityParsing($parser, $peParsing) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $peParsing_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        $peParsing_addr=$peParsing;
        var $1=$parser_addr; //@line 1413 "xmlparse.c"
        var $2=$1+464; //@line 1413 "xmlparse.c"
        var $3=$2; //@line 1413 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1413 "xmlparse.c"
        var $5=($4)==1; //@line 1413 "xmlparse.c"
        if ($5) { __label__ = 2; break; } else { __label__ = 1; break; } //@line 1413 "xmlparse.c"
      case 1: // $bb
        var $6=$parser_addr; //@line 1413 "xmlparse.c"
        var $7=$6+464; //@line 1413 "xmlparse.c"
        var $8=$7; //@line 1413 "xmlparse.c"
        var $9=HEAP[$8]; //@line 1413 "xmlparse.c"
        var $10=($9)==3; //@line 1413 "xmlparse.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1413 "xmlparse.c"
      case 2: // $bb1
        $0=0; //@line 1414 "xmlparse.c"
        __label__ = 4; break; //@line 1414 "xmlparse.c"
      case 3: // $bb2
        var $11=$peParsing_addr; //@line 1419 "xmlparse.c"
        var $12=($11)==0; //@line 1419 "xmlparse.c"
        var $13=($12); //@line 1419 "xmlparse.c"
        $0=$13; //@line 1419 "xmlparse.c"
        __label__ = 4; break; //@line 1419 "xmlparse.c"
      case 4: // $bb3
        var $14=$0; //@line 1414 "xmlparse.c"
        $retval=$14; //@line 1414 "xmlparse.c"
        var $retval4=$retval; //@line 1414 "xmlparse.c"
        ;
        return $retval4; //@line 1414 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_Parse($parser, $s, $len, $isFinal) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $s_addr;
        var $len_addr;
        var $isFinal_addr;
        var $retval;
        var $iftmp_7;
        var $0;
        var $end=__stackBase__;
        var $nLeftOver;
        var $result;
        var $temp;
        var $buff;
        $parser_addr=$parser;
        $s_addr=$s;
        $len_addr=$len;
        $isFinal_addr=$isFinal;
        var $1=$parser_addr; //@line 1426 "xmlparse.c"
        var $2=$1+464; //@line 1426 "xmlparse.c"
        var $3=$2; //@line 1426 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1426 "xmlparse.c"
        if ($4 == 2) {
          __label__ = 2; break;
        }
        else if ($4 == 3) {
          __label__ = 1; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        var $5=$parser_addr; //@line 1428 "xmlparse.c"
        var $6=$5+268; //@line 1428 "xmlparse.c"
        HEAP[$6]=33; //@line 1428 "xmlparse.c"
        $0=0; //@line 1429 "xmlparse.c"
        __label__ = 35; break; //@line 1429 "xmlparse.c"
      case 2: // $bb1
        var $7=$parser_addr; //@line 1431 "xmlparse.c"
        var $8=$7+268; //@line 1431 "xmlparse.c"
        HEAP[$8]=36; //@line 1431 "xmlparse.c"
        $0=0; //@line 1432 "xmlparse.c"
        __label__ = 35; break; //@line 1432 "xmlparse.c"
      case 3: // $bb2
        var $9=$parser_addr; //@line 1434 "xmlparse.c"
        var $10=$9+464; //@line 1434 "xmlparse.c"
        var $11=$10; //@line 1434 "xmlparse.c"
        HEAP[$11]=1; //@line 1434 "xmlparse.c"
        var $12=$len_addr; //@line 1437 "xmlparse.c"
        var $13=($12)==0; //@line 1437 "xmlparse.c"
        if ($13) { __label__ = 4; break; } else { __label__ = 12; break; } //@line 1437 "xmlparse.c"
      case 4: // $bb3
        var $14=$isFinal_addr; //@line 1438 "xmlparse.c"
        var $15=((($14)) & 255); //@line 1438 "xmlparse.c"
        var $16=$parser_addr; //@line 1438 "xmlparse.c"
        var $17=$16+464; //@line 1438 "xmlparse.c"
        var $18=$17+4; //@line 1438 "xmlparse.c"
        HEAP[$18]=$15; //@line 1438 "xmlparse.c"
        var $19=$isFinal_addr; //@line 1439 "xmlparse.c"
        var $20=($19)==0; //@line 1439 "xmlparse.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1439 "xmlparse.c"
      case 5: // $bb4
        $0=1; //@line 1440 "xmlparse.c"
        __label__ = 35; break; //@line 1440 "xmlparse.c"
      case 6: // $bb5
        var $21=$parser_addr; //@line 1441 "xmlparse.c"
        var $22=$21+24; //@line 1441 "xmlparse.c"
        var $23=HEAP[$22]; //@line 1441 "xmlparse.c"
        var $24=$parser_addr; //@line 1441 "xmlparse.c"
        var $25=$24+280; //@line 1441 "xmlparse.c"
        HEAP[$25]=$23; //@line 1441 "xmlparse.c"
        var $26=$parser_addr; //@line 1442 "xmlparse.c"
        var $27=$26+28; //@line 1442 "xmlparse.c"
        var $28=HEAP[$27]; //@line 1442 "xmlparse.c"
        var $29=$parser_addr; //@line 1442 "xmlparse.c"
        var $30=$29+40; //@line 1442 "xmlparse.c"
        HEAP[$30]=$28; //@line 1442 "xmlparse.c"
        var $31=$parser_addr; //@line 1448 "xmlparse.c"
        var $32=$31+264; //@line 1448 "xmlparse.c"
        var $33=HEAP[$32]; //@line 1448 "xmlparse.c"
        var $34=$parser_addr; //@line 1448 "xmlparse.c"
        var $35=$34+24; //@line 1448 "xmlparse.c"
        var $36=$parser_addr; //@line 1448 "xmlparse.c"
        var $37=$36+40; //@line 1448 "xmlparse.c"
        var $38=HEAP[$37]; //@line 1448 "xmlparse.c"
        var $39=$parser_addr; //@line 1448 "xmlparse.c"
        var $40=$39+24; //@line 1448 "xmlparse.c"
        var $41=HEAP[$40]; //@line 1448 "xmlparse.c"
        var $42=$parser_addr; //@line 1448 "xmlparse.c"
        var $43=FUNCTION_TABLE[$33]($42, $41, $38, $35); //@line 1448 "xmlparse.c"
        var $44=$parser_addr; //@line 1448 "xmlparse.c"
        var $45=$44+268; //@line 1448 "xmlparse.c"
        HEAP[$45]=$43; //@line 1448 "xmlparse.c"
        var $46=$parser_addr; //@line 1450 "xmlparse.c"
        var $47=$46+268; //@line 1450 "xmlparse.c"
        var $48=HEAP[$47]; //@line 1450 "xmlparse.c"
        var $49=($48)==0; //@line 1450 "xmlparse.c"
        var $50=$parser_addr; //@line 1451 "xmlparse.c"
        if ($49) { __label__ = 7; break; } else { __label__ = 11; break; } //@line 1450 "xmlparse.c"
      case 7: // $bb6
        var $51=$50+464; //@line 1451 "xmlparse.c"
        var $52=$51; //@line 1451 "xmlparse.c"
        var $53=HEAP[$52]; //@line 1451 "xmlparse.c"
        if ($53 == 0) {
          __label__ = 9; break;
        }
        else if ($53 == 1) {
          __label__ = 9; break;
        }
        else if ($53 == 3) {
          __label__ = 8; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 8: // $bb7
        var $54=$parser_addr; //@line 1453 "xmlparse.c"
        var $55=$54+144; //@line 1453 "xmlparse.c"
        var $56=HEAP[$55]; //@line 1453 "xmlparse.c"
        var $57=$56+48; //@line 1453 "xmlparse.c"
        var $58=HEAP[$57]; //@line 1453 "xmlparse.c"
        var $59=$parser_addr; //@line 1453 "xmlparse.c"
        var $60=$59+392; //@line 1453 "xmlparse.c"
        var $61=$parser_addr; //@line 1453 "xmlparse.c"
        var $62=$61+24; //@line 1453 "xmlparse.c"
        var $63=HEAP[$62]; //@line 1453 "xmlparse.c"
        var $64=$parser_addr; //@line 1453 "xmlparse.c"
        var $65=$64+280; //@line 1453 "xmlparse.c"
        var $66=HEAP[$65]; //@line 1453 "xmlparse.c"
        var $67=$parser_addr; //@line 1453 "xmlparse.c"
        var $68=$67+144; //@line 1453 "xmlparse.c"
        var $69=HEAP[$68]; //@line 1453 "xmlparse.c"
        FUNCTION_TABLE[$58]($69, $66, $63, $60); //@line 1453 "xmlparse.c"
        var $70=$parser_addr; //@line 1454 "xmlparse.c"
        var $71=$70+24; //@line 1454 "xmlparse.c"
        var $72=HEAP[$71]; //@line 1454 "xmlparse.c"
        var $73=$parser_addr; //@line 1454 "xmlparse.c"
        var $74=$73+280; //@line 1454 "xmlparse.c"
        HEAP[$74]=$72; //@line 1454 "xmlparse.c"
        $0=2; //@line 1455 "xmlparse.c"
        __label__ = 35; break; //@line 1455 "xmlparse.c"
      case 9: // $bb8
        var $75=$parser_addr; //@line 1458 "xmlparse.c"
        var $76=$75+464; //@line 1458 "xmlparse.c"
        var $77=$76; //@line 1458 "xmlparse.c"
        HEAP[$77]=2; //@line 1458 "xmlparse.c"
        __label__ = 10; break; //@line 1458 "xmlparse.c"
      case 10: // $bb9
        $0=1; //@line 1461 "xmlparse.c"
        __label__ = 35; break; //@line 1461 "xmlparse.c"
      case 11: // $bb10
        var $78=$50+272; //@line 1464 "xmlparse.c"
        var $79=HEAP[$78]; //@line 1464 "xmlparse.c"
        var $80=$parser_addr; //@line 1464 "xmlparse.c"
        var $81=$80+276; //@line 1464 "xmlparse.c"
        HEAP[$81]=$79; //@line 1464 "xmlparse.c"
        var $82=$parser_addr; //@line 1465 "xmlparse.c"
        var $83=$82+264; //@line 1465 "xmlparse.c"
        HEAP[$83]=(FUNCTION_TABLE_OFFSET + 54); //@line 1465 "xmlparse.c"
        $0=0; //@line 1466 "xmlparse.c"
        __label__ = 35; break; //@line 1466 "xmlparse.c"
      case 12: // $bb11
        var $84=$parser_addr; //@line 1469 "xmlparse.c"
        var $85=$84+24; //@line 1469 "xmlparse.c"
        var $86=HEAP[$85]; //@line 1469 "xmlparse.c"
        var $87=$parser_addr; //@line 1469 "xmlparse.c"
        var $88=$87+28; //@line 1469 "xmlparse.c"
        var $89=HEAP[$88]; //@line 1469 "xmlparse.c"
        var $90=($86)==($89); //@line 1469 "xmlparse.c"
        var $91=$parser_addr; //@line 1473 "xmlparse.c"
        if ($90) { __label__ = 13; break; } else { __label__ = 32; break; } //@line 1469 "xmlparse.c"
      case 13: // $bb12
        var $92=$91+36; //@line 1473 "xmlparse.c"
        var $93=HEAP[$92]; //@line 1473 "xmlparse.c"
        var $94=$len_addr; //@line 1473 "xmlparse.c"
        var $95=($94) + ($93); //@line 1473 "xmlparse.c"
        var $96=$parser_addr; //@line 1473 "xmlparse.c"
        var $97=$96+36; //@line 1473 "xmlparse.c"
        HEAP[$97]=$95; //@line 1473 "xmlparse.c"
        var $98=$parser_addr; //@line 1474 "xmlparse.c"
        var $99=$98+280; //@line 1474 "xmlparse.c"
        var $100=$s_addr; //@line 1474 "xmlparse.c"
        HEAP[$99]=$100; //@line 1474 "xmlparse.c"
        var $101=$isFinal_addr; //@line 1475 "xmlparse.c"
        var $102=((($101)) & 255); //@line 1475 "xmlparse.c"
        var $103=$parser_addr; //@line 1475 "xmlparse.c"
        var $104=$103+464; //@line 1475 "xmlparse.c"
        var $105=$104+4; //@line 1475 "xmlparse.c"
        HEAP[$105]=$102; //@line 1475 "xmlparse.c"
        var $106=$parser_addr; //@line 1477 "xmlparse.c"
        var $107=$106+264; //@line 1477 "xmlparse.c"
        var $108=HEAP[$107]; //@line 1477 "xmlparse.c"
        var $109=$s_addr; //@line 1477 "xmlparse.c"
        var $110=$len_addr; //@line 1477 "xmlparse.c"
        var $111=$109+$110; //@line 1477 "xmlparse.c"
        var $112=$parser_addr; //@line 1477 "xmlparse.c"
        var $113=$112+40; //@line 1477 "xmlparse.c"
        HEAP[$113]=$111; //@line 1477 "xmlparse.c"
        var $114=$parser_addr; //@line 1477 "xmlparse.c"
        var $115=$114+40; //@line 1477 "xmlparse.c"
        var $116=HEAP[$115]; //@line 1477 "xmlparse.c"
        var $117=$parser_addr; //@line 1477 "xmlparse.c"
        var $118=$s_addr; //@line 1477 "xmlparse.c"
        var $119=FUNCTION_TABLE[$108]($117, $118, $116, $end); //@line 1477 "xmlparse.c"
        var $120=$parser_addr; //@line 1477 "xmlparse.c"
        var $121=$120+268; //@line 1477 "xmlparse.c"
        HEAP[$121]=$119; //@line 1477 "xmlparse.c"
        var $122=$parser_addr; //@line 1479 "xmlparse.c"
        var $123=$122+268; //@line 1479 "xmlparse.c"
        var $124=HEAP[$123]; //@line 1479 "xmlparse.c"
        var $125=($124)!=0; //@line 1479 "xmlparse.c"
        var $126=$parser_addr; //@line 1480 "xmlparse.c"
        if ($125) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1479 "xmlparse.c"
      case 14: // $bb13
        var $127=$126+272; //@line 1480 "xmlparse.c"
        var $128=HEAP[$127]; //@line 1480 "xmlparse.c"
        var $129=$parser_addr; //@line 1480 "xmlparse.c"
        var $130=$129+276; //@line 1480 "xmlparse.c"
        HEAP[$130]=$128; //@line 1480 "xmlparse.c"
        var $131=$parser_addr; //@line 1481 "xmlparse.c"
        var $132=$131+264; //@line 1481 "xmlparse.c"
        HEAP[$132]=(FUNCTION_TABLE_OFFSET + 54); //@line 1481 "xmlparse.c"
        $0=0; //@line 1482 "xmlparse.c"
        __label__ = 35; break; //@line 1482 "xmlparse.c"
      case 15: // $bb14
        var $133=$126+464; //@line 1485 "xmlparse.c"
        var $134=$133; //@line 1485 "xmlparse.c"
        var $135=HEAP[$134]; //@line 1485 "xmlparse.c"
        if ($135 == 0) {
          __label__ = 17; break;
        }
        else if ($135 == 1) {
          __label__ = 17; break;
        }
        else if ($135 == 3) {
          __label__ = 16; break;
        }
        else {
        __label__ = 19; break;
        }
        
      case 16: // $bb15
        $result=2; //@line 1487 "xmlparse.c"
        __label__ = 19; break; //@line 1487 "xmlparse.c"
      case 17: // $bb16
        $result=1; //@line 1491 "xmlparse.c"
        var $136=$isFinal_addr; //@line 1492 "xmlparse.c"
        var $137=($136)!=0; //@line 1492 "xmlparse.c"
        if ($137) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1492 "xmlparse.c"
      case 18: // $bb17
        var $138=$parser_addr; //@line 1493 "xmlparse.c"
        var $139=$138+464; //@line 1493 "xmlparse.c"
        var $140=$139; //@line 1493 "xmlparse.c"
        HEAP[$140]=2; //@line 1493 "xmlparse.c"
        var $141=$result; //@line 1494 "xmlparse.c"
        $0=$141; //@line 1494 "xmlparse.c"
        __label__ = 35; break; //@line 1494 "xmlparse.c"
      case 19: // $bb18
        var $142=$parser_addr; //@line 1499 "xmlparse.c"
        var $143=$142+144; //@line 1499 "xmlparse.c"
        var $144=HEAP[$143]; //@line 1499 "xmlparse.c"
        var $145=$144+48; //@line 1499 "xmlparse.c"
        var $146=HEAP[$145]; //@line 1499 "xmlparse.c"
        var $147=$parser_addr; //@line 1499 "xmlparse.c"
        var $148=$147+392; //@line 1499 "xmlparse.c"
        var $149=HEAP[$end]; //@line 1499 "xmlparse.c"
        var $150=$parser_addr; //@line 1499 "xmlparse.c"
        var $151=$150+280; //@line 1499 "xmlparse.c"
        var $152=HEAP[$151]; //@line 1499 "xmlparse.c"
        var $153=$parser_addr; //@line 1499 "xmlparse.c"
        var $154=$153+144; //@line 1499 "xmlparse.c"
        var $155=HEAP[$154]; //@line 1499 "xmlparse.c"
        FUNCTION_TABLE[$146]($155, $152, $149, $148); //@line 1499 "xmlparse.c"
        var $156=$s_addr; //@line 1500 "xmlparse.c"
        var $157=$len_addr; //@line 1500 "xmlparse.c"
        var $158=$156+$157; //@line 1500 "xmlparse.c"
        var $159=($158); //@line 1500 "xmlparse.c"
        var $160=HEAP[$end]; //@line 1500 "xmlparse.c"
        var $161=($160); //@line 1500 "xmlparse.c"
        var $162=($159) - ($161); //@line 1500 "xmlparse.c"
        $nLeftOver=$162; //@line 1500 "xmlparse.c"
        var $163=($162)!=0; //@line 1501 "xmlparse.c"
        if ($163) { __label__ = 20; break; } else { __label__ = 31; break; } //@line 1501 "xmlparse.c"
      case 20: // $bb19
        var $164=$parser_addr; //@line 1502 "xmlparse.c"
        var $165=$164+8; //@line 1502 "xmlparse.c"
        var $166=HEAP[$165]; //@line 1502 "xmlparse.c"
        var $167=($166)==0; //@line 1502 "xmlparse.c"
        if ($167) { __label__ = 22; break; } else { __label__ = 21; break; } //@line 1502 "xmlparse.c"
      case 21: // $bb20
        var $168=$parser_addr; //@line 1502 "xmlparse.c"
        var $169=$168+32; //@line 1502 "xmlparse.c"
        var $170=HEAP[$169]; //@line 1502 "xmlparse.c"
        var $171=($170); //@line 1502 "xmlparse.c"
        var $172=$parser_addr; //@line 1502 "xmlparse.c"
        var $173=$172+8; //@line 1502 "xmlparse.c"
        var $174=HEAP[$173]; //@line 1502 "xmlparse.c"
        var $175=($174); //@line 1502 "xmlparse.c"
        var $176=($171) - ($175); //@line 1502 "xmlparse.c"
        var $177=$nLeftOver; //@line 1502 "xmlparse.c"
        var $178=($176) < ($177); //@line 1502 "xmlparse.c"
        if ($178) { __label__ = 22; break; } else { __label__ = 30; break; } //@line 1502 "xmlparse.c"
      case 22: // $bb21
        var $179=$parser_addr; //@line 1505 "xmlparse.c"
        var $180=$179+8; //@line 1505 "xmlparse.c"
        var $181=HEAP[$180]; //@line 1505 "xmlparse.c"
        var $182=($181)==0; //@line 1505 "xmlparse.c"
        var $183=$parser_addr; //@line 1505 "xmlparse.c"
        var $184=$183+12; //@line 1505 "xmlparse.c"
        if ($182) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1505 "xmlparse.c"
      case 23: // $bb22
        var $185=$184; //@line 1505 "xmlparse.c"
        var $186=HEAP[$185]; //@line 1505 "xmlparse.c"
        var $187=$len_addr; //@line 1505 "xmlparse.c"
        var $188=($187) * 2; //@line 1505 "xmlparse.c"
        var $189=FUNCTION_TABLE[$186]($188); //@line 1505 "xmlparse.c"
        $iftmp_7=$189; //@line 1505 "xmlparse.c"
        __lastLabel__ = 23; __label__ = 25; break; //@line 1505 "xmlparse.c"
      case 24: // $bb23
        var $190=$184+4; //@line 1505 "xmlparse.c"
        var $191=HEAP[$190]; //@line 1505 "xmlparse.c"
        var $192=$len_addr; //@line 1505 "xmlparse.c"
        var $193=($192) * 2; //@line 1505 "xmlparse.c"
        var $194=$parser_addr; //@line 1505 "xmlparse.c"
        var $195=$194+8; //@line 1505 "xmlparse.c"
        var $196=HEAP[$195]; //@line 1505 "xmlparse.c"
        var $197=FUNCTION_TABLE[$191]($196, $193); //@line 1505 "xmlparse.c"
        $iftmp_7=$197; //@line 1505 "xmlparse.c"
        __lastLabel__ = 24; __label__ = 25; break; //@line 1505 "xmlparse.c"
      case 25: // $bb24
        var $198=__lastLabel__ == 24 ? $197 : ($189);
        $temp=$198; //@line 1505 "xmlparse.c"
        var $199=($198)==0; //@line 1508 "xmlparse.c"
        var $200=$parser_addr; //@line 1509 "xmlparse.c"
        if ($199) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1508 "xmlparse.c"
      case 26: // $bb25
        var $201=$200+268; //@line 1509 "xmlparse.c"
        HEAP[$201]=1; //@line 1509 "xmlparse.c"
        $0=0; //@line 1510 "xmlparse.c"
        __label__ = 35; break; //@line 1510 "xmlparse.c"
      case 27: // $bb26
        var $202=$200+8; //@line 1512 "xmlparse.c"
        var $203=$temp; //@line 1512 "xmlparse.c"
        HEAP[$202]=$203; //@line 1512 "xmlparse.c"
        var $204=$parser_addr; //@line 1513 "xmlparse.c"
        var $205=$204+8; //@line 1513 "xmlparse.c"
        var $206=HEAP[$205]; //@line 1513 "xmlparse.c"
        var $207=($206)==0; //@line 1513 "xmlparse.c"
        var $208=$parser_addr; //@line 1514 "xmlparse.c"
        if ($207) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1513 "xmlparse.c"
      case 28: // $bb27
        var $209=$208+268; //@line 1514 "xmlparse.c"
        HEAP[$209]=1; //@line 1514 "xmlparse.c"
        var $210=$parser_addr; //@line 1515 "xmlparse.c"
        var $211=$210+276; //@line 1515 "xmlparse.c"
        HEAP[$211]=0; //@line 1515 "xmlparse.c"
        var $212=$parser_addr; //@line 1515 "xmlparse.c"
        var $213=$212+276; //@line 1515 "xmlparse.c"
        var $214=HEAP[$213]; //@line 1515 "xmlparse.c"
        var $215=$parser_addr; //@line 1515 "xmlparse.c"
        var $216=$215+272; //@line 1515 "xmlparse.c"
        HEAP[$216]=$214; //@line 1515 "xmlparse.c"
        var $217=$parser_addr; //@line 1516 "xmlparse.c"
        var $218=$217+264; //@line 1516 "xmlparse.c"
        HEAP[$218]=(FUNCTION_TABLE_OFFSET + 54); //@line 1516 "xmlparse.c"
        $0=0; //@line 1517 "xmlparse.c"
        __label__ = 35; break; //@line 1517 "xmlparse.c"
      case 29: // $bb28
        var $219=$208+8; //@line 1519 "xmlparse.c"
        var $220=HEAP[$219]; //@line 1519 "xmlparse.c"
        var $221=$len_addr; //@line 1519 "xmlparse.c"
        var $222=($221) * 2; //@line 1519 "xmlparse.c"
        var $223=$220+$222; //@line 1519 "xmlparse.c"
        var $224=$parser_addr; //@line 1519 "xmlparse.c"
        var $225=$224+32; //@line 1519 "xmlparse.c"
        HEAP[$225]=$223; //@line 1519 "xmlparse.c"
        __label__ = 30; break; //@line 1519 "xmlparse.c"
      case 30: // $bb29
        var $226=$nLeftOver; //@line 1521 "xmlparse.c"
        var $227=HEAP[$end]; //@line 1521 "xmlparse.c"
        var $228=$parser_addr; //@line 1521 "xmlparse.c"
        var $229=$228+8; //@line 1521 "xmlparse.c"
        var $230=HEAP[$229]; //@line 1521 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($230, $227, $226, 1, 0); //@line 1521 "xmlparse.c"
        __label__ = 31; break; //@line 1521 "xmlparse.c"
      case 31: // $bb30
        var $231=$parser_addr; //@line 1523 "xmlparse.c"
        var $232=$231+8; //@line 1523 "xmlparse.c"
        var $233=HEAP[$232]; //@line 1523 "xmlparse.c"
        var $234=$parser_addr; //@line 1523 "xmlparse.c"
        var $235=$234+24; //@line 1523 "xmlparse.c"
        HEAP[$235]=$233; //@line 1523 "xmlparse.c"
        var $236=$parser_addr; //@line 1524 "xmlparse.c"
        var $237=$236+8; //@line 1524 "xmlparse.c"
        var $238=HEAP[$237]; //@line 1524 "xmlparse.c"
        var $239=$nLeftOver; //@line 1524 "xmlparse.c"
        var $240=$238+$239; //@line 1524 "xmlparse.c"
        var $241=$parser_addr; //@line 1524 "xmlparse.c"
        var $242=$241+28; //@line 1524 "xmlparse.c"
        HEAP[$242]=$240; //@line 1524 "xmlparse.c"
        var $243=$parser_addr; //@line 1525 "xmlparse.c"
        var $244=$243+24; //@line 1525 "xmlparse.c"
        var $245=HEAP[$244]; //@line 1525 "xmlparse.c"
        var $246=$parser_addr; //@line 1525 "xmlparse.c"
        var $247=$246+280; //@line 1525 "xmlparse.c"
        HEAP[$247]=$245; //@line 1525 "xmlparse.c"
        var $248=$parser_addr; //@line 1526 "xmlparse.c"
        var $249=$248+28; //@line 1526 "xmlparse.c"
        var $250=HEAP[$249]; //@line 1526 "xmlparse.c"
        var $251=$parser_addr; //@line 1526 "xmlparse.c"
        var $252=$251+40; //@line 1526 "xmlparse.c"
        HEAP[$252]=$250; //@line 1526 "xmlparse.c"
        var $253=$parser_addr; //@line 1527 "xmlparse.c"
        var $254=$253+24; //@line 1527 "xmlparse.c"
        var $255=HEAP[$254]; //@line 1527 "xmlparse.c"
        var $256=$parser_addr; //@line 1527 "xmlparse.c"
        var $257=$256+272; //@line 1527 "xmlparse.c"
        HEAP[$257]=$255; //@line 1527 "xmlparse.c"
        var $258=$parser_addr; //@line 1528 "xmlparse.c"
        var $259=$258+24; //@line 1528 "xmlparse.c"
        var $260=HEAP[$259]; //@line 1528 "xmlparse.c"
        var $261=$parser_addr; //@line 1528 "xmlparse.c"
        var $262=$261+276; //@line 1528 "xmlparse.c"
        HEAP[$262]=$260; //@line 1528 "xmlparse.c"
        var $263=$result; //@line 1529 "xmlparse.c"
        $0=$263; //@line 1529 "xmlparse.c"
        __label__ = 35; break; //@line 1529 "xmlparse.c"
      case 32: // $bb31
        var $264=$len_addr; //@line 1533 "xmlparse.c"
        var $265=_PyExpat_XML_GetBuffer($91, $264); //@line 1533 "xmlparse.c"
        $buff=$265; //@line 1533 "xmlparse.c"
        var $266=$buff; //@line 1534 "xmlparse.c"
        var $267=($266)==0; //@line 1534 "xmlparse.c"
        if ($267) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 1534 "xmlparse.c"
      case 33: // $bb32
        $0=0; //@line 1535 "xmlparse.c"
        __label__ = 35; break; //@line 1535 "xmlparse.c"
      case 34: // $bb33
        var $268=$len_addr; //@line 1537 "xmlparse.c"
        var $269=$buff; //@line 1537 "xmlparse.c"
        var $270=$s_addr; //@line 1537 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($269, $270, $268, 1, 0); //@line 1537 "xmlparse.c"
        var $271=$parser_addr; //@line 1538 "xmlparse.c"
        var $272=$len_addr; //@line 1538 "xmlparse.c"
        var $273=$isFinal_addr; //@line 1538 "xmlparse.c"
        var $274=_PyExpat_XML_ParseBuffer($271, $272, $273); //@line 1538 "xmlparse.c"
        $0=$274; //@line 1538 "xmlparse.c"
        __label__ = 35; break; //@line 1538 "xmlparse.c"
      case 35: // $bb34
        var $275=$0; //@line 1429 "xmlparse.c"
        $retval=$275; //@line 1429 "xmlparse.c"
        var $retval35=$retval; //@line 1429 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval35; //@line 1429 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ParseBuffer($parser, $len, $isFinal) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $len_addr;
        var $isFinal_addr;
        var $retval;
        var $0;
        var $start;
        var $result;
        $parser_addr=$parser;
        $len_addr=$len;
        $isFinal_addr=$isFinal;
        $result=1; //@line 1547 "xmlparse.c"
        var $1=$parser_addr; //@line 1549 "xmlparse.c"
        var $2=$1+464; //@line 1549 "xmlparse.c"
        var $3=$2; //@line 1549 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1549 "xmlparse.c"
        if ($4 == 2) {
          __label__ = 2; break;
        }
        else if ($4 == 3) {
          __label__ = 1; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        var $5=$parser_addr; //@line 1551 "xmlparse.c"
        var $6=$5+268; //@line 1551 "xmlparse.c"
        HEAP[$6]=33; //@line 1551 "xmlparse.c"
        $0=0; //@line 1552 "xmlparse.c"
        __label__ = 10; break; //@line 1552 "xmlparse.c"
      case 2: // $bb1
        var $7=$parser_addr; //@line 1554 "xmlparse.c"
        var $8=$7+268; //@line 1554 "xmlparse.c"
        HEAP[$8]=36; //@line 1554 "xmlparse.c"
        $0=0; //@line 1555 "xmlparse.c"
        __label__ = 10; break; //@line 1555 "xmlparse.c"
      case 3: // $bb2
        var $9=$parser_addr; //@line 1557 "xmlparse.c"
        var $10=$9+464; //@line 1557 "xmlparse.c"
        var $11=$10; //@line 1557 "xmlparse.c"
        HEAP[$11]=1; //@line 1557 "xmlparse.c"
        var $12=$parser_addr; //@line 1560 "xmlparse.c"
        var $13=$12+24; //@line 1560 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1560 "xmlparse.c"
        $start=$14; //@line 1560 "xmlparse.c"
        var $15=$parser_addr; //@line 1561 "xmlparse.c"
        var $16=$15+280; //@line 1561 "xmlparse.c"
        var $17=$start; //@line 1561 "xmlparse.c"
        HEAP[$16]=$17; //@line 1561 "xmlparse.c"
        var $18=$parser_addr; //@line 1562 "xmlparse.c"
        var $19=$18+28; //@line 1562 "xmlparse.c"
        var $20=HEAP[$19]; //@line 1562 "xmlparse.c"
        var $21=$len_addr; //@line 1562 "xmlparse.c"
        var $22=$20+$21; //@line 1562 "xmlparse.c"
        var $23=$parser_addr; //@line 1562 "xmlparse.c"
        var $24=$23+28; //@line 1562 "xmlparse.c"
        HEAP[$24]=$22; //@line 1562 "xmlparse.c"
        var $25=$parser_addr; //@line 1563 "xmlparse.c"
        var $26=$25+28; //@line 1563 "xmlparse.c"
        var $27=HEAP[$26]; //@line 1563 "xmlparse.c"
        var $28=$parser_addr; //@line 1563 "xmlparse.c"
        var $29=$28+40; //@line 1563 "xmlparse.c"
        HEAP[$29]=$27; //@line 1563 "xmlparse.c"
        var $30=$parser_addr; //@line 1564 "xmlparse.c"
        var $31=$30+36; //@line 1564 "xmlparse.c"
        var $32=HEAP[$31]; //@line 1564 "xmlparse.c"
        var $33=$len_addr; //@line 1564 "xmlparse.c"
        var $34=($33) + ($32); //@line 1564 "xmlparse.c"
        var $35=$parser_addr; //@line 1564 "xmlparse.c"
        var $36=$35+36; //@line 1564 "xmlparse.c"
        HEAP[$36]=$34; //@line 1564 "xmlparse.c"
        var $37=$isFinal_addr; //@line 1565 "xmlparse.c"
        var $38=((($37)) & 255); //@line 1565 "xmlparse.c"
        var $39=$parser_addr; //@line 1565 "xmlparse.c"
        var $40=$39+464; //@line 1565 "xmlparse.c"
        var $41=$40+4; //@line 1565 "xmlparse.c"
        HEAP[$41]=$38; //@line 1565 "xmlparse.c"
        var $42=$parser_addr; //@line 1567 "xmlparse.c"
        var $43=$42+264; //@line 1567 "xmlparse.c"
        var $44=HEAP[$43]; //@line 1567 "xmlparse.c"
        var $45=$parser_addr; //@line 1567 "xmlparse.c"
        var $46=$45+24; //@line 1567 "xmlparse.c"
        var $47=$parser_addr; //@line 1567 "xmlparse.c"
        var $48=$47+40; //@line 1567 "xmlparse.c"
        var $49=HEAP[$48]; //@line 1567 "xmlparse.c"
        var $50=$parser_addr; //@line 1567 "xmlparse.c"
        var $51=$start; //@line 1567 "xmlparse.c"
        var $52=FUNCTION_TABLE[$44]($50, $51, $49, $46); //@line 1567 "xmlparse.c"
        var $53=$parser_addr; //@line 1567 "xmlparse.c"
        var $54=$53+268; //@line 1567 "xmlparse.c"
        HEAP[$54]=$52; //@line 1567 "xmlparse.c"
        var $55=$parser_addr; //@line 1569 "xmlparse.c"
        var $56=$55+268; //@line 1569 "xmlparse.c"
        var $57=HEAP[$56]; //@line 1569 "xmlparse.c"
        var $58=($57)!=0; //@line 1569 "xmlparse.c"
        var $59=$parser_addr; //@line 1570 "xmlparse.c"
        if ($58) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1569 "xmlparse.c"
      case 4: // $bb3
        var $60=$59+272; //@line 1570 "xmlparse.c"
        var $61=HEAP[$60]; //@line 1570 "xmlparse.c"
        var $62=$parser_addr; //@line 1570 "xmlparse.c"
        var $63=$62+276; //@line 1570 "xmlparse.c"
        HEAP[$63]=$61; //@line 1570 "xmlparse.c"
        var $64=$parser_addr; //@line 1571 "xmlparse.c"
        var $65=$64+264; //@line 1571 "xmlparse.c"
        HEAP[$65]=(FUNCTION_TABLE_OFFSET + 54); //@line 1571 "xmlparse.c"
        $0=0; //@line 1572 "xmlparse.c"
        __label__ = 10; break; //@line 1572 "xmlparse.c"
      case 5: // $bb4
        var $66=$59+464; //@line 1575 "xmlparse.c"
        var $67=$66; //@line 1575 "xmlparse.c"
        var $68=HEAP[$67]; //@line 1575 "xmlparse.c"
        if ($68 == 0) {
          __label__ = 7; break;
        }
        else if ($68 == 1) {
          __label__ = 7; break;
        }
        else if ($68 == 3) {
          __label__ = 6; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 6: // $bb5
        $result=2; //@line 1577 "xmlparse.c"
        __label__ = 9; break; //@line 1577 "xmlparse.c"
      case 7: // $bb6
        var $69=$isFinal_addr; //@line 1581 "xmlparse.c"
        var $70=($69)!=0; //@line 1581 "xmlparse.c"
        if ($70) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1581 "xmlparse.c"
      case 8: // $bb7
        var $71=$parser_addr; //@line 1582 "xmlparse.c"
        var $72=$71+464; //@line 1582 "xmlparse.c"
        var $73=$72; //@line 1582 "xmlparse.c"
        HEAP[$73]=2; //@line 1582 "xmlparse.c"
        var $74=$result; //@line 1583 "xmlparse.c"
        $0=$74; //@line 1583 "xmlparse.c"
        __label__ = 10; break; //@line 1583 "xmlparse.c"
      case 9: // $bb8
        var $75=$parser_addr; //@line 1589 "xmlparse.c"
        var $76=$75+144; //@line 1589 "xmlparse.c"
        var $77=HEAP[$76]; //@line 1589 "xmlparse.c"
        var $78=$77+48; //@line 1589 "xmlparse.c"
        var $79=HEAP[$78]; //@line 1589 "xmlparse.c"
        var $80=$parser_addr; //@line 1589 "xmlparse.c"
        var $81=$80+392; //@line 1589 "xmlparse.c"
        var $82=$parser_addr; //@line 1589 "xmlparse.c"
        var $83=$82+24; //@line 1589 "xmlparse.c"
        var $84=HEAP[$83]; //@line 1589 "xmlparse.c"
        var $85=$parser_addr; //@line 1589 "xmlparse.c"
        var $86=$85+280; //@line 1589 "xmlparse.c"
        var $87=HEAP[$86]; //@line 1589 "xmlparse.c"
        var $88=$parser_addr; //@line 1589 "xmlparse.c"
        var $89=$88+144; //@line 1589 "xmlparse.c"
        var $90=HEAP[$89]; //@line 1589 "xmlparse.c"
        FUNCTION_TABLE[$79]($90, $87, $84, $81); //@line 1589 "xmlparse.c"
        var $91=$parser_addr; //@line 1590 "xmlparse.c"
        var $92=$91+24; //@line 1590 "xmlparse.c"
        var $93=HEAP[$92]; //@line 1590 "xmlparse.c"
        var $94=$parser_addr; //@line 1590 "xmlparse.c"
        var $95=$94+280; //@line 1590 "xmlparse.c"
        HEAP[$95]=$93; //@line 1590 "xmlparse.c"
        var $96=$result; //@line 1591 "xmlparse.c"
        $0=$96; //@line 1591 "xmlparse.c"
        __label__ = 10; break; //@line 1591 "xmlparse.c"
      case 10: // $bb9
        var $97=$0; //@line 1552 "xmlparse.c"
        $retval=$97; //@line 1552 "xmlparse.c"
        var $retval10=$retval; //@line 1552 "xmlparse.c"
        ;
        return $retval10; //@line 1552 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetBuffer($parser, $len) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $len_addr;
        var $retval;
        var $0;
        var $neededSize;
        var $newBuf;
        var $bufferSize;
        $parser_addr=$parser;
        $len_addr=$len;
        var $1=$parser_addr; //@line 1597 "xmlparse.c"
        var $2=$1+464; //@line 1597 "xmlparse.c"
        var $3=$2; //@line 1597 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1597 "xmlparse.c"
        if ($4 == 2) {
          __label__ = 2; break;
        }
        else if ($4 == 3) {
          __label__ = 1; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        var $5=$parser_addr; //@line 1599 "xmlparse.c"
        var $6=$5+268; //@line 1599 "xmlparse.c"
        HEAP[$6]=33; //@line 1599 "xmlparse.c"
        $0=0; //@line 1600 "xmlparse.c"
        __label__ = 15; break; //@line 1600 "xmlparse.c"
      case 2: // $bb1
        var $7=$parser_addr; //@line 1602 "xmlparse.c"
        var $8=$7+268; //@line 1602 "xmlparse.c"
        HEAP[$8]=36; //@line 1602 "xmlparse.c"
        $0=0; //@line 1603 "xmlparse.c"
        __label__ = 15; break; //@line 1603 "xmlparse.c"
      case 3: // $bb2
        var $9=$parser_addr; //@line 1607 "xmlparse.c"
        var $10=$9+32; //@line 1607 "xmlparse.c"
        var $11=HEAP[$10]; //@line 1607 "xmlparse.c"
        var $12=($11); //@line 1607 "xmlparse.c"
        var $13=$parser_addr; //@line 1607 "xmlparse.c"
        var $14=$13+28; //@line 1607 "xmlparse.c"
        var $15=HEAP[$14]; //@line 1607 "xmlparse.c"
        var $16=($15); //@line 1607 "xmlparse.c"
        var $17=($12) - ($16); //@line 1607 "xmlparse.c"
        var $18=$len_addr; //@line 1607 "xmlparse.c"
        var $19=($17) < ($18); //@line 1607 "xmlparse.c"
        if ($19) { __label__ = 4; break; } else { __label__ = 14; break; } //@line 1607 "xmlparse.c"
      case 4: // $bb3
        var $20=$parser_addr; //@line 1609 "xmlparse.c"
        var $21=$20+28; //@line 1609 "xmlparse.c"
        var $22=HEAP[$21]; //@line 1609 "xmlparse.c"
        var $23=($22); //@line 1609 "xmlparse.c"
        var $24=$parser_addr; //@line 1609 "xmlparse.c"
        var $25=$24+24; //@line 1609 "xmlparse.c"
        var $26=HEAP[$25]; //@line 1609 "xmlparse.c"
        var $27=($26); //@line 1609 "xmlparse.c"
        var $_neg=0 - ($27);
        var $28=$len_addr; //@line 1609 "xmlparse.c"
        var $29=($28) + ($23);
        var $30=($29) + ($_neg); //@line 1609 "xmlparse.c"
        $neededSize=$30; //@line 1609 "xmlparse.c"
        var $31=$parser_addr; //@line 1617 "xmlparse.c"
        var $32=$31+32; //@line 1617 "xmlparse.c"
        var $33=HEAP[$32]; //@line 1617 "xmlparse.c"
        var $34=($33); //@line 1617 "xmlparse.c"
        var $35=$parser_addr; //@line 1617 "xmlparse.c"
        var $36=$35+8; //@line 1617 "xmlparse.c"
        var $37=HEAP[$36]; //@line 1617 "xmlparse.c"
        var $38=($37); //@line 1617 "xmlparse.c"
        var $39=($34) - ($38); //@line 1617 "xmlparse.c"
        var $40=$neededSize; //@line 1617 "xmlparse.c"
        var $41=($39) >= ($40); //@line 1617 "xmlparse.c"
        var $42=$parser_addr; //@line 1626 "xmlparse.c"
        if ($41) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1617 "xmlparse.c"
      case 5: // $bb4
        var $43=$42+28; //@line 1626 "xmlparse.c"
        var $44=HEAP[$43]; //@line 1626 "xmlparse.c"
        var $45=($44); //@line 1626 "xmlparse.c"
        var $46=$parser_addr; //@line 1626 "xmlparse.c"
        var $47=$46+24; //@line 1626 "xmlparse.c"
        var $48=HEAP[$47]; //@line 1626 "xmlparse.c"
        var $49=($48); //@line 1626 "xmlparse.c"
        var $50=($45) - ($49); //@line 1626 "xmlparse.c"
        var $51=$parser_addr; //@line 1626 "xmlparse.c"
        var $52=$51+24; //@line 1626 "xmlparse.c"
        var $53=HEAP[$52]; //@line 1626 "xmlparse.c"
        var $54=$parser_addr; //@line 1626 "xmlparse.c"
        var $55=$54+8; //@line 1626 "xmlparse.c"
        var $56=HEAP[$55]; //@line 1626 "xmlparse.c"
        _llvm_memmove_p0i8_p0i8_i32($56, $53, $50, 1, 0); //@line 1626 "xmlparse.c"
        var $57=$parser_addr; //@line 1627 "xmlparse.c"
        var $58=$57+8; //@line 1627 "xmlparse.c"
        var $59=HEAP[$58]; //@line 1627 "xmlparse.c"
        var $60=$parser_addr; //@line 1627 "xmlparse.c"
        var $61=$60+28; //@line 1627 "xmlparse.c"
        var $62=HEAP[$61]; //@line 1627 "xmlparse.c"
        var $63=($62); //@line 1627 "xmlparse.c"
        var $64=$parser_addr; //@line 1627 "xmlparse.c"
        var $65=$64+24; //@line 1627 "xmlparse.c"
        var $66=HEAP[$65]; //@line 1627 "xmlparse.c"
        var $67=($66); //@line 1627 "xmlparse.c"
        var $68=($63) - ($67); //@line 1627 "xmlparse.c"
        var $69=$59+$68; //@line 1627 "xmlparse.c"
        var $70=$parser_addr; //@line 1627 "xmlparse.c"
        var $71=$70+28; //@line 1627 "xmlparse.c"
        HEAP[$71]=$69; //@line 1627 "xmlparse.c"
        var $72=$parser_addr; //@line 1628 "xmlparse.c"
        var $73=$72+8; //@line 1628 "xmlparse.c"
        var $74=HEAP[$73]; //@line 1628 "xmlparse.c"
        var $75=$parser_addr; //@line 1628 "xmlparse.c"
        var $76=$75+24; //@line 1628 "xmlparse.c"
        HEAP[$76]=$74; //@line 1628 "xmlparse.c"
        __label__ = 14; break; //@line 1628 "xmlparse.c"
      case 6: // $bb5
        var $77=$42+32; //@line 1633 "xmlparse.c"
        var $78=HEAP[$77]; //@line 1633 "xmlparse.c"
        var $79=($78); //@line 1633 "xmlparse.c"
        var $80=$parser_addr; //@line 1633 "xmlparse.c"
        var $81=$80+24; //@line 1633 "xmlparse.c"
        var $82=HEAP[$81]; //@line 1633 "xmlparse.c"
        var $83=($82); //@line 1633 "xmlparse.c"
        var $84=($79) - ($83); //@line 1633 "xmlparse.c"
        $bufferSize=$84; //@line 1633 "xmlparse.c"
        var $85=$bufferSize; //@line 1634 "xmlparse.c"
        var $86=($85)==0; //@line 1634 "xmlparse.c"
        if ($86) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1634 "xmlparse.c"
      case 7: // $bb6
        $bufferSize=1024; //@line 1635 "xmlparse.c"
        __label__ = 8; break; //@line 1635 "xmlparse.c"
      case 8: // $bb7
        var $87=$bufferSize; //@line 1637 "xmlparse.c"
        var $88=($87) * 2; //@line 1637 "xmlparse.c"
        $bufferSize=$88; //@line 1637 "xmlparse.c"
        var $89=$bufferSize; //@line 1638 "xmlparse.c"
        var $90=$neededSize; //@line 1638 "xmlparse.c"
        var $91=($89) < ($90); //@line 1638 "xmlparse.c"
        if ($91) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1638 "xmlparse.c"
      case 9: // $bb8
        var $92=$parser_addr; //@line 1639 "xmlparse.c"
        var $93=$92+12; //@line 1639 "xmlparse.c"
        var $94=$93; //@line 1639 "xmlparse.c"
        var $95=HEAP[$94]; //@line 1639 "xmlparse.c"
        var $96=$bufferSize; //@line 1639 "xmlparse.c"
        var $97=FUNCTION_TABLE[$95]($96); //@line 1639 "xmlparse.c"
        $newBuf=$97; //@line 1639 "xmlparse.c"
        var $98=$newBuf; //@line 1640 "xmlparse.c"
        var $99=($98)==0; //@line 1640 "xmlparse.c"
        if ($99) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1640 "xmlparse.c"
      case 10: // $bb9
        var $100=$parser_addr; //@line 1641 "xmlparse.c"
        var $101=$100+268; //@line 1641 "xmlparse.c"
        HEAP[$101]=1; //@line 1641 "xmlparse.c"
        $0=0; //@line 1642 "xmlparse.c"
        __label__ = 15; break; //@line 1642 "xmlparse.c"
      case 11: // $bb10
        var $102=$newBuf; //@line 1644 "xmlparse.c"
        var $103=$bufferSize; //@line 1644 "xmlparse.c"
        var $104=$102+$103; //@line 1644 "xmlparse.c"
        var $105=$parser_addr; //@line 1644 "xmlparse.c"
        var $106=$105+32; //@line 1644 "xmlparse.c"
        HEAP[$106]=$104; //@line 1644 "xmlparse.c"
        var $107=$parser_addr; //@line 1661 "xmlparse.c"
        var $108=$107+24; //@line 1661 "xmlparse.c"
        var $109=HEAP[$108]; //@line 1661 "xmlparse.c"
        var $110=($109)!=0; //@line 1661 "xmlparse.c"
        if ($110) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1661 "xmlparse.c"
      case 12: // $bb11
        var $111=$parser_addr; //@line 1662 "xmlparse.c"
        var $112=$111+28; //@line 1662 "xmlparse.c"
        var $113=HEAP[$112]; //@line 1662 "xmlparse.c"
        var $114=($113); //@line 1662 "xmlparse.c"
        var $115=$parser_addr; //@line 1662 "xmlparse.c"
        var $116=$115+24; //@line 1662 "xmlparse.c"
        var $117=HEAP[$116]; //@line 1662 "xmlparse.c"
        var $118=($117); //@line 1662 "xmlparse.c"
        var $119=($114) - ($118); //@line 1662 "xmlparse.c"
        var $120=$parser_addr; //@line 1662 "xmlparse.c"
        var $121=$120+24; //@line 1662 "xmlparse.c"
        var $122=HEAP[$121]; //@line 1662 "xmlparse.c"
        var $123=$newBuf; //@line 1662 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($123, $122, $119, 1, 0); //@line 1662 "xmlparse.c"
        var $124=$parser_addr; //@line 1663 "xmlparse.c"
        var $125=$124+12; //@line 1663 "xmlparse.c"
        var $126=$125+8; //@line 1663 "xmlparse.c"
        var $127=HEAP[$126]; //@line 1663 "xmlparse.c"
        var $128=$parser_addr; //@line 1663 "xmlparse.c"
        var $129=$128+8; //@line 1663 "xmlparse.c"
        var $130=HEAP[$129]; //@line 1663 "xmlparse.c"
        FUNCTION_TABLE[$127]($130); //@line 1663 "xmlparse.c"
        __label__ = 13; break; //@line 1663 "xmlparse.c"
      case 13: // $bb12
        var $131=$parser_addr; //@line 1665 "xmlparse.c"
        var $132=$131+28; //@line 1665 "xmlparse.c"
        var $133=HEAP[$132]; //@line 1665 "xmlparse.c"
        var $134=($133); //@line 1665 "xmlparse.c"
        var $135=$parser_addr; //@line 1665 "xmlparse.c"
        var $136=$135+24; //@line 1665 "xmlparse.c"
        var $137=HEAP[$136]; //@line 1665 "xmlparse.c"
        var $138=($137); //@line 1665 "xmlparse.c"
        var $139=($134) - ($138); //@line 1665 "xmlparse.c"
        var $140=$newBuf; //@line 1665 "xmlparse.c"
        var $141=$140+$139; //@line 1665 "xmlparse.c"
        var $142=$parser_addr; //@line 1665 "xmlparse.c"
        var $143=$142+28; //@line 1665 "xmlparse.c"
        HEAP[$143]=$141; //@line 1665 "xmlparse.c"
        var $144=$parser_addr; //@line 1666 "xmlparse.c"
        var $145=$144+8; //@line 1666 "xmlparse.c"
        var $146=$newBuf; //@line 1666 "xmlparse.c"
        HEAP[$145]=$146; //@line 1666 "xmlparse.c"
        var $147=$parser_addr; //@line 1666 "xmlparse.c"
        var $148=$147+8; //@line 1666 "xmlparse.c"
        var $149=HEAP[$148]; //@line 1666 "xmlparse.c"
        var $150=$parser_addr; //@line 1666 "xmlparse.c"
        var $151=$150+24; //@line 1666 "xmlparse.c"
        HEAP[$151]=$149; //@line 1666 "xmlparse.c"
        __label__ = 14; break; //@line 1666 "xmlparse.c"
      case 14: // $bb13
        var $152=$parser_addr; //@line 1670 "xmlparse.c"
        var $153=$152+28; //@line 1670 "xmlparse.c"
        var $154=HEAP[$153]; //@line 1670 "xmlparse.c"
        $0=$154; //@line 1670 "xmlparse.c"
        __label__ = 15; break; //@line 1670 "xmlparse.c"
      case 15: // $bb14
        var $155=$0; //@line 1600 "xmlparse.c"
        $retval=$155; //@line 1600 "xmlparse.c"
        var $retval15=$retval; //@line 1600 "xmlparse.c"
        ;
        return $retval15; //@line 1600 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_StopParser($parser, $resumable) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $resumable_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        $resumable_addr=$resumable;
        var $1=$parser_addr; //@line 1676 "xmlparse.c"
        var $2=$1+464; //@line 1676 "xmlparse.c"
        var $3=$2; //@line 1676 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1676 "xmlparse.c"
        if ($4 == 2) {
          __label__ = 4; break;
        }
        else if ($4 == 3) {
          __label__ = 1; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 1: // $bb
        var $5=$resumable_addr; //@line 1678 "xmlparse.c"
        var $6=($5)!=0; //@line 1678 "xmlparse.c"
        var $7=$parser_addr; //@line 1679 "xmlparse.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1678 "xmlparse.c"
      case 2: // $bb1
        var $8=$7+268; //@line 1679 "xmlparse.c"
        HEAP[$8]=33; //@line 1679 "xmlparse.c"
        $0=0; //@line 1680 "xmlparse.c"
        __label__ = 9; break; //@line 1680 "xmlparse.c"
      case 3: // $bb2
        var $9=$7+464; //@line 1682 "xmlparse.c"
        var $10=$9; //@line 1682 "xmlparse.c"
        HEAP[$10]=2; //@line 1682 "xmlparse.c"
        __label__ = 8; break; //@line 1682 "xmlparse.c"
      case 4: // $bb3
        var $11=$parser_addr; //@line 1685 "xmlparse.c"
        var $12=$11+268; //@line 1685 "xmlparse.c"
        HEAP[$12]=36; //@line 1685 "xmlparse.c"
        $0=0; //@line 1686 "xmlparse.c"
        __label__ = 9; break; //@line 1686 "xmlparse.c"
      case 5: // $bb4
        var $13=$resumable_addr; //@line 1688 "xmlparse.c"
        var $14=($13)!=0; //@line 1688 "xmlparse.c"
        var $15=$parser_addr; //@line 1695 "xmlparse.c"
        var $16=$15+464; //@line 1695 "xmlparse.c"
        var $17=$16; //@line 1695 "xmlparse.c"
        if ($14) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1688 "xmlparse.c"
      case 6: // $bb5
        HEAP[$17]=3; //@line 1695 "xmlparse.c"
        __label__ = 8; break; //@line 1695 "xmlparse.c"
      case 7: // $bb6
        HEAP[$17]=2; //@line 1698 "xmlparse.c"
        __label__ = 8; break; //@line 1698 "xmlparse.c"
      case 8: // $bb7
        $0=1; //@line 1700 "xmlparse.c"
        __label__ = 9; break; //@line 1700 "xmlparse.c"
      case 9: // $bb8
        var $18=$0; //@line 1680 "xmlparse.c"
        $retval=$18; //@line 1680 "xmlparse.c"
        var $retval9=$retval; //@line 1680 "xmlparse.c"
        ;
        return $retval9; //@line 1680 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ResumeParser($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        var $result;
        $parser_addr=$parser;
        $result=1; //@line 1706 "xmlparse.c"
        var $1=$parser_addr; //@line 1708 "xmlparse.c"
        var $2=$1+464; //@line 1708 "xmlparse.c"
        var $3=$2; //@line 1708 "xmlparse.c"
        var $4=HEAP[$3]; //@line 1708 "xmlparse.c"
        var $5=($4)!=3; //@line 1708 "xmlparse.c"
        var $6=$parser_addr; //@line 1709 "xmlparse.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1708 "xmlparse.c"
      case 1: // $bb
        var $7=$6+268; //@line 1709 "xmlparse.c"
        HEAP[$7]=34; //@line 1709 "xmlparse.c"
        $0=0; //@line 1710 "xmlparse.c"
        __label__ = 9; break; //@line 1710 "xmlparse.c"
      case 2: // $bb1
        var $8=$6+464; //@line 1712 "xmlparse.c"
        var $9=$8; //@line 1712 "xmlparse.c"
        HEAP[$9]=1; //@line 1712 "xmlparse.c"
        var $10=$parser_addr; //@line 1714 "xmlparse.c"
        var $11=$10+264; //@line 1714 "xmlparse.c"
        var $12=HEAP[$11]; //@line 1714 "xmlparse.c"
        var $13=$parser_addr; //@line 1714 "xmlparse.c"
        var $14=$13+24; //@line 1714 "xmlparse.c"
        var $15=$parser_addr; //@line 1714 "xmlparse.c"
        var $16=$15+40; //@line 1714 "xmlparse.c"
        var $17=HEAP[$16]; //@line 1714 "xmlparse.c"
        var $18=$parser_addr; //@line 1714 "xmlparse.c"
        var $19=$18+24; //@line 1714 "xmlparse.c"
        var $20=HEAP[$19]; //@line 1714 "xmlparse.c"
        var $21=$parser_addr; //@line 1714 "xmlparse.c"
        var $22=FUNCTION_TABLE[$12]($21, $20, $17, $14); //@line 1714 "xmlparse.c"
        var $23=$parser_addr; //@line 1714 "xmlparse.c"
        var $24=$23+268; //@line 1714 "xmlparse.c"
        HEAP[$24]=$22; //@line 1714 "xmlparse.c"
        var $25=$parser_addr; //@line 1716 "xmlparse.c"
        var $26=$25+268; //@line 1716 "xmlparse.c"
        var $27=HEAP[$26]; //@line 1716 "xmlparse.c"
        var $28=($27)!=0; //@line 1716 "xmlparse.c"
        var $29=$parser_addr; //@line 1717 "xmlparse.c"
        if ($28) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1716 "xmlparse.c"
      case 3: // $bb2
        var $30=$29+272; //@line 1717 "xmlparse.c"
        var $31=HEAP[$30]; //@line 1717 "xmlparse.c"
        var $32=$parser_addr; //@line 1717 "xmlparse.c"
        var $33=$32+276; //@line 1717 "xmlparse.c"
        HEAP[$33]=$31; //@line 1717 "xmlparse.c"
        var $34=$parser_addr; //@line 1718 "xmlparse.c"
        var $35=$34+264; //@line 1718 "xmlparse.c"
        HEAP[$35]=(FUNCTION_TABLE_OFFSET + 54); //@line 1718 "xmlparse.c"
        $0=0; //@line 1719 "xmlparse.c"
        __label__ = 9; break; //@line 1719 "xmlparse.c"
      case 4: // $bb3
        var $36=$29+464; //@line 1722 "xmlparse.c"
        var $37=$36; //@line 1722 "xmlparse.c"
        var $38=HEAP[$37]; //@line 1722 "xmlparse.c"
        if ($38 == 0) {
          __label__ = 6; break;
        }
        else if ($38 == 1) {
          __label__ = 6; break;
        }
        else if ($38 == 3) {
          __label__ = 5; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 5: // $bb4
        $result=2; //@line 1724 "xmlparse.c"
        __label__ = 8; break; //@line 1724 "xmlparse.c"
      case 6: // $bb5
        var $39=$parser_addr; //@line 1728 "xmlparse.c"
        var $40=$39+464; //@line 1728 "xmlparse.c"
        var $41=$40+4; //@line 1728 "xmlparse.c"
        var $42=HEAP[$41]; //@line 1728 "xmlparse.c"
        var $43=($42)!=0; //@line 1728 "xmlparse.c"
        if ($43) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1728 "xmlparse.c"
      case 7: // $bb6
        var $44=$parser_addr; //@line 1729 "xmlparse.c"
        var $45=$44+464; //@line 1729 "xmlparse.c"
        var $46=$45; //@line 1729 "xmlparse.c"
        HEAP[$46]=2; //@line 1729 "xmlparse.c"
        var $47=$result; //@line 1730 "xmlparse.c"
        $0=$47; //@line 1730 "xmlparse.c"
        __label__ = 9; break; //@line 1730 "xmlparse.c"
      case 8: // $bb7
        var $48=$parser_addr; //@line 1736 "xmlparse.c"
        var $49=$48+144; //@line 1736 "xmlparse.c"
        var $50=HEAP[$49]; //@line 1736 "xmlparse.c"
        var $51=$50+48; //@line 1736 "xmlparse.c"
        var $52=HEAP[$51]; //@line 1736 "xmlparse.c"
        var $53=$parser_addr; //@line 1736 "xmlparse.c"
        var $54=$53+392; //@line 1736 "xmlparse.c"
        var $55=$parser_addr; //@line 1736 "xmlparse.c"
        var $56=$55+24; //@line 1736 "xmlparse.c"
        var $57=HEAP[$56]; //@line 1736 "xmlparse.c"
        var $58=$parser_addr; //@line 1736 "xmlparse.c"
        var $59=$58+280; //@line 1736 "xmlparse.c"
        var $60=HEAP[$59]; //@line 1736 "xmlparse.c"
        var $61=$parser_addr; //@line 1736 "xmlparse.c"
        var $62=$61+144; //@line 1736 "xmlparse.c"
        var $63=HEAP[$62]; //@line 1736 "xmlparse.c"
        FUNCTION_TABLE[$52]($63, $60, $57, $54); //@line 1736 "xmlparse.c"
        var $64=$parser_addr; //@line 1737 "xmlparse.c"
        var $65=$64+24; //@line 1737 "xmlparse.c"
        var $66=HEAP[$65]; //@line 1737 "xmlparse.c"
        var $67=$parser_addr; //@line 1737 "xmlparse.c"
        var $68=$67+280; //@line 1737 "xmlparse.c"
        HEAP[$68]=$66; //@line 1737 "xmlparse.c"
        var $69=$result; //@line 1738 "xmlparse.c"
        $0=$69; //@line 1738 "xmlparse.c"
        __label__ = 9; break; //@line 1738 "xmlparse.c"
      case 9: // $bb8
        var $70=$0; //@line 1710 "xmlparse.c"
        $retval=$70; //@line 1710 "xmlparse.c"
        var $retval9=$retval; //@line 1710 "xmlparse.c"
        ;
        return $retval9; //@line 1710 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetParsingStatus($parser, $status) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $status_addr;
        var $0=__stackBase__;
        $parser_addr=$parser;
        $status_addr=$status;
        var $1=$status_addr; //@line 1744 "xmlparse.c"
        var $2=($1)==0; //@line 1744 "xmlparse.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1744 "xmlparse.c"
      case 1: // $bb
        ___assert_fail(__str188, __str1189, 1744, ___PRETTY_FUNCTION___3675); //@line 1744 "xmlparse.c"
        throw "Reached an unreachable!" //@line 1744 "xmlparse.c"
      case 2: // $bb1
        var $3=$parser_addr; //@line 1745 "xmlparse.c"
        var $4=$3+464; //@line 1745 "xmlparse.c"
        var $5=$0; //@line 1745 "xmlparse.c"
        var $6=$4; //@line 1745 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1745 "xmlparse.c"
        HEAP[$5]=$7; //@line 1745 "xmlparse.c"
        var $8=$0+4; //@line 1745 "xmlparse.c"
        var $9=$4+4; //@line 1745 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1745 "xmlparse.c"
        HEAP[$8]=$10; //@line 1745 "xmlparse.c"
        var $11=$status_addr; //@line 1745 "xmlparse.c"
        var $12=$11; //@line 1745 "xmlparse.c"
        var $13=$0; //@line 1745 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1745 "xmlparse.c"
        HEAP[$12]=$14; //@line 1745 "xmlparse.c"
        var $15=$11+4; //@line 1745 "xmlparse.c"
        var $16=$0+4; //@line 1745 "xmlparse.c"
        var $17=HEAP[$16]; //@line 1745 "xmlparse.c"
        HEAP[$15]=$17; //@line 1745 "xmlparse.c"
        STACKTOP = __stackBase__;
        return; //@line 1746 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetErrorCode($parser) {
    ;
    var __label__;
  
    var $parser_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    var $1=$parser_addr; //@line 1751 "xmlparse.c"
    var $2=$1+268; //@line 1751 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1751 "xmlparse.c"
    $0=$3; //@line 1751 "xmlparse.c"
    var $4=$0; //@line 1751 "xmlparse.c"
    $retval=$4; //@line 1751 "xmlparse.c"
    var $retval1=$retval; //@line 1751 "xmlparse.c"
    ;
    return $retval1; //@line 1751 "xmlparse.c"
  }
  

  function _PyExpat_XML_GetCurrentByteIndex($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1757 "xmlparse.c"
        var $2=$1+272; //@line 1757 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1757 "xmlparse.c"
        var $4=($3)!=0; //@line 1757 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1757 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 1758 "xmlparse.c"
        var $6=$5+36; //@line 1758 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1758 "xmlparse.c"
        var $8=$parser_addr; //@line 1758 "xmlparse.c"
        var $9=$8+40; //@line 1758 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1758 "xmlparse.c"
        var $11=($10); //@line 1758 "xmlparse.c"
        var $12=$parser_addr; //@line 1758 "xmlparse.c"
        var $13=$12+272; //@line 1758 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1758 "xmlparse.c"
        var $15=($14); //@line 1758 "xmlparse.c"
        var $_neg=0 - ($15);
        var $_neg1=0 - ($11);
        var $_neg_neg=0 - ($_neg);
        var $_neg2=($_neg1) + ($7);
        var $16=($_neg2) + ($_neg_neg);
        $0=$16; //@line 1758 "xmlparse.c"
        __label__ = 3; break; //@line 1758 "xmlparse.c"
      case 2: // $bb1
        $0=-1; //@line 1759 "xmlparse.c"
        __label__ = 3; break; //@line 1759 "xmlparse.c"
      case 3: // $bb2
        var $17=$0; //@line 1758 "xmlparse.c"
        $retval=$17; //@line 1758 "xmlparse.c"
        var $retval3=$retval; //@line 1758 "xmlparse.c"
        ;
        return $retval3; //@line 1758 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetCurrentByteCount($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1765 "xmlparse.c"
        var $2=$1+276; //@line 1765 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1765 "xmlparse.c"
        var $4=($3)!=0; //@line 1765 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 1765 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 1765 "xmlparse.c"
        var $6=$5+272; //@line 1765 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1765 "xmlparse.c"
        var $8=($7)!=0; //@line 1765 "xmlparse.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1765 "xmlparse.c"
      case 2: // $bb1
        var $9=$parser_addr; //@line 1766 "xmlparse.c"
        var $10=$9+276; //@line 1766 "xmlparse.c"
        var $11=HEAP[$10]; //@line 1766 "xmlparse.c"
        var $12=($11); //@line 1766 "xmlparse.c"
        var $13=$parser_addr; //@line 1766 "xmlparse.c"
        var $14=$13+272; //@line 1766 "xmlparse.c"
        var $15=HEAP[$14]; //@line 1766 "xmlparse.c"
        var $16=($15); //@line 1766 "xmlparse.c"
        var $17=($12) - ($16); //@line 1766 "xmlparse.c"
        $0=$17; //@line 1766 "xmlparse.c"
        __label__ = 4; break; //@line 1766 "xmlparse.c"
      case 3: // $bb2
        $0=0; //@line 1767 "xmlparse.c"
        __label__ = 4; break; //@line 1767 "xmlparse.c"
      case 4: // $bb3
        var $18=$0; //@line 1766 "xmlparse.c"
        $retval=$18; //@line 1766 "xmlparse.c"
        var $retval4=$retval; //@line 1766 "xmlparse.c"
        ;
        return $retval4; //@line 1766 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetInputContext($parser, $offset, $size) {
    ;
    var __label__;
  
    var $parser_addr;
    var $offset_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $offset_addr=$offset;
    $0=0; //@line 1780 "xmlparse.c"
    var $1=$0; //@line 1780 "xmlparse.c"
    $retval=$1; //@line 1780 "xmlparse.c"
    var $retval1=$retval; //@line 1780 "xmlparse.c"
    ;
    return $retval1; //@line 1780 "xmlparse.c"
  }
  

  function _PyExpat_XML_GetCurrentLineNumber($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1786 "xmlparse.c"
        var $2=$1+272; //@line 1786 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1786 "xmlparse.c"
        var $4=($3)!=0; //@line 1786 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 1786 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 1786 "xmlparse.c"
        var $6=$5+272; //@line 1786 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1786 "xmlparse.c"
        var $8=$parser_addr; //@line 1786 "xmlparse.c"
        var $9=$8+280; //@line 1786 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1786 "xmlparse.c"
        var $11=($7) >= ($10); //@line 1786 "xmlparse.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1786 "xmlparse.c"
      case 2: // $bb1
        var $12=$parser_addr; //@line 1787 "xmlparse.c"
        var $13=$12+144; //@line 1787 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1787 "xmlparse.c"
        var $15=$14+48; //@line 1787 "xmlparse.c"
        var $16=HEAP[$15]; //@line 1787 "xmlparse.c"
        var $17=$parser_addr; //@line 1787 "xmlparse.c"
        var $18=$17+392; //@line 1787 "xmlparse.c"
        var $19=$parser_addr; //@line 1787 "xmlparse.c"
        var $20=$19+272; //@line 1787 "xmlparse.c"
        var $21=HEAP[$20]; //@line 1787 "xmlparse.c"
        var $22=$parser_addr; //@line 1787 "xmlparse.c"
        var $23=$22+280; //@line 1787 "xmlparse.c"
        var $24=HEAP[$23]; //@line 1787 "xmlparse.c"
        var $25=$parser_addr; //@line 1787 "xmlparse.c"
        var $26=$25+144; //@line 1787 "xmlparse.c"
        var $27=HEAP[$26]; //@line 1787 "xmlparse.c"
        FUNCTION_TABLE[$16]($27, $24, $21, $18); //@line 1787 "xmlparse.c"
        var $28=$parser_addr; //@line 1788 "xmlparse.c"
        var $29=$28+272; //@line 1788 "xmlparse.c"
        var $30=HEAP[$29]; //@line 1788 "xmlparse.c"
        var $31=$parser_addr; //@line 1788 "xmlparse.c"
        var $32=$31+280; //@line 1788 "xmlparse.c"
        HEAP[$32]=$30; //@line 1788 "xmlparse.c"
        __label__ = 3; break; //@line 1788 "xmlparse.c"
      case 3: // $bb2
        var $33=$parser_addr; //@line 1790 "xmlparse.c"
        var $34=$33+392; //@line 1790 "xmlparse.c"
        var $35=$34; //@line 1790 "xmlparse.c"
        var $36=HEAP[$35]; //@line 1790 "xmlparse.c"
        var $37=($36) + 1; //@line 1790 "xmlparse.c"
        $0=$37; //@line 1790 "xmlparse.c"
        var $38=$0; //@line 1790 "xmlparse.c"
        $retval=$38; //@line 1790 "xmlparse.c"
        var $retval3=$retval; //@line 1790 "xmlparse.c"
        ;
        return $retval3; //@line 1790 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_GetCurrentColumnNumber($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1796 "xmlparse.c"
        var $2=$1+272; //@line 1796 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1796 "xmlparse.c"
        var $4=($3)!=0; //@line 1796 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 1796 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 1796 "xmlparse.c"
        var $6=$5+272; //@line 1796 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1796 "xmlparse.c"
        var $8=$parser_addr; //@line 1796 "xmlparse.c"
        var $9=$8+280; //@line 1796 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1796 "xmlparse.c"
        var $11=($7) >= ($10); //@line 1796 "xmlparse.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1796 "xmlparse.c"
      case 2: // $bb1
        var $12=$parser_addr; //@line 1797 "xmlparse.c"
        var $13=$12+144; //@line 1797 "xmlparse.c"
        var $14=HEAP[$13]; //@line 1797 "xmlparse.c"
        var $15=$14+48; //@line 1797 "xmlparse.c"
        var $16=HEAP[$15]; //@line 1797 "xmlparse.c"
        var $17=$parser_addr; //@line 1797 "xmlparse.c"
        var $18=$17+392; //@line 1797 "xmlparse.c"
        var $19=$parser_addr; //@line 1797 "xmlparse.c"
        var $20=$19+272; //@line 1797 "xmlparse.c"
        var $21=HEAP[$20]; //@line 1797 "xmlparse.c"
        var $22=$parser_addr; //@line 1797 "xmlparse.c"
        var $23=$22+280; //@line 1797 "xmlparse.c"
        var $24=HEAP[$23]; //@line 1797 "xmlparse.c"
        var $25=$parser_addr; //@line 1797 "xmlparse.c"
        var $26=$25+144; //@line 1797 "xmlparse.c"
        var $27=HEAP[$26]; //@line 1797 "xmlparse.c"
        FUNCTION_TABLE[$16]($27, $24, $21, $18); //@line 1797 "xmlparse.c"
        var $28=$parser_addr; //@line 1798 "xmlparse.c"
        var $29=$28+272; //@line 1798 "xmlparse.c"
        var $30=HEAP[$29]; //@line 1798 "xmlparse.c"
        var $31=$parser_addr; //@line 1798 "xmlparse.c"
        var $32=$31+280; //@line 1798 "xmlparse.c"
        HEAP[$32]=$30; //@line 1798 "xmlparse.c"
        __label__ = 3; break; //@line 1798 "xmlparse.c"
      case 3: // $bb2
        var $33=$parser_addr; //@line 1800 "xmlparse.c"
        var $34=$33+392; //@line 1800 "xmlparse.c"
        var $35=$34+4; //@line 1800 "xmlparse.c"
        var $36=HEAP[$35]; //@line 1800 "xmlparse.c"
        $0=$36; //@line 1800 "xmlparse.c"
        var $37=$0; //@line 1800 "xmlparse.c"
        $retval=$37; //@line 1800 "xmlparse.c"
        var $retval3=$retval; //@line 1800 "xmlparse.c"
        ;
        return $retval3; //@line 1800 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_FreeContentModel($parser, $model) {
    ;
    var __label__;
  
    var $parser_addr;
    var $model_addr;
    $parser_addr=$parser;
    $model_addr=$model;
    var $0=$parser_addr; //@line 1806 "xmlparse.c"
    var $1=$0+12; //@line 1806 "xmlparse.c"
    var $2=$1+8; //@line 1806 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1806 "xmlparse.c"
    var $4=$model_addr; //@line 1806 "xmlparse.c"
    var $5=$4; //@line 1806 "xmlparse.c"
    FUNCTION_TABLE[$3]($5); //@line 1806 "xmlparse.c"
    ;
    return; //@line 1807 "xmlparse.c"
  }
  

  function _PyExpat_XML_MemMalloc($parser, $size) {
    ;
    var __label__;
  
    var $parser_addr;
    var $size_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $size_addr=$size;
    var $1=$parser_addr; //@line 1812 "xmlparse.c"
    var $2=$1+12; //@line 1812 "xmlparse.c"
    var $3=$2; //@line 1812 "xmlparse.c"
    var $4=HEAP[$3]; //@line 1812 "xmlparse.c"
    var $5=$size_addr; //@line 1812 "xmlparse.c"
    var $6=FUNCTION_TABLE[$4]($5); //@line 1812 "xmlparse.c"
    $0=$6; //@line 1812 "xmlparse.c"
    var $7=$0; //@line 1812 "xmlparse.c"
    $retval=$7; //@line 1812 "xmlparse.c"
    var $retval1=$retval; //@line 1812 "xmlparse.c"
    ;
    return $retval1; //@line 1812 "xmlparse.c"
  }
  

  function _PyExpat_XML_MemRealloc($parser, $ptr, $size) {
    ;
    var __label__;
  
    var $parser_addr;
    var $ptr_addr;
    var $size_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $ptr_addr=$ptr;
    $size_addr=$size;
    var $1=$parser_addr; //@line 1818 "xmlparse.c"
    var $2=$1+12; //@line 1818 "xmlparse.c"
    var $3=$2+4; //@line 1818 "xmlparse.c"
    var $4=HEAP[$3]; //@line 1818 "xmlparse.c"
    var $5=$ptr_addr; //@line 1818 "xmlparse.c"
    var $6=$size_addr; //@line 1818 "xmlparse.c"
    var $7=FUNCTION_TABLE[$4]($5, $6); //@line 1818 "xmlparse.c"
    $0=$7; //@line 1818 "xmlparse.c"
    var $8=$0; //@line 1818 "xmlparse.c"
    $retval=$8; //@line 1818 "xmlparse.c"
    var $retval1=$retval; //@line 1818 "xmlparse.c"
    ;
    return $retval1; //@line 1818 "xmlparse.c"
  }
  

  function _PyExpat_XML_MemFree($parser, $ptr) {
    ;
    var __label__;
  
    var $parser_addr;
    var $ptr_addr;
    $parser_addr=$parser;
    $ptr_addr=$ptr;
    var $0=$parser_addr; //@line 1824 "xmlparse.c"
    var $1=$0+12; //@line 1824 "xmlparse.c"
    var $2=$1+8; //@line 1824 "xmlparse.c"
    var $3=HEAP[$2]; //@line 1824 "xmlparse.c"
    var $4=$ptr_addr; //@line 1824 "xmlparse.c"
    FUNCTION_TABLE[$3]($4); //@line 1824 "xmlparse.c"
    ;
    return; //@line 1825 "xmlparse.c"
  }
  

  function _PyExpat_XML_DefaultCurrent($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        $parser_addr=$parser;
        var $0=$parser_addr; //@line 1830 "xmlparse.c"
        var $1=$0+80; //@line 1830 "xmlparse.c"
        var $2=HEAP[$1]; //@line 1830 "xmlparse.c"
        var $3=($2)!=0; //@line 1830 "xmlparse.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 1830 "xmlparse.c"
      case 1: // $bb
        var $4=$parser_addr; //@line 1831 "xmlparse.c"
        var $5=$4+284; //@line 1831 "xmlparse.c"
        var $6=HEAP[$5]; //@line 1831 "xmlparse.c"
        var $7=($6)!=0; //@line 1831 "xmlparse.c"
        var $8=$parser_addr; //@line 1832 "xmlparse.c"
        if ($7) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1831 "xmlparse.c"
      case 2: // $bb1
        var $9=$8+284; //@line 1832 "xmlparse.c"
        var $10=HEAP[$9]; //@line 1832 "xmlparse.c"
        var $11=$10+4; //@line 1832 "xmlparse.c"
        var $12=HEAP[$11]; //@line 1832 "xmlparse.c"
        var $13=$parser_addr; //@line 1832 "xmlparse.c"
        var $14=$13+284; //@line 1832 "xmlparse.c"
        var $15=HEAP[$14]; //@line 1832 "xmlparse.c"
        var $16=$15; //@line 1832 "xmlparse.c"
        var $17=HEAP[$16]; //@line 1832 "xmlparse.c"
        var $18=$parser_addr; //@line 1832 "xmlparse.c"
        var $19=$18+224; //@line 1832 "xmlparse.c"
        var $20=HEAP[$19]; //@line 1832 "xmlparse.c"
        var $21=$parser_addr; //@line 1832 "xmlparse.c"
        _reportDefault($21, $20, $17, $12); //@line 1832 "xmlparse.c"
        __label__ = 4; break; //@line 1832 "xmlparse.c"
      case 3: // $bb2
        var $22=$8+276; //@line 1837 "xmlparse.c"
        var $23=HEAP[$22]; //@line 1837 "xmlparse.c"
        var $24=$parser_addr; //@line 1837 "xmlparse.c"
        var $25=$24+272; //@line 1837 "xmlparse.c"
        var $26=HEAP[$25]; //@line 1837 "xmlparse.c"
        var $27=$parser_addr; //@line 1837 "xmlparse.c"
        var $28=$27+144; //@line 1837 "xmlparse.c"
        var $29=HEAP[$28]; //@line 1837 "xmlparse.c"
        var $30=$parser_addr; //@line 1837 "xmlparse.c"
        _reportDefault($30, $29, $26, $23); //@line 1837 "xmlparse.c"
        __label__ = 4; break; //@line 1837 "xmlparse.c"
      case 4: // $return
        ;
        return; //@line 1839 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ErrorString($code) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $code_addr;
        var $retval;
        var $0;
        $code_addr=$code;
        var $1=$code_addr; //@line 1887 "xmlparse.c"
        var $2=($1)!=0; //@line 1887 "xmlparse.c"
        var $3=$code_addr; //@line 1887 "xmlparse.c"
        var $4=($3) <= 40; //@line 1887 "xmlparse.c"
        var $or_cond=($2) & ($4);
        if ($or_cond) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1887 "xmlparse.c"
      case 1: // $bb1
        var $5=$code_addr; //@line 1888 "xmlparse.c"
        var $6=_message_3807+$5*4; //@line 1888 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1888 "xmlparse.c"
        $0=$7; //@line 1888 "xmlparse.c"
        __label__ = 3; break; //@line 1888 "xmlparse.c"
      case 2: // $bb2
        $0=0; //@line 1889 "xmlparse.c"
        __label__ = 3; break; //@line 1889 "xmlparse.c"
      case 3: // $bb3
        var $8=$0; //@line 1888 "xmlparse.c"
        $retval=$8; //@line 1888 "xmlparse.c"
        var $retval4=$retval; //@line 1888 "xmlparse.c"
        ;
        return $retval4; //@line 1888 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XML_ExpatVersion() {
    ;
    var __label__;
  
    var $retval;
    var $0;
    $0=__str42230; //@line 1906 "xmlparse.c"
    var $1=$0; //@line 1906 "xmlparse.c"
    $retval=$1; //@line 1906 "xmlparse.c"
    var $retval1=$retval; //@line 1906 "xmlparse.c"
    ;
    return $retval1; //@line 1906 "xmlparse.c"
  }
  

  function _PyExpat_XML_ExpatVersionInfo($agg_result) {
    var __stackBase__  = STACKTOP; STACKTOP += 12; _memset(__stackBase__, 0, 12);
    var __label__;
  
    var $version=__stackBase__;
    var $0=$version; //@line 1917 "xmlparse.c"
    HEAP[$0]=2; //@line 1917 "xmlparse.c"
    var $1=$version+4; //@line 1918 "xmlparse.c"
    HEAP[$1]=0; //@line 1918 "xmlparse.c"
    var $2=$version+8; //@line 1919 "xmlparse.c"
    HEAP[$2]=0; //@line 1919 "xmlparse.c"
    var $3=$agg_result; //@line 1921 "xmlparse.c"
    var $4=$version; //@line 1921 "xmlparse.c"
    var $5=HEAP[$4]; //@line 1921 "xmlparse.c"
    HEAP[$3]=$5; //@line 1921 "xmlparse.c"
    var $6=$agg_result+4; //@line 1921 "xmlparse.c"
    var $7=$version+4; //@line 1921 "xmlparse.c"
    var $8=HEAP[$7]; //@line 1921 "xmlparse.c"
    HEAP[$6]=$8; //@line 1921 "xmlparse.c"
    var $9=$agg_result+8; //@line 1921 "xmlparse.c"
    var $10=$version+8; //@line 1921 "xmlparse.c"
    var $11=HEAP[$10]; //@line 1921 "xmlparse.c"
    HEAP[$9]=$11; //@line 1921 "xmlparse.c"
    STACKTOP = __stackBase__;
    return; //@line 1921 "xmlparse.c"
  }
  

  function _PyExpat_XML_GetFeatureList() {
    ;
    var __label__;
  
    var $retval;
    var $0;
    $0=_features_3829; //@line 1954 "xmlparse.c"
    var $1=$0; //@line 1954 "xmlparse.c"
    $retval=$1; //@line 1954 "xmlparse.c"
    var $retval1=$retval; //@line 1954 "xmlparse.c"
    ;
    return $retval1; //@line 1954 "xmlparse.c"
  }
  

  function _storeRawNames($parser) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        var $tag;
        var $bufSize;
        var $nameLen;
        var $rawNameBuf;
        var $temp;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 1965 "xmlparse.c"
        var $2=$1+348; //@line 1965 "xmlparse.c"
        var $3=HEAP[$2]; //@line 1965 "xmlparse.c"
        $tag=$3; //@line 1965 "xmlparse.c"
        __lastLabel__ = -1; __label__ = 11; break; //@line 1965 "xmlparse.c"
      case 1: // $bb
        var $4=$tag; //@line 1968 "xmlparse.c"
        var $5=$4+12; //@line 1968 "xmlparse.c"
        var $6=$5+12; //@line 1968 "xmlparse.c"
        var $7=HEAP[$6]; //@line 1968 "xmlparse.c"
        var $8=($7) + 1; //@line 1968 "xmlparse.c"
        $nameLen=$8; //@line 1968 "xmlparse.c"
        var $9=$tag; //@line 1969 "xmlparse.c"
        var $10=$9+36; //@line 1969 "xmlparse.c"
        var $11=HEAP[$10]; //@line 1969 "xmlparse.c"
        var $12=$nameLen; //@line 1969 "xmlparse.c"
        var $13=$11+$12; //@line 1969 "xmlparse.c"
        $rawNameBuf=$13; //@line 1969 "xmlparse.c"
        var $14=$tag; //@line 1975 "xmlparse.c"
        var $15=$14+4; //@line 1975 "xmlparse.c"
        var $16=HEAP[$15]; //@line 1975 "xmlparse.c"
        var $17=$rawNameBuf; //@line 1975 "xmlparse.c"
        var $18=($16)==($17); //@line 1975 "xmlparse.c"
        if ($18) { __label__ = 12; break; } else { __label__ = 2; break; } //@line 1975 "xmlparse.c"
      case 2: // $bb1
        var $19=$tag; //@line 1980 "xmlparse.c"
        var $20=$19+8; //@line 1980 "xmlparse.c"
        var $21=HEAP[$20]; //@line 1980 "xmlparse.c"
        var $22=$nameLen; //@line 1980 "xmlparse.c"
        var $23=($22) + ($21); //@line 1980 "xmlparse.c"
        $bufSize=$23; //@line 1980 "xmlparse.c"
        var $24=$tag; //@line 1981 "xmlparse.c"
        var $25=$24+40; //@line 1981 "xmlparse.c"
        var $26=HEAP[$25]; //@line 1981 "xmlparse.c"
        var $27=($26); //@line 1981 "xmlparse.c"
        var $28=$tag; //@line 1981 "xmlparse.c"
        var $29=$28+36; //@line 1981 "xmlparse.c"
        var $30=HEAP[$29]; //@line 1981 "xmlparse.c"
        var $31=($30); //@line 1981 "xmlparse.c"
        var $32=($27) - ($31); //@line 1981 "xmlparse.c"
        var $33=$bufSize; //@line 1981 "xmlparse.c"
        var $34=($32) < ($33); //@line 1981 "xmlparse.c"
        if ($34) { __label__ = 3; break; } else { __label__ = 10; break; } //@line 1981 "xmlparse.c"
      case 3: // $bb2
        var $35=$parser_addr; //@line 1982 "xmlparse.c"
        var $36=$35+12; //@line 1982 "xmlparse.c"
        var $37=$36+4; //@line 1982 "xmlparse.c"
        var $38=HEAP[$37]; //@line 1982 "xmlparse.c"
        var $39=$bufSize; //@line 1982 "xmlparse.c"
        var $40=$tag; //@line 1982 "xmlparse.c"
        var $41=$40+36; //@line 1982 "xmlparse.c"
        var $42=HEAP[$41]; //@line 1982 "xmlparse.c"
        var $43=FUNCTION_TABLE[$38]($42, $39); //@line 1982 "xmlparse.c"
        $temp=$43; //@line 1982 "xmlparse.c"
        var $44=$temp; //@line 1983 "xmlparse.c"
        var $45=($44)==0; //@line 1983 "xmlparse.c"
        if ($45) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1983 "xmlparse.c"
      case 4: // $bb3
        $0=0; //@line 1984 "xmlparse.c"
        __label__ = 13; break; //@line 1984 "xmlparse.c"
      case 5: // $bb4
        var $46=$tag; //@line 1988 "xmlparse.c"
        var $47=$46+12; //@line 1988 "xmlparse.c"
        var $48=$47; //@line 1988 "xmlparse.c"
        var $49=HEAP[$48]; //@line 1988 "xmlparse.c"
        var $50=$tag; //@line 1988 "xmlparse.c"
        var $51=$50+36; //@line 1988 "xmlparse.c"
        var $52=HEAP[$51]; //@line 1988 "xmlparse.c"
        var $53=($49)==($52); //@line 1988 "xmlparse.c"
        if ($53) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1988 "xmlparse.c"
      case 6: // $bb5
        var $54=$tag; //@line 1989 "xmlparse.c"
        var $55=$54+12; //@line 1989 "xmlparse.c"
        var $56=$55; //@line 1989 "xmlparse.c"
        var $57=$temp; //@line 1989 "xmlparse.c"
        HEAP[$56]=$57; //@line 1989 "xmlparse.c"
        __label__ = 7; break; //@line 1989 "xmlparse.c"
      case 7: // $bb6
        var $58=$tag; //@line 1993 "xmlparse.c"
        var $59=$58+12; //@line 1993 "xmlparse.c"
        var $60=$59+4; //@line 1993 "xmlparse.c"
        var $61=HEAP[$60]; //@line 1993 "xmlparse.c"
        var $62=($61)!=0; //@line 1993 "xmlparse.c"
        if ($62) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1993 "xmlparse.c"
      case 8: // $bb7
        var $63=$tag; //@line 1994 "xmlparse.c"
        var $64=$63+12; //@line 1994 "xmlparse.c"
        var $65=$64+4; //@line 1994 "xmlparse.c"
        var $66=HEAP[$65]; //@line 1994 "xmlparse.c"
        var $67=($66); //@line 1994 "xmlparse.c"
        var $68=$tag; //@line 1994 "xmlparse.c"
        var $69=$68+36; //@line 1994 "xmlparse.c"
        var $70=HEAP[$69]; //@line 1994 "xmlparse.c"
        var $71=($70); //@line 1994 "xmlparse.c"
        var $72=($67) - ($71); //@line 1994 "xmlparse.c"
        var $73=$temp; //@line 1994 "xmlparse.c"
        var $74=$73+$72; //@line 1994 "xmlparse.c"
        var $75=$tag; //@line 1994 "xmlparse.c"
        var $76=$75+12; //@line 1994 "xmlparse.c"
        var $77=$76+4; //@line 1994 "xmlparse.c"
        HEAP[$77]=$74; //@line 1994 "xmlparse.c"
        __label__ = 9; break; //@line 1994 "xmlparse.c"
      case 9: // $bb8
        var $78=$tag; //@line 1996 "xmlparse.c"
        var $79=$78+36; //@line 1996 "xmlparse.c"
        var $80=$temp; //@line 1996 "xmlparse.c"
        HEAP[$79]=$80; //@line 1996 "xmlparse.c"
        var $81=$temp; //@line 1997 "xmlparse.c"
        var $82=$bufSize; //@line 1997 "xmlparse.c"
        var $83=$81+$82; //@line 1997 "xmlparse.c"
        var $84=$tag; //@line 1997 "xmlparse.c"
        var $85=$84+40; //@line 1997 "xmlparse.c"
        HEAP[$85]=$83; //@line 1997 "xmlparse.c"
        var $86=$temp; //@line 1998 "xmlparse.c"
        var $87=$nameLen; //@line 1998 "xmlparse.c"
        var $88=$86+$87; //@line 1998 "xmlparse.c"
        $rawNameBuf=$88; //@line 1998 "xmlparse.c"
        __label__ = 10; break; //@line 1998 "xmlparse.c"
      case 10: // $bb9
        var $89=$tag; //@line 2000 "xmlparse.c"
        var $90=$89+8; //@line 2000 "xmlparse.c"
        var $91=HEAP[$90]; //@line 2000 "xmlparse.c"
        var $92=$tag; //@line 2000 "xmlparse.c"
        var $93=$92+4; //@line 2000 "xmlparse.c"
        var $94=HEAP[$93]; //@line 2000 "xmlparse.c"
        var $95=$rawNameBuf; //@line 2000 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($95, $94, $91, 1, 0); //@line 2000 "xmlparse.c"
        var $96=$tag; //@line 2001 "xmlparse.c"
        var $97=$96+4; //@line 2001 "xmlparse.c"
        var $98=$rawNameBuf; //@line 2001 "xmlparse.c"
        HEAP[$97]=$98; //@line 2001 "xmlparse.c"
        var $99=$tag; //@line 2002 "xmlparse.c"
        var $100=$99; //@line 2002 "xmlparse.c"
        var $101=HEAP[$100]; //@line 2002 "xmlparse.c"
        $tag=$101; //@line 2002 "xmlparse.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 2002 "xmlparse.c"
      case 11: // $bb10
        var $102=__lastLabel__ == 10 ? $101 : ($3);
        var $103=($102)!=0; //@line 1966 "xmlparse.c"
        if ($103) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 1966 "xmlparse.c"
      case 12: // $bb11
        $0=1; //@line 2004 "xmlparse.c"
        __label__ = 13; break; //@line 2004 "xmlparse.c"
      case 13: // $bb12
        var $104=$0; //@line 1984 "xmlparse.c"
        $retval=$104; //@line 1984 "xmlparse.c"
        var $retval13=$retval; //@line 1984 "xmlparse.c"
        var $retval1314=((($retval13)) & 255); //@line 1984 "xmlparse.c"
        ;
        return $retval1314; //@line 1984 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _contentProcessor($parser, $start, $end, $endPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $start_addr;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $0;
        var $result;
        $parser_addr=$parser;
        $start_addr=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $1=$parser_addr; //@line 2014 "xmlparse.c"
        var $2=$1+464; //@line 2014 "xmlparse.c"
        var $3=$2+4; //@line 2014 "xmlparse.c"
        var $4=HEAP[$3]; //@line 2014 "xmlparse.c"
        var $5=($4)==0; //@line 2014 "xmlparse.c"
        var $6=($5); //@line 2014 "xmlparse.c"
        var $7=$parser_addr; //@line 2014 "xmlparse.c"
        var $8=$7+144; //@line 2014 "xmlparse.c"
        var $9=HEAP[$8]; //@line 2014 "xmlparse.c"
        var $10=$parser_addr; //@line 2014 "xmlparse.c"
        var $11=$start_addr; //@line 2014 "xmlparse.c"
        var $12=$end_addr; //@line 2014 "xmlparse.c"
        var $13=$endPtr_addr; //@line 2014 "xmlparse.c"
        var $14=((($6)) & 255); //@line 2014 "xmlparse.c"
        var $15=_doContent($10, 0, $9, $11, $12, $13, $14); //@line 2014 "xmlparse.c"
        $result=$15; //@line 2014 "xmlparse.c"
        var $16=$result; //@line 2015 "xmlparse.c"
        var $17=($16)==0; //@line 2015 "xmlparse.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 2015 "xmlparse.c"
      case 1: // $bb
        var $18=$parser_addr; //@line 2016 "xmlparse.c"
        var $19=_storeRawNames($18); //@line 2016 "xmlparse.c"
        var $20=($19)==0; //@line 2016 "xmlparse.c"
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2016 "xmlparse.c"
      case 2: // $bb1
        $0=1; //@line 2017 "xmlparse.c"
        __label__ = 4; break; //@line 2017 "xmlparse.c"
      case 3: // $bb2
        var $21=$result; //@line 2019 "xmlparse.c"
        $0=$21; //@line 2019 "xmlparse.c"
        __label__ = 4; break; //@line 2019 "xmlparse.c"
      case 4: // $bb3
        var $22=$0; //@line 2017 "xmlparse.c"
        $retval=$22; //@line 2017 "xmlparse.c"
        var $retval4=$retval; //@line 2017 "xmlparse.c"
        ;
        return $retval4; //@line 2017 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _externalEntityInitProcessor($parser, $start, $end, $endPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr_i;
        var $retval_i;
        var $0;
        var $s_i;
        var $parser_addr;
        var $start_addr;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $1;
        var $result;
        $parser_addr=$parser;
        $start_addr=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $2=$parser_addr; //@line 2028 "xmlparse.c"
        $parser_addr_i=$2;
        var $3=$parser_addr_i; //@line 3290 "xmlparse.c"
        var $4=$3+228; //@line 3290 "xmlparse.c"
        var $5=HEAP[$4]; //@line 3290 "xmlparse.c"
        $s_i=$5; //@line 3290 "xmlparse.c"
        var $6=$parser_addr_i; //@line 3292 "xmlparse.c"
        var $7=$6+144; //@line 3292 "xmlparse.c"
        var $8=$parser_addr_i; //@line 3292 "xmlparse.c"
        var $9=$8+148; //@line 3292 "xmlparse.c"
        var $10=$s_i; //@line 3292 "xmlparse.c"
        var $11=_PyExpat_XmlInitEncoding($9, $7, $10); //@line 3292 "xmlparse.c"
        var $12=($11)!=0; //@line 3292 "xmlparse.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3292 "xmlparse.c"
      case 1: // $initializeEncoding_exit_thread
        $0=0; //@line 3293 "xmlparse.c"
        $retval_i=0; //@line 3293 "xmlparse.c"
        $result=0; //@line 2028 "xmlparse.c"
        __label__ = 4; break;
      case 2: // $initializeEncoding_exit
        var $13=$parser_addr_i; //@line 3294 "xmlparse.c"
        var $14=$13+228; //@line 3294 "xmlparse.c"
        var $15=HEAP[$14]; //@line 3294 "xmlparse.c"
        var $16=$parser_addr_i; //@line 3294 "xmlparse.c"
        var $17=_handleUnknownEncoding($16, $15); //@line 3294 "xmlparse.c"
        $0=$17; //@line 3294 "xmlparse.c"
        $retval_i=$17; //@line 3293 "xmlparse.c"
        $result=$17; //@line 2028 "xmlparse.c"
        var $18=($17)!=0; //@line 2029 "xmlparse.c"
        if ($18) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2029 "xmlparse.c"
      case 3: // $bb
        var $19=$result; //@line 2030 "xmlparse.c"
        $1=$19; //@line 2030 "xmlparse.c"
        __label__ = 5; break; //@line 2030 "xmlparse.c"
      case 4: // $bb1
        var $20=$parser_addr; //@line 2031 "xmlparse.c"
        var $21=$20+264; //@line 2031 "xmlparse.c"
        HEAP[$21]=(FUNCTION_TABLE_OFFSET + 56); //@line 2031 "xmlparse.c"
        var $22=$parser_addr; //@line 2032 "xmlparse.c"
        var $23=$start_addr; //@line 2032 "xmlparse.c"
        var $24=$end_addr; //@line 2032 "xmlparse.c"
        var $25=$endPtr_addr; //@line 2032 "xmlparse.c"
        var $26=_externalEntityInitProcessor2($22, $23, $24, $25); //@line 2032 "xmlparse.c"
        $1=$26; //@line 2032 "xmlparse.c"
        __label__ = 5; break; //@line 2032 "xmlparse.c"
      case 5: // $bb2
        var $27=$1; //@line 2030 "xmlparse.c"
        $retval=$27; //@line 2030 "xmlparse.c"
        var $retval3=$retval; //@line 2030 "xmlparse.c"
        ;
        return $retval3; //@line 2030 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _externalEntityInitProcessor2($parser, $start, $end, $endPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $start_addr;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $0;
        var $next=__stackBase__;
        var $tok;
        $parser_addr=$parser;
        $start_addr=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $1=$start_addr; //@line 2041 "xmlparse.c"
        HEAP[$next]=$1; //@line 2041 "xmlparse.c"
        var $2=$parser_addr; //@line 2042 "xmlparse.c"
        var $3=$2+144; //@line 2042 "xmlparse.c"
        var $4=HEAP[$3]; //@line 2042 "xmlparse.c"
        var $5=$4; //@line 2042 "xmlparse.c"
        var $6=$5+4; //@line 2042 "xmlparse.c"
        var $7=HEAP[$6]; //@line 2042 "xmlparse.c"
        var $8=$parser_addr; //@line 2042 "xmlparse.c"
        var $9=$8+144; //@line 2042 "xmlparse.c"
        var $10=HEAP[$9]; //@line 2042 "xmlparse.c"
        var $11=$start_addr; //@line 2042 "xmlparse.c"
        var $12=$end_addr; //@line 2042 "xmlparse.c"
        var $13=FUNCTION_TABLE[$7]($10, $11, $12, $next); //@line 2042 "xmlparse.c"
        $tok=$13; //@line 2042 "xmlparse.c"
        var $14=$tok; //@line 2043 "xmlparse.c"
        if ($14 == -2) {
          __label__ = 8; break;
        }
        else if ($14 == -1) {
          __label__ = 5; break;
        }
        else if ($14 == 14) {
          __label__ = 1; break;
        }
        else {
        __label__ = 11; break;
        }
        
      case 1: // $bb
        var $15=HEAP[$next]; //@line 2050 "xmlparse.c"
        var $16=$end_addr; //@line 2050 "xmlparse.c"
        var $17=($15)==($16); //@line 2050 "xmlparse.c"
        if ($17) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 2050 "xmlparse.c"
      case 2: // $bb1
        var $18=$parser_addr; //@line 2050 "xmlparse.c"
        var $19=$18+464; //@line 2050 "xmlparse.c"
        var $20=$19+4; //@line 2050 "xmlparse.c"
        var $21=HEAP[$20]; //@line 2050 "xmlparse.c"
        var $22=($21)==0; //@line 2050 "xmlparse.c"
        if ($22) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2050 "xmlparse.c"
      case 3: // $bb2
        var $23=HEAP[$next]; //@line 2051 "xmlparse.c"
        var $24=$endPtr_addr; //@line 2051 "xmlparse.c"
        HEAP[$24]=$23; //@line 2051 "xmlparse.c"
        $0=0; //@line 2052 "xmlparse.c"
        __label__ = 12; break; //@line 2052 "xmlparse.c"
      case 4: // $bb3
        var $25=HEAP[$next]; //@line 2054 "xmlparse.c"
        $start_addr=$25; //@line 2054 "xmlparse.c"
        __label__ = 11; break; //@line 2054 "xmlparse.c"
      case 5: // $bb4
        var $26=$parser_addr; //@line 2057 "xmlparse.c"
        var $27=$26+464; //@line 2057 "xmlparse.c"
        var $28=$27+4; //@line 2057 "xmlparse.c"
        var $29=HEAP[$28]; //@line 2057 "xmlparse.c"
        var $30=($29)==0; //@line 2057 "xmlparse.c"
        if ($30) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 2057 "xmlparse.c"
      case 6: // $bb5
        var $31=$endPtr_addr; //@line 2058 "xmlparse.c"
        var $32=$start_addr; //@line 2058 "xmlparse.c"
        HEAP[$31]=$32; //@line 2058 "xmlparse.c"
        $0=0; //@line 2059 "xmlparse.c"
        __label__ = 12; break; //@line 2059 "xmlparse.c"
      case 7: // $bb6
        var $33=$parser_addr; //@line 2061 "xmlparse.c"
        var $34=$33+272; //@line 2061 "xmlparse.c"
        var $35=$start_addr; //@line 2061 "xmlparse.c"
        HEAP[$34]=$35; //@line 2061 "xmlparse.c"
        $0=5; //@line 2062 "xmlparse.c"
        __label__ = 12; break; //@line 2062 "xmlparse.c"
      case 8: // $bb7
        var $36=$parser_addr; //@line 2064 "xmlparse.c"
        var $37=$36+464; //@line 2064 "xmlparse.c"
        var $38=$37+4; //@line 2064 "xmlparse.c"
        var $39=HEAP[$38]; //@line 2064 "xmlparse.c"
        var $40=($39)==0; //@line 2064 "xmlparse.c"
        if ($40) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 2064 "xmlparse.c"
      case 9: // $bb8
        var $41=$endPtr_addr; //@line 2065 "xmlparse.c"
        var $42=$start_addr; //@line 2065 "xmlparse.c"
        HEAP[$41]=$42; //@line 2065 "xmlparse.c"
        $0=0; //@line 2066 "xmlparse.c"
        __label__ = 12; break; //@line 2066 "xmlparse.c"
      case 10: // $bb9
        var $43=$parser_addr; //@line 2068 "xmlparse.c"
        var $44=$43+272; //@line 2068 "xmlparse.c"
        var $45=$start_addr; //@line 2068 "xmlparse.c"
        HEAP[$44]=$45; //@line 2068 "xmlparse.c"
        $0=6; //@line 2069 "xmlparse.c"
        __label__ = 12; break; //@line 2069 "xmlparse.c"
      case 11: // $bb10
        var $46=$parser_addr; //@line 2071 "xmlparse.c"
        var $47=$46+264; //@line 2071 "xmlparse.c"
        HEAP[$47]=(FUNCTION_TABLE_OFFSET + 58); //@line 2071 "xmlparse.c"
        var $48=$parser_addr; //@line 2072 "xmlparse.c"
        var $49=$start_addr; //@line 2072 "xmlparse.c"
        var $50=$end_addr; //@line 2072 "xmlparse.c"
        var $51=$endPtr_addr; //@line 2072 "xmlparse.c"
        var $52=_externalEntityInitProcessor3($48, $49, $50, $51); //@line 2072 "xmlparse.c"
        $0=$52; //@line 2072 "xmlparse.c"
        __label__ = 12; break; //@line 2072 "xmlparse.c"
      case 12: // $bb11
        var $53=$0; //@line 2052 "xmlparse.c"
        $retval=$53; //@line 2052 "xmlparse.c"
        var $retval12=$retval; //@line 2052 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval12; //@line 2052 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _externalEntityInitProcessor3($parser, $start, $end, $endPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $start_addr;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $0;
        var $tok;
        var $next=__stackBase__;
        var $result;
        $parser_addr=$parser;
        $start_addr=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $1=$start_addr; //@line 2082 "xmlparse.c"
        HEAP[$next]=$1; //@line 2082 "xmlparse.c"
        var $2=$parser_addr; //@line 2083 "xmlparse.c"
        var $3=$2+272; //@line 2083 "xmlparse.c"
        var $4=$start_addr; //@line 2083 "xmlparse.c"
        HEAP[$3]=$4; //@line 2083 "xmlparse.c"
        var $5=$parser_addr; //@line 2084 "xmlparse.c"
        var $6=$5+144; //@line 2084 "xmlparse.c"
        var $7=HEAP[$6]; //@line 2084 "xmlparse.c"
        var $8=$7; //@line 2084 "xmlparse.c"
        var $9=$8+4; //@line 2084 "xmlparse.c"
        var $10=HEAP[$9]; //@line 2084 "xmlparse.c"
        var $11=$parser_addr; //@line 2084 "xmlparse.c"
        var $12=$11+144; //@line 2084 "xmlparse.c"
        var $13=HEAP[$12]; //@line 2084 "xmlparse.c"
        var $14=$start_addr; //@line 2084 "xmlparse.c"
        var $15=$end_addr; //@line 2084 "xmlparse.c"
        var $16=FUNCTION_TABLE[$10]($13, $14, $15, $next); //@line 2084 "xmlparse.c"
        $tok=$16; //@line 2084 "xmlparse.c"
        var $17=HEAP[$next]; //@line 2085 "xmlparse.c"
        var $18=$parser_addr; //@line 2085 "xmlparse.c"
        var $19=$18+276; //@line 2085 "xmlparse.c"
        HEAP[$19]=$17; //@line 2085 "xmlparse.c"
        var $20=$tok; //@line 2087 "xmlparse.c"
        if ($20 == -2) {
          __label__ = 10; break;
        }
        else if ($20 == -1) {
          __label__ = 7; break;
        }
        else if ($20 == 12) {
          __label__ = 1; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 1: // $bb
        var $21=HEAP[$next]; //@line 2091 "xmlparse.c"
        var $22=$parser_addr; //@line 2091 "xmlparse.c"
        var $23=$start_addr; //@line 2091 "xmlparse.c"
        var $24=_processXmlDecl($22, 1, $23, $21); //@line 2091 "xmlparse.c"
        $result=$24; //@line 2091 "xmlparse.c"
        var $25=$result; //@line 2092 "xmlparse.c"
        var $26=($25)!=0; //@line 2092 "xmlparse.c"
        if ($26) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2092 "xmlparse.c"
      case 2: // $bb1
        var $27=$result; //@line 2093 "xmlparse.c"
        $0=$27; //@line 2093 "xmlparse.c"
        __label__ = 14; break; //@line 2093 "xmlparse.c"
      case 3: // $bb2
        var $28=$parser_addr; //@line 2094 "xmlparse.c"
        var $29=$28+464; //@line 2094 "xmlparse.c"
        var $30=$29; //@line 2094 "xmlparse.c"
        var $31=HEAP[$30]; //@line 2094 "xmlparse.c"
        if ($31 == 2) {
          __label__ = 5; break;
        }
        else if ($31 == 3) {
          __label__ = 4; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 4: // $bb3
        var $32=HEAP[$next]; //@line 2096 "xmlparse.c"
        var $33=$endPtr_addr; //@line 2096 "xmlparse.c"
        HEAP[$33]=$32; //@line 2096 "xmlparse.c"
        $0=0; //@line 2097 "xmlparse.c"
        __label__ = 14; break; //@line 2097 "xmlparse.c"
      case 5: // $bb4
        $0=35; //@line 2099 "xmlparse.c"
        __label__ = 14; break; //@line 2099 "xmlparse.c"
      case 6: // $bb5
        var $34=HEAP[$next]; //@line 2101 "xmlparse.c"
        $start_addr=$34; //@line 2101 "xmlparse.c"
        __label__ = 13; break; //@line 2101 "xmlparse.c"
      case 7: // $bb6
        var $35=$parser_addr; //@line 2106 "xmlparse.c"
        var $36=$35+464; //@line 2106 "xmlparse.c"
        var $37=$36+4; //@line 2106 "xmlparse.c"
        var $38=HEAP[$37]; //@line 2106 "xmlparse.c"
        var $39=($38)==0; //@line 2106 "xmlparse.c"
        if ($39) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 2106 "xmlparse.c"
      case 8: // $bb7
        var $40=$endPtr_addr; //@line 2107 "xmlparse.c"
        var $41=$start_addr; //@line 2107 "xmlparse.c"
        HEAP[$40]=$41; //@line 2107 "xmlparse.c"
        $0=0; //@line 2108 "xmlparse.c"
        __label__ = 14; break; //@line 2108 "xmlparse.c"
      case 9: // $bb8
        $0=5; //@line 2110 "xmlparse.c"
        __label__ = 14; break; //@line 2110 "xmlparse.c"
      case 10: // $bb9
        var $42=$parser_addr; //@line 2112 "xmlparse.c"
        var $43=$42+464; //@line 2112 "xmlparse.c"
        var $44=$43+4; //@line 2112 "xmlparse.c"
        var $45=HEAP[$44]; //@line 2112 "xmlparse.c"
        var $46=($45)==0; //@line 2112 "xmlparse.c"
        if ($46) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 2112 "xmlparse.c"
      case 11: // $bb10
        var $47=$endPtr_addr; //@line 2113 "xmlparse.c"
        var $48=$start_addr; //@line 2113 "xmlparse.c"
        HEAP[$47]=$48; //@line 2113 "xmlparse.c"
        $0=0; //@line 2114 "xmlparse.c"
        __label__ = 14; break; //@line 2114 "xmlparse.c"
      case 12: // $bb11
        $0=6; //@line 2116 "xmlparse.c"
        __label__ = 14; break; //@line 2116 "xmlparse.c"
      case 13: // $bb12
        var $49=$parser_addr; //@line 2118 "xmlparse.c"
        var $50=$49+264; //@line 2118 "xmlparse.c"
        HEAP[$50]=(FUNCTION_TABLE_OFFSET + 60); //@line 2118 "xmlparse.c"
        var $51=$parser_addr; //@line 2119 "xmlparse.c"
        var $52=$51+296; //@line 2119 "xmlparse.c"
        HEAP[$52]=1; //@line 2119 "xmlparse.c"
        var $53=$parser_addr; //@line 2120 "xmlparse.c"
        var $54=$start_addr; //@line 2120 "xmlparse.c"
        var $55=$end_addr; //@line 2120 "xmlparse.c"
        var $56=$endPtr_addr; //@line 2120 "xmlparse.c"
        var $57=_externalEntityContentProcessor($53, $54, $55, $56); //@line 2120 "xmlparse.c"
        $0=$57; //@line 2120 "xmlparse.c"
        __label__ = 14; break; //@line 2120 "xmlparse.c"
      case 14: // $bb13
        var $58=$0; //@line 2093 "xmlparse.c"
        $retval=$58; //@line 2093 "xmlparse.c"
        var $retval14=$retval; //@line 2093 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval14; //@line 2093 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _externalEntityContentProcessor($parser, $start, $end, $endPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $start_addr;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $0;
        var $result;
        $parser_addr=$parser;
        $start_addr=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $1=$parser_addr; //@line 2130 "xmlparse.c"
        var $2=$1+464; //@line 2130 "xmlparse.c"
        var $3=$2+4; //@line 2130 "xmlparse.c"
        var $4=HEAP[$3]; //@line 2130 "xmlparse.c"
        var $5=($4)==0; //@line 2130 "xmlparse.c"
        var $6=($5); //@line 2130 "xmlparse.c"
        var $7=$parser_addr; //@line 2130 "xmlparse.c"
        var $8=$7+144; //@line 2130 "xmlparse.c"
        var $9=HEAP[$8]; //@line 2130 "xmlparse.c"
        var $10=$parser_addr; //@line 2130 "xmlparse.c"
        var $11=$start_addr; //@line 2130 "xmlparse.c"
        var $12=$end_addr; //@line 2130 "xmlparse.c"
        var $13=$endPtr_addr; //@line 2130 "xmlparse.c"
        var $14=((($6)) & 255); //@line 2130 "xmlparse.c"
        var $15=_doContent($10, 1, $9, $11, $12, $13, $14); //@line 2130 "xmlparse.c"
        $result=$15; //@line 2130 "xmlparse.c"
        var $16=$result; //@line 2131 "xmlparse.c"
        var $17=($16)==0; //@line 2131 "xmlparse.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 2131 "xmlparse.c"
      case 1: // $bb
        var $18=$parser_addr; //@line 2132 "xmlparse.c"
        var $19=_storeRawNames($18); //@line 2132 "xmlparse.c"
        var $20=($19)==0; //@line 2132 "xmlparse.c"
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2132 "xmlparse.c"
      case 2: // $bb1
        $0=1; //@line 2133 "xmlparse.c"
        __label__ = 4; break; //@line 2133 "xmlparse.c"
      case 3: // $bb2
        var $21=$result; //@line 2135 "xmlparse.c"
        $0=$21; //@line 2135 "xmlparse.c"
        __label__ = 4; break; //@line 2135 "xmlparse.c"
      case 4: // $bb3
        var $22=$0; //@line 2133 "xmlparse.c"
        $retval=$22; //@line 2133 "xmlparse.c"
        var $retval4=$retval; //@line 2133 "xmlparse.c"
        ;
        return $retval4; //@line 2133 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doContent($parser, $startTagLevel, $enc, $s, $end, $nextPtr, $haveMore) {
    var __stackBase__  = STACKTOP; STACKTOP += 71; _memset(__stackBase__, 0, 71);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr_i10;
        var $entity_addr_i;
        var $betweenDecl_addr_i;
        var $retval_i11;
        var $0;
        var $textStart_i;
        var $textEnd_i;
        var $next_i=__stackBase__;
        var $result_i;
        var $openEntity_i;
        var $pool_addr_i3;
        var $p_i4;
        var $tem_i5;
        var $pool_addr_i;
        var $p_i;
        var $tem_i;
        var $iter_addr_i4_i;
        var $retval_i5_i;
        var $1;
        var $tem_i6_i;
        var $iter_addr_i2_i;
        var $table_addr_i3_i;
        var $iter_addr_i1_i;
        var $retval_i_i;
        var $2;
        var $tem_i_i;
        var $iter_addr_i_i;
        var $table_addr_i_i;
        var $parser_addr_i;
        var $retval_i;
        var $iftmp_267_i;
        var $iftmp_266_i;
        var $iftmp_265_i;
        var $iftmp_264_i;
        var $iftmp_263_i;
        var $iftmp_262_i;
        var $iftmp_261_i;
        var $iftmp_260_i;
        var $3;
        var $iftmp_259_i;
        var $dtd_i;
        var $iter_i=__stackBase__+4;
        var $needSep_i;
        var $i_i;
        var $len_i;
        var $i21_i;
        var $len22_i;
        var $s_i;
        var $prefix_i;
        var $s65_i;
        var $e_i;
        var $parser_addr;
        var $startTagLevel_addr;
        var $enc_addr;
        var $s_addr=__stackBase__+12;
        var $end_addr;
        var $nextPtr_addr;
        var $haveMore_addr;
        var $retval;
        var $4;
        var $dtd;
        var $eventPP;
        var $eventEndPP;
        var $next=__stackBase__+16;
        var $tok;
        var $c=__stackBase__+20;
        var $name;
        var $entity;
        var $ch=__stackBase__+21;
        var $result;
        var $context;
        var $tag;
        var $result74;
        var $toPtr=__stackBase__+22;
        var $rawNameEnd;
        var $fromPtr=__stackBase__+26;
        var $bufSize;
        var $convLen;
        var $temp;
        var $rawName;
        var $result94;
        var $bindings=__stackBase__+30;
        var $noElmHandlers;
        var $name95=__stackBase__+34;
        var $b;
        var $len;
        var $rawName119;
        var $tag120;
        var $localPart;
        var $prefix;
        var $uri;
        var $b140;
        var $n;
        var $buf=__stackBase__+58;
        var $c159=__stackBase__+62;
        var $result164;
        var $dataPtr=__stackBase__+63;
        var $dataPtr190=__stackBase__+67;
        $parser_addr=$parser;
        $startTagLevel_addr=$startTagLevel;
        $enc_addr=$enc;
        HEAP[$s_addr]=$s;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        $haveMore_addr=$haveMore;
        var $5=$parser_addr; //@line 2148 "xmlparse.c"
        var $6=$5+340; //@line 2148 "xmlparse.c"
        var $7=HEAP[$6]; //@line 2148 "xmlparse.c"
        $dtd=$7; //@line 2148 "xmlparse.c"
        var $8=$parser_addr; //@line 2152 "xmlparse.c"
        var $9=$8+144; //@line 2152 "xmlparse.c"
        var $10=HEAP[$9]; //@line 2152 "xmlparse.c"
        var $11=$enc_addr; //@line 2152 "xmlparse.c"
        var $12=($10)==($11); //@line 2152 "xmlparse.c"
        var $13=$parser_addr; //@line 2153 "xmlparse.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 2152 "xmlparse.c"
      case 1: // $bb
        var $14=$13+272; //@line 2153 "xmlparse.c"
        $eventPP=$14; //@line 2153 "xmlparse.c"
        var $15=$parser_addr; //@line 2154 "xmlparse.c"
        var $16=$15+276; //@line 2154 "xmlparse.c"
        $eventEndPP=$16; //@line 2154 "xmlparse.c"
        __label__ = 3; break; //@line 2154 "xmlparse.c"
      case 2: // $bb1
        var $17=$13+284; //@line 2157 "xmlparse.c"
        var $18=HEAP[$17]; //@line 2157 "xmlparse.c"
        var $19=$18; //@line 2157 "xmlparse.c"
        $eventPP=$19; //@line 2157 "xmlparse.c"
        var $20=$parser_addr; //@line 2158 "xmlparse.c"
        var $21=$20+284; //@line 2158 "xmlparse.c"
        var $22=HEAP[$21]; //@line 2158 "xmlparse.c"
        var $23=$22+4; //@line 2158 "xmlparse.c"
        $eventEndPP=$23; //@line 2158 "xmlparse.c"
        __label__ = 3; break; //@line 2158 "xmlparse.c"
      case 3: // $bb2
        var $24=HEAP[$s_addr]; //@line 2160 "xmlparse.c"
        var $25=$eventPP; //@line 2160 "xmlparse.c"
        HEAP[$25]=$24; //@line 2160 "xmlparse.c"
        var $26=$name95; //@line 2367 "xmlparse.c"
        var $27=$name95; //@line 2377 "xmlparse.c"
        var $28=$name95; //@line 2383 "xmlparse.c"
        var $buf151=$buf; //@line 2464 "xmlparse.c"
        var $buf152=$buf; //@line 2464 "xmlparse.c"
        __label__ = 4; break; //@line 2160 "xmlparse.c"
      case 4: // $bb3
        var $29=HEAP[$s_addr]; //@line 2163 "xmlparse.c"
        HEAP[$next]=$29; //@line 2163 "xmlparse.c"
        var $30=$enc_addr; //@line 2164 "xmlparse.c"
        var $31=$30; //@line 2164 "xmlparse.c"
        var $32=$31+4; //@line 2164 "xmlparse.c"
        var $33=HEAP[$32]; //@line 2164 "xmlparse.c"
        var $34=HEAP[$s_addr]; //@line 2164 "xmlparse.c"
        var $35=$enc_addr; //@line 2164 "xmlparse.c"
        var $36=$end_addr; //@line 2164 "xmlparse.c"
        var $37=FUNCTION_TABLE[$33]($35, $34, $36, $next); //@line 2164 "xmlparse.c"
        $tok=$37; //@line 2164 "xmlparse.c"
        var $38=HEAP[$next]; //@line 2165 "xmlparse.c"
        var $39=$eventEndPP; //@line 2165 "xmlparse.c"
        HEAP[$39]=$38; //@line 2165 "xmlparse.c"
        var $40=$tok; //@line 2166 "xmlparse.c"
        if ($40 == -5) {
          __label__ = 235; break;
        }
        else if ($40 == -4) {
          __label__ = 16; break;
        }
        else if ($40 == -3) {
          __label__ = 5; break;
        }
        else if ($40 == -2) {
          __label__ = 27; break;
        }
        else if ($40 == -1) {
          __label__ = 24; break;
        }
        else if ($40 == 0) {
          __label__ = 23; break;
        }
        else if ($40 == 1) {
          __label__ = 146; break;
        }
        else if ($40 == 2) {
          __label__ = 146; break;
        }
        else if ($40 == 3) {
          __label__ = 169; break;
        }
        else if ($40 == 4) {
          __label__ = 169; break;
        }
        else if ($40 == 5) {
          __label__ = 192; break;
        }
        else if ($40 == 6) {
          __label__ = 248; break;
        }
        else if ($40 == 7) {
          __label__ = 223; break;
        }
        else if ($40 == 8) {
          __label__ = 227; break;
        }
        else if ($40 == 9) {
          __label__ = 30; break;
        }
        else if ($40 == 10) {
          __label__ = 216; break;
        }
        else if ($40 == 11) {
          __label__ = 255; break;
        }
        else if ($40 == 12) {
          __label__ = 222; break;
        }
        else if ($40 == 13) {
          __label__ = 257; break;
        }
        else {
        __label__ = 259; break;
        }
        
      case 5: // $bb4
        var $41=$haveMore_addr; //@line 2168 "xmlparse.c"
        var $42=($41)!=0; //@line 2168 "xmlparse.c"
        if ($42) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 2168 "xmlparse.c"
      case 6: // $bb5
        var $43=HEAP[$s_addr]; //@line 2169 "xmlparse.c"
        var $44=$nextPtr_addr; //@line 2169 "xmlparse.c"
        HEAP[$44]=$43; //@line 2169 "xmlparse.c"
        $4=0; //@line 2170 "xmlparse.c"
        __label__ = 264; break; //@line 2170 "xmlparse.c"
      case 7: // $bb6
        var $45=$eventEndPP; //@line 2172 "xmlparse.c"
        var $46=$end_addr; //@line 2172 "xmlparse.c"
        HEAP[$45]=$46; //@line 2172 "xmlparse.c"
        var $47=$parser_addr; //@line 2173 "xmlparse.c"
        var $48=$47+60; //@line 2173 "xmlparse.c"
        var $49=HEAP[$48]; //@line 2173 "xmlparse.c"
        var $50=($49)!=0; //@line 2173 "xmlparse.c"
        if ($50) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 2173 "xmlparse.c"
      case 8: // $bb7
        HEAP[$c]=10; //@line 2174 "xmlparse.c"
        var $51=$parser_addr; //@line 2175 "xmlparse.c"
        var $52=$51+60; //@line 2175 "xmlparse.c"
        var $53=HEAP[$52]; //@line 2175 "xmlparse.c"
        var $54=$parser_addr; //@line 2175 "xmlparse.c"
        var $55=$54+4; //@line 2175 "xmlparse.c"
        var $56=HEAP[$55]; //@line 2175 "xmlparse.c"
        FUNCTION_TABLE[$53]($56, $c, 1); //@line 2175 "xmlparse.c"
        __label__ = 11; break; //@line 2175 "xmlparse.c"
      case 9: // $bb8
        var $57=$parser_addr; //@line 2177 "xmlparse.c"
        var $58=$57+80; //@line 2177 "xmlparse.c"
        var $59=HEAP[$58]; //@line 2177 "xmlparse.c"
        var $60=($59)!=0; //@line 2177 "xmlparse.c"
        if ($60) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2177 "xmlparse.c"
      case 10: // $bb9
        var $61=HEAP[$s_addr]; //@line 2178 "xmlparse.c"
        var $62=$parser_addr; //@line 2178 "xmlparse.c"
        var $63=$enc_addr; //@line 2178 "xmlparse.c"
        var $64=$end_addr; //@line 2178 "xmlparse.c"
        _reportDefault($62, $63, $61, $64); //@line 2178 "xmlparse.c"
        __label__ = 11; break; //@line 2178 "xmlparse.c"
      case 11: // $bb10
        var $65=$startTagLevel_addr; //@line 2182 "xmlparse.c"
        var $66=($65)==0; //@line 2182 "xmlparse.c"
        if ($66) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 2182 "xmlparse.c"
      case 12: // $bb11
        $4=3; //@line 2183 "xmlparse.c"
        __label__ = 264; break; //@line 2183 "xmlparse.c"
      case 13: // $bb12
        var $67=$parser_addr; //@line 2184 "xmlparse.c"
        var $68=$67+296; //@line 2184 "xmlparse.c"
        var $69=HEAP[$68]; //@line 2184 "xmlparse.c"
        var $70=$startTagLevel_addr; //@line 2184 "xmlparse.c"
        var $71=($69)!=($70); //@line 2184 "xmlparse.c"
        if ($71) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 2184 "xmlparse.c"
      case 14: // $bb13
        $4=13; //@line 2185 "xmlparse.c"
        __label__ = 264; break; //@line 2185 "xmlparse.c"
      case 15: // $bb14
        var $72=$nextPtr_addr; //@line 2186 "xmlparse.c"
        var $73=$end_addr; //@line 2186 "xmlparse.c"
        HEAP[$72]=$73; //@line 2186 "xmlparse.c"
        $4=0; //@line 2187 "xmlparse.c"
        __label__ = 264; break; //@line 2187 "xmlparse.c"
      case 16: // $bb15
        var $74=$haveMore_addr; //@line 2189 "xmlparse.c"
        var $75=($74)!=0; //@line 2189 "xmlparse.c"
        if ($75) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 2189 "xmlparse.c"
      case 17: // $bb16
        var $76=HEAP[$s_addr]; //@line 2190 "xmlparse.c"
        var $77=$nextPtr_addr; //@line 2190 "xmlparse.c"
        HEAP[$77]=$76; //@line 2190 "xmlparse.c"
        $4=0; //@line 2191 "xmlparse.c"
        __label__ = 264; break; //@line 2191 "xmlparse.c"
      case 18: // $bb17
        var $78=$startTagLevel_addr; //@line 2193 "xmlparse.c"
        var $79=($78) > 0; //@line 2193 "xmlparse.c"
        if ($79) { __label__ = 19; break; } else { __label__ = 22; break; } //@line 2193 "xmlparse.c"
      case 19: // $bb18
        var $80=$parser_addr; //@line 2194 "xmlparse.c"
        var $81=$80+296; //@line 2194 "xmlparse.c"
        var $82=HEAP[$81]; //@line 2194 "xmlparse.c"
        var $83=$startTagLevel_addr; //@line 2194 "xmlparse.c"
        var $84=($82)!=($83); //@line 2194 "xmlparse.c"
        if ($84) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 2194 "xmlparse.c"
      case 20: // $bb19
        $4=13; //@line 2195 "xmlparse.c"
        __label__ = 264; break; //@line 2195 "xmlparse.c"
      case 21: // $bb20
        var $85=HEAP[$s_addr]; //@line 2196 "xmlparse.c"
        var $86=$nextPtr_addr; //@line 2196 "xmlparse.c"
        HEAP[$86]=$85; //@line 2196 "xmlparse.c"
        $4=0; //@line 2197 "xmlparse.c"
        __label__ = 264; break; //@line 2197 "xmlparse.c"
      case 22: // $bb21
        $4=3; //@line 2199 "xmlparse.c"
        __label__ = 264; break; //@line 2199 "xmlparse.c"
      case 23: // $bb22
        var $87=HEAP[$next]; //@line 2201 "xmlparse.c"
        var $88=$eventPP; //@line 2201 "xmlparse.c"
        HEAP[$88]=$87; //@line 2201 "xmlparse.c"
        $4=4; //@line 2202 "xmlparse.c"
        __label__ = 264; break; //@line 2202 "xmlparse.c"
      case 24: // $bb23
        var $89=$haveMore_addr; //@line 2204 "xmlparse.c"
        var $90=($89)!=0; //@line 2204 "xmlparse.c"
        if ($90) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 2204 "xmlparse.c"
      case 25: // $bb24
        var $91=HEAP[$s_addr]; //@line 2205 "xmlparse.c"
        var $92=$nextPtr_addr; //@line 2205 "xmlparse.c"
        HEAP[$92]=$91; //@line 2205 "xmlparse.c"
        $4=0; //@line 2206 "xmlparse.c"
        __label__ = 264; break; //@line 2206 "xmlparse.c"
      case 26: // $bb25
        $4=5; //@line 2208 "xmlparse.c"
        __label__ = 264; break; //@line 2208 "xmlparse.c"
      case 27: // $bb26
        var $93=$haveMore_addr; //@line 2210 "xmlparse.c"
        var $94=($93)!=0; //@line 2210 "xmlparse.c"
        if ($94) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 2210 "xmlparse.c"
      case 28: // $bb27
        var $95=HEAP[$s_addr]; //@line 2211 "xmlparse.c"
        var $96=$nextPtr_addr; //@line 2211 "xmlparse.c"
        HEAP[$96]=$95; //@line 2211 "xmlparse.c"
        $4=0; //@line 2212 "xmlparse.c"
        __label__ = 264; break; //@line 2212 "xmlparse.c"
      case 29: // $bb28
        $4=6; //@line 2214 "xmlparse.c"
        __label__ = 264; break; //@line 2214 "xmlparse.c"
      case 30: // $bb29
        var $97=$enc_addr; //@line 2219 "xmlparse.c"
        var $98=$97+44; //@line 2219 "xmlparse.c"
        var $99=HEAP[$98]; //@line 2219 "xmlparse.c"
        var $100=HEAP[$next]; //@line 2219 "xmlparse.c"
        var $101=$enc_addr; //@line 2219 "xmlparse.c"
        var $102=$101+64; //@line 2219 "xmlparse.c"
        var $103=HEAP[$102]; //@line 2219 "xmlparse.c"
        var $104=0 - ($103); //@line 2219 "xmlparse.c"
        var $105=$100+$104; //@line 2219 "xmlparse.c"
        var $106=HEAP[$s_addr]; //@line 2219 "xmlparse.c"
        var $107=$enc_addr; //@line 2219 "xmlparse.c"
        var $108=$107+64; //@line 2219 "xmlparse.c"
        var $109=HEAP[$108]; //@line 2219 "xmlparse.c"
        var $110=$106+$109; //@line 2219 "xmlparse.c"
        var $111=$enc_addr; //@line 2219 "xmlparse.c"
        var $112=FUNCTION_TABLE[$99]($111, $110, $105); //@line 2219 "xmlparse.c"
        var $113=((($112)) & 255); //@line 2219 "xmlparse.c"
        HEAP[$ch]=$113; //@line 2219 "xmlparse.c"
        var $114=HEAP[$ch]; //@line 2222 "xmlparse.c"
        var $115=($114)!=0; //@line 2222 "xmlparse.c"
        if ($115) { __label__ = 31; break; } else { __label__ = 35; break; } //@line 2222 "xmlparse.c"
      case 31: // $bb30
        var $116=$parser_addr; //@line 2223 "xmlparse.c"
        var $117=$116+60; //@line 2223 "xmlparse.c"
        var $118=HEAP[$117]; //@line 2223 "xmlparse.c"
        var $119=($118)!=0; //@line 2223 "xmlparse.c"
        var $120=$parser_addr; //@line 2224 "xmlparse.c"
        if ($119) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 2223 "xmlparse.c"
      case 32: // $bb31
        var $121=$120+60; //@line 2224 "xmlparse.c"
        var $122=HEAP[$121]; //@line 2224 "xmlparse.c"
        var $123=$parser_addr; //@line 2224 "xmlparse.c"
        var $124=$123+4; //@line 2224 "xmlparse.c"
        var $125=HEAP[$124]; //@line 2224 "xmlparse.c"
        FUNCTION_TABLE[$122]($125, $ch, 1); //@line 2224 "xmlparse.c"
        __label__ = 261; break; //@line 2224 "xmlparse.c"
      case 33: // $bb32
        var $126=$120+80; //@line 2225 "xmlparse.c"
        var $127=HEAP[$126]; //@line 2225 "xmlparse.c"
        var $128=($127)!=0; //@line 2225 "xmlparse.c"
        if ($128) { __label__ = 34; break; } else { __label__ = 261; break; } //@line 2225 "xmlparse.c"
      case 34: // $bb33
        var $129=HEAP[$next]; //@line 2226 "xmlparse.c"
        var $130=HEAP[$s_addr]; //@line 2226 "xmlparse.c"
        var $131=$parser_addr; //@line 2226 "xmlparse.c"
        var $132=$enc_addr; //@line 2226 "xmlparse.c"
        _reportDefault($131, $132, $130, $129); //@line 2226 "xmlparse.c"
        __label__ = 261; break; //@line 2226 "xmlparse.c"
      case 35: // $bb35
        var $133=HEAP[$next]; //@line 2229 "xmlparse.c"
        var $134=$enc_addr; //@line 2229 "xmlparse.c"
        var $135=$134+64; //@line 2229 "xmlparse.c"
        var $136=HEAP[$135]; //@line 2229 "xmlparse.c"
        var $137=0 - ($136); //@line 2229 "xmlparse.c"
        var $138=$133+$137; //@line 2229 "xmlparse.c"
        var $139=HEAP[$s_addr]; //@line 2229 "xmlparse.c"
        var $140=$enc_addr; //@line 2229 "xmlparse.c"
        var $141=$140+64; //@line 2229 "xmlparse.c"
        var $142=HEAP[$141]; //@line 2229 "xmlparse.c"
        var $143=$139+$142; //@line 2229 "xmlparse.c"
        var $144=$dtd; //@line 2229 "xmlparse.c"
        var $145=$144+80; //@line 2229 "xmlparse.c"
        var $146=$enc_addr; //@line 2229 "xmlparse.c"
        var $147=_poolStoreString($145, $146, $143, $138); //@line 2229 "xmlparse.c"
        $name=$147; //@line 2229 "xmlparse.c"
        var $148=$name; //@line 2232 "xmlparse.c"
        var $149=($148)==0; //@line 2232 "xmlparse.c"
        if ($149) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 2232 "xmlparse.c"
      case 36: // $bb36
        $4=1; //@line 2233 "xmlparse.c"
        __label__ = 264; break; //@line 2233 "xmlparse.c"
      case 37: // $bb37
        var $150=$dtd; //@line 2234 "xmlparse.c"
        var $151=$150; //@line 2234 "xmlparse.c"
        var $152=$name; //@line 2234 "xmlparse.c"
        var $153=_lookup($151, $152, 0); //@line 2234 "xmlparse.c"
        var $154=$153; //@line 2234 "xmlparse.c"
        $entity=$154; //@line 2234 "xmlparse.c"
        var $155=$dtd; //@line 2235 "xmlparse.c"
        var $156=$155+80; //@line 2235 "xmlparse.c"
        var $157=$156+16; //@line 2235 "xmlparse.c"
        var $158=HEAP[$157]; //@line 2235 "xmlparse.c"
        var $159=$dtd; //@line 2235 "xmlparse.c"
        var $160=$159+80; //@line 2235 "xmlparse.c"
        var $161=$160+12; //@line 2235 "xmlparse.c"
        HEAP[$161]=$158; //@line 2235 "xmlparse.c"
        var $162=$dtd; //@line 2240 "xmlparse.c"
        var $163=$162+129; //@line 2240 "xmlparse.c"
        var $164=HEAP[$163]; //@line 2240 "xmlparse.c"
        var $165=($164)==0; //@line 2240 "xmlparse.c"
        if ($165) { __label__ = 39; break; } else { __label__ = 38; break; } //@line 2240 "xmlparse.c"
      case 38: // $bb38
        var $166=$dtd; //@line 2240 "xmlparse.c"
        var $167=$166+130; //@line 2240 "xmlparse.c"
        var $168=HEAP[$167]; //@line 2240 "xmlparse.c"
        var $169=($168)!=0; //@line 2240 "xmlparse.c"
        if ($169) { __label__ = 39; break; } else { __label__ = 43; break; } //@line 2240 "xmlparse.c"
      case 39: // $bb39
        var $170=$entity; //@line 2241 "xmlparse.c"
        var $171=($170)==0; //@line 2241 "xmlparse.c"
        if ($171) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 2241 "xmlparse.c"
      case 40: // $bb40
        $4=11; //@line 2242 "xmlparse.c"
        __label__ = 264; break; //@line 2242 "xmlparse.c"
      case 41: // $bb41
        var $172=$entity; //@line 2243 "xmlparse.c"
        var $173=$172+34; //@line 2243 "xmlparse.c"
        var $174=HEAP[$173]; //@line 2243 "xmlparse.c"
        var $175=($174)==0; //@line 2243 "xmlparse.c"
        if ($175) { __label__ = 42; break; } else { __label__ = 48; break; } //@line 2243 "xmlparse.c"
      case 42: // $bb42
        $4=24; //@line 2244 "xmlparse.c"
        __label__ = 264; break; //@line 2244 "xmlparse.c"
      case 43: // $bb44
        var $176=$entity; //@line 2246 "xmlparse.c"
        var $177=($176)==0; //@line 2246 "xmlparse.c"
        if ($177) { __label__ = 44; break; } else { __label__ = 48; break; } //@line 2246 "xmlparse.c"
      case 44: // $bb45
        var $178=$parser_addr; //@line 2247 "xmlparse.c"
        var $179=$178+120; //@line 2247 "xmlparse.c"
        var $180=HEAP[$179]; //@line 2247 "xmlparse.c"
        var $181=($180)!=0; //@line 2247 "xmlparse.c"
        var $182=$parser_addr; //@line 2248 "xmlparse.c"
        if ($181) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 2247 "xmlparse.c"
      case 45: // $bb46
        var $183=$182+120; //@line 2248 "xmlparse.c"
        var $184=HEAP[$183]; //@line 2248 "xmlparse.c"
        var $185=$parser_addr; //@line 2248 "xmlparse.c"
        var $186=$185+4; //@line 2248 "xmlparse.c"
        var $187=HEAP[$186]; //@line 2248 "xmlparse.c"
        var $188=$name; //@line 2248 "xmlparse.c"
        FUNCTION_TABLE[$184]($187, $188, 0); //@line 2248 "xmlparse.c"
        __label__ = 261; break; //@line 2248 "xmlparse.c"
      case 46: // $bb47
        var $189=$182+80; //@line 2249 "xmlparse.c"
        var $190=HEAP[$189]; //@line 2249 "xmlparse.c"
        var $191=($190)!=0; //@line 2249 "xmlparse.c"
        if ($191) { __label__ = 47; break; } else { __label__ = 261; break; } //@line 2249 "xmlparse.c"
      case 47: // $bb48
        var $192=HEAP[$next]; //@line 2250 "xmlparse.c"
        var $193=HEAP[$s_addr]; //@line 2250 "xmlparse.c"
        var $194=$parser_addr; //@line 2250 "xmlparse.c"
        var $195=$enc_addr; //@line 2250 "xmlparse.c"
        _reportDefault($194, $195, $193, $192); //@line 2250 "xmlparse.c"
        __label__ = 261; break; //@line 2250 "xmlparse.c"
      case 48: // $bb50
        var $196=$entity; //@line 2253 "xmlparse.c"
        var $197=$196+32; //@line 2253 "xmlparse.c"
        var $198=HEAP[$197]; //@line 2253 "xmlparse.c"
        var $199=($198)!=0; //@line 2253 "xmlparse.c"
        if ($199) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 2253 "xmlparse.c"
      case 49: // $bb51
        $4=12; //@line 2254 "xmlparse.c"
        __label__ = 264; break; //@line 2254 "xmlparse.c"
      case 50: // $bb52
        var $200=$entity; //@line 2255 "xmlparse.c"
        var $201=$200+28; //@line 2255 "xmlparse.c"
        var $202=HEAP[$201]; //@line 2255 "xmlparse.c"
        var $203=($202)!=0; //@line 2255 "xmlparse.c"
        if ($203) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 2255 "xmlparse.c"
      case 51: // $bb53
        $4=15; //@line 2256 "xmlparse.c"
        __label__ = 264; break; //@line 2256 "xmlparse.c"
      case 52: // $bb54
        var $204=$entity; //@line 2257 "xmlparse.c"
        var $205=$204+4; //@line 2257 "xmlparse.c"
        var $206=HEAP[$205]; //@line 2257 "xmlparse.c"
        var $207=($206)!=0; //@line 2257 "xmlparse.c"
        var $208=$parser_addr; //@line 2259 "xmlparse.c"
        if ($207) { __label__ = 53; break; } else { __label__ = 70; break; } //@line 2257 "xmlparse.c"
      case 53: // $bb55
        var $209=$208+292; //@line 2259 "xmlparse.c"
        var $210=HEAP[$209]; //@line 2259 "xmlparse.c"
        var $211=($210)==0; //@line 2259 "xmlparse.c"
        var $212=$parser_addr; //@line 2260 "xmlparse.c"
        if ($211) { __label__ = 54; break; } else { __label__ = 58; break; } //@line 2259 "xmlparse.c"
      case 54: // $bb56
        var $213=$212+120; //@line 2260 "xmlparse.c"
        var $214=HEAP[$213]; //@line 2260 "xmlparse.c"
        var $215=($214)!=0; //@line 2260 "xmlparse.c"
        var $216=$parser_addr; //@line 2261 "xmlparse.c"
        if ($215) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 2260 "xmlparse.c"
      case 55: // $bb57
        var $217=$216+120; //@line 2261 "xmlparse.c"
        var $218=HEAP[$217]; //@line 2261 "xmlparse.c"
        var $219=$entity; //@line 2261 "xmlparse.c"
        var $220=$219; //@line 2261 "xmlparse.c"
        var $221=HEAP[$220]; //@line 2261 "xmlparse.c"
        var $222=$parser_addr; //@line 2261 "xmlparse.c"
        var $223=$222+4; //@line 2261 "xmlparse.c"
        var $224=HEAP[$223]; //@line 2261 "xmlparse.c"
        FUNCTION_TABLE[$218]($224, $221, 0); //@line 2261 "xmlparse.c"
        __label__ = 261; break; //@line 2261 "xmlparse.c"
      case 56: // $bb58
        var $225=$216+80; //@line 2262 "xmlparse.c"
        var $226=HEAP[$225]; //@line 2262 "xmlparse.c"
        var $227=($226)!=0; //@line 2262 "xmlparse.c"
        if ($227) { __label__ = 57; break; } else { __label__ = 261; break; } //@line 2262 "xmlparse.c"
      case 57: // $bb59
        var $228=HEAP[$next]; //@line 2263 "xmlparse.c"
        var $229=HEAP[$s_addr]; //@line 2263 "xmlparse.c"
        var $230=$parser_addr; //@line 2263 "xmlparse.c"
        var $231=$enc_addr; //@line 2263 "xmlparse.c"
        _reportDefault($230, $231, $229, $228); //@line 2263 "xmlparse.c"
        __label__ = 261; break; //@line 2263 "xmlparse.c"
      case 58: // $bb61
        var $232=$entity; //@line 2266 "xmlparse.c"
        $parser_addr_i10=$212;
        $entity_addr_i=$232;
        $betweenDecl_addr_i=0;
        var $233=$parser_addr_i10; //@line 4673 "xmlparse.c"
        var $234=$233+288; //@line 4673 "xmlparse.c"
        var $235=HEAP[$234]; //@line 4673 "xmlparse.c"
        var $236=($235)!=0; //@line 4673 "xmlparse.c"
        var $237=$parser_addr_i10; //@line 4674 "xmlparse.c"
        if ($236) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4673 "xmlparse.c"
      case 59: // $bb_i12
        var $238=$237+288; //@line 4674 "xmlparse.c"
        var $239=HEAP[$238]; //@line 4674 "xmlparse.c"
        $openEntity_i=$239; //@line 4674 "xmlparse.c"
        var $240=$openEntity_i; //@line 4675 "xmlparse.c"
        var $241=$240+8; //@line 4675 "xmlparse.c"
        var $242=HEAP[$241]; //@line 4675 "xmlparse.c"
        var $243=$parser_addr_i10; //@line 4675 "xmlparse.c"
        var $244=$243+288; //@line 4675 "xmlparse.c"
        HEAP[$244]=$242; //@line 4675 "xmlparse.c"
        __label__ = 62; break; //@line 4675 "xmlparse.c"
      case 60: // $bb1_i13
        var $245=$237+12; //@line 4678 "xmlparse.c"
        var $246=$245; //@line 4678 "xmlparse.c"
        var $247=HEAP[$246]; //@line 4678 "xmlparse.c"
        var $248=FUNCTION_TABLE[$247](24); //@line 4678 "xmlparse.c"
        var $249=$248; //@line 4678 "xmlparse.c"
        $openEntity_i=$249; //@line 4678 "xmlparse.c"
        var $250=$openEntity_i; //@line 4679 "xmlparse.c"
        var $251=($250)==0; //@line 4679 "xmlparse.c"
        if ($251) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4679 "xmlparse.c"
      case 61: // $processInternalEntity_exit_thread
        $0=1; //@line 4680 "xmlparse.c"
        $retval_i11=1; //@line 4680 "xmlparse.c"
        $result=1; //@line 2266 "xmlparse.c"
        __label__ = 69; break;
      case 62: // $bb3_i
        var $252=$entity_addr_i; //@line 4682 "xmlparse.c"
        var $253=$252+32; //@line 4682 "xmlparse.c"
        HEAP[$253]=1; //@line 4682 "xmlparse.c"
        var $254=$entity_addr_i; //@line 4683 "xmlparse.c"
        var $255=$254+12; //@line 4683 "xmlparse.c"
        HEAP[$255]=0; //@line 4683 "xmlparse.c"
        var $256=$parser_addr_i10; //@line 4684 "xmlparse.c"
        var $257=$256+284; //@line 4684 "xmlparse.c"
        var $258=HEAP[$257]; //@line 4684 "xmlparse.c"
        var $259=$openEntity_i; //@line 4684 "xmlparse.c"
        var $260=$259+8; //@line 4684 "xmlparse.c"
        HEAP[$260]=$258; //@line 4684 "xmlparse.c"
        var $261=$parser_addr_i10; //@line 4685 "xmlparse.c"
        var $262=$261+284; //@line 4685 "xmlparse.c"
        var $263=$openEntity_i; //@line 4685 "xmlparse.c"
        HEAP[$262]=$263; //@line 4685 "xmlparse.c"
        var $264=$openEntity_i; //@line 4686 "xmlparse.c"
        var $265=$264+12; //@line 4686 "xmlparse.c"
        var $266=$entity_addr_i; //@line 4686 "xmlparse.c"
        HEAP[$265]=$266; //@line 4686 "xmlparse.c"
        var $267=$parser_addr_i10; //@line 4687 "xmlparse.c"
        var $268=$267+296; //@line 4687 "xmlparse.c"
        var $269=HEAP[$268]; //@line 4687 "xmlparse.c"
        var $270=$openEntity_i; //@line 4687 "xmlparse.c"
        var $271=$270+16; //@line 4687 "xmlparse.c"
        HEAP[$271]=$269; //@line 4687 "xmlparse.c"
        var $272=$openEntity_i; //@line 4688 "xmlparse.c"
        var $273=$272+20; //@line 4688 "xmlparse.c"
        var $274=$betweenDecl_addr_i; //@line 4688 "xmlparse.c"
        HEAP[$273]=$274; //@line 4688 "xmlparse.c"
        var $275=$openEntity_i; //@line 4689 "xmlparse.c"
        var $276=$275; //@line 4689 "xmlparse.c"
        HEAP[$276]=0; //@line 4689 "xmlparse.c"
        var $277=$openEntity_i; //@line 4690 "xmlparse.c"
        var $278=$277+4; //@line 4690 "xmlparse.c"
        HEAP[$278]=0; //@line 4690 "xmlparse.c"
        var $279=$entity_addr_i; //@line 4691 "xmlparse.c"
        var $280=$279+4; //@line 4691 "xmlparse.c"
        var $281=HEAP[$280]; //@line 4691 "xmlparse.c"
        $textStart_i=$281; //@line 4691 "xmlparse.c"
        var $282=$entity_addr_i; //@line 4692 "xmlparse.c"
        var $283=$282+4; //@line 4692 "xmlparse.c"
        var $284=HEAP[$283]; //@line 4692 "xmlparse.c"
        var $285=$entity_addr_i; //@line 4692 "xmlparse.c"
        var $286=$285+8; //@line 4692 "xmlparse.c"
        var $287=HEAP[$286]; //@line 4692 "xmlparse.c"
        var $288=$284+$287; //@line 4692 "xmlparse.c"
        $textEnd_i=$288; //@line 4692 "xmlparse.c"
        var $289=$parser_addr_i10; //@line 4702 "xmlparse.c"
        var $290=$289+224; //@line 4702 "xmlparse.c"
        var $291=HEAP[$290]; //@line 4702 "xmlparse.c"
        var $292=$parser_addr_i10; //@line 4702 "xmlparse.c"
        var $293=$292+296; //@line 4702 "xmlparse.c"
        var $294=HEAP[$293]; //@line 4702 "xmlparse.c"
        var $295=$parser_addr_i10; //@line 4702 "xmlparse.c"
        var $296=$textStart_i; //@line 4702 "xmlparse.c"
        var $297=$textEnd_i; //@line 4702 "xmlparse.c"
        var $298=_doContent($295, $294, $291, $296, $297, $next_i, 0); //@line 4702 "xmlparse.c"
        $result_i=$298; //@line 4702 "xmlparse.c"
        var $299=($298)==0; //@line 4705 "xmlparse.c"
        if ($299) { __label__ = 64; break; } else { __label__ = 63; break; } //@line 4705 "xmlparse.c"
      case 63: // $processInternalEntity_exit_thread20
        $0=$298; //@line 4718 "xmlparse.c"
        $retval_i11=$298; //@line 4680 "xmlparse.c"
        $result=$298; //@line 2266 "xmlparse.c"
        __label__ = 69; break;
      case 64: // $bb4_i
        var $300=HEAP[$next_i]; //@line 4706 "xmlparse.c"
        var $301=$textEnd_i; //@line 4706 "xmlparse.c"
        var $302=($301)==($300); //@line 4706 "xmlparse.c"
        if ($302) { __label__ = 67; break; } else { __label__ = 65; break; } //@line 4706 "xmlparse.c"
      case 65: // $bb5_i15
        var $303=$parser_addr_i10; //@line 4706 "xmlparse.c"
        var $304=$303+464; //@line 4706 "xmlparse.c"
        var $305=$304; //@line 4706 "xmlparse.c"
        var $306=HEAP[$305]; //@line 4706 "xmlparse.c"
        var $307=($306)!=3; //@line 4706 "xmlparse.c"
        if ($307) { __label__ = 67; break; } else { __label__ = 66; break; } //@line 4706 "xmlparse.c"
      case 66: // $bb6_i16
        var $308=HEAP[$next_i]; //@line 4707 "xmlparse.c"
        var $309=($308); //@line 4707 "xmlparse.c"
        var $310=$textStart_i; //@line 4707 "xmlparse.c"
        var $311=($310); //@line 4707 "xmlparse.c"
        var $312=($309) - ($311); //@line 4707 "xmlparse.c"
        var $313=$entity_addr_i; //@line 4707 "xmlparse.c"
        var $314=$313+12; //@line 4707 "xmlparse.c"
        HEAP[$314]=$312; //@line 4707 "xmlparse.c"
        var $315=$parser_addr_i10; //@line 4708 "xmlparse.c"
        var $316=$315+264; //@line 4708 "xmlparse.c"
        HEAP[$316]=(FUNCTION_TABLE_OFFSET + 62); //@line 4708 "xmlparse.c"
        __label__ = 68; break; //@line 4708 "xmlparse.c"
      case 67: // $bb7_i17
        var $317=$entity_addr_i; //@line 4711 "xmlparse.c"
        var $318=$317+32; //@line 4711 "xmlparse.c"
        HEAP[$318]=0; //@line 4711 "xmlparse.c"
        var $319=$openEntity_i; //@line 4712 "xmlparse.c"
        var $320=$319+8; //@line 4712 "xmlparse.c"
        var $321=HEAP[$320]; //@line 4712 "xmlparse.c"
        var $322=$parser_addr_i10; //@line 4712 "xmlparse.c"
        var $323=$322+284; //@line 4712 "xmlparse.c"
        HEAP[$323]=$321; //@line 4712 "xmlparse.c"
        var $324=$parser_addr_i10; //@line 4714 "xmlparse.c"
        var $325=$324+288; //@line 4714 "xmlparse.c"
        var $326=HEAP[$325]; //@line 4714 "xmlparse.c"
        var $327=$openEntity_i; //@line 4714 "xmlparse.c"
        var $328=$327+8; //@line 4714 "xmlparse.c"
        HEAP[$328]=$326; //@line 4714 "xmlparse.c"
        var $329=$parser_addr_i10; //@line 4715 "xmlparse.c"
        var $330=$329+288; //@line 4715 "xmlparse.c"
        var $331=$openEntity_i; //@line 4715 "xmlparse.c"
        HEAP[$330]=$331; //@line 4715 "xmlparse.c"
        __label__ = 68; break; //@line 4715 "xmlparse.c"
      case 68: // $processInternalEntity_exit
        var $_pr=$result_i;
        $0=$_pr; //@line 4718 "xmlparse.c"
        $retval_i11=$_pr; //@line 4680 "xmlparse.c"
        $result=$_pr; //@line 2266 "xmlparse.c"
        var $332=($_pr)!=0; //@line 2267 "xmlparse.c"
        if ($332) { __label__ = 69; break; } else { __label__ = 261; break; } //@line 2267 "xmlparse.c"
      case 69: // $bb62
        var $333=$result; //@line 2268 "xmlparse.c"
        $4=$333; //@line 2268 "xmlparse.c"
        __label__ = 264; break; //@line 2268 "xmlparse.c"
      case 70: // $bb64
        var $334=$208+112; //@line 2270 "xmlparse.c"
        var $335=HEAP[$334]; //@line 2270 "xmlparse.c"
        var $336=($335)!=0; //@line 2270 "xmlparse.c"
        if ($336) { __label__ = 71; break; } else { __label__ = 144; break; } //@line 2270 "xmlparse.c"
      case 71: // $bb65
        var $337=$entity; //@line 2272 "xmlparse.c"
        var $338=$337+32; //@line 2272 "xmlparse.c"
        HEAP[$338]=1; //@line 2272 "xmlparse.c"
        var $339=$parser_addr; //@line 2273 "xmlparse.c"
        $parser_addr_i=$339;
        var $340=$parser_addr_i; //@line 5367 "xmlparse.c"
        var $341=$340+340; //@line 5367 "xmlparse.c"
        var $342=HEAP[$341]; //@line 5367 "xmlparse.c"
        $dtd_i=$342; //@line 5367 "xmlparse.c"
        $needSep_i=0; //@line 5369 "xmlparse.c"
        var $343=$dtd_i; //@line 5371 "xmlparse.c"
        var $344=$343+132; //@line 5371 "xmlparse.c"
        var $345=$344+4; //@line 5371 "xmlparse.c"
        var $346=HEAP[$345]; //@line 5371 "xmlparse.c"
        var $347=($346)!=0; //@line 5371 "xmlparse.c"
        if ($347) { __label__ = 72; break; } else { __label__ = 84; break; } //@line 5371 "xmlparse.c"
      case 72: // $bb_i
        var $348=$parser_addr_i; //@line 5374 "xmlparse.c"
        var $349=$348+400; //@line 5374 "xmlparse.c"
        var $350=$349+12; //@line 5374 "xmlparse.c"
        var $351=HEAP[$350]; //@line 5374 "xmlparse.c"
        var $352=$parser_addr_i; //@line 5374 "xmlparse.c"
        var $353=$352+400; //@line 5374 "xmlparse.c"
        var $354=$353+8; //@line 5374 "xmlparse.c"
        var $355=HEAP[$354]; //@line 5374 "xmlparse.c"
        var $356=($351)!=($355); //@line 5374 "xmlparse.c"
        if ($356) { __label__ = 75; break; } else { __label__ = 73; break; } //@line 5374 "xmlparse.c"
      case 73: // $bb1_i
        var $357=$parser_addr_i; //@line 5374 "xmlparse.c"
        var $358=$357+400; //@line 5374 "xmlparse.c"
        var $359=_poolGrow($358); //@line 5374 "xmlparse.c"
        var $360=($359)!=0; //@line 5374 "xmlparse.c"
        if ($360) { __label__ = 75; break; } else { __label__ = 74; break; } //@line 5374 "xmlparse.c"
      case 74: // $bb5_i
        $iftmp_259_i=1; //@line 5374 "xmlparse.c"
        $3=0; //@line 5375 "xmlparse.c"
        __label__ = 139; break; //@line 5375 "xmlparse.c"
      case 75: // $bb6_i
        var $361=$parser_addr_i; //@line 5374 "xmlparse.c"
        var $362=$361+400; //@line 5374 "xmlparse.c"
        var $363=$362+12; //@line 5374 "xmlparse.c"
        var $364=HEAP[$363]; //@line 5374 "xmlparse.c"
        HEAP[$364]=61; //@line 5374 "xmlparse.c"
        var $365=$364+1; //@line 5374 "xmlparse.c"
        var $366=$parser_addr_i; //@line 5374 "xmlparse.c"
        var $367=$366+400; //@line 5374 "xmlparse.c"
        var $368=$367+12; //@line 5374 "xmlparse.c"
        HEAP[$368]=$365; //@line 5374 "xmlparse.c"
        $iftmp_259_i=0; //@line 5374 "xmlparse.c"
        var $369=$dtd_i; //@line 5376 "xmlparse.c"
        var $370=$369+132; //@line 5376 "xmlparse.c"
        var $371=$370+4; //@line 5376 "xmlparse.c"
        var $372=HEAP[$371]; //@line 5376 "xmlparse.c"
        var $373=$372+20; //@line 5376 "xmlparse.c"
        var $374=HEAP[$373]; //@line 5376 "xmlparse.c"
        $len_i=$374; //@line 5376 "xmlparse.c"
        var $375=$parser_addr_i; //@line 5377 "xmlparse.c"
        var $376=$375+456; //@line 5377 "xmlparse.c"
        var $377=HEAP[$376]; //@line 5377 "xmlparse.c"
        var $378=($377)!=0; //@line 5377 "xmlparse.c"
        if ($378) { __label__ = 76; break; } else { __label__ = 77; break; } //@line 5377 "xmlparse.c"
      case 76: // $bb7_i
        var $379=$len_i; //@line 5378 "xmlparse.c"
        var $380=($379) - 1; //@line 5378 "xmlparse.c"
        $len_i=$380; //@line 5378 "xmlparse.c"
        __label__ = 77; break; //@line 5378 "xmlparse.c"
      case 77: // $bb8_i
        $i_i=0; //@line 5379 "xmlparse.c"
        __label__ = 82; break; //@line 5379 "xmlparse.c"
      case 78: // $bb9_i
        var $381=$parser_addr_i; //@line 5380 "xmlparse.c"
        var $382=$381+400; //@line 5380 "xmlparse.c"
        var $383=$382+12; //@line 5380 "xmlparse.c"
        var $384=HEAP[$383]; //@line 5380 "xmlparse.c"
        var $385=$parser_addr_i; //@line 5380 "xmlparse.c"
        var $386=$385+400; //@line 5380 "xmlparse.c"
        var $387=$386+8; //@line 5380 "xmlparse.c"
        var $388=HEAP[$387]; //@line 5380 "xmlparse.c"
        var $389=($384)!=($388); //@line 5380 "xmlparse.c"
        if ($389) { __label__ = 81; break; } else { __label__ = 79; break; } //@line 5380 "xmlparse.c"
      case 79: // $bb10_i
        var $390=$parser_addr_i; //@line 5380 "xmlparse.c"
        var $391=$390+400; //@line 5380 "xmlparse.c"
        var $392=_poolGrow($391); //@line 5380 "xmlparse.c"
        var $393=($392)!=0; //@line 5380 "xmlparse.c"
        if ($393) { __label__ = 81; break; } else { __label__ = 80; break; } //@line 5380 "xmlparse.c"
      case 80: // $bb15_i
        $iftmp_260_i=1; //@line 5380 "xmlparse.c"
        $3=0; //@line 5381 "xmlparse.c"
        __label__ = 139; break; //@line 5381 "xmlparse.c"
      case 81: // $bb16_i
        var $394=$parser_addr_i; //@line 5380 "xmlparse.c"
        var $395=$394+400; //@line 5380 "xmlparse.c"
        var $396=$395+12; //@line 5380 "xmlparse.c"
        var $397=HEAP[$396]; //@line 5380 "xmlparse.c"
        var $398=$dtd_i; //@line 5380 "xmlparse.c"
        var $399=$398+132; //@line 5380 "xmlparse.c"
        var $400=$399+4; //@line 5380 "xmlparse.c"
        var $401=HEAP[$400]; //@line 5380 "xmlparse.c"
        var $402=$401+16; //@line 5380 "xmlparse.c"
        var $403=HEAP[$402]; //@line 5380 "xmlparse.c"
        var $404=$i_i; //@line 5380 "xmlparse.c"
        var $405=$403+$404; //@line 5380 "xmlparse.c"
        var $406=HEAP[$405]; //@line 5380 "xmlparse.c"
        HEAP[$397]=$406; //@line 5380 "xmlparse.c"
        var $407=$397+1; //@line 5380 "xmlparse.c"
        var $408=$parser_addr_i; //@line 5380 "xmlparse.c"
        var $409=$408+400; //@line 5380 "xmlparse.c"
        var $410=$409+12; //@line 5380 "xmlparse.c"
        HEAP[$410]=$407; //@line 5380 "xmlparse.c"
        $iftmp_260_i=0; //@line 5380 "xmlparse.c"
        var $411=$i_i; //@line 5379 "xmlparse.c"
        var $412=($411) + 1; //@line 5379 "xmlparse.c"
        $i_i=$412; //@line 5379 "xmlparse.c"
        __label__ = 82; break; //@line 5379 "xmlparse.c"
      case 82: // $bb17_i
        var $413=$i_i; //@line 5379 "xmlparse.c"
        var $414=$len_i; //@line 5379 "xmlparse.c"
        var $415=($413) < ($414); //@line 5379 "xmlparse.c"
        if ($415) { __label__ = 78; break; } else { __label__ = 83; break; } //@line 5379 "xmlparse.c"
      case 83: // $bb18_i
        $needSep_i=1; //@line 5382 "xmlparse.c"
        __label__ = 84; break; //@line 5382 "xmlparse.c"
      case 84: // $bb19_i
        var $416=$dtd_i; //@line 5385 "xmlparse.c"
        var $417=$416+60; //@line 5385 "xmlparse.c"
        $iter_addr_i_i=$iter_i;
        $table_addr_i_i=$417;
        var $418=$table_addr_i_i; //@line 5950 "xmlparse.c"
        var $419=$418; //@line 5950 "xmlparse.c"
        var $420=HEAP[$419]; //@line 5950 "xmlparse.c"
        var $421=$iter_addr_i_i; //@line 5950 "xmlparse.c"
        var $422=$421; //@line 5950 "xmlparse.c"
        HEAP[$422]=$420; //@line 5950 "xmlparse.c"
        var $423=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $424=$423; //@line 5951 "xmlparse.c"
        var $425=HEAP[$424]; //@line 5951 "xmlparse.c"
        var $426=$table_addr_i_i; //@line 5951 "xmlparse.c"
        var $427=$426+8; //@line 5951 "xmlparse.c"
        var $428=HEAP[$427]; //@line 5951 "xmlparse.c"
        var $429=$425+4*$428; //@line 5951 "xmlparse.c"
        var $430=$iter_addr_i_i; //@line 5951 "xmlparse.c"
        var $431=$430+4; //@line 5951 "xmlparse.c"
        HEAP[$431]=$429; //@line 5951 "xmlparse.c"
        __label__ = 85; break; //@line 5385 "xmlparse.c"
      case 85: // $bb20_i
        $iter_addr_i1_i=$iter_i;
        __label__ = 88; break; //@line 5957 "xmlparse.c"
      case 86: // $bb_i_i
        var $432=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $433=$432; //@line 5958 "xmlparse.c"
        var $434=HEAP[$433]; //@line 5958 "xmlparse.c"
        var $435=HEAP[$434]; //@line 5958 "xmlparse.c"
        $tem_i_i=$435; //@line 5958 "xmlparse.c"
        var $436=$434+4; //@line 5958 "xmlparse.c"
        var $437=$iter_addr_i1_i; //@line 5958 "xmlparse.c"
        var $438=$437; //@line 5958 "xmlparse.c"
        HEAP[$438]=$436; //@line 5958 "xmlparse.c"
        var $439=$tem_i_i; //@line 5959 "xmlparse.c"
        var $440=($439)!=0; //@line 5959 "xmlparse.c"
        if ($440) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 5959 "xmlparse.c"
      case 87: // $bb1_i_i
        var $441=$tem_i_i; //@line 5960 "xmlparse.c"
        $2=$441; //@line 5960 "xmlparse.c"
        __label__ = 90; break; //@line 5960 "xmlparse.c"
      case 88: // $bb2_i_i
        var $442=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $443=$442; //@line 5957 "xmlparse.c"
        var $444=HEAP[$443]; //@line 5957 "xmlparse.c"
        var $445=$iter_addr_i1_i; //@line 5957 "xmlparse.c"
        var $446=$445+4; //@line 5957 "xmlparse.c"
        var $447=HEAP[$446]; //@line 5957 "xmlparse.c"
        var $448=($444)!=($447); //@line 5957 "xmlparse.c"
        if ($448) { __label__ = 86; break; } else { __label__ = 89; break; } //@line 5957 "xmlparse.c"
      case 89: // $bb3_i_i
        $2=0; //@line 5962 "xmlparse.c"
        __label__ = 90; break; //@line 5962 "xmlparse.c"
      case 90: // $hashTableIterNext_exit_i
        var $449=$2; //@line 5960 "xmlparse.c"
        $retval_i_i=$449; //@line 5960 "xmlparse.c"
        var $retval5_i_i=$retval_i_i; //@line 5960 "xmlparse.c"
        var $450=$retval5_i_i; //@line 5390 "xmlparse.c"
        $prefix_i=$450; //@line 5390 "xmlparse.c"
        var $451=($450)==0; //@line 5391 "xmlparse.c"
        if ($451) { __label__ = 115; break; } else { __label__ = 91; break; } //@line 5391 "xmlparse.c"
      case 91: // $bb23_i
        var $452=$prefix_i; //@line 5393 "xmlparse.c"
        var $453=$452+4; //@line 5393 "xmlparse.c"
        var $454=HEAP[$453]; //@line 5393 "xmlparse.c"
        var $455=($454)==0; //@line 5393 "xmlparse.c"
        if ($455) { __label__ = 85; break; } else { __label__ = 92; break; } //@line 5393 "xmlparse.c"
      case 92: // $bb24_i
        var $456=$needSep_i; //@line 5395 "xmlparse.c"
        var $457=($456)!=0; //@line 5395 "xmlparse.c"
        if ($457) { __label__ = 93; break; } else { __label__ = 97; break; } //@line 5395 "xmlparse.c"
      case 93: // $bb25_i
        var $458=$parser_addr_i; //@line 5395 "xmlparse.c"
        var $459=$458+400; //@line 5395 "xmlparse.c"
        var $460=$459+12; //@line 5395 "xmlparse.c"
        var $461=HEAP[$460]; //@line 5395 "xmlparse.c"
        var $462=$parser_addr_i; //@line 5395 "xmlparse.c"
        var $463=$462+400; //@line 5395 "xmlparse.c"
        var $464=$463+8; //@line 5395 "xmlparse.c"
        var $465=HEAP[$464]; //@line 5395 "xmlparse.c"
        var $466=($461)!=($465); //@line 5395 "xmlparse.c"
        if ($466) { __label__ = 95; break; } else { __label__ = 94; break; } //@line 5395 "xmlparse.c"
      case 94: // $bb26_i
        var $467=$parser_addr_i; //@line 5395 "xmlparse.c"
        var $468=$467+400; //@line 5395 "xmlparse.c"
        var $469=_poolGrow($468); //@line 5395 "xmlparse.c"
        var $470=($469)!=0; //@line 5395 "xmlparse.c"
        if ($470) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 5395 "xmlparse.c"
      case 95: // $bb29_i
        var $471=$parser_addr_i; //@line 5395 "xmlparse.c"
        var $472=$471+400; //@line 5395 "xmlparse.c"
        var $473=$472+12; //@line 5395 "xmlparse.c"
        var $474=HEAP[$473]; //@line 5395 "xmlparse.c"
        HEAP[$474]=12; //@line 5395 "xmlparse.c"
        var $475=$474+1; //@line 5395 "xmlparse.c"
        var $476=$parser_addr_i; //@line 5395 "xmlparse.c"
        var $477=$476+400; //@line 5395 "xmlparse.c"
        var $478=$477+12; //@line 5395 "xmlparse.c"
        HEAP[$478]=$475; //@line 5395 "xmlparse.c"
        $iftmp_261_i=0; //@line 5395 "xmlparse.c"
        __label__ = 97; break;
      case 96: // $bb31_i
        $iftmp_261_i=1; //@line 5395 "xmlparse.c"
        $3=0; //@line 5396 "xmlparse.c"
        __label__ = 139; break; //@line 5396 "xmlparse.c"
      case 97: // $bb32_i
        var $479=$prefix_i; //@line 5397 "xmlparse.c"
        var $480=$479; //@line 5397 "xmlparse.c"
        var $481=HEAP[$480]; //@line 5397 "xmlparse.c"
        $s_i=$481; //@line 5397 "xmlparse.c"
        __label__ = 102; break; //@line 5397 "xmlparse.c"
      case 98: // $bb33_i
        if ($509) { __label__ = 101; break; } else { __label__ = 99; break; } //@line 5398 "xmlparse.c"
      case 99: // $bb34_i
        var $482=$parser_addr_i; //@line 5398 "xmlparse.c"
        var $483=$482+400; //@line 5398 "xmlparse.c"
        var $484=_poolGrow($483); //@line 5398 "xmlparse.c"
        var $485=($484)!=0; //@line 5398 "xmlparse.c"
        if ($485) { __label__ = 101; break; } else { __label__ = 100; break; } //@line 5398 "xmlparse.c"
      case 100: // $bb39_i
        $iftmp_262_i=1; //@line 5398 "xmlparse.c"
        $3=0; //@line 5399 "xmlparse.c"
        __label__ = 139; break; //@line 5399 "xmlparse.c"
      case 101: // $bb40_i
        var $486=$parser_addr_i; //@line 5398 "xmlparse.c"
        var $487=$486+400; //@line 5398 "xmlparse.c"
        var $488=$487+12; //@line 5398 "xmlparse.c"
        var $489=HEAP[$488]; //@line 5398 "xmlparse.c"
        var $490=$s_i; //@line 5398 "xmlparse.c"
        var $491=HEAP[$490]; //@line 5398 "xmlparse.c"
        HEAP[$489]=$491; //@line 5398 "xmlparse.c"
        var $492=$489+1; //@line 5398 "xmlparse.c"
        var $493=$parser_addr_i; //@line 5398 "xmlparse.c"
        var $494=$493+400; //@line 5398 "xmlparse.c"
        var $495=$494+12; //@line 5398 "xmlparse.c"
        HEAP[$495]=$492; //@line 5398 "xmlparse.c"
        $iftmp_262_i=0; //@line 5398 "xmlparse.c"
        var $496=$s_i; //@line 5397 "xmlparse.c"
        var $497=$496+1; //@line 5397 "xmlparse.c"
        $s_i=$497; //@line 5397 "xmlparse.c"
        __label__ = 102; break; //@line 5397 "xmlparse.c"
      case 102: // $bb41_i
        var $498=$s_i; //@line 5397 "xmlparse.c"
        var $499=HEAP[$498]; //@line 5397 "xmlparse.c"
        var $500=($499)!=0; //@line 5397 "xmlparse.c"
        var $501=$parser_addr_i; //@line 5398 "xmlparse.c"
        var $502=$501+400; //@line 5398 "xmlparse.c"
        var $503=$502+12; //@line 5398 "xmlparse.c"
        var $504=HEAP[$503]; //@line 5398 "xmlparse.c"
        var $505=$parser_addr_i; //@line 5398 "xmlparse.c"
        var $506=$505+400; //@line 5398 "xmlparse.c"
        var $507=$506+8; //@line 5398 "xmlparse.c"
        var $508=HEAP[$507]; //@line 5398 "xmlparse.c"
        var $509=($504)!=($508); //@line 5398 "xmlparse.c"
        if ($500) { __label__ = 98; break; } else { __label__ = 103; break; } //@line 5397 "xmlparse.c"
      case 103: // $bb42_i
        if ($509) { __label__ = 106; break; } else { __label__ = 104; break; } //@line 5400 "xmlparse.c"
      case 104: // $bb43_i
        var $510=$parser_addr_i; //@line 5400 "xmlparse.c"
        var $511=$510+400; //@line 5400 "xmlparse.c"
        var $512=_poolGrow($511); //@line 5400 "xmlparse.c"
        var $513=($512)!=0; //@line 5400 "xmlparse.c"
        if ($513) { __label__ = 106; break; } else { __label__ = 105; break; } //@line 5400 "xmlparse.c"
      case 105: // $bb48_i
        $iftmp_263_i=1; //@line 5400 "xmlparse.c"
        $3=0; //@line 5401 "xmlparse.c"
        __label__ = 139; break; //@line 5401 "xmlparse.c"
      case 106: // $bb49_i
        var $514=$parser_addr_i; //@line 5400 "xmlparse.c"
        var $515=$514+400; //@line 5400 "xmlparse.c"
        var $516=$515+12; //@line 5400 "xmlparse.c"
        var $517=HEAP[$516]; //@line 5400 "xmlparse.c"
        HEAP[$517]=61; //@line 5400 "xmlparse.c"
        var $518=$517+1; //@line 5400 "xmlparse.c"
        var $519=$parser_addr_i; //@line 5400 "xmlparse.c"
        var $520=$519+400; //@line 5400 "xmlparse.c"
        var $521=$520+12; //@line 5400 "xmlparse.c"
        HEAP[$521]=$518; //@line 5400 "xmlparse.c"
        $iftmp_263_i=0; //@line 5400 "xmlparse.c"
        var $522=$prefix_i; //@line 5402 "xmlparse.c"
        var $523=$522+4; //@line 5402 "xmlparse.c"
        var $524=HEAP[$523]; //@line 5402 "xmlparse.c"
        var $525=$524+20; //@line 5402 "xmlparse.c"
        var $526=HEAP[$525]; //@line 5402 "xmlparse.c"
        $len22_i=$526; //@line 5402 "xmlparse.c"
        var $527=$parser_addr_i; //@line 5403 "xmlparse.c"
        var $528=$527+456; //@line 5403 "xmlparse.c"
        var $529=HEAP[$528]; //@line 5403 "xmlparse.c"
        var $530=($529)!=0; //@line 5403 "xmlparse.c"
        if ($530) { __label__ = 107; break; } else { __label__ = 108; break; } //@line 5403 "xmlparse.c"
      case 107: // $bb50_i
        var $531=$len22_i; //@line 5404 "xmlparse.c"
        var $532=($531) - 1; //@line 5404 "xmlparse.c"
        $len22_i=$532; //@line 5404 "xmlparse.c"
        __label__ = 108; break; //@line 5404 "xmlparse.c"
      case 108: // $bb51_i
        $i21_i=0; //@line 5405 "xmlparse.c"
        __label__ = 113; break; //@line 5405 "xmlparse.c"
      case 109: // $bb52_i
        var $533=$parser_addr_i; //@line 5406 "xmlparse.c"
        var $534=$533+400; //@line 5406 "xmlparse.c"
        var $535=$534+12; //@line 5406 "xmlparse.c"
        var $536=HEAP[$535]; //@line 5406 "xmlparse.c"
        var $537=$parser_addr_i; //@line 5406 "xmlparse.c"
        var $538=$537+400; //@line 5406 "xmlparse.c"
        var $539=$538+8; //@line 5406 "xmlparse.c"
        var $540=HEAP[$539]; //@line 5406 "xmlparse.c"
        var $541=($536)!=($540); //@line 5406 "xmlparse.c"
        if ($541) { __label__ = 112; break; } else { __label__ = 110; break; } //@line 5406 "xmlparse.c"
      case 110: // $bb53_i
        var $542=$parser_addr_i; //@line 5406 "xmlparse.c"
        var $543=$542+400; //@line 5406 "xmlparse.c"
        var $544=_poolGrow($543); //@line 5406 "xmlparse.c"
        var $545=($544)!=0; //@line 5406 "xmlparse.c"
        if ($545) { __label__ = 112; break; } else { __label__ = 111; break; } //@line 5406 "xmlparse.c"
      case 111: // $bb58_i
        $iftmp_264_i=1; //@line 5406 "xmlparse.c"
        $3=0; //@line 5407 "xmlparse.c"
        __label__ = 139; break; //@line 5407 "xmlparse.c"
      case 112: // $bb59_i
        var $546=$parser_addr_i; //@line 5406 "xmlparse.c"
        var $547=$546+400; //@line 5406 "xmlparse.c"
        var $548=$547+12; //@line 5406 "xmlparse.c"
        var $549=HEAP[$548]; //@line 5406 "xmlparse.c"
        var $550=$prefix_i; //@line 5406 "xmlparse.c"
        var $551=$550+4; //@line 5406 "xmlparse.c"
        var $552=HEAP[$551]; //@line 5406 "xmlparse.c"
        var $553=$552+16; //@line 5406 "xmlparse.c"
        var $554=HEAP[$553]; //@line 5406 "xmlparse.c"
        var $555=$i21_i; //@line 5406 "xmlparse.c"
        var $556=$554+$555; //@line 5406 "xmlparse.c"
        var $557=HEAP[$556]; //@line 5406 "xmlparse.c"
        HEAP[$549]=$557; //@line 5406 "xmlparse.c"
        var $558=$549+1; //@line 5406 "xmlparse.c"
        var $559=$parser_addr_i; //@line 5406 "xmlparse.c"
        var $560=$559+400; //@line 5406 "xmlparse.c"
        var $561=$560+12; //@line 5406 "xmlparse.c"
        HEAP[$561]=$558; //@line 5406 "xmlparse.c"
        $iftmp_264_i=0; //@line 5406 "xmlparse.c"
        var $562=$i21_i; //@line 5405 "xmlparse.c"
        var $563=($562) + 1; //@line 5405 "xmlparse.c"
        $i21_i=$563; //@line 5405 "xmlparse.c"
        __label__ = 113; break; //@line 5405 "xmlparse.c"
      case 113: // $bb60_i
        var $564=$i21_i; //@line 5405 "xmlparse.c"
        var $565=$len22_i; //@line 5405 "xmlparse.c"
        var $566=($564) < ($565); //@line 5405 "xmlparse.c"
        if ($566) { __label__ = 109; break; } else { __label__ = 114; break; } //@line 5405 "xmlparse.c"
      case 114: // $bb61_i
        $needSep_i=1; //@line 5408 "xmlparse.c"
        __label__ = 85; break; //@line 5408 "xmlparse.c"
      case 115: // $bb63_i
        var $567=$dtd_i; //@line 5412 "xmlparse.c"
        var $568=$567; //@line 5412 "xmlparse.c"
        $iter_addr_i2_i=$iter_i;
        $table_addr_i3_i=$568;
        var $569=$table_addr_i3_i; //@line 5950 "xmlparse.c"
        var $570=$569; //@line 5950 "xmlparse.c"
        var $571=HEAP[$570]; //@line 5950 "xmlparse.c"
        var $572=$iter_addr_i2_i; //@line 5950 "xmlparse.c"
        var $573=$572; //@line 5950 "xmlparse.c"
        HEAP[$573]=$571; //@line 5950 "xmlparse.c"
        var $574=$iter_addr_i2_i; //@line 5951 "xmlparse.c"
        var $575=$574; //@line 5951 "xmlparse.c"
        var $576=HEAP[$575]; //@line 5951 "xmlparse.c"
        var $577=$table_addr_i3_i; //@line 5951 "xmlparse.c"
        var $578=$577+8; //@line 5951 "xmlparse.c"
        var $579=HEAP[$578]; //@line 5951 "xmlparse.c"
        var $580=$576+4*$579; //@line 5951 "xmlparse.c"
        var $581=$iter_addr_i2_i; //@line 5951 "xmlparse.c"
        var $582=$581+4; //@line 5951 "xmlparse.c"
        HEAP[$582]=$580; //@line 5951 "xmlparse.c"
        __label__ = 116; break; //@line 5412 "xmlparse.c"
      case 116: // $bb64_i
        $iter_addr_i4_i=$iter_i;
        __label__ = 119; break; //@line 5957 "xmlparse.c"
      case 117: // $bb_i7_i
        var $583=$iter_addr_i4_i; //@line 5958 "xmlparse.c"
        var $584=$583; //@line 5958 "xmlparse.c"
        var $585=HEAP[$584]; //@line 5958 "xmlparse.c"
        var $586=HEAP[$585]; //@line 5958 "xmlparse.c"
        $tem_i6_i=$586; //@line 5958 "xmlparse.c"
        var $587=$585+4; //@line 5958 "xmlparse.c"
        var $588=$iter_addr_i4_i; //@line 5958 "xmlparse.c"
        var $589=$588; //@line 5958 "xmlparse.c"
        HEAP[$589]=$587; //@line 5958 "xmlparse.c"
        var $590=$tem_i6_i; //@line 5959 "xmlparse.c"
        var $591=($590)!=0; //@line 5959 "xmlparse.c"
        if ($591) { __label__ = 118; break; } else { __label__ = 119; break; } //@line 5959 "xmlparse.c"
      case 118: // $bb1_i8_i
        var $592=$tem_i6_i; //@line 5960 "xmlparse.c"
        $1=$592; //@line 5960 "xmlparse.c"
        __label__ = 121; break; //@line 5960 "xmlparse.c"
      case 119: // $bb2_i9_i
        var $593=$iter_addr_i4_i; //@line 5957 "xmlparse.c"
        var $594=$593; //@line 5957 "xmlparse.c"
        var $595=HEAP[$594]; //@line 5957 "xmlparse.c"
        var $596=$iter_addr_i4_i; //@line 5957 "xmlparse.c"
        var $597=$596+4; //@line 5957 "xmlparse.c"
        var $598=HEAP[$597]; //@line 5957 "xmlparse.c"
        var $599=($595)!=($598); //@line 5957 "xmlparse.c"
        if ($599) { __label__ = 117; break; } else { __label__ = 120; break; } //@line 5957 "xmlparse.c"
      case 120: // $bb3_i10_i
        $1=0; //@line 5962 "xmlparse.c"
        __label__ = 121; break; //@line 5962 "xmlparse.c"
      case 121: // $hashTableIterNext_exit12_i
        var $600=$1; //@line 5960 "xmlparse.c"
        $retval_i5_i=$600; //@line 5960 "xmlparse.c"
        var $retval5_i11_i=$retval_i5_i; //@line 5960 "xmlparse.c"
        var $601=$retval5_i11_i; //@line 5415 "xmlparse.c"
        $e_i=$601; //@line 5415 "xmlparse.c"
        var $602=($601)==0; //@line 5416 "xmlparse.c"
        if ($602) { __label__ = 135; break; } else { __label__ = 122; break; } //@line 5416 "xmlparse.c"
      case 122: // $bb66_i
        var $603=$e_i; //@line 5418 "xmlparse.c"
        var $604=$603+32; //@line 5418 "xmlparse.c"
        var $605=HEAP[$604]; //@line 5418 "xmlparse.c"
        var $606=($605)==0; //@line 5418 "xmlparse.c"
        if ($606) { __label__ = 116; break; } else { __label__ = 123; break; } //@line 5418 "xmlparse.c"
      case 123: // $bb67_i
        var $607=$needSep_i; //@line 5420 "xmlparse.c"
        var $608=($607)!=0; //@line 5420 "xmlparse.c"
        if ($608) { __label__ = 124; break; } else { __label__ = 128; break; } //@line 5420 "xmlparse.c"
      case 124: // $bb68_i
        var $609=$parser_addr_i; //@line 5420 "xmlparse.c"
        var $610=$609+400; //@line 5420 "xmlparse.c"
        var $611=$610+12; //@line 5420 "xmlparse.c"
        var $612=HEAP[$611]; //@line 5420 "xmlparse.c"
        var $613=$parser_addr_i; //@line 5420 "xmlparse.c"
        var $614=$613+400; //@line 5420 "xmlparse.c"
        var $615=$614+8; //@line 5420 "xmlparse.c"
        var $616=HEAP[$615]; //@line 5420 "xmlparse.c"
        var $617=($612)!=($616); //@line 5420 "xmlparse.c"
        if ($617) { __label__ = 126; break; } else { __label__ = 125; break; } //@line 5420 "xmlparse.c"
      case 125: // $bb69_i
        var $618=$parser_addr_i; //@line 5420 "xmlparse.c"
        var $619=$618+400; //@line 5420 "xmlparse.c"
        var $620=_poolGrow($619); //@line 5420 "xmlparse.c"
        var $621=($620)!=0; //@line 5420 "xmlparse.c"
        if ($621) { __label__ = 126; break; } else { __label__ = 127; break; } //@line 5420 "xmlparse.c"
      case 126: // $bb72_i
        var $622=$parser_addr_i; //@line 5420 "xmlparse.c"
        var $623=$622+400; //@line 5420 "xmlparse.c"
        var $624=$623+12; //@line 5420 "xmlparse.c"
        var $625=HEAP[$624]; //@line 5420 "xmlparse.c"
        HEAP[$625]=12; //@line 5420 "xmlparse.c"
        var $626=$625+1; //@line 5420 "xmlparse.c"
        var $627=$parser_addr_i; //@line 5420 "xmlparse.c"
        var $628=$627+400; //@line 5420 "xmlparse.c"
        var $629=$628+12; //@line 5420 "xmlparse.c"
        HEAP[$629]=$626; //@line 5420 "xmlparse.c"
        $iftmp_265_i=0; //@line 5420 "xmlparse.c"
        __label__ = 128; break;
      case 127: // $bb74_i
        $iftmp_265_i=1; //@line 5420 "xmlparse.c"
        $3=0; //@line 5421 "xmlparse.c"
        __label__ = 139; break; //@line 5421 "xmlparse.c"
      case 128: // $bb75_i
        var $630=$e_i; //@line 5422 "xmlparse.c"
        var $631=$630; //@line 5422 "xmlparse.c"
        var $632=HEAP[$631]; //@line 5422 "xmlparse.c"
        $s65_i=$632; //@line 5422 "xmlparse.c"
        __label__ = 133; break; //@line 5422 "xmlparse.c"
      case 129: // $bb76_i
        var $633=$parser_addr_i; //@line 5423 "xmlparse.c"
        var $634=$633+400; //@line 5423 "xmlparse.c"
        var $635=$634+12; //@line 5423 "xmlparse.c"
        var $636=HEAP[$635]; //@line 5423 "xmlparse.c"
        var $637=$parser_addr_i; //@line 5423 "xmlparse.c"
        var $638=$637+400; //@line 5423 "xmlparse.c"
        var $639=$638+8; //@line 5423 "xmlparse.c"
        var $640=HEAP[$639]; //@line 5423 "xmlparse.c"
        var $641=($636)!=($640); //@line 5423 "xmlparse.c"
        if ($641) { __label__ = 132; break; } else { __label__ = 130; break; } //@line 5423 "xmlparse.c"
      case 130: // $bb77_i
        var $642=$parser_addr_i; //@line 5423 "xmlparse.c"
        var $643=$642+400; //@line 5423 "xmlparse.c"
        var $644=_poolGrow($643); //@line 5423 "xmlparse.c"
        var $645=($644)!=0; //@line 5423 "xmlparse.c"
        if ($645) { __label__ = 132; break; } else { __label__ = 131; break; } //@line 5423 "xmlparse.c"
      case 131: // $bb82_i
        $iftmp_266_i=1; //@line 5423 "xmlparse.c"
        $3=0; //@line 5424 "xmlparse.c"
        __label__ = 139; break; //@line 5424 "xmlparse.c"
      case 132: // $bb83_i
        var $646=$parser_addr_i; //@line 5423 "xmlparse.c"
        var $647=$646+400; //@line 5423 "xmlparse.c"
        var $648=$647+12; //@line 5423 "xmlparse.c"
        var $649=HEAP[$648]; //@line 5423 "xmlparse.c"
        var $650=$s65_i; //@line 5423 "xmlparse.c"
        var $651=HEAP[$650]; //@line 5423 "xmlparse.c"
        HEAP[$649]=$651; //@line 5423 "xmlparse.c"
        var $652=$649+1; //@line 5423 "xmlparse.c"
        var $653=$parser_addr_i; //@line 5423 "xmlparse.c"
        var $654=$653+400; //@line 5423 "xmlparse.c"
        var $655=$654+12; //@line 5423 "xmlparse.c"
        HEAP[$655]=$652; //@line 5423 "xmlparse.c"
        $iftmp_266_i=0; //@line 5423 "xmlparse.c"
        var $656=$s65_i; //@line 5422 "xmlparse.c"
        var $657=$656+1; //@line 5422 "xmlparse.c"
        $s65_i=$657; //@line 5422 "xmlparse.c"
        __label__ = 133; break; //@line 5422 "xmlparse.c"
      case 133: // $bb84_i
        var $658=$s65_i; //@line 5422 "xmlparse.c"
        var $659=HEAP[$658]; //@line 5422 "xmlparse.c"
        var $660=($659)!=0; //@line 5422 "xmlparse.c"
        if ($660) { __label__ = 129; break; } else { __label__ = 134; break; } //@line 5422 "xmlparse.c"
      case 134: // $bb85_i
        $needSep_i=1; //@line 5425 "xmlparse.c"
        __label__ = 116; break; //@line 5425 "xmlparse.c"
      case 135: // $bb87_i
        var $661=$parser_addr_i; //@line 5428 "xmlparse.c"
        var $662=$661+400; //@line 5428 "xmlparse.c"
        var $663=$662+12; //@line 5428 "xmlparse.c"
        var $664=HEAP[$663]; //@line 5428 "xmlparse.c"
        var $665=$parser_addr_i; //@line 5428 "xmlparse.c"
        var $666=$665+400; //@line 5428 "xmlparse.c"
        var $667=$666+8; //@line 5428 "xmlparse.c"
        var $668=HEAP[$667]; //@line 5428 "xmlparse.c"
        var $669=($664)!=($668); //@line 5428 "xmlparse.c"
        if ($669) { __label__ = 138; break; } else { __label__ = 136; break; } //@line 5428 "xmlparse.c"
      case 136: // $bb88_i
        var $670=$parser_addr_i; //@line 5428 "xmlparse.c"
        var $671=$670+400; //@line 5428 "xmlparse.c"
        var $672=_poolGrow($671); //@line 5428 "xmlparse.c"
        var $673=($672)!=0; //@line 5428 "xmlparse.c"
        if ($673) { __label__ = 138; break; } else { __label__ = 137; break; } //@line 5428 "xmlparse.c"
      case 137: // $bb93_i
        $iftmp_267_i=1; //@line 5428 "xmlparse.c"
        $3=0; //@line 5429 "xmlparse.c"
        __label__ = 139; break; //@line 5429 "xmlparse.c"
      case 138: // $bb94_i
        var $674=$parser_addr_i; //@line 5428 "xmlparse.c"
        var $675=$674+400; //@line 5428 "xmlparse.c"
        var $676=$675+12; //@line 5428 "xmlparse.c"
        var $677=HEAP[$676]; //@line 5428 "xmlparse.c"
        HEAP[$677]=0; //@line 5428 "xmlparse.c"
        var $678=$677+1; //@line 5428 "xmlparse.c"
        var $679=$parser_addr_i; //@line 5428 "xmlparse.c"
        var $680=$679+400; //@line 5428 "xmlparse.c"
        var $681=$680+12; //@line 5428 "xmlparse.c"
        HEAP[$681]=$678; //@line 5428 "xmlparse.c"
        $iftmp_267_i=0; //@line 5428 "xmlparse.c"
        var $682=$parser_addr_i; //@line 5430 "xmlparse.c"
        var $683=$682+400; //@line 5430 "xmlparse.c"
        var $684=$683+16; //@line 5430 "xmlparse.c"
        var $685=HEAP[$684]; //@line 5430 "xmlparse.c"
        $3=$685; //@line 5430 "xmlparse.c"
        __label__ = 139; break; //@line 5430 "xmlparse.c"
      case 139: // $getContext_exit
        var $686=$3; //@line 5375 "xmlparse.c"
        $retval_i=$686; //@line 5375 "xmlparse.c"
        var $retval96_i=$retval_i; //@line 5375 "xmlparse.c"
        $context=$retval96_i; //@line 2273 "xmlparse.c"
        var $687=$entity; //@line 2274 "xmlparse.c"
        var $688=$687+32; //@line 2274 "xmlparse.c"
        HEAP[$688]=0; //@line 2274 "xmlparse.c"
        var $689=$context; //@line 2275 "xmlparse.c"
        var $690=($689)==0; //@line 2275 "xmlparse.c"
        if ($690) { __label__ = 140; break; } else { __label__ = 141; break; } //@line 2275 "xmlparse.c"
      case 140: // $bb66
        $4=1; //@line 2276 "xmlparse.c"
        __label__ = 264; break; //@line 2276 "xmlparse.c"
      case 141: // $bb67
        var $691=$parser_addr; //@line 2277 "xmlparse.c"
        var $692=$691+112; //@line 2277 "xmlparse.c"
        var $693=HEAP[$692]; //@line 2277 "xmlparse.c"
        var $694=$entity; //@line 2277 "xmlparse.c"
        var $695=$694+24; //@line 2277 "xmlparse.c"
        var $696=HEAP[$695]; //@line 2277 "xmlparse.c"
        var $697=$entity; //@line 2277 "xmlparse.c"
        var $698=$697+16; //@line 2277 "xmlparse.c"
        var $699=HEAP[$698]; //@line 2277 "xmlparse.c"
        var $700=$entity; //@line 2277 "xmlparse.c"
        var $701=$700+20; //@line 2277 "xmlparse.c"
        var $702=HEAP[$701]; //@line 2277 "xmlparse.c"
        var $703=$parser_addr; //@line 2277 "xmlparse.c"
        var $704=$703+116; //@line 2277 "xmlparse.c"
        var $705=HEAP[$704]; //@line 2277 "xmlparse.c"
        var $706=$context; //@line 2277 "xmlparse.c"
        var $707=FUNCTION_TABLE[$693]($705, $706, $702, $699, $696); //@line 2277 "xmlparse.c"
        var $708=($707)==0; //@line 2277 "xmlparse.c"
        if ($708) { __label__ = 142; break; } else { __label__ = 143; break; } //@line 2277 "xmlparse.c"
      case 142: // $bb68
        $4=21; //@line 2282 "xmlparse.c"
        __label__ = 264; break; //@line 2282 "xmlparse.c"
      case 143: // $bb69
        var $709=$parser_addr; //@line 2283 "xmlparse.c"
        var $710=$709+400; //@line 2283 "xmlparse.c"
        var $711=$710+16; //@line 2283 "xmlparse.c"
        var $712=HEAP[$711]; //@line 2283 "xmlparse.c"
        var $713=$parser_addr; //@line 2283 "xmlparse.c"
        var $714=$713+400; //@line 2283 "xmlparse.c"
        var $715=$714+12; //@line 2283 "xmlparse.c"
        HEAP[$715]=$712; //@line 2283 "xmlparse.c"
        __label__ = 261; break; //@line 2283 "xmlparse.c"
      case 144: // $bb70
        var $716=$parser_addr; //@line 2285 "xmlparse.c"
        var $717=$716+80; //@line 2285 "xmlparse.c"
        var $718=HEAP[$717]; //@line 2285 "xmlparse.c"
        var $719=($718)!=0; //@line 2285 "xmlparse.c"
        if ($719) { __label__ = 145; break; } else { __label__ = 261; break; } //@line 2285 "xmlparse.c"
      case 145: // $bb71
        var $720=HEAP[$next]; //@line 2286 "xmlparse.c"
        var $721=HEAP[$s_addr]; //@line 2286 "xmlparse.c"
        var $722=$parser_addr; //@line 2286 "xmlparse.c"
        var $723=$enc_addr; //@line 2286 "xmlparse.c"
        _reportDefault($722, $723, $721, $720); //@line 2286 "xmlparse.c"
        __label__ = 261; break; //@line 2286 "xmlparse.c"
      case 146: // $bb73
        var $724=$parser_addr; //@line 2296 "xmlparse.c"
        var $725=$724+352; //@line 2296 "xmlparse.c"
        var $726=HEAP[$725]; //@line 2296 "xmlparse.c"
        var $727=($726)!=0; //@line 2296 "xmlparse.c"
        var $728=$parser_addr; //@line 2297 "xmlparse.c"
        if ($727) { __label__ = 147; break; } else { __label__ = 148; break; } //@line 2296 "xmlparse.c"
      case 147: // $bb75
        var $729=$728+352; //@line 2297 "xmlparse.c"
        var $730=HEAP[$729]; //@line 2297 "xmlparse.c"
        $tag=$730; //@line 2297 "xmlparse.c"
        var $731=$parser_addr; //@line 2298 "xmlparse.c"
        var $732=$731+352; //@line 2298 "xmlparse.c"
        var $733=HEAP[$732]; //@line 2298 "xmlparse.c"
        var $734=$733; //@line 2298 "xmlparse.c"
        var $735=HEAP[$734]; //@line 2298 "xmlparse.c"
        var $736=$parser_addr; //@line 2298 "xmlparse.c"
        var $737=$736+352; //@line 2298 "xmlparse.c"
        HEAP[$737]=$735; //@line 2298 "xmlparse.c"
        __label__ = 153; break; //@line 2298 "xmlparse.c"
      case 148: // $bb76
        var $738=$728+12; //@line 2301 "xmlparse.c"
        var $739=$738; //@line 2301 "xmlparse.c"
        var $740=HEAP[$739]; //@line 2301 "xmlparse.c"
        var $741=FUNCTION_TABLE[$740](48); //@line 2301 "xmlparse.c"
        var $742=$741; //@line 2301 "xmlparse.c"
        $tag=$742; //@line 2301 "xmlparse.c"
        var $743=$tag; //@line 2302 "xmlparse.c"
        var $744=($743)==0; //@line 2302 "xmlparse.c"
        if ($744) { __label__ = 149; break; } else { __label__ = 150; break; } //@line 2302 "xmlparse.c"
      case 149: // $bb77
        $4=1; //@line 2303 "xmlparse.c"
        __label__ = 264; break; //@line 2303 "xmlparse.c"
      case 150: // $bb78
        var $745=$parser_addr; //@line 2304 "xmlparse.c"
        var $746=$745+12; //@line 2304 "xmlparse.c"
        var $747=$746; //@line 2304 "xmlparse.c"
        var $748=HEAP[$747]; //@line 2304 "xmlparse.c"
        var $749=FUNCTION_TABLE[$748](32); //@line 2304 "xmlparse.c"
        var $750=$tag; //@line 2304 "xmlparse.c"
        var $751=$750+36; //@line 2304 "xmlparse.c"
        HEAP[$751]=$749; //@line 2304 "xmlparse.c"
        var $752=$tag; //@line 2305 "xmlparse.c"
        var $753=$752+36; //@line 2305 "xmlparse.c"
        var $754=HEAP[$753]; //@line 2305 "xmlparse.c"
        var $755=($754)==0; //@line 2305 "xmlparse.c"
        if ($755) { __label__ = 151; break; } else { __label__ = 152; break; } //@line 2305 "xmlparse.c"
      case 151: // $bb79
        var $756=$parser_addr; //@line 2306 "xmlparse.c"
        var $757=$756+12; //@line 2306 "xmlparse.c"
        var $758=$757+8; //@line 2306 "xmlparse.c"
        var $759=HEAP[$758]; //@line 2306 "xmlparse.c"
        var $760=$tag; //@line 2306 "xmlparse.c"
        var $761=$760; //@line 2306 "xmlparse.c"
        FUNCTION_TABLE[$759]($761); //@line 2306 "xmlparse.c"
        $4=1; //@line 2307 "xmlparse.c"
        __label__ = 264; break; //@line 2307 "xmlparse.c"
      case 152: // $bb80
        var $762=$tag; //@line 2309 "xmlparse.c"
        var $763=$762+36; //@line 2309 "xmlparse.c"
        var $764=HEAP[$763]; //@line 2309 "xmlparse.c"
        var $765=$764+32; //@line 2309 "xmlparse.c"
        var $766=$tag; //@line 2309 "xmlparse.c"
        var $767=$766+40; //@line 2309 "xmlparse.c"
        HEAP[$767]=$765; //@line 2309 "xmlparse.c"
        __label__ = 153; break; //@line 2309 "xmlparse.c"
      case 153: // $bb81
        var $768=$tag; //@line 2311 "xmlparse.c"
        var $769=$768+44; //@line 2311 "xmlparse.c"
        HEAP[$769]=0; //@line 2311 "xmlparse.c"
        var $770=$parser_addr; //@line 2312 "xmlparse.c"
        var $771=$770+348; //@line 2312 "xmlparse.c"
        var $772=HEAP[$771]; //@line 2312 "xmlparse.c"
        var $773=$tag; //@line 2312 "xmlparse.c"
        var $774=$773; //@line 2312 "xmlparse.c"
        HEAP[$774]=$772; //@line 2312 "xmlparse.c"
        var $775=$parser_addr; //@line 2313 "xmlparse.c"
        var $776=$775+348; //@line 2313 "xmlparse.c"
        var $777=$tag; //@line 2313 "xmlparse.c"
        HEAP[$776]=$777; //@line 2313 "xmlparse.c"
        var $778=$tag; //@line 2314 "xmlparse.c"
        var $779=$778+12; //@line 2314 "xmlparse.c"
        var $780=$779+4; //@line 2314 "xmlparse.c"
        HEAP[$780]=0; //@line 2314 "xmlparse.c"
        var $781=$tag; //@line 2315 "xmlparse.c"
        var $782=$781+12; //@line 2315 "xmlparse.c"
        var $783=$782+8; //@line 2315 "xmlparse.c"
        HEAP[$783]=0; //@line 2315 "xmlparse.c"
        var $784=HEAP[$s_addr]; //@line 2316 "xmlparse.c"
        var $785=$enc_addr; //@line 2316 "xmlparse.c"
        var $786=$785+64; //@line 2316 "xmlparse.c"
        var $787=HEAP[$786]; //@line 2316 "xmlparse.c"
        var $788=$784+$787; //@line 2316 "xmlparse.c"
        var $789=$tag; //@line 2316 "xmlparse.c"
        var $790=$789+4; //@line 2316 "xmlparse.c"
        HEAP[$790]=$788; //@line 2316 "xmlparse.c"
        var $791=$enc_addr; //@line 2317 "xmlparse.c"
        var $792=$791+28; //@line 2317 "xmlparse.c"
        var $793=HEAP[$792]; //@line 2317 "xmlparse.c"
        var $794=$tag; //@line 2317 "xmlparse.c"
        var $795=$794+4; //@line 2317 "xmlparse.c"
        var $796=HEAP[$795]; //@line 2317 "xmlparse.c"
        var $797=$enc_addr; //@line 2317 "xmlparse.c"
        var $798=FUNCTION_TABLE[$793]($797, $796); //@line 2317 "xmlparse.c"
        var $799=$tag; //@line 2317 "xmlparse.c"
        var $800=$799+8; //@line 2317 "xmlparse.c"
        HEAP[$800]=$798; //@line 2317 "xmlparse.c"
        var $801=$parser_addr; //@line 2318 "xmlparse.c"
        var $802=$801+296; //@line 2318 "xmlparse.c"
        var $803=HEAP[$802]; //@line 2318 "xmlparse.c"
        var $804=($803) + 1; //@line 2318 "xmlparse.c"
        var $805=$parser_addr; //@line 2318 "xmlparse.c"
        var $806=$805+296; //@line 2318 "xmlparse.c"
        HEAP[$806]=$804; //@line 2318 "xmlparse.c"
        var $807=$tag; //@line 2320 "xmlparse.c"
        var $808=$807+4; //@line 2320 "xmlparse.c"
        var $809=HEAP[$808]; //@line 2320 "xmlparse.c"
        var $810=$tag; //@line 2320 "xmlparse.c"
        var $811=$810+8; //@line 2320 "xmlparse.c"
        var $812=HEAP[$811]; //@line 2320 "xmlparse.c"
        var $813=$809+$812; //@line 2320 "xmlparse.c"
        $rawNameEnd=$813; //@line 2320 "xmlparse.c"
        var $814=$tag; //@line 2321 "xmlparse.c"
        var $815=$814+4; //@line 2321 "xmlparse.c"
        var $816=HEAP[$815]; //@line 2321 "xmlparse.c"
        HEAP[$fromPtr]=$816; //@line 2321 "xmlparse.c"
        var $817=$tag; //@line 2322 "xmlparse.c"
        var $818=$817+36; //@line 2322 "xmlparse.c"
        var $819=HEAP[$818]; //@line 2322 "xmlparse.c"
        HEAP[$toPtr]=$819; //@line 2322 "xmlparse.c"
        __label__ = 154; break; //@line 2322 "xmlparse.c"
      case 154: // $bb82
        var $820=$enc_addr; //@line 2326 "xmlparse.c"
        var $821=$820+56; //@line 2326 "xmlparse.c"
        var $822=HEAP[$821]; //@line 2326 "xmlparse.c"
        var $823=$tag; //@line 2326 "xmlparse.c"
        var $824=$823+40; //@line 2326 "xmlparse.c"
        var $825=HEAP[$824]; //@line 2326 "xmlparse.c"
        var $826=$825+-1; //@line 2326 "xmlparse.c"
        var $827=$enc_addr; //@line 2326 "xmlparse.c"
        var $828=$rawNameEnd; //@line 2326 "xmlparse.c"
        FUNCTION_TABLE[$822]($827, $fromPtr, $828, $toPtr, $826); //@line 2326 "xmlparse.c"
        var $829=HEAP[$toPtr]; //@line 2329 "xmlparse.c"
        var $830=($829); //@line 2329 "xmlparse.c"
        var $831=$tag; //@line 2329 "xmlparse.c"
        var $832=$831+36; //@line 2329 "xmlparse.c"
        var $833=HEAP[$832]; //@line 2329 "xmlparse.c"
        var $834=($833); //@line 2329 "xmlparse.c"
        var $835=($830) - ($834); //@line 2329 "xmlparse.c"
        $convLen=$835; //@line 2329 "xmlparse.c"
        var $836=HEAP[$fromPtr]; //@line 2330 "xmlparse.c"
        var $837=$rawNameEnd; //@line 2330 "xmlparse.c"
        var $838=($836)==($837); //@line 2330 "xmlparse.c"
        var $839=$tag; //@line 2331 "xmlparse.c"
        if ($838) { __label__ = 155; break; } else { __label__ = 156; break; } //@line 2330 "xmlparse.c"
      case 155: // $bb83
        var $840=$839+12; //@line 2331 "xmlparse.c"
        var $841=$840+12; //@line 2331 "xmlparse.c"
        var $842=$convLen; //@line 2331 "xmlparse.c"
        HEAP[$841]=$842; //@line 2331 "xmlparse.c"
        var $843=$tag; //@line 2345 "xmlparse.c"
        var $844=$843+36; //@line 2345 "xmlparse.c"
        var $845=HEAP[$844]; //@line 2345 "xmlparse.c"
        var $846=$tag; //@line 2345 "xmlparse.c"
        var $847=$846+12; //@line 2345 "xmlparse.c"
        var $848=$847; //@line 2345 "xmlparse.c"
        HEAP[$848]=$845; //@line 2345 "xmlparse.c"
        var $849=HEAP[$toPtr]; //@line 2346 "xmlparse.c"
        HEAP[$849]=0; //@line 2346 "xmlparse.c"
        var $850=$tag; //@line 2347 "xmlparse.c"
        var $851=$850+44; //@line 2347 "xmlparse.c"
        var $852=$tag; //@line 2347 "xmlparse.c"
        var $853=$852+12; //@line 2347 "xmlparse.c"
        var $854=HEAP[$s_addr]; //@line 2347 "xmlparse.c"
        var $855=$parser_addr; //@line 2347 "xmlparse.c"
        var $856=$enc_addr; //@line 2347 "xmlparse.c"
        var $857=_storeAtts($855, $856, $854, $853, $851); //@line 2347 "xmlparse.c"
        $result74=$857; //@line 2347 "xmlparse.c"
        var $858=$result74; //@line 2348 "xmlparse.c"
        var $859=($858)!=0; //@line 2348 "xmlparse.c"
        if ($859) { __label__ = 159; break; } else { __label__ = 160; break; } //@line 2348 "xmlparse.c"
      case 156: // $bb84
        var $860=$839+40; //@line 2334 "xmlparse.c"
        var $861=HEAP[$860]; //@line 2334 "xmlparse.c"
        var $862=($861); //@line 2334 "xmlparse.c"
        var $863=$tag; //@line 2334 "xmlparse.c"
        var $864=$863+36; //@line 2334 "xmlparse.c"
        var $865=HEAP[$864]; //@line 2334 "xmlparse.c"
        var $866=($865); //@line 2334 "xmlparse.c"
        var $867=($862) - ($866); //@line 2334 "xmlparse.c"
        var $868=($867) << 1; //@line 2334 "xmlparse.c"
        $bufSize=$868; //@line 2334 "xmlparse.c"
        var $869=$parser_addr; //@line 2336 "xmlparse.c"
        var $870=$869+12; //@line 2336 "xmlparse.c"
        var $871=$870+4; //@line 2336 "xmlparse.c"
        var $872=HEAP[$871]; //@line 2336 "xmlparse.c"
        var $873=$bufSize; //@line 2336 "xmlparse.c"
        var $874=$tag; //@line 2336 "xmlparse.c"
        var $875=$874+36; //@line 2336 "xmlparse.c"
        var $876=HEAP[$875]; //@line 2336 "xmlparse.c"
        var $877=FUNCTION_TABLE[$872]($876, $873); //@line 2336 "xmlparse.c"
        $temp=$877; //@line 2336 "xmlparse.c"
        var $878=$temp; //@line 2337 "xmlparse.c"
        var $879=($878)==0; //@line 2337 "xmlparse.c"
        if ($879) { __label__ = 157; break; } else { __label__ = 158; break; } //@line 2337 "xmlparse.c"
      case 157: // $bb85
        $4=1; //@line 2338 "xmlparse.c"
        __label__ = 264; break; //@line 2338 "xmlparse.c"
      case 158: // $bb86
        var $880=$tag; //@line 2339 "xmlparse.c"
        var $881=$880+36; //@line 2339 "xmlparse.c"
        var $882=$temp; //@line 2339 "xmlparse.c"
        HEAP[$881]=$882; //@line 2339 "xmlparse.c"
        var $883=$temp; //@line 2340 "xmlparse.c"
        var $884=$bufSize; //@line 2340 "xmlparse.c"
        var $885=$883+$884; //@line 2340 "xmlparse.c"
        var $886=$tag; //@line 2340 "xmlparse.c"
        var $887=$886+40; //@line 2340 "xmlparse.c"
        HEAP[$887]=$885; //@line 2340 "xmlparse.c"
        var $888=$temp; //@line 2341 "xmlparse.c"
        var $889=$convLen; //@line 2341 "xmlparse.c"
        var $890=$888+$889; //@line 2341 "xmlparse.c"
        HEAP[$toPtr]=$890; //@line 2341 "xmlparse.c"
        __label__ = 154; break; //@line 2341 "xmlparse.c"
      case 159: // $bb87
        var $891=$result74; //@line 2349 "xmlparse.c"
        $4=$891; //@line 2349 "xmlparse.c"
        __label__ = 264; break; //@line 2349 "xmlparse.c"
      case 160: // $bb88
        var $892=$parser_addr; //@line 2350 "xmlparse.c"
        var $893=$892+52; //@line 2350 "xmlparse.c"
        var $894=HEAP[$893]; //@line 2350 "xmlparse.c"
        var $895=($894)!=0; //@line 2350 "xmlparse.c"
        var $896=$parser_addr; //@line 2351 "xmlparse.c"
        if ($895) { __label__ = 161; break; } else { __label__ = 162; break; } //@line 2350 "xmlparse.c"
      case 161: // $bb89
        var $897=$896+52; //@line 2351 "xmlparse.c"
        var $898=HEAP[$897]; //@line 2351 "xmlparse.c"
        var $899=$parser_addr; //@line 2351 "xmlparse.c"
        var $900=$899+376; //@line 2351 "xmlparse.c"
        var $901=HEAP[$900]; //@line 2351 "xmlparse.c"
        var $902=$901; //@line 2351 "xmlparse.c"
        var $903=$tag; //@line 2351 "xmlparse.c"
        var $904=$903+12; //@line 2351 "xmlparse.c"
        var $905=$904; //@line 2351 "xmlparse.c"
        var $906=HEAP[$905]; //@line 2351 "xmlparse.c"
        var $907=$parser_addr; //@line 2351 "xmlparse.c"
        var $908=$907+4; //@line 2351 "xmlparse.c"
        var $909=HEAP[$908]; //@line 2351 "xmlparse.c"
        FUNCTION_TABLE[$898]($909, $906, $902); //@line 2351 "xmlparse.c"
        __label__ = 164; break; //@line 2351 "xmlparse.c"
      case 162: // $bb90
        var $910=$896+80; //@line 2353 "xmlparse.c"
        var $911=HEAP[$910]; //@line 2353 "xmlparse.c"
        var $912=($911)!=0; //@line 2353 "xmlparse.c"
        if ($912) { __label__ = 163; break; } else { __label__ = 164; break; } //@line 2353 "xmlparse.c"
      case 163: // $bb91
        var $913=HEAP[$next]; //@line 2354 "xmlparse.c"
        var $914=HEAP[$s_addr]; //@line 2354 "xmlparse.c"
        var $915=$parser_addr; //@line 2354 "xmlparse.c"
        var $916=$enc_addr; //@line 2354 "xmlparse.c"
        _reportDefault($915, $916, $914, $913); //@line 2354 "xmlparse.c"
        __label__ = 164; break; //@line 2354 "xmlparse.c"
      case 164: // $bb92
        var $917=$parser_addr; //@line 2355 "xmlparse.c"
        var $918=$917+400; //@line 2355 "xmlparse.c"
        $pool_addr_i=$918;
        var $919=$pool_addr_i; //@line 5979 "xmlparse.c"
        var $920=$919+4; //@line 5979 "xmlparse.c"
        var $921=HEAP[$920]; //@line 5979 "xmlparse.c"
        var $922=($921)==0; //@line 5979 "xmlparse.c"
        var $923=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $924=$923; //@line 5980 "xmlparse.c"
        var $925=HEAP[$924]; //@line 5980 "xmlparse.c"
        if ($922) { __label__ = 165; break; } else { __label__ = 166; break; } //@line 5979 "xmlparse.c"
      case 165: // $bb_i1
        var $926=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $927=$926+4; //@line 5980 "xmlparse.c"
        HEAP[$927]=$925; //@line 5980 "xmlparse.c"
        __label__ = 168; break; //@line 5980 "xmlparse.c"
      case 166: // $bb1_i2
        $p_i=$925; //@line 5982 "xmlparse.c"
        var $928=($925)!=0; //@line 5983 "xmlparse.c"
        if ($928) { __label__ = 167; break; } else { __label__ = 168; break; } //@line 5983 "xmlparse.c"
      case 167: // $bb2_i
        var $929=$p_i; //@line 5984 "xmlparse.c"
        var $930=$929; //@line 5984 "xmlparse.c"
        var $931=HEAP[$930]; //@line 5984 "xmlparse.c"
        $tem_i=$931; //@line 5984 "xmlparse.c"
        var $932=$pool_addr_i; //@line 5985 "xmlparse.c"
        var $933=$932+4; //@line 5985 "xmlparse.c"
        var $934=HEAP[$933]; //@line 5985 "xmlparse.c"
        var $935=$p_i; //@line 5985 "xmlparse.c"
        var $936=$935; //@line 5985 "xmlparse.c"
        HEAP[$936]=$934; //@line 5985 "xmlparse.c"
        var $937=$pool_addr_i; //@line 5986 "xmlparse.c"
        var $938=$937+4; //@line 5986 "xmlparse.c"
        var $939=$p_i; //@line 5986 "xmlparse.c"
        HEAP[$938]=$939; //@line 5986 "xmlparse.c"
        var $940=$tem_i; //@line 5987 "xmlparse.c"
        $p_i=$940; //@line 5987 "xmlparse.c"
        var $941=($940)!=0; //@line 5983 "xmlparse.c"
        if ($941) { __label__ = 167; break; } else { __label__ = 168; break; } //@line 5983 "xmlparse.c"
      case 168: // $poolClear_exit
        var $942=$pool_addr_i; //@line 5990 "xmlparse.c"
        var $943=$942; //@line 5990 "xmlparse.c"
        HEAP[$943]=0; //@line 5990 "xmlparse.c"
        var $944=$pool_addr_i; //@line 5991 "xmlparse.c"
        var $945=$944+16; //@line 5991 "xmlparse.c"
        HEAP[$945]=0; //@line 5991 "xmlparse.c"
        var $946=$pool_addr_i; //@line 5992 "xmlparse.c"
        var $947=$946+12; //@line 5992 "xmlparse.c"
        HEAP[$947]=0; //@line 5992 "xmlparse.c"
        var $948=$pool_addr_i; //@line 5993 "xmlparse.c"
        var $949=$948+8; //@line 5993 "xmlparse.c"
        HEAP[$949]=0; //@line 5993 "xmlparse.c"
        __label__ = 261; break; //@line 2355 "xmlparse.c"
      case 169: // $bb93
        var $950=HEAP[$s_addr]; //@line 2362 "xmlparse.c"
        var $951=$enc_addr; //@line 2362 "xmlparse.c"
        var $952=$951+64; //@line 2362 "xmlparse.c"
        var $953=HEAP[$952]; //@line 2362 "xmlparse.c"
        var $954=$950+$953; //@line 2362 "xmlparse.c"
        $rawName=$954; //@line 2362 "xmlparse.c"
        HEAP[$bindings]=0; //@line 2364 "xmlparse.c"
        $noElmHandlers=1; //@line 2365 "xmlparse.c"
        var $955=$enc_addr; //@line 2367 "xmlparse.c"
        var $956=$955+28; //@line 2367 "xmlparse.c"
        var $957=HEAP[$956]; //@line 2367 "xmlparse.c"
        var $958=$enc_addr; //@line 2367 "xmlparse.c"
        var $959=$rawName; //@line 2367 "xmlparse.c"
        var $960=FUNCTION_TABLE[$957]($958, $959); //@line 2367 "xmlparse.c"
        var $961=$rawName; //@line 2367 "xmlparse.c"
        var $962=$961+$960; //@line 2367 "xmlparse.c"
        var $963=$parser_addr; //@line 2367 "xmlparse.c"
        var $964=$963+400; //@line 2367 "xmlparse.c"
        var $965=$enc_addr; //@line 2367 "xmlparse.c"
        var $966=$rawName; //@line 2367 "xmlparse.c"
        var $967=_poolStoreString($964, $965, $966, $962); //@line 2367 "xmlparse.c"
        HEAP[$26]=$967; //@line 2367 "xmlparse.c"
        var $968=($967)==0; //@line 2369 "xmlparse.c"
        if ($968) { __label__ = 170; break; } else { __label__ = 171; break; } //@line 2369 "xmlparse.c"
      case 170: // $bb96
        $4=1; //@line 2370 "xmlparse.c"
        __label__ = 264; break; //@line 2370 "xmlparse.c"
      case 171: // $bb97
        var $969=$parser_addr; //@line 2371 "xmlparse.c"
        var $970=$969+400; //@line 2371 "xmlparse.c"
        var $971=$970+12; //@line 2371 "xmlparse.c"
        var $972=HEAP[$971]; //@line 2371 "xmlparse.c"
        var $973=$parser_addr; //@line 2371 "xmlparse.c"
        var $974=$973+400; //@line 2371 "xmlparse.c"
        var $975=$974+16; //@line 2371 "xmlparse.c"
        HEAP[$975]=$972; //@line 2371 "xmlparse.c"
        var $976=HEAP[$s_addr]; //@line 2372 "xmlparse.c"
        var $977=$parser_addr; //@line 2372 "xmlparse.c"
        var $978=$enc_addr; //@line 2372 "xmlparse.c"
        var $979=_storeAtts($977, $978, $976, $name95, $bindings); //@line 2372 "xmlparse.c"
        $result94=$979; //@line 2372 "xmlparse.c"
        var $980=$result94; //@line 2373 "xmlparse.c"
        var $981=($980)!=0; //@line 2373 "xmlparse.c"
        if ($981) { __label__ = 172; break; } else { __label__ = 173; break; } //@line 2373 "xmlparse.c"
      case 172: // $bb98
        var $982=$result94; //@line 2374 "xmlparse.c"
        $4=$982; //@line 2374 "xmlparse.c"
        __label__ = 264; break; //@line 2374 "xmlparse.c"
      case 173: // $bb99
        var $983=$parser_addr; //@line 2375 "xmlparse.c"
        var $984=$983+400; //@line 2375 "xmlparse.c"
        var $985=$984+12; //@line 2375 "xmlparse.c"
        var $986=HEAP[$985]; //@line 2375 "xmlparse.c"
        var $987=$parser_addr; //@line 2375 "xmlparse.c"
        var $988=$987+400; //@line 2375 "xmlparse.c"
        var $989=$988+16; //@line 2375 "xmlparse.c"
        HEAP[$989]=$986; //@line 2375 "xmlparse.c"
        var $990=$parser_addr; //@line 2376 "xmlparse.c"
        var $991=$990+52; //@line 2376 "xmlparse.c"
        var $992=HEAP[$991]; //@line 2376 "xmlparse.c"
        var $993=($992)!=0; //@line 2376 "xmlparse.c"
        if ($993) { __label__ = 174; break; } else { __label__ = 175; break; } //@line 2376 "xmlparse.c"
      case 174: // $bb100
        var $994=$parser_addr; //@line 2377 "xmlparse.c"
        var $995=$994+52; //@line 2377 "xmlparse.c"
        var $996=HEAP[$995]; //@line 2377 "xmlparse.c"
        var $997=$parser_addr; //@line 2377 "xmlparse.c"
        var $998=$997+376; //@line 2377 "xmlparse.c"
        var $999=HEAP[$998]; //@line 2377 "xmlparse.c"
        var $1000=$999; //@line 2377 "xmlparse.c"
        var $1001=HEAP[$27]; //@line 2377 "xmlparse.c"
        var $1002=$parser_addr; //@line 2377 "xmlparse.c"
        var $1003=$1002+4; //@line 2377 "xmlparse.c"
        var $1004=HEAP[$1003]; //@line 2377 "xmlparse.c"
        FUNCTION_TABLE[$996]($1004, $1001, $1000); //@line 2377 "xmlparse.c"
        $noElmHandlers=0; //@line 2378 "xmlparse.c"
        __label__ = 175; break; //@line 2378 "xmlparse.c"
      case 175: // $bb101
        var $1005=$parser_addr; //@line 2380 "xmlparse.c"
        var $1006=$1005+56; //@line 2380 "xmlparse.c"
        var $1007=HEAP[$1006]; //@line 2380 "xmlparse.c"
        var $1008=($1007)!=0; //@line 2380 "xmlparse.c"
        if ($1008) { __label__ = 176; break; } else { __label__ = 179; break; } //@line 2380 "xmlparse.c"
      case 176: // $bb102
        var $1009=$parser_addr; //@line 2381 "xmlparse.c"
        var $1010=$1009+52; //@line 2381 "xmlparse.c"
        var $1011=HEAP[$1010]; //@line 2381 "xmlparse.c"
        var $1012=($1011)!=0; //@line 2381 "xmlparse.c"
        if ($1012) { __label__ = 177; break; } else { __label__ = 178; break; } //@line 2381 "xmlparse.c"
      case 177: // $bb103
        var $1013=$eventEndPP; //@line 2382 "xmlparse.c"
        var $1014=HEAP[$1013]; //@line 2382 "xmlparse.c"
        var $1015=$eventPP; //@line 2382 "xmlparse.c"
        HEAP[$1015]=$1014; //@line 2382 "xmlparse.c"
        __label__ = 178; break; //@line 2382 "xmlparse.c"
      case 178: // $bb105_thread
        var $1016=$parser_addr; //@line 2383 "xmlparse.c"
        var $1017=$1016+56; //@line 2383 "xmlparse.c"
        var $1018=HEAP[$1017]; //@line 2383 "xmlparse.c"
        var $1019=HEAP[$28]; //@line 2383 "xmlparse.c"
        var $1020=$parser_addr; //@line 2383 "xmlparse.c"
        var $1021=$1020+4; //@line 2383 "xmlparse.c"
        var $1022=HEAP[$1021]; //@line 2383 "xmlparse.c"
        FUNCTION_TABLE[$1018]($1022, $1019); //@line 2383 "xmlparse.c"
        $noElmHandlers=0; //@line 2384 "xmlparse.c"
        __label__ = 182; break;
      case 179: // $bb105
        var $_pr21=$noElmHandlers;
        var $1023=($_pr21)!=0; //@line 2386 "xmlparse.c"
        if ($1023) { __label__ = 180; break; } else { __label__ = 182; break; } //@line 2386 "xmlparse.c"
      case 180: // $bb106
        var $1024=$parser_addr; //@line 2386 "xmlparse.c"
        var $1025=$1024+80; //@line 2386 "xmlparse.c"
        var $1026=HEAP[$1025]; //@line 2386 "xmlparse.c"
        var $1027=($1026)!=0; //@line 2386 "xmlparse.c"
        if ($1027) { __label__ = 181; break; } else { __label__ = 182; break; } //@line 2386 "xmlparse.c"
      case 181: // $bb107
        var $1028=HEAP[$next]; //@line 2387 "xmlparse.c"
        var $1029=HEAP[$s_addr]; //@line 2387 "xmlparse.c"
        var $1030=$parser_addr; //@line 2387 "xmlparse.c"
        var $1031=$enc_addr; //@line 2387 "xmlparse.c"
        _reportDefault($1030, $1031, $1029, $1028); //@line 2387 "xmlparse.c"
        __label__ = 182; break; //@line 2387 "xmlparse.c"
      case 182: // $bb108
        var $1032=$parser_addr; //@line 2388 "xmlparse.c"
        var $1033=$1032+400; //@line 2388 "xmlparse.c"
        $pool_addr_i3=$1033;
        var $1034=$pool_addr_i3; //@line 5979 "xmlparse.c"
        var $1035=$1034+4; //@line 5979 "xmlparse.c"
        var $1036=HEAP[$1035]; //@line 5979 "xmlparse.c"
        var $1037=($1036)==0; //@line 5979 "xmlparse.c"
        var $1038=$pool_addr_i3; //@line 5980 "xmlparse.c"
        var $1039=$1038; //@line 5980 "xmlparse.c"
        var $1040=HEAP[$1039]; //@line 5980 "xmlparse.c"
        if ($1037) { __label__ = 183; break; } else { __label__ = 184; break; } //@line 5979 "xmlparse.c"
      case 183: // $bb_i6
        var $1041=$pool_addr_i3; //@line 5980 "xmlparse.c"
        var $1042=$1041+4; //@line 5980 "xmlparse.c"
        HEAP[$1042]=$1040; //@line 5980 "xmlparse.c"
        __label__ = 186; break; //@line 5980 "xmlparse.c"
      case 184: // $bb1_i7
        $p_i4=$1040; //@line 5982 "xmlparse.c"
        var $1043=($1040)!=0; //@line 5983 "xmlparse.c"
        if ($1043) { __label__ = 185; break; } else { __label__ = 186; break; } //@line 5983 "xmlparse.c"
      case 185: // $bb2_i8
        var $1044=$p_i4; //@line 5984 "xmlparse.c"
        var $1045=$1044; //@line 5984 "xmlparse.c"
        var $1046=HEAP[$1045]; //@line 5984 "xmlparse.c"
        $tem_i5=$1046; //@line 5984 "xmlparse.c"
        var $1047=$pool_addr_i3; //@line 5985 "xmlparse.c"
        var $1048=$1047+4; //@line 5985 "xmlparse.c"
        var $1049=HEAP[$1048]; //@line 5985 "xmlparse.c"
        var $1050=$p_i4; //@line 5985 "xmlparse.c"
        var $1051=$1050; //@line 5985 "xmlparse.c"
        HEAP[$1051]=$1049; //@line 5985 "xmlparse.c"
        var $1052=$pool_addr_i3; //@line 5986 "xmlparse.c"
        var $1053=$1052+4; //@line 5986 "xmlparse.c"
        var $1054=$p_i4; //@line 5986 "xmlparse.c"
        HEAP[$1053]=$1054; //@line 5986 "xmlparse.c"
        var $1055=$tem_i5; //@line 5987 "xmlparse.c"
        $p_i4=$1055; //@line 5987 "xmlparse.c"
        var $1056=($1055)!=0; //@line 5983 "xmlparse.c"
        if ($1056) { __label__ = 185; break; } else { __label__ = 186; break; } //@line 5983 "xmlparse.c"
      case 186: // $poolClear_exit9
        var $1057=$pool_addr_i3; //@line 5990 "xmlparse.c"
        var $1058=$1057; //@line 5990 "xmlparse.c"
        HEAP[$1058]=0; //@line 5990 "xmlparse.c"
        var $1059=$pool_addr_i3; //@line 5991 "xmlparse.c"
        var $1060=$1059+16; //@line 5991 "xmlparse.c"
        HEAP[$1060]=0; //@line 5991 "xmlparse.c"
        var $1061=$pool_addr_i3; //@line 5992 "xmlparse.c"
        var $1062=$1061+12; //@line 5992 "xmlparse.c"
        HEAP[$1062]=0; //@line 5992 "xmlparse.c"
        var $1063=$pool_addr_i3; //@line 5993 "xmlparse.c"
        var $1064=$1063+8; //@line 5993 "xmlparse.c"
        HEAP[$1064]=0; //@line 5993 "xmlparse.c"
        var $1065=HEAP[$bindings]; //@line 2389 "xmlparse.c"
        var $1066=($1065)!=0; //@line 2389 "xmlparse.c"
        if ($1066) { __label__ = 187; break; } else { __label__ = 190; break; } //@line 2389 "xmlparse.c"
      case 187: // $bb109
        var $1067=HEAP[$bindings]; //@line 2390 "xmlparse.c"
        $b=$1067; //@line 2390 "xmlparse.c"
        var $1068=$parser_addr; //@line 2391 "xmlparse.c"
        var $1069=$1068+104; //@line 2391 "xmlparse.c"
        var $1070=HEAP[$1069]; //@line 2391 "xmlparse.c"
        var $1071=($1070)!=0; //@line 2391 "xmlparse.c"
        if ($1071) { __label__ = 188; break; } else { __label__ = 189; break; } //@line 2391 "xmlparse.c"
      case 188: // $bb110
        var $1072=$parser_addr; //@line 2392 "xmlparse.c"
        var $1073=$1072+104; //@line 2392 "xmlparse.c"
        var $1074=HEAP[$1073]; //@line 2392 "xmlparse.c"
        var $1075=$b; //@line 2392 "xmlparse.c"
        var $1076=$1075; //@line 2392 "xmlparse.c"
        var $1077=HEAP[$1076]; //@line 2392 "xmlparse.c"
        var $1078=$1077; //@line 2392 "xmlparse.c"
        var $1079=HEAP[$1078]; //@line 2392 "xmlparse.c"
        var $1080=$parser_addr; //@line 2392 "xmlparse.c"
        var $1081=$1080+4; //@line 2392 "xmlparse.c"
        var $1082=HEAP[$1081]; //@line 2392 "xmlparse.c"
        FUNCTION_TABLE[$1074]($1082, $1079); //@line 2392 "xmlparse.c"
        __label__ = 189; break; //@line 2392 "xmlparse.c"
      case 189: // $bb111
        var $1083=HEAP[$bindings]; //@line 2393 "xmlparse.c"
        var $1084=$1083+4; //@line 2393 "xmlparse.c"
        var $1085=HEAP[$1084]; //@line 2393 "xmlparse.c"
        HEAP[$bindings]=$1085; //@line 2393 "xmlparse.c"
        var $1086=$parser_addr; //@line 2394 "xmlparse.c"
        var $1087=$1086+360; //@line 2394 "xmlparse.c"
        var $1088=HEAP[$1087]; //@line 2394 "xmlparse.c"
        var $1089=$b; //@line 2394 "xmlparse.c"
        var $1090=$1089+4; //@line 2394 "xmlparse.c"
        HEAP[$1090]=$1088; //@line 2394 "xmlparse.c"
        var $1091=$parser_addr; //@line 2395 "xmlparse.c"
        var $1092=$1091+360; //@line 2395 "xmlparse.c"
        var $1093=$b; //@line 2395 "xmlparse.c"
        HEAP[$1092]=$1093; //@line 2395 "xmlparse.c"
        var $1094=$b; //@line 2396 "xmlparse.c"
        var $1095=$1094; //@line 2396 "xmlparse.c"
        var $1096=HEAP[$1095]; //@line 2396 "xmlparse.c"
        var $1097=$b; //@line 2396 "xmlparse.c"
        var $1098=$1097+8; //@line 2396 "xmlparse.c"
        var $1099=HEAP[$1098]; //@line 2396 "xmlparse.c"
        var $1100=$1096+4; //@line 2396 "xmlparse.c"
        HEAP[$1100]=$1099; //@line 2396 "xmlparse.c"
        var $1101=HEAP[$bindings]; //@line 2389 "xmlparse.c"
        var $1102=($1101)!=0; //@line 2389 "xmlparse.c"
        if ($1102) { __label__ = 187; break; } else { __label__ = 190; break; } //@line 2389 "xmlparse.c"
      case 190: // $bb113
        var $1103=$parser_addr; //@line 2399 "xmlparse.c"
        var $1104=$1103+296; //@line 2399 "xmlparse.c"
        var $1105=HEAP[$1104]; //@line 2399 "xmlparse.c"
        var $1106=($1105)==0; //@line 2399 "xmlparse.c"
        if ($1106) { __label__ = 191; break; } else { __label__ = 261; break; } //@line 2399 "xmlparse.c"
      case 191: // $bb114
        var $1107=HEAP[$next]; //@line 2400 "xmlparse.c"
        var $1108=$parser_addr; //@line 2400 "xmlparse.c"
        var $1109=$end_addr; //@line 2400 "xmlparse.c"
        var $1110=$nextPtr_addr; //@line 2400 "xmlparse.c"
        var $1111=_epilogProcessor($1108, $1107, $1109, $1110); //@line 2400 "xmlparse.c"
        $4=$1111; //@line 2400 "xmlparse.c"
        __label__ = 264; break; //@line 2400 "xmlparse.c"
      case 192: // $bb116
        var $1112=$parser_addr; //@line 2403 "xmlparse.c"
        var $1113=$1112+296; //@line 2403 "xmlparse.c"
        var $1114=HEAP[$1113]; //@line 2403 "xmlparse.c"
        var $1115=$startTagLevel_addr; //@line 2403 "xmlparse.c"
        var $1116=($1114)==($1115); //@line 2403 "xmlparse.c"
        if ($1116) { __label__ = 193; break; } else { __label__ = 194; break; } //@line 2403 "xmlparse.c"
      case 193: // $bb117
        $4=13; //@line 2404 "xmlparse.c"
        __label__ = 264; break; //@line 2404 "xmlparse.c"
      case 194: // $bb118
        var $1117=$parser_addr; //@line 2408 "xmlparse.c"
        var $1118=$1117+348; //@line 2408 "xmlparse.c"
        var $1119=HEAP[$1118]; //@line 2408 "xmlparse.c"
        $tag120=$1119; //@line 2408 "xmlparse.c"
        var $1120=$tag120; //@line 2409 "xmlparse.c"
        var $1121=$1120; //@line 2409 "xmlparse.c"
        var $1122=HEAP[$1121]; //@line 2409 "xmlparse.c"
        var $1123=$parser_addr; //@line 2409 "xmlparse.c"
        var $1124=$1123+348; //@line 2409 "xmlparse.c"
        HEAP[$1124]=$1122; //@line 2409 "xmlparse.c"
        var $1125=$parser_addr; //@line 2410 "xmlparse.c"
        var $1126=$1125+352; //@line 2410 "xmlparse.c"
        var $1127=HEAP[$1126]; //@line 2410 "xmlparse.c"
        var $1128=$tag120; //@line 2410 "xmlparse.c"
        var $1129=$1128; //@line 2410 "xmlparse.c"
        HEAP[$1129]=$1127; //@line 2410 "xmlparse.c"
        var $1130=$parser_addr; //@line 2411 "xmlparse.c"
        var $1131=$1130+352; //@line 2411 "xmlparse.c"
        var $1132=$tag120; //@line 2411 "xmlparse.c"
        HEAP[$1131]=$1132; //@line 2411 "xmlparse.c"
        var $1133=HEAP[$s_addr]; //@line 2412 "xmlparse.c"
        var $1134=$enc_addr; //@line 2412 "xmlparse.c"
        var $1135=$1134+64; //@line 2412 "xmlparse.c"
        var $1136=HEAP[$1135]; //@line 2412 "xmlparse.c"
        var $1137=($1136) * 2; //@line 2412 "xmlparse.c"
        var $1138=$1133+$1137; //@line 2412 "xmlparse.c"
        $rawName119=$1138; //@line 2412 "xmlparse.c"
        var $1139=$enc_addr; //@line 2413 "xmlparse.c"
        var $1140=$1139+28; //@line 2413 "xmlparse.c"
        var $1141=HEAP[$1140]; //@line 2413 "xmlparse.c"
        var $1142=$enc_addr; //@line 2413 "xmlparse.c"
        var $1143=$rawName119; //@line 2413 "xmlparse.c"
        var $1144=FUNCTION_TABLE[$1141]($1142, $1143); //@line 2413 "xmlparse.c"
        $len=$1144; //@line 2413 "xmlparse.c"
        var $1145=$tag120; //@line 2414 "xmlparse.c"
        var $1146=$1145+8; //@line 2414 "xmlparse.c"
        var $1147=HEAP[$1146]; //@line 2414 "xmlparse.c"
        var $1148=$len; //@line 2414 "xmlparse.c"
        var $1149=($1147)!=($1148); //@line 2414 "xmlparse.c"
        if ($1149) { __label__ = 196; break; } else { __label__ = 195; break; } //@line 2414 "xmlparse.c"
      case 195: // $bb121
        var $1150=$len; //@line 2414 "xmlparse.c"
        var $1151=$tag120; //@line 2414 "xmlparse.c"
        var $1152=$1151+4; //@line 2414 "xmlparse.c"
        var $1153=HEAP[$1152]; //@line 2414 "xmlparse.c"
        var $1154=$rawName119; //@line 2414 "xmlparse.c"
        var $1155=_memcmp($1153, $1154, $1150); //@line 2414 "xmlparse.c"
        var $1156=($1155)!=0; //@line 2414 "xmlparse.c"
        if ($1156) { __label__ = 196; break; } else { __label__ = 197; break; } //@line 2414 "xmlparse.c"
      case 196: // $bb122
        var $1157=$eventPP; //@line 2416 "xmlparse.c"
        var $1158=$rawName119; //@line 2416 "xmlparse.c"
        HEAP[$1157]=$1158; //@line 2416 "xmlparse.c"
        $4=7; //@line 2417 "xmlparse.c"
        __label__ = 264; break; //@line 2417 "xmlparse.c"
      case 197: // $bb123
        var $1159=$parser_addr; //@line 2419 "xmlparse.c"
        var $1160=$1159+296; //@line 2419 "xmlparse.c"
        var $1161=HEAP[$1160]; //@line 2419 "xmlparse.c"
        var $1162=($1161) - 1; //@line 2419 "xmlparse.c"
        var $1163=$parser_addr; //@line 2419 "xmlparse.c"
        var $1164=$1163+296; //@line 2419 "xmlparse.c"
        HEAP[$1164]=$1162; //@line 2419 "xmlparse.c"
        var $1165=$parser_addr; //@line 2420 "xmlparse.c"
        var $1166=$1165+56; //@line 2420 "xmlparse.c"
        var $1167=HEAP[$1166]; //@line 2420 "xmlparse.c"
        var $1168=($1167)!=0; //@line 2420 "xmlparse.c"
        if ($1168) { __label__ = 198; break; } else { __label__ = 208; break; } //@line 2420 "xmlparse.c"
      case 198: // $bb124
        var $1169=$tag120; //@line 2424 "xmlparse.c"
        var $1170=$1169+12; //@line 2424 "xmlparse.c"
        var $1171=$1170+4; //@line 2424 "xmlparse.c"
        var $1172=HEAP[$1171]; //@line 2424 "xmlparse.c"
        $localPart=$1172; //@line 2424 "xmlparse.c"
        var $1173=$parser_addr; //@line 2425 "xmlparse.c"
        var $1174=$1173+232; //@line 2425 "xmlparse.c"
        var $1175=HEAP[$1174]; //@line 2425 "xmlparse.c"
        var $1176=($1175)!=0; //@line 2425 "xmlparse.c"
        if ($1176) { __label__ = 199; break; } else { __label__ = 207; break; } //@line 2425 "xmlparse.c"
      case 199: // $bb125
        var $1177=$localPart; //@line 2425 "xmlparse.c"
        var $1178=($1177)!=0; //@line 2425 "xmlparse.c"
        if ($1178) { __label__ = 200; break; } else { __label__ = 207; break; } //@line 2425 "xmlparse.c"
      case 200: // $bb126
        var $1179=$tag120; //@line 2430 "xmlparse.c"
        var $1180=$1179+12; //@line 2430 "xmlparse.c"
        var $1181=$1180; //@line 2430 "xmlparse.c"
        var $1182=HEAP[$1181]; //@line 2430 "xmlparse.c"
        var $1183=$tag120; //@line 2430 "xmlparse.c"
        var $1184=$1183+12; //@line 2430 "xmlparse.c"
        var $1185=$1184+16; //@line 2430 "xmlparse.c"
        var $1186=HEAP[$1185]; //@line 2430 "xmlparse.c"
        var $1187=$1182+$1186; //@line 2430 "xmlparse.c"
        $uri=$1187; //@line 2430 "xmlparse.c"
        var $1188=$localPart; //@line 2432 "xmlparse.c"
        var $1189=HEAP[$1188]; //@line 2432 "xmlparse.c"
        var $1190=($1189)!=0; //@line 2432 "xmlparse.c"
        if ($1190) { __label__ = 201; break; } else { __label__ = 202; break; } //@line 2432 "xmlparse.c"
      case 201: // $bb127
        var $1191=$localPart; //@line 2432 "xmlparse.c"
        var $1192=HEAP[$1191]; //@line 2432 "xmlparse.c"
        var $1193=$uri; //@line 2432 "xmlparse.c"
        HEAP[$1193]=$1192; //@line 2432 "xmlparse.c"
        var $1194=$uri; //@line 2432 "xmlparse.c"
        var $1195=$1194+1; //@line 2432 "xmlparse.c"
        $uri=$1195; //@line 2432 "xmlparse.c"
        var $1196=$localPart; //@line 2432 "xmlparse.c"
        var $1197=$1196+1; //@line 2432 "xmlparse.c"
        $localPart=$1197; //@line 2432 "xmlparse.c"
        var $1198=$localPart; //@line 2432 "xmlparse.c"
        var $1199=HEAP[$1198]; //@line 2432 "xmlparse.c"
        var $1200=($1199)!=0; //@line 2432 "xmlparse.c"
        if ($1200) { __label__ = 201; break; } else { __label__ = 202; break; } //@line 2432 "xmlparse.c"
      case 202: // $bb129
        var $1201=$tag120; //@line 2433 "xmlparse.c"
        var $1202=$1201+12; //@line 2433 "xmlparse.c"
        var $1203=$1202+8; //@line 2433 "xmlparse.c"
        var $1204=HEAP[$1203]; //@line 2433 "xmlparse.c"
        $prefix=$1204; //@line 2433 "xmlparse.c"
        var $1205=$parser_addr; //@line 2434 "xmlparse.c"
        var $1206=$1205+233; //@line 2434 "xmlparse.c"
        var $1207=HEAP[$1206]; //@line 2434 "xmlparse.c"
        var $1208=($1207)!=0; //@line 2434 "xmlparse.c"
        if ($1208) { __label__ = 203; break; } else { __label__ = 206; break; } //@line 2434 "xmlparse.c"
      case 203: // $bb130
        var $1209=$prefix; //@line 2434 "xmlparse.c"
        var $1210=($1209)!=0; //@line 2434 "xmlparse.c"
        if ($1210) { __label__ = 204; break; } else { __label__ = 206; break; } //@line 2434 "xmlparse.c"
      case 204: // $bb131
        var $1211=$parser_addr; //@line 2435 "xmlparse.c"
        var $1212=$1211+456; //@line 2435 "xmlparse.c"
        var $1213=HEAP[$1212]; //@line 2435 "xmlparse.c"
        var $1214=$uri; //@line 2435 "xmlparse.c"
        HEAP[$1214]=$1213; //@line 2435 "xmlparse.c"
        var $1215=$uri; //@line 2435 "xmlparse.c"
        var $1216=$1215+1; //@line 2435 "xmlparse.c"
        $uri=$1216; //@line 2435 "xmlparse.c"
        var $1217=$prefix; //@line 2436 "xmlparse.c"
        var $1218=HEAP[$1217]; //@line 2436 "xmlparse.c"
        var $1219=($1218)!=0; //@line 2436 "xmlparse.c"
        if ($1219) { __label__ = 205; break; } else { __label__ = 206; break; } //@line 2436 "xmlparse.c"
      case 205: // $bb132
        var $1220=$prefix; //@line 2436 "xmlparse.c"
        var $1221=HEAP[$1220]; //@line 2436 "xmlparse.c"
        var $1222=$uri; //@line 2436 "xmlparse.c"
        HEAP[$1222]=$1221; //@line 2436 "xmlparse.c"
        var $1223=$uri; //@line 2436 "xmlparse.c"
        var $1224=$1223+1; //@line 2436 "xmlparse.c"
        $uri=$1224; //@line 2436 "xmlparse.c"
        var $1225=$prefix; //@line 2436 "xmlparse.c"
        var $1226=$1225+1; //@line 2436 "xmlparse.c"
        $prefix=$1226; //@line 2436 "xmlparse.c"
        var $1227=$prefix; //@line 2436 "xmlparse.c"
        var $1228=HEAP[$1227]; //@line 2436 "xmlparse.c"
        var $1229=($1228)!=0; //@line 2436 "xmlparse.c"
        if ($1229) { __label__ = 205; break; } else { __label__ = 206; break; } //@line 2436 "xmlparse.c"
      case 206: // $bb134
        var $1230=$uri; //@line 2438 "xmlparse.c"
        HEAP[$1230]=0; //@line 2438 "xmlparse.c"
        __label__ = 207; break; //@line 2438 "xmlparse.c"
      case 207: // $bb135
        var $1231=$parser_addr; //@line 2440 "xmlparse.c"
        var $1232=$1231+56; //@line 2440 "xmlparse.c"
        var $1233=HEAP[$1232]; //@line 2440 "xmlparse.c"
        var $1234=$tag120; //@line 2440 "xmlparse.c"
        var $1235=$1234+12; //@line 2440 "xmlparse.c"
        var $1236=$1235; //@line 2440 "xmlparse.c"
        var $1237=HEAP[$1236]; //@line 2440 "xmlparse.c"
        var $1238=$parser_addr; //@line 2440 "xmlparse.c"
        var $1239=$1238+4; //@line 2440 "xmlparse.c"
        var $1240=HEAP[$1239]; //@line 2440 "xmlparse.c"
        FUNCTION_TABLE[$1233]($1240, $1237); //@line 2440 "xmlparse.c"
        __label__ = 210; break; //@line 2440 "xmlparse.c"
      case 208: // $bb136
        var $1241=$parser_addr; //@line 2442 "xmlparse.c"
        var $1242=$1241+80; //@line 2442 "xmlparse.c"
        var $1243=HEAP[$1242]; //@line 2442 "xmlparse.c"
        var $1244=($1243)!=0; //@line 2442 "xmlparse.c"
        if ($1244) { __label__ = 209; break; } else { __label__ = 210; break; } //@line 2442 "xmlparse.c"
      case 209: // $bb137
        var $1245=HEAP[$next]; //@line 2443 "xmlparse.c"
        var $1246=HEAP[$s_addr]; //@line 2443 "xmlparse.c"
        var $1247=$parser_addr; //@line 2443 "xmlparse.c"
        var $1248=$enc_addr; //@line 2443 "xmlparse.c"
        _reportDefault($1247, $1248, $1246, $1245); //@line 2443 "xmlparse.c"
        __label__ = 210; break; //@line 2443 "xmlparse.c"
      case 210: // $bb143_preheader
        var $1249=$tag120; //@line 2444 "xmlparse.c"
        var $1250=$1249+44; //@line 2444 "xmlparse.c"
        var $1251=HEAP[$1250]; //@line 2444 "xmlparse.c"
        var $1252=($1251)!=0; //@line 2444 "xmlparse.c"
        if ($1252) { __label__ = 211; break; } else { __label__ = 214; break; } //@line 2444 "xmlparse.c"
      case 211: // $bb139
        var $1253=$tag120; //@line 2445 "xmlparse.c"
        var $1254=$1253+44; //@line 2445 "xmlparse.c"
        var $1255=HEAP[$1254]; //@line 2445 "xmlparse.c"
        $b140=$1255; //@line 2445 "xmlparse.c"
        var $1256=$parser_addr; //@line 2446 "xmlparse.c"
        var $1257=$1256+104; //@line 2446 "xmlparse.c"
        var $1258=HEAP[$1257]; //@line 2446 "xmlparse.c"
        var $1259=($1258)!=0; //@line 2446 "xmlparse.c"
        if ($1259) { __label__ = 212; break; } else { __label__ = 213; break; } //@line 2446 "xmlparse.c"
      case 212: // $bb141
        var $1260=$parser_addr; //@line 2447 "xmlparse.c"
        var $1261=$1260+104; //@line 2447 "xmlparse.c"
        var $1262=HEAP[$1261]; //@line 2447 "xmlparse.c"
        var $1263=$b140; //@line 2447 "xmlparse.c"
        var $1264=$1263; //@line 2447 "xmlparse.c"
        var $1265=HEAP[$1264]; //@line 2447 "xmlparse.c"
        var $1266=$1265; //@line 2447 "xmlparse.c"
        var $1267=HEAP[$1266]; //@line 2447 "xmlparse.c"
        var $1268=$parser_addr; //@line 2447 "xmlparse.c"
        var $1269=$1268+4; //@line 2447 "xmlparse.c"
        var $1270=HEAP[$1269]; //@line 2447 "xmlparse.c"
        FUNCTION_TABLE[$1262]($1270, $1267); //@line 2447 "xmlparse.c"
        __label__ = 213; break; //@line 2447 "xmlparse.c"
      case 213: // $bb142
        var $1271=$tag120; //@line 2448 "xmlparse.c"
        var $1272=$1271+44; //@line 2448 "xmlparse.c"
        var $1273=HEAP[$1272]; //@line 2448 "xmlparse.c"
        var $1274=$1273+4; //@line 2448 "xmlparse.c"
        var $1275=HEAP[$1274]; //@line 2448 "xmlparse.c"
        var $1276=$tag120; //@line 2448 "xmlparse.c"
        var $1277=$1276+44; //@line 2448 "xmlparse.c"
        HEAP[$1277]=$1275; //@line 2448 "xmlparse.c"
        var $1278=$parser_addr; //@line 2449 "xmlparse.c"
        var $1279=$1278+360; //@line 2449 "xmlparse.c"
        var $1280=HEAP[$1279]; //@line 2449 "xmlparse.c"
        var $1281=$b140; //@line 2449 "xmlparse.c"
        var $1282=$1281+4; //@line 2449 "xmlparse.c"
        HEAP[$1282]=$1280; //@line 2449 "xmlparse.c"
        var $1283=$parser_addr; //@line 2450 "xmlparse.c"
        var $1284=$1283+360; //@line 2450 "xmlparse.c"
        var $1285=$b140; //@line 2450 "xmlparse.c"
        HEAP[$1284]=$1285; //@line 2450 "xmlparse.c"
        var $1286=$b140; //@line 2451 "xmlparse.c"
        var $1287=$1286; //@line 2451 "xmlparse.c"
        var $1288=HEAP[$1287]; //@line 2451 "xmlparse.c"
        var $1289=$b140; //@line 2451 "xmlparse.c"
        var $1290=$1289+8; //@line 2451 "xmlparse.c"
        var $1291=HEAP[$1290]; //@line 2451 "xmlparse.c"
        var $1292=$1288+4; //@line 2451 "xmlparse.c"
        HEAP[$1292]=$1291; //@line 2451 "xmlparse.c"
        var $1293=$tag120; //@line 2444 "xmlparse.c"
        var $1294=$1293+44; //@line 2444 "xmlparse.c"
        var $1295=HEAP[$1294]; //@line 2444 "xmlparse.c"
        var $1296=($1295)!=0; //@line 2444 "xmlparse.c"
        if ($1296) { __label__ = 211; break; } else { __label__ = 214; break; } //@line 2444 "xmlparse.c"
      case 214: // $bb144
        var $1297=$parser_addr; //@line 2453 "xmlparse.c"
        var $1298=$1297+296; //@line 2453 "xmlparse.c"
        var $1299=HEAP[$1298]; //@line 2453 "xmlparse.c"
        var $1300=($1299)==0; //@line 2453 "xmlparse.c"
        if ($1300) { __label__ = 215; break; } else { __label__ = 261; break; } //@line 2453 "xmlparse.c"
      case 215: // $bb145
        var $1301=HEAP[$next]; //@line 2454 "xmlparse.c"
        var $1302=$parser_addr; //@line 2454 "xmlparse.c"
        var $1303=$end_addr; //@line 2454 "xmlparse.c"
        var $1304=$nextPtr_addr; //@line 2454 "xmlparse.c"
        var $1305=_epilogProcessor($1302, $1301, $1303, $1304); //@line 2454 "xmlparse.c"
        $4=$1305; //@line 2454 "xmlparse.c"
        __label__ = 264; break; //@line 2454 "xmlparse.c"
      case 216: // $bb147
        var $1306=$enc_addr; //@line 2459 "xmlparse.c"
        var $1307=$1306+40; //@line 2459 "xmlparse.c"
        var $1308=HEAP[$1307]; //@line 2459 "xmlparse.c"
        var $1309=HEAP[$s_addr]; //@line 2459 "xmlparse.c"
        var $1310=$enc_addr; //@line 2459 "xmlparse.c"
        var $1311=FUNCTION_TABLE[$1308]($1310, $1309); //@line 2459 "xmlparse.c"
        $n=$1311; //@line 2459 "xmlparse.c"
        var $1312=$n; //@line 2460 "xmlparse.c"
        var $1313=($1312) < 0; //@line 2460 "xmlparse.c"
        if ($1313) { __label__ = 217; break; } else { __label__ = 218; break; } //@line 2460 "xmlparse.c"
      case 217: // $bb148
        $4=14; //@line 2461 "xmlparse.c"
        __label__ = 264; break; //@line 2461 "xmlparse.c"
      case 218: // $bb149
        var $1314=$parser_addr; //@line 2462 "xmlparse.c"
        var $1315=$1314+60; //@line 2462 "xmlparse.c"
        var $1316=HEAP[$1315]; //@line 2462 "xmlparse.c"
        var $1317=($1316)!=0; //@line 2462 "xmlparse.c"
        var $1318=$parser_addr; //@line 2464 "xmlparse.c"
        if ($1317) { __label__ = 219; break; } else { __label__ = 220; break; } //@line 2462 "xmlparse.c"
      case 219: // $bb150
        var $1319=$1318+60; //@line 2464 "xmlparse.c"
        var $1320=HEAP[$1319]; //@line 2464 "xmlparse.c"
        var $1321=$n; //@line 2464 "xmlparse.c"
        var $1322=_PyExpat_XmlUtf8Encode($1321, $buf151); //@line 2464 "xmlparse.c"
        var $1323=$parser_addr; //@line 2464 "xmlparse.c"
        var $1324=$1323+4; //@line 2464 "xmlparse.c"
        var $1325=HEAP[$1324]; //@line 2464 "xmlparse.c"
        FUNCTION_TABLE[$1320]($1325, $buf152, $1322); //@line 2464 "xmlparse.c"
        __label__ = 261; break; //@line 2464 "xmlparse.c"
      case 220: // $bb153
        var $1326=$1318+80; //@line 2466 "xmlparse.c"
        var $1327=HEAP[$1326]; //@line 2466 "xmlparse.c"
        var $1328=($1327)!=0; //@line 2466 "xmlparse.c"
        if ($1328) { __label__ = 221; break; } else { __label__ = 261; break; } //@line 2466 "xmlparse.c"
      case 221: // $bb154
        var $1329=HEAP[$next]; //@line 2467 "xmlparse.c"
        var $1330=HEAP[$s_addr]; //@line 2467 "xmlparse.c"
        var $1331=$parser_addr; //@line 2467 "xmlparse.c"
        var $1332=$enc_addr; //@line 2467 "xmlparse.c"
        _reportDefault($1331, $1332, $1330, $1329); //@line 2467 "xmlparse.c"
        __label__ = 261; break; //@line 2467 "xmlparse.c"
      case 222: // $bb156
        $4=17; //@line 2471 "xmlparse.c"
        __label__ = 264; break; //@line 2471 "xmlparse.c"
      case 223: // $bb157
        var $1333=$parser_addr; //@line 2473 "xmlparse.c"
        var $1334=$1333+60; //@line 2473 "xmlparse.c"
        var $1335=HEAP[$1334]; //@line 2473 "xmlparse.c"
        var $1336=($1335)!=0; //@line 2473 "xmlparse.c"
        if ($1336) { __label__ = 224; break; } else { __label__ = 225; break; } //@line 2473 "xmlparse.c"
      case 224: // $bb158
        HEAP[$c159]=10; //@line 2474 "xmlparse.c"
        var $1337=$parser_addr; //@line 2475 "xmlparse.c"
        var $1338=$1337+60; //@line 2475 "xmlparse.c"
        var $1339=HEAP[$1338]; //@line 2475 "xmlparse.c"
        var $1340=$parser_addr; //@line 2475 "xmlparse.c"
        var $1341=$1340+4; //@line 2475 "xmlparse.c"
        var $1342=HEAP[$1341]; //@line 2475 "xmlparse.c"
        FUNCTION_TABLE[$1339]($1342, $c159, 1); //@line 2475 "xmlparse.c"
        __label__ = 261; break; //@line 2475 "xmlparse.c"
      case 225: // $bb160
        var $1343=$parser_addr; //@line 2477 "xmlparse.c"
        var $1344=$1343+80; //@line 2477 "xmlparse.c"
        var $1345=HEAP[$1344]; //@line 2477 "xmlparse.c"
        var $1346=($1345)!=0; //@line 2477 "xmlparse.c"
        if ($1346) { __label__ = 226; break; } else { __label__ = 261; break; } //@line 2477 "xmlparse.c"
      case 226: // $bb161
        var $1347=HEAP[$next]; //@line 2478 "xmlparse.c"
        var $1348=HEAP[$s_addr]; //@line 2478 "xmlparse.c"
        var $1349=$parser_addr; //@line 2478 "xmlparse.c"
        var $1350=$enc_addr; //@line 2478 "xmlparse.c"
        _reportDefault($1349, $1350, $1348, $1347); //@line 2478 "xmlparse.c"
        __label__ = 261; break; //@line 2478 "xmlparse.c"
      case 227: // $bb163
        var $1351=$parser_addr; //@line 2483 "xmlparse.c"
        var $1352=$1351+72; //@line 2483 "xmlparse.c"
        var $1353=HEAP[$1352]; //@line 2483 "xmlparse.c"
        var $1354=($1353)!=0; //@line 2483 "xmlparse.c"
        var $1355=$parser_addr; //@line 2484 "xmlparse.c"
        if ($1354) { __label__ = 228; break; } else { __label__ = 229; break; } //@line 2483 "xmlparse.c"
      case 228: // $bb165
        var $1356=$1355+72; //@line 2484 "xmlparse.c"
        var $1357=HEAP[$1356]; //@line 2484 "xmlparse.c"
        var $1358=$parser_addr; //@line 2484 "xmlparse.c"
        var $1359=$1358+4; //@line 2484 "xmlparse.c"
        var $1360=HEAP[$1359]; //@line 2484 "xmlparse.c"
        FUNCTION_TABLE[$1357]($1360); //@line 2484 "xmlparse.c"
        __label__ = 231; break; //@line 2484 "xmlparse.c"
      case 229: // $bb166
        var $1361=$1355+80; //@line 2501 "xmlparse.c"
        var $1362=HEAP[$1361]; //@line 2501 "xmlparse.c"
        var $1363=($1362)!=0; //@line 2501 "xmlparse.c"
        if ($1363) { __label__ = 230; break; } else { __label__ = 231; break; } //@line 2501 "xmlparse.c"
      case 230: // $bb167
        var $1364=HEAP[$next]; //@line 2502 "xmlparse.c"
        var $1365=HEAP[$s_addr]; //@line 2502 "xmlparse.c"
        var $1366=$parser_addr; //@line 2502 "xmlparse.c"
        var $1367=$enc_addr; //@line 2502 "xmlparse.c"
        _reportDefault($1366, $1367, $1365, $1364); //@line 2502 "xmlparse.c"
        __label__ = 231; break; //@line 2502 "xmlparse.c"
      case 231: // $bb168
        var $1368=$haveMore_addr; //@line 2503 "xmlparse.c"
        var $1369=($1368); //@line 2503 "xmlparse.c"
        var $1370=$parser_addr; //@line 2503 "xmlparse.c"
        var $1371=$enc_addr; //@line 2503 "xmlparse.c"
        var $1372=$end_addr; //@line 2503 "xmlparse.c"
        var $1373=$nextPtr_addr; //@line 2503 "xmlparse.c"
        var $1374=((($1369)) & 255); //@line 2503 "xmlparse.c"
        var $1375=_doCdataSection($1370, $1371, $next, $1372, $1373, $1374); //@line 2503 "xmlparse.c"
        $result164=$1375; //@line 2503 "xmlparse.c"
        var $1376=($1375)!=0; //@line 2504 "xmlparse.c"
        if ($1376) { __label__ = 232; break; } else { __label__ = 233; break; } //@line 2504 "xmlparse.c"
      case 232: // $bb169
        var $1377=$result164; //@line 2505 "xmlparse.c"
        $4=$1377; //@line 2505 "xmlparse.c"
        __label__ = 264; break; //@line 2505 "xmlparse.c"
      case 233: // $bb170
        var $1378=HEAP[$next]; //@line 2506 "xmlparse.c"
        var $1379=($1378)==0; //@line 2506 "xmlparse.c"
        if ($1379) { __label__ = 234; break; } else { __label__ = 261; break; } //@line 2506 "xmlparse.c"
      case 234: // $bb171
        var $1380=$parser_addr; //@line 2507 "xmlparse.c"
        var $1381=$1380+264; //@line 2507 "xmlparse.c"
        HEAP[$1381]=(FUNCTION_TABLE_OFFSET + 64); //@line 2507 "xmlparse.c"
        var $1382=$result164; //@line 2508 "xmlparse.c"
        $4=$1382; //@line 2508 "xmlparse.c"
        __label__ = 264; break; //@line 2508 "xmlparse.c"
      case 235: // $bb173
        var $1383=$haveMore_addr; //@line 2513 "xmlparse.c"
        var $1384=($1383)!=0; //@line 2513 "xmlparse.c"
        if ($1384) { __label__ = 236; break; } else { __label__ = 237; break; } //@line 2513 "xmlparse.c"
      case 236: // $bb174
        var $1385=HEAP[$s_addr]; //@line 2514 "xmlparse.c"
        var $1386=$nextPtr_addr; //@line 2514 "xmlparse.c"
        HEAP[$1386]=$1385; //@line 2514 "xmlparse.c"
        $4=0; //@line 2515 "xmlparse.c"
        __label__ = 264; break; //@line 2515 "xmlparse.c"
      case 237: // $bb175
        var $1387=$parser_addr; //@line 2517 "xmlparse.c"
        var $1388=$1387+60; //@line 2517 "xmlparse.c"
        var $1389=HEAP[$1388]; //@line 2517 "xmlparse.c"
        var $1390=($1389)!=0; //@line 2517 "xmlparse.c"
        if ($1390) { __label__ = 238; break; } else { __label__ = 241; break; } //@line 2517 "xmlparse.c"
      case 238: // $bb176
        var $1391=$enc_addr; //@line 2518 "xmlparse.c"
        var $1392=$1391+68; //@line 2518 "xmlparse.c"
        var $1393=HEAP[$1392]; //@line 2518 "xmlparse.c"
        var $1394=($1393)==0; //@line 2518 "xmlparse.c"
        var $1395=$parser_addr; //@line 2519 "xmlparse.c"
        if ($1394) { __label__ = 239; break; } else { __label__ = 240; break; } //@line 2518 "xmlparse.c"
      case 239: // $bb177
        var $1396=$1395+44; //@line 2519 "xmlparse.c"
        var $1397=HEAP[$1396]; //@line 2519 "xmlparse.c"
        HEAP[$dataPtr]=$1397; //@line 2519 "xmlparse.c"
        var $1398=$enc_addr; //@line 2520 "xmlparse.c"
        var $1399=$1398+56; //@line 2520 "xmlparse.c"
        var $1400=HEAP[$1399]; //@line 2520 "xmlparse.c"
        var $1401=$parser_addr; //@line 2520 "xmlparse.c"
        var $1402=$1401+48; //@line 2520 "xmlparse.c"
        var $1403=HEAP[$1402]; //@line 2520 "xmlparse.c"
        var $1404=$enc_addr; //@line 2520 "xmlparse.c"
        var $1405=$end_addr; //@line 2520 "xmlparse.c"
        FUNCTION_TABLE[$1400]($1404, $s_addr, $1405, $dataPtr, $1403); //@line 2520 "xmlparse.c"
        var $1406=$parser_addr; //@line 2521 "xmlparse.c"
        var $1407=$1406+60; //@line 2521 "xmlparse.c"
        var $1408=HEAP[$1407]; //@line 2521 "xmlparse.c"
        var $1409=HEAP[$dataPtr]; //@line 2521 "xmlparse.c"
        var $1410=($1409); //@line 2521 "xmlparse.c"
        var $1411=$parser_addr; //@line 2521 "xmlparse.c"
        var $1412=$1411+44; //@line 2521 "xmlparse.c"
        var $1413=HEAP[$1412]; //@line 2521 "xmlparse.c"
        var $1414=($1413); //@line 2521 "xmlparse.c"
        var $1415=($1410) - ($1414); //@line 2521 "xmlparse.c"
        var $1416=$parser_addr; //@line 2521 "xmlparse.c"
        var $1417=$1416+44; //@line 2521 "xmlparse.c"
        var $1418=HEAP[$1417]; //@line 2521 "xmlparse.c"
        var $1419=$parser_addr; //@line 2521 "xmlparse.c"
        var $1420=$1419+4; //@line 2521 "xmlparse.c"
        var $1421=HEAP[$1420]; //@line 2521 "xmlparse.c"
        FUNCTION_TABLE[$1408]($1421, $1418, $1415); //@line 2521 "xmlparse.c"
        __label__ = 243; break; //@line 2521 "xmlparse.c"
      case 240: // $bb178
        var $1422=$1395+60; //@line 2525 "xmlparse.c"
        var $1423=HEAP[$1422]; //@line 2525 "xmlparse.c"
        var $1424=$end_addr; //@line 2525 "xmlparse.c"
        var $1425=($1424); //@line 2525 "xmlparse.c"
        var $1426=HEAP[$s_addr]; //@line 2525 "xmlparse.c"
        var $1427=($1426); //@line 2525 "xmlparse.c"
        var $1428=($1425) - ($1427); //@line 2525 "xmlparse.c"
        var $1429=HEAP[$s_addr]; //@line 2525 "xmlparse.c"
        var $1430=$parser_addr; //@line 2525 "xmlparse.c"
        var $1431=$1430+4; //@line 2525 "xmlparse.c"
        var $1432=HEAP[$1431]; //@line 2525 "xmlparse.c"
        FUNCTION_TABLE[$1423]($1432, $1429, $1428); //@line 2525 "xmlparse.c"
        __label__ = 243; break; //@line 2525 "xmlparse.c"
      case 241: // $bb180
        var $1433=$parser_addr; //@line 2529 "xmlparse.c"
        var $1434=$1433+80; //@line 2529 "xmlparse.c"
        var $1435=HEAP[$1434]; //@line 2529 "xmlparse.c"
        var $1436=($1435)!=0; //@line 2529 "xmlparse.c"
        if ($1436) { __label__ = 242; break; } else { __label__ = 243; break; } //@line 2529 "xmlparse.c"
      case 242: // $bb181
        var $1437=HEAP[$s_addr]; //@line 2530 "xmlparse.c"
        var $1438=$parser_addr; //@line 2530 "xmlparse.c"
        var $1439=$enc_addr; //@line 2530 "xmlparse.c"
        var $1440=$end_addr; //@line 2530 "xmlparse.c"
        _reportDefault($1438, $1439, $1437, $1440); //@line 2530 "xmlparse.c"
        __label__ = 243; break; //@line 2530 "xmlparse.c"
      case 243: // $bb182
        var $1441=$startTagLevel_addr; //@line 2534 "xmlparse.c"
        var $1442=($1441)==0; //@line 2534 "xmlparse.c"
        if ($1442) { __label__ = 244; break; } else { __label__ = 245; break; } //@line 2534 "xmlparse.c"
      case 244: // $bb183
        var $1443=$eventPP; //@line 2535 "xmlparse.c"
        var $1444=$end_addr; //@line 2535 "xmlparse.c"
        HEAP[$1443]=$1444; //@line 2535 "xmlparse.c"
        $4=3; //@line 2536 "xmlparse.c"
        __label__ = 264; break; //@line 2536 "xmlparse.c"
      case 245: // $bb184
        var $1445=$parser_addr; //@line 2538 "xmlparse.c"
        var $1446=$1445+296; //@line 2538 "xmlparse.c"
        var $1447=HEAP[$1446]; //@line 2538 "xmlparse.c"
        var $1448=$startTagLevel_addr; //@line 2538 "xmlparse.c"
        var $1449=($1447)!=($1448); //@line 2538 "xmlparse.c"
        if ($1449) { __label__ = 246; break; } else { __label__ = 247; break; } //@line 2538 "xmlparse.c"
      case 246: // $bb185
        var $1450=$eventPP; //@line 2539 "xmlparse.c"
        var $1451=$end_addr; //@line 2539 "xmlparse.c"
        HEAP[$1450]=$1451; //@line 2539 "xmlparse.c"
        $4=13; //@line 2540 "xmlparse.c"
        __label__ = 264; break; //@line 2540 "xmlparse.c"
      case 247: // $bb186
        var $1452=$nextPtr_addr; //@line 2542 "xmlparse.c"
        var $1453=$end_addr; //@line 2542 "xmlparse.c"
        HEAP[$1452]=$1453; //@line 2542 "xmlparse.c"
        $4=0; //@line 2543 "xmlparse.c"
        __label__ = 264; break; //@line 2543 "xmlparse.c"
      case 248: // $bb187
        var $1454=$parser_addr; //@line 2545 "xmlparse.c"
        var $1455=$1454+60; //@line 2545 "xmlparse.c"
        var $1456=HEAP[$1455]; //@line 2545 "xmlparse.c"
        var $1457=($1456)!=0; //@line 2545 "xmlparse.c"
        if ($1457) { __label__ = 249; break; } else { __label__ = 253; break; } //@line 2545 "xmlparse.c"
      case 249: // $bb188
        var $1458=$enc_addr; //@line 2546 "xmlparse.c"
        var $1459=$1458+68; //@line 2546 "xmlparse.c"
        var $1460=HEAP[$1459]; //@line 2546 "xmlparse.c"
        var $1461=($1460)==0; //@line 2546 "xmlparse.c"
        if ($1461) { __label__ = 250; break; } else { __label__ = 252; break; } //@line 2546 "xmlparse.c"
      case 250: // $bb189
        var $1462=$parser_addr; //@line 2548 "xmlparse.c"
        var $1463=$1462+44; //@line 2548 "xmlparse.c"
        var $1464=HEAP[$1463]; //@line 2548 "xmlparse.c"
        HEAP[$dataPtr190]=$1464; //@line 2548 "xmlparse.c"
        var $1465=$enc_addr; //@line 2549 "xmlparse.c"
        var $1466=$1465+56; //@line 2549 "xmlparse.c"
        var $1467=HEAP[$1466]; //@line 2549 "xmlparse.c"
        var $1468=$parser_addr; //@line 2549 "xmlparse.c"
        var $1469=$1468+48; //@line 2549 "xmlparse.c"
        var $1470=HEAP[$1469]; //@line 2549 "xmlparse.c"
        var $1471=HEAP[$next]; //@line 2549 "xmlparse.c"
        var $1472=$enc_addr; //@line 2549 "xmlparse.c"
        FUNCTION_TABLE[$1467]($1472, $s_addr, $1471, $dataPtr190, $1470); //@line 2549 "xmlparse.c"
        var $1473=HEAP[$s_addr]; //@line 2550 "xmlparse.c"
        var $1474=$eventEndPP; //@line 2550 "xmlparse.c"
        HEAP[$1474]=$1473; //@line 2550 "xmlparse.c"
        var $1475=$parser_addr; //@line 2551 "xmlparse.c"
        var $1476=$1475+60; //@line 2551 "xmlparse.c"
        var $1477=HEAP[$1476]; //@line 2551 "xmlparse.c"
        var $1478=HEAP[$dataPtr190]; //@line 2551 "xmlparse.c"
        var $1479=($1478); //@line 2551 "xmlparse.c"
        var $1480=$parser_addr; //@line 2551 "xmlparse.c"
        var $1481=$1480+44; //@line 2551 "xmlparse.c"
        var $1482=HEAP[$1481]; //@line 2551 "xmlparse.c"
        var $1483=($1482); //@line 2551 "xmlparse.c"
        var $1484=($1479) - ($1483); //@line 2551 "xmlparse.c"
        var $1485=$parser_addr; //@line 2551 "xmlparse.c"
        var $1486=$1485+44; //@line 2551 "xmlparse.c"
        var $1487=HEAP[$1486]; //@line 2551 "xmlparse.c"
        var $1488=$parser_addr; //@line 2551 "xmlparse.c"
        var $1489=$1488+4; //@line 2551 "xmlparse.c"
        var $1490=HEAP[$1489]; //@line 2551 "xmlparse.c"
        FUNCTION_TABLE[$1477]($1490, $1487, $1484); //@line 2551 "xmlparse.c"
        var $1491=HEAP[$s_addr]; //@line 2553 "xmlparse.c"
        var $1492=HEAP[$next]; //@line 2553 "xmlparse.c"
        var $1493=($1491)==($1492); //@line 2553 "xmlparse.c"
        if ($1493) { __label__ = 261; break; } else { __label__ = 251; break; } //@line 2553 "xmlparse.c"
      case 251: // $bb191
        var $1494=HEAP[$s_addr]; //@line 2555 "xmlparse.c"
        var $1495=$eventPP; //@line 2555 "xmlparse.c"
        HEAP[$1495]=$1494; //@line 2555 "xmlparse.c"
        __label__ = 250; break; //@line 2555 "xmlparse.c"
      case 252: // $bb193
        var $1496=$parser_addr; //@line 2559 "xmlparse.c"
        var $1497=$1496+60; //@line 2559 "xmlparse.c"
        var $1498=HEAP[$1497]; //@line 2559 "xmlparse.c"
        var $1499=HEAP[$next]; //@line 2559 "xmlparse.c"
        var $1500=($1499); //@line 2559 "xmlparse.c"
        var $1501=HEAP[$s_addr]; //@line 2559 "xmlparse.c"
        var $1502=($1501); //@line 2559 "xmlparse.c"
        var $1503=($1500) - ($1502); //@line 2559 "xmlparse.c"
        var $1504=HEAP[$s_addr]; //@line 2559 "xmlparse.c"
        var $1505=$parser_addr; //@line 2559 "xmlparse.c"
        var $1506=$1505+4; //@line 2559 "xmlparse.c"
        var $1507=HEAP[$1506]; //@line 2559 "xmlparse.c"
        FUNCTION_TABLE[$1498]($1507, $1504, $1503); //@line 2559 "xmlparse.c"
        __label__ = 261; break; //@line 2559 "xmlparse.c"
      case 253: // $bb195
        var $1508=$parser_addr; //@line 2563 "xmlparse.c"
        var $1509=$1508+80; //@line 2563 "xmlparse.c"
        var $1510=HEAP[$1509]; //@line 2563 "xmlparse.c"
        var $1511=($1510)!=0; //@line 2563 "xmlparse.c"
        if ($1511) { __label__ = 254; break; } else { __label__ = 261; break; } //@line 2563 "xmlparse.c"
      case 254: // $bb196
        var $1512=HEAP[$next]; //@line 2564 "xmlparse.c"
        var $1513=HEAP[$s_addr]; //@line 2564 "xmlparse.c"
        var $1514=$parser_addr; //@line 2564 "xmlparse.c"
        var $1515=$enc_addr; //@line 2564 "xmlparse.c"
        _reportDefault($1514, $1515, $1513, $1512); //@line 2564 "xmlparse.c"
        __label__ = 261; break; //@line 2564 "xmlparse.c"
      case 255: // $bb198
        var $1516=HEAP[$next]; //@line 2567 "xmlparse.c"
        var $1517=HEAP[$s_addr]; //@line 2567 "xmlparse.c"
        var $1518=$parser_addr; //@line 2567 "xmlparse.c"
        var $1519=$enc_addr; //@line 2567 "xmlparse.c"
        var $1520=_reportProcessingInstruction($1518, $1519, $1517, $1516); //@line 2567 "xmlparse.c"
        var $1521=($1520)==0; //@line 2567 "xmlparse.c"
        if ($1521) { __label__ = 256; break; } else { __label__ = 261; break; } //@line 2567 "xmlparse.c"
      case 256: // $bb199
        $4=1; //@line 2568 "xmlparse.c"
        __label__ = 264; break; //@line 2568 "xmlparse.c"
      case 257: // $bb201
        var $1522=HEAP[$next]; //@line 2571 "xmlparse.c"
        var $1523=HEAP[$s_addr]; //@line 2571 "xmlparse.c"
        var $1524=$parser_addr; //@line 2571 "xmlparse.c"
        var $1525=$enc_addr; //@line 2571 "xmlparse.c"
        var $1526=_reportComment($1524, $1525, $1523, $1522); //@line 2571 "xmlparse.c"
        var $1527=($1526)==0; //@line 2571 "xmlparse.c"
        if ($1527) { __label__ = 258; break; } else { __label__ = 261; break; } //@line 2571 "xmlparse.c"
      case 258: // $bb202
        $4=1; //@line 2572 "xmlparse.c"
        __label__ = 264; break; //@line 2572 "xmlparse.c"
      case 259: // $bb204
        var $1528=$parser_addr; //@line 2575 "xmlparse.c"
        var $1529=$1528+80; //@line 2575 "xmlparse.c"
        var $1530=HEAP[$1529]; //@line 2575 "xmlparse.c"
        var $1531=($1530)!=0; //@line 2575 "xmlparse.c"
        if ($1531) { __label__ = 260; break; } else { __label__ = 261; break; } //@line 2575 "xmlparse.c"
      case 260: // $bb205
        var $1532=HEAP[$next]; //@line 2576 "xmlparse.c"
        var $1533=HEAP[$s_addr]; //@line 2576 "xmlparse.c"
        var $1534=$parser_addr; //@line 2576 "xmlparse.c"
        var $1535=$enc_addr; //@line 2576 "xmlparse.c"
        _reportDefault($1534, $1535, $1533, $1532); //@line 2576 "xmlparse.c"
        __label__ = 261; break; //@line 2576 "xmlparse.c"
      case 261: // $bb206
        var $1536=HEAP[$next]; //@line 2579 "xmlparse.c"
        HEAP[$s_addr]=$1536; //@line 2579 "xmlparse.c"
        var $1537=HEAP[$s_addr]; //@line 2579 "xmlparse.c"
        var $1538=$eventPP; //@line 2579 "xmlparse.c"
        HEAP[$1538]=$1537; //@line 2579 "xmlparse.c"
        var $1539=$parser_addr; //@line 2580 "xmlparse.c"
        var $1540=$1539+464; //@line 2580 "xmlparse.c"
        var $1541=$1540; //@line 2580 "xmlparse.c"
        var $1542=HEAP[$1541]; //@line 2580 "xmlparse.c"
        if ($1542 == 2) {
          __label__ = 263; break;
        }
        else if ($1542 == 3) {
          __label__ = 262; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 262: // $bb207
        var $1543=HEAP[$next]; //@line 2582 "xmlparse.c"
        var $1544=$nextPtr_addr; //@line 2582 "xmlparse.c"
        HEAP[$1544]=$1543; //@line 2582 "xmlparse.c"
        $4=0; //@line 2583 "xmlparse.c"
        __label__ = 264; break; //@line 2583 "xmlparse.c"
      case 263: // $bb208
        $4=35; //@line 2585 "xmlparse.c"
        __label__ = 264; break; //@line 2585 "xmlparse.c"
      case 264: // $bb210
        var $1545=$4; //@line 2170 "xmlparse.c"
        $retval=$1545; //@line 2170 "xmlparse.c"
        var $retval211=$retval; //@line 2170 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval211; //@line 2170 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _storeAtts($parser, $enc, $attStr, $tagNamePtr, $bindingsPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $attStr_addr;
        var $tagNamePtr_addr;
        var $bindingsPtr_addr;
        var $retval;
        var $iftmp_111;
        var $iftmp_110;
        var $iftmp_108;
        var $iftmp_106;
        var $0;
        var $dtd;
        var $elementType;
        var $nDefaultAtts;
        var $appAtts;
        var $attIndex;
        var $prefixLen;
        var $i;
        var $n;
        var $uri;
        var $nPrefixes;
        var $binding;
        var $localPart;
        var $name;
        var $oldAttsSize;
        var $temp;
        var $attId;
        var $result;
        var $isCdata;
        var $j;
        var $result35;
        var $da;
        var $result58;
        var $j68;
        var $version;
        var $nsAttsSize;
        var $temp70;
        var $s;
        var $id;
        var $b;
        var $uriHash;
        var $c;
        var $c99;
        var $step;
        var $mask;
        var $s1;
        var $s2;
        var $p;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $attStr_addr=$attStr;
        $tagNamePtr_addr=$tagNamePtr;
        $bindingsPtr_addr=$bindingsPtr;
        var $1=$parser_addr; //@line 2607 "xmlparse.c"
        var $2=$1+340; //@line 2607 "xmlparse.c"
        var $3=HEAP[$2]; //@line 2607 "xmlparse.c"
        $dtd=$3; //@line 2607 "xmlparse.c"
        $attIndex=0; //@line 2611 "xmlparse.c"
        $nPrefixes=0; //@line 2616 "xmlparse.c"
        var $4=$tagNamePtr_addr; //@line 2621 "xmlparse.c"
        var $5=$4; //@line 2621 "xmlparse.c"
        var $6=HEAP[$5]; //@line 2621 "xmlparse.c"
        var $7=$dtd; //@line 2621 "xmlparse.c"
        var $8=$7+20; //@line 2621 "xmlparse.c"
        var $9=_lookup($8, $6, 0); //@line 2621 "xmlparse.c"
        var $10=$9; //@line 2621 "xmlparse.c"
        $elementType=$10; //@line 2621 "xmlparse.c"
        var $11=$elementType; //@line 2622 "xmlparse.c"
        var $12=($11)==0; //@line 2622 "xmlparse.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 2622 "xmlparse.c"
      case 1: // $bb
        var $13=$tagNamePtr_addr; //@line 2623 "xmlparse.c"
        var $14=$13; //@line 2623 "xmlparse.c"
        var $15=HEAP[$14]; //@line 2623 "xmlparse.c"
        var $16=$dtd; //@line 2623 "xmlparse.c"
        var $17=$16+80; //@line 2623 "xmlparse.c"
        var $18=_poolCopyString($17, $15); //@line 2623 "xmlparse.c"
        $name=$18; //@line 2623 "xmlparse.c"
        var $19=$name; //@line 2624 "xmlparse.c"
        var $20=($19)==0; //@line 2624 "xmlparse.c"
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2624 "xmlparse.c"
      case 2: // $bb1
        $0=1; //@line 2625 "xmlparse.c"
        __label__ = 144; break; //@line 2625 "xmlparse.c"
      case 3: // $bb2
        var $21=$dtd; //@line 2626 "xmlparse.c"
        var $22=$21+20; //@line 2626 "xmlparse.c"
        var $23=$name; //@line 2626 "xmlparse.c"
        var $24=_lookup($22, $23, 24); //@line 2626 "xmlparse.c"
        var $25=$24; //@line 2626 "xmlparse.c"
        $elementType=$25; //@line 2626 "xmlparse.c"
        var $26=$elementType; //@line 2628 "xmlparse.c"
        var $27=($26)==0; //@line 2628 "xmlparse.c"
        if ($27) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 2628 "xmlparse.c"
      case 4: // $bb3
        $0=1; //@line 2629 "xmlparse.c"
        __label__ = 144; break; //@line 2629 "xmlparse.c"
      case 5: // $bb4
        var $28=$parser_addr; //@line 2630 "xmlparse.c"
        var $29=$28+232; //@line 2630 "xmlparse.c"
        var $30=HEAP[$29]; //@line 2630 "xmlparse.c"
        var $31=($30)!=0; //@line 2630 "xmlparse.c"
        if ($31) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 2630 "xmlparse.c"
      case 6: // $bb5
        var $32=$parser_addr; //@line 2630 "xmlparse.c"
        var $33=$elementType; //@line 2630 "xmlparse.c"
        var $34=_setElementTypePrefix($32, $33); //@line 2630 "xmlparse.c"
        var $35=($34)==0; //@line 2630 "xmlparse.c"
        if ($35) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2630 "xmlparse.c"
      case 7: // $bb6
        $0=1; //@line 2631 "xmlparse.c"
        __label__ = 144; break; //@line 2631 "xmlparse.c"
      case 8: // $bb7
        var $36=$elementType; //@line 2633 "xmlparse.c"
        var $37=$36+12; //@line 2633 "xmlparse.c"
        var $38=HEAP[$37]; //@line 2633 "xmlparse.c"
        $nDefaultAtts=$38; //@line 2633 "xmlparse.c"
        var $39=$enc_addr; //@line 2636 "xmlparse.c"
        var $40=$39+36; //@line 2636 "xmlparse.c"
        var $41=HEAP[$40]; //@line 2636 "xmlparse.c"
        var $42=$parser_addr; //@line 2636 "xmlparse.c"
        var $43=$42+376; //@line 2636 "xmlparse.c"
        var $44=HEAP[$43]; //@line 2636 "xmlparse.c"
        var $45=$parser_addr; //@line 2636 "xmlparse.c"
        var $46=$45+364; //@line 2636 "xmlparse.c"
        var $47=HEAP[$46]; //@line 2636 "xmlparse.c"
        var $48=$enc_addr; //@line 2636 "xmlparse.c"
        var $49=$attStr_addr; //@line 2636 "xmlparse.c"
        var $50=FUNCTION_TABLE[$41]($48, $49, $47, $44); //@line 2636 "xmlparse.c"
        $n=$50; //@line 2636 "xmlparse.c"
        var $51=$n; //@line 2637 "xmlparse.c"
        var $52=$nDefaultAtts; //@line 2637 "xmlparse.c"
        var $53=($52) + ($51); //@line 2637 "xmlparse.c"
        var $54=$parser_addr; //@line 2637 "xmlparse.c"
        var $55=$54+364; //@line 2637 "xmlparse.c"
        var $56=HEAP[$55]; //@line 2637 "xmlparse.c"
        var $57=($53) > ($56); //@line 2637 "xmlparse.c"
        if ($57) { __label__ = 9; break; } else { __label__ = 13; break; } //@line 2637 "xmlparse.c"
      case 9: // $bb8
        var $58=$parser_addr; //@line 2638 "xmlparse.c"
        var $59=$58+364; //@line 2638 "xmlparse.c"
        var $60=HEAP[$59]; //@line 2638 "xmlparse.c"
        $oldAttsSize=$60; //@line 2638 "xmlparse.c"
        var $61=$n; //@line 2640 "xmlparse.c"
        var $62=$nDefaultAtts; //@line 2640 "xmlparse.c"
        var $63=($61) + 16; //@line 2640 "xmlparse.c"
        var $64=($63) + ($62); //@line 2640 "xmlparse.c"
        var $65=$parser_addr; //@line 2640 "xmlparse.c"
        var $66=$65+364; //@line 2640 "xmlparse.c"
        HEAP[$66]=$64; //@line 2640 "xmlparse.c"
        var $67=$parser_addr; //@line 2641 "xmlparse.c"
        var $68=$67+12; //@line 2641 "xmlparse.c"
        var $69=$68+4; //@line 2641 "xmlparse.c"
        var $70=HEAP[$69]; //@line 2641 "xmlparse.c"
        var $71=$parser_addr; //@line 2641 "xmlparse.c"
        var $72=$71+364; //@line 2641 "xmlparse.c"
        var $73=HEAP[$72]; //@line 2641 "xmlparse.c"
        var $74=($73) * 16; //@line 2641 "xmlparse.c"
        var $75=$parser_addr; //@line 2641 "xmlparse.c"
        var $76=$75+376; //@line 2641 "xmlparse.c"
        var $77=HEAP[$76]; //@line 2641 "xmlparse.c"
        var $78=$77; //@line 2641 "xmlparse.c"
        var $79=FUNCTION_TABLE[$70]($78, $74); //@line 2641 "xmlparse.c"
        var $80=$79; //@line 2641 "xmlparse.c"
        $temp=$80; //@line 2641 "xmlparse.c"
        var $81=$temp; //@line 2642 "xmlparse.c"
        var $82=($81)==0; //@line 2642 "xmlparse.c"
        if ($82) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2642 "xmlparse.c"
      case 10: // $bb9
        $0=1; //@line 2643 "xmlparse.c"
        __label__ = 144; break; //@line 2643 "xmlparse.c"
      case 11: // $bb10
        var $83=$parser_addr; //@line 2644 "xmlparse.c"
        var $84=$83+376; //@line 2644 "xmlparse.c"
        var $85=$temp; //@line 2644 "xmlparse.c"
        HEAP[$84]=$85; //@line 2644 "xmlparse.c"
        var $86=$n; //@line 2645 "xmlparse.c"
        var $87=$oldAttsSize; //@line 2645 "xmlparse.c"
        var $88=($86) > ($87); //@line 2645 "xmlparse.c"
        if ($88) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 2645 "xmlparse.c"
      case 12: // $bb11
        var $89=$enc_addr; //@line 2646 "xmlparse.c"
        var $90=$89+36; //@line 2646 "xmlparse.c"
        var $91=HEAP[$90]; //@line 2646 "xmlparse.c"
        var $92=$parser_addr; //@line 2646 "xmlparse.c"
        var $93=$92+376; //@line 2646 "xmlparse.c"
        var $94=HEAP[$93]; //@line 2646 "xmlparse.c"
        var $95=$enc_addr; //@line 2646 "xmlparse.c"
        var $96=$attStr_addr; //@line 2646 "xmlparse.c"
        var $97=$n; //@line 2646 "xmlparse.c"
        var $98=FUNCTION_TABLE[$91]($95, $96, $97, $94); //@line 2646 "xmlparse.c"
        __label__ = 13; break; //@line 2646 "xmlparse.c"
      case 13: // $bb12
        var $99=$parser_addr; //@line 2649 "xmlparse.c"
        var $100=$99+376; //@line 2649 "xmlparse.c"
        var $101=HEAP[$100]; //@line 2649 "xmlparse.c"
        var $102=$101; //@line 2649 "xmlparse.c"
        $appAtts=$102; //@line 2649 "xmlparse.c"
        $i=0; //@line 2650 "xmlparse.c"
        __label__ = 41; break; //@line 2650 "xmlparse.c"
      case 14: // $bb13
        var $103=$309+376; //@line 2654 "xmlparse.c"
        var $104=HEAP[$103]; //@line 2654 "xmlparse.c"
        var $105=$i; //@line 2654 "xmlparse.c"
        var $106=$104+16*$105; //@line 2654 "xmlparse.c"
        var $107=$106; //@line 2654 "xmlparse.c"
        var $108=HEAP[$107]; //@line 2654 "xmlparse.c"
        var $109=$enc_addr; //@line 2654 "xmlparse.c"
        var $110=$109+28; //@line 2654 "xmlparse.c"
        var $111=HEAP[$110]; //@line 2654 "xmlparse.c"
        var $112=$parser_addr; //@line 2654 "xmlparse.c"
        var $113=$112+376; //@line 2654 "xmlparse.c"
        var $114=HEAP[$113]; //@line 2654 "xmlparse.c"
        var $115=$i; //@line 2654 "xmlparse.c"
        var $116=$114+16*$115; //@line 2654 "xmlparse.c"
        var $117=$116; //@line 2654 "xmlparse.c"
        var $118=HEAP[$117]; //@line 2654 "xmlparse.c"
        var $119=$enc_addr; //@line 2654 "xmlparse.c"
        var $120=FUNCTION_TABLE[$111]($119, $118); //@line 2654 "xmlparse.c"
        var $121=$108+$120; //@line 2654 "xmlparse.c"
        var $122=$parser_addr; //@line 2654 "xmlparse.c"
        var $123=$122+376; //@line 2654 "xmlparse.c"
        var $124=HEAP[$123]; //@line 2654 "xmlparse.c"
        var $125=$i; //@line 2654 "xmlparse.c"
        var $126=$124+16*$125; //@line 2654 "xmlparse.c"
        var $127=$126; //@line 2654 "xmlparse.c"
        var $128=HEAP[$127]; //@line 2654 "xmlparse.c"
        var $129=$parser_addr; //@line 2654 "xmlparse.c"
        var $130=$enc_addr; //@line 2654 "xmlparse.c"
        var $131=_getAttributeId($129, $130, $128, $121); //@line 2654 "xmlparse.c"
        $attId=$131; //@line 2654 "xmlparse.c"
        var $132=$attId; //@line 2655 "xmlparse.c"
        var $133=($132)==0; //@line 2655 "xmlparse.c"
        if ($133) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 2655 "xmlparse.c"
      case 15: // $bb14
        $0=1; //@line 2656 "xmlparse.c"
        __label__ = 144; break; //@line 2656 "xmlparse.c"
      case 16: // $bb15
        var $134=$attId; //@line 2661 "xmlparse.c"
        var $135=$134; //@line 2661 "xmlparse.c"
        var $136=HEAP[$135]; //@line 2661 "xmlparse.c"
        var $137=$136+-1; //@line 2661 "xmlparse.c"
        var $138=HEAP[$137]; //@line 2661 "xmlparse.c"
        var $139=($138)!=0; //@line 2661 "xmlparse.c"
        if ($139) { __label__ = 17; break; } else { __label__ = 20; break; } //@line 2661 "xmlparse.c"
      case 17: // $bb16
        var $140=$parser_addr; //@line 2662 "xmlparse.c"
        var $141=$140+144; //@line 2662 "xmlparse.c"
        var $142=HEAP[$141]; //@line 2662 "xmlparse.c"
        var $143=$enc_addr; //@line 2662 "xmlparse.c"
        var $144=($142)==($143); //@line 2662 "xmlparse.c"
        if ($144) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 2662 "xmlparse.c"
      case 18: // $bb17
        var $145=$parser_addr; //@line 2663 "xmlparse.c"
        var $146=$145+376; //@line 2663 "xmlparse.c"
        var $147=HEAP[$146]; //@line 2663 "xmlparse.c"
        var $148=$i; //@line 2663 "xmlparse.c"
        var $149=$147+16*$148; //@line 2663 "xmlparse.c"
        var $150=$149; //@line 2663 "xmlparse.c"
        var $151=HEAP[$150]; //@line 2663 "xmlparse.c"
        var $152=$parser_addr; //@line 2663 "xmlparse.c"
        var $153=$152+272; //@line 2663 "xmlparse.c"
        HEAP[$153]=$151; //@line 2663 "xmlparse.c"
        __label__ = 19; break; //@line 2663 "xmlparse.c"
      case 19: // $bb18
        $0=8; //@line 2664 "xmlparse.c"
        __label__ = 144; break; //@line 2664 "xmlparse.c"
      case 20: // $bb19
        var $154=$attId; //@line 2666 "xmlparse.c"
        var $155=$154; //@line 2666 "xmlparse.c"
        var $156=HEAP[$155]; //@line 2666 "xmlparse.c"
        var $157=$156+-1; //@line 2666 "xmlparse.c"
        HEAP[$157]=1; //@line 2666 "xmlparse.c"
        var $158=$attId; //@line 2667 "xmlparse.c"
        var $159=$158; //@line 2667 "xmlparse.c"
        var $160=HEAP[$159]; //@line 2667 "xmlparse.c"
        var $161=$appAtts; //@line 2667 "xmlparse.c"
        var $162=$attIndex; //@line 2667 "xmlparse.c"
        var $163=$161+4*$162; //@line 2667 "xmlparse.c"
        HEAP[$163]=$160; //@line 2667 "xmlparse.c"
        var $164=$attIndex; //@line 2667 "xmlparse.c"
        var $165=($164) + 1; //@line 2667 "xmlparse.c"
        $attIndex=$165; //@line 2667 "xmlparse.c"
        var $166=$parser_addr; //@line 2668 "xmlparse.c"
        var $167=$166+376; //@line 2668 "xmlparse.c"
        var $168=HEAP[$167]; //@line 2668 "xmlparse.c"
        var $169=$i; //@line 2668 "xmlparse.c"
        var $170=$168+16*$169; //@line 2668 "xmlparse.c"
        var $171=$170+12; //@line 2668 "xmlparse.c"
        var $172=HEAP[$171]; //@line 2668 "xmlparse.c"
        var $173=($172)==0; //@line 2668 "xmlparse.c"
        if ($173) { __label__ = 21; break; } else { __label__ = 30; break; } //@line 2668 "xmlparse.c"
      case 21: // $bb20
        $isCdata=1; //@line 2670 "xmlparse.c"
        var $174=$attId; //@line 2673 "xmlparse.c"
        var $175=$174+8; //@line 2673 "xmlparse.c"
        var $176=HEAP[$175]; //@line 2673 "xmlparse.c"
        var $177=($176)!=0; //@line 2673 "xmlparse.c"
        if ($177) { __label__ = 22; break; } else { __label__ = 27; break; } //@line 2673 "xmlparse.c"
      case 22: // $bb21
        $j=0; //@line 2675 "xmlparse.c"
        __label__ = 26; break; //@line 2675 "xmlparse.c"
      case 23: // $bb22
        var $178=$elementType; //@line 2676 "xmlparse.c"
        var $179=$178+20; //@line 2676 "xmlparse.c"
        var $180=HEAP[$179]; //@line 2676 "xmlparse.c"
        var $181=$j; //@line 2676 "xmlparse.c"
        var $182=$180+12*$181; //@line 2676 "xmlparse.c"
        var $183=$182; //@line 2676 "xmlparse.c"
        var $184=HEAP[$183]; //@line 2676 "xmlparse.c"
        var $185=$attId; //@line 2676 "xmlparse.c"
        var $186=($184)==($185); //@line 2676 "xmlparse.c"
        if ($186) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 2676 "xmlparse.c"
      case 24: // $bb23
        var $187=$elementType; //@line 2677 "xmlparse.c"
        var $188=$187+20; //@line 2677 "xmlparse.c"
        var $189=HEAP[$188]; //@line 2677 "xmlparse.c"
        var $190=$j; //@line 2677 "xmlparse.c"
        var $191=$189+12*$190; //@line 2677 "xmlparse.c"
        var $192=$191+4; //@line 2677 "xmlparse.c"
        var $193=HEAP[$192]; //@line 2677 "xmlparse.c"
        $isCdata=$193; //@line 2677 "xmlparse.c"
        __label__ = 27; break; //@line 2677 "xmlparse.c"
      case 25: // $bb24
        var $194=$j; //@line 2675 "xmlparse.c"
        var $195=($194) + 1; //@line 2675 "xmlparse.c"
        $j=$195; //@line 2675 "xmlparse.c"
        __label__ = 26; break; //@line 2675 "xmlparse.c"
      case 26: // $bb25
        var $196=$j; //@line 2675 "xmlparse.c"
        var $197=$nDefaultAtts; //@line 2675 "xmlparse.c"
        var $198=($196) < ($197); //@line 2675 "xmlparse.c"
        if ($198) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 2675 "xmlparse.c"
      case 27: // $bb26
        var $199=$parser_addr; //@line 2684 "xmlparse.c"
        var $200=$199+400; //@line 2684 "xmlparse.c"
        var $201=$parser_addr; //@line 2684 "xmlparse.c"
        var $202=$201+376; //@line 2684 "xmlparse.c"
        var $203=HEAP[$202]; //@line 2684 "xmlparse.c"
        var $204=$i; //@line 2684 "xmlparse.c"
        var $205=$203+16*$204; //@line 2684 "xmlparse.c"
        var $206=$205+8; //@line 2684 "xmlparse.c"
        var $207=HEAP[$206]; //@line 2684 "xmlparse.c"
        var $208=$parser_addr; //@line 2684 "xmlparse.c"
        var $209=$208+376; //@line 2684 "xmlparse.c"
        var $210=HEAP[$209]; //@line 2684 "xmlparse.c"
        var $211=$i; //@line 2684 "xmlparse.c"
        var $212=$210+16*$211; //@line 2684 "xmlparse.c"
        var $213=$212+4; //@line 2684 "xmlparse.c"
        var $214=HEAP[$213]; //@line 2684 "xmlparse.c"
        var $215=$isCdata; //@line 2684 "xmlparse.c"
        var $216=($215); //@line 2684 "xmlparse.c"
        var $217=$parser_addr; //@line 2684 "xmlparse.c"
        var $218=$enc_addr; //@line 2684 "xmlparse.c"
        var $219=((($216)) & 255); //@line 2684 "xmlparse.c"
        var $220=_storeAttributeValue($217, $218, $219, $214, $207, $200); //@line 2684 "xmlparse.c"
        $result=$220; //@line 2684 "xmlparse.c"
        var $221=($220)!=0; //@line 2687 "xmlparse.c"
        if ($221) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 2687 "xmlparse.c"
      case 28: // $bb27
        var $222=$result; //@line 2688 "xmlparse.c"
        $0=$222; //@line 2688 "xmlparse.c"
        __label__ = 144; break; //@line 2688 "xmlparse.c"
      case 29: // $bb28
        var $223=$parser_addr; //@line 2689 "xmlparse.c"
        var $224=$223+400; //@line 2689 "xmlparse.c"
        var $225=$224+16; //@line 2689 "xmlparse.c"
        var $226=HEAP[$225]; //@line 2689 "xmlparse.c"
        var $227=$appAtts; //@line 2689 "xmlparse.c"
        var $228=$attIndex; //@line 2689 "xmlparse.c"
        var $229=$227+4*$228; //@line 2689 "xmlparse.c"
        HEAP[$229]=$226; //@line 2689 "xmlparse.c"
        var $230=$parser_addr; //@line 2690 "xmlparse.c"
        var $231=$230+400; //@line 2690 "xmlparse.c"
        var $232=$231+12; //@line 2690 "xmlparse.c"
        var $233=HEAP[$232]; //@line 2690 "xmlparse.c"
        var $234=$parser_addr; //@line 2690 "xmlparse.c"
        var $235=$234+400; //@line 2690 "xmlparse.c"
        var $236=$235+16; //@line 2690 "xmlparse.c"
        HEAP[$236]=$233; //@line 2690 "xmlparse.c"
        __label__ = 33; break; //@line 2690 "xmlparse.c"
      case 30: // $bb29
        var $237=$parser_addr; //@line 2694 "xmlparse.c"
        var $238=$237+376; //@line 2694 "xmlparse.c"
        var $239=HEAP[$238]; //@line 2694 "xmlparse.c"
        var $240=$i; //@line 2694 "xmlparse.c"
        var $241=$239+16*$240; //@line 2694 "xmlparse.c"
        var $242=$241+8; //@line 2694 "xmlparse.c"
        var $243=HEAP[$242]; //@line 2694 "xmlparse.c"
        var $244=$parser_addr; //@line 2694 "xmlparse.c"
        var $245=$244+376; //@line 2694 "xmlparse.c"
        var $246=HEAP[$245]; //@line 2694 "xmlparse.c"
        var $247=$i; //@line 2694 "xmlparse.c"
        var $248=$246+16*$247; //@line 2694 "xmlparse.c"
        var $249=$248+4; //@line 2694 "xmlparse.c"
        var $250=HEAP[$249]; //@line 2694 "xmlparse.c"
        var $251=$parser_addr; //@line 2694 "xmlparse.c"
        var $252=$251+400; //@line 2694 "xmlparse.c"
        var $253=$enc_addr; //@line 2694 "xmlparse.c"
        var $254=_poolStoreString($252, $253, $250, $243); //@line 2694 "xmlparse.c"
        var $255=$appAtts; //@line 2694 "xmlparse.c"
        var $256=$attIndex; //@line 2694 "xmlparse.c"
        var $257=$255+4*$256; //@line 2694 "xmlparse.c"
        HEAP[$257]=$254; //@line 2694 "xmlparse.c"
        var $258=$appAtts; //@line 2696 "xmlparse.c"
        var $259=$attIndex; //@line 2696 "xmlparse.c"
        var $260=$258+4*$259; //@line 2696 "xmlparse.c"
        var $261=HEAP[$260]; //@line 2696 "xmlparse.c"
        var $262=($261)==0; //@line 2696 "xmlparse.c"
        if ($262) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 2696 "xmlparse.c"
      case 31: // $bb30
        $0=1; //@line 2697 "xmlparse.c"
        __label__ = 144; break; //@line 2697 "xmlparse.c"
      case 32: // $bb31
        var $263=$parser_addr; //@line 2698 "xmlparse.c"
        var $264=$263+400; //@line 2698 "xmlparse.c"
        var $265=$264+12; //@line 2698 "xmlparse.c"
        var $266=HEAP[$265]; //@line 2698 "xmlparse.c"
        var $267=$parser_addr; //@line 2698 "xmlparse.c"
        var $268=$267+400; //@line 2698 "xmlparse.c"
        var $269=$268+16; //@line 2698 "xmlparse.c"
        HEAP[$269]=$266; //@line 2698 "xmlparse.c"
        __label__ = 33; break; //@line 2698 "xmlparse.c"
      case 33: // $bb32
        var $270=$attId; //@line 2701 "xmlparse.c"
        var $271=$270+4; //@line 2701 "xmlparse.c"
        var $272=HEAP[$271]; //@line 2701 "xmlparse.c"
        var $273=($272)!=0; //@line 2701 "xmlparse.c"
        if ($273) { __label__ = 34; break; } else { __label__ = 39; break; } //@line 2701 "xmlparse.c"
      case 34: // $bb33
        var $274=$attId; //@line 2702 "xmlparse.c"
        var $275=$274+9; //@line 2702 "xmlparse.c"
        var $276=HEAP[$275]; //@line 2702 "xmlparse.c"
        var $277=($276)!=0; //@line 2702 "xmlparse.c"
        if ($277) { __label__ = 35; break; } else { __label__ = 38; break; } //@line 2702 "xmlparse.c"
      case 35: // $bb34
        var $278=$appAtts; //@line 2705 "xmlparse.c"
        var $279=$attIndex; //@line 2705 "xmlparse.c"
        var $280=$278+4*$279; //@line 2705 "xmlparse.c"
        var $281=HEAP[$280]; //@line 2705 "xmlparse.c"
        var $282=$attId; //@line 2705 "xmlparse.c"
        var $283=$282+4; //@line 2705 "xmlparse.c"
        var $284=HEAP[$283]; //@line 2705 "xmlparse.c"
        var $285=$parser_addr; //@line 2705 "xmlparse.c"
        var $286=$attId; //@line 2705 "xmlparse.c"
        var $287=$bindingsPtr_addr; //@line 2705 "xmlparse.c"
        var $288=_addBinding($285, $284, $286, $281, $287); //@line 2705 "xmlparse.c"
        $result35=$288; //@line 2705 "xmlparse.c"
        var $289=$result35; //@line 2706 "xmlparse.c"
        var $290=($289)!=0; //@line 2706 "xmlparse.c"
        if ($290) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 2706 "xmlparse.c"
      case 36: // $bb36
        var $291=$result35; //@line 2707 "xmlparse.c"
        $0=$291; //@line 2707 "xmlparse.c"
        __label__ = 144; break; //@line 2707 "xmlparse.c"
      case 37: // $bb37
        var $292=$attIndex; //@line 2708 "xmlparse.c"
        var $293=($292) - 1; //@line 2708 "xmlparse.c"
        $attIndex=$293; //@line 2708 "xmlparse.c"
        __label__ = 40; break; //@line 2708 "xmlparse.c"
      case 38: // $bb38
        var $294=$attIndex; //@line 2712 "xmlparse.c"
        var $295=($294) + 1; //@line 2712 "xmlparse.c"
        $attIndex=$295; //@line 2712 "xmlparse.c"
        var $296=$nPrefixes; //@line 2713 "xmlparse.c"
        var $297=($296) + 1; //@line 2713 "xmlparse.c"
        $nPrefixes=$297; //@line 2713 "xmlparse.c"
        var $298=$attId; //@line 2714 "xmlparse.c"
        var $299=$298; //@line 2714 "xmlparse.c"
        var $300=HEAP[$299]; //@line 2714 "xmlparse.c"
        var $301=$300+-1; //@line 2714 "xmlparse.c"
        HEAP[$301]=2; //@line 2714 "xmlparse.c"
        __label__ = 40; break; //@line 2714 "xmlparse.c"
      case 39: // $bb40
        var $302=$attIndex; //@line 2718 "xmlparse.c"
        var $303=($302) + 1; //@line 2718 "xmlparse.c"
        $attIndex=$303; //@line 2718 "xmlparse.c"
        __label__ = 40; break; //@line 2718 "xmlparse.c"
      case 40: // $bb41
        var $304=$i; //@line 2650 "xmlparse.c"
        var $305=($304) + 1; //@line 2650 "xmlparse.c"
        $i=$305; //@line 2650 "xmlparse.c"
        __label__ = 41; break; //@line 2650 "xmlparse.c"
      case 41: // $bb42
        var $306=$i; //@line 2650 "xmlparse.c"
        var $307=$n; //@line 2650 "xmlparse.c"
        var $308=($306) < ($307); //@line 2650 "xmlparse.c"
        var $309=$parser_addr; //@line 2654 "xmlparse.c"
        if ($308) { __label__ = 14; break; } else { __label__ = 42; break; } //@line 2650 "xmlparse.c"
      case 42: // $bb43
        var $310=$309+368; //@line 2722 "xmlparse.c"
        var $311=$attIndex; //@line 2722 "xmlparse.c"
        HEAP[$310]=$311; //@line 2722 "xmlparse.c"
        var $312=$elementType; //@line 2723 "xmlparse.c"
        var $313=$312+8; //@line 2723 "xmlparse.c"
        var $314=HEAP[$313]; //@line 2723 "xmlparse.c"
        var $315=($314)==0; //@line 2723 "xmlparse.c"
        if ($315) { __label__ = 49; break; } else { __label__ = 43; break; } //@line 2723 "xmlparse.c"
      case 43: // $bb44
        var $316=$elementType; //@line 2723 "xmlparse.c"
        var $317=$316+8; //@line 2723 "xmlparse.c"
        var $318=HEAP[$317]; //@line 2723 "xmlparse.c"
        var $319=$318; //@line 2723 "xmlparse.c"
        var $320=HEAP[$319]; //@line 2723 "xmlparse.c"
        var $321=$320+-1; //@line 2723 "xmlparse.c"
        var $322=HEAP[$321]; //@line 2723 "xmlparse.c"
        var $323=($322)==0; //@line 2723 "xmlparse.c"
        if ($323) { __label__ = 49; break; } else { __label__ = 44; break; } //@line 2723 "xmlparse.c"
      case 44: // $bb45
        $i=0; //@line 2724 "xmlparse.c"
        __label__ = 48; break; //@line 2724 "xmlparse.c"
      case 45: // $bb46
        var $324=$appAtts; //@line 2725 "xmlparse.c"
        var $325=$i; //@line 2725 "xmlparse.c"
        var $326=$324+4*$325; //@line 2725 "xmlparse.c"
        var $327=HEAP[$326]; //@line 2725 "xmlparse.c"
        var $328=$elementType; //@line 2725 "xmlparse.c"
        var $329=$328+8; //@line 2725 "xmlparse.c"
        var $330=HEAP[$329]; //@line 2725 "xmlparse.c"
        var $331=$330; //@line 2725 "xmlparse.c"
        var $332=HEAP[$331]; //@line 2725 "xmlparse.c"
        var $333=($327)==($332); //@line 2725 "xmlparse.c"
        if ($333) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 2725 "xmlparse.c"
      case 46: // $bb47
        var $334=$parser_addr; //@line 2726 "xmlparse.c"
        var $335=$334+372; //@line 2726 "xmlparse.c"
        var $336=$i; //@line 2726 "xmlparse.c"
        HEAP[$335]=$336; //@line 2726 "xmlparse.c"
        __label__ = 50; break; //@line 2726 "xmlparse.c"
      case 47: // $bb48
        var $337=$i; //@line 2724 "xmlparse.c"
        var $338=($337) + 2; //@line 2724 "xmlparse.c"
        $i=$338; //@line 2724 "xmlparse.c"
        __label__ = 48; break; //@line 2724 "xmlparse.c"
      case 48: // $bb49
        var $339=$i; //@line 2724 "xmlparse.c"
        var $340=$attIndex; //@line 2724 "xmlparse.c"
        var $341=($339) < ($340); //@line 2724 "xmlparse.c"
        if ($341) { __label__ = 45; break; } else { __label__ = 50; break; } //@line 2724 "xmlparse.c"
      case 49: // $bb51
        var $342=$parser_addr; //@line 2731 "xmlparse.c"
        var $343=$342+372; //@line 2731 "xmlparse.c"
        HEAP[$343]=-1; //@line 2731 "xmlparse.c"
        __label__ = 50; break; //@line 2731 "xmlparse.c"
      case 50: // $bb52
        $i=0; //@line 2734 "xmlparse.c"
        __label__ = 60; break; //@line 2734 "xmlparse.c"
      case 51: // $bb53
        var $344=$elementType; //@line 2735 "xmlparse.c"
        var $345=$344+20; //@line 2735 "xmlparse.c"
        var $346=HEAP[$345]; //@line 2735 "xmlparse.c"
        var $347=$i; //@line 2735 "xmlparse.c"
        var $348=$346+12*$347; //@line 2735 "xmlparse.c"
        $da=$348; //@line 2735 "xmlparse.c"
        var $349=$da; //@line 2736 "xmlparse.c"
        var $350=$349; //@line 2736 "xmlparse.c"
        var $351=HEAP[$350]; //@line 2736 "xmlparse.c"
        var $352=$351; //@line 2736 "xmlparse.c"
        var $353=HEAP[$352]; //@line 2736 "xmlparse.c"
        var $354=$353+-1; //@line 2736 "xmlparse.c"
        var $355=HEAP[$354]; //@line 2736 "xmlparse.c"
        var $356=($355)==0; //@line 2736 "xmlparse.c"
        if ($356) { __label__ = 52; break; } else { __label__ = 59; break; } //@line 2736 "xmlparse.c"
      case 52: // $bb54
        var $357=$da; //@line 2736 "xmlparse.c"
        var $358=$357+8; //@line 2736 "xmlparse.c"
        var $359=HEAP[$358]; //@line 2736 "xmlparse.c"
        var $360=($359)!=0; //@line 2736 "xmlparse.c"
        if ($360) { __label__ = 53; break; } else { __label__ = 59; break; } //@line 2736 "xmlparse.c"
      case 53: // $bb55
        var $361=$da; //@line 2737 "xmlparse.c"
        var $362=$361; //@line 2737 "xmlparse.c"
        var $363=HEAP[$362]; //@line 2737 "xmlparse.c"
        var $364=$363+4; //@line 2737 "xmlparse.c"
        var $365=HEAP[$364]; //@line 2737 "xmlparse.c"
        var $366=($365)!=0; //@line 2737 "xmlparse.c"
        var $367=$da; //@line 2738 "xmlparse.c"
        var $368=$367; //@line 2738 "xmlparse.c"
        var $369=HEAP[$368]; //@line 2738 "xmlparse.c"
        if ($366) { __label__ = 54; break; } else { __label__ = 58; break; } //@line 2737 "xmlparse.c"
      case 54: // $bb56
        var $370=$369+9; //@line 2738 "xmlparse.c"
        var $371=HEAP[$370]; //@line 2738 "xmlparse.c"
        var $372=($371)!=0; //@line 2738 "xmlparse.c"
        var $373=$da; //@line 2740 "xmlparse.c"
        if ($372) { __label__ = 55; break; } else { __label__ = 57; break; } //@line 2738 "xmlparse.c"
      case 55: // $bb57
        var $374=$373+8; //@line 2740 "xmlparse.c"
        var $375=HEAP[$374]; //@line 2740 "xmlparse.c"
        var $376=$da; //@line 2740 "xmlparse.c"
        var $377=$376; //@line 2740 "xmlparse.c"
        var $378=HEAP[$377]; //@line 2740 "xmlparse.c"
        var $379=$da; //@line 2740 "xmlparse.c"
        var $380=$379; //@line 2740 "xmlparse.c"
        var $381=HEAP[$380]; //@line 2740 "xmlparse.c"
        var $382=$381+4; //@line 2740 "xmlparse.c"
        var $383=HEAP[$382]; //@line 2740 "xmlparse.c"
        var $384=$parser_addr; //@line 2740 "xmlparse.c"
        var $385=$bindingsPtr_addr; //@line 2740 "xmlparse.c"
        var $386=_addBinding($384, $383, $378, $375, $385); //@line 2740 "xmlparse.c"
        $result58=$386; //@line 2740 "xmlparse.c"
        var $387=$result58; //@line 2741 "xmlparse.c"
        var $388=($387)!=0; //@line 2741 "xmlparse.c"
        if ($388) { __label__ = 56; break; } else { __label__ = 59; break; } //@line 2741 "xmlparse.c"
      case 56: // $bb59
        var $389=$result58; //@line 2742 "xmlparse.c"
        $0=$389; //@line 2742 "xmlparse.c"
        __label__ = 144; break; //@line 2742 "xmlparse.c"
      case 57: // $bb61
        var $390=$373; //@line 2745 "xmlparse.c"
        var $391=HEAP[$390]; //@line 2745 "xmlparse.c"
        var $392=$391; //@line 2745 "xmlparse.c"
        var $393=HEAP[$392]; //@line 2745 "xmlparse.c"
        var $394=$393+-1; //@line 2745 "xmlparse.c"
        HEAP[$394]=2; //@line 2745 "xmlparse.c"
        var $395=$nPrefixes; //@line 2746 "xmlparse.c"
        var $396=($395) + 1; //@line 2746 "xmlparse.c"
        $nPrefixes=$396; //@line 2746 "xmlparse.c"
        var $397=$da; //@line 2747 "xmlparse.c"
        var $398=$397; //@line 2747 "xmlparse.c"
        var $399=HEAP[$398]; //@line 2747 "xmlparse.c"
        var $400=$399; //@line 2747 "xmlparse.c"
        var $401=HEAP[$400]; //@line 2747 "xmlparse.c"
        var $402=$appAtts; //@line 2747 "xmlparse.c"
        var $403=$attIndex; //@line 2747 "xmlparse.c"
        var $404=$402+4*$403; //@line 2747 "xmlparse.c"
        HEAP[$404]=$401; //@line 2747 "xmlparse.c"
        var $405=$attIndex; //@line 2747 "xmlparse.c"
        var $406=($405) + 1; //@line 2747 "xmlparse.c"
        $attIndex=$406; //@line 2747 "xmlparse.c"
        var $407=$da; //@line 2748 "xmlparse.c"
        var $408=$407+8; //@line 2748 "xmlparse.c"
        var $409=HEAP[$408]; //@line 2748 "xmlparse.c"
        var $410=$appAtts; //@line 2748 "xmlparse.c"
        var $411=$attIndex; //@line 2748 "xmlparse.c"
        var $412=$410+4*$411; //@line 2748 "xmlparse.c"
        HEAP[$412]=$409; //@line 2748 "xmlparse.c"
        var $413=$attIndex; //@line 2748 "xmlparse.c"
        var $414=($413) + 1; //@line 2748 "xmlparse.c"
        $attIndex=$414; //@line 2748 "xmlparse.c"
        __label__ = 59; break; //@line 2748 "xmlparse.c"
      case 58: // $bb63
        var $415=$369; //@line 2752 "xmlparse.c"
        var $416=HEAP[$415]; //@line 2752 "xmlparse.c"
        var $417=$416+-1; //@line 2752 "xmlparse.c"
        HEAP[$417]=1; //@line 2752 "xmlparse.c"
        var $418=$da; //@line 2753 "xmlparse.c"
        var $419=$418; //@line 2753 "xmlparse.c"
        var $420=HEAP[$419]; //@line 2753 "xmlparse.c"
        var $421=$420; //@line 2753 "xmlparse.c"
        var $422=HEAP[$421]; //@line 2753 "xmlparse.c"
        var $423=$appAtts; //@line 2753 "xmlparse.c"
        var $424=$attIndex; //@line 2753 "xmlparse.c"
        var $425=$423+4*$424; //@line 2753 "xmlparse.c"
        HEAP[$425]=$422; //@line 2753 "xmlparse.c"
        var $426=$attIndex; //@line 2753 "xmlparse.c"
        var $427=($426) + 1; //@line 2753 "xmlparse.c"
        $attIndex=$427; //@line 2753 "xmlparse.c"
        var $428=$da; //@line 2754 "xmlparse.c"
        var $429=$428+8; //@line 2754 "xmlparse.c"
        var $430=HEAP[$429]; //@line 2754 "xmlparse.c"
        var $431=$appAtts; //@line 2754 "xmlparse.c"
        var $432=$attIndex; //@line 2754 "xmlparse.c"
        var $433=$431+4*$432; //@line 2754 "xmlparse.c"
        HEAP[$433]=$430; //@line 2754 "xmlparse.c"
        var $434=$attIndex; //@line 2754 "xmlparse.c"
        var $435=($434) + 1; //@line 2754 "xmlparse.c"
        $attIndex=$435; //@line 2754 "xmlparse.c"
        __label__ = 59; break; //@line 2754 "xmlparse.c"
      case 59: // $bb64
        var $436=$i; //@line 2734 "xmlparse.c"
        var $437=($436) + 1; //@line 2734 "xmlparse.c"
        $i=$437; //@line 2734 "xmlparse.c"
        __label__ = 60; break; //@line 2734 "xmlparse.c"
      case 60: // $bb65
        var $438=$i; //@line 2734 "xmlparse.c"
        var $439=$nDefaultAtts; //@line 2734 "xmlparse.c"
        var $440=($438) < ($439); //@line 2734 "xmlparse.c"
        if ($440) { __label__ = 51; break; } else { __label__ = 61; break; } //@line 2734 "xmlparse.c"
      case 61: // $bb66
        var $441=$appAtts; //@line 2758 "xmlparse.c"
        var $442=$attIndex; //@line 2758 "xmlparse.c"
        var $443=$441+4*$442; //@line 2758 "xmlparse.c"
        HEAP[$443]=0; //@line 2758 "xmlparse.c"
        $i=0; //@line 2762 "xmlparse.c"
        var $444=$nPrefixes; //@line 2763 "xmlparse.c"
        var $445=($444)!=0; //@line 2763 "xmlparse.c"
        if ($445) { __label__ = 62; break; } else { __label__ = 114; break; } //@line 2763 "xmlparse.c"
      case 62: // $bb67
        var $446=$parser_addr; //@line 2765 "xmlparse.c"
        var $447=$446+384; //@line 2765 "xmlparse.c"
        var $448=HEAP[$447]; //@line 2765 "xmlparse.c"
        $version=$448; //@line 2765 "xmlparse.c"
        var $449=$parser_addr; //@line 2766 "xmlparse.c"
        var $450=$449+388; //@line 2766 "xmlparse.c"
        var $451=HEAP[$450]; //@line 2766 "xmlparse.c"
        var $452=($451); //@line 2766 "xmlparse.c"
        var $453=1 << ($452); //@line 2766 "xmlparse.c"
        $nsAttsSize=$453; //@line 2766 "xmlparse.c"
        var $454=$nPrefixes; //@line 2768 "xmlparse.c"
        var $455=($454) << 1; //@line 2768 "xmlparse.c"
        var $456=$parser_addr; //@line 2768 "xmlparse.c"
        var $457=$456+388; //@line 2768 "xmlparse.c"
        var $458=HEAP[$457]; //@line 2768 "xmlparse.c"
        var $459=($458); //@line 2768 "xmlparse.c"
        var $460=($455) >> ($459); //@line 2768 "xmlparse.c"
        var $461=($460)!=0; //@line 2768 "xmlparse.c"
        if ($461) { __label__ = 63; break; } else { __label__ = 69; break; } //@line 2768 "xmlparse.c"
      case 63: // $bb69
        var $462=$parser_addr; //@line 2771 "xmlparse.c"
        var $463=$462+388; //@line 2771 "xmlparse.c"
        var $464=HEAP[$463]; //@line 2771 "xmlparse.c"
        var $465=($464); //@line 2771 "xmlparse.c"
        var $466=$nPrefixes; //@line 2771 "xmlparse.c"
        var $467=($466) >> ($465); //@line 2771 "xmlparse.c"
        var $468=($467)!=0; //@line 2771 "xmlparse.c"
        var $469=($468); //@line 2771 "xmlparse.c"
        var $470=($464) + 1; //@line 2771 "xmlparse.c"
        var $471=$parser_addr; //@line 2771 "xmlparse.c"
        var $472=$471+388; //@line 2771 "xmlparse.c"
        HEAP[$472]=$470; //@line 2771 "xmlparse.c"
        var $toBool=($469)!=0; //@line 2771 "xmlparse.c"
        if ($toBool) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 2771 "xmlparse.c"
      case 64: // $bb71
        var $473=$parser_addr; //@line 2772 "xmlparse.c"
        var $474=$473+388; //@line 2772 "xmlparse.c"
        var $475=HEAP[$474]; //@line 2772 "xmlparse.c"
        var $476=($475) <= 2; //@line 2772 "xmlparse.c"
        if ($476) { __label__ = 65; break; } else { __label__ = 66; break; } //@line 2772 "xmlparse.c"
      case 65: // $bb72
        var $477=$parser_addr; //@line 2773 "xmlparse.c"
        var $478=$477+388; //@line 2773 "xmlparse.c"
        HEAP[$478]=3; //@line 2773 "xmlparse.c"
        __label__ = 66; break; //@line 2773 "xmlparse.c"
      case 66: // $bb73
        var $479=$parser_addr; //@line 2774 "xmlparse.c"
        var $480=$479+388; //@line 2774 "xmlparse.c"
        var $481=HEAP[$480]; //@line 2774 "xmlparse.c"
        var $482=($481); //@line 2774 "xmlparse.c"
        var $483=1 << ($482); //@line 2774 "xmlparse.c"
        $nsAttsSize=$483; //@line 2774 "xmlparse.c"
        var $484=$parser_addr; //@line 2775 "xmlparse.c"
        var $485=$484+12; //@line 2775 "xmlparse.c"
        var $486=$485+4; //@line 2775 "xmlparse.c"
        var $487=HEAP[$486]; //@line 2775 "xmlparse.c"
        var $488=$nsAttsSize; //@line 2775 "xmlparse.c"
        var $489=($488) * 12; //@line 2775 "xmlparse.c"
        var $490=$parser_addr; //@line 2775 "xmlparse.c"
        var $491=$490+380; //@line 2775 "xmlparse.c"
        var $492=HEAP[$491]; //@line 2775 "xmlparse.c"
        var $493=$492; //@line 2775 "xmlparse.c"
        var $494=FUNCTION_TABLE[$487]($493, $489); //@line 2775 "xmlparse.c"
        var $495=$494; //@line 2775 "xmlparse.c"
        $temp70=$495; //@line 2775 "xmlparse.c"
        var $496=($495)==0; //@line 2776 "xmlparse.c"
        if ($496) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 2776 "xmlparse.c"
      case 67: // $bb74
        $0=1; //@line 2777 "xmlparse.c"
        __label__ = 144; break; //@line 2777 "xmlparse.c"
      case 68: // $bb76_thread
        var $497=$parser_addr; //@line 2778 "xmlparse.c"
        var $498=$497+380; //@line 2778 "xmlparse.c"
        var $499=$temp70; //@line 2778 "xmlparse.c"
        HEAP[$498]=$499; //@line 2778 "xmlparse.c"
        $version=0; //@line 2779 "xmlparse.c"
        __label__ = 70; break;
      case 69: // $bb76
        var $_pr=$version;
        var $500=($_pr)==0; //@line 2782 "xmlparse.c"
        if ($500) { __label__ = 70; break; } else { __label__ = 72; break; } //@line 2782 "xmlparse.c"
      case 70: // $bb77
        $version=-1; //@line 2783 "xmlparse.c"
        var $501=$nsAttsSize; //@line 2784 "xmlparse.c"
        $j68=$501; //@line 2784 "xmlparse.c"
        var $502=($501)!=0; //@line 2784 "xmlparse.c"
        if ($502) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 2784 "xmlparse.c"
      case 71: // $bb78
        var $503=$parser_addr; //@line 2785 "xmlparse.c"
        var $504=$503+380; //@line 2785 "xmlparse.c"
        var $505=HEAP[$504]; //@line 2785 "xmlparse.c"
        var $506=$j68; //@line 2785 "xmlparse.c"
        var $507=($506) - 1; //@line 2785 "xmlparse.c"
        $j68=$507; //@line 2785 "xmlparse.c"
        var $508=$j68; //@line 2785 "xmlparse.c"
        var $509=$505+12*$508; //@line 2785 "xmlparse.c"
        var $510=$509; //@line 2785 "xmlparse.c"
        var $511=$version; //@line 2785 "xmlparse.c"
        HEAP[$510]=$511; //@line 2785 "xmlparse.c"
        var $_pr1=$j68;
        var $512=($_pr1)!=0; //@line 2784 "xmlparse.c"
        if ($512) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 2784 "xmlparse.c"
      case 72: // $bb80
        var $513=$version; //@line 2787 "xmlparse.c"
        var $514=($513) - 1; //@line 2787 "xmlparse.c"
        $version=$514; //@line 2787 "xmlparse.c"
        var $515=$parser_addr; //@line 2787 "xmlparse.c"
        var $516=$515+384; //@line 2787 "xmlparse.c"
        var $517=$version; //@line 2787 "xmlparse.c"
        HEAP[$516]=$517; //@line 2787 "xmlparse.c"
        __label__ = 113; break; //@line 2787 "xmlparse.c"
      case 73: // $bb81
        var $518=$appAtts; //@line 2791 "xmlparse.c"
        var $519=$i; //@line 2791 "xmlparse.c"
        var $520=$518+4*$519; //@line 2791 "xmlparse.c"
        var $521=HEAP[$520]; //@line 2791 "xmlparse.c"
        $s=$521; //@line 2791 "xmlparse.c"
        var $522=$s; //@line 2792 "xmlparse.c"
        var $523=$522+-1; //@line 2792 "xmlparse.c"
        var $524=HEAP[$523]; //@line 2792 "xmlparse.c"
        var $525=($524)==2; //@line 2792 "xmlparse.c"
        if ($525) { __label__ = 74; break; } else { __label__ = 111; break; } //@line 2792 "xmlparse.c"
      case 74: // $bb82
        $uriHash=0; //@line 2795 "xmlparse.c"
        var $526=$s; //@line 2796 "xmlparse.c"
        var $527=$526+-1; //@line 2796 "xmlparse.c"
        HEAP[$527]=0; //@line 2796 "xmlparse.c"
        var $528=$dtd; //@line 2797 "xmlparse.c"
        var $529=$528+40; //@line 2797 "xmlparse.c"
        var $530=$s; //@line 2797 "xmlparse.c"
        var $531=_lookup($529, $530, 0); //@line 2797 "xmlparse.c"
        var $532=$531; //@line 2797 "xmlparse.c"
        $id=$532; //@line 2797 "xmlparse.c"
        var $533=$id; //@line 2798 "xmlparse.c"
        var $534=($533)==0; //@line 2798 "xmlparse.c"
        if ($534) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 2798 "xmlparse.c"
      case 75: // $bb83
        $0=1; //@line 2799 "xmlparse.c"
        __label__ = 144; break; //@line 2799 "xmlparse.c"
      case 76: // $bb84
        var $535=$id; //@line 2800 "xmlparse.c"
        var $536=$535+4; //@line 2800 "xmlparse.c"
        var $537=HEAP[$536]; //@line 2800 "xmlparse.c"
        var $538=$537+4; //@line 2800 "xmlparse.c"
        var $539=HEAP[$538]; //@line 2800 "xmlparse.c"
        $b=$539; //@line 2800 "xmlparse.c"
        var $540=$b; //@line 2801 "xmlparse.c"
        var $541=($540)==0; //@line 2801 "xmlparse.c"
        if ($541) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 2801 "xmlparse.c"
      case 77: // $bb85
        $0=27; //@line 2802 "xmlparse.c"
        __label__ = 144; break; //@line 2802 "xmlparse.c"
      case 78: // $bb86
        $j68=0; //@line 2805 "xmlparse.c"
        __label__ = 83; break; //@line 2805 "xmlparse.c"
      case 79: // $bb87
        var $542=$b; //@line 2806 "xmlparse.c"
        var $543=$542+16; //@line 2806 "xmlparse.c"
        var $544=HEAP[$543]; //@line 2806 "xmlparse.c"
        var $545=$j68; //@line 2806 "xmlparse.c"
        var $546=$544+$545; //@line 2806 "xmlparse.c"
        var $547=HEAP[$546]; //@line 2806 "xmlparse.c"
        $c=$547; //@line 2806 "xmlparse.c"
        var $548=$parser_addr; //@line 2807 "xmlparse.c"
        var $549=$548+400; //@line 2807 "xmlparse.c"
        var $550=$549+12; //@line 2807 "xmlparse.c"
        var $551=HEAP[$550]; //@line 2807 "xmlparse.c"
        var $552=$parser_addr; //@line 2807 "xmlparse.c"
        var $553=$552+400; //@line 2807 "xmlparse.c"
        var $554=$553+8; //@line 2807 "xmlparse.c"
        var $555=HEAP[$554]; //@line 2807 "xmlparse.c"
        var $556=($551)!=($555); //@line 2807 "xmlparse.c"
        if ($556) { __label__ = 82; break; } else { __label__ = 80; break; } //@line 2807 "xmlparse.c"
      case 80: // $bb88
        var $557=$parser_addr; //@line 2807 "xmlparse.c"
        var $558=$557+400; //@line 2807 "xmlparse.c"
        var $559=_poolGrow($558); //@line 2807 "xmlparse.c"
        var $560=($559)!=0; //@line 2807 "xmlparse.c"
        if ($560) { __label__ = 82; break; } else { __label__ = 81; break; } //@line 2807 "xmlparse.c"
      case 81: // $bb93
        $iftmp_106=1; //@line 2807 "xmlparse.c"
        $0=1; //@line 2808 "xmlparse.c"
        __label__ = 144; break; //@line 2808 "xmlparse.c"
      case 82: // $bb94
        var $561=$parser_addr; //@line 2807 "xmlparse.c"
        var $562=$561+400; //@line 2807 "xmlparse.c"
        var $563=$562+12; //@line 2807 "xmlparse.c"
        var $564=HEAP[$563]; //@line 2807 "xmlparse.c"
        var $565=$c; //@line 2807 "xmlparse.c"
        HEAP[$564]=$565; //@line 2807 "xmlparse.c"
        var $566=$564+1; //@line 2807 "xmlparse.c"
        var $567=$parser_addr; //@line 2807 "xmlparse.c"
        var $568=$567+400; //@line 2807 "xmlparse.c"
        var $569=$568+12; //@line 2807 "xmlparse.c"
        HEAP[$569]=$566; //@line 2807 "xmlparse.c"
        $iftmp_106=0; //@line 2807 "xmlparse.c"
        var $570=$uriHash; //@line 2809 "xmlparse.c"
        var $571=($570) * 1000003; //@line 2809 "xmlparse.c"
        var $572=$c; //@line 2809 "xmlparse.c"
        var $573=($572); //@line 2809 "xmlparse.c"
        var $574=($573) ^ ($571); //@line 2809 "xmlparse.c"
        $uriHash=$574; //@line 2809 "xmlparse.c"
        var $575=$j68; //@line 2805 "xmlparse.c"
        var $576=($575) + 1; //@line 2805 "xmlparse.c"
        $j68=$576; //@line 2805 "xmlparse.c"
        __label__ = 83; break; //@line 2805 "xmlparse.c"
      case 83: // $bb95
        var $577=$b; //@line 2805 "xmlparse.c"
        var $578=$577+20; //@line 2805 "xmlparse.c"
        var $579=HEAP[$578]; //@line 2805 "xmlparse.c"
        var $580=$j68; //@line 2805 "xmlparse.c"
        var $581=($579) > ($580); //@line 2805 "xmlparse.c"
        if ($581) { __label__ = 79; break; } else { __label__ = 84; break; } //@line 2805 "xmlparse.c"
      case 84: // $bb96
        var $582=$s; //@line 2811 "xmlparse.c"
        var $583=HEAP[$582]; //@line 2811 "xmlparse.c"
        var $584=($583)!=58; //@line 2811 "xmlparse.c"
        var $585=($584); //@line 2811 "xmlparse.c"
        var $586=$s; //@line 2811 "xmlparse.c"
        var $587=$586+1; //@line 2811 "xmlparse.c"
        $s=$587; //@line 2811 "xmlparse.c"
        var $toBool97=($585)!=0; //@line 2811 "xmlparse.c"
        if ($toBool97) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 2811 "xmlparse.c"
      case 85: // $bb98
        var $588=$s; //@line 2814 "xmlparse.c"
        var $589=HEAP[$588]; //@line 2814 "xmlparse.c"
        $c99=$589; //@line 2814 "xmlparse.c"
        var $590=$parser_addr; //@line 2815 "xmlparse.c"
        var $591=$590+400; //@line 2815 "xmlparse.c"
        var $592=$591+12; //@line 2815 "xmlparse.c"
        var $593=HEAP[$592]; //@line 2815 "xmlparse.c"
        var $594=$parser_addr; //@line 2815 "xmlparse.c"
        var $595=$594+400; //@line 2815 "xmlparse.c"
        var $596=$595+8; //@line 2815 "xmlparse.c"
        var $597=HEAP[$596]; //@line 2815 "xmlparse.c"
        var $598=($593)!=($597); //@line 2815 "xmlparse.c"
        if ($598) { __label__ = 88; break; } else { __label__ = 86; break; } //@line 2815 "xmlparse.c"
      case 86: // $bb100
        var $599=$parser_addr; //@line 2815 "xmlparse.c"
        var $600=$599+400; //@line 2815 "xmlparse.c"
        var $601=_poolGrow($600); //@line 2815 "xmlparse.c"
        var $602=($601)!=0; //@line 2815 "xmlparse.c"
        if ($602) { __label__ = 88; break; } else { __label__ = 87; break; } //@line 2815 "xmlparse.c"
      case 87: // $bb105
        $iftmp_108=1; //@line 2815 "xmlparse.c"
        $0=1; //@line 2816 "xmlparse.c"
        __label__ = 144; break; //@line 2816 "xmlparse.c"
      case 88: // $bb106
        var $603=$parser_addr; //@line 2815 "xmlparse.c"
        var $604=$603+400; //@line 2815 "xmlparse.c"
        var $605=$604+12; //@line 2815 "xmlparse.c"
        var $606=HEAP[$605]; //@line 2815 "xmlparse.c"
        var $607=$s; //@line 2815 "xmlparse.c"
        var $608=HEAP[$607]; //@line 2815 "xmlparse.c"
        HEAP[$606]=$608; //@line 2815 "xmlparse.c"
        var $609=$606+1; //@line 2815 "xmlparse.c"
        var $610=$parser_addr; //@line 2815 "xmlparse.c"
        var $611=$610+400; //@line 2815 "xmlparse.c"
        var $612=$611+12; //@line 2815 "xmlparse.c"
        HEAP[$612]=$609; //@line 2815 "xmlparse.c"
        $iftmp_108=0; //@line 2815 "xmlparse.c"
        var $613=$uriHash; //@line 2817 "xmlparse.c"
        var $614=($613) * 1000003; //@line 2817 "xmlparse.c"
        var $615=$c99; //@line 2817 "xmlparse.c"
        var $616=($615); //@line 2817 "xmlparse.c"
        var $617=($616) ^ ($614); //@line 2817 "xmlparse.c"
        $uriHash=$617; //@line 2817 "xmlparse.c"
        var $618=$s; //@line 2818 "xmlparse.c"
        var $619=HEAP[$618]; //@line 2818 "xmlparse.c"
        var $620=($619)!=0; //@line 2818 "xmlparse.c"
        var $621=($620); //@line 2818 "xmlparse.c"
        var $622=$s; //@line 2818 "xmlparse.c"
        var $623=$622+1; //@line 2818 "xmlparse.c"
        $s=$623; //@line 2818 "xmlparse.c"
        var $toBool107=($621)!=0; //@line 2818 "xmlparse.c"
        if ($toBool107) { __label__ = 85; break; } else { __label__ = 89; break; } //@line 2818 "xmlparse.c"
      case 89: // $bb108
        $step=0; //@line 2823 "xmlparse.c"
        var $624=$nsAttsSize; //@line 2824 "xmlparse.c"
        var $625=($624) - 1; //@line 2824 "xmlparse.c"
        $mask=$625; //@line 2824 "xmlparse.c"
        var $626=$uriHash; //@line 2825 "xmlparse.c"
        var $627=$mask; //@line 2825 "xmlparse.c"
        var $628=($627) & ($626); //@line 2825 "xmlparse.c"
        $j68=$628; //@line 2825 "xmlparse.c"
        __label__ = 102; break; //@line 2825 "xmlparse.c"
      case 90: // $bb109
        var $629=$703+380; //@line 2828 "xmlparse.c"
        var $630=HEAP[$629]; //@line 2828 "xmlparse.c"
        var $631=$j68; //@line 2828 "xmlparse.c"
        var $632=$630+12*$631; //@line 2828 "xmlparse.c"
        var $633=$632+4; //@line 2828 "xmlparse.c"
        var $634=HEAP[$633]; //@line 2828 "xmlparse.c"
        var $635=$uriHash; //@line 2828 "xmlparse.c"
        var $636=($634)==($635); //@line 2828 "xmlparse.c"
        if ($636) { __label__ = 91; break; } else { __label__ = 97; break; } //@line 2828 "xmlparse.c"
      case 91: // $bb110
        var $637=$parser_addr; //@line 2829 "xmlparse.c"
        var $638=$637+400; //@line 2829 "xmlparse.c"
        var $639=$638+16; //@line 2829 "xmlparse.c"
        var $640=HEAP[$639]; //@line 2829 "xmlparse.c"
        $s1=$640; //@line 2829 "xmlparse.c"
        var $641=$parser_addr; //@line 2830 "xmlparse.c"
        var $642=$641+380; //@line 2830 "xmlparse.c"
        var $643=HEAP[$642]; //@line 2830 "xmlparse.c"
        var $644=$j68; //@line 2830 "xmlparse.c"
        var $645=$643+12*$644; //@line 2830 "xmlparse.c"
        var $646=$645+8; //@line 2830 "xmlparse.c"
        var $647=HEAP[$646]; //@line 2830 "xmlparse.c"
        $s2=$647; //@line 2830 "xmlparse.c"
        __label__ = 93; break; //@line 2830 "xmlparse.c"
      case 92: // $bb111
        var $648=$s1; //@line 2832 "xmlparse.c"
        var $649=$648+1; //@line 2832 "xmlparse.c"
        $s1=$649; //@line 2832 "xmlparse.c"
        var $650=$s2; //@line 2832 "xmlparse.c"
        var $651=$650+1; //@line 2832 "xmlparse.c"
        $s2=$651; //@line 2832 "xmlparse.c"
        __label__ = 93; break; //@line 2832 "xmlparse.c"
      case 93: // $bb112
        var $652=$s1; //@line 2832 "xmlparse.c"
        var $653=HEAP[$652]; //@line 2832 "xmlparse.c"
        var $654=$s2; //@line 2832 "xmlparse.c"
        var $655=HEAP[$654]; //@line 2832 "xmlparse.c"
        var $656=($653)!=($655); //@line 2832 "xmlparse.c"
        if ($656) { __label__ = 95; break; } else { __label__ = 94; break; } //@line 2832 "xmlparse.c"
      case 94: // $bb113
        var $657=$s1; //@line 2832 "xmlparse.c"
        var $658=HEAP[$657]; //@line 2832 "xmlparse.c"
        var $659=($658)!=0; //@line 2832 "xmlparse.c"
        if ($659) { __label__ = 92; break; } else { __label__ = 95; break; } //@line 2832 "xmlparse.c"
      case 95: // $bb114
        var $660=$s1; //@line 2833 "xmlparse.c"
        var $661=HEAP[$660]; //@line 2833 "xmlparse.c"
        var $662=($661)==0; //@line 2833 "xmlparse.c"
        if ($662) { __label__ = 96; break; } else { __label__ = 97; break; } //@line 2833 "xmlparse.c"
      case 96: // $bb115
        $0=8; //@line 2834 "xmlparse.c"
        __label__ = 144; break; //@line 2834 "xmlparse.c"
      case 97: // $bb116
        var $663=$step; //@line 2836 "xmlparse.c"
        var $664=($663)==0; //@line 2836 "xmlparse.c"
        if ($664) { __label__ = 98; break; } else { __label__ = 99; break; } //@line 2836 "xmlparse.c"
      case 98: // $bb117
        var $665=$mask; //@line 2837 "xmlparse.c"
        var $not=($665) ^ -1; //@line 2837 "xmlparse.c"
        var $666=$uriHash; //@line 2837 "xmlparse.c"
        var $667=($666) & ($not); //@line 2837 "xmlparse.c"
        var $668=$parser_addr; //@line 2837 "xmlparse.c"
        var $669=$668+388; //@line 2837 "xmlparse.c"
        var $670=HEAP[$669]; //@line 2837 "xmlparse.c"
        var $671=($670); //@line 2837 "xmlparse.c"
        var $672=($671) - 1; //@line 2837 "xmlparse.c"
        var $673=($667) >>> ($672); //@line 2837 "xmlparse.c"
        var $674=((($673)) & 255); //@line 2837 "xmlparse.c"
        var $675=$mask; //@line 2837 "xmlparse.c"
        var $676=($675) >>> 2; //@line 2837 "xmlparse.c"
        var $677=((($676)) & 255); //@line 2837 "xmlparse.c"
        var $678=($674) & ($677); //@line 2837 "xmlparse.c"
        var $679=($678) | 1; //@line 2837 "xmlparse.c"
        $step=$679; //@line 2837 "xmlparse.c"
        __label__ = 99; break; //@line 2837 "xmlparse.c"
      case 99: // $bb119
        var $680=$step; //@line 2838 "xmlparse.c"
        var $681=($680); //@line 2838 "xmlparse.c"
        var $682=$j68; //@line 2838 "xmlparse.c"
        var $683=($681) > ($682); //@line 2838 "xmlparse.c"
        var $684=$step; //@line 2838 "xmlparse.c"
        var $685=($684); //@line 2838 "xmlparse.c"
        if ($683) { __label__ = 100; break; } else { __label__ = 101; break; } //@line 2838 "xmlparse.c"
      case 100: // $bb120
        var $686=$nsAttsSize; //@line 2838 "xmlparse.c"
        var $_neg=0 - ($685);
        var $687=$j68; //@line 2838 "xmlparse.c"
        var $688=($686) + ($_neg);
        var $689=($688) + ($687); //@line 2838 "xmlparse.c"
        $j68=$689; //@line 2838 "xmlparse.c"
        var $690=$j68; //@line 2838 "xmlparse.c"
        $iftmp_110=$690; //@line 2838 "xmlparse.c"
        __label__ = 102; break; //@line 2838 "xmlparse.c"
      case 101: // $bb121
        var $691=$j68; //@line 2838 "xmlparse.c"
        var $692=($691) - ($685); //@line 2838 "xmlparse.c"
        $j68=$692; //@line 2838 "xmlparse.c"
        var $693=$j68; //@line 2838 "xmlparse.c"
        $iftmp_110=$693; //@line 2838 "xmlparse.c"
        __label__ = 102; break; //@line 2838 "xmlparse.c"
      case 102: // $bb122
        var $694=$parser_addr; //@line 2826 "xmlparse.c"
        var $695=$694+380; //@line 2826 "xmlparse.c"
        var $696=HEAP[$695]; //@line 2826 "xmlparse.c"
        var $697=$j68; //@line 2826 "xmlparse.c"
        var $698=$696+12*$697; //@line 2826 "xmlparse.c"
        var $699=$698; //@line 2826 "xmlparse.c"
        var $700=HEAP[$699]; //@line 2826 "xmlparse.c"
        var $701=$version; //@line 2826 "xmlparse.c"
        var $702=($700)==($701); //@line 2826 "xmlparse.c"
        var $703=$parser_addr; //@line 2828 "xmlparse.c"
        if ($702) { __label__ = 90; break; } else { __label__ = 103; break; } //@line 2826 "xmlparse.c"
      case 103: // $bb123
        var $704=$703+233; //@line 2842 "xmlparse.c"
        var $705=HEAP[$704]; //@line 2842 "xmlparse.c"
        var $706=($705)!=0; //@line 2842 "xmlparse.c"
        if ($706) { __label__ = 104; break; } else { __label__ = 109; break; } //@line 2842 "xmlparse.c"
      case 104: // $bb124
        var $707=$parser_addr; //@line 2843 "xmlparse.c"
        var $708=$707+400; //@line 2843 "xmlparse.c"
        var $709=$708+12; //@line 2843 "xmlparse.c"
        var $710=HEAP[$709]; //@line 2843 "xmlparse.c"
        var $711=$parser_addr; //@line 2843 "xmlparse.c"
        var $712=$711+456; //@line 2843 "xmlparse.c"
        var $713=HEAP[$712]; //@line 2843 "xmlparse.c"
        var $714=$710+-1; //@line 2843 "xmlparse.c"
        HEAP[$714]=$713; //@line 2843 "xmlparse.c"
        var $715=$b; //@line 2844 "xmlparse.c"
        var $716=$715; //@line 2844 "xmlparse.c"
        var $717=HEAP[$716]; //@line 2844 "xmlparse.c"
        var $718=$717; //@line 2844 "xmlparse.c"
        var $719=HEAP[$718]; //@line 2844 "xmlparse.c"
        $s=$719; //@line 2844 "xmlparse.c"
        __label__ = 105; break; //@line 2844 "xmlparse.c"
      case 105: // $bb125
        var $720=$parser_addr; //@line 2846 "xmlparse.c"
        var $721=$720+400; //@line 2846 "xmlparse.c"
        var $722=$721+12; //@line 2846 "xmlparse.c"
        var $723=HEAP[$722]; //@line 2846 "xmlparse.c"
        var $724=$parser_addr; //@line 2846 "xmlparse.c"
        var $725=$724+400; //@line 2846 "xmlparse.c"
        var $726=$725+8; //@line 2846 "xmlparse.c"
        var $727=HEAP[$726]; //@line 2846 "xmlparse.c"
        var $728=($723)!=($727); //@line 2846 "xmlparse.c"
        if ($728) { __label__ = 108; break; } else { __label__ = 106; break; } //@line 2846 "xmlparse.c"
      case 106: // $bb126
        var $729=$parser_addr; //@line 2846 "xmlparse.c"
        var $730=$729+400; //@line 2846 "xmlparse.c"
        var $731=_poolGrow($730); //@line 2846 "xmlparse.c"
        var $732=($731)!=0; //@line 2846 "xmlparse.c"
        if ($732) { __label__ = 108; break; } else { __label__ = 107; break; } //@line 2846 "xmlparse.c"
      case 107: // $bb131
        $iftmp_111=1; //@line 2846 "xmlparse.c"
        $0=1; //@line 2847 "xmlparse.c"
        __label__ = 144; break; //@line 2847 "xmlparse.c"
      case 108: // $bb132
        var $733=$parser_addr; //@line 2846 "xmlparse.c"
        var $734=$733+400; //@line 2846 "xmlparse.c"
        var $735=$734+12; //@line 2846 "xmlparse.c"
        var $736=HEAP[$735]; //@line 2846 "xmlparse.c"
        var $737=$s; //@line 2846 "xmlparse.c"
        var $738=HEAP[$737]; //@line 2846 "xmlparse.c"
        HEAP[$736]=$738; //@line 2846 "xmlparse.c"
        var $739=$736+1; //@line 2846 "xmlparse.c"
        var $740=$parser_addr; //@line 2846 "xmlparse.c"
        var $741=$740+400; //@line 2846 "xmlparse.c"
        var $742=$741+12; //@line 2846 "xmlparse.c"
        HEAP[$742]=$739; //@line 2846 "xmlparse.c"
        $iftmp_111=0; //@line 2846 "xmlparse.c"
        var $743=$s; //@line 2848 "xmlparse.c"
        var $744=HEAP[$743]; //@line 2848 "xmlparse.c"
        var $745=($744)!=0; //@line 2848 "xmlparse.c"
        var $746=($745); //@line 2848 "xmlparse.c"
        var $747=$s; //@line 2848 "xmlparse.c"
        var $748=$747+1; //@line 2848 "xmlparse.c"
        $s=$748; //@line 2848 "xmlparse.c"
        var $toBool133=($746)!=0; //@line 2848 "xmlparse.c"
        if ($toBool133) { __label__ = 105; break; } else { __label__ = 109; break; } //@line 2848 "xmlparse.c"
      case 109: // $bb134
        var $749=$parser_addr; //@line 2852 "xmlparse.c"
        var $750=$749+400; //@line 2852 "xmlparse.c"
        var $751=$750+16; //@line 2852 "xmlparse.c"
        var $752=HEAP[$751]; //@line 2852 "xmlparse.c"
        $s=$752; //@line 2852 "xmlparse.c"
        var $753=$parser_addr; //@line 2853 "xmlparse.c"
        var $754=$753+400; //@line 2853 "xmlparse.c"
        var $755=$754+12; //@line 2853 "xmlparse.c"
        var $756=HEAP[$755]; //@line 2853 "xmlparse.c"
        var $757=$parser_addr; //@line 2853 "xmlparse.c"
        var $758=$757+400; //@line 2853 "xmlparse.c"
        var $759=$758+16; //@line 2853 "xmlparse.c"
        HEAP[$759]=$756; //@line 2853 "xmlparse.c"
        var $760=$appAtts; //@line 2854 "xmlparse.c"
        var $761=$i; //@line 2854 "xmlparse.c"
        var $762=$760+4*$761; //@line 2854 "xmlparse.c"
        var $763=$s; //@line 2854 "xmlparse.c"
        HEAP[$762]=$763; //@line 2854 "xmlparse.c"
        var $764=$parser_addr; //@line 2857 "xmlparse.c"
        var $765=$764+380; //@line 2857 "xmlparse.c"
        var $766=HEAP[$765]; //@line 2857 "xmlparse.c"
        var $767=$j68; //@line 2857 "xmlparse.c"
        var $768=$766+12*$767; //@line 2857 "xmlparse.c"
        var $769=$768; //@line 2857 "xmlparse.c"
        var $770=$version; //@line 2857 "xmlparse.c"
        HEAP[$769]=$770; //@line 2857 "xmlparse.c"
        var $771=$parser_addr; //@line 2858 "xmlparse.c"
        var $772=$771+380; //@line 2858 "xmlparse.c"
        var $773=HEAP[$772]; //@line 2858 "xmlparse.c"
        var $774=$j68; //@line 2858 "xmlparse.c"
        var $775=$773+12*$774; //@line 2858 "xmlparse.c"
        var $776=$775+4; //@line 2858 "xmlparse.c"
        var $777=$uriHash; //@line 2858 "xmlparse.c"
        HEAP[$776]=$777; //@line 2858 "xmlparse.c"
        var $778=$parser_addr; //@line 2859 "xmlparse.c"
        var $779=$778+380; //@line 2859 "xmlparse.c"
        var $780=HEAP[$779]; //@line 2859 "xmlparse.c"
        var $781=$j68; //@line 2859 "xmlparse.c"
        var $782=$780+12*$781; //@line 2859 "xmlparse.c"
        var $783=$782+8; //@line 2859 "xmlparse.c"
        var $784=$s; //@line 2859 "xmlparse.c"
        HEAP[$783]=$784; //@line 2859 "xmlparse.c"
        var $785=$nPrefixes; //@line 2861 "xmlparse.c"
        var $786=($785) - 1; //@line 2861 "xmlparse.c"
        $nPrefixes=$786; //@line 2861 "xmlparse.c"
        var $787=($786)==0; //@line 2861 "xmlparse.c"
        if ($787) { __label__ = 110; break; } else { __label__ = 112; break; } //@line 2861 "xmlparse.c"
      case 110: // $bb135
        var $788=$i; //@line 2862 "xmlparse.c"
        var $789=($788) + 2; //@line 2862 "xmlparse.c"
        $i=$789; //@line 2862 "xmlparse.c"
        __label__ = 114; break; //@line 2862 "xmlparse.c"
      case 111: // $bb137
        var $790=$s; //@line 2867 "xmlparse.c"
        var $791=$790+-1; //@line 2867 "xmlparse.c"
        HEAP[$791]=0; //@line 2867 "xmlparse.c"
        __label__ = 112; break; //@line 2867 "xmlparse.c"
      case 112: // $bb138
        var $792=$i; //@line 2790 "xmlparse.c"
        var $793=($792) + 2; //@line 2790 "xmlparse.c"
        $i=$793; //@line 2790 "xmlparse.c"
        __label__ = 113; break; //@line 2790 "xmlparse.c"
      case 113: // $bb139
        var $794=$i; //@line 2790 "xmlparse.c"
        var $795=$attIndex; //@line 2790 "xmlparse.c"
        var $796=($794) < ($795); //@line 2790 "xmlparse.c"
        if ($796) { __label__ = 73; break; } else { __label__ = 114; break; } //@line 2790 "xmlparse.c"
      case 114: // $bb142_preheader
        var $797=$i; //@line 2871 "xmlparse.c"
        var $798=$attIndex; //@line 2871 "xmlparse.c"
        var $799=($797) < ($798); //@line 2871 "xmlparse.c"
        if ($799) { __label__ = 115; break; } else { __label__ = 116; break; } //@line 2871 "xmlparse.c"
      case 115: // $bb141
        var $800=$appAtts; //@line 2872 "xmlparse.c"
        var $801=$i; //@line 2872 "xmlparse.c"
        var $802=$800+4*$801; //@line 2872 "xmlparse.c"
        var $803=HEAP[$802]; //@line 2872 "xmlparse.c"
        var $804=$803+-1; //@line 2872 "xmlparse.c"
        HEAP[$804]=0; //@line 2872 "xmlparse.c"
        var $805=$i; //@line 2871 "xmlparse.c"
        var $806=($805) + 2; //@line 2871 "xmlparse.c"
        $i=$806; //@line 2871 "xmlparse.c"
        var $807=$i; //@line 2871 "xmlparse.c"
        var $808=$attIndex; //@line 2871 "xmlparse.c"
        var $809=($807) < ($808); //@line 2871 "xmlparse.c"
        if ($809) { __label__ = 115; break; } else { __label__ = 116; break; } //@line 2871 "xmlparse.c"
      case 116: // $bb143
        var $810=$bindingsPtr_addr; //@line 2873 "xmlparse.c"
        var $811=HEAP[$810]; //@line 2873 "xmlparse.c"
        $binding=$811; //@line 2873 "xmlparse.c"
        var $812=($811)!=0; //@line 2873 "xmlparse.c"
        if ($812) { __label__ = 117; break; } else { __label__ = 118; break; } //@line 2873 "xmlparse.c"
      case 117: // $bb144
        var $813=$binding; //@line 2874 "xmlparse.c"
        var $814=$813+12; //@line 2874 "xmlparse.c"
        var $815=HEAP[$814]; //@line 2874 "xmlparse.c"
        var $816=$815; //@line 2874 "xmlparse.c"
        var $817=HEAP[$816]; //@line 2874 "xmlparse.c"
        var $818=$817+-1; //@line 2874 "xmlparse.c"
        HEAP[$818]=0; //@line 2874 "xmlparse.c"
        var $819=$binding; //@line 2873 "xmlparse.c"
        var $820=$819+4; //@line 2873 "xmlparse.c"
        var $821=HEAP[$820]; //@line 2873 "xmlparse.c"
        $binding=$821; //@line 2873 "xmlparse.c"
        var $822=($821)!=0; //@line 2873 "xmlparse.c"
        if ($822) { __label__ = 117; break; } else { __label__ = 118; break; } //@line 2873 "xmlparse.c"
      case 118: // $bb146
        var $823=$parser_addr; //@line 2876 "xmlparse.c"
        var $824=$823+232; //@line 2876 "xmlparse.c"
        var $825=HEAP[$824]; //@line 2876 "xmlparse.c"
        var $826=($825)==0; //@line 2876 "xmlparse.c"
        if ($826) { __label__ = 119; break; } else { __label__ = 120; break; } //@line 2876 "xmlparse.c"
      case 119: // $bb147
        $0=0; //@line 2877 "xmlparse.c"
        __label__ = 144; break; //@line 2877 "xmlparse.c"
      case 120: // $bb148
        var $827=$elementType; //@line 2880 "xmlparse.c"
        var $828=$827+4; //@line 2880 "xmlparse.c"
        var $829=HEAP[$828]; //@line 2880 "xmlparse.c"
        var $830=($829)!=0; //@line 2880 "xmlparse.c"
        if ($830) { __label__ = 121; break; } else { __label__ = 125; break; } //@line 2880 "xmlparse.c"
      case 121: // $bb149
        var $831=$elementType; //@line 2881 "xmlparse.c"
        var $832=$831+4; //@line 2881 "xmlparse.c"
        var $833=HEAP[$832]; //@line 2881 "xmlparse.c"
        var $834=$833+4; //@line 2881 "xmlparse.c"
        var $835=HEAP[$834]; //@line 2881 "xmlparse.c"
        $binding=$835; //@line 2881 "xmlparse.c"
        var $836=$binding; //@line 2882 "xmlparse.c"
        var $837=($836)==0; //@line 2882 "xmlparse.c"
        if ($837) { __label__ = 122; break; } else { __label__ = 123; break; } //@line 2882 "xmlparse.c"
      case 122: // $bb150
        $0=27; //@line 2883 "xmlparse.c"
        __label__ = 144; break; //@line 2883 "xmlparse.c"
      case 123: // $bb151
        var $838=$tagNamePtr_addr; //@line 2884 "xmlparse.c"
        var $839=$838; //@line 2884 "xmlparse.c"
        var $840=HEAP[$839]; //@line 2884 "xmlparse.c"
        $localPart=$840; //@line 2884 "xmlparse.c"
        __label__ = 124; break; //@line 2884 "xmlparse.c"
      case 124: // $bb152
        var $841=$localPart; //@line 2885 "xmlparse.c"
        var $842=HEAP[$841]; //@line 2885 "xmlparse.c"
        var $843=($842)!=58; //@line 2885 "xmlparse.c"
        var $844=($843); //@line 2885 "xmlparse.c"
        var $845=$localPart; //@line 2885 "xmlparse.c"
        var $846=$845+1; //@line 2885 "xmlparse.c"
        $localPart=$846; //@line 2885 "xmlparse.c"
        var $toBool153=($844)!=0; //@line 2885 "xmlparse.c"
        if ($toBool153) { __label__ = 124; break; } else { __label__ = 128; break; } //@line 2885 "xmlparse.c"
      case 125: // $bb155
        var $847=$dtd; //@line 2888 "xmlparse.c"
        var $848=$847+132; //@line 2888 "xmlparse.c"
        var $849=$848+4; //@line 2888 "xmlparse.c"
        var $850=HEAP[$849]; //@line 2888 "xmlparse.c"
        var $851=($850)!=0; //@line 2888 "xmlparse.c"
        if ($851) { __label__ = 126; break; } else { __label__ = 127; break; } //@line 2888 "xmlparse.c"
      case 126: // $bb156
        var $852=$dtd; //@line 2889 "xmlparse.c"
        var $853=$852+132; //@line 2889 "xmlparse.c"
        var $854=$853+4; //@line 2889 "xmlparse.c"
        var $855=HEAP[$854]; //@line 2889 "xmlparse.c"
        $binding=$855; //@line 2889 "xmlparse.c"
        var $856=$tagNamePtr_addr; //@line 2890 "xmlparse.c"
        var $857=$856; //@line 2890 "xmlparse.c"
        var $858=HEAP[$857]; //@line 2890 "xmlparse.c"
        $localPart=$858; //@line 2890 "xmlparse.c"
        __label__ = 128; break; //@line 2890 "xmlparse.c"
      case 127: // $bb157
        $0=0; //@line 2893 "xmlparse.c"
        __label__ = 144; break; //@line 2893 "xmlparse.c"
      case 128: // $bb158
        $prefixLen=0; //@line 2894 "xmlparse.c"
        var $859=$parser_addr; //@line 2895 "xmlparse.c"
        var $860=$859+233; //@line 2895 "xmlparse.c"
        var $861=HEAP[$860]; //@line 2895 "xmlparse.c"
        var $862=($861)!=0; //@line 2895 "xmlparse.c"
        if ($862) { __label__ = 129; break; } else { __label__ = 131; break; } //@line 2895 "xmlparse.c"
      case 129: // $bb159
        var $863=$binding; //@line 2895 "xmlparse.c"
        var $864=$863; //@line 2895 "xmlparse.c"
        var $865=HEAP[$864]; //@line 2895 "xmlparse.c"
        var $866=$865; //@line 2895 "xmlparse.c"
        var $867=HEAP[$866]; //@line 2895 "xmlparse.c"
        var $868=($867)!=0; //@line 2895 "xmlparse.c"
        if ($868) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 2895 "xmlparse.c"
      case 130: // $bb160
        var $869=$binding; //@line 2896 "xmlparse.c"
        var $870=$869; //@line 2896 "xmlparse.c"
        var $871=HEAP[$870]; //@line 2896 "xmlparse.c"
        var $872=$871; //@line 2896 "xmlparse.c"
        var $873=HEAP[$872]; //@line 2896 "xmlparse.c"
        var $874=$prefixLen; //@line 2896 "xmlparse.c"
        var $875=$873+$874; //@line 2896 "xmlparse.c"
        var $876=HEAP[$875]; //@line 2896 "xmlparse.c"
        var $877=($876)!=0; //@line 2896 "xmlparse.c"
        var $878=($877); //@line 2896 "xmlparse.c"
        var $879=$prefixLen; //@line 2896 "xmlparse.c"
        var $880=($879) + 1; //@line 2896 "xmlparse.c"
        $prefixLen=$880; //@line 2896 "xmlparse.c"
        var $toBool161=($878)!=0; //@line 2896 "xmlparse.c"
        if ($toBool161) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 2896 "xmlparse.c"
      case 131: // $bb162
        var $881=$tagNamePtr_addr; //@line 2899 "xmlparse.c"
        var $882=$881+4; //@line 2899 "xmlparse.c"
        var $883=$localPart; //@line 2899 "xmlparse.c"
        HEAP[$882]=$883; //@line 2899 "xmlparse.c"
        var $884=$binding; //@line 2900 "xmlparse.c"
        var $885=$884+20; //@line 2900 "xmlparse.c"
        var $886=HEAP[$885]; //@line 2900 "xmlparse.c"
        var $887=$tagNamePtr_addr; //@line 2900 "xmlparse.c"
        var $888=$887+16; //@line 2900 "xmlparse.c"
        HEAP[$888]=$886; //@line 2900 "xmlparse.c"
        var $889=$binding; //@line 2901 "xmlparse.c"
        var $890=$889; //@line 2901 "xmlparse.c"
        var $891=HEAP[$890]; //@line 2901 "xmlparse.c"
        var $892=$891; //@line 2901 "xmlparse.c"
        var $893=HEAP[$892]; //@line 2901 "xmlparse.c"
        var $894=$tagNamePtr_addr; //@line 2901 "xmlparse.c"
        var $895=$894+8; //@line 2901 "xmlparse.c"
        HEAP[$895]=$893; //@line 2901 "xmlparse.c"
        var $896=$tagNamePtr_addr; //@line 2902 "xmlparse.c"
        var $897=$896+20; //@line 2902 "xmlparse.c"
        var $898=$prefixLen; //@line 2902 "xmlparse.c"
        HEAP[$897]=$898; //@line 2902 "xmlparse.c"
        $i=0; //@line 2903 "xmlparse.c"
        __label__ = 132; break; //@line 2903 "xmlparse.c"
      case 132: // $bb163
        var $899=$localPart; //@line 2903 "xmlparse.c"
        var $900=$i; //@line 2903 "xmlparse.c"
        var $901=$899+$900; //@line 2903 "xmlparse.c"
        var $902=HEAP[$901]; //@line 2903 "xmlparse.c"
        var $903=($902)!=0; //@line 2903 "xmlparse.c"
        var $904=($903); //@line 2903 "xmlparse.c"
        var $905=$i; //@line 2903 "xmlparse.c"
        var $906=($905) + 1; //@line 2903 "xmlparse.c"
        $i=$906; //@line 2903 "xmlparse.c"
        var $toBool164=($904)!=0; //@line 2903 "xmlparse.c"
        if ($toBool164) { __label__ = 132; break; } else { __label__ = 133; break; } //@line 2903 "xmlparse.c"
      case 133: // $bb165
        var $907=$binding; //@line 2905 "xmlparse.c"
        var $908=$907+20; //@line 2905 "xmlparse.c"
        var $909=HEAP[$908]; //@line 2905 "xmlparse.c"
        var $910=$i; //@line 2905 "xmlparse.c"
        var $911=$prefixLen; //@line 2905 "xmlparse.c"
        var $912=($910) + ($909); //@line 2905 "xmlparse.c"
        var $913=($912) + ($911); //@line 2905 "xmlparse.c"
        $n=$913; //@line 2905 "xmlparse.c"
        var $914=$binding; //@line 2906 "xmlparse.c"
        var $915=$914+24; //@line 2906 "xmlparse.c"
        var $916=HEAP[$915]; //@line 2906 "xmlparse.c"
        var $917=$n; //@line 2906 "xmlparse.c"
        var $918=($916) < ($917); //@line 2906 "xmlparse.c"
        if ($918) { __label__ = 134; break; } else { __label__ = 141; break; } //@line 2906 "xmlparse.c"
      case 134: // $bb166
        var $919=$parser_addr; //@line 2908 "xmlparse.c"
        var $920=$919+12; //@line 2908 "xmlparse.c"
        var $921=$920; //@line 2908 "xmlparse.c"
        var $922=HEAP[$921]; //@line 2908 "xmlparse.c"
        var $923=$n; //@line 2908 "xmlparse.c"
        var $924=($923) + 24; //@line 2908 "xmlparse.c"
        var $925=FUNCTION_TABLE[$922]($924); //@line 2908 "xmlparse.c"
        $uri=$925; //@line 2908 "xmlparse.c"
        var $926=$uri; //@line 2909 "xmlparse.c"
        var $927=($926)==0; //@line 2909 "xmlparse.c"
        if ($927) { __label__ = 135; break; } else { __label__ = 136; break; } //@line 2909 "xmlparse.c"
      case 135: // $bb167
        $0=1; //@line 2910 "xmlparse.c"
        __label__ = 144; break; //@line 2910 "xmlparse.c"
      case 136: // $bb168
        var $928=$n; //@line 2911 "xmlparse.c"
        var $929=($928) + 24; //@line 2911 "xmlparse.c"
        var $930=$binding; //@line 2911 "xmlparse.c"
        var $931=$930+24; //@line 2911 "xmlparse.c"
        HEAP[$931]=$929; //@line 2911 "xmlparse.c"
        var $932=$binding; //@line 2912 "xmlparse.c"
        var $933=$932+20; //@line 2912 "xmlparse.c"
        var $934=HEAP[$933]; //@line 2912 "xmlparse.c"
        var $935=$binding; //@line 2912 "xmlparse.c"
        var $936=$935+16; //@line 2912 "xmlparse.c"
        var $937=HEAP[$936]; //@line 2912 "xmlparse.c"
        var $938=$uri; //@line 2912 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($938, $937, $934, 1, 0); //@line 2912 "xmlparse.c"
        var $939=$parser_addr; //@line 2913 "xmlparse.c"
        var $940=$939+348; //@line 2913 "xmlparse.c"
        var $941=HEAP[$940]; //@line 2913 "xmlparse.c"
        $p=$941; //@line 2913 "xmlparse.c"
        var $942=($941)!=0; //@line 2913 "xmlparse.c"
        if ($942) { __label__ = 137; break; } else { __label__ = 140; break; } //@line 2913 "xmlparse.c"
      case 137: // $bb169
        var $943=$p; //@line 2914 "xmlparse.c"
        var $944=$943+12; //@line 2914 "xmlparse.c"
        var $945=$944; //@line 2914 "xmlparse.c"
        var $946=HEAP[$945]; //@line 2914 "xmlparse.c"
        var $947=$binding; //@line 2914 "xmlparse.c"
        var $948=$947+16; //@line 2914 "xmlparse.c"
        var $949=HEAP[$948]; //@line 2914 "xmlparse.c"
        var $950=($946)==($949); //@line 2914 "xmlparse.c"
        if ($950) { __label__ = 138; break; } else { __label__ = 139; break; } //@line 2914 "xmlparse.c"
      case 138: // $bb170
        var $951=$p; //@line 2915 "xmlparse.c"
        var $952=$951+12; //@line 2915 "xmlparse.c"
        var $953=$952; //@line 2915 "xmlparse.c"
        var $954=$uri; //@line 2915 "xmlparse.c"
        HEAP[$953]=$954; //@line 2915 "xmlparse.c"
        __label__ = 139; break; //@line 2915 "xmlparse.c"
      case 139: // $bb171
        var $955=$p; //@line 2913 "xmlparse.c"
        var $956=$955; //@line 2913 "xmlparse.c"
        var $957=HEAP[$956]; //@line 2913 "xmlparse.c"
        $p=$957; //@line 2913 "xmlparse.c"
        var $958=($957)!=0; //@line 2913 "xmlparse.c"
        if ($958) { __label__ = 137; break; } else { __label__ = 140; break; } //@line 2913 "xmlparse.c"
      case 140: // $bb173
        var $959=$parser_addr; //@line 2916 "xmlparse.c"
        var $960=$959+12; //@line 2916 "xmlparse.c"
        var $961=$960+8; //@line 2916 "xmlparse.c"
        var $962=HEAP[$961]; //@line 2916 "xmlparse.c"
        var $963=$binding; //@line 2916 "xmlparse.c"
        var $964=$963+16; //@line 2916 "xmlparse.c"
        var $965=HEAP[$964]; //@line 2916 "xmlparse.c"
        FUNCTION_TABLE[$962]($965); //@line 2916 "xmlparse.c"
        var $966=$binding; //@line 2917 "xmlparse.c"
        var $967=$966+16; //@line 2917 "xmlparse.c"
        var $968=$uri; //@line 2917 "xmlparse.c"
        HEAP[$967]=$968; //@line 2917 "xmlparse.c"
        __label__ = 141; break; //@line 2917 "xmlparse.c"
      case 141: // $bb174
        var $969=$binding; //@line 2920 "xmlparse.c"
        var $970=$969+16; //@line 2920 "xmlparse.c"
        var $971=HEAP[$970]; //@line 2920 "xmlparse.c"
        var $972=$binding; //@line 2920 "xmlparse.c"
        var $973=$972+20; //@line 2920 "xmlparse.c"
        var $974=HEAP[$973]; //@line 2920 "xmlparse.c"
        var $975=$971+$974; //@line 2920 "xmlparse.c"
        $uri=$975; //@line 2920 "xmlparse.c"
        var $976=$i; //@line 2921 "xmlparse.c"
        var $977=$uri; //@line 2921 "xmlparse.c"
        var $978=$localPart; //@line 2921 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($977, $978, $976, 1, 0); //@line 2921 "xmlparse.c"
        var $979=$prefixLen; //@line 2923 "xmlparse.c"
        var $980=($979)!=0; //@line 2923 "xmlparse.c"
        if ($980) { __label__ = 142; break; } else { __label__ = 143; break; } //@line 2923 "xmlparse.c"
      case 142: // $bb175
        var $981=$i; //@line 2924 "xmlparse.c"
        var $982=($981) - 1; //@line 2924 "xmlparse.c"
        var $983=$uri; //@line 2924 "xmlparse.c"
        var $984=$983+$982; //@line 2924 "xmlparse.c"
        $uri=$984; //@line 2924 "xmlparse.c"
        var $985=$parser_addr; //@line 2925 "xmlparse.c"
        var $986=$985+456; //@line 2925 "xmlparse.c"
        var $987=HEAP[$986]; //@line 2925 "xmlparse.c"
        var $988=$uri; //@line 2925 "xmlparse.c"
        HEAP[$988]=$987; //@line 2925 "xmlparse.c"
        var $989=$prefixLen; //@line 2926 "xmlparse.c"
        var $990=$binding; //@line 2926 "xmlparse.c"
        var $991=$990; //@line 2926 "xmlparse.c"
        var $992=HEAP[$991]; //@line 2926 "xmlparse.c"
        var $993=$992; //@line 2926 "xmlparse.c"
        var $994=HEAP[$993]; //@line 2926 "xmlparse.c"
        var $995=$uri; //@line 2926 "xmlparse.c"
        var $996=$995+1; //@line 2926 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($996, $994, $989, 1, 0); //@line 2926 "xmlparse.c"
        __label__ = 143; break; //@line 2926 "xmlparse.c"
      case 143: // $bb176
        var $997=$binding; //@line 2928 "xmlparse.c"
        var $998=$997+16; //@line 2928 "xmlparse.c"
        var $999=HEAP[$998]; //@line 2928 "xmlparse.c"
        var $1000=$tagNamePtr_addr; //@line 2928 "xmlparse.c"
        var $1001=$1000; //@line 2928 "xmlparse.c"
        HEAP[$1001]=$999; //@line 2928 "xmlparse.c"
        $0=0; //@line 2929 "xmlparse.c"
        __label__ = 144; break; //@line 2929 "xmlparse.c"
      case 144: // $bb177
        var $1002=$0; //@line 2625 "xmlparse.c"
        $retval=$1002; //@line 2625 "xmlparse.c"
        var $retval178=$retval; //@line 2625 "xmlparse.c"
        ;
        return $retval178; //@line 2625 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _addBinding($parser, $prefix, $attId, $uri, $bindingsPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $prefix_addr;
        var $attId_addr;
        var $uri_addr;
        var $bindingsPtr_addr;
        var $retval;
        var $iftmp_125;
        var $iftmp_123;
        var $iftmp_121;
        var $iftmp_119;
        var $0;
        var $mustBeXML;
        var $isXML;
        var $isXMLNS;
        var $b;
        var $len;
        var $temp;
        $parser_addr=$parser;
        $prefix_addr=$prefix;
        $attId_addr=$attId;
        $uri_addr=$uri;
        $bindingsPtr_addr=$bindingsPtr;
        $mustBeXML=0; //@line 2955 "xmlparse.c"
        $isXML=1; //@line 2956 "xmlparse.c"
        $isXMLNS=1; //@line 2957 "xmlparse.c"
        var $1=$uri_addr; //@line 2963 "xmlparse.c"
        var $2=HEAP[$1]; //@line 2963 "xmlparse.c"
        var $3=($2)==0; //@line 2963 "xmlparse.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 2963 "xmlparse.c"
      case 1: // $bb
        var $4=$prefix_addr; //@line 2963 "xmlparse.c"
        var $5=$4; //@line 2963 "xmlparse.c"
        var $6=HEAP[$5]; //@line 2963 "xmlparse.c"
        var $7=($6)!=0; //@line 2963 "xmlparse.c"
        if ($7) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 2963 "xmlparse.c"
      case 2: // $bb1
        $0=28; //@line 2964 "xmlparse.c"
        __label__ = 65; break; //@line 2964 "xmlparse.c"
      case 3: // $bb2
        var $8=$prefix_addr; //@line 2966 "xmlparse.c"
        var $9=$8; //@line 2966 "xmlparse.c"
        var $10=HEAP[$9]; //@line 2966 "xmlparse.c"
        var $11=($10)!=0; //@line 2966 "xmlparse.c"
        if ($11) { __label__ = 4; break; } else { __label__ = 13; break; } //@line 2966 "xmlparse.c"
      case 4: // $bb3
        var $12=$prefix_addr; //@line 2966 "xmlparse.c"
        var $13=$12; //@line 2966 "xmlparse.c"
        var $14=HEAP[$13]; //@line 2966 "xmlparse.c"
        var $15=$14; //@line 2966 "xmlparse.c"
        var $16=HEAP[$15]; //@line 2966 "xmlparse.c"
        var $17=($16)==120; //@line 2966 "xmlparse.c"
        if ($17) { __label__ = 5; break; } else { __label__ = 13; break; } //@line 2966 "xmlparse.c"
      case 5: // $bb4
        var $18=$prefix_addr; //@line 2966 "xmlparse.c"
        var $19=$18; //@line 2966 "xmlparse.c"
        var $20=HEAP[$19]; //@line 2966 "xmlparse.c"
        var $21=$20+1; //@line 2966 "xmlparse.c"
        var $22=HEAP[$21]; //@line 2966 "xmlparse.c"
        var $23=($22)==109; //@line 2966 "xmlparse.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 13; break; } //@line 2966 "xmlparse.c"
      case 6: // $bb5
        var $24=$prefix_addr; //@line 2966 "xmlparse.c"
        var $25=$24; //@line 2966 "xmlparse.c"
        var $26=HEAP[$25]; //@line 2966 "xmlparse.c"
        var $27=$26+2; //@line 2966 "xmlparse.c"
        var $28=HEAP[$27]; //@line 2966 "xmlparse.c"
        var $29=($28)==108; //@line 2966 "xmlparse.c"
        if ($29) { __label__ = 7; break; } else { __label__ = 13; break; } //@line 2966 "xmlparse.c"
      case 7: // $bb6
        var $30=$prefix_addr; //@line 2972 "xmlparse.c"
        var $31=$30; //@line 2972 "xmlparse.c"
        var $32=HEAP[$31]; //@line 2972 "xmlparse.c"
        var $33=$32+3; //@line 2972 "xmlparse.c"
        var $34=HEAP[$33]; //@line 2972 "xmlparse.c"
        var $35=($34)==110; //@line 2972 "xmlparse.c"
        if ($35) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 2972 "xmlparse.c"
      case 8: // $bb7
        var $36=$prefix_addr; //@line 2972 "xmlparse.c"
        var $37=$36; //@line 2972 "xmlparse.c"
        var $38=HEAP[$37]; //@line 2972 "xmlparse.c"
        var $39=$38+4; //@line 2972 "xmlparse.c"
        var $40=HEAP[$39]; //@line 2972 "xmlparse.c"
        var $41=($40)==115; //@line 2972 "xmlparse.c"
        if ($41) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 2972 "xmlparse.c"
      case 9: // $bb8
        var $42=$prefix_addr; //@line 2972 "xmlparse.c"
        var $43=$42; //@line 2972 "xmlparse.c"
        var $44=HEAP[$43]; //@line 2972 "xmlparse.c"
        var $45=$44+5; //@line 2972 "xmlparse.c"
        var $46=HEAP[$45]; //@line 2972 "xmlparse.c"
        var $47=($46)==0; //@line 2972 "xmlparse.c"
        if ($47) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 2972 "xmlparse.c"
      case 10: // $bb9
        $0=39; //@line 2975 "xmlparse.c"
        __label__ = 65; break; //@line 2975 "xmlparse.c"
      case 11: // $bb10
        var $48=$prefix_addr; //@line 2977 "xmlparse.c"
        var $49=$48; //@line 2977 "xmlparse.c"
        var $50=HEAP[$49]; //@line 2977 "xmlparse.c"
        var $51=$50+3; //@line 2977 "xmlparse.c"
        var $52=HEAP[$51]; //@line 2977 "xmlparse.c"
        var $53=($52)==0; //@line 2977 "xmlparse.c"
        if ($53) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 2977 "xmlparse.c"
      case 12: // $bb11
        $mustBeXML=1; //@line 2978 "xmlparse.c"
        __label__ = 13; break; //@line 2978 "xmlparse.c"
      case 13: // $bb12
        $len=0; //@line 2981 "xmlparse.c"
        var $54=$uri_addr; //@line 2981 "xmlparse.c"
        var $55=$len; //@line 2981 "xmlparse.c"
        var $56=$54+$55; //@line 2981 "xmlparse.c"
        var $57=HEAP[$56]; //@line 2981 "xmlparse.c"
        var $58=($57)!=0; //@line 2981 "xmlparse.c"
        var $59=$isXML; //@line 2982 "xmlparse.c"
        if ($58) { __lastLabel__ = 13; __label__ = 14; break; } else { __lastLabel__ = 13; __label__ = 24; break; } //@line 2981 "xmlparse.c"
      case 14: // $bb13
        var $60=__lastLabel__ == 23 ? $93 : ($59);
        var $61=($60)!=0; //@line 2982 "xmlparse.c"
        if ($61) { __label__ = 15; break; } else { __label__ = 18; break; } //@line 2982 "xmlparse.c"
      case 15: // $bb14
        var $62=$len; //@line 2982 "xmlparse.c"
        var $63=($62) > 36; //@line 2982 "xmlparse.c"
        if ($63) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 2982 "xmlparse.c"
      case 16: // $bb15
        var $64=$uri_addr; //@line 2982 "xmlparse.c"
        var $65=$len; //@line 2982 "xmlparse.c"
        var $66=$64+$65; //@line 2982 "xmlparse.c"
        var $67=HEAP[$66]; //@line 2982 "xmlparse.c"
        var $68=$len; //@line 2982 "xmlparse.c"
        var $69=_xmlNamespace_5099+$68; //@line 2982 "xmlparse.c"
        var $70=HEAP[$69]; //@line 2982 "xmlparse.c"
        var $71=($67)!=($70); //@line 2982 "xmlparse.c"
        if ($71) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 2982 "xmlparse.c"
      case 17: // $bb16
        $isXML=0; //@line 2983 "xmlparse.c"
        __label__ = 18; break; //@line 2983 "xmlparse.c"
      case 18: // $bb17
        var $72=$mustBeXML; //@line 2985 "xmlparse.c"
        var $73=($72)==0; //@line 2985 "xmlparse.c"
        if ($73) { __label__ = 19; break; } else { __label__ = 23; break; } //@line 2985 "xmlparse.c"
      case 19: // $bb18
        var $74=$isXMLNS; //@line 2985 "xmlparse.c"
        var $75=($74)!=0; //@line 2985 "xmlparse.c"
        if ($75) { __label__ = 20; break; } else { __label__ = 23; break; } //@line 2985 "xmlparse.c"
      case 20: // $bb19
        var $76=$len; //@line 2985 "xmlparse.c"
        var $77=($76) > 29; //@line 2985 "xmlparse.c"
        if ($77) { __label__ = 22; break; } else { __label__ = 21; break; } //@line 2985 "xmlparse.c"
      case 21: // $bb20
        var $78=$uri_addr; //@line 2985 "xmlparse.c"
        var $79=$len; //@line 2985 "xmlparse.c"
        var $80=$78+$79; //@line 2985 "xmlparse.c"
        var $81=HEAP[$80]; //@line 2985 "xmlparse.c"
        var $82=$len; //@line 2985 "xmlparse.c"
        var $83=_xmlnsNamespace_5101+$82; //@line 2985 "xmlparse.c"
        var $84=HEAP[$83]; //@line 2985 "xmlparse.c"
        var $85=($81)!=($84); //@line 2985 "xmlparse.c"
        if ($85) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 2985 "xmlparse.c"
      case 22: // $bb21
        $isXMLNS=0; //@line 2987 "xmlparse.c"
        __label__ = 23; break; //@line 2987 "xmlparse.c"
      case 23: // $bb22
        var $86=$len; //@line 2981 "xmlparse.c"
        var $87=($86) + 1; //@line 2981 "xmlparse.c"
        $len=$87; //@line 2981 "xmlparse.c"
        var $88=$uri_addr; //@line 2981 "xmlparse.c"
        var $89=$len; //@line 2981 "xmlparse.c"
        var $90=$88+$89; //@line 2981 "xmlparse.c"
        var $91=HEAP[$90]; //@line 2981 "xmlparse.c"
        var $92=($91)!=0; //@line 2981 "xmlparse.c"
        var $93=$isXML; //@line 2982 "xmlparse.c"
        if ($92) { __lastLabel__ = 23; __label__ = 14; break; } else { __lastLabel__ = 23; __label__ = 24; break; } //@line 2981 "xmlparse.c"
      case 24: // $bb24
        var $_lcssa=__lastLabel__ == 13 ? $59 : ($93);
        var $94=($_lcssa)==0; //@line 2989 "xmlparse.c"
        if ($94) { __label__ = 27; break; } else { __label__ = 25; break; } //@line 2989 "xmlparse.c"
      case 25: // $bb25
        var $95=$len; //@line 2989 "xmlparse.c"
        var $96=($95)!=36; //@line 2989 "xmlparse.c"
        if ($96) { __label__ = 27; break; } else { __label__ = 26; break; } //@line 2989 "xmlparse.c"
      case 26: // $bb26
        $iftmp_119=1; //@line 2989 "xmlparse.c"
        __label__ = 28; break; //@line 2989 "xmlparse.c"
      case 27: // $bb27
        $iftmp_119=0; //@line 2989 "xmlparse.c"
        __label__ = 28; break; //@line 2989 "xmlparse.c"
      case 28: // $bb28
        var $97=$iftmp_119; //@line 2989 "xmlparse.c"
        var $98=((($97)) & 255); //@line 2989 "xmlparse.c"
        $isXML=$98; //@line 2989 "xmlparse.c"
        var $99=$isXMLNS; //@line 2990 "xmlparse.c"
        var $100=($99)==0; //@line 2990 "xmlparse.c"
        if ($100) { __label__ = 31; break; } else { __label__ = 29; break; } //@line 2990 "xmlparse.c"
      case 29: // $bb29
        var $101=$len; //@line 2990 "xmlparse.c"
        var $102=($101)!=29; //@line 2990 "xmlparse.c"
        if ($102) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 2990 "xmlparse.c"
      case 30: // $bb30
        $iftmp_121=1; //@line 2990 "xmlparse.c"
        __label__ = 32; break; //@line 2990 "xmlparse.c"
      case 31: // $bb31
        $iftmp_121=0; //@line 2990 "xmlparse.c"
        __label__ = 32; break; //@line 2990 "xmlparse.c"
      case 32: // $bb32
        var $103=$iftmp_121; //@line 2990 "xmlparse.c"
        var $104=((($103)) & 255); //@line 2990 "xmlparse.c"
        $isXMLNS=$104; //@line 2990 "xmlparse.c"
        var $105=$mustBeXML; //@line 2992 "xmlparse.c"
        var $106=$isXML; //@line 2992 "xmlparse.c"
        var $107=($105)!=($106); //@line 2992 "xmlparse.c"
        if ($107) { __label__ = 33; break; } else { __label__ = 37; break; } //@line 2992 "xmlparse.c"
      case 33: // $bb33
        var $108=$mustBeXML; //@line 2993 "xmlparse.c"
        var $109=($108)!=0; //@line 2993 "xmlparse.c"
        if ($109) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 2993 "xmlparse.c"
      case 34: // $bb34
        $iftmp_123=38; //@line 2993 "xmlparse.c"
        __label__ = 36; break; //@line 2993 "xmlparse.c"
      case 35: // $bb35
        $iftmp_123=40; //@line 2993 "xmlparse.c"
        __label__ = 36; break; //@line 2993 "xmlparse.c"
      case 36: // $bb36
        var $110=$iftmp_123; //@line 2993 "xmlparse.c"
        $0=$110; //@line 2993 "xmlparse.c"
        __label__ = 65; break; //@line 2993 "xmlparse.c"
      case 37: // $bb37
        var $111=$isXMLNS; //@line 2996 "xmlparse.c"
        var $112=($111)!=0; //@line 2996 "xmlparse.c"
        if ($112) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 2996 "xmlparse.c"
      case 38: // $bb38
        $0=40; //@line 2997 "xmlparse.c"
        __label__ = 65; break; //@line 2997 "xmlparse.c"
      case 39: // $bb39
        var $113=$parser_addr; //@line 2999 "xmlparse.c"
        var $114=$113+456; //@line 2999 "xmlparse.c"
        var $115=HEAP[$114]; //@line 2999 "xmlparse.c"
        var $116=($115)!=0; //@line 2999 "xmlparse.c"
        if ($116) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 2999 "xmlparse.c"
      case 40: // $bb40
        var $117=$len; //@line 3000 "xmlparse.c"
        var $118=($117) + 1; //@line 3000 "xmlparse.c"
        $len=$118; //@line 3000 "xmlparse.c"
        __label__ = 41; break; //@line 3000 "xmlparse.c"
      case 41: // $bb41
        var $119=$parser_addr; //@line 3001 "xmlparse.c"
        var $120=$119+360; //@line 3001 "xmlparse.c"
        var $121=HEAP[$120]; //@line 3001 "xmlparse.c"
        var $122=($121)!=0; //@line 3001 "xmlparse.c"
        var $123=$parser_addr; //@line 3002 "xmlparse.c"
        if ($122) { __label__ = 42; break; } else { __label__ = 47; break; } //@line 3001 "xmlparse.c"
      case 42: // $bb42
        var $124=$123+360; //@line 3002 "xmlparse.c"
        var $125=HEAP[$124]; //@line 3002 "xmlparse.c"
        $b=$125; //@line 3002 "xmlparse.c"
        var $126=$b; //@line 3003 "xmlparse.c"
        var $127=$126+24; //@line 3003 "xmlparse.c"
        var $128=HEAP[$127]; //@line 3003 "xmlparse.c"
        var $129=$len; //@line 3003 "xmlparse.c"
        var $130=($128) < ($129); //@line 3003 "xmlparse.c"
        if ($130) { __label__ = 43; break; } else { __label__ = 46; break; } //@line 3003 "xmlparse.c"
      case 43: // $bb43
        var $131=$parser_addr; //@line 3004 "xmlparse.c"
        var $132=$131+12; //@line 3004 "xmlparse.c"
        var $133=$132+4; //@line 3004 "xmlparse.c"
        var $134=HEAP[$133]; //@line 3004 "xmlparse.c"
        var $135=$len; //@line 3004 "xmlparse.c"
        var $136=($135) + 24; //@line 3004 "xmlparse.c"
        var $137=$b; //@line 3004 "xmlparse.c"
        var $138=$137+16; //@line 3004 "xmlparse.c"
        var $139=HEAP[$138]; //@line 3004 "xmlparse.c"
        var $140=FUNCTION_TABLE[$134]($139, $136); //@line 3004 "xmlparse.c"
        $temp=$140; //@line 3004 "xmlparse.c"
        var $141=$temp; //@line 3006 "xmlparse.c"
        var $142=($141)==0; //@line 3006 "xmlparse.c"
        if ($142) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 3006 "xmlparse.c"
      case 44: // $bb44
        $0=1; //@line 3007 "xmlparse.c"
        __label__ = 65; break; //@line 3007 "xmlparse.c"
      case 45: // $bb45
        var $143=$b; //@line 3008 "xmlparse.c"
        var $144=$143+16; //@line 3008 "xmlparse.c"
        var $145=$temp; //@line 3008 "xmlparse.c"
        HEAP[$144]=$145; //@line 3008 "xmlparse.c"
        var $146=$len; //@line 3009 "xmlparse.c"
        var $147=($146) + 24; //@line 3009 "xmlparse.c"
        var $148=$b; //@line 3009 "xmlparse.c"
        var $149=$148+24; //@line 3009 "xmlparse.c"
        HEAP[$149]=$147; //@line 3009 "xmlparse.c"
        __label__ = 46; break; //@line 3009 "xmlparse.c"
      case 46: // $bb46
        var $150=$b; //@line 3011 "xmlparse.c"
        var $151=$150+4; //@line 3011 "xmlparse.c"
        var $152=HEAP[$151]; //@line 3011 "xmlparse.c"
        var $153=$parser_addr; //@line 3011 "xmlparse.c"
        var $154=$153+360; //@line 3011 "xmlparse.c"
        HEAP[$154]=$152; //@line 3011 "xmlparse.c"
        __label__ = 52; break; //@line 3011 "xmlparse.c"
      case 47: // $bb47
        var $155=$123+12; //@line 3014 "xmlparse.c"
        var $156=$155; //@line 3014 "xmlparse.c"
        var $157=HEAP[$156]; //@line 3014 "xmlparse.c"
        var $158=FUNCTION_TABLE[$157](28); //@line 3014 "xmlparse.c"
        var $159=$158; //@line 3014 "xmlparse.c"
        $b=$159; //@line 3014 "xmlparse.c"
        var $160=$b; //@line 3015 "xmlparse.c"
        var $161=($160)==0; //@line 3015 "xmlparse.c"
        if ($161) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 3015 "xmlparse.c"
      case 48: // $bb48
        $0=1; //@line 3016 "xmlparse.c"
        __label__ = 65; break; //@line 3016 "xmlparse.c"
      case 49: // $bb49
        var $162=$parser_addr; //@line 3017 "xmlparse.c"
        var $163=$162+12; //@line 3017 "xmlparse.c"
        var $164=$163; //@line 3017 "xmlparse.c"
        var $165=HEAP[$164]; //@line 3017 "xmlparse.c"
        var $166=$len; //@line 3017 "xmlparse.c"
        var $167=($166) + 24; //@line 3017 "xmlparse.c"
        var $168=FUNCTION_TABLE[$165]($167); //@line 3017 "xmlparse.c"
        var $169=$b; //@line 3017 "xmlparse.c"
        var $170=$169+16; //@line 3017 "xmlparse.c"
        HEAP[$170]=$168; //@line 3017 "xmlparse.c"
        var $171=$b; //@line 3018 "xmlparse.c"
        var $172=$171+16; //@line 3018 "xmlparse.c"
        var $173=HEAP[$172]; //@line 3018 "xmlparse.c"
        var $174=($173)==0; //@line 3018 "xmlparse.c"
        if ($174) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 3018 "xmlparse.c"
      case 50: // $bb50
        var $175=$parser_addr; //@line 3019 "xmlparse.c"
        var $176=$175+12; //@line 3019 "xmlparse.c"
        var $177=$176+8; //@line 3019 "xmlparse.c"
        var $178=HEAP[$177]; //@line 3019 "xmlparse.c"
        var $179=$b; //@line 3019 "xmlparse.c"
        var $180=$179; //@line 3019 "xmlparse.c"
        FUNCTION_TABLE[$178]($180); //@line 3019 "xmlparse.c"
        $0=1; //@line 3020 "xmlparse.c"
        __label__ = 65; break; //@line 3020 "xmlparse.c"
      case 51: // $bb51
        var $181=$len; //@line 3022 "xmlparse.c"
        var $182=($181) + 24; //@line 3022 "xmlparse.c"
        var $183=$b; //@line 3022 "xmlparse.c"
        var $184=$183+24; //@line 3022 "xmlparse.c"
        HEAP[$184]=$182; //@line 3022 "xmlparse.c"
        __label__ = 52; break; //@line 3022 "xmlparse.c"
      case 52: // $bb52
        var $185=$b; //@line 3024 "xmlparse.c"
        var $186=$185+20; //@line 3024 "xmlparse.c"
        var $187=$len; //@line 3024 "xmlparse.c"
        HEAP[$186]=$187; //@line 3024 "xmlparse.c"
        var $188=$len; //@line 3025 "xmlparse.c"
        var $189=$b; //@line 3025 "xmlparse.c"
        var $190=$189+16; //@line 3025 "xmlparse.c"
        var $191=HEAP[$190]; //@line 3025 "xmlparse.c"
        var $192=$uri_addr; //@line 3025 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($191, $192, $188, 1, 0); //@line 3025 "xmlparse.c"
        var $193=$parser_addr; //@line 3026 "xmlparse.c"
        var $194=$193+456; //@line 3026 "xmlparse.c"
        var $195=HEAP[$194]; //@line 3026 "xmlparse.c"
        var $196=($195)!=0; //@line 3026 "xmlparse.c"
        if ($196) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 3026 "xmlparse.c"
      case 53: // $bb53
        var $197=$b; //@line 3027 "xmlparse.c"
        var $198=$197+16; //@line 3027 "xmlparse.c"
        var $199=HEAP[$198]; //@line 3027 "xmlparse.c"
        var $200=$len; //@line 3027 "xmlparse.c"
        var $201=($200) - 1; //@line 3027 "xmlparse.c"
        var $202=$parser_addr; //@line 3027 "xmlparse.c"
        var $203=$202+456; //@line 3027 "xmlparse.c"
        var $204=HEAP[$203]; //@line 3027 "xmlparse.c"
        var $205=$199+$201; //@line 3027 "xmlparse.c"
        HEAP[$205]=$204; //@line 3027 "xmlparse.c"
        __label__ = 54; break; //@line 3027 "xmlparse.c"
      case 54: // $bb54
        var $206=$b; //@line 3028 "xmlparse.c"
        var $207=$206; //@line 3028 "xmlparse.c"
        var $208=$prefix_addr; //@line 3028 "xmlparse.c"
        HEAP[$207]=$208; //@line 3028 "xmlparse.c"
        var $209=$b; //@line 3029 "xmlparse.c"
        var $210=$209+12; //@line 3029 "xmlparse.c"
        var $211=$attId_addr; //@line 3029 "xmlparse.c"
        HEAP[$210]=$211; //@line 3029 "xmlparse.c"
        var $212=$prefix_addr; //@line 3030 "xmlparse.c"
        var $213=$212+4; //@line 3030 "xmlparse.c"
        var $214=HEAP[$213]; //@line 3030 "xmlparse.c"
        var $215=$b; //@line 3030 "xmlparse.c"
        var $216=$215+8; //@line 3030 "xmlparse.c"
        HEAP[$216]=$214; //@line 3030 "xmlparse.c"
        var $217=$uri_addr; //@line 3032 "xmlparse.c"
        var $218=HEAP[$217]; //@line 3032 "xmlparse.c"
        var $219=($218)!=0; //@line 3032 "xmlparse.c"
        if ($219) { __label__ = 57; break; } else { __label__ = 55; break; } //@line 3032 "xmlparse.c"
      case 55: // $bb55
        var $220=$parser_addr; //@line 3032 "xmlparse.c"
        var $221=$220+340; //@line 3032 "xmlparse.c"
        var $222=HEAP[$221]; //@line 3032 "xmlparse.c"
        var $223=$222+132; //@line 3032 "xmlparse.c"
        var $224=$prefix_addr; //@line 3032 "xmlparse.c"
        var $225=($223)!=($224); //@line 3032 "xmlparse.c"
        if ($225) { __label__ = 57; break; } else { __label__ = 56; break; } //@line 3032 "xmlparse.c"
      case 56: // $bb56
        var $226=$prefix_addr; //@line 3033 "xmlparse.c"
        var $227=$226+4; //@line 3033 "xmlparse.c"
        HEAP[$227]=0; //@line 3033 "xmlparse.c"
        __label__ = 58; break; //@line 3033 "xmlparse.c"
      case 57: // $bb57
        var $228=$prefix_addr; //@line 3035 "xmlparse.c"
        var $229=$228+4; //@line 3035 "xmlparse.c"
        var $230=$b; //@line 3035 "xmlparse.c"
        HEAP[$229]=$230; //@line 3035 "xmlparse.c"
        __label__ = 58; break; //@line 3035 "xmlparse.c"
      case 58: // $bb58
        var $231=$bindingsPtr_addr; //@line 3036 "xmlparse.c"
        var $232=HEAP[$231]; //@line 3036 "xmlparse.c"
        var $233=$b; //@line 3036 "xmlparse.c"
        var $234=$233+4; //@line 3036 "xmlparse.c"
        HEAP[$234]=$232; //@line 3036 "xmlparse.c"
        var $235=$bindingsPtr_addr; //@line 3037 "xmlparse.c"
        var $236=$b; //@line 3037 "xmlparse.c"
        HEAP[$235]=$236; //@line 3037 "xmlparse.c"
        var $237=$attId_addr; //@line 3039 "xmlparse.c"
        var $238=($237)!=0; //@line 3039 "xmlparse.c"
        if ($238) { __label__ = 59; break; } else { __label__ = 64; break; } //@line 3039 "xmlparse.c"
      case 59: // $bb59
        var $239=$parser_addr; //@line 3039 "xmlparse.c"
        var $240=$239+100; //@line 3039 "xmlparse.c"
        var $241=HEAP[$240]; //@line 3039 "xmlparse.c"
        var $242=($241)!=0; //@line 3039 "xmlparse.c"
        if ($242) { __label__ = 60; break; } else { __label__ = 64; break; } //@line 3039 "xmlparse.c"
      case 60: // $bb60
        var $243=$parser_addr; //@line 3040 "xmlparse.c"
        var $244=$243+100; //@line 3040 "xmlparse.c"
        var $245=HEAP[$244]; //@line 3040 "xmlparse.c"
        var $246=$prefix_addr; //@line 3040 "xmlparse.c"
        var $247=$246+4; //@line 3040 "xmlparse.c"
        var $248=HEAP[$247]; //@line 3040 "xmlparse.c"
        var $249=($248)!=0; //@line 3040 "xmlparse.c"
        if ($249) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 3040 "xmlparse.c"
      case 61: // $bb61
        var $250=$uri_addr; //@line 3040 "xmlparse.c"
        $iftmp_125=$250; //@line 3040 "xmlparse.c"
        __label__ = 63; break; //@line 3040 "xmlparse.c"
      case 62: // $bb62
        $iftmp_125=0; //@line 3040 "xmlparse.c"
        __label__ = 63; break; //@line 3040 "xmlparse.c"
      case 63: // $bb63
        var $251=$prefix_addr; //@line 3040 "xmlparse.c"
        var $252=$251; //@line 3040 "xmlparse.c"
        var $253=HEAP[$252]; //@line 3040 "xmlparse.c"
        var $254=$parser_addr; //@line 3040 "xmlparse.c"
        var $255=$254+4; //@line 3040 "xmlparse.c"
        var $256=HEAP[$255]; //@line 3040 "xmlparse.c"
        var $257=$iftmp_125; //@line 3040 "xmlparse.c"
        FUNCTION_TABLE[$245]($256, $253, $257); //@line 3040 "xmlparse.c"
        __label__ = 64; break; //@line 3040 "xmlparse.c"
      case 64: // $bb64
        $0=0; //@line 3042 "xmlparse.c"
        __label__ = 65; break; //@line 3042 "xmlparse.c"
      case 65: // $bb65
        var $258=$0; //@line 2964 "xmlparse.c"
        $retval=$258; //@line 2964 "xmlparse.c"
        var $retval66=$retval; //@line 2964 "xmlparse.c"
        ;
        return $retval66; //@line 2964 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _cdataSectionProcessor($parser, $start, $end, $endPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $start_addr=__stackBase__;
        var $end_addr;
        var $endPtr_addr;
        var $retval;
        var $0;
        var $result;
        $parser_addr=$parser;
        HEAP[$start_addr]=$start;
        $end_addr=$end;
        $endPtr_addr=$endPtr;
        var $1=$parser_addr; //@line 3055 "xmlparse.c"
        var $2=$1+464; //@line 3055 "xmlparse.c"
        var $3=$2+4; //@line 3055 "xmlparse.c"
        var $4=HEAP[$3]; //@line 3055 "xmlparse.c"
        var $5=($4)==0; //@line 3055 "xmlparse.c"
        var $6=($5); //@line 3055 "xmlparse.c"
        var $7=$parser_addr; //@line 3055 "xmlparse.c"
        var $8=$7+144; //@line 3055 "xmlparse.c"
        var $9=HEAP[$8]; //@line 3055 "xmlparse.c"
        var $10=$parser_addr; //@line 3055 "xmlparse.c"
        var $11=$end_addr; //@line 3055 "xmlparse.c"
        var $12=$endPtr_addr; //@line 3055 "xmlparse.c"
        var $13=((($6)) & 255); //@line 3055 "xmlparse.c"
        var $14=_doCdataSection($10, $9, $start_addr, $11, $12, $13); //@line 3055 "xmlparse.c"
        $result=$14; //@line 3055 "xmlparse.c"
        var $15=$result; //@line 3056 "xmlparse.c"
        var $16=($15)!=0; //@line 3056 "xmlparse.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3056 "xmlparse.c"
      case 1: // $bb
        var $17=$result; //@line 3057 "xmlparse.c"
        $0=$17; //@line 3057 "xmlparse.c"
        __label__ = 7; break; //@line 3057 "xmlparse.c"
      case 2: // $bb1
        var $18=HEAP[$start_addr]; //@line 3058 "xmlparse.c"
        var $19=($18)!=0; //@line 3058 "xmlparse.c"
        if ($19) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 3058 "xmlparse.c"
      case 3: // $bb2
        var $20=$parser_addr; //@line 3059 "xmlparse.c"
        var $21=$20+460; //@line 3059 "xmlparse.c"
        var $22=HEAP[$21]; //@line 3059 "xmlparse.c"
        var $23=($22)!=0; //@line 3059 "xmlparse.c"
        var $24=$parser_addr; //@line 3060 "xmlparse.c"
        var $25=$24+264; //@line 3060 "xmlparse.c"
        if ($23) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3059 "xmlparse.c"
      case 4: // $bb3
        HEAP[$25]=(FUNCTION_TABLE_OFFSET + 60); //@line 3060 "xmlparse.c"
        var $26=HEAP[$start_addr]; //@line 3061 "xmlparse.c"
        var $27=$parser_addr; //@line 3061 "xmlparse.c"
        var $28=$end_addr; //@line 3061 "xmlparse.c"
        var $29=$endPtr_addr; //@line 3061 "xmlparse.c"
        var $30=_externalEntityContentProcessor($27, $26, $28, $29); //@line 3061 "xmlparse.c"
        $0=$30; //@line 3061 "xmlparse.c"
        __label__ = 7; break; //@line 3061 "xmlparse.c"
      case 5: // $bb4
        HEAP[$25]=(FUNCTION_TABLE_OFFSET + 66); //@line 3064 "xmlparse.c"
        var $31=HEAP[$start_addr]; //@line 3065 "xmlparse.c"
        var $32=$parser_addr; //@line 3065 "xmlparse.c"
        var $33=$end_addr; //@line 3065 "xmlparse.c"
        var $34=$endPtr_addr; //@line 3065 "xmlparse.c"
        var $35=_contentProcessor($32, $31, $33, $34); //@line 3065 "xmlparse.c"
        $0=$35; //@line 3065 "xmlparse.c"
        __label__ = 7; break; //@line 3065 "xmlparse.c"
      case 6: // $bb5
        var $36=$result; //@line 3068 "xmlparse.c"
        $0=$36; //@line 3068 "xmlparse.c"
        __label__ = 7; break; //@line 3068 "xmlparse.c"
      case 7: // $bb6
        var $37=$0; //@line 3057 "xmlparse.c"
        $retval=$37; //@line 3057 "xmlparse.c"
        var $retval7=$retval; //@line 3057 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval7; //@line 3057 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doCdataSection($parser, $enc, $startPtr, $end, $nextPtr, $haveMore) {
    var __stackBase__  = STACKTOP; STACKTOP += 13; _memset(__stackBase__, 0, 13);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $startPtr_addr;
        var $end_addr;
        var $nextPtr_addr;
        var $haveMore_addr;
        var $retval;
        var $0;
        var $s=__stackBase__;
        var $eventPP;
        var $eventEndPP;
        var $next=__stackBase__+4;
        var $tok;
        var $c=__stackBase__+8;
        var $dataPtr=__stackBase__+9;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $startPtr_addr=$startPtr;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        $haveMore_addr=$haveMore;
        var $1=$startPtr_addr; //@line 3082 "xmlparse.c"
        var $2=HEAP[$1]; //@line 3082 "xmlparse.c"
        HEAP[$s]=$2; //@line 3082 "xmlparse.c"
        var $3=$parser_addr; //@line 3085 "xmlparse.c"
        var $4=$3+144; //@line 3085 "xmlparse.c"
        var $5=HEAP[$4]; //@line 3085 "xmlparse.c"
        var $6=$enc_addr; //@line 3085 "xmlparse.c"
        var $7=($5)==($6); //@line 3085 "xmlparse.c"
        var $8=$parser_addr; //@line 3086 "xmlparse.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3085 "xmlparse.c"
      case 1: // $bb
        var $9=$8+272; //@line 3086 "xmlparse.c"
        $eventPP=$9; //@line 3086 "xmlparse.c"
        var $10=HEAP[$s]; //@line 3087 "xmlparse.c"
        var $11=$eventPP; //@line 3087 "xmlparse.c"
        HEAP[$11]=$10; //@line 3087 "xmlparse.c"
        var $12=$parser_addr; //@line 3088 "xmlparse.c"
        var $13=$12+276; //@line 3088 "xmlparse.c"
        $eventEndPP=$13; //@line 3088 "xmlparse.c"
        __label__ = 3; break; //@line 3088 "xmlparse.c"
      case 2: // $bb1
        var $14=$8+284; //@line 3091 "xmlparse.c"
        var $15=HEAP[$14]; //@line 3091 "xmlparse.c"
        var $16=$15; //@line 3091 "xmlparse.c"
        $eventPP=$16; //@line 3091 "xmlparse.c"
        var $17=$parser_addr; //@line 3092 "xmlparse.c"
        var $18=$17+284; //@line 3092 "xmlparse.c"
        var $19=HEAP[$18]; //@line 3092 "xmlparse.c"
        var $20=$19+4; //@line 3092 "xmlparse.c"
        $eventEndPP=$20; //@line 3092 "xmlparse.c"
        __label__ = 3; break; //@line 3092 "xmlparse.c"
      case 3: // $bb2
        var $21=HEAP[$s]; //@line 3094 "xmlparse.c"
        var $22=$eventPP; //@line 3094 "xmlparse.c"
        HEAP[$22]=$21; //@line 3094 "xmlparse.c"
        var $23=$startPtr_addr; //@line 3095 "xmlparse.c"
        HEAP[$23]=0; //@line 3095 "xmlparse.c"
        __label__ = 4; break; //@line 3095 "xmlparse.c"
      case 4: // $bb3
        var $24=$enc_addr; //@line 3099 "xmlparse.c"
        var $25=$24; //@line 3099 "xmlparse.c"
        var $26=$25+8; //@line 3099 "xmlparse.c"
        var $27=HEAP[$26]; //@line 3099 "xmlparse.c"
        var $28=HEAP[$s]; //@line 3099 "xmlparse.c"
        var $29=$enc_addr; //@line 3099 "xmlparse.c"
        var $30=$end_addr; //@line 3099 "xmlparse.c"
        var $31=FUNCTION_TABLE[$27]($29, $28, $30, $next); //@line 3099 "xmlparse.c"
        $tok=$31; //@line 3099 "xmlparse.c"
        var $32=HEAP[$next]; //@line 3100 "xmlparse.c"
        var $33=$eventEndPP; //@line 3100 "xmlparse.c"
        HEAP[$33]=$32; //@line 3100 "xmlparse.c"
        var $34=$tok; //@line 3101 "xmlparse.c"
        if ($34 == -4) {
          __label__ = 27; break;
        }
        else if ($34 == -2) {
          __label__ = 24; break;
        }
        else if ($34 == -1) {
          __label__ = 27; break;
        }
        else if ($34 == 0) {
          __label__ = 23; break;
        }
        else if ($34 == 6) {
          __label__ = 16; break;
        }
        else if ($34 == 7) {
          __label__ = 12; break;
        }
        else if ($34 == 40) {
          __label__ = 5; break;
        }
        else {
        __label__ = 30; break;
        }
        
      case 5: // $bb4
        var $35=$parser_addr; //@line 3103 "xmlparse.c"
        var $36=$35+76; //@line 3103 "xmlparse.c"
        var $37=HEAP[$36]; //@line 3103 "xmlparse.c"
        var $38=($37)!=0; //@line 3103 "xmlparse.c"
        var $39=$parser_addr; //@line 3104 "xmlparse.c"
        if ($38) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3103 "xmlparse.c"
      case 6: // $bb5
        var $40=$39+76; //@line 3104 "xmlparse.c"
        var $41=HEAP[$40]; //@line 3104 "xmlparse.c"
        var $42=$parser_addr; //@line 3104 "xmlparse.c"
        var $43=$42+4; //@line 3104 "xmlparse.c"
        var $44=HEAP[$43]; //@line 3104 "xmlparse.c"
        FUNCTION_TABLE[$41]($44); //@line 3104 "xmlparse.c"
        __label__ = 9; break; //@line 3104 "xmlparse.c"
      case 7: // $bb6
        var $45=$39+80; //@line 3110 "xmlparse.c"
        var $46=HEAP[$45]; //@line 3110 "xmlparse.c"
        var $47=($46)!=0; //@line 3110 "xmlparse.c"
        if ($47) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3110 "xmlparse.c"
      case 8: // $bb7
        var $48=HEAP[$next]; //@line 3111 "xmlparse.c"
        var $49=HEAP[$s]; //@line 3111 "xmlparse.c"
        var $50=$parser_addr; //@line 3111 "xmlparse.c"
        var $51=$enc_addr; //@line 3111 "xmlparse.c"
        _reportDefault($50, $51, $49, $48); //@line 3111 "xmlparse.c"
        __label__ = 9; break; //@line 3111 "xmlparse.c"
      case 9: // $bb8
        var $52=HEAP[$next]; //@line 3112 "xmlparse.c"
        var $53=$startPtr_addr; //@line 3112 "xmlparse.c"
        HEAP[$53]=$52; //@line 3112 "xmlparse.c"
        var $54=HEAP[$next]; //@line 3113 "xmlparse.c"
        var $55=$nextPtr_addr; //@line 3113 "xmlparse.c"
        HEAP[$55]=$54; //@line 3113 "xmlparse.c"
        var $56=$parser_addr; //@line 3114 "xmlparse.c"
        var $57=$56+464; //@line 3114 "xmlparse.c"
        var $58=$57; //@line 3114 "xmlparse.c"
        var $59=HEAP[$58]; //@line 3114 "xmlparse.c"
        var $60=($59)==2; //@line 3114 "xmlparse.c"
        if ($60) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3114 "xmlparse.c"
      case 10: // $bb9
        $0=35; //@line 3115 "xmlparse.c"
        __label__ = 34; break; //@line 3115 "xmlparse.c"
      case 11: // $bb10
        $0=0; //@line 3117 "xmlparse.c"
        __label__ = 34; break; //@line 3117 "xmlparse.c"
      case 12: // $bb11
        var $61=$parser_addr; //@line 3119 "xmlparse.c"
        var $62=$61+60; //@line 3119 "xmlparse.c"
        var $63=HEAP[$62]; //@line 3119 "xmlparse.c"
        var $64=($63)!=0; //@line 3119 "xmlparse.c"
        if ($64) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 3119 "xmlparse.c"
      case 13: // $bb12
        HEAP[$c]=10; //@line 3120 "xmlparse.c"
        var $65=$parser_addr; //@line 3121 "xmlparse.c"
        var $66=$65+60; //@line 3121 "xmlparse.c"
        var $67=HEAP[$66]; //@line 3121 "xmlparse.c"
        var $68=$parser_addr; //@line 3121 "xmlparse.c"
        var $69=$68+4; //@line 3121 "xmlparse.c"
        var $70=HEAP[$69]; //@line 3121 "xmlparse.c"
        FUNCTION_TABLE[$67]($70, $c, 1); //@line 3121 "xmlparse.c"
        __label__ = 31; break; //@line 3121 "xmlparse.c"
      case 14: // $bb13
        var $71=$parser_addr; //@line 3123 "xmlparse.c"
        var $72=$71+80; //@line 3123 "xmlparse.c"
        var $73=HEAP[$72]; //@line 3123 "xmlparse.c"
        var $74=($73)!=0; //@line 3123 "xmlparse.c"
        if ($74) { __label__ = 15; break; } else { __label__ = 31; break; } //@line 3123 "xmlparse.c"
      case 15: // $bb14
        var $75=HEAP[$next]; //@line 3124 "xmlparse.c"
        var $76=HEAP[$s]; //@line 3124 "xmlparse.c"
        var $77=$parser_addr; //@line 3124 "xmlparse.c"
        var $78=$enc_addr; //@line 3124 "xmlparse.c"
        _reportDefault($77, $78, $76, $75); //@line 3124 "xmlparse.c"
        __label__ = 31; break; //@line 3124 "xmlparse.c"
      case 16: // $bb16
        var $79=$parser_addr; //@line 3127 "xmlparse.c"
        var $80=$79+60; //@line 3127 "xmlparse.c"
        var $81=HEAP[$80]; //@line 3127 "xmlparse.c"
        var $82=($81)!=0; //@line 3127 "xmlparse.c"
        if ($82) { __label__ = 17; break; } else { __label__ = 21; break; } //@line 3127 "xmlparse.c"
      case 17: // $bb17
        var $83=$enc_addr; //@line 3128 "xmlparse.c"
        var $84=$83+68; //@line 3128 "xmlparse.c"
        var $85=HEAP[$84]; //@line 3128 "xmlparse.c"
        var $86=($85)==0; //@line 3128 "xmlparse.c"
        if ($86) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 3128 "xmlparse.c"
      case 18: // $bb18
        var $87=$parser_addr; //@line 3130 "xmlparse.c"
        var $88=$87+44; //@line 3130 "xmlparse.c"
        var $89=HEAP[$88]; //@line 3130 "xmlparse.c"
        HEAP[$dataPtr]=$89; //@line 3130 "xmlparse.c"
        var $90=$enc_addr; //@line 3131 "xmlparse.c"
        var $91=$90+56; //@line 3131 "xmlparse.c"
        var $92=HEAP[$91]; //@line 3131 "xmlparse.c"
        var $93=$parser_addr; //@line 3131 "xmlparse.c"
        var $94=$93+48; //@line 3131 "xmlparse.c"
        var $95=HEAP[$94]; //@line 3131 "xmlparse.c"
        var $96=HEAP[$next]; //@line 3131 "xmlparse.c"
        var $97=$enc_addr; //@line 3131 "xmlparse.c"
        FUNCTION_TABLE[$92]($97, $s, $96, $dataPtr, $95); //@line 3131 "xmlparse.c"
        var $98=HEAP[$next]; //@line 3132 "xmlparse.c"
        var $99=$eventEndPP; //@line 3132 "xmlparse.c"
        HEAP[$99]=$98; //@line 3132 "xmlparse.c"
        var $100=$parser_addr; //@line 3133 "xmlparse.c"
        var $101=$100+60; //@line 3133 "xmlparse.c"
        var $102=HEAP[$101]; //@line 3133 "xmlparse.c"
        var $103=HEAP[$dataPtr]; //@line 3133 "xmlparse.c"
        var $104=($103); //@line 3133 "xmlparse.c"
        var $105=$parser_addr; //@line 3133 "xmlparse.c"
        var $106=$105+44; //@line 3133 "xmlparse.c"
        var $107=HEAP[$106]; //@line 3133 "xmlparse.c"
        var $108=($107); //@line 3133 "xmlparse.c"
        var $109=($104) - ($108); //@line 3133 "xmlparse.c"
        var $110=$parser_addr; //@line 3133 "xmlparse.c"
        var $111=$110+44; //@line 3133 "xmlparse.c"
        var $112=HEAP[$111]; //@line 3133 "xmlparse.c"
        var $113=$parser_addr; //@line 3133 "xmlparse.c"
        var $114=$113+4; //@line 3133 "xmlparse.c"
        var $115=HEAP[$114]; //@line 3133 "xmlparse.c"
        FUNCTION_TABLE[$102]($115, $112, $109); //@line 3133 "xmlparse.c"
        var $116=HEAP[$s]; //@line 3135 "xmlparse.c"
        var $117=HEAP[$next]; //@line 3135 "xmlparse.c"
        var $118=($116)==($117); //@line 3135 "xmlparse.c"
        if ($118) { __label__ = 31; break; } else { __label__ = 19; break; } //@line 3135 "xmlparse.c"
      case 19: // $bb19
        var $119=HEAP[$s]; //@line 3137 "xmlparse.c"
        var $120=$eventPP; //@line 3137 "xmlparse.c"
        HEAP[$120]=$119; //@line 3137 "xmlparse.c"
        __label__ = 18; break; //@line 3137 "xmlparse.c"
      case 20: // $bb21
        var $121=$parser_addr; //@line 3141 "xmlparse.c"
        var $122=$121+60; //@line 3141 "xmlparse.c"
        var $123=HEAP[$122]; //@line 3141 "xmlparse.c"
        var $124=HEAP[$next]; //@line 3141 "xmlparse.c"
        var $125=($124); //@line 3141 "xmlparse.c"
        var $126=HEAP[$s]; //@line 3141 "xmlparse.c"
        var $127=($126); //@line 3141 "xmlparse.c"
        var $128=($125) - ($127); //@line 3141 "xmlparse.c"
        var $129=HEAP[$s]; //@line 3141 "xmlparse.c"
        var $130=$parser_addr; //@line 3141 "xmlparse.c"
        var $131=$130+4; //@line 3141 "xmlparse.c"
        var $132=HEAP[$131]; //@line 3141 "xmlparse.c"
        FUNCTION_TABLE[$123]($132, $129, $128); //@line 3141 "xmlparse.c"
        __label__ = 31; break; //@line 3141 "xmlparse.c"
      case 21: // $bb23
        var $133=$parser_addr; //@line 3145 "xmlparse.c"
        var $134=$133+80; //@line 3145 "xmlparse.c"
        var $135=HEAP[$134]; //@line 3145 "xmlparse.c"
        var $136=($135)!=0; //@line 3145 "xmlparse.c"
        if ($136) { __label__ = 22; break; } else { __label__ = 31; break; } //@line 3145 "xmlparse.c"
      case 22: // $bb24
        var $137=HEAP[$next]; //@line 3146 "xmlparse.c"
        var $138=HEAP[$s]; //@line 3146 "xmlparse.c"
        var $139=$parser_addr; //@line 3146 "xmlparse.c"
        var $140=$enc_addr; //@line 3146 "xmlparse.c"
        _reportDefault($139, $140, $138, $137); //@line 3146 "xmlparse.c"
        __label__ = 31; break; //@line 3146 "xmlparse.c"
      case 23: // $bb26
        var $141=HEAP[$next]; //@line 3149 "xmlparse.c"
        var $142=$eventPP; //@line 3149 "xmlparse.c"
        HEAP[$142]=$141; //@line 3149 "xmlparse.c"
        $0=4; //@line 3150 "xmlparse.c"
        __label__ = 34; break; //@line 3150 "xmlparse.c"
      case 24: // $bb27
        var $143=$haveMore_addr; //@line 3152 "xmlparse.c"
        var $144=($143)!=0; //@line 3152 "xmlparse.c"
        if ($144) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 3152 "xmlparse.c"
      case 25: // $bb28
        var $145=HEAP[$s]; //@line 3153 "xmlparse.c"
        var $146=$nextPtr_addr; //@line 3153 "xmlparse.c"
        HEAP[$146]=$145; //@line 3153 "xmlparse.c"
        $0=0; //@line 3154 "xmlparse.c"
        __label__ = 34; break; //@line 3154 "xmlparse.c"
      case 26: // $bb29
        $0=6; //@line 3156 "xmlparse.c"
        __label__ = 34; break; //@line 3156 "xmlparse.c"
      case 27: // $bb30
        var $147=$haveMore_addr; //@line 3159 "xmlparse.c"
        var $148=($147)!=0; //@line 3159 "xmlparse.c"
        if ($148) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 3159 "xmlparse.c"
      case 28: // $bb31
        var $149=HEAP[$s]; //@line 3160 "xmlparse.c"
        var $150=$nextPtr_addr; //@line 3160 "xmlparse.c"
        HEAP[$150]=$149; //@line 3160 "xmlparse.c"
        $0=0; //@line 3161 "xmlparse.c"
        __label__ = 34; break; //@line 3161 "xmlparse.c"
      case 29: // $bb32
        $0=20; //@line 3163 "xmlparse.c"
        __label__ = 34; break; //@line 3163 "xmlparse.c"
      case 30: // $bb33
        var $151=HEAP[$next]; //@line 3165 "xmlparse.c"
        var $152=$eventPP; //@line 3165 "xmlparse.c"
        HEAP[$152]=$151; //@line 3165 "xmlparse.c"
        $0=23; //@line 3166 "xmlparse.c"
        __label__ = 34; break; //@line 3166 "xmlparse.c"
      case 31: // $bb34
        var $153=HEAP[$next]; //@line 3169 "xmlparse.c"
        HEAP[$s]=$153; //@line 3169 "xmlparse.c"
        var $154=HEAP[$s]; //@line 3169 "xmlparse.c"
        var $155=$eventPP; //@line 3169 "xmlparse.c"
        HEAP[$155]=$154; //@line 3169 "xmlparse.c"
        var $156=$parser_addr; //@line 3170 "xmlparse.c"
        var $157=$156+464; //@line 3170 "xmlparse.c"
        var $158=$157; //@line 3170 "xmlparse.c"
        var $159=HEAP[$158]; //@line 3170 "xmlparse.c"
        if ($159 == 2) {
          __label__ = 33; break;
        }
        else if ($159 == 3) {
          __label__ = 32; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 32: // $bb35
        var $160=HEAP[$next]; //@line 3172 "xmlparse.c"
        var $161=$nextPtr_addr; //@line 3172 "xmlparse.c"
        HEAP[$161]=$160; //@line 3172 "xmlparse.c"
        $0=0; //@line 3173 "xmlparse.c"
        __label__ = 34; break; //@line 3173 "xmlparse.c"
      case 33: // $bb36
        $0=35; //@line 3175 "xmlparse.c"
        __label__ = 34; break; //@line 3175 "xmlparse.c"
      case 34: // $bb38
        var $162=$0; //@line 3115 "xmlparse.c"
        $retval=$162; //@line 3115 "xmlparse.c"
        var $retval39=$retval; //@line 3115 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval39; //@line 3115 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _processXmlDecl($parser, $isGeneralTextEntity, $s, $next) {
    var __stackBase__  = STACKTOP; STACKTOP += 20; _memset(__stackBase__, 0, 20);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr_i1;
        var $p_i2;
        var $tem_i3;
        var $pool_addr_i;
        var $p_i;
        var $tem_i;
        var $parser_addr;
        var $isGeneralTextEntity_addr;
        var $s_addr;
        var $next_addr;
        var $retval;
        var $0;
        var $encodingName=__stackBase__;
        var $storedEncName;
        var $newEncoding=__stackBase__+4;
        var $version=__stackBase__+8;
        var $versionend=__stackBase__+12;
        var $storedversion;
        var $standalone=__stackBase__+16;
        var $result;
        $parser_addr=$parser;
        $isGeneralTextEntity_addr=$isGeneralTextEntity;
        $s_addr=$s;
        $next_addr=$next;
        HEAP[$encodingName]=0; //@line 3301 "xmlparse.c"
        $storedEncName=0; //@line 3302 "xmlparse.c"
        HEAP[$newEncoding]=0; //@line 3303 "xmlparse.c"
        HEAP[$version]=0; //@line 3304 "xmlparse.c"
        $storedversion=0; //@line 3306 "xmlparse.c"
        HEAP[$standalone]=-1; //@line 3307 "xmlparse.c"
        var $1=$parser_addr; //@line 3308 "xmlparse.c"
        var $2=$1+272; //@line 3308 "xmlparse.c"
        var $3=$parser_addr; //@line 3308 "xmlparse.c"
        var $4=$3+144; //@line 3308 "xmlparse.c"
        var $5=HEAP[$4]; //@line 3308 "xmlparse.c"
        var $6=$isGeneralTextEntity_addr; //@line 3308 "xmlparse.c"
        var $7=$s_addr; //@line 3308 "xmlparse.c"
        var $8=$next_addr; //@line 3308 "xmlparse.c"
        var $9=_PyExpat_XmlParseXmlDecl($6, $5, $7, $8, $2, $version, $versionend, $encodingName, $newEncoding, $standalone); //@line 3308 "xmlparse.c"
        var $10=($9)==0; //@line 3308 "xmlparse.c"
        var $11=$isGeneralTextEntity_addr; //@line 3320 "xmlparse.c"
        if ($10) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 3308 "xmlparse.c"
      case 1: // $bb
        var $12=($11)!=0; //@line 3320 "xmlparse.c"
        if ($12) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 3320 "xmlparse.c"
      case 2: // $bb1
        $0=31; //@line 3321 "xmlparse.c"
        __label__ = 42; break; //@line 3321 "xmlparse.c"
      case 3: // $bb2
        $0=30; //@line 3323 "xmlparse.c"
        __label__ = 42; break; //@line 3323 "xmlparse.c"
      case 4: // $bb3
        var $13=($11)==0; //@line 3325 "xmlparse.c"
        if ($13) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 3325 "xmlparse.c"
      case 5: // $bb4
        var $14=HEAP[$standalone]; //@line 3325 "xmlparse.c"
        var $15=($14)==1; //@line 3325 "xmlparse.c"
        if ($15) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3325 "xmlparse.c"
      case 6: // $bb5
        var $16=$parser_addr; //@line 3326 "xmlparse.c"
        var $17=$16+340; //@line 3326 "xmlparse.c"
        var $18=HEAP[$17]; //@line 3326 "xmlparse.c"
        var $19=$18+130; //@line 3326 "xmlparse.c"
        HEAP[$19]=1; //@line 3326 "xmlparse.c"
        __label__ = 7; break; //@line 3326 "xmlparse.c"
      case 7: // $bb6
        var $20=$parser_addr; //@line 3332 "xmlparse.c"
        var $21=$20+140; //@line 3332 "xmlparse.c"
        var $22=HEAP[$21]; //@line 3332 "xmlparse.c"
        var $23=($22)!=0; //@line 3332 "xmlparse.c"
        if ($23) { __label__ = 8; break; } else { __label__ = 16; break; } //@line 3332 "xmlparse.c"
      case 8: // $bb7
        var $24=HEAP[$encodingName]; //@line 3333 "xmlparse.c"
        var $25=($24)!=0; //@line 3333 "xmlparse.c"
        if ($25) { __label__ = 9; break; } else { __label__ = 12; break; } //@line 3333 "xmlparse.c"
      case 9: // $bb8
        var $26=HEAP[$encodingName]; //@line 3334 "xmlparse.c"
        var $27=$parser_addr; //@line 3334 "xmlparse.c"
        var $28=$27+144; //@line 3334 "xmlparse.c"
        var $29=HEAP[$28]; //@line 3334 "xmlparse.c"
        var $30=$29+28; //@line 3334 "xmlparse.c"
        var $31=HEAP[$30]; //@line 3334 "xmlparse.c"
        var $32=HEAP[$encodingName]; //@line 3334 "xmlparse.c"
        var $33=$parser_addr; //@line 3334 "xmlparse.c"
        var $34=$33+144; //@line 3334 "xmlparse.c"
        var $35=HEAP[$34]; //@line 3334 "xmlparse.c"
        var $36=FUNCTION_TABLE[$31]($35, $32); //@line 3334 "xmlparse.c"
        var $37=$26+$36; //@line 3334 "xmlparse.c"
        var $38=HEAP[$encodingName]; //@line 3334 "xmlparse.c"
        var $39=$parser_addr; //@line 3334 "xmlparse.c"
        var $40=$39+144; //@line 3334 "xmlparse.c"
        var $41=HEAP[$40]; //@line 3334 "xmlparse.c"
        var $42=$parser_addr; //@line 3334 "xmlparse.c"
        var $43=$42+424; //@line 3334 "xmlparse.c"
        var $44=_poolStoreString($43, $41, $38, $37); //@line 3334 "xmlparse.c"
        $storedEncName=$44; //@line 3334 "xmlparse.c"
        var $45=$storedEncName; //@line 3339 "xmlparse.c"
        var $46=($45)==0; //@line 3339 "xmlparse.c"
        if ($46) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3339 "xmlparse.c"
      case 10: // $bb9
        $0=1; //@line 3340 "xmlparse.c"
        __label__ = 42; break; //@line 3340 "xmlparse.c"
      case 11: // $bb10
        var $47=$parser_addr; //@line 3341 "xmlparse.c"
        var $48=$47+424; //@line 3341 "xmlparse.c"
        var $49=$48+12; //@line 3341 "xmlparse.c"
        var $50=HEAP[$49]; //@line 3341 "xmlparse.c"
        var $51=$parser_addr; //@line 3341 "xmlparse.c"
        var $52=$51+424; //@line 3341 "xmlparse.c"
        var $53=$52+16; //@line 3341 "xmlparse.c"
        HEAP[$53]=$50; //@line 3341 "xmlparse.c"
        __label__ = 12; break; //@line 3341 "xmlparse.c"
      case 12: // $bb11
        var $54=HEAP[$version]; //@line 3343 "xmlparse.c"
        var $55=($54)!=0; //@line 3343 "xmlparse.c"
        if ($55) { __label__ = 13; break; } else { __label__ = 15; break; } //@line 3343 "xmlparse.c"
      case 13: // $bb12
        var $56=HEAP[$versionend]; //@line 3344 "xmlparse.c"
        var $57=$parser_addr; //@line 3344 "xmlparse.c"
        var $58=$57+144; //@line 3344 "xmlparse.c"
        var $59=HEAP[$58]; //@line 3344 "xmlparse.c"
        var $60=$59+64; //@line 3344 "xmlparse.c"
        var $61=HEAP[$60]; //@line 3344 "xmlparse.c"
        var $62=0 - ($61); //@line 3344 "xmlparse.c"
        var $63=$56+$62; //@line 3344 "xmlparse.c"
        var $64=HEAP[$version]; //@line 3344 "xmlparse.c"
        var $65=$parser_addr; //@line 3344 "xmlparse.c"
        var $66=$65+144; //@line 3344 "xmlparse.c"
        var $67=HEAP[$66]; //@line 3344 "xmlparse.c"
        var $68=$parser_addr; //@line 3344 "xmlparse.c"
        var $69=$68+424; //@line 3344 "xmlparse.c"
        var $70=_poolStoreString($69, $67, $64, $63); //@line 3344 "xmlparse.c"
        $storedversion=$70; //@line 3344 "xmlparse.c"
        var $71=$storedversion; //@line 3348 "xmlparse.c"
        var $72=($71)==0; //@line 3348 "xmlparse.c"
        if ($72) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 3348 "xmlparse.c"
      case 14: // $bb13
        $0=1; //@line 3349 "xmlparse.c"
        __label__ = 42; break; //@line 3349 "xmlparse.c"
      case 15: // $bb14
        var $73=$parser_addr; //@line 3351 "xmlparse.c"
        var $74=$73+140; //@line 3351 "xmlparse.c"
        var $75=HEAP[$74]; //@line 3351 "xmlparse.c"
        var $76=HEAP[$standalone]; //@line 3351 "xmlparse.c"
        var $77=$parser_addr; //@line 3351 "xmlparse.c"
        var $78=$77+4; //@line 3351 "xmlparse.c"
        var $79=HEAP[$78]; //@line 3351 "xmlparse.c"
        var $80=$storedversion; //@line 3351 "xmlparse.c"
        var $81=$storedEncName; //@line 3351 "xmlparse.c"
        FUNCTION_TABLE[$75]($79, $80, $81, $76); //@line 3351 "xmlparse.c"
        __label__ = 18; break; //@line 3351 "xmlparse.c"
      case 16: // $bb15
        var $82=$parser_addr; //@line 3353 "xmlparse.c"
        var $83=$82+80; //@line 3353 "xmlparse.c"
        var $84=HEAP[$83]; //@line 3353 "xmlparse.c"
        var $85=($84)!=0; //@line 3353 "xmlparse.c"
        if ($85) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 3353 "xmlparse.c"
      case 17: // $bb16
        var $86=$parser_addr; //@line 3354 "xmlparse.c"
        var $87=$86+144; //@line 3354 "xmlparse.c"
        var $88=HEAP[$87]; //@line 3354 "xmlparse.c"
        var $89=$parser_addr; //@line 3354 "xmlparse.c"
        var $90=$s_addr; //@line 3354 "xmlparse.c"
        var $91=$next_addr; //@line 3354 "xmlparse.c"
        _reportDefault($89, $88, $90, $91); //@line 3354 "xmlparse.c"
        __label__ = 18; break; //@line 3354 "xmlparse.c"
      case 18: // $bb17
        var $92=$parser_addr; //@line 3355 "xmlparse.c"
        var $93=$92+228; //@line 3355 "xmlparse.c"
        var $94=HEAP[$93]; //@line 3355 "xmlparse.c"
        var $95=($94)==0; //@line 3355 "xmlparse.c"
        if ($95) { __label__ = 19; break; } else { __label__ = 34; break; } //@line 3355 "xmlparse.c"
      case 19: // $bb18
        var $96=HEAP[$newEncoding]; //@line 3356 "xmlparse.c"
        var $97=($96)!=0; //@line 3356 "xmlparse.c"
        if ($97) { __label__ = 20; break; } else { __label__ = 23; break; } //@line 3356 "xmlparse.c"
      case 20: // $bb19
        var $98=HEAP[$newEncoding]; //@line 3357 "xmlparse.c"
        var $99=$98+64; //@line 3357 "xmlparse.c"
        var $100=HEAP[$99]; //@line 3357 "xmlparse.c"
        var $101=$parser_addr; //@line 3357 "xmlparse.c"
        var $102=$101+144; //@line 3357 "xmlparse.c"
        var $103=HEAP[$102]; //@line 3357 "xmlparse.c"
        var $104=$103+64; //@line 3357 "xmlparse.c"
        var $105=HEAP[$104]; //@line 3357 "xmlparse.c"
        var $106=($100)!=($105); //@line 3357 "xmlparse.c"
        if ($106) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 3357 "xmlparse.c"
      case 21: // $bb20
        var $107=HEAP[$encodingName]; //@line 3358 "xmlparse.c"
        var $108=$parser_addr; //@line 3358 "xmlparse.c"
        var $109=$108+272; //@line 3358 "xmlparse.c"
        HEAP[$109]=$107; //@line 3358 "xmlparse.c"
        $0=19; //@line 3359 "xmlparse.c"
        __label__ = 42; break; //@line 3359 "xmlparse.c"
      case 22: // $bb21
        var $110=HEAP[$newEncoding]; //@line 3361 "xmlparse.c"
        var $111=$parser_addr; //@line 3361 "xmlparse.c"
        var $112=$111+144; //@line 3361 "xmlparse.c"
        HEAP[$112]=$110; //@line 3361 "xmlparse.c"
        __label__ = 34; break; //@line 3361 "xmlparse.c"
      case 23: // $bb22
        var $113=HEAP[$encodingName]; //@line 3363 "xmlparse.c"
        var $114=($113)!=0; //@line 3363 "xmlparse.c"
        if ($114) { __label__ = 24; break; } else { __label__ = 34; break; } //@line 3363 "xmlparse.c"
      case 24: // $bb23
        var $115=$storedEncName; //@line 3365 "xmlparse.c"
        var $116=($115)==0; //@line 3365 "xmlparse.c"
        if ($116) { __label__ = 25; break; } else { __label__ = 27; break; } //@line 3365 "xmlparse.c"
      case 25: // $bb24
        var $117=HEAP[$encodingName]; //@line 3366 "xmlparse.c"
        var $118=$parser_addr; //@line 3366 "xmlparse.c"
        var $119=$118+144; //@line 3366 "xmlparse.c"
        var $120=HEAP[$119]; //@line 3366 "xmlparse.c"
        var $121=$120+28; //@line 3366 "xmlparse.c"
        var $122=HEAP[$121]; //@line 3366 "xmlparse.c"
        var $123=HEAP[$encodingName]; //@line 3366 "xmlparse.c"
        var $124=$parser_addr; //@line 3366 "xmlparse.c"
        var $125=$124+144; //@line 3366 "xmlparse.c"
        var $126=HEAP[$125]; //@line 3366 "xmlparse.c"
        var $127=FUNCTION_TABLE[$122]($126, $123); //@line 3366 "xmlparse.c"
        var $128=$117+$127; //@line 3366 "xmlparse.c"
        var $129=HEAP[$encodingName]; //@line 3366 "xmlparse.c"
        var $130=$parser_addr; //@line 3366 "xmlparse.c"
        var $131=$130+144; //@line 3366 "xmlparse.c"
        var $132=HEAP[$131]; //@line 3366 "xmlparse.c"
        var $133=$parser_addr; //@line 3366 "xmlparse.c"
        var $134=$133+424; //@line 3366 "xmlparse.c"
        var $135=_poolStoreString($134, $132, $129, $128); //@line 3366 "xmlparse.c"
        $storedEncName=$135; //@line 3366 "xmlparse.c"
        var $136=$storedEncName; //@line 3369 "xmlparse.c"
        var $137=($136)==0; //@line 3369 "xmlparse.c"
        if ($137) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 3369 "xmlparse.c"
      case 26: // $bb25
        $0=1; //@line 3370 "xmlparse.c"
        __label__ = 42; break; //@line 3370 "xmlparse.c"
      case 27: // $bb26
        var $138=$parser_addr; //@line 3372 "xmlparse.c"
        var $139=$storedEncName; //@line 3372 "xmlparse.c"
        var $140=_handleUnknownEncoding($138, $139); //@line 3372 "xmlparse.c"
        $result=$140; //@line 3372 "xmlparse.c"
        var $141=$parser_addr; //@line 3373 "xmlparse.c"
        var $142=$141+424; //@line 3373 "xmlparse.c"
        $pool_addr_i=$142;
        var $143=$pool_addr_i; //@line 5979 "xmlparse.c"
        var $144=$143+4; //@line 5979 "xmlparse.c"
        var $145=HEAP[$144]; //@line 5979 "xmlparse.c"
        var $146=($145)==0; //@line 5979 "xmlparse.c"
        var $147=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $148=$147; //@line 5980 "xmlparse.c"
        var $149=HEAP[$148]; //@line 5980 "xmlparse.c"
        if ($146) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 5979 "xmlparse.c"
      case 28: // $bb_i
        var $150=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $151=$150+4; //@line 5980 "xmlparse.c"
        HEAP[$151]=$149; //@line 5980 "xmlparse.c"
        __label__ = 31; break; //@line 5980 "xmlparse.c"
      case 29: // $bb1_i
        $p_i=$149; //@line 5982 "xmlparse.c"
        var $152=($149)!=0; //@line 5983 "xmlparse.c"
        if ($152) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 5983 "xmlparse.c"
      case 30: // $bb2_i
        var $153=$p_i; //@line 5984 "xmlparse.c"
        var $154=$153; //@line 5984 "xmlparse.c"
        var $155=HEAP[$154]; //@line 5984 "xmlparse.c"
        $tem_i=$155; //@line 5984 "xmlparse.c"
        var $156=$pool_addr_i; //@line 5985 "xmlparse.c"
        var $157=$156+4; //@line 5985 "xmlparse.c"
        var $158=HEAP[$157]; //@line 5985 "xmlparse.c"
        var $159=$p_i; //@line 5985 "xmlparse.c"
        var $160=$159; //@line 5985 "xmlparse.c"
        HEAP[$160]=$158; //@line 5985 "xmlparse.c"
        var $161=$pool_addr_i; //@line 5986 "xmlparse.c"
        var $162=$161+4; //@line 5986 "xmlparse.c"
        var $163=$p_i; //@line 5986 "xmlparse.c"
        HEAP[$162]=$163; //@line 5986 "xmlparse.c"
        var $164=$tem_i; //@line 5987 "xmlparse.c"
        $p_i=$164; //@line 5987 "xmlparse.c"
        var $165=($164)!=0; //@line 5983 "xmlparse.c"
        if ($165) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 5983 "xmlparse.c"
      case 31: // $poolClear_exit
        var $166=$pool_addr_i; //@line 5990 "xmlparse.c"
        var $167=$166; //@line 5990 "xmlparse.c"
        HEAP[$167]=0; //@line 5990 "xmlparse.c"
        var $168=$pool_addr_i; //@line 5991 "xmlparse.c"
        var $169=$168+16; //@line 5991 "xmlparse.c"
        HEAP[$169]=0; //@line 5991 "xmlparse.c"
        var $170=$pool_addr_i; //@line 5992 "xmlparse.c"
        var $171=$170+12; //@line 5992 "xmlparse.c"
        HEAP[$171]=0; //@line 5992 "xmlparse.c"
        var $172=$pool_addr_i; //@line 5993 "xmlparse.c"
        var $173=$172+8; //@line 5993 "xmlparse.c"
        HEAP[$173]=0; //@line 5993 "xmlparse.c"
        var $174=$result; //@line 3374 "xmlparse.c"
        var $175=($174)==18; //@line 3374 "xmlparse.c"
        if ($175) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 3374 "xmlparse.c"
      case 32: // $bb27
        var $176=HEAP[$encodingName]; //@line 3375 "xmlparse.c"
        var $177=$parser_addr; //@line 3375 "xmlparse.c"
        var $178=$177+272; //@line 3375 "xmlparse.c"
        HEAP[$178]=$176; //@line 3375 "xmlparse.c"
        __label__ = 33; break; //@line 3375 "xmlparse.c"
      case 33: // $bb28
        var $179=$result; //@line 3376 "xmlparse.c"
        $0=$179; //@line 3376 "xmlparse.c"
        __label__ = 42; break; //@line 3376 "xmlparse.c"
      case 34: // $bb29
        var $180=$storedEncName; //@line 3380 "xmlparse.c"
        var $181=($180)!=0; //@line 3380 "xmlparse.c"
        if ($181) { __label__ = 36; break; } else { __label__ = 35; break; } //@line 3380 "xmlparse.c"
      case 35: // $bb30
        var $182=$storedversion; //@line 3380 "xmlparse.c"
        var $183=($182)!=0; //@line 3380 "xmlparse.c"
        if ($183) { __label__ = 36; break; } else { __label__ = 41; break; } //@line 3380 "xmlparse.c"
      case 36: // $bb31
        var $184=$parser_addr; //@line 3381 "xmlparse.c"
        var $185=$184+424; //@line 3381 "xmlparse.c"
        $pool_addr_i1=$185;
        var $186=$pool_addr_i1; //@line 5979 "xmlparse.c"
        var $187=$186+4; //@line 5979 "xmlparse.c"
        var $188=HEAP[$187]; //@line 5979 "xmlparse.c"
        var $189=($188)==0; //@line 5979 "xmlparse.c"
        var $190=$pool_addr_i1; //@line 5980 "xmlparse.c"
        var $191=$190; //@line 5980 "xmlparse.c"
        var $192=HEAP[$191]; //@line 5980 "xmlparse.c"
        if ($189) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 5979 "xmlparse.c"
      case 37: // $bb_i4
        var $193=$pool_addr_i1; //@line 5980 "xmlparse.c"
        var $194=$193+4; //@line 5980 "xmlparse.c"
        HEAP[$194]=$192; //@line 5980 "xmlparse.c"
        __label__ = 40; break; //@line 5980 "xmlparse.c"
      case 38: // $bb1_i5
        $p_i2=$192; //@line 5982 "xmlparse.c"
        var $195=($192)!=0; //@line 5983 "xmlparse.c"
        if ($195) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 5983 "xmlparse.c"
      case 39: // $bb2_i6
        var $196=$p_i2; //@line 5984 "xmlparse.c"
        var $197=$196; //@line 5984 "xmlparse.c"
        var $198=HEAP[$197]; //@line 5984 "xmlparse.c"
        $tem_i3=$198; //@line 5984 "xmlparse.c"
        var $199=$pool_addr_i1; //@line 5985 "xmlparse.c"
        var $200=$199+4; //@line 5985 "xmlparse.c"
        var $201=HEAP[$200]; //@line 5985 "xmlparse.c"
        var $202=$p_i2; //@line 5985 "xmlparse.c"
        var $203=$202; //@line 5985 "xmlparse.c"
        HEAP[$203]=$201; //@line 5985 "xmlparse.c"
        var $204=$pool_addr_i1; //@line 5986 "xmlparse.c"
        var $205=$204+4; //@line 5986 "xmlparse.c"
        var $206=$p_i2; //@line 5986 "xmlparse.c"
        HEAP[$205]=$206; //@line 5986 "xmlparse.c"
        var $207=$tem_i3; //@line 5987 "xmlparse.c"
        $p_i2=$207; //@line 5987 "xmlparse.c"
        var $208=($207)!=0; //@line 5983 "xmlparse.c"
        if ($208) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 5983 "xmlparse.c"
      case 40: // $poolClear_exit7
        var $209=$pool_addr_i1; //@line 5990 "xmlparse.c"
        var $210=$209; //@line 5990 "xmlparse.c"
        HEAP[$210]=0; //@line 5990 "xmlparse.c"
        var $211=$pool_addr_i1; //@line 5991 "xmlparse.c"
        var $212=$211+16; //@line 5991 "xmlparse.c"
        HEAP[$212]=0; //@line 5991 "xmlparse.c"
        var $213=$pool_addr_i1; //@line 5992 "xmlparse.c"
        var $214=$213+12; //@line 5992 "xmlparse.c"
        HEAP[$214]=0; //@line 5992 "xmlparse.c"
        var $215=$pool_addr_i1; //@line 5993 "xmlparse.c"
        var $216=$215+8; //@line 5993 "xmlparse.c"
        HEAP[$216]=0; //@line 5993 "xmlparse.c"
        __label__ = 41; break; //@line 3381 "xmlparse.c"
      case 41: // $bb32
        $0=0; //@line 3383 "xmlparse.c"
        __label__ = 42; break; //@line 3383 "xmlparse.c"
      case 42: // $bb33
        var $217=$0; //@line 3321 "xmlparse.c"
        $retval=$217; //@line 3321 "xmlparse.c"
        var $retval34=$retval; //@line 3321 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval34; //@line 3321 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _handleUnknownEncoding($parser, $encodingName) {
    var __stackBase__  = STACKTOP; STACKTOP += 1036; _memset(__stackBase__, 0, 1036);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $retval_i;
        var $0;
        var $parser_addr;
        var $encodingName_addr;
        var $retval;
        var $1;
        var $info=__stackBase__;
        var $i;
        var $enc;
        $parser_addr=$parser;
        $encodingName_addr=$encodingName;
        var $2=$parser_addr; //@line 3389 "xmlparse.c"
        var $3=$2+124; //@line 3389 "xmlparse.c"
        var $4=HEAP[$3]; //@line 3389 "xmlparse.c"
        var $5=($4)!=0; //@line 3389 "xmlparse.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 3389 "xmlparse.c"
      case 1: // $bb
        $i=0; //@line 3392 "xmlparse.c"
        var $6=$info; //@line 3393 "xmlparse.c"
        __label__ = 2; break;
      case 2: // $bb1
        var $7=$i; //@line 3393 "xmlparse.c"
        var $8=$6+$7*4; //@line 3393 "xmlparse.c"
        HEAP[$8]=-1; //@line 3393 "xmlparse.c"
        var $9=$i; //@line 3392 "xmlparse.c"
        var $10=($9) + 1; //@line 3392 "xmlparse.c"
        $i=$10; //@line 3392 "xmlparse.c"
        var $11=($10) <= 255; //@line 3392 "xmlparse.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 3392 "xmlparse.c"
      case 3: // $bb3
        var $12=$info+1028; //@line 3394 "xmlparse.c"
        HEAP[$12]=0; //@line 3394 "xmlparse.c"
        var $13=$info+1024; //@line 3395 "xmlparse.c"
        HEAP[$13]=0; //@line 3395 "xmlparse.c"
        var $14=$info+1032; //@line 3396 "xmlparse.c"
        HEAP[$14]=0; //@line 3396 "xmlparse.c"
        var $15=$parser_addr; //@line 3397 "xmlparse.c"
        var $16=$15+124; //@line 3397 "xmlparse.c"
        var $17=HEAP[$16]; //@line 3397 "xmlparse.c"
        var $18=$parser_addr; //@line 3397 "xmlparse.c"
        var $19=$18+244; //@line 3397 "xmlparse.c"
        var $20=HEAP[$19]; //@line 3397 "xmlparse.c"
        var $21=$encodingName_addr; //@line 3397 "xmlparse.c"
        var $22=FUNCTION_TABLE[$17]($20, $21, $info); //@line 3397 "xmlparse.c"
        var $23=($22)!=0; //@line 3397 "xmlparse.c"
        if ($23) { __label__ = 4; break; } else { __label__ = 10; break; } //@line 3397 "xmlparse.c"
      case 4: // $bb4
        var $24=$parser_addr; //@line 3400 "xmlparse.c"
        var $25=$24+12; //@line 3400 "xmlparse.c"
        var $26=$25; //@line 3400 "xmlparse.c"
        var $27=HEAP[$26]; //@line 3400 "xmlparse.c"
        $0=1908; //@line 1252 "xmltok.c"
        var $28=$0; //@line 1252 "xmltok.c"
        $retval_i=$28; //@line 1252 "xmltok.c"
        var $retval1_i=$retval_i; //@line 1252 "xmltok.c"
        var $29=FUNCTION_TABLE[$27]($retval1_i); //@line 3400 "xmlparse.c"
        var $30=$parser_addr; //@line 3400 "xmlparse.c"
        var $31=$30+236; //@line 3400 "xmlparse.c"
        HEAP[$31]=$29; //@line 3400 "xmlparse.c"
        var $32=$parser_addr; //@line 3401 "xmlparse.c"
        var $33=$32+236; //@line 3401 "xmlparse.c"
        var $34=HEAP[$33]; //@line 3401 "xmlparse.c"
        var $35=($34)==0; //@line 3401 "xmlparse.c"
        if ($35) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 3401 "xmlparse.c"
      case 5: // $bb5
        var $36=$info+1032; //@line 3402 "xmlparse.c"
        var $37=HEAP[$36]; //@line 3402 "xmlparse.c"
        var $38=($37)!=0; //@line 3402 "xmlparse.c"
        if ($38) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3402 "xmlparse.c"
      case 6: // $bb6
        var $39=$info+1032; //@line 3403 "xmlparse.c"
        var $40=HEAP[$39]; //@line 3403 "xmlparse.c"
        var $41=$info+1024; //@line 3403 "xmlparse.c"
        var $42=HEAP[$41]; //@line 3403 "xmlparse.c"
        FUNCTION_TABLE[$40]($42); //@line 3403 "xmlparse.c"
        __label__ = 7; break; //@line 3403 "xmlparse.c"
      case 7: // $bb7
        $1=1; //@line 3404 "xmlparse.c"
        __label__ = 13; break; //@line 3404 "xmlparse.c"
      case 8: // $bb8
        var $43=$info+1024; //@line 3406 "xmlparse.c"
        var $44=HEAP[$43]; //@line 3406 "xmlparse.c"
        var $45=$info+1028; //@line 3406 "xmlparse.c"
        var $46=HEAP[$45]; //@line 3406 "xmlparse.c"
        var $47=$parser_addr; //@line 3406 "xmlparse.c"
        var $48=$47+236; //@line 3406 "xmlparse.c"
        var $49=HEAP[$48]; //@line 3406 "xmlparse.c"
        var $50=$info; //@line 3406 "xmlparse.c"
        var $51=$50; //@line 3406 "xmlparse.c"
        var $52=_PyExpat_XmlInitUnknownEncoding($49, $51, $46, $44); //@line 3406 "xmlparse.c"
        $enc=$52; //@line 3406 "xmlparse.c"
        var $53=$enc; //@line 3412 "xmlparse.c"
        var $54=($53)!=0; //@line 3412 "xmlparse.c"
        if ($54) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3412 "xmlparse.c"
      case 9: // $bb9
        var $55=$info+1024; //@line 3413 "xmlparse.c"
        var $56=HEAP[$55]; //@line 3413 "xmlparse.c"
        var $57=$parser_addr; //@line 3413 "xmlparse.c"
        var $58=$57+240; //@line 3413 "xmlparse.c"
        HEAP[$58]=$56; //@line 3413 "xmlparse.c"
        var $59=$info+1032; //@line 3414 "xmlparse.c"
        var $60=HEAP[$59]; //@line 3414 "xmlparse.c"
        var $61=$parser_addr; //@line 3414 "xmlparse.c"
        var $62=$61+248; //@line 3414 "xmlparse.c"
        HEAP[$62]=$60; //@line 3414 "xmlparse.c"
        var $63=$parser_addr; //@line 3415 "xmlparse.c"
        var $64=$63+144; //@line 3415 "xmlparse.c"
        var $65=$enc; //@line 3415 "xmlparse.c"
        HEAP[$64]=$65; //@line 3415 "xmlparse.c"
        $1=0; //@line 3416 "xmlparse.c"
        __label__ = 13; break; //@line 3416 "xmlparse.c"
      case 10: // $bb10
        var $66=$info+1032; //@line 3419 "xmlparse.c"
        var $67=HEAP[$66]; //@line 3419 "xmlparse.c"
        var $68=($67)!=0; //@line 3419 "xmlparse.c"
        if ($68) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3419 "xmlparse.c"
      case 11: // $bb11
        var $69=$info+1032; //@line 3420 "xmlparse.c"
        var $70=HEAP[$69]; //@line 3420 "xmlparse.c"
        var $71=$info+1024; //@line 3420 "xmlparse.c"
        var $72=HEAP[$71]; //@line 3420 "xmlparse.c"
        FUNCTION_TABLE[$70]($72); //@line 3420 "xmlparse.c"
        __label__ = 12; break; //@line 3420 "xmlparse.c"
      case 12: // $bb12
        $1=18; //@line 3422 "xmlparse.c"
        __label__ = 13; break; //@line 3422 "xmlparse.c"
      case 13: // $bb13
        var $73=$1; //@line 3404 "xmlparse.c"
        $retval=$73; //@line 3404 "xmlparse.c"
        var $retval14=$retval; //@line 3404 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval14; //@line 3404 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _prologInitProcessor($parser, $s, $end, $nextPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr_i;
        var $retval_i;
        var $0;
        var $s_i;
        var $parser_addr;
        var $s_addr;
        var $end_addr;
        var $nextPtr_addr;
        var $retval;
        var $1;
        var $result;
        $parser_addr=$parser;
        $s_addr=$s;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        var $2=$parser_addr; //@line 3431 "xmlparse.c"
        $parser_addr_i=$2;
        var $3=$parser_addr_i; //@line 3290 "xmlparse.c"
        var $4=$3+228; //@line 3290 "xmlparse.c"
        var $5=HEAP[$4]; //@line 3290 "xmlparse.c"
        $s_i=$5; //@line 3290 "xmlparse.c"
        var $6=$parser_addr_i; //@line 3292 "xmlparse.c"
        var $7=$6+144; //@line 3292 "xmlparse.c"
        var $8=$parser_addr_i; //@line 3292 "xmlparse.c"
        var $9=$8+148; //@line 3292 "xmlparse.c"
        var $10=$s_i; //@line 3292 "xmlparse.c"
        var $11=_PyExpat_XmlInitEncoding($9, $7, $10); //@line 3292 "xmlparse.c"
        var $12=($11)!=0; //@line 3292 "xmlparse.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3292 "xmlparse.c"
      case 1: // $initializeEncoding_exit_thread
        $0=0; //@line 3293 "xmlparse.c"
        $retval_i=0; //@line 3293 "xmlparse.c"
        $result=0; //@line 3431 "xmlparse.c"
        __label__ = 4; break;
      case 2: // $initializeEncoding_exit
        var $13=$parser_addr_i; //@line 3294 "xmlparse.c"
        var $14=$13+228; //@line 3294 "xmlparse.c"
        var $15=HEAP[$14]; //@line 3294 "xmlparse.c"
        var $16=$parser_addr_i; //@line 3294 "xmlparse.c"
        var $17=_handleUnknownEncoding($16, $15); //@line 3294 "xmlparse.c"
        $0=$17; //@line 3294 "xmlparse.c"
        $retval_i=$17; //@line 3293 "xmlparse.c"
        $result=$17; //@line 3431 "xmlparse.c"
        var $18=($17)!=0; //@line 3432 "xmlparse.c"
        if ($18) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3432 "xmlparse.c"
      case 3: // $bb
        var $19=$result; //@line 3433 "xmlparse.c"
        $1=$19; //@line 3433 "xmlparse.c"
        __label__ = 5; break; //@line 3433 "xmlparse.c"
      case 4: // $bb1
        var $20=$parser_addr; //@line 3434 "xmlparse.c"
        var $21=$20+264; //@line 3434 "xmlparse.c"
        HEAP[$21]=(FUNCTION_TABLE_OFFSET + 68); //@line 3434 "xmlparse.c"
        var $22=$parser_addr; //@line 3435 "xmlparse.c"
        var $23=$s_addr; //@line 3435 "xmlparse.c"
        var $24=$end_addr; //@line 3435 "xmlparse.c"
        var $25=$nextPtr_addr; //@line 3435 "xmlparse.c"
        var $26=_prologProcessor($22, $23, $24, $25); //@line 3435 "xmlparse.c"
        $1=$26; //@line 3435 "xmlparse.c"
        __label__ = 5; break; //@line 3435 "xmlparse.c"
      case 5: // $bb2
        var $27=$1; //@line 3433 "xmlparse.c"
        $retval=$27; //@line 3433 "xmlparse.c"
        var $retval3=$retval; //@line 3433 "xmlparse.c"
        ;
        return $retval3; //@line 3433 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _prologProcessor($parser, $s, $end, $nextPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 24; _memset(__stackBase__, 0, 24);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr_i48_i;
        var $retval_i49_i;
        var $0;
        var $dtd_i50_i;
        var $ret_i_i;
        var $cpos_i_i=__stackBase__;
        var $str_i_i=__stackBase__+4;
        var $allocsize_i_i;
        var $pool_addr_i40_i;
        var $p_i41_i;
        var $tem_i42_i;
        var $pool_addr_i32_i;
        var $p_i33_i;
        var $tem_i34_i;
        var $parser_addr_i_i;
        var $enc_addr_i_i;
        var $entityTextPtr_addr_i_i;
        var $entityTextEnd_addr_i_i;
        var $retval_i25_i;
        var $1;
        var $dtd_i_i;
        var $pool_i_i;
        var $result_i_i;
        var $next_i_i=__stackBase__+8;
        var $tok_i_i;
        var $buf_i_i=__stackBase__+12;
        var $i_i_i;
        var $n_i_i;
        var $pool_addr_i18_i;
        var $p_i19_i;
        var $tem_i20_i;
        var $pool_addr_i11_i;
        var $p_i12_i;
        var $tem_i13_i;
        var $pool_addr_i8_i;
        var $s_addr_i_i;
        var $retval_i_i;
        var $2;
        var $iftmp_280_i_i;
        var $pool_addr_i1_i;
        var $p_i2_i;
        var $tem_i3_i;
        var $pool_addr_i_i;
        var $p_i_i;
        var $tem_i_i;
        var $parser_addr_i;
        var $enc_addr_i;
        var $s_addr_i;
        var $end_addr_i;
        var $tok_addr_i;
        var $next_addr_i=__stackBase__+16;
        var $nextPtr_addr_i;
        var $haveMore_addr_i;
        var $retval_i;
        var $iftmp_208_i;
        var $iftmp_207_i;
        var $iftmp_201_i;
        var $iftmp_192_i;
        var $3;
        var $dtd_i;
        var $eventPP_i;
        var $eventEndPP_i;
        var $quant_i;
        var $role_i;
        var $handleDefault_i;
        var $result_i;
        var $tem_i;
        var $prefix_i;
        var $attVal_i;
        var $result95_i;
        var $result115_i;
        var $name_i;
        var $tem181_i;
        var $systemId_i;
        var $temp_i;
        var $temp205_i;
        var $myindex_i;
        var $content_i;
        var $el_i;
        var $name260_i;
        var $nameLen_i;
        var $nxt_i;
        var $myindex261_i;
        var $model_i;
        var $parser_addr;
        var $s_addr;
        var $end_addr;
        var $nextPtr_addr;
        var $retval;
        var $4;
        var $next=__stackBase__+20;
        var $tok;
        $parser_addr=$parser;
        $s_addr=$s;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        var $5=$s_addr; //@line 3616 "xmlparse.c"
        HEAP[$next]=$5; //@line 3616 "xmlparse.c"
        var $6=$parser_addr; //@line 3617 "xmlparse.c"
        var $7=$6+144; //@line 3617 "xmlparse.c"
        var $8=HEAP[$7]; //@line 3617 "xmlparse.c"
        var $9=$8; //@line 3617 "xmlparse.c"
        var $10=$9; //@line 3617 "xmlparse.c"
        var $11=HEAP[$10]; //@line 3617 "xmlparse.c"
        var $12=$parser_addr; //@line 3617 "xmlparse.c"
        var $13=$12+144; //@line 3617 "xmlparse.c"
        var $14=HEAP[$13]; //@line 3617 "xmlparse.c"
        var $15=$s_addr; //@line 3617 "xmlparse.c"
        var $16=$end_addr; //@line 3617 "xmlparse.c"
        var $17=FUNCTION_TABLE[$11]($14, $15, $16, $next); //@line 3617 "xmlparse.c"
        $tok=$17; //@line 3617 "xmlparse.c"
        var $18=$parser_addr; //@line 3618 "xmlparse.c"
        var $19=$18+464; //@line 3618 "xmlparse.c"
        var $20=$19+4; //@line 3618 "xmlparse.c"
        var $21=HEAP[$20]; //@line 3618 "xmlparse.c"
        var $22=($21)==0; //@line 3618 "xmlparse.c"
        var $23=($22); //@line 3618 "xmlparse.c"
        var $24=HEAP[$next]; //@line 3618 "xmlparse.c"
        var $25=$parser_addr; //@line 3618 "xmlparse.c"
        var $26=$25+144; //@line 3618 "xmlparse.c"
        var $27=HEAP[$26]; //@line 3618 "xmlparse.c"
        var $28=$parser_addr; //@line 3618 "xmlparse.c"
        var $29=$s_addr; //@line 3618 "xmlparse.c"
        var $30=$end_addr; //@line 3618 "xmlparse.c"
        var $31=$tok; //@line 3618 "xmlparse.c"
        var $32=$nextPtr_addr; //@line 3618 "xmlparse.c"
        var $33=((($23)) & 255); //@line 3618 "xmlparse.c"
        $parser_addr_i=$28;
        $enc_addr_i=$27;
        $s_addr_i=$29;
        $end_addr_i=$30;
        $tok_addr_i=$31;
        HEAP[$next_addr_i]=$24;
        $nextPtr_addr_i=$32;
        $haveMore_addr_i=$33;
        var $34=$parser_addr_i; //@line 3652 "xmlparse.c"
        var $35=$34+340; //@line 3652 "xmlparse.c"
        var $36=HEAP[$35]; //@line 3652 "xmlparse.c"
        $dtd_i=$36; //@line 3652 "xmlparse.c"
        var $37=$parser_addr_i; //@line 3658 "xmlparse.c"
        var $38=$37+144; //@line 3658 "xmlparse.c"
        var $39=HEAP[$38]; //@line 3658 "xmlparse.c"
        var $40=$enc_addr_i; //@line 3658 "xmlparse.c"
        var $41=($39)==($40); //@line 3658 "xmlparse.c"
        var $42=$parser_addr_i; //@line 3659 "xmlparse.c"
        if ($41) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3658 "xmlparse.c"
      case 1: // $bb_i
        var $43=$42+272; //@line 3659 "xmlparse.c"
        $eventPP_i=$43; //@line 3659 "xmlparse.c"
        var $44=$parser_addr_i; //@line 3660 "xmlparse.c"
        var $45=$44+276; //@line 3660 "xmlparse.c"
        $eventEndPP_i=$45; //@line 3660 "xmlparse.c"
        __label__ = 3; break; //@line 3660 "xmlparse.c"
      case 2: // $bb1_i
        var $46=$42+284; //@line 3663 "xmlparse.c"
        var $47=HEAP[$46]; //@line 3663 "xmlparse.c"
        var $48=$47; //@line 3663 "xmlparse.c"
        $eventPP_i=$48; //@line 3663 "xmlparse.c"
        var $49=$parser_addr_i; //@line 3664 "xmlparse.c"
        var $50=$49+284; //@line 3664 "xmlparse.c"
        var $51=HEAP[$50]; //@line 3664 "xmlparse.c"
        var $52=$51+4; //@line 3664 "xmlparse.c"
        $eventEndPP_i=$52; //@line 3664 "xmlparse.c"
        __label__ = 3; break; //@line 3664 "xmlparse.c"
      case 3: // $bb2_preheader_i
        var $buf18_i_i=$buf_i_i; //@line 5082 "xmlparse.c"
        __label__ = 4; break;
      case 4: // $bb2_i
        $handleDefault_i=1; //@line 3669 "xmlparse.c"
        var $53=$eventPP_i; //@line 3670 "xmlparse.c"
        var $54=$s_addr_i; //@line 3670 "xmlparse.c"
        HEAP[$53]=$54; //@line 3670 "xmlparse.c"
        var $55=HEAP[$next_addr_i]; //@line 3671 "xmlparse.c"
        var $56=$eventEndPP_i; //@line 3671 "xmlparse.c"
        HEAP[$56]=$55; //@line 3671 "xmlparse.c"
        var $57=$tok_addr_i; //@line 3672 "xmlparse.c"
        var $58=($57) <= 0; //@line 3672 "xmlparse.c"
        if ($58) { __label__ = 5; break; } else { __label__ = 15; break; } //@line 3672 "xmlparse.c"
      case 5: // $bb3_i
        var $59=$haveMore_addr_i; //@line 3673 "xmlparse.c"
        var $60=($59)!=0; //@line 3673 "xmlparse.c"
        var $61=$tok_addr_i; //@line 3673 "xmlparse.c"
        if ($60) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 3673 "xmlparse.c"
      case 6: // $bb4_i
        var $62=($61)!=0; //@line 3673 "xmlparse.c"
        if ($62) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 3673 "xmlparse.c"
      case 7: // $bb5_i
        var $63=$nextPtr_addr_i; //@line 3674 "xmlparse.c"
        var $64=$s_addr_i; //@line 3674 "xmlparse.c"
        HEAP[$63]=$64; //@line 3674 "xmlparse.c"
        $3=0; //@line 3675 "xmlparse.c"
        __label__ = 354; break; //@line 3675 "xmlparse.c"
      case 8: // $bb6_i
        if ($61 == -15) {
          __label__ = 12; break;
        }
        else if ($61 == -4) {
          __label__ = 13; break;
        }
        else if ($61 == -2) {
          __label__ = 11; break;
        }
        else if ($61 == -1) {
          __label__ = 10; break;
        }
        else if ($61 == 0) {
          __label__ = 9; break;
        }
        else {
        __label__ = 14; break;
        }
        
      case 9: // $bb7_i
        var $65=HEAP[$next_addr_i]; //@line 3679 "xmlparse.c"
        var $66=$eventPP_i; //@line 3679 "xmlparse.c"
        HEAP[$66]=$65; //@line 3679 "xmlparse.c"
        $3=4; //@line 3680 "xmlparse.c"
        __label__ = 354; break; //@line 3680 "xmlparse.c"
      case 10: // $bb8_i
        $3=5; //@line 3682 "xmlparse.c"
        __label__ = 354; break; //@line 3682 "xmlparse.c"
      case 11: // $bb9_i
        $3=6; //@line 3684 "xmlparse.c"
        __label__ = 354; break; //@line 3684 "xmlparse.c"
      case 12: // $bb10_i
        var $67=$tok_addr_i; //@line 3686 "xmlparse.c"
        var $68=0 - ($67); //@line 3686 "xmlparse.c"
        $tok_addr_i=$68; //@line 3686 "xmlparse.c"
        __label__ = 15; break; //@line 3686 "xmlparse.c"
      case 13: // $bb11_i
        $3=3; //@line 3707 "xmlparse.c"
        __label__ = 354; break; //@line 3707 "xmlparse.c"
      case 14: // $bb12_i
        var $69=$tok_addr_i; //@line 3709 "xmlparse.c"
        var $70=0 - ($69); //@line 3709 "xmlparse.c"
        $tok_addr_i=$70; //@line 3709 "xmlparse.c"
        var $71=$end_addr_i; //@line 3710 "xmlparse.c"
        HEAP[$next_addr_i]=$71; //@line 3710 "xmlparse.c"
        __label__ = 15; break; //@line 3710 "xmlparse.c"
      case 15: // $bb13_i
        var $72=$parser_addr_i; //@line 3714 "xmlparse.c"
        var $73=$72+252; //@line 3714 "xmlparse.c"
        var $74=$73; //@line 3714 "xmlparse.c"
        var $75=HEAP[$74]; //@line 3714 "xmlparse.c"
        var $76=HEAP[$next_addr_i]; //@line 3714 "xmlparse.c"
        var $77=$parser_addr_i; //@line 3714 "xmlparse.c"
        var $78=$77+252; //@line 3714 "xmlparse.c"
        var $79=$tok_addr_i; //@line 3714 "xmlparse.c"
        var $80=$s_addr_i; //@line 3714 "xmlparse.c"
        var $81=$enc_addr_i; //@line 3714 "xmlparse.c"
        var $82=FUNCTION_TABLE[$75]($78, $79, $80, $76, $81); //@line 3714 "xmlparse.c"
        $role_i=$82; //@line 3714 "xmlparse.c"
        if ($82 == -1) {
          __label__ = 244; break;
        }
        else if ($82 == 0) {
          __label__ = 333; break;
        }
        else if ($82 == 1) {
          __label__ = 16; break;
        }
        else if ($82 == 2) {
          __label__ = 52; break;
        }
        else if ($82 == 3) {
          __label__ = 335; break;
        }
        else if ($82 == 4) {
          __label__ = 19; break;
        }
        else if ($82 == 5) {
          __label__ = 173; break;
        }
        else if ($82 == 6) {
          __label__ = 30; break;
        }
        else if ($82 == 7) {
          __label__ = 24; break;
        }
        else if ($82 == 8) {
          __label__ = 44; break;
        }
        else if ($82 == 9) {
          __label__ = 199; break;
        }
        else if ($82 == 10) {
          __label__ = 215; break;
        }
        else if ($82 == 11) {
          __label__ = 337; break;
        }
        else if ($82 == 12) {
          __label__ = 128; break;
        }
        else if ($82 == 13) {
          __label__ = 181; break;
        }
        else if ($82 == 14) {
          __label__ = 36; break;
        }
        else if ($82 == 15) {
          __label__ = 187; break;
        }
        else if ($82 == 16) {
          __label__ = 191; break;
        }
        else if ($82 == 17) {
          __label__ = 340; break;
        }
        else if ($82 == 18) {
          __label__ = 216; break;
        }
        else if ($82 == 19) {
          __label__ = 226; break;
        }
        else if ($82 == 20) {
          __label__ = 236; break;
        }
        else if ($82 == 21) {
          __label__ = 220; break;
        }
        else if ($82 == 22) {
          __label__ = 55; break;
        }
        else if ($82 == 23) {
          __label__ = 58; break;
        }
        else if ($82 == 24) {
          __label__ = 59; break;
        }
        else if ($82 == 25) {
          __label__ = 60; break;
        }
        else if ($82 == 26) {
          __label__ = 61; break;
        }
        else if ($82 == 27) {
          __label__ = 62; break;
        }
        else if ($82 == 28) {
          __label__ = 63; break;
        }
        else if ($82 == 29) {
          __label__ = 64; break;
        }
        else if ($82 == 30) {
          __label__ = 65; break;
        }
        else if ($82 == 31) {
          __label__ = 69; break;
        }
        else if ($82 == 32) {
          __label__ = 69; break;
        }
        else if ($82 == 33) {
          __label__ = 342; break;
        }
        else if ($82 == 34) {
          __label__ = 53; break;
        }
        else if ($82 == 35) {
          __label__ = 88; break;
        }
        else if ($82 == 36) {
          __label__ = 88; break;
        }
        else if ($82 == 37) {
          __label__ = 107; break;
        }
        else if ($82 == 38) {
          __label__ = 107; break;
        }
        else if ($82 == 39) {
          __label__ = 345; break;
        }
        else if ($82 == 40) {
          __label__ = 280; break;
        }
        else if ($82 == 41) {
          __label__ = 284; break;
        }
        else if ($82 == 42) {
          __label__ = 284; break;
        }
        else if ($82 == 43) {
          __label__ = 293; break;
        }
        else if ($82 == 44) {
          __label__ = 248; break;
        }
        else if ($82 == 45) {
          __label__ = 312; break;
        }
        else if ($82 == 46) {
          __label__ = 314; break;
        }
        else if ($82 == 47) {
          __label__ = 313; break;
        }
        else if ($82 == 48) {
          __label__ = 315; break;
        }
        else if ($82 == 49) {
          __label__ = 268; break;
        }
        else if ($82 == 50) {
          __label__ = 263; break;
        }
        else if ($82 == 51) {
          __label__ = 296; break;
        }
        else if ($82 == 52) {
          __label__ = 298; break;
        }
        else if ($82 == 53) {
          __label__ = 297; break;
        }
        else if ($82 == 54) {
          __label__ = 299; break;
        }
        else if ($82 == 55) {
          __label__ = 327; break;
        }
        else if ($82 == 56) {
          __label__ = 330; break;
        }
        else if ($82 == 57) {
          __label__ = 276; break;
        }
        else {
        __label__ = 347; break;
        }
        
      case 16: // $bb14_i
        var $83=HEAP[$next_addr_i]; //@line 3718 "xmlparse.c"
        var $84=$parser_addr_i; //@line 3718 "xmlparse.c"
        var $85=$s_addr_i; //@line 3718 "xmlparse.c"
        var $86=_processXmlDecl($84, 0, $85, $83); //@line 3718 "xmlparse.c"
        $result_i=$86; //@line 3718 "xmlparse.c"
        var $87=$result_i; //@line 3719 "xmlparse.c"
        var $88=($87)!=0; //@line 3719 "xmlparse.c"
        if ($88) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 3719 "xmlparse.c"
      case 17: // $bb15_i
        var $89=$result_i; //@line 3720 "xmlparse.c"
        $3=$89; //@line 3720 "xmlparse.c"
        __label__ = 354; break; //@line 3720 "xmlparse.c"
      case 18: // $bb16_i
        var $90=$parser_addr_i; //@line 3721 "xmlparse.c"
        var $91=$90+144; //@line 3721 "xmlparse.c"
        var $92=HEAP[$91]; //@line 3721 "xmlparse.c"
        $enc_addr_i=$92; //@line 3721 "xmlparse.c"
        $handleDefault_i=0; //@line 3722 "xmlparse.c"
        __label__ = 350; break; //@line 3722 "xmlparse.c"
      case 19: // $bb17_i
        var $93=$parser_addr_i; //@line 3726 "xmlparse.c"
        var $94=$93+84; //@line 3726 "xmlparse.c"
        var $95=HEAP[$94]; //@line 3726 "xmlparse.c"
        var $96=($95)!=0; //@line 3726 "xmlparse.c"
        if ($96) { __label__ = 20; break; } else { __label__ = 23; break; } //@line 3726 "xmlparse.c"
      case 20: // $bb18_i
        var $97=HEAP[$next_addr_i]; //@line 3727 "xmlparse.c"
        var $98=$parser_addr_i; //@line 3727 "xmlparse.c"
        var $99=$98+400; //@line 3727 "xmlparse.c"
        var $100=$enc_addr_i; //@line 3727 "xmlparse.c"
        var $101=$s_addr_i; //@line 3727 "xmlparse.c"
        var $102=_poolStoreString($99, $100, $101, $97); //@line 3727 "xmlparse.c"
        var $103=$parser_addr_i; //@line 3727 "xmlparse.c"
        var $104=$103+304; //@line 3727 "xmlparse.c"
        HEAP[$104]=$102; //@line 3727 "xmlparse.c"
        var $105=$parser_addr_i; //@line 3728 "xmlparse.c"
        var $106=$105+304; //@line 3728 "xmlparse.c"
        var $107=HEAP[$106]; //@line 3728 "xmlparse.c"
        var $108=($107)==0; //@line 3728 "xmlparse.c"
        if ($108) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 3728 "xmlparse.c"
      case 21: // $bb19_i
        $3=1; //@line 3729 "xmlparse.c"
        __label__ = 354; break; //@line 3729 "xmlparse.c"
      case 22: // $bb20_i
        var $109=$parser_addr_i; //@line 3730 "xmlparse.c"
        var $110=$109+400; //@line 3730 "xmlparse.c"
        var $111=$110+12; //@line 3730 "xmlparse.c"
        var $112=HEAP[$111]; //@line 3730 "xmlparse.c"
        var $113=$parser_addr_i; //@line 3730 "xmlparse.c"
        var $114=$113+400; //@line 3730 "xmlparse.c"
        var $115=$114+16; //@line 3730 "xmlparse.c"
        HEAP[$115]=$112; //@line 3730 "xmlparse.c"
        var $116=$parser_addr_i; //@line 3731 "xmlparse.c"
        var $117=$116+312; //@line 3731 "xmlparse.c"
        HEAP[$117]=0; //@line 3731 "xmlparse.c"
        $handleDefault_i=0; //@line 3732 "xmlparse.c"
        __label__ = 23; break; //@line 3732 "xmlparse.c"
      case 23: // $bb21_i
        var $118=$parser_addr_i; //@line 3734 "xmlparse.c"
        var $119=$118+308; //@line 3734 "xmlparse.c"
        HEAP[$119]=0; //@line 3734 "xmlparse.c"
        __label__ = 347; break; //@line 3734 "xmlparse.c"
      case 24: // $bb22_i
        var $120=$parser_addr_i; //@line 3737 "xmlparse.c"
        var $121=$120+84; //@line 3737 "xmlparse.c"
        var $122=HEAP[$121]; //@line 3737 "xmlparse.c"
        var $123=($122)!=0; //@line 3737 "xmlparse.c"
        if ($123) { __label__ = 25; break; } else { __label__ = 347; break; } //@line 3737 "xmlparse.c"
      case 25: // $bb23_i
        var $124=$parser_addr_i; //@line 3738 "xmlparse.c"
        var $125=$124+84; //@line 3738 "xmlparse.c"
        var $126=HEAP[$125]; //@line 3738 "xmlparse.c"
        var $127=$parser_addr_i; //@line 3738 "xmlparse.c"
        var $128=$127+312; //@line 3738 "xmlparse.c"
        var $129=HEAP[$128]; //@line 3738 "xmlparse.c"
        var $130=$parser_addr_i; //@line 3738 "xmlparse.c"
        var $131=$130+308; //@line 3738 "xmlparse.c"
        var $132=HEAP[$131]; //@line 3738 "xmlparse.c"
        var $133=$parser_addr_i; //@line 3738 "xmlparse.c"
        var $134=$133+304; //@line 3738 "xmlparse.c"
        var $135=HEAP[$134]; //@line 3738 "xmlparse.c"
        var $136=$parser_addr_i; //@line 3738 "xmlparse.c"
        var $137=$136+4; //@line 3738 "xmlparse.c"
        var $138=HEAP[$137]; //@line 3738 "xmlparse.c"
        FUNCTION_TABLE[$126]($138, $135, $132, $129, 1); //@line 3738 "xmlparse.c"
        var $139=$parser_addr_i; //@line 3740 "xmlparse.c"
        var $140=$139+304; //@line 3740 "xmlparse.c"
        HEAP[$140]=0; //@line 3740 "xmlparse.c"
        var $141=$parser_addr_i; //@line 3741 "xmlparse.c"
        var $142=$141+400; //@line 3741 "xmlparse.c"
        $pool_addr_i_i=$142;
        var $143=$pool_addr_i_i; //@line 5979 "xmlparse.c"
        var $144=$143+4; //@line 5979 "xmlparse.c"
        var $145=HEAP[$144]; //@line 5979 "xmlparse.c"
        var $146=($145)==0; //@line 5979 "xmlparse.c"
        var $147=$pool_addr_i_i; //@line 5980 "xmlparse.c"
        var $148=$147; //@line 5980 "xmlparse.c"
        var $149=HEAP[$148]; //@line 5980 "xmlparse.c"
        if ($146) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 5979 "xmlparse.c"
      case 26: // $bb_i_i
        var $150=$pool_addr_i_i; //@line 5980 "xmlparse.c"
        var $151=$150+4; //@line 5980 "xmlparse.c"
        HEAP[$151]=$149; //@line 5980 "xmlparse.c"
        __label__ = 29; break; //@line 5980 "xmlparse.c"
      case 27: // $bb1_i_i
        $p_i_i=$149; //@line 5982 "xmlparse.c"
        var $152=($149)!=0; //@line 5983 "xmlparse.c"
        if ($152) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 5983 "xmlparse.c"
      case 28: // $bb2_i_i
        var $153=$p_i_i; //@line 5984 "xmlparse.c"
        var $154=$153; //@line 5984 "xmlparse.c"
        var $155=HEAP[$154]; //@line 5984 "xmlparse.c"
        $tem_i_i=$155; //@line 5984 "xmlparse.c"
        var $156=$pool_addr_i_i; //@line 5985 "xmlparse.c"
        var $157=$156+4; //@line 5985 "xmlparse.c"
        var $158=HEAP[$157]; //@line 5985 "xmlparse.c"
        var $159=$p_i_i; //@line 5985 "xmlparse.c"
        var $160=$159; //@line 5985 "xmlparse.c"
        HEAP[$160]=$158; //@line 5985 "xmlparse.c"
        var $161=$pool_addr_i_i; //@line 5986 "xmlparse.c"
        var $162=$161+4; //@line 5986 "xmlparse.c"
        var $163=$p_i_i; //@line 5986 "xmlparse.c"
        HEAP[$162]=$163; //@line 5986 "xmlparse.c"
        var $164=$tem_i_i; //@line 5987 "xmlparse.c"
        $p_i_i=$164; //@line 5987 "xmlparse.c"
        var $165=($164)!=0; //@line 5983 "xmlparse.c"
        if ($165) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 5983 "xmlparse.c"
      case 29: // $poolClear_exit_i
        var $166=$pool_addr_i_i; //@line 5990 "xmlparse.c"
        var $167=$166; //@line 5990 "xmlparse.c"
        HEAP[$167]=0; //@line 5990 "xmlparse.c"
        var $168=$pool_addr_i_i; //@line 5991 "xmlparse.c"
        var $169=$168+16; //@line 5991 "xmlparse.c"
        HEAP[$169]=0; //@line 5991 "xmlparse.c"
        var $170=$pool_addr_i_i; //@line 5992 "xmlparse.c"
        var $171=$170+12; //@line 5992 "xmlparse.c"
        HEAP[$171]=0; //@line 5992 "xmlparse.c"
        var $172=$pool_addr_i_i; //@line 5993 "xmlparse.c"
        var $173=$172+8; //@line 5993 "xmlparse.c"
        HEAP[$173]=0; //@line 5993 "xmlparse.c"
        $handleDefault_i=0; //@line 3742 "xmlparse.c"
        __label__ = 350; break; //@line 3742 "xmlparse.c"
      case 30: // $bb25_i
        var $174=$dtd_i; //@line 3765 "xmlparse.c"
        var $175=$174+129; //@line 3765 "xmlparse.c"
        HEAP[$175]=1; //@line 3765 "xmlparse.c"
        var $176=$parser_addr_i; //@line 3766 "xmlparse.c"
        var $177=$176+84; //@line 3766 "xmlparse.c"
        var $178=HEAP[$177]; //@line 3766 "xmlparse.c"
        var $179=($178)!=0; //@line 3766 "xmlparse.c"
        if ($179) { __label__ = 31; break; } else { __label__ = 36; break; } //@line 3766 "xmlparse.c"
      case 31: // $bb26_i
        var $180=$enc_addr_i; //@line 3767 "xmlparse.c"
        var $181=$180+52; //@line 3767 "xmlparse.c"
        var $182=HEAP[$181]; //@line 3767 "xmlparse.c"
        var $183=HEAP[$next_addr_i]; //@line 3767 "xmlparse.c"
        var $184=$enc_addr_i; //@line 3767 "xmlparse.c"
        var $185=$s_addr_i; //@line 3767 "xmlparse.c"
        var $186=$eventPP_i; //@line 3767 "xmlparse.c"
        var $187=FUNCTION_TABLE[$182]($184, $185, $183, $186); //@line 3767 "xmlparse.c"
        var $188=($187)==0; //@line 3767 "xmlparse.c"
        if ($188) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 3767 "xmlparse.c"
      case 32: // $bb27_i
        $3=32; //@line 3768 "xmlparse.c"
        __label__ = 354; break; //@line 3768 "xmlparse.c"
      case 33: // $bb28_i
        var $189=HEAP[$next_addr_i]; //@line 3769 "xmlparse.c"
        var $190=$enc_addr_i; //@line 3769 "xmlparse.c"
        var $191=$190+64; //@line 3769 "xmlparse.c"
        var $192=HEAP[$191]; //@line 3769 "xmlparse.c"
        var $193=0 - ($192); //@line 3769 "xmlparse.c"
        var $194=$189+$193; //@line 3769 "xmlparse.c"
        var $195=$enc_addr_i; //@line 3769 "xmlparse.c"
        var $196=$195+64; //@line 3769 "xmlparse.c"
        var $197=HEAP[$196]; //@line 3769 "xmlparse.c"
        var $198=$s_addr_i; //@line 3769 "xmlparse.c"
        var $199=$198+$197; //@line 3769 "xmlparse.c"
        var $200=$parser_addr_i; //@line 3769 "xmlparse.c"
        var $201=$200+400; //@line 3769 "xmlparse.c"
        var $202=$enc_addr_i; //@line 3769 "xmlparse.c"
        var $203=_poolStoreString($201, $202, $199, $194); //@line 3769 "xmlparse.c"
        var $204=$parser_addr_i; //@line 3769 "xmlparse.c"
        var $205=$204+312; //@line 3769 "xmlparse.c"
        HEAP[$205]=$203; //@line 3769 "xmlparse.c"
        var $206=$parser_addr_i; //@line 3772 "xmlparse.c"
        var $207=$206+312; //@line 3772 "xmlparse.c"
        var $208=HEAP[$207]; //@line 3772 "xmlparse.c"
        var $209=($208)==0; //@line 3772 "xmlparse.c"
        if ($209) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 3772 "xmlparse.c"
      case 34: // $bb29_i
        $3=1; //@line 3773 "xmlparse.c"
        __label__ = 354; break; //@line 3773 "xmlparse.c"
      case 35: // $bb30_i
        var $210=$parser_addr_i; //@line 3774 "xmlparse.c"
        var $211=$210+312; //@line 3774 "xmlparse.c"
        var $212=HEAP[$211]; //@line 3774 "xmlparse.c"
        _normalizePublicId($212); //@line 3774 "xmlparse.c"
        var $213=$parser_addr_i; //@line 3775 "xmlparse.c"
        var $214=$213+400; //@line 3775 "xmlparse.c"
        var $215=$214+12; //@line 3775 "xmlparse.c"
        var $216=HEAP[$215]; //@line 3775 "xmlparse.c"
        var $217=$parser_addr_i; //@line 3775 "xmlparse.c"
        var $218=$217+400; //@line 3775 "xmlparse.c"
        var $219=$218+16; //@line 3775 "xmlparse.c"
        HEAP[$219]=$216; //@line 3775 "xmlparse.c"
        $handleDefault_i=0; //@line 3776 "xmlparse.c"
        __label__ = 38; break; //@line 3776 "xmlparse.c"
      case 36: // $bb31_i
        var $220=$enc_addr_i; //@line 3781 "xmlparse.c"
        var $221=$220+52; //@line 3781 "xmlparse.c"
        var $222=HEAP[$221]; //@line 3781 "xmlparse.c"
        var $223=HEAP[$next_addr_i]; //@line 3781 "xmlparse.c"
        var $224=$enc_addr_i; //@line 3781 "xmlparse.c"
        var $225=$s_addr_i; //@line 3781 "xmlparse.c"
        var $226=$eventPP_i; //@line 3781 "xmlparse.c"
        var $227=FUNCTION_TABLE[$222]($224, $225, $223, $226); //@line 3781 "xmlparse.c"
        var $228=($227)==0; //@line 3781 "xmlparse.c"
        if ($228) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3781 "xmlparse.c"
      case 37: // $bb32_i
        $3=32; //@line 3782 "xmlparse.c"
        __label__ = 354; break; //@line 3782 "xmlparse.c"
      case 38: // $alreadyChecked_i
        var $229=$dtd_i; //@line 3784 "xmlparse.c"
        var $230=$229+128; //@line 3784 "xmlparse.c"
        var $231=HEAP[$230]; //@line 3784 "xmlparse.c"
        var $232=($231)!=0; //@line 3784 "xmlparse.c"
        if ($232) { __label__ = 39; break; } else { __label__ = 347; break; } //@line 3784 "xmlparse.c"
      case 39: // $bb33_i
        var $233=$parser_addr_i; //@line 3784 "xmlparse.c"
        var $234=$233+300; //@line 3784 "xmlparse.c"
        var $235=HEAP[$234]; //@line 3784 "xmlparse.c"
        var $236=($235)!=0; //@line 3784 "xmlparse.c"
        if ($236) { __label__ = 40; break; } else { __label__ = 347; break; } //@line 3784 "xmlparse.c"
      case 40: // $bb34_i
        var $237=HEAP[$next_addr_i]; //@line 3788 "xmlparse.c"
        var $238=$enc_addr_i; //@line 3788 "xmlparse.c"
        var $239=$238+64; //@line 3788 "xmlparse.c"
        var $240=HEAP[$239]; //@line 3788 "xmlparse.c"
        var $241=0 - ($240); //@line 3788 "xmlparse.c"
        var $242=$237+$241; //@line 3788 "xmlparse.c"
        var $243=$enc_addr_i; //@line 3788 "xmlparse.c"
        var $244=$243+64; //@line 3788 "xmlparse.c"
        var $245=HEAP[$244]; //@line 3788 "xmlparse.c"
        var $246=$s_addr_i; //@line 3788 "xmlparse.c"
        var $247=$246+$245; //@line 3788 "xmlparse.c"
        var $248=$dtd_i; //@line 3788 "xmlparse.c"
        var $249=$248+80; //@line 3788 "xmlparse.c"
        var $250=$enc_addr_i; //@line 3788 "xmlparse.c"
        var $251=_poolStoreString($249, $250, $247, $242); //@line 3788 "xmlparse.c"
        $tem_i=$251; //@line 3788 "xmlparse.c"
        var $252=$tem_i; //@line 3789 "xmlparse.c"
        var $253=($252)==0; //@line 3789 "xmlparse.c"
        if ($253) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 3789 "xmlparse.c"
      case 41: // $bb35_i
        $3=1; //@line 3790 "xmlparse.c"
        __label__ = 354; break; //@line 3790 "xmlparse.c"
      case 42: // $bb36_i
        var $254=$tem_i; //@line 3791 "xmlparse.c"
        _normalizePublicId($254); //@line 3791 "xmlparse.c"
        var $255=$parser_addr_i; //@line 3792 "xmlparse.c"
        var $256=$255+300; //@line 3792 "xmlparse.c"
        var $257=HEAP[$256]; //@line 3792 "xmlparse.c"
        var $258=$257+24; //@line 3792 "xmlparse.c"
        var $259=$tem_i; //@line 3792 "xmlparse.c"
        HEAP[$258]=$259; //@line 3792 "xmlparse.c"
        var $260=$dtd_i; //@line 3793 "xmlparse.c"
        var $261=$260+80; //@line 3793 "xmlparse.c"
        var $262=$261+12; //@line 3793 "xmlparse.c"
        var $263=HEAP[$262]; //@line 3793 "xmlparse.c"
        var $264=$dtd_i; //@line 3793 "xmlparse.c"
        var $265=$264+80; //@line 3793 "xmlparse.c"
        var $266=$265+16; //@line 3793 "xmlparse.c"
        HEAP[$266]=$263; //@line 3793 "xmlparse.c"
        var $267=$parser_addr_i; //@line 3794 "xmlparse.c"
        var $268=$267+136; //@line 3794 "xmlparse.c"
        var $269=HEAP[$268]; //@line 3794 "xmlparse.c"
        var $270=($269)!=0; //@line 3794 "xmlparse.c"
        if ($270) { __label__ = 43; break; } else { __label__ = 347; break; } //@line 3794 "xmlparse.c"
      case 43: // $bb37_i
        $handleDefault_i=0; //@line 3795 "xmlparse.c"
        __label__ = 350; break; //@line 3795 "xmlparse.c"
      case 44: // $bb39_i
        var $271=$parser_addr_i; //@line 3799 "xmlparse.c"
        var $272=$271+304; //@line 3799 "xmlparse.c"
        var $273=HEAP[$272]; //@line 3799 "xmlparse.c"
        var $274=($273)!=0; //@line 3799 "xmlparse.c"
        if ($274) { __label__ = 45; break; } else { __label__ = 50; break; } //@line 3799 "xmlparse.c"
      case 45: // $bb40_i
        var $275=$parser_addr_i; //@line 3800 "xmlparse.c"
        var $276=$275+84; //@line 3800 "xmlparse.c"
        var $277=HEAP[$276]; //@line 3800 "xmlparse.c"
        var $278=$parser_addr_i; //@line 3800 "xmlparse.c"
        var $279=$278+312; //@line 3800 "xmlparse.c"
        var $280=HEAP[$279]; //@line 3800 "xmlparse.c"
        var $281=$parser_addr_i; //@line 3800 "xmlparse.c"
        var $282=$281+308; //@line 3800 "xmlparse.c"
        var $283=HEAP[$282]; //@line 3800 "xmlparse.c"
        var $284=$parser_addr_i; //@line 3800 "xmlparse.c"
        var $285=$284+304; //@line 3800 "xmlparse.c"
        var $286=HEAP[$285]; //@line 3800 "xmlparse.c"
        var $287=$parser_addr_i; //@line 3800 "xmlparse.c"
        var $288=$287+4; //@line 3800 "xmlparse.c"
        var $289=HEAP[$288]; //@line 3800 "xmlparse.c"
        FUNCTION_TABLE[$277]($289, $286, $283, $280, 0); //@line 3800 "xmlparse.c"
        var $290=$parser_addr_i; //@line 3802 "xmlparse.c"
        var $291=$290+400; //@line 3802 "xmlparse.c"
        $pool_addr_i1_i=$291;
        var $292=$pool_addr_i1_i; //@line 5979 "xmlparse.c"
        var $293=$292+4; //@line 5979 "xmlparse.c"
        var $294=HEAP[$293]; //@line 5979 "xmlparse.c"
        var $295=($294)==0; //@line 5979 "xmlparse.c"
        var $296=$pool_addr_i1_i; //@line 5980 "xmlparse.c"
        var $297=$296; //@line 5980 "xmlparse.c"
        var $298=HEAP[$297]; //@line 5980 "xmlparse.c"
        if ($295) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 5979 "xmlparse.c"
      case 46: // $bb_i4_i
        var $299=$pool_addr_i1_i; //@line 5980 "xmlparse.c"
        var $300=$299+4; //@line 5980 "xmlparse.c"
        HEAP[$300]=$298; //@line 5980 "xmlparse.c"
        __label__ = 49; break; //@line 5980 "xmlparse.c"
      case 47: // $bb1_i5_i
        $p_i2_i=$298; //@line 5982 "xmlparse.c"
        var $301=($298)!=0; //@line 5983 "xmlparse.c"
        if ($301) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 5983 "xmlparse.c"
      case 48: // $bb2_i6_i
        var $302=$p_i2_i; //@line 5984 "xmlparse.c"
        var $303=$302; //@line 5984 "xmlparse.c"
        var $304=HEAP[$303]; //@line 5984 "xmlparse.c"
        $tem_i3_i=$304; //@line 5984 "xmlparse.c"
        var $305=$pool_addr_i1_i; //@line 5985 "xmlparse.c"
        var $306=$305+4; //@line 5985 "xmlparse.c"
        var $307=HEAP[$306]; //@line 5985 "xmlparse.c"
        var $308=$p_i2_i; //@line 5985 "xmlparse.c"
        var $309=$308; //@line 5985 "xmlparse.c"
        HEAP[$309]=$307; //@line 5985 "xmlparse.c"
        var $310=$pool_addr_i1_i; //@line 5986 "xmlparse.c"
        var $311=$310+4; //@line 5986 "xmlparse.c"
        var $312=$p_i2_i; //@line 5986 "xmlparse.c"
        HEAP[$311]=$312; //@line 5986 "xmlparse.c"
        var $313=$tem_i3_i; //@line 5987 "xmlparse.c"
        $p_i2_i=$313; //@line 5987 "xmlparse.c"
        var $314=($313)!=0; //@line 5983 "xmlparse.c"
        if ($314) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 5983 "xmlparse.c"
      case 49: // $poolClear_exit7_i
        var $315=$pool_addr_i1_i; //@line 5990 "xmlparse.c"
        var $316=$315; //@line 5990 "xmlparse.c"
        HEAP[$316]=0; //@line 5990 "xmlparse.c"
        var $317=$pool_addr_i1_i; //@line 5991 "xmlparse.c"
        var $318=$317+16; //@line 5991 "xmlparse.c"
        HEAP[$318]=0; //@line 5991 "xmlparse.c"
        var $319=$pool_addr_i1_i; //@line 5992 "xmlparse.c"
        var $320=$319+12; //@line 5992 "xmlparse.c"
        HEAP[$320]=0; //@line 5992 "xmlparse.c"
        var $321=$pool_addr_i1_i; //@line 5993 "xmlparse.c"
        var $322=$321+8; //@line 5993 "xmlparse.c"
        HEAP[$322]=0; //@line 5993 "xmlparse.c"
        $handleDefault_i=0; //@line 3803 "xmlparse.c"
        __label__ = 50; break; //@line 3803 "xmlparse.c"
      case 50: // $bb41_i
        var $323=$parser_addr_i; //@line 3844 "xmlparse.c"
        var $324=$323+88; //@line 3844 "xmlparse.c"
        var $325=HEAP[$324]; //@line 3844 "xmlparse.c"
        var $326=($325)!=0; //@line 3844 "xmlparse.c"
        if ($326) { __label__ = 51; break; } else { __label__ = 347; break; } //@line 3844 "xmlparse.c"
      case 51: // $bb42_i
        var $327=$parser_addr_i; //@line 3845 "xmlparse.c"
        var $328=$327+88; //@line 3845 "xmlparse.c"
        var $329=HEAP[$328]; //@line 3845 "xmlparse.c"
        var $330=$parser_addr_i; //@line 3845 "xmlparse.c"
        var $331=$330+4; //@line 3845 "xmlparse.c"
        var $332=HEAP[$331]; //@line 3845 "xmlparse.c"
        FUNCTION_TABLE[$329]($332); //@line 3845 "xmlparse.c"
        $handleDefault_i=0; //@line 3846 "xmlparse.c"
        __label__ = 350; break; //@line 3846 "xmlparse.c"
      case 52: // $bb44_i
        var $333=$parser_addr_i; //@line 3886 "xmlparse.c"
        var $334=$333+264; //@line 3886 "xmlparse.c"
        HEAP[$334]=(FUNCTION_TABLE_OFFSET + 66); //@line 3886 "xmlparse.c"
        var $335=$parser_addr_i; //@line 3887 "xmlparse.c"
        var $336=$s_addr_i; //@line 3887 "xmlparse.c"
        var $337=$end_addr_i; //@line 3887 "xmlparse.c"
        var $338=$nextPtr_addr_i; //@line 3887 "xmlparse.c"
        var $339=_contentProcessor($335, $336, $337, $338); //@line 3887 "xmlparse.c"
        $3=$339; //@line 3887 "xmlparse.c"
        __label__ = 354; break; //@line 3887 "xmlparse.c"
      case 53: // $bb45_i
        var $340=HEAP[$next_addr_i]; //@line 3889 "xmlparse.c"
        var $341=$parser_addr_i; //@line 3889 "xmlparse.c"
        var $342=$enc_addr_i; //@line 3889 "xmlparse.c"
        var $343=$s_addr_i; //@line 3889 "xmlparse.c"
        var $344=_getElementType($341, $342, $343, $340); //@line 3889 "xmlparse.c"
        var $345=$parser_addr_i; //@line 3889 "xmlparse.c"
        var $346=$345+328; //@line 3889 "xmlparse.c"
        HEAP[$346]=$344; //@line 3889 "xmlparse.c"
        var $347=$parser_addr_i; //@line 3890 "xmlparse.c"
        var $348=$347+328; //@line 3890 "xmlparse.c"
        var $349=HEAP[$348]; //@line 3890 "xmlparse.c"
        var $350=($349)==0; //@line 3890 "xmlparse.c"
        if ($350) { __label__ = 54; break; } else { __label__ = 66; break; } //@line 3890 "xmlparse.c"
      case 54: // $bb46_i
        $3=1; //@line 3891 "xmlparse.c"
        __label__ = 354; break; //@line 3891 "xmlparse.c"
      case 55: // $bb48_i
        var $351=HEAP[$next_addr_i]; //@line 3894 "xmlparse.c"
        var $352=$parser_addr_i; //@line 3894 "xmlparse.c"
        var $353=$enc_addr_i; //@line 3894 "xmlparse.c"
        var $354=$s_addr_i; //@line 3894 "xmlparse.c"
        var $355=_getAttributeId($352, $353, $354, $351); //@line 3894 "xmlparse.c"
        var $356=$parser_addr_i; //@line 3894 "xmlparse.c"
        var $357=$356+332; //@line 3894 "xmlparse.c"
        HEAP[$357]=$355; //@line 3894 "xmlparse.c"
        var $358=$parser_addr_i; //@line 3895 "xmlparse.c"
        var $359=$358+332; //@line 3895 "xmlparse.c"
        var $360=HEAP[$359]; //@line 3895 "xmlparse.c"
        var $361=($360)==0; //@line 3895 "xmlparse.c"
        if ($361) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 3895 "xmlparse.c"
      case 56: // $bb49_i
        $3=1; //@line 3896 "xmlparse.c"
        __label__ = 354; break; //@line 3896 "xmlparse.c"
      case 57: // $bb50_i
        var $362=$parser_addr_i; //@line 3897 "xmlparse.c"
        var $363=$362+336; //@line 3897 "xmlparse.c"
        HEAP[$363]=0; //@line 3897 "xmlparse.c"
        var $364=$parser_addr_i; //@line 3898 "xmlparse.c"
        var $365=$364+316; //@line 3898 "xmlparse.c"
        HEAP[$365]=0; //@line 3898 "xmlparse.c"
        var $366=$parser_addr_i; //@line 3899 "xmlparse.c"
        var $367=$366+337; //@line 3899 "xmlparse.c"
        HEAP[$367]=0; //@line 3899 "xmlparse.c"
        __label__ = 66; break; //@line 3899 "xmlparse.c"
      case 58: // $bb51_i
        var $368=$parser_addr_i; //@line 3902 "xmlparse.c"
        var $369=$368+336; //@line 3902 "xmlparse.c"
        HEAP[$369]=1; //@line 3902 "xmlparse.c"
        var $370=$parser_addr_i; //@line 3903 "xmlparse.c"
        var $371=$370+316; //@line 3903 "xmlparse.c"
        HEAP[$371]=_atypeCDATA_5618; //@line 3903 "xmlparse.c"
        __label__ = 66; break; //@line 3903 "xmlparse.c"
      case 59: // $bb52_i
        var $372=$parser_addr_i; //@line 3906 "xmlparse.c"
        var $373=$372+337; //@line 3906 "xmlparse.c"
        HEAP[$373]=1; //@line 3906 "xmlparse.c"
        var $374=$parser_addr_i; //@line 3907 "xmlparse.c"
        var $375=$374+316; //@line 3907 "xmlparse.c"
        HEAP[$375]=_atypeID_5619; //@line 3907 "xmlparse.c"
        __label__ = 66; break; //@line 3907 "xmlparse.c"
      case 60: // $bb53_i
        var $376=$parser_addr_i; //@line 3910 "xmlparse.c"
        var $377=$376+316; //@line 3910 "xmlparse.c"
        HEAP[$377]=_atypeIDREF_5620; //@line 3910 "xmlparse.c"
        __label__ = 66; break; //@line 3910 "xmlparse.c"
      case 61: // $bb54_i
        var $378=$parser_addr_i; //@line 3913 "xmlparse.c"
        var $379=$378+316; //@line 3913 "xmlparse.c"
        HEAP[$379]=_atypeIDREFS_5621; //@line 3913 "xmlparse.c"
        __label__ = 66; break; //@line 3913 "xmlparse.c"
      case 62: // $bb55_i
        var $380=$parser_addr_i; //@line 3916 "xmlparse.c"
        var $381=$380+316; //@line 3916 "xmlparse.c"
        HEAP[$381]=_atypeENTITY_5622; //@line 3916 "xmlparse.c"
        __label__ = 66; break; //@line 3916 "xmlparse.c"
      case 63: // $bb56_i
        var $382=$parser_addr_i; //@line 3919 "xmlparse.c"
        var $383=$382+316; //@line 3919 "xmlparse.c"
        HEAP[$383]=_atypeENTITIES_5623; //@line 3919 "xmlparse.c"
        __label__ = 66; break; //@line 3919 "xmlparse.c"
      case 64: // $bb57_i
        var $384=$parser_addr_i; //@line 3922 "xmlparse.c"
        var $385=$384+316; //@line 3922 "xmlparse.c"
        HEAP[$385]=_atypeNMTOKEN_5624; //@line 3922 "xmlparse.c"
        __label__ = 66; break; //@line 3922 "xmlparse.c"
      case 65: // $bb58_i
        var $386=$parser_addr_i; //@line 3925 "xmlparse.c"
        var $387=$386+316; //@line 3925 "xmlparse.c"
        HEAP[$387]=_atypeNMTOKENS_5625; //@line 3925 "xmlparse.c"
        __label__ = 66; break; //@line 3926 "xmlparse.c"
      case 66: // $checkAttListDeclHandler_i
        var $388=$dtd_i; //@line 3927 "xmlparse.c"
        var $389=$388+128; //@line 3927 "xmlparse.c"
        var $390=HEAP[$389]; //@line 3927 "xmlparse.c"
        var $391=($390)!=0; //@line 3927 "xmlparse.c"
        if ($391) { __label__ = 67; break; } else { __label__ = 347; break; } //@line 3927 "xmlparse.c"
      case 67: // $bb59_i
        var $392=$parser_addr_i; //@line 3927 "xmlparse.c"
        var $393=$392+132; //@line 3927 "xmlparse.c"
        var $394=HEAP[$393]; //@line 3927 "xmlparse.c"
        var $395=($394)!=0; //@line 3927 "xmlparse.c"
        if ($395) { __label__ = 68; break; } else { __label__ = 347; break; } //@line 3927 "xmlparse.c"
      case 68: // $bb60_i
        $handleDefault_i=0; //@line 3928 "xmlparse.c"
        __label__ = 350; break; //@line 3928 "xmlparse.c"
      case 69: // $bb62_i
        var $396=$dtd_i; //@line 3932 "xmlparse.c"
        var $397=$396+128; //@line 3932 "xmlparse.c"
        var $398=HEAP[$397]; //@line 3932 "xmlparse.c"
        var $399=($398)!=0; //@line 3932 "xmlparse.c"
        if ($399) { __label__ = 70; break; } else { __label__ = 347; break; } //@line 3932 "xmlparse.c"
      case 70: // $bb63_i
        var $400=$parser_addr_i; //@line 3932 "xmlparse.c"
        var $401=$400+132; //@line 3932 "xmlparse.c"
        var $402=HEAP[$401]; //@line 3932 "xmlparse.c"
        var $403=($402)!=0; //@line 3932 "xmlparse.c"
        if ($403) { __label__ = 71; break; } else { __label__ = 347; break; } //@line 3932 "xmlparse.c"
      case 71: // $bb64_i
        var $404=$parser_addr_i; //@line 3934 "xmlparse.c"
        var $405=$404+316; //@line 3934 "xmlparse.c"
        var $406=HEAP[$405]; //@line 3934 "xmlparse.c"
        var $407=($406)!=0; //@line 3934 "xmlparse.c"
        if ($407) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 3934 "xmlparse.c"
      case 72: // $bb65_i
        $prefix_i=_enumValueSep_5627; //@line 3935 "xmlparse.c"
        __label__ = 77; break; //@line 3935 "xmlparse.c"
      case 73: // $bb66_i
        var $408=$role_i; //@line 3938 "xmlparse.c"
        var $409=($408)==32; //@line 3938 "xmlparse.c"
        if ($409) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 3938 "xmlparse.c"
      case 74: // $bb67_i
        $iftmp_192_i=_notationPrefix_5626; //@line 3938 "xmlparse.c"
        __label__ = 76; break; //@line 3938 "xmlparse.c"
      case 75: // $bb68_i
        $iftmp_192_i=_enumValueStart_5628; //@line 3938 "xmlparse.c"
        __label__ = 76; break; //@line 3938 "xmlparse.c"
      case 76: // $bb69_i
        var $410=$iftmp_192_i; //@line 3938 "xmlparse.c"
        $prefix_i=$410; //@line 3938 "xmlparse.c"
        __label__ = 77; break; //@line 3938 "xmlparse.c"
      case 77: // $bb70_i
        var $411=$parser_addr_i; //@line 3942 "xmlparse.c"
        var $412=$411+400; //@line 3942 "xmlparse.c"
        var $413=$prefix_i; //@line 3942 "xmlparse.c"
        $pool_addr_i8_i=$412;
        $s_addr_i_i=$413;
        __label__ = 82; break; //@line 6058 "xmlparse.c"
      case 78: // $bb_i9_i
        var $414=$436+12; //@line 6059 "xmlparse.c"
        var $415=HEAP[$414]; //@line 6059 "xmlparse.c"
        var $416=$pool_addr_i8_i; //@line 6059 "xmlparse.c"
        var $417=$416+8; //@line 6059 "xmlparse.c"
        var $418=HEAP[$417]; //@line 6059 "xmlparse.c"
        var $419=($415)!=($418); //@line 6059 "xmlparse.c"
        if ($419) { __label__ = 81; break; } else { __label__ = 79; break; } //@line 6059 "xmlparse.c"
      case 79: // $bb1_i10_i
        var $420=$pool_addr_i8_i; //@line 6059 "xmlparse.c"
        var $421=_poolGrow($420); //@line 6059 "xmlparse.c"
        var $422=($421)!=0; //@line 6059 "xmlparse.c"
        if ($422) { __label__ = 81; break; } else { __label__ = 80; break; } //@line 6059 "xmlparse.c"
      case 80: // $poolAppendString_exit_thread_i
        $iftmp_280_i_i=1; //@line 6059 "xmlparse.c"
        $2=0; //@line 6060 "xmlparse.c"
        $retval_i_i=0; //@line 6060 "xmlparse.c"
        __label__ = 84; break;
      case 81: // $bb6_i_i
        var $423=$pool_addr_i8_i; //@line 6059 "xmlparse.c"
        var $424=$423+12; //@line 6059 "xmlparse.c"
        var $425=HEAP[$424]; //@line 6059 "xmlparse.c"
        var $426=$s_addr_i_i; //@line 6059 "xmlparse.c"
        var $427=HEAP[$426]; //@line 6059 "xmlparse.c"
        HEAP[$425]=$427; //@line 6059 "xmlparse.c"
        var $428=$425+1; //@line 6059 "xmlparse.c"
        var $429=$pool_addr_i8_i; //@line 6059 "xmlparse.c"
        var $430=$429+12; //@line 6059 "xmlparse.c"
        HEAP[$430]=$428; //@line 6059 "xmlparse.c"
        $iftmp_280_i_i=0; //@line 6059 "xmlparse.c"
        var $431=$s_addr_i_i; //@line 6061 "xmlparse.c"
        var $432=$431+1; //@line 6061 "xmlparse.c"
        $s_addr_i_i=$432; //@line 6061 "xmlparse.c"
        __label__ = 82; break; //@line 6061 "xmlparse.c"
      case 82: // $bb7_i_i
        var $433=$s_addr_i_i; //@line 6058 "xmlparse.c"
        var $434=HEAP[$433]; //@line 6058 "xmlparse.c"
        var $435=($434)!=0; //@line 6058 "xmlparse.c"
        var $436=$pool_addr_i8_i; //@line 6059 "xmlparse.c"
        if ($435) { __label__ = 78; break; } else { __label__ = 83; break; } //@line 6058 "xmlparse.c"
      case 83: // $poolAppendString_exit_i
        var $437=$436+16; //@line 6063 "xmlparse.c"
        var $438=HEAP[$437]; //@line 6063 "xmlparse.c"
        $2=$438; //@line 6063 "xmlparse.c"
        $retval_i_i=$438; //@line 6060 "xmlparse.c"
        var $439=($438)==0; //@line 3942 "xmlparse.c"
        if ($439) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 3942 "xmlparse.c"
      case 84: // $bb71_i
        $3=1; //@line 3943 "xmlparse.c"
        __label__ = 354; break; //@line 3943 "xmlparse.c"
      case 85: // $bb72_i
        var $440=HEAP[$next_addr_i]; //@line 3944 "xmlparse.c"
        var $441=$parser_addr_i; //@line 3944 "xmlparse.c"
        var $442=$441+400; //@line 3944 "xmlparse.c"
        var $443=$enc_addr_i; //@line 3944 "xmlparse.c"
        var $444=$s_addr_i; //@line 3944 "xmlparse.c"
        var $445=_poolAppend($442, $443, $444, $440); //@line 3944 "xmlparse.c"
        var $446=($445)==0; //@line 3944 "xmlparse.c"
        if ($446) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 3944 "xmlparse.c"
      case 86: // $bb73_i
        $3=1; //@line 3945 "xmlparse.c"
        __label__ = 354; break; //@line 3945 "xmlparse.c"
      case 87: // $bb74_i
        var $447=$parser_addr_i; //@line 3946 "xmlparse.c"
        var $448=$447+400; //@line 3946 "xmlparse.c"
        var $449=$448+16; //@line 3946 "xmlparse.c"
        var $450=HEAP[$449]; //@line 3946 "xmlparse.c"
        var $451=$parser_addr_i; //@line 3946 "xmlparse.c"
        var $452=$451+316; //@line 3946 "xmlparse.c"
        HEAP[$452]=$450; //@line 3946 "xmlparse.c"
        $handleDefault_i=0; //@line 3947 "xmlparse.c"
        __label__ = 350; break; //@line 3947 "xmlparse.c"
      case 88: // $bb76_i
        var $453=$dtd_i; //@line 3952 "xmlparse.c"
        var $454=$453+128; //@line 3952 "xmlparse.c"
        var $455=HEAP[$454]; //@line 3952 "xmlparse.c"
        var $456=($455)!=0; //@line 3952 "xmlparse.c"
        if ($456) { __label__ = 89; break; } else { __label__ = 347; break; } //@line 3952 "xmlparse.c"
      case 89: // $bb77_i
        var $457=$parser_addr_i; //@line 3953 "xmlparse.c"
        var $458=$457+337; //@line 3953 "xmlparse.c"
        var $459=HEAP[$458]; //@line 3953 "xmlparse.c"
        var $460=($459); //@line 3953 "xmlparse.c"
        var $461=$parser_addr_i; //@line 3953 "xmlparse.c"
        var $462=$461+336; //@line 3953 "xmlparse.c"
        var $463=HEAP[$462]; //@line 3953 "xmlparse.c"
        var $464=($463); //@line 3953 "xmlparse.c"
        var $465=$parser_addr_i; //@line 3953 "xmlparse.c"
        var $466=$465+332; //@line 3953 "xmlparse.c"
        var $467=HEAP[$466]; //@line 3953 "xmlparse.c"
        var $468=$parser_addr_i; //@line 3953 "xmlparse.c"
        var $469=$468+328; //@line 3953 "xmlparse.c"
        var $470=HEAP[$469]; //@line 3953 "xmlparse.c"
        var $471=((($464)) & 255); //@line 3953 "xmlparse.c"
        var $472=((($460)) & 255); //@line 3953 "xmlparse.c"
        var $473=$parser_addr_i; //@line 3953 "xmlparse.c"
        var $474=_defineAttribute($470, $467, $471, $472, 0, $473); //@line 3953 "xmlparse.c"
        var $475=($474)==0; //@line 3953 "xmlparse.c"
        if ($475) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 3953 "xmlparse.c"
      case 90: // $bb78_i
        $3=1; //@line 3956 "xmlparse.c"
        __label__ = 354; break; //@line 3956 "xmlparse.c"
      case 91: // $bb79_i
        var $476=$parser_addr_i; //@line 3957 "xmlparse.c"
        var $477=$476+132; //@line 3957 "xmlparse.c"
        var $478=HEAP[$477]; //@line 3957 "xmlparse.c"
        var $479=($478)!=0; //@line 3957 "xmlparse.c"
        if ($479) { __label__ = 92; break; } else { __label__ = 347; break; } //@line 3957 "xmlparse.c"
      case 92: // $bb80_i
        var $480=$parser_addr_i; //@line 3957 "xmlparse.c"
        var $481=$480+316; //@line 3957 "xmlparse.c"
        var $482=HEAP[$481]; //@line 3957 "xmlparse.c"
        var $483=($482)!=0; //@line 3957 "xmlparse.c"
        if ($483) { __label__ = 93; break; } else { __label__ = 347; break; } //@line 3957 "xmlparse.c"
      case 93: // $bb81_i
        var $484=$parser_addr_i; //@line 3958 "xmlparse.c"
        var $485=$484+316; //@line 3958 "xmlparse.c"
        var $486=HEAP[$485]; //@line 3958 "xmlparse.c"
        var $487=HEAP[$486]; //@line 3958 "xmlparse.c"
        var $488=($487)==40; //@line 3958 "xmlparse.c"
        if ($488) { __label__ = 96; break; } else { __label__ = 94; break; } //@line 3958 "xmlparse.c"
      case 94: // $bb82_i
        var $489=$parser_addr_i; //@line 3958 "xmlparse.c"
        var $490=$489+316; //@line 3958 "xmlparse.c"
        var $491=HEAP[$490]; //@line 3958 "xmlparse.c"
        var $492=HEAP[$491]; //@line 3958 "xmlparse.c"
        var $493=($492)!=78; //@line 3958 "xmlparse.c"
        if ($493) { __label__ = 102; break; } else { __label__ = 95; break; } //@line 3958 "xmlparse.c"
      case 95: // $bb83_i
        var $494=$parser_addr_i; //@line 3958 "xmlparse.c"
        var $495=$494+316; //@line 3958 "xmlparse.c"
        var $496=HEAP[$495]; //@line 3958 "xmlparse.c"
        var $497=$496+1; //@line 3958 "xmlparse.c"
        var $498=HEAP[$497]; //@line 3958 "xmlparse.c"
        var $499=($498)==79; //@line 3958 "xmlparse.c"
        if ($499) { __label__ = 96; break; } else { __label__ = 102; break; } //@line 3958 "xmlparse.c"
      case 96: // $bb84_i
        var $500=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $501=$500+400; //@line 3962 "xmlparse.c"
        var $502=$501+12; //@line 3962 "xmlparse.c"
        var $503=HEAP[$502]; //@line 3962 "xmlparse.c"
        var $504=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $505=$504+400; //@line 3962 "xmlparse.c"
        var $506=$505+8; //@line 3962 "xmlparse.c"
        var $507=HEAP[$506]; //@line 3962 "xmlparse.c"
        var $508=($503)!=($507); //@line 3962 "xmlparse.c"
        if ($508) { __label__ = 98; break; } else { __label__ = 97; break; } //@line 3962 "xmlparse.c"
      case 97: // $bb85_i
        var $509=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $510=$509+400; //@line 3962 "xmlparse.c"
        var $511=_poolGrow($510); //@line 3962 "xmlparse.c"
        var $512=($511)!=0; //@line 3962 "xmlparse.c"
        if ($512) { __label__ = 98; break; } else { __label__ = 101; break; } //@line 3962 "xmlparse.c"
      case 98: // $bb86_i
        var $513=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $514=$513+400; //@line 3962 "xmlparse.c"
        var $515=$514+12; //@line 3962 "xmlparse.c"
        var $516=HEAP[$515]; //@line 3962 "xmlparse.c"
        HEAP[$516]=41; //@line 3962 "xmlparse.c"
        var $517=$516+1; //@line 3962 "xmlparse.c"
        var $518=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $519=$518+400; //@line 3962 "xmlparse.c"
        var $520=$519+12; //@line 3962 "xmlparse.c"
        HEAP[$520]=$517; //@line 3962 "xmlparse.c"
        var $521=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $522=$521+400; //@line 3962 "xmlparse.c"
        var $523=$522+12; //@line 3962 "xmlparse.c"
        var $524=HEAP[$523]; //@line 3962 "xmlparse.c"
        var $525=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $526=$525+400; //@line 3962 "xmlparse.c"
        var $527=$526+8; //@line 3962 "xmlparse.c"
        var $528=HEAP[$527]; //@line 3962 "xmlparse.c"
        var $529=($524)!=($528); //@line 3962 "xmlparse.c"
        if ($529) { __label__ = 100; break; } else { __label__ = 99; break; } //@line 3962 "xmlparse.c"
      case 99: // $bb88_i
        var $530=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $531=$530+400; //@line 3962 "xmlparse.c"
        var $532=_poolGrow($531); //@line 3962 "xmlparse.c"
        var $533=($532)!=0; //@line 3962 "xmlparse.c"
        if ($533) { __label__ = 100; break; } else { __label__ = 101; break; } //@line 3962 "xmlparse.c"
      case 100: // $bb89_i
        var $534=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $535=$534+400; //@line 3962 "xmlparse.c"
        var $536=$535+12; //@line 3962 "xmlparse.c"
        var $537=HEAP[$536]; //@line 3962 "xmlparse.c"
        HEAP[$537]=0; //@line 3962 "xmlparse.c"
        var $538=$537+1; //@line 3962 "xmlparse.c"
        var $539=$parser_addr_i; //@line 3962 "xmlparse.c"
        var $540=$539+400; //@line 3962 "xmlparse.c"
        var $541=$540+12; //@line 3962 "xmlparse.c"
        HEAP[$541]=$538; //@line 3962 "xmlparse.c"
        var $542=$parser_addr_i; //@line 3965 "xmlparse.c"
        var $543=$542+400; //@line 3965 "xmlparse.c"
        var $544=$543+16; //@line 3965 "xmlparse.c"
        var $545=HEAP[$544]; //@line 3965 "xmlparse.c"
        var $546=$parser_addr_i; //@line 3965 "xmlparse.c"
        var $547=$546+316; //@line 3965 "xmlparse.c"
        HEAP[$547]=$545; //@line 3965 "xmlparse.c"
        var $548=$parser_addr_i; //@line 3966 "xmlparse.c"
        var $549=$548+400; //@line 3966 "xmlparse.c"
        var $550=$549+12; //@line 3966 "xmlparse.c"
        var $551=HEAP[$550]; //@line 3966 "xmlparse.c"
        var $552=$parser_addr_i; //@line 3966 "xmlparse.c"
        var $553=$552+400; //@line 3966 "xmlparse.c"
        var $554=$553+16; //@line 3966 "xmlparse.c"
        HEAP[$554]=$551; //@line 3966 "xmlparse.c"
        __label__ = 102; break; //@line 3966 "xmlparse.c"
      case 101: // $bb90_i
        $3=1; //@line 3964 "xmlparse.c"
        __label__ = 354; break; //@line 3964 "xmlparse.c"
      case 102: // $bb91_i
        var $555=$eventEndPP_i; //@line 3968 "xmlparse.c"
        var $556=$s_addr_i; //@line 3968 "xmlparse.c"
        HEAP[$555]=$556; //@line 3968 "xmlparse.c"
        var $557=$parser_addr_i; //@line 3969 "xmlparse.c"
        var $558=$557+132; //@line 3969 "xmlparse.c"
        var $559=HEAP[$558]; //@line 3969 "xmlparse.c"
        var $560=$role_i; //@line 3969 "xmlparse.c"
        var $561=($560)==36; //@line 3969 "xmlparse.c"
        var $562=($561); //@line 3969 "xmlparse.c"
        var $563=$parser_addr_i; //@line 3969 "xmlparse.c"
        var $564=$563+316; //@line 3969 "xmlparse.c"
        var $565=HEAP[$564]; //@line 3969 "xmlparse.c"
        var $566=$parser_addr_i; //@line 3969 "xmlparse.c"
        var $567=$566+332; //@line 3969 "xmlparse.c"
        var $568=HEAP[$567]; //@line 3969 "xmlparse.c"
        var $569=$568; //@line 3969 "xmlparse.c"
        var $570=HEAP[$569]; //@line 3969 "xmlparse.c"
        var $571=$parser_addr_i; //@line 3969 "xmlparse.c"
        var $572=$571+328; //@line 3969 "xmlparse.c"
        var $573=HEAP[$572]; //@line 3969 "xmlparse.c"
        var $574=$573; //@line 3969 "xmlparse.c"
        var $575=HEAP[$574]; //@line 3969 "xmlparse.c"
        var $576=$parser_addr_i; //@line 3969 "xmlparse.c"
        var $577=$576+4; //@line 3969 "xmlparse.c"
        var $578=HEAP[$577]; //@line 3969 "xmlparse.c"
        FUNCTION_TABLE[$559]($578, $575, $570, $565, 0, $562); //@line 3969 "xmlparse.c"
        var $579=$parser_addr_i; //@line 3972 "xmlparse.c"
        var $580=$579+400; //@line 3972 "xmlparse.c"
        $pool_addr_i11_i=$580;
        var $581=$pool_addr_i11_i; //@line 5979 "xmlparse.c"
        var $582=$581+4; //@line 5979 "xmlparse.c"
        var $583=HEAP[$582]; //@line 5979 "xmlparse.c"
        var $584=($583)==0; //@line 5979 "xmlparse.c"
        var $585=$pool_addr_i11_i; //@line 5980 "xmlparse.c"
        var $586=$585; //@line 5980 "xmlparse.c"
        var $587=HEAP[$586]; //@line 5980 "xmlparse.c"
        if ($584) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 5979 "xmlparse.c"
      case 103: // $bb_i14_i
        var $588=$pool_addr_i11_i; //@line 5980 "xmlparse.c"
        var $589=$588+4; //@line 5980 "xmlparse.c"
        HEAP[$589]=$587; //@line 5980 "xmlparse.c"
        __label__ = 106; break; //@line 5980 "xmlparse.c"
      case 104: // $bb1_i15_i
        $p_i12_i=$587; //@line 5982 "xmlparse.c"
        var $590=($587)!=0; //@line 5983 "xmlparse.c"
        if ($590) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 5983 "xmlparse.c"
      case 105: // $bb2_i16_i
        var $591=$p_i12_i; //@line 5984 "xmlparse.c"
        var $592=$591; //@line 5984 "xmlparse.c"
        var $593=HEAP[$592]; //@line 5984 "xmlparse.c"
        $tem_i13_i=$593; //@line 5984 "xmlparse.c"
        var $594=$pool_addr_i11_i; //@line 5985 "xmlparse.c"
        var $595=$594+4; //@line 5985 "xmlparse.c"
        var $596=HEAP[$595]; //@line 5985 "xmlparse.c"
        var $597=$p_i12_i; //@line 5985 "xmlparse.c"
        var $598=$597; //@line 5985 "xmlparse.c"
        HEAP[$598]=$596; //@line 5985 "xmlparse.c"
        var $599=$pool_addr_i11_i; //@line 5986 "xmlparse.c"
        var $600=$599+4; //@line 5986 "xmlparse.c"
        var $601=$p_i12_i; //@line 5986 "xmlparse.c"
        HEAP[$600]=$601; //@line 5986 "xmlparse.c"
        var $602=$tem_i13_i; //@line 5987 "xmlparse.c"
        $p_i12_i=$602; //@line 5987 "xmlparse.c"
        var $603=($602)!=0; //@line 5983 "xmlparse.c"
        if ($603) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 5983 "xmlparse.c"
      case 106: // $poolClear_exit17_i
        var $604=$pool_addr_i11_i; //@line 5990 "xmlparse.c"
        var $605=$604; //@line 5990 "xmlparse.c"
        HEAP[$605]=0; //@line 5990 "xmlparse.c"
        var $606=$pool_addr_i11_i; //@line 5991 "xmlparse.c"
        var $607=$606+16; //@line 5991 "xmlparse.c"
        HEAP[$607]=0; //@line 5991 "xmlparse.c"
        var $608=$pool_addr_i11_i; //@line 5992 "xmlparse.c"
        var $609=$608+12; //@line 5992 "xmlparse.c"
        HEAP[$609]=0; //@line 5992 "xmlparse.c"
        var $610=$pool_addr_i11_i; //@line 5993 "xmlparse.c"
        var $611=$610+8; //@line 5993 "xmlparse.c"
        HEAP[$611]=0; //@line 5993 "xmlparse.c"
        $handleDefault_i=0; //@line 3973 "xmlparse.c"
        __label__ = 350; break; //@line 3973 "xmlparse.c"
      case 107: // $bb93_i
        var $612=$dtd_i; //@line 3979 "xmlparse.c"
        var $613=$612+128; //@line 3979 "xmlparse.c"
        var $614=HEAP[$613]; //@line 3979 "xmlparse.c"
        var $615=($614)!=0; //@line 3979 "xmlparse.c"
        if ($615) { __label__ = 108; break; } else { __label__ = 347; break; } //@line 3979 "xmlparse.c"
      case 108: // $bb94_i
        var $616=$dtd_i; //@line 3985 "xmlparse.c"
        var $617=$616+80; //@line 3985 "xmlparse.c"
        var $618=HEAP[$next_addr_i]; //@line 3985 "xmlparse.c"
        var $619=$enc_addr_i; //@line 3985 "xmlparse.c"
        var $620=$619+64; //@line 3985 "xmlparse.c"
        var $621=HEAP[$620]; //@line 3985 "xmlparse.c"
        var $622=0 - ($621); //@line 3985 "xmlparse.c"
        var $623=$618+$622; //@line 3985 "xmlparse.c"
        var $624=$enc_addr_i; //@line 3985 "xmlparse.c"
        var $625=$624+64; //@line 3985 "xmlparse.c"
        var $626=HEAP[$625]; //@line 3985 "xmlparse.c"
        var $627=$s_addr_i; //@line 3985 "xmlparse.c"
        var $628=$627+$626; //@line 3985 "xmlparse.c"
        var $629=$parser_addr_i; //@line 3985 "xmlparse.c"
        var $630=$629+336; //@line 3985 "xmlparse.c"
        var $631=HEAP[$630]; //@line 3985 "xmlparse.c"
        var $632=($631); //@line 3985 "xmlparse.c"
        var $633=$parser_addr_i; //@line 3985 "xmlparse.c"
        var $634=$enc_addr_i; //@line 3985 "xmlparse.c"
        var $635=((($632)) & 255); //@line 3985 "xmlparse.c"
        var $636=_storeAttributeValue($633, $634, $635, $628, $623, $617); //@line 3985 "xmlparse.c"
        $result95_i=$636; //@line 3985 "xmlparse.c"
        var $637=$result95_i; //@line 3986 "xmlparse.c"
        var $638=($637)!=0; //@line 3986 "xmlparse.c"
        if ($638) { __label__ = 109; break; } else { __label__ = 110; break; } //@line 3986 "xmlparse.c"
      case 109: // $bb96_i
        var $639=$result95_i; //@line 3987 "xmlparse.c"
        $3=$639; //@line 3987 "xmlparse.c"
        __label__ = 354; break; //@line 3987 "xmlparse.c"
      case 110: // $bb97_i
        var $640=$dtd_i; //@line 3988 "xmlparse.c"
        var $641=$640+80; //@line 3988 "xmlparse.c"
        var $642=$641+16; //@line 3988 "xmlparse.c"
        var $643=HEAP[$642]; //@line 3988 "xmlparse.c"
        $attVal_i=$643; //@line 3988 "xmlparse.c"
        var $644=$dtd_i; //@line 3989 "xmlparse.c"
        var $645=$644+80; //@line 3989 "xmlparse.c"
        var $646=$645+12; //@line 3989 "xmlparse.c"
        var $647=HEAP[$646]; //@line 3989 "xmlparse.c"
        var $648=$dtd_i; //@line 3989 "xmlparse.c"
        var $649=$648+80; //@line 3989 "xmlparse.c"
        var $650=$649+16; //@line 3989 "xmlparse.c"
        HEAP[$650]=$647; //@line 3989 "xmlparse.c"
        var $651=$parser_addr_i; //@line 3991 "xmlparse.c"
        var $652=$651+336; //@line 3991 "xmlparse.c"
        var $653=HEAP[$652]; //@line 3991 "xmlparse.c"
        var $654=($653); //@line 3991 "xmlparse.c"
        var $655=$parser_addr_i; //@line 3991 "xmlparse.c"
        var $656=$655+332; //@line 3991 "xmlparse.c"
        var $657=HEAP[$656]; //@line 3991 "xmlparse.c"
        var $658=$parser_addr_i; //@line 3991 "xmlparse.c"
        var $659=$658+328; //@line 3991 "xmlparse.c"
        var $660=HEAP[$659]; //@line 3991 "xmlparse.c"
        var $661=((($654)) & 255); //@line 3991 "xmlparse.c"
        var $662=$attVal_i; //@line 3991 "xmlparse.c"
        var $663=$parser_addr_i; //@line 3991 "xmlparse.c"
        var $664=_defineAttribute($660, $657, $661, 0, $662, $663); //@line 3991 "xmlparse.c"
        var $665=($664)==0; //@line 3991 "xmlparse.c"
        if ($665) { __label__ = 111; break; } else { __label__ = 112; break; } //@line 3991 "xmlparse.c"
      case 111: // $bb98_i
        $3=1; //@line 3993 "xmlparse.c"
        __label__ = 354; break; //@line 3993 "xmlparse.c"
      case 112: // $bb99_i
        var $666=$parser_addr_i; //@line 3994 "xmlparse.c"
        var $667=$666+132; //@line 3994 "xmlparse.c"
        var $668=HEAP[$667]; //@line 3994 "xmlparse.c"
        var $669=($668)!=0; //@line 3994 "xmlparse.c"
        if ($669) { __label__ = 113; break; } else { __label__ = 347; break; } //@line 3994 "xmlparse.c"
      case 113: // $bb100_i
        var $670=$parser_addr_i; //@line 3994 "xmlparse.c"
        var $671=$670+316; //@line 3994 "xmlparse.c"
        var $672=HEAP[$671]; //@line 3994 "xmlparse.c"
        var $673=($672)!=0; //@line 3994 "xmlparse.c"
        if ($673) { __label__ = 114; break; } else { __label__ = 347; break; } //@line 3994 "xmlparse.c"
      case 114: // $bb101_i
        var $674=$parser_addr_i; //@line 3995 "xmlparse.c"
        var $675=$674+316; //@line 3995 "xmlparse.c"
        var $676=HEAP[$675]; //@line 3995 "xmlparse.c"
        var $677=HEAP[$676]; //@line 3995 "xmlparse.c"
        var $678=($677)==40; //@line 3995 "xmlparse.c"
        if ($678) { __label__ = 117; break; } else { __label__ = 115; break; } //@line 3995 "xmlparse.c"
      case 115: // $bb102_i
        var $679=$parser_addr_i; //@line 3995 "xmlparse.c"
        var $680=$679+316; //@line 3995 "xmlparse.c"
        var $681=HEAP[$680]; //@line 3995 "xmlparse.c"
        var $682=HEAP[$681]; //@line 3995 "xmlparse.c"
        var $683=($682)!=78; //@line 3995 "xmlparse.c"
        if ($683) { __label__ = 123; break; } else { __label__ = 116; break; } //@line 3995 "xmlparse.c"
      case 116: // $bb103_i
        var $684=$parser_addr_i; //@line 3995 "xmlparse.c"
        var $685=$684+316; //@line 3995 "xmlparse.c"
        var $686=HEAP[$685]; //@line 3995 "xmlparse.c"
        var $687=$686+1; //@line 3995 "xmlparse.c"
        var $688=HEAP[$687]; //@line 3995 "xmlparse.c"
        var $689=($688)==79; //@line 3995 "xmlparse.c"
        if ($689) { __label__ = 117; break; } else { __label__ = 123; break; } //@line 3995 "xmlparse.c"
      case 117: // $bb104_i
        var $690=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $691=$690+400; //@line 3999 "xmlparse.c"
        var $692=$691+12; //@line 3999 "xmlparse.c"
        var $693=HEAP[$692]; //@line 3999 "xmlparse.c"
        var $694=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $695=$694+400; //@line 3999 "xmlparse.c"
        var $696=$695+8; //@line 3999 "xmlparse.c"
        var $697=HEAP[$696]; //@line 3999 "xmlparse.c"
        var $698=($693)!=($697); //@line 3999 "xmlparse.c"
        if ($698) { __label__ = 119; break; } else { __label__ = 118; break; } //@line 3999 "xmlparse.c"
      case 118: // $bb105_i
        var $699=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $700=$699+400; //@line 3999 "xmlparse.c"
        var $701=_poolGrow($700); //@line 3999 "xmlparse.c"
        var $702=($701)!=0; //@line 3999 "xmlparse.c"
        if ($702) { __label__ = 119; break; } else { __label__ = 122; break; } //@line 3999 "xmlparse.c"
      case 119: // $bb106_i
        var $703=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $704=$703+400; //@line 3999 "xmlparse.c"
        var $705=$704+12; //@line 3999 "xmlparse.c"
        var $706=HEAP[$705]; //@line 3999 "xmlparse.c"
        HEAP[$706]=41; //@line 3999 "xmlparse.c"
        var $707=$706+1; //@line 3999 "xmlparse.c"
        var $708=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $709=$708+400; //@line 3999 "xmlparse.c"
        var $710=$709+12; //@line 3999 "xmlparse.c"
        HEAP[$710]=$707; //@line 3999 "xmlparse.c"
        var $711=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $712=$711+400; //@line 3999 "xmlparse.c"
        var $713=$712+12; //@line 3999 "xmlparse.c"
        var $714=HEAP[$713]; //@line 3999 "xmlparse.c"
        var $715=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $716=$715+400; //@line 3999 "xmlparse.c"
        var $717=$716+8; //@line 3999 "xmlparse.c"
        var $718=HEAP[$717]; //@line 3999 "xmlparse.c"
        var $719=($714)!=($718); //@line 3999 "xmlparse.c"
        if ($719) { __label__ = 121; break; } else { __label__ = 120; break; } //@line 3999 "xmlparse.c"
      case 120: // $bb108_i
        var $720=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $721=$720+400; //@line 3999 "xmlparse.c"
        var $722=_poolGrow($721); //@line 3999 "xmlparse.c"
        var $723=($722)!=0; //@line 3999 "xmlparse.c"
        if ($723) { __label__ = 121; break; } else { __label__ = 122; break; } //@line 3999 "xmlparse.c"
      case 121: // $bb109_i
        var $724=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $725=$724+400; //@line 3999 "xmlparse.c"
        var $726=$725+12; //@line 3999 "xmlparse.c"
        var $727=HEAP[$726]; //@line 3999 "xmlparse.c"
        HEAP[$727]=0; //@line 3999 "xmlparse.c"
        var $728=$727+1; //@line 3999 "xmlparse.c"
        var $729=$parser_addr_i; //@line 3999 "xmlparse.c"
        var $730=$729+400; //@line 3999 "xmlparse.c"
        var $731=$730+12; //@line 3999 "xmlparse.c"
        HEAP[$731]=$728; //@line 3999 "xmlparse.c"
        var $732=$parser_addr_i; //@line 4002 "xmlparse.c"
        var $733=$732+400; //@line 4002 "xmlparse.c"
        var $734=$733+16; //@line 4002 "xmlparse.c"
        var $735=HEAP[$734]; //@line 4002 "xmlparse.c"
        var $736=$parser_addr_i; //@line 4002 "xmlparse.c"
        var $737=$736+316; //@line 4002 "xmlparse.c"
        HEAP[$737]=$735; //@line 4002 "xmlparse.c"
        var $738=$parser_addr_i; //@line 4003 "xmlparse.c"
        var $739=$738+400; //@line 4003 "xmlparse.c"
        var $740=$739+12; //@line 4003 "xmlparse.c"
        var $741=HEAP[$740]; //@line 4003 "xmlparse.c"
        var $742=$parser_addr_i; //@line 4003 "xmlparse.c"
        var $743=$742+400; //@line 4003 "xmlparse.c"
        var $744=$743+16; //@line 4003 "xmlparse.c"
        HEAP[$744]=$741; //@line 4003 "xmlparse.c"
        __label__ = 123; break; //@line 4003 "xmlparse.c"
      case 122: // $bb110_i
        $3=1; //@line 4001 "xmlparse.c"
        __label__ = 354; break; //@line 4001 "xmlparse.c"
      case 123: // $bb111_i
        var $745=$eventEndPP_i; //@line 4005 "xmlparse.c"
        var $746=$s_addr_i; //@line 4005 "xmlparse.c"
        HEAP[$745]=$746; //@line 4005 "xmlparse.c"
        var $747=$parser_addr_i; //@line 4006 "xmlparse.c"
        var $748=$747+132; //@line 4006 "xmlparse.c"
        var $749=HEAP[$748]; //@line 4006 "xmlparse.c"
        var $750=$role_i; //@line 4006 "xmlparse.c"
        var $751=($750)==38; //@line 4006 "xmlparse.c"
        var $752=($751); //@line 4006 "xmlparse.c"
        var $753=$parser_addr_i; //@line 4006 "xmlparse.c"
        var $754=$753+316; //@line 4006 "xmlparse.c"
        var $755=HEAP[$754]; //@line 4006 "xmlparse.c"
        var $756=$parser_addr_i; //@line 4006 "xmlparse.c"
        var $757=$756+332; //@line 4006 "xmlparse.c"
        var $758=HEAP[$757]; //@line 4006 "xmlparse.c"
        var $759=$758; //@line 4006 "xmlparse.c"
        var $760=HEAP[$759]; //@line 4006 "xmlparse.c"
        var $761=$parser_addr_i; //@line 4006 "xmlparse.c"
        var $762=$761+328; //@line 4006 "xmlparse.c"
        var $763=HEAP[$762]; //@line 4006 "xmlparse.c"
        var $764=$763; //@line 4006 "xmlparse.c"
        var $765=HEAP[$764]; //@line 4006 "xmlparse.c"
        var $766=$parser_addr_i; //@line 4006 "xmlparse.c"
        var $767=$766+4; //@line 4006 "xmlparse.c"
        var $768=HEAP[$767]; //@line 4006 "xmlparse.c"
        var $769=$attVal_i; //@line 4006 "xmlparse.c"
        FUNCTION_TABLE[$749]($768, $765, $760, $755, $769, $752); //@line 4006 "xmlparse.c"
        var $770=$parser_addr_i; //@line 4010 "xmlparse.c"
        var $771=$770+400; //@line 4010 "xmlparse.c"
        $pool_addr_i18_i=$771;
        var $772=$pool_addr_i18_i; //@line 5979 "xmlparse.c"
        var $773=$772+4; //@line 5979 "xmlparse.c"
        var $774=HEAP[$773]; //@line 5979 "xmlparse.c"
        var $775=($774)==0; //@line 5979 "xmlparse.c"
        var $776=$pool_addr_i18_i; //@line 5980 "xmlparse.c"
        var $777=$776; //@line 5980 "xmlparse.c"
        var $778=HEAP[$777]; //@line 5980 "xmlparse.c"
        if ($775) { __label__ = 124; break; } else { __label__ = 125; break; } //@line 5979 "xmlparse.c"
      case 124: // $bb_i21_i
        var $779=$pool_addr_i18_i; //@line 5980 "xmlparse.c"
        var $780=$779+4; //@line 5980 "xmlparse.c"
        HEAP[$780]=$778; //@line 5980 "xmlparse.c"
        __label__ = 127; break; //@line 5980 "xmlparse.c"
      case 125: // $bb1_i22_i
        $p_i19_i=$778; //@line 5982 "xmlparse.c"
        var $781=($778)!=0; //@line 5983 "xmlparse.c"
        if ($781) { __label__ = 126; break; } else { __label__ = 127; break; } //@line 5983 "xmlparse.c"
      case 126: // $bb2_i23_i
        var $782=$p_i19_i; //@line 5984 "xmlparse.c"
        var $783=$782; //@line 5984 "xmlparse.c"
        var $784=HEAP[$783]; //@line 5984 "xmlparse.c"
        $tem_i20_i=$784; //@line 5984 "xmlparse.c"
        var $785=$pool_addr_i18_i; //@line 5985 "xmlparse.c"
        var $786=$785+4; //@line 5985 "xmlparse.c"
        var $787=HEAP[$786]; //@line 5985 "xmlparse.c"
        var $788=$p_i19_i; //@line 5985 "xmlparse.c"
        var $789=$788; //@line 5985 "xmlparse.c"
        HEAP[$789]=$787; //@line 5985 "xmlparse.c"
        var $790=$pool_addr_i18_i; //@line 5986 "xmlparse.c"
        var $791=$790+4; //@line 5986 "xmlparse.c"
        var $792=$p_i19_i; //@line 5986 "xmlparse.c"
        HEAP[$791]=$792; //@line 5986 "xmlparse.c"
        var $793=$tem_i20_i; //@line 5987 "xmlparse.c"
        $p_i19_i=$793; //@line 5987 "xmlparse.c"
        var $794=($793)!=0; //@line 5983 "xmlparse.c"
        if ($794) { __label__ = 126; break; } else { __label__ = 127; break; } //@line 5983 "xmlparse.c"
      case 127: // $poolClear_exit24_i
        var $795=$pool_addr_i18_i; //@line 5990 "xmlparse.c"
        var $796=$795; //@line 5990 "xmlparse.c"
        HEAP[$796]=0; //@line 5990 "xmlparse.c"
        var $797=$pool_addr_i18_i; //@line 5991 "xmlparse.c"
        var $798=$797+16; //@line 5991 "xmlparse.c"
        HEAP[$798]=0; //@line 5991 "xmlparse.c"
        var $799=$pool_addr_i18_i; //@line 5992 "xmlparse.c"
        var $800=$799+12; //@line 5992 "xmlparse.c"
        HEAP[$800]=0; //@line 5992 "xmlparse.c"
        var $801=$pool_addr_i18_i; //@line 5993 "xmlparse.c"
        var $802=$801+8; //@line 5993 "xmlparse.c"
        HEAP[$802]=0; //@line 5993 "xmlparse.c"
        $handleDefault_i=0; //@line 4011 "xmlparse.c"
        __label__ = 350; break; //@line 4011 "xmlparse.c"
      case 128: // $bb113_i
        var $803=$dtd_i; //@line 4016 "xmlparse.c"
        var $804=$803+128; //@line 4016 "xmlparse.c"
        var $805=HEAP[$804]; //@line 4016 "xmlparse.c"
        var $806=($805)!=0; //@line 4016 "xmlparse.c"
        if ($806) { __label__ = 129; break; } else { __label__ = 347; break; } //@line 4016 "xmlparse.c"
      case 129: // $bb114_i
        var $807=HEAP[$next_addr_i]; //@line 4019 "xmlparse.c"
        var $808=$enc_addr_i; //@line 4019 "xmlparse.c"
        var $809=$808+64; //@line 4019 "xmlparse.c"
        var $810=HEAP[$809]; //@line 4019 "xmlparse.c"
        var $811=0 - ($810); //@line 4019 "xmlparse.c"
        var $812=$807+$811; //@line 4019 "xmlparse.c"
        var $813=$enc_addr_i; //@line 4019 "xmlparse.c"
        var $814=$813+64; //@line 4019 "xmlparse.c"
        var $815=HEAP[$814]; //@line 4019 "xmlparse.c"
        var $816=$s_addr_i; //@line 4019 "xmlparse.c"
        var $817=$816+$815; //@line 4019 "xmlparse.c"
        var $818=$parser_addr_i; //@line 4019 "xmlparse.c"
        var $819=$enc_addr_i; //@line 4019 "xmlparse.c"
        $parser_addr_i_i=$818;
        $enc_addr_i_i=$819;
        $entityTextPtr_addr_i_i=$817;
        $entityTextEnd_addr_i_i=$812;
        var $820=$parser_addr_i_i; //@line 4963 "xmlparse.c"
        var $821=$820+340; //@line 4963 "xmlparse.c"
        var $822=HEAP[$821]; //@line 4963 "xmlparse.c"
        $dtd_i_i=$822; //@line 4963 "xmlparse.c"
        var $823=$dtd_i_i; //@line 4964 "xmlparse.c"
        var $824=$823+104; //@line 4964 "xmlparse.c"
        $pool_i_i=$824; //@line 4964 "xmlparse.c"
        $result_i_i=0; //@line 4965 "xmlparse.c"
        var $825=$pool_i_i; //@line 4973 "xmlparse.c"
        var $826=$825; //@line 4973 "xmlparse.c"
        var $827=HEAP[$826]; //@line 4973 "xmlparse.c"
        var $828=($827)==0; //@line 4973 "xmlparse.c"
        if ($828) { __label__ = 130; break; } else { __label__ = 132; break; } //@line 4973 "xmlparse.c"
      case 130: // $bb_i26_i
        var $829=$pool_i_i; //@line 4974 "xmlparse.c"
        var $830=_poolGrow($829); //@line 4974 "xmlparse.c"
        var $831=($830)==0; //@line 4974 "xmlparse.c"
        if ($831) { __label__ = 131; break; } else { __label__ = 132; break; } //@line 4974 "xmlparse.c"
      case 131: // $bb1_i27_i
        $1=1; //@line 4975 "xmlparse.c"
        __label__ = 167; break; //@line 4975 "xmlparse.c"
      case 132: // $bb2_i28_i
        var $832=$enc_addr_i_i; //@line 4980 "xmlparse.c"
        var $833=$832+12; //@line 4980 "xmlparse.c"
        var $834=$833+4; //@line 4980 "xmlparse.c"
        var $835=HEAP[$834]; //@line 4980 "xmlparse.c"
        var $836=$enc_addr_i_i; //@line 4980 "xmlparse.c"
        var $837=$entityTextPtr_addr_i_i; //@line 4980 "xmlparse.c"
        var $838=$entityTextEnd_addr_i_i; //@line 4980 "xmlparse.c"
        var $839=FUNCTION_TABLE[$835]($836, $837, $838, $next_i_i); //@line 4980 "xmlparse.c"
        $tok_i_i=$839; //@line 4980 "xmlparse.c"
        if ($839 == -4) {
          __label__ = 134; break;
        }
        else if ($839 == -3) {
          __label__ = 137; break;
        }
        else if ($839 == -1) {
          __label__ = 156; break;
        }
        else if ($839 == 0) {
          __label__ = 159; break;
        }
        else if ($839 == 6) {
          __label__ = 135; break;
        }
        else if ($839 == 7) {
          __label__ = 138; break;
        }
        else if ($839 == 9) {
          __label__ = 135; break;
        }
        else if ($839 == 10) {
          __label__ = 142; break;
        }
        else if ($839 == 28) {
          __label__ = 133; break;
        }
        else {
        __label__ = 162; break;
        }
        
      case 133: // $bb3_i_i
        var $840=$parser_addr_i_i; //@line 5048 "xmlparse.c"
        var $841=$840+272; //@line 5048 "xmlparse.c"
        var $842=$entityTextPtr_addr_i_i; //@line 5048 "xmlparse.c"
        HEAP[$841]=$842; //@line 5048 "xmlparse.c"
        $result_i_i=10; //@line 5049 "xmlparse.c"
        __label__ = 166; break; //@line 5049 "xmlparse.c"
      case 134: // $bb4_i_i
        $result_i_i=0; //@line 5052 "xmlparse.c"
        __label__ = 166; break; //@line 5052 "xmlparse.c"
      case 135: // $bb5_i29_i
        var $843=HEAP[$next_i_i]; //@line 5056 "xmlparse.c"
        var $844=$pool_i_i; //@line 5056 "xmlparse.c"
        var $845=$enc_addr_i_i; //@line 5056 "xmlparse.c"
        var $846=$entityTextPtr_addr_i_i; //@line 5056 "xmlparse.c"
        var $847=_poolAppend($844, $845, $846, $843); //@line 5056 "xmlparse.c"
        var $848=($847)==0; //@line 5056 "xmlparse.c"
        if ($848) { __label__ = 136; break; } else { __label__ = 165; break; } //@line 5056 "xmlparse.c"
      case 136: // $bb6_i30_i
        $result_i_i=1; //@line 5057 "xmlparse.c"
        __label__ = 166; break; //@line 5057 "xmlparse.c"
      case 137: // $bb8_i31_i
        var $849=$enc_addr_i_i; //@line 5062 "xmlparse.c"
        var $850=$849+64; //@line 5062 "xmlparse.c"
        var $851=HEAP[$850]; //@line 5062 "xmlparse.c"
        var $852=$entityTextPtr_addr_i_i; //@line 5062 "xmlparse.c"
        var $853=$852+$851; //@line 5062 "xmlparse.c"
        HEAP[$next_i_i]=$853; //@line 5062 "xmlparse.c"
        __label__ = 138; break; //@line 5062 "xmlparse.c"
      case 138: // $bb9_i_i
        var $854=$pool_i_i; //@line 5065 "xmlparse.c"
        var $855=$854+8; //@line 5065 "xmlparse.c"
        var $856=HEAP[$855]; //@line 5065 "xmlparse.c"
        var $857=$pool_i_i; //@line 5065 "xmlparse.c"
        var $858=$857+12; //@line 5065 "xmlparse.c"
        var $859=HEAP[$858]; //@line 5065 "xmlparse.c"
        var $860=($856)==($859); //@line 5065 "xmlparse.c"
        if ($860) { __label__ = 139; break; } else { __label__ = 141; break; } //@line 5065 "xmlparse.c"
      case 139: // $bb10_i_i
        var $861=$pool_i_i; //@line 5065 "xmlparse.c"
        var $862=_poolGrow($861); //@line 5065 "xmlparse.c"
        var $863=($862)==0; //@line 5065 "xmlparse.c"
        if ($863) { __label__ = 140; break; } else { __label__ = 141; break; } //@line 5065 "xmlparse.c"
      case 140: // $bb11_i_i
        $result_i_i=1; //@line 5066 "xmlparse.c"
        __label__ = 166; break; //@line 5066 "xmlparse.c"
      case 141: // $bb12_i_i
        var $864=$pool_i_i; //@line 5069 "xmlparse.c"
        var $865=$864+12; //@line 5069 "xmlparse.c"
        var $866=HEAP[$865]; //@line 5069 "xmlparse.c"
        HEAP[$866]=10; //@line 5069 "xmlparse.c"
        var $867=$866+1; //@line 5069 "xmlparse.c"
        var $868=$pool_i_i; //@line 5069 "xmlparse.c"
        var $869=$868+12; //@line 5069 "xmlparse.c"
        HEAP[$869]=$867; //@line 5069 "xmlparse.c"
        __label__ = 165; break; //@line 5069 "xmlparse.c"
      case 142: // $bb13_i_i
        var $870=$enc_addr_i_i; //@line 5075 "xmlparse.c"
        var $871=$870+40; //@line 5075 "xmlparse.c"
        var $872=HEAP[$871]; //@line 5075 "xmlparse.c"
        var $873=$enc_addr_i_i; //@line 5075 "xmlparse.c"
        var $874=$entityTextPtr_addr_i_i; //@line 5075 "xmlparse.c"
        var $875=FUNCTION_TABLE[$872]($873, $874); //@line 5075 "xmlparse.c"
        $n_i_i=$875; //@line 5075 "xmlparse.c"
        var $876=$n_i_i; //@line 5076 "xmlparse.c"
        var $877=($876) < 0; //@line 5076 "xmlparse.c"
        if ($877) { __label__ = 143; break; } else { __label__ = 146; break; } //@line 5076 "xmlparse.c"
      case 143: // $bb14_i_i
        var $878=$parser_addr_i_i; //@line 5077 "xmlparse.c"
        var $879=$878+144; //@line 5077 "xmlparse.c"
        var $880=HEAP[$879]; //@line 5077 "xmlparse.c"
        var $881=$enc_addr_i_i; //@line 5077 "xmlparse.c"
        var $882=($880)==($881); //@line 5077 "xmlparse.c"
        if ($882) { __label__ = 144; break; } else { __label__ = 145; break; } //@line 5077 "xmlparse.c"
      case 144: // $bb15_i_i
        var $883=$parser_addr_i_i; //@line 5078 "xmlparse.c"
        var $884=$883+272; //@line 5078 "xmlparse.c"
        var $885=$entityTextPtr_addr_i_i; //@line 5078 "xmlparse.c"
        HEAP[$884]=$885; //@line 5078 "xmlparse.c"
        __label__ = 145; break; //@line 5078 "xmlparse.c"
      case 145: // $bb16_i_i
        $result_i_i=14; //@line 5079 "xmlparse.c"
        __label__ = 166; break; //@line 5079 "xmlparse.c"
      case 146: // $bb17_i_i
        var $886=$n_i_i; //@line 5082 "xmlparse.c"
        var $887=_PyExpat_XmlUtf8Encode($886, $buf18_i_i); //@line 5082 "xmlparse.c"
        $n_i_i=$887; //@line 5082 "xmlparse.c"
        var $888=$n_i_i; //@line 5083 "xmlparse.c"
        var $889=($888)==0; //@line 5083 "xmlparse.c"
        if ($889) { __label__ = 147; break; } else { __label__ = 150; break; } //@line 5083 "xmlparse.c"
      case 147: // $bb19_i_i
        var $890=$parser_addr_i_i; //@line 5084 "xmlparse.c"
        var $891=$890+144; //@line 5084 "xmlparse.c"
        var $892=HEAP[$891]; //@line 5084 "xmlparse.c"
        var $893=$enc_addr_i_i; //@line 5084 "xmlparse.c"
        var $894=($892)==($893); //@line 5084 "xmlparse.c"
        if ($894) { __label__ = 148; break; } else { __label__ = 149; break; } //@line 5084 "xmlparse.c"
      case 148: // $bb20_i_i
        var $895=$parser_addr_i_i; //@line 5085 "xmlparse.c"
        var $896=$895+272; //@line 5085 "xmlparse.c"
        var $897=$entityTextPtr_addr_i_i; //@line 5085 "xmlparse.c"
        HEAP[$896]=$897; //@line 5085 "xmlparse.c"
        __label__ = 149; break; //@line 5085 "xmlparse.c"
      case 149: // $bb21_i_i
        $result_i_i=14; //@line 5086 "xmlparse.c"
        __label__ = 166; break; //@line 5086 "xmlparse.c"
      case 150: // $bb22_i_i
        $i_i_i=0; //@line 5089 "xmlparse.c"
        __label__ = 155; break; //@line 5089 "xmlparse.c"
      case 151: // $bb23_i_i
        var $898=$pool_i_i; //@line 5090 "xmlparse.c"
        var $899=$898+8; //@line 5090 "xmlparse.c"
        var $900=HEAP[$899]; //@line 5090 "xmlparse.c"
        var $901=$pool_i_i; //@line 5090 "xmlparse.c"
        var $902=$901+12; //@line 5090 "xmlparse.c"
        var $903=HEAP[$902]; //@line 5090 "xmlparse.c"
        var $904=($900)==($903); //@line 5090 "xmlparse.c"
        if ($904) { __label__ = 152; break; } else { __label__ = 154; break; } //@line 5090 "xmlparse.c"
      case 152: // $bb24_i_i
        var $905=$pool_i_i; //@line 5090 "xmlparse.c"
        var $906=_poolGrow($905); //@line 5090 "xmlparse.c"
        var $907=($906)==0; //@line 5090 "xmlparse.c"
        if ($907) { __label__ = 153; break; } else { __label__ = 154; break; } //@line 5090 "xmlparse.c"
      case 153: // $bb25_i_i
        $result_i_i=1; //@line 5091 "xmlparse.c"
        __label__ = 166; break; //@line 5091 "xmlparse.c"
      case 154: // $bb26_i_i
        var $908=$pool_i_i; //@line 5094 "xmlparse.c"
        var $909=$908+12; //@line 5094 "xmlparse.c"
        var $910=HEAP[$909]; //@line 5094 "xmlparse.c"
        var $911=$i_i_i; //@line 5094 "xmlparse.c"
        var $912=$buf_i_i+$911; //@line 5094 "xmlparse.c"
        var $913=HEAP[$912]; //@line 5094 "xmlparse.c"
        HEAP[$910]=$913; //@line 5094 "xmlparse.c"
        var $914=$910+1; //@line 5094 "xmlparse.c"
        var $915=$pool_i_i; //@line 5094 "xmlparse.c"
        var $916=$915+12; //@line 5094 "xmlparse.c"
        HEAP[$916]=$914; //@line 5094 "xmlparse.c"
        var $917=$i_i_i; //@line 5089 "xmlparse.c"
        var $918=($917) + 1; //@line 5089 "xmlparse.c"
        $i_i_i=$918; //@line 5089 "xmlparse.c"
        __label__ = 155; break; //@line 5089 "xmlparse.c"
      case 155: // $bb27_i_i
        var $919=$i_i_i; //@line 5089 "xmlparse.c"
        var $920=$n_i_i; //@line 5089 "xmlparse.c"
        var $921=($919) < ($920); //@line 5089 "xmlparse.c"
        if ($921) { __label__ = 151; break; } else { __label__ = 165; break; } //@line 5089 "xmlparse.c"
      case 156: // $bb29_i_i
        var $922=$parser_addr_i_i; //@line 5099 "xmlparse.c"
        var $923=$922+144; //@line 5099 "xmlparse.c"
        var $924=HEAP[$923]; //@line 5099 "xmlparse.c"
        var $925=$enc_addr_i_i; //@line 5099 "xmlparse.c"
        var $926=($924)==($925); //@line 5099 "xmlparse.c"
        if ($926) { __label__ = 157; break; } else { __label__ = 158; break; } //@line 5099 "xmlparse.c"
      case 157: // $bb30_i_i
        var $927=$parser_addr_i_i; //@line 5100 "xmlparse.c"
        var $928=$927+272; //@line 5100 "xmlparse.c"
        var $929=$entityTextPtr_addr_i_i; //@line 5100 "xmlparse.c"
        HEAP[$928]=$929; //@line 5100 "xmlparse.c"
        __label__ = 158; break; //@line 5100 "xmlparse.c"
      case 158: // $bb31_i_i
        $result_i_i=4; //@line 5101 "xmlparse.c"
        __label__ = 166; break; //@line 5101 "xmlparse.c"
      case 159: // $bb32_i_i
        var $930=$parser_addr_i_i; //@line 5104 "xmlparse.c"
        var $931=$930+144; //@line 5104 "xmlparse.c"
        var $932=HEAP[$931]; //@line 5104 "xmlparse.c"
        var $933=$enc_addr_i_i; //@line 5104 "xmlparse.c"
        var $934=($932)==($933); //@line 5104 "xmlparse.c"
        if ($934) { __label__ = 160; break; } else { __label__ = 161; break; } //@line 5104 "xmlparse.c"
      case 160: // $bb33_i_i
        var $935=HEAP[$next_i_i]; //@line 5105 "xmlparse.c"
        var $936=$parser_addr_i_i; //@line 5105 "xmlparse.c"
        var $937=$936+272; //@line 5105 "xmlparse.c"
        HEAP[$937]=$935; //@line 5105 "xmlparse.c"
        __label__ = 161; break; //@line 5105 "xmlparse.c"
      case 161: // $bb34_i_i
        $result_i_i=4; //@line 5106 "xmlparse.c"
        __label__ = 166; break; //@line 5106 "xmlparse.c"
      case 162: // $bb35_i_i
        var $938=$parser_addr_i_i; //@line 5109 "xmlparse.c"
        var $939=$938+144; //@line 5109 "xmlparse.c"
        var $940=HEAP[$939]; //@line 5109 "xmlparse.c"
        var $941=$enc_addr_i_i; //@line 5109 "xmlparse.c"
        var $942=($940)==($941); //@line 5109 "xmlparse.c"
        if ($942) { __label__ = 163; break; } else { __label__ = 164; break; } //@line 5109 "xmlparse.c"
      case 163: // $bb36_i_i
        var $943=$parser_addr_i_i; //@line 5110 "xmlparse.c"
        var $944=$943+272; //@line 5110 "xmlparse.c"
        var $945=$entityTextPtr_addr_i_i; //@line 5110 "xmlparse.c"
        HEAP[$944]=$945; //@line 5110 "xmlparse.c"
        __label__ = 164; break; //@line 5110 "xmlparse.c"
      case 164: // $bb37_i_i
        $result_i_i=23; //@line 5111 "xmlparse.c"
        __label__ = 166; break; //@line 5111 "xmlparse.c"
      case 165: // $bb38_i_i
        var $946=HEAP[$next_i_i]; //@line 5114 "xmlparse.c"
        $entityTextPtr_addr_i_i=$946; //@line 5114 "xmlparse.c"
        __label__ = 132; break; //@line 5114 "xmlparse.c"
      case 166: // $endEntityValue_i_i
        var $947=$result_i_i; //@line 5120 "xmlparse.c"
        $1=$947; //@line 5120 "xmlparse.c"
        __label__ = 167; break; //@line 5120 "xmlparse.c"
      case 167: // $storeEntityValue_exit_i
        var $948=$1; //@line 4975 "xmlparse.c"
        $retval_i25_i=$948; //@line 4975 "xmlparse.c"
        var $retval40_i_i=$retval_i25_i; //@line 4975 "xmlparse.c"
        $result115_i=$retval40_i_i; //@line 4019 "xmlparse.c"
        var $949=$parser_addr_i; //@line 4020 "xmlparse.c"
        var $950=$949+300; //@line 4020 "xmlparse.c"
        var $951=HEAP[$950]; //@line 4020 "xmlparse.c"
        var $952=($951)!=0; //@line 4020 "xmlparse.c"
        if ($952) { __label__ = 168; break; } else { __label__ = 170; break; } //@line 4020 "xmlparse.c"
      case 168: // $bb116_i
        var $953=$parser_addr_i; //@line 4021 "xmlparse.c"
        var $954=$953+300; //@line 4021 "xmlparse.c"
        var $955=HEAP[$954]; //@line 4021 "xmlparse.c"
        var $956=$dtd_i; //@line 4021 "xmlparse.c"
        var $957=$956+104; //@line 4021 "xmlparse.c"
        var $958=$957+16; //@line 4021 "xmlparse.c"
        var $959=HEAP[$958]; //@line 4021 "xmlparse.c"
        var $960=$955+4; //@line 4021 "xmlparse.c"
        HEAP[$960]=$959; //@line 4021 "xmlparse.c"
        var $961=$parser_addr_i; //@line 4022 "xmlparse.c"
        var $962=$961+300; //@line 4022 "xmlparse.c"
        var $963=HEAP[$962]; //@line 4022 "xmlparse.c"
        var $964=$dtd_i; //@line 4022 "xmlparse.c"
        var $965=$964+104; //@line 4022 "xmlparse.c"
        var $966=$965+12; //@line 4022 "xmlparse.c"
        var $967=HEAP[$966]; //@line 4022 "xmlparse.c"
        var $968=($967); //@line 4022 "xmlparse.c"
        var $969=$dtd_i; //@line 4022 "xmlparse.c"
        var $970=$969+104; //@line 4022 "xmlparse.c"
        var $971=$970+16; //@line 4022 "xmlparse.c"
        var $972=HEAP[$971]; //@line 4022 "xmlparse.c"
        var $973=($972); //@line 4022 "xmlparse.c"
        var $974=($968) - ($973); //@line 4022 "xmlparse.c"
        var $975=$963+8; //@line 4022 "xmlparse.c"
        HEAP[$975]=$974; //@line 4022 "xmlparse.c"
        var $976=$dtd_i; //@line 4023 "xmlparse.c"
        var $977=$976+104; //@line 4023 "xmlparse.c"
        var $978=$977+12; //@line 4023 "xmlparse.c"
        var $979=HEAP[$978]; //@line 4023 "xmlparse.c"
        var $980=$dtd_i; //@line 4023 "xmlparse.c"
        var $981=$980+104; //@line 4023 "xmlparse.c"
        var $982=$981+16; //@line 4023 "xmlparse.c"
        HEAP[$982]=$979; //@line 4023 "xmlparse.c"
        var $983=$parser_addr_i; //@line 4024 "xmlparse.c"
        var $984=$983+136; //@line 4024 "xmlparse.c"
        var $985=HEAP[$984]; //@line 4024 "xmlparse.c"
        var $986=($985)!=0; //@line 4024 "xmlparse.c"
        if ($986) { __label__ = 169; break; } else { __label__ = 171; break; } //@line 4024 "xmlparse.c"
      case 169: // $bb117_i
        var $987=$eventEndPP_i; //@line 4025 "xmlparse.c"
        var $988=$s_addr_i; //@line 4025 "xmlparse.c"
        HEAP[$987]=$988; //@line 4025 "xmlparse.c"
        var $989=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $990=$989+136; //@line 4026 "xmlparse.c"
        var $991=HEAP[$990]; //@line 4026 "xmlparse.c"
        var $992=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $993=$992+344; //@line 4026 "xmlparse.c"
        var $994=HEAP[$993]; //@line 4026 "xmlparse.c"
        var $995=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $996=$995+300; //@line 4026 "xmlparse.c"
        var $997=HEAP[$996]; //@line 4026 "xmlparse.c"
        var $998=$997+8; //@line 4026 "xmlparse.c"
        var $999=HEAP[$998]; //@line 4026 "xmlparse.c"
        var $1000=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $1001=$1000+300; //@line 4026 "xmlparse.c"
        var $1002=HEAP[$1001]; //@line 4026 "xmlparse.c"
        var $1003=$1002+4; //@line 4026 "xmlparse.c"
        var $1004=HEAP[$1003]; //@line 4026 "xmlparse.c"
        var $1005=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $1006=$1005+300; //@line 4026 "xmlparse.c"
        var $1007=HEAP[$1006]; //@line 4026 "xmlparse.c"
        var $1008=$1007+33; //@line 4026 "xmlparse.c"
        var $1009=HEAP[$1008]; //@line 4026 "xmlparse.c"
        var $1010=($1009); //@line 4026 "xmlparse.c"
        var $1011=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $1012=$1011+300; //@line 4026 "xmlparse.c"
        var $1013=HEAP[$1012]; //@line 4026 "xmlparse.c"
        var $1014=$1013; //@line 4026 "xmlparse.c"
        var $1015=HEAP[$1014]; //@line 4026 "xmlparse.c"
        var $1016=$parser_addr_i; //@line 4026 "xmlparse.c"
        var $1017=$1016+4; //@line 4026 "xmlparse.c"
        var $1018=HEAP[$1017]; //@line 4026 "xmlparse.c"
        FUNCTION_TABLE[$991]($1018, $1015, $1010, $1004, $999, $994, 0, 0, 0); //@line 4026 "xmlparse.c"
        $handleDefault_i=0; //@line 4032 "xmlparse.c"
        __label__ = 171; break; //@line 4032 "xmlparse.c"
      case 170: // $bb119_i
        var $1019=$dtd_i; //@line 4036 "xmlparse.c"
        var $1020=$1019+104; //@line 4036 "xmlparse.c"
        var $1021=$1020+16; //@line 4036 "xmlparse.c"
        var $1022=HEAP[$1021]; //@line 4036 "xmlparse.c"
        var $1023=$dtd_i; //@line 4036 "xmlparse.c"
        var $1024=$1023+104; //@line 4036 "xmlparse.c"
        var $1025=$1024+12; //@line 4036 "xmlparse.c"
        HEAP[$1025]=$1022; //@line 4036 "xmlparse.c"
        __label__ = 171; break; //@line 4036 "xmlparse.c"
      case 171: // $bb120_i
        var $1026=$result115_i; //@line 4037 "xmlparse.c"
        var $1027=($1026)!=0; //@line 4037 "xmlparse.c"
        if ($1027) { __label__ = 172; break; } else { __label__ = 347; break; } //@line 4037 "xmlparse.c"
      case 172: // $bb121_i
        var $1028=$result115_i; //@line 4038 "xmlparse.c"
        $3=$1028; //@line 4038 "xmlparse.c"
        __label__ = 354; break; //@line 4038 "xmlparse.c"
      case 173: // $bb123_i
        var $1029=$dtd_i; //@line 4045 "xmlparse.c"
        var $1030=$1029+129; //@line 4045 "xmlparse.c"
        HEAP[$1030]=1; //@line 4045 "xmlparse.c"
        var $1031=$parser_addr_i; //@line 4046 "xmlparse.c"
        var $1032=$1031+84; //@line 4046 "xmlparse.c"
        var $1033=HEAP[$1032]; //@line 4046 "xmlparse.c"
        var $1034=($1033)!=0; //@line 4046 "xmlparse.c"
        if ($1034) { __label__ = 174; break; } else { __label__ = 177; break; } //@line 4046 "xmlparse.c"
      case 174: // $bb124_i
        var $1035=HEAP[$next_addr_i]; //@line 4047 "xmlparse.c"
        var $1036=$enc_addr_i; //@line 4047 "xmlparse.c"
        var $1037=$1036+64; //@line 4047 "xmlparse.c"
        var $1038=HEAP[$1037]; //@line 4047 "xmlparse.c"
        var $1039=0 - ($1038); //@line 4047 "xmlparse.c"
        var $1040=$1035+$1039; //@line 4047 "xmlparse.c"
        var $1041=$enc_addr_i; //@line 4047 "xmlparse.c"
        var $1042=$1041+64; //@line 4047 "xmlparse.c"
        var $1043=HEAP[$1042]; //@line 4047 "xmlparse.c"
        var $1044=$s_addr_i; //@line 4047 "xmlparse.c"
        var $1045=$1044+$1043; //@line 4047 "xmlparse.c"
        var $1046=$parser_addr_i; //@line 4047 "xmlparse.c"
        var $1047=$1046+400; //@line 4047 "xmlparse.c"
        var $1048=$enc_addr_i; //@line 4047 "xmlparse.c"
        var $1049=_poolStoreString($1047, $1048, $1045, $1040); //@line 4047 "xmlparse.c"
        var $1050=$parser_addr_i; //@line 4047 "xmlparse.c"
        var $1051=$1050+308; //@line 4047 "xmlparse.c"
        HEAP[$1051]=$1049; //@line 4047 "xmlparse.c"
        var $1052=$parser_addr_i; //@line 4050 "xmlparse.c"
        var $1053=$1052+308; //@line 4050 "xmlparse.c"
        var $1054=HEAP[$1053]; //@line 4050 "xmlparse.c"
        var $1055=($1054)==0; //@line 4050 "xmlparse.c"
        if ($1055) { __label__ = 175; break; } else { __label__ = 176; break; } //@line 4050 "xmlparse.c"
      case 175: // $bb125_i
        $3=1; //@line 4051 "xmlparse.c"
        __label__ = 354; break; //@line 4051 "xmlparse.c"
      case 176: // $bb126_i
        var $1056=$parser_addr_i; //@line 4052 "xmlparse.c"
        var $1057=$1056+400; //@line 4052 "xmlparse.c"
        var $1058=$1057+12; //@line 4052 "xmlparse.c"
        var $1059=HEAP[$1058]; //@line 4052 "xmlparse.c"
        var $1060=$parser_addr_i; //@line 4052 "xmlparse.c"
        var $1061=$1060+400; //@line 4052 "xmlparse.c"
        var $1062=$1061+16; //@line 4052 "xmlparse.c"
        HEAP[$1062]=$1059; //@line 4052 "xmlparse.c"
        $handleDefault_i=0; //@line 4053 "xmlparse.c"
        __label__ = 177; break; //@line 4053 "xmlparse.c"
      case 177: // $bb127_i
        var $1063=$dtd_i; //@line 4061 "xmlparse.c"
        var $1064=$1063+130; //@line 4061 "xmlparse.c"
        var $1065=HEAP[$1064]; //@line 4061 "xmlparse.c"
        var $1066=($1065)==0; //@line 4061 "xmlparse.c"
        if ($1066) { __label__ = 178; break; } else { __label__ = 347; break; } //@line 4061 "xmlparse.c"
      case 178: // $bb128_i
        var $1067=$parser_addr_i; //@line 4061 "xmlparse.c"
        var $1068=$1067+108; //@line 4061 "xmlparse.c"
        var $1069=HEAP[$1068]; //@line 4061 "xmlparse.c"
        var $1070=($1069)!=0; //@line 4061 "xmlparse.c"
        if ($1070) { __label__ = 179; break; } else { __label__ = 347; break; } //@line 4061 "xmlparse.c"
      case 179: // $bb129_i
        var $1071=$parser_addr_i; //@line 4061 "xmlparse.c"
        var $1072=$1071+108; //@line 4061 "xmlparse.c"
        var $1073=HEAP[$1072]; //@line 4061 "xmlparse.c"
        var $1074=$parser_addr_i; //@line 4061 "xmlparse.c"
        var $1075=$1074+4; //@line 4061 "xmlparse.c"
        var $1076=HEAP[$1075]; //@line 4061 "xmlparse.c"
        var $1077=FUNCTION_TABLE[$1073]($1076); //@line 4061 "xmlparse.c"
        var $1078=($1077)==0; //@line 4061 "xmlparse.c"
        if ($1078) { __label__ = 180; break; } else { __label__ = 347; break; } //@line 4061 "xmlparse.c"
      case 180: // $bb130_i
        $3=22; //@line 4067 "xmlparse.c"
        __label__ = 354; break; //@line 4067 "xmlparse.c"
      case 181: // $bb132_i
        var $1079=$dtd_i; //@line 4082 "xmlparse.c"
        var $1080=$1079+128; //@line 4082 "xmlparse.c"
        var $1081=HEAP[$1080]; //@line 4082 "xmlparse.c"
        var $1082=($1081)!=0; //@line 4082 "xmlparse.c"
        if ($1082) { __label__ = 182; break; } else { __label__ = 347; break; } //@line 4082 "xmlparse.c"
      case 182: // $bb133_i
        var $1083=$parser_addr_i; //@line 4082 "xmlparse.c"
        var $1084=$1083+300; //@line 4082 "xmlparse.c"
        var $1085=HEAP[$1084]; //@line 4082 "xmlparse.c"
        var $1086=($1085)!=0; //@line 4082 "xmlparse.c"
        if ($1086) { __label__ = 183; break; } else { __label__ = 347; break; } //@line 4082 "xmlparse.c"
      case 183: // $bb134_i
        var $1087=$parser_addr_i; //@line 4083 "xmlparse.c"
        var $1088=$1087+300; //@line 4083 "xmlparse.c"
        var $1089=HEAP[$1088]; //@line 4083 "xmlparse.c"
        var $1090=HEAP[$next_addr_i]; //@line 4083 "xmlparse.c"
        var $1091=$enc_addr_i; //@line 4083 "xmlparse.c"
        var $1092=$1091+64; //@line 4083 "xmlparse.c"
        var $1093=HEAP[$1092]; //@line 4083 "xmlparse.c"
        var $1094=0 - ($1093); //@line 4083 "xmlparse.c"
        var $1095=$1090+$1094; //@line 4083 "xmlparse.c"
        var $1096=$enc_addr_i; //@line 4083 "xmlparse.c"
        var $1097=$1096+64; //@line 4083 "xmlparse.c"
        var $1098=HEAP[$1097]; //@line 4083 "xmlparse.c"
        var $1099=$s_addr_i; //@line 4083 "xmlparse.c"
        var $1100=$1099+$1098; //@line 4083 "xmlparse.c"
        var $1101=$dtd_i; //@line 4083 "xmlparse.c"
        var $1102=$1101+80; //@line 4083 "xmlparse.c"
        var $1103=$enc_addr_i; //@line 4083 "xmlparse.c"
        var $1104=_poolStoreString($1102, $1103, $1100, $1095); //@line 4083 "xmlparse.c"
        var $1105=$1089+16; //@line 4083 "xmlparse.c"
        HEAP[$1105]=$1104; //@line 4083 "xmlparse.c"
        var $1106=$parser_addr_i; //@line 4086 "xmlparse.c"
        var $1107=$1106+300; //@line 4086 "xmlparse.c"
        var $1108=HEAP[$1107]; //@line 4086 "xmlparse.c"
        var $1109=$1108+16; //@line 4086 "xmlparse.c"
        var $1110=HEAP[$1109]; //@line 4086 "xmlparse.c"
        var $1111=($1110)==0; //@line 4086 "xmlparse.c"
        if ($1111) { __label__ = 184; break; } else { __label__ = 185; break; } //@line 4086 "xmlparse.c"
      case 184: // $bb135_i
        $3=1; //@line 4087 "xmlparse.c"
        __label__ = 354; break; //@line 4087 "xmlparse.c"
      case 185: // $bb136_i
        var $1112=$parser_addr_i; //@line 4088 "xmlparse.c"
        var $1113=$1112+300; //@line 4088 "xmlparse.c"
        var $1114=HEAP[$1113]; //@line 4088 "xmlparse.c"
        var $1115=$parser_addr_i; //@line 4088 "xmlparse.c"
        var $1116=$1115+344; //@line 4088 "xmlparse.c"
        var $1117=HEAP[$1116]; //@line 4088 "xmlparse.c"
        var $1118=$1114+20; //@line 4088 "xmlparse.c"
        HEAP[$1118]=$1117; //@line 4088 "xmlparse.c"
        var $1119=$dtd_i; //@line 4089 "xmlparse.c"
        var $1120=$1119+80; //@line 4089 "xmlparse.c"
        var $1121=$1120+12; //@line 4089 "xmlparse.c"
        var $1122=HEAP[$1121]; //@line 4089 "xmlparse.c"
        var $1123=$dtd_i; //@line 4089 "xmlparse.c"
        var $1124=$1123+80; //@line 4089 "xmlparse.c"
        var $1125=$1124+16; //@line 4089 "xmlparse.c"
        HEAP[$1125]=$1122; //@line 4089 "xmlparse.c"
        var $1126=$parser_addr_i; //@line 4090 "xmlparse.c"
        var $1127=$1126+136; //@line 4090 "xmlparse.c"
        var $1128=HEAP[$1127]; //@line 4090 "xmlparse.c"
        var $1129=($1128)!=0; //@line 4090 "xmlparse.c"
        if ($1129) { __label__ = 186; break; } else { __label__ = 347; break; } //@line 4090 "xmlparse.c"
      case 186: // $bb137_i
        $handleDefault_i=0; //@line 4091 "xmlparse.c"
        __label__ = 350; break; //@line 4091 "xmlparse.c"
      case 187: // $bb139_i
        var $1130=$dtd_i; //@line 4095 "xmlparse.c"
        var $1131=$1130+128; //@line 4095 "xmlparse.c"
        var $1132=HEAP[$1131]; //@line 4095 "xmlparse.c"
        var $1133=($1132)!=0; //@line 4095 "xmlparse.c"
        if ($1133) { __label__ = 188; break; } else { __label__ = 347; break; } //@line 4095 "xmlparse.c"
      case 188: // $bb140_i
        var $1134=$parser_addr_i; //@line 4095 "xmlparse.c"
        var $1135=$1134+300; //@line 4095 "xmlparse.c"
        var $1136=HEAP[$1135]; //@line 4095 "xmlparse.c"
        var $1137=($1136)!=0; //@line 4095 "xmlparse.c"
        if ($1137) { __label__ = 189; break; } else { __label__ = 347; break; } //@line 4095 "xmlparse.c"
      case 189: // $bb141_i
        var $1138=$parser_addr_i; //@line 4095 "xmlparse.c"
        var $1139=$1138+136; //@line 4095 "xmlparse.c"
        var $1140=HEAP[$1139]; //@line 4095 "xmlparse.c"
        var $1141=($1140)!=0; //@line 4095 "xmlparse.c"
        if ($1141) { __label__ = 190; break; } else { __label__ = 347; break; } //@line 4095 "xmlparse.c"
      case 190: // $bb142_i
        var $1142=$eventEndPP_i; //@line 4096 "xmlparse.c"
        var $1143=$s_addr_i; //@line 4096 "xmlparse.c"
        HEAP[$1142]=$1143; //@line 4096 "xmlparse.c"
        var $1144=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1145=$1144+136; //@line 4097 "xmlparse.c"
        var $1146=HEAP[$1145]; //@line 4097 "xmlparse.c"
        var $1147=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1148=$1147+300; //@line 4097 "xmlparse.c"
        var $1149=HEAP[$1148]; //@line 4097 "xmlparse.c"
        var $1150=$1149+24; //@line 4097 "xmlparse.c"
        var $1151=HEAP[$1150]; //@line 4097 "xmlparse.c"
        var $1152=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1153=$1152+300; //@line 4097 "xmlparse.c"
        var $1154=HEAP[$1153]; //@line 4097 "xmlparse.c"
        var $1155=$1154+16; //@line 4097 "xmlparse.c"
        var $1156=HEAP[$1155]; //@line 4097 "xmlparse.c"
        var $1157=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1158=$1157+300; //@line 4097 "xmlparse.c"
        var $1159=HEAP[$1158]; //@line 4097 "xmlparse.c"
        var $1160=$1159+20; //@line 4097 "xmlparse.c"
        var $1161=HEAP[$1160]; //@line 4097 "xmlparse.c"
        var $1162=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1163=$1162+300; //@line 4097 "xmlparse.c"
        var $1164=HEAP[$1163]; //@line 4097 "xmlparse.c"
        var $1165=$1164+33; //@line 4097 "xmlparse.c"
        var $1166=HEAP[$1165]; //@line 4097 "xmlparse.c"
        var $1167=($1166); //@line 4097 "xmlparse.c"
        var $1168=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1169=$1168+300; //@line 4097 "xmlparse.c"
        var $1170=HEAP[$1169]; //@line 4097 "xmlparse.c"
        var $1171=$1170; //@line 4097 "xmlparse.c"
        var $1172=HEAP[$1171]; //@line 4097 "xmlparse.c"
        var $1173=$parser_addr_i; //@line 4097 "xmlparse.c"
        var $1174=$1173+4; //@line 4097 "xmlparse.c"
        var $1175=HEAP[$1174]; //@line 4097 "xmlparse.c"
        FUNCTION_TABLE[$1146]($1175, $1172, $1167, 0, 0, $1161, $1156, $1151, 0); //@line 4097 "xmlparse.c"
        $handleDefault_i=0; //@line 4105 "xmlparse.c"
        __label__ = 350; break; //@line 4105 "xmlparse.c"
      case 191: // $bb144_i
        var $1176=$dtd_i; //@line 4109 "xmlparse.c"
        var $1177=$1176+128; //@line 4109 "xmlparse.c"
        var $1178=HEAP[$1177]; //@line 4109 "xmlparse.c"
        var $1179=($1178)!=0; //@line 4109 "xmlparse.c"
        if ($1179) { __label__ = 192; break; } else { __label__ = 347; break; } //@line 4109 "xmlparse.c"
      case 192: // $bb145_i
        var $1180=$parser_addr_i; //@line 4109 "xmlparse.c"
        var $1181=$1180+300; //@line 4109 "xmlparse.c"
        var $1182=HEAP[$1181]; //@line 4109 "xmlparse.c"
        var $1183=($1182)!=0; //@line 4109 "xmlparse.c"
        if ($1183) { __label__ = 193; break; } else { __label__ = 347; break; } //@line 4109 "xmlparse.c"
      case 193: // $bb146_i
        var $1184=$parser_addr_i; //@line 4110 "xmlparse.c"
        var $1185=$1184+300; //@line 4110 "xmlparse.c"
        var $1186=HEAP[$1185]; //@line 4110 "xmlparse.c"
        var $1187=HEAP[$next_addr_i]; //@line 4110 "xmlparse.c"
        var $1188=$dtd_i; //@line 4110 "xmlparse.c"
        var $1189=$1188+80; //@line 4110 "xmlparse.c"
        var $1190=$enc_addr_i; //@line 4110 "xmlparse.c"
        var $1191=$s_addr_i; //@line 4110 "xmlparse.c"
        var $1192=_poolStoreString($1189, $1190, $1191, $1187); //@line 4110 "xmlparse.c"
        var $1193=$1186+28; //@line 4110 "xmlparse.c"
        HEAP[$1193]=$1192; //@line 4110 "xmlparse.c"
        var $1194=$parser_addr_i; //@line 4111 "xmlparse.c"
        var $1195=$1194+300; //@line 4111 "xmlparse.c"
        var $1196=HEAP[$1195]; //@line 4111 "xmlparse.c"
        var $1197=$1196+28; //@line 4111 "xmlparse.c"
        var $1198=HEAP[$1197]; //@line 4111 "xmlparse.c"
        var $1199=($1198)==0; //@line 4111 "xmlparse.c"
        if ($1199) { __label__ = 194; break; } else { __label__ = 195; break; } //@line 4111 "xmlparse.c"
      case 194: // $bb147_i
        $3=1; //@line 4112 "xmlparse.c"
        __label__ = 354; break; //@line 4112 "xmlparse.c"
      case 195: // $bb148_i
        var $1200=$dtd_i; //@line 4113 "xmlparse.c"
        var $1201=$1200+80; //@line 4113 "xmlparse.c"
        var $1202=$1201+12; //@line 4113 "xmlparse.c"
        var $1203=HEAP[$1202]; //@line 4113 "xmlparse.c"
        var $1204=$dtd_i; //@line 4113 "xmlparse.c"
        var $1205=$1204+80; //@line 4113 "xmlparse.c"
        var $1206=$1205+16; //@line 4113 "xmlparse.c"
        HEAP[$1206]=$1203; //@line 4113 "xmlparse.c"
        var $1207=$parser_addr_i; //@line 4114 "xmlparse.c"
        var $1208=$1207+92; //@line 4114 "xmlparse.c"
        var $1209=HEAP[$1208]; //@line 4114 "xmlparse.c"
        var $1210=($1209)!=0; //@line 4114 "xmlparse.c"
        if ($1210) { __label__ = 196; break; } else { __label__ = 197; break; } //@line 4114 "xmlparse.c"
      case 196: // $bb149_i
        var $1211=$eventEndPP_i; //@line 4115 "xmlparse.c"
        var $1212=$s_addr_i; //@line 4115 "xmlparse.c"
        HEAP[$1211]=$1212; //@line 4115 "xmlparse.c"
        var $1213=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1214=$1213+92; //@line 4116 "xmlparse.c"
        var $1215=HEAP[$1214]; //@line 4116 "xmlparse.c"
        var $1216=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1217=$1216+300; //@line 4116 "xmlparse.c"
        var $1218=HEAP[$1217]; //@line 4116 "xmlparse.c"
        var $1219=$1218+28; //@line 4116 "xmlparse.c"
        var $1220=HEAP[$1219]; //@line 4116 "xmlparse.c"
        var $1221=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1222=$1221+300; //@line 4116 "xmlparse.c"
        var $1223=HEAP[$1222]; //@line 4116 "xmlparse.c"
        var $1224=$1223+24; //@line 4116 "xmlparse.c"
        var $1225=HEAP[$1224]; //@line 4116 "xmlparse.c"
        var $1226=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1227=$1226+300; //@line 4116 "xmlparse.c"
        var $1228=HEAP[$1227]; //@line 4116 "xmlparse.c"
        var $1229=$1228+16; //@line 4116 "xmlparse.c"
        var $1230=HEAP[$1229]; //@line 4116 "xmlparse.c"
        var $1231=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1232=$1231+300; //@line 4116 "xmlparse.c"
        var $1233=HEAP[$1232]; //@line 4116 "xmlparse.c"
        var $1234=$1233+20; //@line 4116 "xmlparse.c"
        var $1235=HEAP[$1234]; //@line 4116 "xmlparse.c"
        var $1236=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1237=$1236+300; //@line 4116 "xmlparse.c"
        var $1238=HEAP[$1237]; //@line 4116 "xmlparse.c"
        var $1239=$1238; //@line 4116 "xmlparse.c"
        var $1240=HEAP[$1239]; //@line 4116 "xmlparse.c"
        var $1241=$parser_addr_i; //@line 4116 "xmlparse.c"
        var $1242=$1241+4; //@line 4116 "xmlparse.c"
        var $1243=HEAP[$1242]; //@line 4116 "xmlparse.c"
        FUNCTION_TABLE[$1215]($1243, $1240, $1235, $1230, $1225, $1220); //@line 4116 "xmlparse.c"
        $handleDefault_i=0; //@line 4122 "xmlparse.c"
        __label__ = 350; break; //@line 4122 "xmlparse.c"
      case 197: // $bb150_i
        var $1244=$parser_addr_i; //@line 4124 "xmlparse.c"
        var $1245=$1244+136; //@line 4124 "xmlparse.c"
        var $1246=HEAP[$1245]; //@line 4124 "xmlparse.c"
        var $1247=($1246)!=0; //@line 4124 "xmlparse.c"
        if ($1247) { __label__ = 198; break; } else { __label__ = 347; break; } //@line 4124 "xmlparse.c"
      case 198: // $bb151_i
        var $1248=$eventEndPP_i; //@line 4125 "xmlparse.c"
        var $1249=$s_addr_i; //@line 4125 "xmlparse.c"
        HEAP[$1248]=$1249; //@line 4125 "xmlparse.c"
        var $1250=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1251=$1250+136; //@line 4126 "xmlparse.c"
        var $1252=HEAP[$1251]; //@line 4126 "xmlparse.c"
        var $1253=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1254=$1253+300; //@line 4126 "xmlparse.c"
        var $1255=HEAP[$1254]; //@line 4126 "xmlparse.c"
        var $1256=$1255+28; //@line 4126 "xmlparse.c"
        var $1257=HEAP[$1256]; //@line 4126 "xmlparse.c"
        var $1258=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1259=$1258+300; //@line 4126 "xmlparse.c"
        var $1260=HEAP[$1259]; //@line 4126 "xmlparse.c"
        var $1261=$1260+24; //@line 4126 "xmlparse.c"
        var $1262=HEAP[$1261]; //@line 4126 "xmlparse.c"
        var $1263=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1264=$1263+300; //@line 4126 "xmlparse.c"
        var $1265=HEAP[$1264]; //@line 4126 "xmlparse.c"
        var $1266=$1265+16; //@line 4126 "xmlparse.c"
        var $1267=HEAP[$1266]; //@line 4126 "xmlparse.c"
        var $1268=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1269=$1268+300; //@line 4126 "xmlparse.c"
        var $1270=HEAP[$1269]; //@line 4126 "xmlparse.c"
        var $1271=$1270+20; //@line 4126 "xmlparse.c"
        var $1272=HEAP[$1271]; //@line 4126 "xmlparse.c"
        var $1273=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1274=$1273+300; //@line 4126 "xmlparse.c"
        var $1275=HEAP[$1274]; //@line 4126 "xmlparse.c"
        var $1276=$1275; //@line 4126 "xmlparse.c"
        var $1277=HEAP[$1276]; //@line 4126 "xmlparse.c"
        var $1278=$parser_addr_i; //@line 4126 "xmlparse.c"
        var $1279=$1278+4; //@line 4126 "xmlparse.c"
        var $1280=HEAP[$1279]; //@line 4126 "xmlparse.c"
        FUNCTION_TABLE[$1252]($1280, $1277, 0, 0, 0, $1272, $1267, $1262, $1257); //@line 4126 "xmlparse.c"
        $handleDefault_i=0; //@line 4133 "xmlparse.c"
        __label__ = 350; break; //@line 4133 "xmlparse.c"
      case 199: // $bb153_i
        var $1281=$enc_addr_i; //@line 4139 "xmlparse.c"
        var $1282=$1281+44; //@line 4139 "xmlparse.c"
        var $1283=HEAP[$1282]; //@line 4139 "xmlparse.c"
        var $1284=HEAP[$next_addr_i]; //@line 4139 "xmlparse.c"
        var $1285=$enc_addr_i; //@line 4139 "xmlparse.c"
        var $1286=$s_addr_i; //@line 4139 "xmlparse.c"
        var $1287=FUNCTION_TABLE[$1283]($1285, $1286, $1284); //@line 4139 "xmlparse.c"
        var $1288=($1287)!=0; //@line 4139 "xmlparse.c"
        if ($1288) { __label__ = 200; break; } else { __label__ = 201; break; } //@line 4139 "xmlparse.c"
      case 200: // $bb154_i
        var $1289=$parser_addr_i; //@line 4140 "xmlparse.c"
        var $1290=$1289+300; //@line 4140 "xmlparse.c"
        HEAP[$1290]=0; //@line 4140 "xmlparse.c"
        __label__ = 347; break; //@line 4140 "xmlparse.c"
      case 201: // $bb155_i
        var $1291=$dtd_i; //@line 4143 "xmlparse.c"
        var $1292=$1291+128; //@line 4143 "xmlparse.c"
        var $1293=HEAP[$1292]; //@line 4143 "xmlparse.c"
        var $1294=($1293)!=0; //@line 4143 "xmlparse.c"
        if ($1294) { __label__ = 202; break; } else { __label__ = 214; break; } //@line 4143 "xmlparse.c"
      case 202: // $bb156_i
        var $1295=HEAP[$next_addr_i]; //@line 4144 "xmlparse.c"
        var $1296=$dtd_i; //@line 4144 "xmlparse.c"
        var $1297=$1296+80; //@line 4144 "xmlparse.c"
        var $1298=$enc_addr_i; //@line 4144 "xmlparse.c"
        var $1299=$s_addr_i; //@line 4144 "xmlparse.c"
        var $1300=_poolStoreString($1297, $1298, $1299, $1295); //@line 4144 "xmlparse.c"
        $name_i=$1300; //@line 4144 "xmlparse.c"
        var $1301=$name_i; //@line 4145 "xmlparse.c"
        var $1302=($1301)==0; //@line 4145 "xmlparse.c"
        if ($1302) { __label__ = 203; break; } else { __label__ = 204; break; } //@line 4145 "xmlparse.c"
      case 203: // $bb157_i
        $3=1; //@line 4146 "xmlparse.c"
        __label__ = 354; break; //@line 4146 "xmlparse.c"
      case 204: // $bb158_i
        var $1303=$dtd_i; //@line 4147 "xmlparse.c"
        var $1304=$1303; //@line 4147 "xmlparse.c"
        var $1305=$name_i; //@line 4147 "xmlparse.c"
        var $1306=_lookup($1304, $1305, 36); //@line 4147 "xmlparse.c"
        var $1307=$1306; //@line 4147 "xmlparse.c"
        var $1308=$parser_addr_i; //@line 4147 "xmlparse.c"
        var $1309=$1308+300; //@line 4147 "xmlparse.c"
        HEAP[$1309]=$1307; //@line 4147 "xmlparse.c"
        var $1310=$parser_addr_i; //@line 4149 "xmlparse.c"
        var $1311=$1310+300; //@line 4149 "xmlparse.c"
        var $1312=HEAP[$1311]; //@line 4149 "xmlparse.c"
        var $1313=($1312)==0; //@line 4149 "xmlparse.c"
        if ($1313) { __label__ = 205; break; } else { __label__ = 206; break; } //@line 4149 "xmlparse.c"
      case 205: // $bb159_i
        $3=1; //@line 4150 "xmlparse.c"
        __label__ = 354; break; //@line 4150 "xmlparse.c"
      case 206: // $bb160_i
        var $1314=$parser_addr_i; //@line 4151 "xmlparse.c"
        var $1315=$1314+300; //@line 4151 "xmlparse.c"
        var $1316=HEAP[$1315]; //@line 4151 "xmlparse.c"
        var $1317=$1316; //@line 4151 "xmlparse.c"
        var $1318=HEAP[$1317]; //@line 4151 "xmlparse.c"
        var $1319=$name_i; //@line 4151 "xmlparse.c"
        var $1320=($1318)!=($1319); //@line 4151 "xmlparse.c"
        var $1321=$dtd_i; //@line 4152 "xmlparse.c"
        var $1322=$1321+80; //@line 4152 "xmlparse.c"
        if ($1320) { __label__ = 207; break; } else { __label__ = 208; break; } //@line 4151 "xmlparse.c"
      case 207: // $bb161_i
        var $1323=$1322+16; //@line 4152 "xmlparse.c"
        var $1324=HEAP[$1323]; //@line 4152 "xmlparse.c"
        var $1325=$dtd_i; //@line 4152 "xmlparse.c"
        var $1326=$1325+80; //@line 4152 "xmlparse.c"
        var $1327=$1326+12; //@line 4152 "xmlparse.c"
        HEAP[$1327]=$1324; //@line 4152 "xmlparse.c"
        var $1328=$parser_addr_i; //@line 4153 "xmlparse.c"
        var $1329=$1328+300; //@line 4153 "xmlparse.c"
        HEAP[$1329]=0; //@line 4153 "xmlparse.c"
        __label__ = 347; break; //@line 4153 "xmlparse.c"
      case 208: // $bb162_i
        var $1330=$1322+12; //@line 4156 "xmlparse.c"
        var $1331=HEAP[$1330]; //@line 4156 "xmlparse.c"
        var $1332=$dtd_i; //@line 4156 "xmlparse.c"
        var $1333=$1332+80; //@line 4156 "xmlparse.c"
        var $1334=$1333+16; //@line 4156 "xmlparse.c"
        HEAP[$1334]=$1331; //@line 4156 "xmlparse.c"
        var $1335=$parser_addr_i; //@line 4157 "xmlparse.c"
        var $1336=$1335+300; //@line 4157 "xmlparse.c"
        var $1337=HEAP[$1336]; //@line 4157 "xmlparse.c"
        var $1338=$1337+24; //@line 4157 "xmlparse.c"
        HEAP[$1338]=0; //@line 4157 "xmlparse.c"
        var $1339=$parser_addr_i; //@line 4158 "xmlparse.c"
        var $1340=$1339+300; //@line 4158 "xmlparse.c"
        var $1341=HEAP[$1340]; //@line 4158 "xmlparse.c"
        var $1342=$1341+33; //@line 4158 "xmlparse.c"
        HEAP[$1342]=0; //@line 4158 "xmlparse.c"
        var $1343=$parser_addr_i; //@line 4162 "xmlparse.c"
        var $1344=$1343+300; //@line 4162 "xmlparse.c"
        var $1345=HEAP[$1344]; //@line 4162 "xmlparse.c"
        var $1346=$parser_addr_i; //@line 4162 "xmlparse.c"
        var $1347=$1346+460; //@line 4162 "xmlparse.c"
        var $1348=HEAP[$1347]; //@line 4162 "xmlparse.c"
        var $1349=($1348)!=0; //@line 4162 "xmlparse.c"
        if ($1349) { __label__ = 211; break; } else { __label__ = 209; break; } //@line 4162 "xmlparse.c"
      case 209: // $bb163_i
        var $1350=$parser_addr_i; //@line 4162 "xmlparse.c"
        var $1351=$1350+284; //@line 4162 "xmlparse.c"
        var $1352=HEAP[$1351]; //@line 4162 "xmlparse.c"
        var $1353=($1352)!=0; //@line 4162 "xmlparse.c"
        if ($1353) { __label__ = 211; break; } else { __label__ = 210; break; } //@line 4162 "xmlparse.c"
      case 210: // $bb164_i
        $iftmp_201_i=1; //@line 4162 "xmlparse.c"
        __label__ = 212; break; //@line 4162 "xmlparse.c"
      case 211: // $bb165_i
        $iftmp_201_i=0; //@line 4162 "xmlparse.c"
        __label__ = 212; break; //@line 4162 "xmlparse.c"
      case 212: // $bb166_i
        var $1354=$iftmp_201_i; //@line 4162 "xmlparse.c"
        var $1355=((($1354)) & 255); //@line 4162 "xmlparse.c"
        var $1356=$1345+34; //@line 4162 "xmlparse.c"
        HEAP[$1356]=$1355; //@line 4162 "xmlparse.c"
        var $1357=$parser_addr_i; //@line 4163 "xmlparse.c"
        var $1358=$1357+136; //@line 4163 "xmlparse.c"
        var $1359=HEAP[$1358]; //@line 4163 "xmlparse.c"
        var $1360=($1359)!=0; //@line 4163 "xmlparse.c"
        if ($1360) { __label__ = 213; break; } else { __label__ = 347; break; } //@line 4163 "xmlparse.c"
      case 213: // $bb167_i
        $handleDefault_i=0; //@line 4164 "xmlparse.c"
        __label__ = 350; break; //@line 4164 "xmlparse.c"
      case 214: // $bb169_i
        var $1361=$dtd_i; //@line 4168 "xmlparse.c"
        var $1362=$1361+80; //@line 4168 "xmlparse.c"
        var $1363=$1362+16; //@line 4168 "xmlparse.c"
        var $1364=HEAP[$1363]; //@line 4168 "xmlparse.c"
        var $1365=$dtd_i; //@line 4168 "xmlparse.c"
        var $1366=$1365+80; //@line 4168 "xmlparse.c"
        var $1367=$1366+12; //@line 4168 "xmlparse.c"
        HEAP[$1367]=$1364; //@line 4168 "xmlparse.c"
        var $1368=$parser_addr_i; //@line 4169 "xmlparse.c"
        var $1369=$1368+300; //@line 4169 "xmlparse.c"
        HEAP[$1369]=0; //@line 4169 "xmlparse.c"
        __label__ = 347; break; //@line 4169 "xmlparse.c"
      case 215: // $bb171_i
        var $1370=$parser_addr_i; //@line 4204 "xmlparse.c"
        var $1371=$1370+300; //@line 4204 "xmlparse.c"
        HEAP[$1371]=0; //@line 4204 "xmlparse.c"
        __label__ = 347; break; //@line 4204 "xmlparse.c"
      case 216: // $bb172_i
        var $1372=$parser_addr_i; //@line 4208 "xmlparse.c"
        var $1373=$1372+324; //@line 4208 "xmlparse.c"
        HEAP[$1373]=0; //@line 4208 "xmlparse.c"
        var $1374=$parser_addr_i; //@line 4209 "xmlparse.c"
        var $1375=$1374+320; //@line 4209 "xmlparse.c"
        HEAP[$1375]=0; //@line 4209 "xmlparse.c"
        var $1376=$parser_addr_i; //@line 4210 "xmlparse.c"
        var $1377=$1376+96; //@line 4210 "xmlparse.c"
        var $1378=HEAP[$1377]; //@line 4210 "xmlparse.c"
        var $1379=($1378)!=0; //@line 4210 "xmlparse.c"
        if ($1379) { __label__ = 217; break; } else { __label__ = 347; break; } //@line 4210 "xmlparse.c"
      case 217: // $bb173_i
        var $1380=HEAP[$next_addr_i]; //@line 4211 "xmlparse.c"
        var $1381=$parser_addr_i; //@line 4211 "xmlparse.c"
        var $1382=$1381+400; //@line 4211 "xmlparse.c"
        var $1383=$enc_addr_i; //@line 4211 "xmlparse.c"
        var $1384=$s_addr_i; //@line 4211 "xmlparse.c"
        var $1385=_poolStoreString($1382, $1383, $1384, $1380); //@line 4211 "xmlparse.c"
        var $1386=$parser_addr_i; //@line 4211 "xmlparse.c"
        var $1387=$1386+320; //@line 4211 "xmlparse.c"
        HEAP[$1387]=$1385; //@line 4211 "xmlparse.c"
        var $1388=$parser_addr_i; //@line 4212 "xmlparse.c"
        var $1389=$1388+320; //@line 4212 "xmlparse.c"
        var $1390=HEAP[$1389]; //@line 4212 "xmlparse.c"
        var $1391=($1390)==0; //@line 4212 "xmlparse.c"
        if ($1391) { __label__ = 218; break; } else { __label__ = 219; break; } //@line 4212 "xmlparse.c"
      case 218: // $bb174_i
        $3=1; //@line 4213 "xmlparse.c"
        __label__ = 354; break; //@line 4213 "xmlparse.c"
      case 219: // $bb175_i
        var $1392=$parser_addr_i; //@line 4214 "xmlparse.c"
        var $1393=$1392+400; //@line 4214 "xmlparse.c"
        var $1394=$1393+12; //@line 4214 "xmlparse.c"
        var $1395=HEAP[$1394]; //@line 4214 "xmlparse.c"
        var $1396=$parser_addr_i; //@line 4214 "xmlparse.c"
        var $1397=$1396+400; //@line 4214 "xmlparse.c"
        var $1398=$1397+16; //@line 4214 "xmlparse.c"
        HEAP[$1398]=$1395; //@line 4214 "xmlparse.c"
        $handleDefault_i=0; //@line 4215 "xmlparse.c"
        __label__ = 350; break; //@line 4215 "xmlparse.c"
      case 220: // $bb177_i
        var $1399=$enc_addr_i; //@line 4219 "xmlparse.c"
        var $1400=$1399+52; //@line 4219 "xmlparse.c"
        var $1401=HEAP[$1400]; //@line 4219 "xmlparse.c"
        var $1402=HEAP[$next_addr_i]; //@line 4219 "xmlparse.c"
        var $1403=$enc_addr_i; //@line 4219 "xmlparse.c"
        var $1404=$s_addr_i; //@line 4219 "xmlparse.c"
        var $1405=$eventPP_i; //@line 4219 "xmlparse.c"
        var $1406=FUNCTION_TABLE[$1401]($1403, $1404, $1402, $1405); //@line 4219 "xmlparse.c"
        var $1407=($1406)==0; //@line 4219 "xmlparse.c"
        if ($1407) { __label__ = 221; break; } else { __label__ = 222; break; } //@line 4219 "xmlparse.c"
      case 221: // $bb178_i
        $3=32; //@line 4220 "xmlparse.c"
        __label__ = 354; break; //@line 4220 "xmlparse.c"
      case 222: // $bb179_i
        var $1408=$parser_addr_i; //@line 4221 "xmlparse.c"
        var $1409=$1408+320; //@line 4221 "xmlparse.c"
        var $1410=HEAP[$1409]; //@line 4221 "xmlparse.c"
        var $1411=($1410)!=0; //@line 4221 "xmlparse.c"
        if ($1411) { __label__ = 223; break; } else { __label__ = 347; break; } //@line 4221 "xmlparse.c"
      case 223: // $bb180_i
        var $1412=HEAP[$next_addr_i]; //@line 4225 "xmlparse.c"
        var $1413=$enc_addr_i; //@line 4225 "xmlparse.c"
        var $1414=$1413+64; //@line 4225 "xmlparse.c"
        var $1415=HEAP[$1414]; //@line 4225 "xmlparse.c"
        var $1416=0 - ($1415); //@line 4225 "xmlparse.c"
        var $1417=$1412+$1416; //@line 4225 "xmlparse.c"
        var $1418=$enc_addr_i; //@line 4225 "xmlparse.c"
        var $1419=$1418+64; //@line 4225 "xmlparse.c"
        var $1420=HEAP[$1419]; //@line 4225 "xmlparse.c"
        var $1421=$s_addr_i; //@line 4225 "xmlparse.c"
        var $1422=$1421+$1420; //@line 4225 "xmlparse.c"
        var $1423=$parser_addr_i; //@line 4225 "xmlparse.c"
        var $1424=$1423+400; //@line 4225 "xmlparse.c"
        var $1425=$enc_addr_i; //@line 4225 "xmlparse.c"
        var $1426=_poolStoreString($1424, $1425, $1422, $1417); //@line 4225 "xmlparse.c"
        $tem181_i=$1426; //@line 4225 "xmlparse.c"
        var $1427=$tem181_i; //@line 4226 "xmlparse.c"
        var $1428=($1427)==0; //@line 4226 "xmlparse.c"
        if ($1428) { __label__ = 224; break; } else { __label__ = 225; break; } //@line 4226 "xmlparse.c"
      case 224: // $bb182_i
        $3=1; //@line 4227 "xmlparse.c"
        __label__ = 354; break; //@line 4227 "xmlparse.c"
      case 225: // $bb183_i
        var $1429=$tem181_i; //@line 4228 "xmlparse.c"
        _normalizePublicId($1429); //@line 4228 "xmlparse.c"
        var $1430=$parser_addr_i; //@line 4229 "xmlparse.c"
        var $1431=$1430+324; //@line 4229 "xmlparse.c"
        var $1432=$tem181_i; //@line 4229 "xmlparse.c"
        HEAP[$1431]=$1432; //@line 4229 "xmlparse.c"
        var $1433=$parser_addr_i; //@line 4230 "xmlparse.c"
        var $1434=$1433+400; //@line 4230 "xmlparse.c"
        var $1435=$1434+12; //@line 4230 "xmlparse.c"
        var $1436=HEAP[$1435]; //@line 4230 "xmlparse.c"
        var $1437=$parser_addr_i; //@line 4230 "xmlparse.c"
        var $1438=$1437+400; //@line 4230 "xmlparse.c"
        var $1439=$1438+16; //@line 4230 "xmlparse.c"
        HEAP[$1439]=$1436; //@line 4230 "xmlparse.c"
        $handleDefault_i=0; //@line 4231 "xmlparse.c"
        __label__ = 350; break; //@line 4231 "xmlparse.c"
      case 226: // $bb185_i
        var $1440=$parser_addr_i; //@line 4235 "xmlparse.c"
        var $1441=$1440+320; //@line 4235 "xmlparse.c"
        var $1442=HEAP[$1441]; //@line 4235 "xmlparse.c"
        var $1443=($1442)!=0; //@line 4235 "xmlparse.c"
        if ($1443) { __label__ = 227; break; } else { __label__ = 231; break; } //@line 4235 "xmlparse.c"
      case 227: // $bb186_i
        var $1444=$parser_addr_i; //@line 4235 "xmlparse.c"
        var $1445=$1444+96; //@line 4235 "xmlparse.c"
        var $1446=HEAP[$1445]; //@line 4235 "xmlparse.c"
        var $1447=($1446)!=0; //@line 4235 "xmlparse.c"
        if ($1447) { __label__ = 228; break; } else { __label__ = 231; break; } //@line 4235 "xmlparse.c"
      case 228: // $bb187_i
        var $1448=HEAP[$next_addr_i]; //@line 4239 "xmlparse.c"
        var $1449=$enc_addr_i; //@line 4239 "xmlparse.c"
        var $1450=$1449+64; //@line 4239 "xmlparse.c"
        var $1451=HEAP[$1450]; //@line 4239 "xmlparse.c"
        var $1452=0 - ($1451); //@line 4239 "xmlparse.c"
        var $1453=$1448+$1452; //@line 4239 "xmlparse.c"
        var $1454=$enc_addr_i; //@line 4239 "xmlparse.c"
        var $1455=$1454+64; //@line 4239 "xmlparse.c"
        var $1456=HEAP[$1455]; //@line 4239 "xmlparse.c"
        var $1457=$s_addr_i; //@line 4239 "xmlparse.c"
        var $1458=$1457+$1456; //@line 4239 "xmlparse.c"
        var $1459=$parser_addr_i; //@line 4239 "xmlparse.c"
        var $1460=$1459+400; //@line 4239 "xmlparse.c"
        var $1461=$enc_addr_i; //@line 4239 "xmlparse.c"
        var $1462=_poolStoreString($1460, $1461, $1458, $1453); //@line 4239 "xmlparse.c"
        $systemId_i=$1462; //@line 4239 "xmlparse.c"
        var $1463=$systemId_i; //@line 4240 "xmlparse.c"
        var $1464=($1463)==0; //@line 4240 "xmlparse.c"
        if ($1464) { __label__ = 229; break; } else { __label__ = 230; break; } //@line 4240 "xmlparse.c"
      case 229: // $bb188_i
        $3=1; //@line 4241 "xmlparse.c"
        __label__ = 354; break; //@line 4241 "xmlparse.c"
      case 230: // $bb189_i
        var $1465=$eventEndPP_i; //@line 4242 "xmlparse.c"
        var $1466=$s_addr_i; //@line 4242 "xmlparse.c"
        HEAP[$1465]=$1466; //@line 4242 "xmlparse.c"
        var $1467=$parser_addr_i; //@line 4243 "xmlparse.c"
        var $1468=$1467+96; //@line 4243 "xmlparse.c"
        var $1469=HEAP[$1468]; //@line 4243 "xmlparse.c"
        var $1470=$parser_addr_i; //@line 4243 "xmlparse.c"
        var $1471=$1470+324; //@line 4243 "xmlparse.c"
        var $1472=HEAP[$1471]; //@line 4243 "xmlparse.c"
        var $1473=$parser_addr_i; //@line 4243 "xmlparse.c"
        var $1474=$1473+344; //@line 4243 "xmlparse.c"
        var $1475=HEAP[$1474]; //@line 4243 "xmlparse.c"
        var $1476=$parser_addr_i; //@line 4243 "xmlparse.c"
        var $1477=$1476+320; //@line 4243 "xmlparse.c"
        var $1478=HEAP[$1477]; //@line 4243 "xmlparse.c"
        var $1479=$parser_addr_i; //@line 4243 "xmlparse.c"
        var $1480=$1479+4; //@line 4243 "xmlparse.c"
        var $1481=HEAP[$1480]; //@line 4243 "xmlparse.c"
        var $1482=$systemId_i; //@line 4243 "xmlparse.c"
        FUNCTION_TABLE[$1469]($1481, $1478, $1475, $1482, $1472); //@line 4243 "xmlparse.c"
        $handleDefault_i=0; //@line 4248 "xmlparse.c"
        __label__ = 231; break; //@line 4248 "xmlparse.c"
      case 231: // $bb190_i
        var $1483=$parser_addr_i; //@line 4250 "xmlparse.c"
        var $1484=$1483+400; //@line 4250 "xmlparse.c"
        $pool_addr_i32_i=$1484;
        var $1485=$pool_addr_i32_i; //@line 5979 "xmlparse.c"
        var $1486=$1485+4; //@line 5979 "xmlparse.c"
        var $1487=HEAP[$1486]; //@line 5979 "xmlparse.c"
        var $1488=($1487)==0; //@line 5979 "xmlparse.c"
        var $1489=$pool_addr_i32_i; //@line 5980 "xmlparse.c"
        var $1490=$1489; //@line 5980 "xmlparse.c"
        var $1491=HEAP[$1490]; //@line 5980 "xmlparse.c"
        if ($1488) { __label__ = 232; break; } else { __label__ = 233; break; } //@line 5979 "xmlparse.c"
      case 232: // $bb_i35_i
        var $1492=$pool_addr_i32_i; //@line 5980 "xmlparse.c"
        var $1493=$1492+4; //@line 5980 "xmlparse.c"
        HEAP[$1493]=$1491; //@line 5980 "xmlparse.c"
        __label__ = 235; break; //@line 5980 "xmlparse.c"
      case 233: // $bb1_i36_i
        $p_i33_i=$1491; //@line 5982 "xmlparse.c"
        var $1494=($1491)!=0; //@line 5983 "xmlparse.c"
        if ($1494) { __label__ = 234; break; } else { __label__ = 235; break; } //@line 5983 "xmlparse.c"
      case 234: // $bb2_i37_i
        var $1495=$p_i33_i; //@line 5984 "xmlparse.c"
        var $1496=$1495; //@line 5984 "xmlparse.c"
        var $1497=HEAP[$1496]; //@line 5984 "xmlparse.c"
        $tem_i34_i=$1497; //@line 5984 "xmlparse.c"
        var $1498=$pool_addr_i32_i; //@line 5985 "xmlparse.c"
        var $1499=$1498+4; //@line 5985 "xmlparse.c"
        var $1500=HEAP[$1499]; //@line 5985 "xmlparse.c"
        var $1501=$p_i33_i; //@line 5985 "xmlparse.c"
        var $1502=$1501; //@line 5985 "xmlparse.c"
        HEAP[$1502]=$1500; //@line 5985 "xmlparse.c"
        var $1503=$pool_addr_i32_i; //@line 5986 "xmlparse.c"
        var $1504=$1503+4; //@line 5986 "xmlparse.c"
        var $1505=$p_i33_i; //@line 5986 "xmlparse.c"
        HEAP[$1504]=$1505; //@line 5986 "xmlparse.c"
        var $1506=$tem_i34_i; //@line 5987 "xmlparse.c"
        $p_i33_i=$1506; //@line 5987 "xmlparse.c"
        var $1507=($1506)!=0; //@line 5983 "xmlparse.c"
        if ($1507) { __label__ = 234; break; } else { __label__ = 235; break; } //@line 5983 "xmlparse.c"
      case 235: // $poolClear_exit39_i
        var $1508=$pool_addr_i32_i; //@line 5990 "xmlparse.c"
        var $1509=$1508; //@line 5990 "xmlparse.c"
        HEAP[$1509]=0; //@line 5990 "xmlparse.c"
        var $1510=$pool_addr_i32_i; //@line 5991 "xmlparse.c"
        var $1511=$1510+16; //@line 5991 "xmlparse.c"
        HEAP[$1511]=0; //@line 5991 "xmlparse.c"
        var $1512=$pool_addr_i32_i; //@line 5992 "xmlparse.c"
        var $1513=$1512+12; //@line 5992 "xmlparse.c"
        HEAP[$1513]=0; //@line 5992 "xmlparse.c"
        var $1514=$pool_addr_i32_i; //@line 5993 "xmlparse.c"
        var $1515=$1514+8; //@line 5993 "xmlparse.c"
        HEAP[$1515]=0; //@line 5993 "xmlparse.c"
        __label__ = 347; break; //@line 4250 "xmlparse.c"
      case 236: // $bb191_i
        var $1516=$parser_addr_i; //@line 4253 "xmlparse.c"
        var $1517=$1516+324; //@line 4253 "xmlparse.c"
        var $1518=HEAP[$1517]; //@line 4253 "xmlparse.c"
        var $1519=($1518)!=0; //@line 4253 "xmlparse.c"
        if ($1519) { __label__ = 237; break; } else { __label__ = 239; break; } //@line 4253 "xmlparse.c"
      case 237: // $bb192_i
        var $1520=$parser_addr_i; //@line 4253 "xmlparse.c"
        var $1521=$1520+96; //@line 4253 "xmlparse.c"
        var $1522=HEAP[$1521]; //@line 4253 "xmlparse.c"
        var $1523=($1522)!=0; //@line 4253 "xmlparse.c"
        if ($1523) { __label__ = 238; break; } else { __label__ = 239; break; } //@line 4253 "xmlparse.c"
      case 238: // $bb193_i
        var $1524=$eventEndPP_i; //@line 4254 "xmlparse.c"
        var $1525=$s_addr_i; //@line 4254 "xmlparse.c"
        HEAP[$1524]=$1525; //@line 4254 "xmlparse.c"
        var $1526=$parser_addr_i; //@line 4255 "xmlparse.c"
        var $1527=$1526+96; //@line 4255 "xmlparse.c"
        var $1528=HEAP[$1527]; //@line 4255 "xmlparse.c"
        var $1529=$parser_addr_i; //@line 4255 "xmlparse.c"
        var $1530=$1529+324; //@line 4255 "xmlparse.c"
        var $1531=HEAP[$1530]; //@line 4255 "xmlparse.c"
        var $1532=$parser_addr_i; //@line 4255 "xmlparse.c"
        var $1533=$1532+344; //@line 4255 "xmlparse.c"
        var $1534=HEAP[$1533]; //@line 4255 "xmlparse.c"
        var $1535=$parser_addr_i; //@line 4255 "xmlparse.c"
        var $1536=$1535+320; //@line 4255 "xmlparse.c"
        var $1537=HEAP[$1536]; //@line 4255 "xmlparse.c"
        var $1538=$parser_addr_i; //@line 4255 "xmlparse.c"
        var $1539=$1538+4; //@line 4255 "xmlparse.c"
        var $1540=HEAP[$1539]; //@line 4255 "xmlparse.c"
        FUNCTION_TABLE[$1528]($1540, $1537, $1534, 0, $1531); //@line 4255 "xmlparse.c"
        $handleDefault_i=0; //@line 4260 "xmlparse.c"
        __label__ = 239; break; //@line 4260 "xmlparse.c"
      case 239: // $bb194_i
        var $1541=$parser_addr_i; //@line 4262 "xmlparse.c"
        var $1542=$1541+400; //@line 4262 "xmlparse.c"
        $pool_addr_i40_i=$1542;
        var $1543=$pool_addr_i40_i; //@line 5979 "xmlparse.c"
        var $1544=$1543+4; //@line 5979 "xmlparse.c"
        var $1545=HEAP[$1544]; //@line 5979 "xmlparse.c"
        var $1546=($1545)==0; //@line 5979 "xmlparse.c"
        var $1547=$pool_addr_i40_i; //@line 5980 "xmlparse.c"
        var $1548=$1547; //@line 5980 "xmlparse.c"
        var $1549=HEAP[$1548]; //@line 5980 "xmlparse.c"
        if ($1546) { __label__ = 240; break; } else { __label__ = 241; break; } //@line 5979 "xmlparse.c"
      case 240: // $bb_i43_i
        var $1550=$pool_addr_i40_i; //@line 5980 "xmlparse.c"
        var $1551=$1550+4; //@line 5980 "xmlparse.c"
        HEAP[$1551]=$1549; //@line 5980 "xmlparse.c"
        __label__ = 243; break; //@line 5980 "xmlparse.c"
      case 241: // $bb1_i44_i
        $p_i41_i=$1549; //@line 5982 "xmlparse.c"
        var $1552=($1549)!=0; //@line 5983 "xmlparse.c"
        if ($1552) { __label__ = 242; break; } else { __label__ = 243; break; } //@line 5983 "xmlparse.c"
      case 242: // $bb2_i45_i
        var $1553=$p_i41_i; //@line 5984 "xmlparse.c"
        var $1554=$1553; //@line 5984 "xmlparse.c"
        var $1555=HEAP[$1554]; //@line 5984 "xmlparse.c"
        $tem_i42_i=$1555; //@line 5984 "xmlparse.c"
        var $1556=$pool_addr_i40_i; //@line 5985 "xmlparse.c"
        var $1557=$1556+4; //@line 5985 "xmlparse.c"
        var $1558=HEAP[$1557]; //@line 5985 "xmlparse.c"
        var $1559=$p_i41_i; //@line 5985 "xmlparse.c"
        var $1560=$1559; //@line 5985 "xmlparse.c"
        HEAP[$1560]=$1558; //@line 5985 "xmlparse.c"
        var $1561=$pool_addr_i40_i; //@line 5986 "xmlparse.c"
        var $1562=$1561+4; //@line 5986 "xmlparse.c"
        var $1563=$p_i41_i; //@line 5986 "xmlparse.c"
        HEAP[$1562]=$1563; //@line 5986 "xmlparse.c"
        var $1564=$tem_i42_i; //@line 5987 "xmlparse.c"
        $p_i41_i=$1564; //@line 5987 "xmlparse.c"
        var $1565=($1564)!=0; //@line 5983 "xmlparse.c"
        if ($1565) { __label__ = 242; break; } else { __label__ = 243; break; } //@line 5983 "xmlparse.c"
      case 243: // $poolClear_exit47_i
        var $1566=$pool_addr_i40_i; //@line 5990 "xmlparse.c"
        var $1567=$1566; //@line 5990 "xmlparse.c"
        HEAP[$1567]=0; //@line 5990 "xmlparse.c"
        var $1568=$pool_addr_i40_i; //@line 5991 "xmlparse.c"
        var $1569=$1568+16; //@line 5991 "xmlparse.c"
        HEAP[$1569]=0; //@line 5991 "xmlparse.c"
        var $1570=$pool_addr_i40_i; //@line 5992 "xmlparse.c"
        var $1571=$1570+12; //@line 5992 "xmlparse.c"
        HEAP[$1571]=0; //@line 5992 "xmlparse.c"
        var $1572=$pool_addr_i40_i; //@line 5993 "xmlparse.c"
        var $1573=$1572+8; //@line 5993 "xmlparse.c"
        HEAP[$1573]=0; //@line 5993 "xmlparse.c"
        __label__ = 347; break; //@line 4262 "xmlparse.c"
      case 244: // $bb195_i
        var $1574=$tok_addr_i; //@line 4265 "xmlparse.c"
        if ($1574 == 12) {
          __label__ = 246; break;
        }
        else if ($1574 == 28) {
          __label__ = 245; break;
        }
        else {
        __label__ = 247; break;
        }
        
      case 245: // $bb196_i
        $3=10; //@line 4269 "xmlparse.c"
        __label__ = 354; break; //@line 4269 "xmlparse.c"
      case 246: // $bb197_i
        $3=17; //@line 4271 "xmlparse.c"
        __label__ = 354; break; //@line 4271 "xmlparse.c"
      case 247: // $bb198_i
        $3=2; //@line 4273 "xmlparse.c"
        __label__ = 354; break; //@line 4273 "xmlparse.c"
      case 248: // $bb199_i
        var $1575=$parser_addr_i; //@line 4293 "xmlparse.c"
        var $1576=$1575+252; //@line 4293 "xmlparse.c"
        var $1577=$1576+4; //@line 4293 "xmlparse.c"
        var $1578=HEAP[$1577]; //@line 4293 "xmlparse.c"
        var $1579=$parser_addr_i; //@line 4293 "xmlparse.c"
        var $1580=$1579+452; //@line 4293 "xmlparse.c"
        var $1581=HEAP[$1580]; //@line 4293 "xmlparse.c"
        var $1582=($1578) >= ($1581); //@line 4293 "xmlparse.c"
        if ($1582) { __label__ = 249; break; } else { __label__ = 258; break; } //@line 4293 "xmlparse.c"
      case 249: // $bb200_i
        var $1583=$parser_addr_i; //@line 4294 "xmlparse.c"
        var $1584=$1583+452; //@line 4294 "xmlparse.c"
        var $1585=HEAP[$1584]; //@line 4294 "xmlparse.c"
        var $1586=($1585)!=0; //@line 4294 "xmlparse.c"
        var $1587=$parser_addr_i; //@line 4295 "xmlparse.c"
        var $1588=$1587+12; //@line 4295 "xmlparse.c"
        if ($1586) { __label__ = 250; break; } else { __label__ = 256; break; } //@line 4294 "xmlparse.c"
      case 250: // $bb201_i
        var $1589=$1588+4; //@line 4295 "xmlparse.c"
        var $1590=HEAP[$1589]; //@line 4295 "xmlparse.c"
        var $1591=$parser_addr_i; //@line 4295 "xmlparse.c"
        var $1592=$1591+452; //@line 4295 "xmlparse.c"
        var $1593=HEAP[$1592]; //@line 4295 "xmlparse.c"
        var $1594=($1593) * 2; //@line 4295 "xmlparse.c"
        var $1595=$parser_addr_i; //@line 4295 "xmlparse.c"
        var $1596=$1595+452; //@line 4295 "xmlparse.c"
        HEAP[$1596]=$1594; //@line 4295 "xmlparse.c"
        var $1597=$parser_addr_i; //@line 4295 "xmlparse.c"
        var $1598=$1597+452; //@line 4295 "xmlparse.c"
        var $1599=HEAP[$1598]; //@line 4295 "xmlparse.c"
        var $1600=$parser_addr_i; //@line 4295 "xmlparse.c"
        var $1601=$1600+448; //@line 4295 "xmlparse.c"
        var $1602=HEAP[$1601]; //@line 4295 "xmlparse.c"
        var $1603=FUNCTION_TABLE[$1590]($1602, $1599); //@line 4295 "xmlparse.c"
        $temp_i=$1603; //@line 4295 "xmlparse.c"
        var $1604=$temp_i; //@line 4296 "xmlparse.c"
        var $1605=($1604)==0; //@line 4296 "xmlparse.c"
        if ($1605) { __label__ = 251; break; } else { __label__ = 252; break; } //@line 4296 "xmlparse.c"
      case 251: // $bb202_i
        $3=1; //@line 4297 "xmlparse.c"
        __label__ = 354; break; //@line 4297 "xmlparse.c"
      case 252: // $bb203_i
        var $1606=$parser_addr_i; //@line 4298 "xmlparse.c"
        var $1607=$1606+448; //@line 4298 "xmlparse.c"
        var $1608=$temp_i; //@line 4298 "xmlparse.c"
        HEAP[$1607]=$1608; //@line 4298 "xmlparse.c"
        var $1609=$dtd_i; //@line 4299 "xmlparse.c"
        var $1610=$1609+164; //@line 4299 "xmlparse.c"
        var $1611=HEAP[$1610]; //@line 4299 "xmlparse.c"
        var $1612=($1611)!=0; //@line 4299 "xmlparse.c"
        if ($1612) { __label__ = 253; break; } else { __label__ = 258; break; } //@line 4299 "xmlparse.c"
      case 253: // $bb204_i
        var $1613=$parser_addr_i; //@line 4300 "xmlparse.c"
        var $1614=$1613+12; //@line 4300 "xmlparse.c"
        var $1615=$1614+4; //@line 4300 "xmlparse.c"
        var $1616=HEAP[$1615]; //@line 4300 "xmlparse.c"
        var $1617=$parser_addr_i; //@line 4300 "xmlparse.c"
        var $1618=$1617+452; //@line 4300 "xmlparse.c"
        var $1619=HEAP[$1618]; //@line 4300 "xmlparse.c"
        var $1620=($1619) * 4; //@line 4300 "xmlparse.c"
        var $1621=$dtd_i; //@line 4300 "xmlparse.c"
        var $1622=$1621+164; //@line 4300 "xmlparse.c"
        var $1623=HEAP[$1622]; //@line 4300 "xmlparse.c"
        var $1624=$1623; //@line 4300 "xmlparse.c"
        var $1625=FUNCTION_TABLE[$1616]($1624, $1620); //@line 4300 "xmlparse.c"
        var $1626=$1625; //@line 4300 "xmlparse.c"
        $temp205_i=$1626; //@line 4300 "xmlparse.c"
        var $1627=$temp205_i; //@line 4302 "xmlparse.c"
        var $1628=($1627)==0; //@line 4302 "xmlparse.c"
        if ($1628) { __label__ = 254; break; } else { __label__ = 255; break; } //@line 4302 "xmlparse.c"
      case 254: // $bb206_i
        $3=1; //@line 4303 "xmlparse.c"
        __label__ = 354; break; //@line 4303 "xmlparse.c"
      case 255: // $bb207_i
        var $1629=$dtd_i; //@line 4304 "xmlparse.c"
        var $1630=$1629+164; //@line 4304 "xmlparse.c"
        var $1631=$temp205_i; //@line 4304 "xmlparse.c"
        HEAP[$1630]=$1631; //@line 4304 "xmlparse.c"
        __label__ = 258; break; //@line 4304 "xmlparse.c"
      case 256: // $bb209_i
        var $1632=$1588; //@line 4308 "xmlparse.c"
        var $1633=HEAP[$1632]; //@line 4308 "xmlparse.c"
        var $1634=$parser_addr_i; //@line 4308 "xmlparse.c"
        var $1635=$1634+452; //@line 4308 "xmlparse.c"
        HEAP[$1635]=32; //@line 4308 "xmlparse.c"
        var $1636=$parser_addr_i; //@line 4308 "xmlparse.c"
        var $1637=$1636+452; //@line 4308 "xmlparse.c"
        var $1638=HEAP[$1637]; //@line 4308 "xmlparse.c"
        var $1639=FUNCTION_TABLE[$1633]($1638); //@line 4308 "xmlparse.c"
        var $1640=$parser_addr_i; //@line 4308 "xmlparse.c"
        var $1641=$1640+448; //@line 4308 "xmlparse.c"
        HEAP[$1641]=$1639; //@line 4308 "xmlparse.c"
        var $1642=$parser_addr_i; //@line 4309 "xmlparse.c"
        var $1643=$1642+448; //@line 4309 "xmlparse.c"
        var $1644=HEAP[$1643]; //@line 4309 "xmlparse.c"
        var $1645=($1644)==0; //@line 4309 "xmlparse.c"
        if ($1645) { __label__ = 257; break; } else { __label__ = 258; break; } //@line 4309 "xmlparse.c"
      case 257: // $bb210_i
        $3=1; //@line 4310 "xmlparse.c"
        __label__ = 354; break; //@line 4310 "xmlparse.c"
      case 258: // $bb211_i
        var $1646=$parser_addr_i; //@line 4313 "xmlparse.c"
        var $1647=$1646+448; //@line 4313 "xmlparse.c"
        var $1648=HEAP[$1647]; //@line 4313 "xmlparse.c"
        var $1649=$parser_addr_i; //@line 4313 "xmlparse.c"
        var $1650=$1649+252; //@line 4313 "xmlparse.c"
        var $1651=$1650+4; //@line 4313 "xmlparse.c"
        var $1652=HEAP[$1651]; //@line 4313 "xmlparse.c"
        var $1653=$1648+$1652; //@line 4313 "xmlparse.c"
        HEAP[$1653]=0; //@line 4313 "xmlparse.c"
        var $1654=$dtd_i; //@line 4314 "xmlparse.c"
        var $1655=$1654+140; //@line 4314 "xmlparse.c"
        var $1656=HEAP[$1655]; //@line 4314 "xmlparse.c"
        var $1657=($1656)!=0; //@line 4314 "xmlparse.c"
        if ($1657) { __label__ = 259; break; } else { __label__ = 347; break; } //@line 4314 "xmlparse.c"
      case 259: // $bb212_i
        var $1658=$parser_addr_i; //@line 4315 "xmlparse.c"
        var $1659=_nextScaffoldPart($1658); //@line 4315 "xmlparse.c"
        $myindex_i=$1659; //@line 4315 "xmlparse.c"
        var $1660=$myindex_i; //@line 4316 "xmlparse.c"
        var $1661=($1660) < 0; //@line 4316 "xmlparse.c"
        if ($1661) { __label__ = 260; break; } else { __label__ = 261; break; } //@line 4316 "xmlparse.c"
      case 260: // $bb213_i
        $3=1; //@line 4317 "xmlparse.c"
        __label__ = 354; break; //@line 4317 "xmlparse.c"
      case 261: // $bb214_i
        var $1662=$dtd_i; //@line 4318 "xmlparse.c"
        var $1663=$1662+164; //@line 4318 "xmlparse.c"
        var $1664=HEAP[$1663]; //@line 4318 "xmlparse.c"
        var $1665=$dtd_i; //@line 4318 "xmlparse.c"
        var $1666=$1665+160; //@line 4318 "xmlparse.c"
        var $1667=HEAP[$1666]; //@line 4318 "xmlparse.c"
        var $1668=$1664+4*$1667; //@line 4318 "xmlparse.c"
        var $1669=$myindex_i; //@line 4318 "xmlparse.c"
        HEAP[$1668]=$1669; //@line 4318 "xmlparse.c"
        var $1670=$dtd_i; //@line 4319 "xmlparse.c"
        var $1671=$1670+160; //@line 4319 "xmlparse.c"
        var $1672=HEAP[$1671]; //@line 4319 "xmlparse.c"
        var $1673=($1672) + 1; //@line 4319 "xmlparse.c"
        var $1674=$dtd_i; //@line 4319 "xmlparse.c"
        var $1675=$1674+160; //@line 4319 "xmlparse.c"
        HEAP[$1675]=$1673; //@line 4319 "xmlparse.c"
        var $1676=$dtd_i; //@line 4320 "xmlparse.c"
        var $1677=$1676+144; //@line 4320 "xmlparse.c"
        var $1678=HEAP[$1677]; //@line 4320 "xmlparse.c"
        var $1679=$myindex_i; //@line 4320 "xmlparse.c"
        var $1680=$1678+28*$1679; //@line 4320 "xmlparse.c"
        var $1681=$1680; //@line 4320 "xmlparse.c"
        HEAP[$1681]=6; //@line 4320 "xmlparse.c"
        var $1682=$parser_addr_i; //@line 4321 "xmlparse.c"
        var $1683=$1682+128; //@line 4321 "xmlparse.c"
        var $1684=HEAP[$1683]; //@line 4321 "xmlparse.c"
        var $1685=($1684)!=0; //@line 4321 "xmlparse.c"
        if ($1685) { __label__ = 262; break; } else { __label__ = 347; break; } //@line 4321 "xmlparse.c"
      case 262: // $bb215_i
        $handleDefault_i=0; //@line 4322 "xmlparse.c"
        __label__ = 350; break; //@line 4322 "xmlparse.c"
      case 263: // $bb217_i
        var $1686=$parser_addr_i; //@line 4326 "xmlparse.c"
        var $1687=$1686+448; //@line 4326 "xmlparse.c"
        var $1688=HEAP[$1687]; //@line 4326 "xmlparse.c"
        var $1689=$parser_addr_i; //@line 4326 "xmlparse.c"
        var $1690=$1689+252; //@line 4326 "xmlparse.c"
        var $1691=$1690+4; //@line 4326 "xmlparse.c"
        var $1692=HEAP[$1691]; //@line 4326 "xmlparse.c"
        var $1693=$1688+$1692; //@line 4326 "xmlparse.c"
        var $1694=HEAP[$1693]; //@line 4326 "xmlparse.c"
        var $1695=($1694)==124; //@line 4326 "xmlparse.c"
        if ($1695) { __label__ = 264; break; } else { __label__ = 265; break; } //@line 4326 "xmlparse.c"
      case 264: // $bb218_i
        $3=2; //@line 4327 "xmlparse.c"
        __label__ = 354; break; //@line 4327 "xmlparse.c"
      case 265: // $bb219_i
        var $1696=$parser_addr_i; //@line 4328 "xmlparse.c"
        var $1697=$1696+448; //@line 4328 "xmlparse.c"
        var $1698=HEAP[$1697]; //@line 4328 "xmlparse.c"
        var $1699=$parser_addr_i; //@line 4328 "xmlparse.c"
        var $1700=$1699+252; //@line 4328 "xmlparse.c"
        var $1701=$1700+4; //@line 4328 "xmlparse.c"
        var $1702=HEAP[$1701]; //@line 4328 "xmlparse.c"
        var $1703=$1698+$1702; //@line 4328 "xmlparse.c"
        HEAP[$1703]=44; //@line 4328 "xmlparse.c"
        var $1704=$dtd_i; //@line 4329 "xmlparse.c"
        var $1705=$1704+140; //@line 4329 "xmlparse.c"
        var $1706=HEAP[$1705]; //@line 4329 "xmlparse.c"
        var $1707=($1706)!=0; //@line 4329 "xmlparse.c"
        if ($1707) { __label__ = 266; break; } else { __label__ = 347; break; } //@line 4329 "xmlparse.c"
      case 266: // $bb220_i
        var $1708=$parser_addr_i; //@line 4329 "xmlparse.c"
        var $1709=$1708+128; //@line 4329 "xmlparse.c"
        var $1710=HEAP[$1709]; //@line 4329 "xmlparse.c"
        var $1711=($1710)!=0; //@line 4329 "xmlparse.c"
        if ($1711) { __label__ = 267; break; } else { __label__ = 347; break; } //@line 4329 "xmlparse.c"
      case 267: // $bb221_i
        $handleDefault_i=0; //@line 4330 "xmlparse.c"
        __label__ = 350; break; //@line 4330 "xmlparse.c"
      case 268: // $bb223_i
        var $1712=$parser_addr_i; //@line 4333 "xmlparse.c"
        var $1713=$1712+448; //@line 4333 "xmlparse.c"
        var $1714=HEAP[$1713]; //@line 4333 "xmlparse.c"
        var $1715=$parser_addr_i; //@line 4333 "xmlparse.c"
        var $1716=$1715+252; //@line 4333 "xmlparse.c"
        var $1717=$1716+4; //@line 4333 "xmlparse.c"
        var $1718=HEAP[$1717]; //@line 4333 "xmlparse.c"
        var $1719=$1714+$1718; //@line 4333 "xmlparse.c"
        var $1720=HEAP[$1719]; //@line 4333 "xmlparse.c"
        var $1721=($1720)==44; //@line 4333 "xmlparse.c"
        if ($1721) { __label__ = 269; break; } else { __label__ = 270; break; } //@line 4333 "xmlparse.c"
      case 269: // $bb224_i
        $3=2; //@line 4334 "xmlparse.c"
        __label__ = 354; break; //@line 4334 "xmlparse.c"
      case 270: // $bb225_i
        var $1722=$dtd_i; //@line 4335 "xmlparse.c"
        var $1723=$1722+140; //@line 4335 "xmlparse.c"
        var $1724=HEAP[$1723]; //@line 4335 "xmlparse.c"
        var $1725=($1724)!=0; //@line 4335 "xmlparse.c"
        if ($1725) { __label__ = 271; break; } else { __label__ = 275; break; } //@line 4335 "xmlparse.c"
      case 271: // $bb226_i
        var $1726=$parser_addr_i; //@line 4335 "xmlparse.c"
        var $1727=$1726+448; //@line 4335 "xmlparse.c"
        var $1728=HEAP[$1727]; //@line 4335 "xmlparse.c"
        var $1729=$parser_addr_i; //@line 4335 "xmlparse.c"
        var $1730=$1729+252; //@line 4335 "xmlparse.c"
        var $1731=$1730+4; //@line 4335 "xmlparse.c"
        var $1732=HEAP[$1731]; //@line 4335 "xmlparse.c"
        var $1733=$1728+$1732; //@line 4335 "xmlparse.c"
        var $1734=HEAP[$1733]; //@line 4335 "xmlparse.c"
        var $1735=($1734)==0; //@line 4335 "xmlparse.c"
        if ($1735) { __label__ = 272; break; } else { __label__ = 275; break; } //@line 4335 "xmlparse.c"
      case 272: // $bb227_i
        var $1736=$dtd_i; //@line 4335 "xmlparse.c"
        var $1737=$1736+144; //@line 4335 "xmlparse.c"
        var $1738=HEAP[$1737]; //@line 4335 "xmlparse.c"
        var $1739=$dtd_i; //@line 4335 "xmlparse.c"
        var $1740=$1739+164; //@line 4335 "xmlparse.c"
        var $1741=HEAP[$1740]; //@line 4335 "xmlparse.c"
        var $1742=$dtd_i; //@line 4335 "xmlparse.c"
        var $1743=$1742+160; //@line 4335 "xmlparse.c"
        var $1744=HEAP[$1743]; //@line 4335 "xmlparse.c"
        var $1745=($1744) - 1; //@line 4335 "xmlparse.c"
        var $1746=$1741+4*$1745; //@line 4335 "xmlparse.c"
        var $1747=HEAP[$1746]; //@line 4335 "xmlparse.c"
        var $1748=$1738+28*$1747; //@line 4335 "xmlparse.c"
        var $1749=$1748; //@line 4335 "xmlparse.c"
        var $1750=HEAP[$1749]; //@line 4335 "xmlparse.c"
        var $1751=($1750)!=3; //@line 4335 "xmlparse.c"
        if ($1751) { __label__ = 273; break; } else { __label__ = 275; break; } //@line 4335 "xmlparse.c"
      case 273: // $bb228_i
        var $1752=$dtd_i; //@line 4340 "xmlparse.c"
        var $1753=$1752+144; //@line 4340 "xmlparse.c"
        var $1754=HEAP[$1753]; //@line 4340 "xmlparse.c"
        var $1755=$dtd_i; //@line 4340 "xmlparse.c"
        var $1756=$1755+164; //@line 4340 "xmlparse.c"
        var $1757=HEAP[$1756]; //@line 4340 "xmlparse.c"
        var $1758=$dtd_i; //@line 4340 "xmlparse.c"
        var $1759=$1758+160; //@line 4340 "xmlparse.c"
        var $1760=HEAP[$1759]; //@line 4340 "xmlparse.c"
        var $1761=($1760) - 1; //@line 4340 "xmlparse.c"
        var $1762=$1757+4*$1761; //@line 4340 "xmlparse.c"
        var $1763=HEAP[$1762]; //@line 4340 "xmlparse.c"
        var $1764=$1754+28*$1763; //@line 4340 "xmlparse.c"
        var $1765=$1764; //@line 4340 "xmlparse.c"
        HEAP[$1765]=5; //@line 4340 "xmlparse.c"
        var $1766=$parser_addr_i; //@line 4342 "xmlparse.c"
        var $1767=$1766+128; //@line 4342 "xmlparse.c"
        var $1768=HEAP[$1767]; //@line 4342 "xmlparse.c"
        var $1769=($1768)!=0; //@line 4342 "xmlparse.c"
        if ($1769) { __label__ = 274; break; } else { __label__ = 275; break; } //@line 4342 "xmlparse.c"
      case 274: // $bb229_i
        $handleDefault_i=0; //@line 4343 "xmlparse.c"
        __label__ = 275; break; //@line 4343 "xmlparse.c"
      case 275: // $bb230_i
        var $1770=$parser_addr_i; //@line 4345 "xmlparse.c"
        var $1771=$1770+448; //@line 4345 "xmlparse.c"
        var $1772=HEAP[$1771]; //@line 4345 "xmlparse.c"
        var $1773=$parser_addr_i; //@line 4345 "xmlparse.c"
        var $1774=$1773+252; //@line 4345 "xmlparse.c"
        var $1775=$1774+4; //@line 4345 "xmlparse.c"
        var $1776=HEAP[$1775]; //@line 4345 "xmlparse.c"
        var $1777=$1772+$1776; //@line 4345 "xmlparse.c"
        HEAP[$1777]=124; //@line 4345 "xmlparse.c"
        __label__ = 347; break; //@line 4345 "xmlparse.c"
      case 276: // $bb231_i
        var $1778=$dtd_i; //@line 4421 "xmlparse.c"
        var $1779=$1778+130; //@line 4421 "xmlparse.c"
        var $1780=HEAP[$1779]; //@line 4421 "xmlparse.c"
        var $1781=($1780)==0; //@line 4421 "xmlparse.c"
        if ($1781) { __label__ = 277; break; } else { __label__ = 347; break; } //@line 4421 "xmlparse.c"
      case 277: // $bb232_i
        var $1782=$parser_addr_i; //@line 4421 "xmlparse.c"
        var $1783=$1782+108; //@line 4421 "xmlparse.c"
        var $1784=HEAP[$1783]; //@line 4421 "xmlparse.c"
        var $1785=($1784)!=0; //@line 4421 "xmlparse.c"
        if ($1785) { __label__ = 278; break; } else { __label__ = 347; break; } //@line 4421 "xmlparse.c"
      case 278: // $bb233_i
        var $1786=$parser_addr_i; //@line 4421 "xmlparse.c"
        var $1787=$1786+108; //@line 4421 "xmlparse.c"
        var $1788=HEAP[$1787]; //@line 4421 "xmlparse.c"
        var $1789=$parser_addr_i; //@line 4421 "xmlparse.c"
        var $1790=$1789+4; //@line 4421 "xmlparse.c"
        var $1791=HEAP[$1790]; //@line 4421 "xmlparse.c"
        var $1792=FUNCTION_TABLE[$1788]($1791); //@line 4421 "xmlparse.c"
        var $1793=($1792)==0; //@line 4421 "xmlparse.c"
        if ($1793) { __label__ = 279; break; } else { __label__ = 347; break; } //@line 4421 "xmlparse.c"
      case 279: // $bb234_i
        $3=22; //@line 4424 "xmlparse.c"
        __label__ = 354; break; //@line 4424 "xmlparse.c"
      case 280: // $bb236_i
        var $1794=$parser_addr_i; //@line 4430 "xmlparse.c"
        var $1795=$1794+128; //@line 4430 "xmlparse.c"
        var $1796=HEAP[$1795]; //@line 4430 "xmlparse.c"
        var $1797=($1796)!=0; //@line 4430 "xmlparse.c"
        if ($1797) { __label__ = 281; break; } else { __label__ = 347; break; } //@line 4430 "xmlparse.c"
      case 281: // $bb237_i
        var $1798=HEAP[$next_addr_i]; //@line 4431 "xmlparse.c"
        var $1799=$parser_addr_i; //@line 4431 "xmlparse.c"
        var $1800=$enc_addr_i; //@line 4431 "xmlparse.c"
        var $1801=$s_addr_i; //@line 4431 "xmlparse.c"
        var $1802=_getElementType($1799, $1800, $1801, $1798); //@line 4431 "xmlparse.c"
        var $1803=$parser_addr_i; //@line 4431 "xmlparse.c"
        var $1804=$1803+328; //@line 4431 "xmlparse.c"
        HEAP[$1804]=$1802; //@line 4431 "xmlparse.c"
        var $1805=$parser_addr_i; //@line 4432 "xmlparse.c"
        var $1806=$1805+328; //@line 4432 "xmlparse.c"
        var $1807=HEAP[$1806]; //@line 4432 "xmlparse.c"
        var $1808=($1807)==0; //@line 4432 "xmlparse.c"
        if ($1808) { __label__ = 282; break; } else { __label__ = 283; break; } //@line 4432 "xmlparse.c"
      case 282: // $bb238_i
        $3=1; //@line 4433 "xmlparse.c"
        __label__ = 354; break; //@line 4433 "xmlparse.c"
      case 283: // $bb239_i
        var $1809=$dtd_i; //@line 4434 "xmlparse.c"
        var $1810=$1809+160; //@line 4434 "xmlparse.c"
        HEAP[$1810]=0; //@line 4434 "xmlparse.c"
        var $1811=$dtd_i; //@line 4435 "xmlparse.c"
        var $1812=$1811+156; //@line 4435 "xmlparse.c"
        HEAP[$1812]=0; //@line 4435 "xmlparse.c"
        var $1813=$dtd_i; //@line 4436 "xmlparse.c"
        var $1814=$1813+140; //@line 4436 "xmlparse.c"
        HEAP[$1814]=1; //@line 4436 "xmlparse.c"
        $handleDefault_i=0; //@line 4437 "xmlparse.c"
        __label__ = 350; break; //@line 4437 "xmlparse.c"
      case 284: // $bb241_i
        var $1815=$dtd_i; //@line 4443 "xmlparse.c"
        var $1816=$1815+140; //@line 4443 "xmlparse.c"
        var $1817=HEAP[$1816]; //@line 4443 "xmlparse.c"
        var $1818=($1817)!=0; //@line 4443 "xmlparse.c"
        if ($1818) { __label__ = 285; break; } else { __label__ = 347; break; } //@line 4443 "xmlparse.c"
      case 285: // $bb242_i
        var $1819=$parser_addr_i; //@line 4444 "xmlparse.c"
        var $1820=$1819+128; //@line 4444 "xmlparse.c"
        var $1821=HEAP[$1820]; //@line 4444 "xmlparse.c"
        var $1822=($1821)!=0; //@line 4444 "xmlparse.c"
        if ($1822) { __label__ = 286; break; } else { __label__ = 292; break; } //@line 4444 "xmlparse.c"
      case 286: // $bb243_i
        var $1823=$parser_addr_i; //@line 4445 "xmlparse.c"
        var $1824=$1823+12; //@line 4445 "xmlparse.c"
        var $1825=$1824; //@line 4445 "xmlparse.c"
        var $1826=HEAP[$1825]; //@line 4445 "xmlparse.c"
        var $1827=FUNCTION_TABLE[$1826](20); //@line 4445 "xmlparse.c"
        var $1828=$1827; //@line 4445 "xmlparse.c"
        $content_i=$1828; //@line 4445 "xmlparse.c"
        var $1829=$content_i; //@line 4446 "xmlparse.c"
        var $1830=($1829)==0; //@line 4446 "xmlparse.c"
        if ($1830) { __label__ = 287; break; } else { __label__ = 288; break; } //@line 4446 "xmlparse.c"
      case 287: // $bb244_i
        $3=1; //@line 4447 "xmlparse.c"
        __label__ = 354; break; //@line 4447 "xmlparse.c"
      case 288: // $bb245_i
        var $1831=$content_i; //@line 4448 "xmlparse.c"
        var $1832=$1831+4; //@line 4448 "xmlparse.c"
        HEAP[$1832]=0; //@line 4448 "xmlparse.c"
        var $1833=$content_i; //@line 4449 "xmlparse.c"
        var $1834=$1833+8; //@line 4449 "xmlparse.c"
        HEAP[$1834]=0; //@line 4449 "xmlparse.c"
        var $1835=$content_i; //@line 4450 "xmlparse.c"
        var $1836=$1835+12; //@line 4450 "xmlparse.c"
        HEAP[$1836]=0; //@line 4450 "xmlparse.c"
        var $1837=$content_i; //@line 4451 "xmlparse.c"
        var $1838=$1837+16; //@line 4451 "xmlparse.c"
        HEAP[$1838]=0; //@line 4451 "xmlparse.c"
        var $1839=$role_i; //@line 4452 "xmlparse.c"
        var $1840=($1839)==41; //@line 4452 "xmlparse.c"
        if ($1840) { __label__ = 289; break; } else { __label__ = 290; break; } //@line 4452 "xmlparse.c"
      case 289: // $bb246_i
        $iftmp_207_i=2; //@line 4452 "xmlparse.c"
        __label__ = 291; break; //@line 4452 "xmlparse.c"
      case 290: // $bb247_i
        $iftmp_207_i=1; //@line 4452 "xmlparse.c"
        __label__ = 291; break; //@line 4452 "xmlparse.c"
      case 291: // $bb248_i
        var $1841=$content_i; //@line 4452 "xmlparse.c"
        var $1842=$1841; //@line 4452 "xmlparse.c"
        var $1843=$iftmp_207_i; //@line 4452 "xmlparse.c"
        HEAP[$1842]=$1843; //@line 4452 "xmlparse.c"
        var $1844=$eventEndPP_i; //@line 4455 "xmlparse.c"
        var $1845=$s_addr_i; //@line 4455 "xmlparse.c"
        HEAP[$1844]=$1845; //@line 4455 "xmlparse.c"
        var $1846=$parser_addr_i; //@line 4456 "xmlparse.c"
        var $1847=$1846+128; //@line 4456 "xmlparse.c"
        var $1848=HEAP[$1847]; //@line 4456 "xmlparse.c"
        var $1849=$parser_addr_i; //@line 4456 "xmlparse.c"
        var $1850=$1849+328; //@line 4456 "xmlparse.c"
        var $1851=HEAP[$1850]; //@line 4456 "xmlparse.c"
        var $1852=$1851; //@line 4456 "xmlparse.c"
        var $1853=HEAP[$1852]; //@line 4456 "xmlparse.c"
        var $1854=$parser_addr_i; //@line 4456 "xmlparse.c"
        var $1855=$1854+4; //@line 4456 "xmlparse.c"
        var $1856=HEAP[$1855]; //@line 4456 "xmlparse.c"
        var $1857=$content_i; //@line 4456 "xmlparse.c"
        FUNCTION_TABLE[$1848]($1856, $1853, $1857); //@line 4456 "xmlparse.c"
        $handleDefault_i=0; //@line 4457 "xmlparse.c"
        __label__ = 292; break; //@line 4457 "xmlparse.c"
      case 292: // $bb249_i
        var $1858=$dtd_i; //@line 4459 "xmlparse.c"
        var $1859=$1858+140; //@line 4459 "xmlparse.c"
        HEAP[$1859]=0; //@line 4459 "xmlparse.c"
        __label__ = 347; break; //@line 4459 "xmlparse.c"
      case 293: // $bb251_i
        var $1860=$dtd_i; //@line 4464 "xmlparse.c"
        var $1861=$1860+140; //@line 4464 "xmlparse.c"
        var $1862=HEAP[$1861]; //@line 4464 "xmlparse.c"
        var $1863=($1862)!=0; //@line 4464 "xmlparse.c"
        if ($1863) { __label__ = 294; break; } else { __label__ = 347; break; } //@line 4464 "xmlparse.c"
      case 294: // $bb252_i
        var $1864=$dtd_i; //@line 4465 "xmlparse.c"
        var $1865=$1864+144; //@line 4465 "xmlparse.c"
        var $1866=HEAP[$1865]; //@line 4465 "xmlparse.c"
        var $1867=$dtd_i; //@line 4465 "xmlparse.c"
        var $1868=$1867+164; //@line 4465 "xmlparse.c"
        var $1869=HEAP[$1868]; //@line 4465 "xmlparse.c"
        var $1870=$dtd_i; //@line 4465 "xmlparse.c"
        var $1871=$1870+160; //@line 4465 "xmlparse.c"
        var $1872=HEAP[$1871]; //@line 4465 "xmlparse.c"
        var $1873=($1872) - 1; //@line 4465 "xmlparse.c"
        var $1874=$1869+4*$1873; //@line 4465 "xmlparse.c"
        var $1875=HEAP[$1874]; //@line 4465 "xmlparse.c"
        var $1876=$1866+28*$1875; //@line 4465 "xmlparse.c"
        var $1877=$1876; //@line 4465 "xmlparse.c"
        HEAP[$1877]=3; //@line 4465 "xmlparse.c"
        var $1878=$parser_addr_i; //@line 4467 "xmlparse.c"
        var $1879=$1878+128; //@line 4467 "xmlparse.c"
        var $1880=HEAP[$1879]; //@line 4467 "xmlparse.c"
        var $1881=($1880)!=0; //@line 4467 "xmlparse.c"
        if ($1881) { __label__ = 295; break; } else { __label__ = 347; break; } //@line 4467 "xmlparse.c"
      case 295: // $bb253_i
        $handleDefault_i=0; //@line 4468 "xmlparse.c"
        __label__ = 350; break; //@line 4468 "xmlparse.c"
      case 296: // $bb255_i
        $quant_i=0; //@line 4473 "xmlparse.c"
        __label__ = 300; break; //@line 4473 "xmlparse.c"
      case 297: // $bb256_i
        $quant_i=1; //@line 4476 "xmlparse.c"
        __label__ = 300; break; //@line 4476 "xmlparse.c"
      case 298: // $bb257_i
        $quant_i=2; //@line 4479 "xmlparse.c"
        __label__ = 300; break; //@line 4479 "xmlparse.c"
      case 299: // $bb258_i
        $quant_i=3; //@line 4482 "xmlparse.c"
        __label__ = 300; break; //@line 4483 "xmlparse.c"
      case 300: // $elementContent_i
        var $1882=$dtd_i; //@line 4484 "xmlparse.c"
        var $1883=$1882+140; //@line 4484 "xmlparse.c"
        var $1884=HEAP[$1883]; //@line 4484 "xmlparse.c"
        var $1885=($1884)!=0; //@line 4484 "xmlparse.c"
        if ($1885) { __label__ = 301; break; } else { __label__ = 347; break; } //@line 4484 "xmlparse.c"
      case 301: // $bb259_i
        var $1886=$quant_i; //@line 4490 "xmlparse.c"
        var $1887=($1886)!=0; //@line 4490 "xmlparse.c"
        var $1888=HEAP[$next_addr_i]; //@line 4490 "xmlparse.c"
        if ($1887) { __label__ = 302; break; } else { __label__ = 303; break; } //@line 4490 "xmlparse.c"
      case 302: // $bb262_i
        var $1889=$enc_addr_i; //@line 4490 "xmlparse.c"
        var $1890=$1889+64; //@line 4490 "xmlparse.c"
        var $1891=HEAP[$1890]; //@line 4490 "xmlparse.c"
        var $1892=0 - ($1891); //@line 4490 "xmlparse.c"
        var $1893=$1888+$1892; //@line 4490 "xmlparse.c"
        $iftmp_208_i=$1893; //@line 4490 "xmlparse.c"
        __label__ = 304; break; //@line 4490 "xmlparse.c"
      case 303: // $bb263_i
        $iftmp_208_i=$1888; //@line 4490 "xmlparse.c"
        __label__ = 304; break; //@line 4490 "xmlparse.c"
      case 304: // $bb264_i
        var $1894=$iftmp_208_i; //@line 4490 "xmlparse.c"
        $nxt_i=$1894; //@line 4490 "xmlparse.c"
        var $1895=$parser_addr_i; //@line 4491 "xmlparse.c"
        var $1896=_nextScaffoldPart($1895); //@line 4491 "xmlparse.c"
        $myindex261_i=$1896; //@line 4491 "xmlparse.c"
        var $1897=($1896) < 0; //@line 4492 "xmlparse.c"
        if ($1897) { __label__ = 305; break; } else { __label__ = 306; break; } //@line 4492 "xmlparse.c"
      case 305: // $bb265_i
        $3=1; //@line 4493 "xmlparse.c"
        __label__ = 354; break; //@line 4493 "xmlparse.c"
      case 306: // $bb266_i
        var $1898=$dtd_i; //@line 4494 "xmlparse.c"
        var $1899=$1898+144; //@line 4494 "xmlparse.c"
        var $1900=HEAP[$1899]; //@line 4494 "xmlparse.c"
        var $1901=$myindex261_i; //@line 4494 "xmlparse.c"
        var $1902=$1900+28*$1901; //@line 4494 "xmlparse.c"
        var $1903=$1902; //@line 4494 "xmlparse.c"
        HEAP[$1903]=4; //@line 4494 "xmlparse.c"
        var $1904=$dtd_i; //@line 4495 "xmlparse.c"
        var $1905=$1904+144; //@line 4495 "xmlparse.c"
        var $1906=HEAP[$1905]; //@line 4495 "xmlparse.c"
        var $1907=$myindex261_i; //@line 4495 "xmlparse.c"
        var $1908=$1906+28*$1907; //@line 4495 "xmlparse.c"
        var $1909=$1908+4; //@line 4495 "xmlparse.c"
        var $1910=$quant_i; //@line 4495 "xmlparse.c"
        HEAP[$1909]=$1910; //@line 4495 "xmlparse.c"
        var $1911=$parser_addr_i; //@line 4496 "xmlparse.c"
        var $1912=$enc_addr_i; //@line 4496 "xmlparse.c"
        var $1913=$s_addr_i; //@line 4496 "xmlparse.c"
        var $1914=$nxt_i; //@line 4496 "xmlparse.c"
        var $1915=_getElementType($1911, $1912, $1913, $1914); //@line 4496 "xmlparse.c"
        $el_i=$1915; //@line 4496 "xmlparse.c"
        var $1916=$el_i; //@line 4497 "xmlparse.c"
        var $1917=($1916)==0; //@line 4497 "xmlparse.c"
        if ($1917) { __label__ = 307; break; } else { __label__ = 308; break; } //@line 4497 "xmlparse.c"
      case 307: // $bb267_i
        $3=1; //@line 4498 "xmlparse.c"
        __label__ = 354; break; //@line 4498 "xmlparse.c"
      case 308: // $bb268_i
        var $1918=$el_i; //@line 4499 "xmlparse.c"
        var $1919=$1918; //@line 4499 "xmlparse.c"
        var $1920=HEAP[$1919]; //@line 4499 "xmlparse.c"
        $name260_i=$1920; //@line 4499 "xmlparse.c"
        var $1921=$dtd_i; //@line 4500 "xmlparse.c"
        var $1922=$1921+144; //@line 4500 "xmlparse.c"
        var $1923=HEAP[$1922]; //@line 4500 "xmlparse.c"
        var $1924=$myindex261_i; //@line 4500 "xmlparse.c"
        var $1925=$1923+28*$1924; //@line 4500 "xmlparse.c"
        var $1926=$1925+8; //@line 4500 "xmlparse.c"
        var $1927=$name260_i; //@line 4500 "xmlparse.c"
        HEAP[$1926]=$1927; //@line 4500 "xmlparse.c"
        $nameLen_i=0; //@line 4501 "xmlparse.c"
        __label__ = 309; break; //@line 4501 "xmlparse.c"
      case 309: // $bb269_i
        var $1928=$name260_i; //@line 4502 "xmlparse.c"
        var $1929=$nameLen_i; //@line 4502 "xmlparse.c"
        var $1930=$1928+$1929; //@line 4502 "xmlparse.c"
        var $1931=HEAP[$1930]; //@line 4502 "xmlparse.c"
        var $1932=($1931)!=0; //@line 4502 "xmlparse.c"
        var $1933=($1932); //@line 4502 "xmlparse.c"
        var $1934=$nameLen_i; //@line 4502 "xmlparse.c"
        var $1935=($1934) + 1; //@line 4502 "xmlparse.c"
        $nameLen_i=$1935; //@line 4502 "xmlparse.c"
        var $toBool_i=($1933)!=0; //@line 4502 "xmlparse.c"
        if ($toBool_i) { __label__ = 309; break; } else { __label__ = 310; break; } //@line 4502 "xmlparse.c"
      case 310: // $bb270_i
        var $1936=$dtd_i; //@line 4503 "xmlparse.c"
        var $1937=$1936+148; //@line 4503 "xmlparse.c"
        var $1938=HEAP[$1937]; //@line 4503 "xmlparse.c"
        var $1939=$nameLen_i; //@line 4503 "xmlparse.c"
        var $1940=($1939) + ($1938); //@line 4503 "xmlparse.c"
        var $1941=$dtd_i; //@line 4503 "xmlparse.c"
        var $1942=$1941+148; //@line 4503 "xmlparse.c"
        HEAP[$1942]=$1940; //@line 4503 "xmlparse.c"
        var $1943=$parser_addr_i; //@line 4504 "xmlparse.c"
        var $1944=$1943+128; //@line 4504 "xmlparse.c"
        var $1945=HEAP[$1944]; //@line 4504 "xmlparse.c"
        var $1946=($1945)!=0; //@line 4504 "xmlparse.c"
        if ($1946) { __label__ = 311; break; } else { __label__ = 347; break; } //@line 4504 "xmlparse.c"
      case 311: // $bb271_i
        $handleDefault_i=0; //@line 4505 "xmlparse.c"
        __label__ = 350; break; //@line 4505 "xmlparse.c"
      case 312: // $bb273_i
        $quant_i=0; //@line 4510 "xmlparse.c"
        __label__ = 316; break; //@line 4510 "xmlparse.c"
      case 313: // $bb274_i
        $quant_i=1; //@line 4513 "xmlparse.c"
        __label__ = 316; break; //@line 4513 "xmlparse.c"
      case 314: // $bb275_i
        $quant_i=2; //@line 4516 "xmlparse.c"
        __label__ = 316; break; //@line 4516 "xmlparse.c"
      case 315: // $bb276_i
        $quant_i=3; //@line 4519 "xmlparse.c"
        __label__ = 316; break; //@line 4520 "xmlparse.c"
      case 316: // $closeGroup_i
        var $1947=$dtd_i; //@line 4521 "xmlparse.c"
        var $1948=$1947+140; //@line 4521 "xmlparse.c"
        var $1949=HEAP[$1948]; //@line 4521 "xmlparse.c"
        var $1950=($1949)!=0; //@line 4521 "xmlparse.c"
        if ($1950) { __label__ = 317; break; } else { __label__ = 347; break; } //@line 4521 "xmlparse.c"
      case 317: // $bb277_i
        var $1951=$parser_addr_i; //@line 4522 "xmlparse.c"
        var $1952=$1951+128; //@line 4522 "xmlparse.c"
        var $1953=HEAP[$1952]; //@line 4522 "xmlparse.c"
        var $1954=($1953)!=0; //@line 4522 "xmlparse.c"
        if ($1954) { __label__ = 318; break; } else { __label__ = 319; break; } //@line 4522 "xmlparse.c"
      case 318: // $bb278_i
        $handleDefault_i=0; //@line 4523 "xmlparse.c"
        __label__ = 319; break; //@line 4523 "xmlparse.c"
      case 319: // $bb279_i
        var $1955=$dtd_i; //@line 4524 "xmlparse.c"
        var $1956=$1955+160; //@line 4524 "xmlparse.c"
        var $1957=HEAP[$1956]; //@line 4524 "xmlparse.c"
        var $1958=($1957) - 1; //@line 4524 "xmlparse.c"
        var $1959=$dtd_i; //@line 4524 "xmlparse.c"
        var $1960=$1959+160; //@line 4524 "xmlparse.c"
        HEAP[$1960]=$1958; //@line 4524 "xmlparse.c"
        var $1961=$dtd_i; //@line 4525 "xmlparse.c"
        var $1962=$1961+144; //@line 4525 "xmlparse.c"
        var $1963=HEAP[$1962]; //@line 4525 "xmlparse.c"
        var $1964=$dtd_i; //@line 4525 "xmlparse.c"
        var $1965=$1964+164; //@line 4525 "xmlparse.c"
        var $1966=HEAP[$1965]; //@line 4525 "xmlparse.c"
        var $1967=$dtd_i; //@line 4525 "xmlparse.c"
        var $1968=$1967+160; //@line 4525 "xmlparse.c"
        var $1969=HEAP[$1968]; //@line 4525 "xmlparse.c"
        var $1970=$1966+4*$1969; //@line 4525 "xmlparse.c"
        var $1971=HEAP[$1970]; //@line 4525 "xmlparse.c"
        var $1972=$1963+28*$1971; //@line 4525 "xmlparse.c"
        var $1973=$1972+4; //@line 4525 "xmlparse.c"
        var $1974=$quant_i; //@line 4525 "xmlparse.c"
        HEAP[$1973]=$1974; //@line 4525 "xmlparse.c"
        var $1975=$dtd_i; //@line 4526 "xmlparse.c"
        var $1976=$1975+160; //@line 4526 "xmlparse.c"
        var $1977=HEAP[$1976]; //@line 4526 "xmlparse.c"
        var $1978=($1977)==0; //@line 4526 "xmlparse.c"
        if ($1978) { __label__ = 320; break; } else { __label__ = 347; break; } //@line 4526 "xmlparse.c"
      case 320: // $bb280_i
        var $1979=$handleDefault_i; //@line 4527 "xmlparse.c"
        var $1980=($1979)==0; //@line 4527 "xmlparse.c"
        if ($1980) { __label__ = 321; break; } else { __label__ = 326; break; } //@line 4527 "xmlparse.c"
      case 321: // $bb281_i
        var $1981=$parser_addr_i; //@line 4528 "xmlparse.c"
        $parser_addr_i48_i=$1981;
        var $1982=$parser_addr_i48_i; //@line 6230 "xmlparse.c"
        var $1983=$1982+340; //@line 6230 "xmlparse.c"
        var $1984=HEAP[$1983]; //@line 6230 "xmlparse.c"
        $dtd_i50_i=$1984; //@line 6230 "xmlparse.c"
        var $1985=$dtd_i50_i; //@line 6235 "xmlparse.c"
        var $1986=$1985+156; //@line 6235 "xmlparse.c"
        var $1987=HEAP[$1986]; //@line 6235 "xmlparse.c"
        var $1988=($1987) * 20; //@line 6235 "xmlparse.c"
        var $1989=$dtd_i50_i; //@line 6235 "xmlparse.c"
        var $1990=$1989+148; //@line 6235 "xmlparse.c"
        var $1991=HEAP[$1990]; //@line 6235 "xmlparse.c"
        var $1992=($1991) + ($1988); //@line 6235 "xmlparse.c"
        $allocsize_i_i=$1992; //@line 6235 "xmlparse.c"
        var $1993=$parser_addr_i48_i; //@line 6237 "xmlparse.c"
        var $1994=$1993+12; //@line 6237 "xmlparse.c"
        var $1995=$1994; //@line 6237 "xmlparse.c"
        var $1996=HEAP[$1995]; //@line 6237 "xmlparse.c"
        var $1997=$allocsize_i_i; //@line 6237 "xmlparse.c"
        var $1998=FUNCTION_TABLE[$1996]($1997); //@line 6237 "xmlparse.c"
        var $1999=$1998; //@line 6237 "xmlparse.c"
        $ret_i_i=$1999; //@line 6237 "xmlparse.c"
        var $2000=$ret_i_i; //@line 6238 "xmlparse.c"
        var $2001=($2000)==0; //@line 6238 "xmlparse.c"
        if ($2001) { __label__ = 322; break; } else { __label__ = 323; break; } //@line 6238 "xmlparse.c"
      case 322: // $build_model_exit_thread_i
        $0=0; //@line 6239 "xmlparse.c"
        $retval_i49_i=0; //@line 6239 "xmlparse.c"
        $model_i=0; //@line 4528 "xmlparse.c"
        __label__ = 324; break;
      case 323: // $build_model_exit_i
        var $2002=$dtd_i50_i; //@line 6241 "xmlparse.c"
        var $2003=$2002+156; //@line 6241 "xmlparse.c"
        var $2004=HEAP[$2003]; //@line 6241 "xmlparse.c"
        var $2005=$ret_i_i; //@line 6241 "xmlparse.c"
        var $2006=$2005+20*$2004; //@line 6241 "xmlparse.c"
        var $2007=$2006; //@line 6241 "xmlparse.c"
        HEAP[$str_i_i]=$2007; //@line 6241 "xmlparse.c"
        var $2008=$ret_i_i; //@line 6242 "xmlparse.c"
        var $2009=$2008+20; //@line 6242 "xmlparse.c"
        HEAP[$cpos_i_i]=$2009; //@line 6242 "xmlparse.c"
        var $2010=$parser_addr_i48_i; //@line 6244 "xmlparse.c"
        var $2011=$ret_i_i; //@line 6244 "xmlparse.c"
        _build_node($2010, 0, $2011, $cpos_i_i, $str_i_i); //@line 6244 "xmlparse.c"
        var $2012=$ret_i_i; //@line 6245 "xmlparse.c"
        $0=$2012; //@line 6245 "xmlparse.c"
        $retval_i49_i=$2012; //@line 6239 "xmlparse.c"
        $model_i=$2012; //@line 4528 "xmlparse.c"
        var $2013=($2012)==0; //@line 4529 "xmlparse.c"
        if ($2013) { __label__ = 324; break; } else { __label__ = 325; break; } //@line 4529 "xmlparse.c"
      case 324: // $bb282_i
        $3=1; //@line 4530 "xmlparse.c"
        __label__ = 354; break; //@line 4530 "xmlparse.c"
      case 325: // $bb283_i
        var $2014=$eventEndPP_i; //@line 4531 "xmlparse.c"
        var $2015=$s_addr_i; //@line 4531 "xmlparse.c"
        HEAP[$2014]=$2015; //@line 4531 "xmlparse.c"
        var $2016=$parser_addr_i; //@line 4532 "xmlparse.c"
        var $2017=$2016+128; //@line 4532 "xmlparse.c"
        var $2018=HEAP[$2017]; //@line 4532 "xmlparse.c"
        var $2019=$parser_addr_i; //@line 4532 "xmlparse.c"
        var $2020=$2019+328; //@line 4532 "xmlparse.c"
        var $2021=HEAP[$2020]; //@line 4532 "xmlparse.c"
        var $2022=$2021; //@line 4532 "xmlparse.c"
        var $2023=HEAP[$2022]; //@line 4532 "xmlparse.c"
        var $2024=$parser_addr_i; //@line 4532 "xmlparse.c"
        var $2025=$2024+4; //@line 4532 "xmlparse.c"
        var $2026=HEAP[$2025]; //@line 4532 "xmlparse.c"
        var $2027=$model_i; //@line 4532 "xmlparse.c"
        FUNCTION_TABLE[$2018]($2026, $2023, $2027); //@line 4532 "xmlparse.c"
        __label__ = 326; break; //@line 4532 "xmlparse.c"
      case 326: // $bb284_i
        var $2028=$dtd_i; //@line 4534 "xmlparse.c"
        var $2029=$2028+140; //@line 4534 "xmlparse.c"
        HEAP[$2029]=0; //@line 4534 "xmlparse.c"
        var $2030=$dtd_i; //@line 4535 "xmlparse.c"
        var $2031=$2030+148; //@line 4535 "xmlparse.c"
        HEAP[$2031]=0; //@line 4535 "xmlparse.c"
        __label__ = 347; break; //@line 4535 "xmlparse.c"
      case 327: // $bb286_i
        var $2032=HEAP[$next_addr_i]; //@line 4542 "xmlparse.c"
        var $2033=$parser_addr_i; //@line 4542 "xmlparse.c"
        var $2034=$enc_addr_i; //@line 4542 "xmlparse.c"
        var $2035=$s_addr_i; //@line 4542 "xmlparse.c"
        var $2036=_reportProcessingInstruction($2033, $2034, $2035, $2032); //@line 4542 "xmlparse.c"
        var $2037=($2036)==0; //@line 4542 "xmlparse.c"
        if ($2037) { __label__ = 328; break; } else { __label__ = 329; break; } //@line 4542 "xmlparse.c"
      case 328: // $bb287_i
        $3=1; //@line 4543 "xmlparse.c"
        __label__ = 354; break; //@line 4543 "xmlparse.c"
      case 329: // $bb288_i
        $handleDefault_i=0; //@line 4544 "xmlparse.c"
        __label__ = 350; break; //@line 4544 "xmlparse.c"
      case 330: // $bb289_i
        var $2038=HEAP[$next_addr_i]; //@line 4547 "xmlparse.c"
        var $2039=$parser_addr_i; //@line 4547 "xmlparse.c"
        var $2040=$enc_addr_i; //@line 4547 "xmlparse.c"
        var $2041=$s_addr_i; //@line 4547 "xmlparse.c"
        var $2042=_reportComment($2039, $2040, $2041, $2038); //@line 4547 "xmlparse.c"
        var $2043=($2042)==0; //@line 4547 "xmlparse.c"
        if ($2043) { __label__ = 331; break; } else { __label__ = 332; break; } //@line 4547 "xmlparse.c"
      case 331: // $bb290_i
        $3=1; //@line 4548 "xmlparse.c"
        __label__ = 354; break; //@line 4548 "xmlparse.c"
      case 332: // $bb291_i
        $handleDefault_i=0; //@line 4549 "xmlparse.c"
        __label__ = 350; break; //@line 4549 "xmlparse.c"
      case 333: // $bb292_i
        var $2044=$tok_addr_i; //@line 4552 "xmlparse.c"
        var $cond_i=($2044)==14;
        if ($cond_i) { __label__ = 334; break; } else { __label__ = 347; break; }
      case 334: // $bb293_i
        $handleDefault_i=0; //@line 4554 "xmlparse.c"
        __label__ = 350; break; //@line 4554 "xmlparse.c"
      case 335: // $bb295_i
        var $2045=$parser_addr_i; //@line 4559 "xmlparse.c"
        var $2046=$2045+84; //@line 4559 "xmlparse.c"
        var $2047=HEAP[$2046]; //@line 4559 "xmlparse.c"
        var $2048=($2047)!=0; //@line 4559 "xmlparse.c"
        if ($2048) { __label__ = 336; break; } else { __label__ = 347; break; } //@line 4559 "xmlparse.c"
      case 336: // $bb296_i
        $handleDefault_i=0; //@line 4560 "xmlparse.c"
        __label__ = 350; break; //@line 4560 "xmlparse.c"
      case 337: // $bb298_i
        var $2049=$dtd_i; //@line 4563 "xmlparse.c"
        var $2050=$2049+128; //@line 4563 "xmlparse.c"
        var $2051=HEAP[$2050]; //@line 4563 "xmlparse.c"
        var $2052=($2051)!=0; //@line 4563 "xmlparse.c"
        if ($2052) { __label__ = 338; break; } else { __label__ = 347; break; } //@line 4563 "xmlparse.c"
      case 338: // $bb299_i
        var $2053=$parser_addr_i; //@line 4563 "xmlparse.c"
        var $2054=$2053+136; //@line 4563 "xmlparse.c"
        var $2055=HEAP[$2054]; //@line 4563 "xmlparse.c"
        var $2056=($2055)!=0; //@line 4563 "xmlparse.c"
        if ($2056) { __label__ = 339; break; } else { __label__ = 347; break; } //@line 4563 "xmlparse.c"
      case 339: // $bb300_i
        $handleDefault_i=0; //@line 4564 "xmlparse.c"
        __label__ = 350; break; //@line 4564 "xmlparse.c"
      case 340: // $bb302_i
        var $2057=$parser_addr_i; //@line 4567 "xmlparse.c"
        var $2058=$2057+96; //@line 4567 "xmlparse.c"
        var $2059=HEAP[$2058]; //@line 4567 "xmlparse.c"
        var $2060=($2059)!=0; //@line 4567 "xmlparse.c"
        if ($2060) { __label__ = 341; break; } else { __label__ = 347; break; } //@line 4567 "xmlparse.c"
      case 341: // $bb303_i
        $handleDefault_i=0; //@line 4568 "xmlparse.c"
        __label__ = 350; break; //@line 4568 "xmlparse.c"
      case 342: // $bb305_i
        var $2061=$dtd_i; //@line 4571 "xmlparse.c"
        var $2062=$2061+128; //@line 4571 "xmlparse.c"
        var $2063=HEAP[$2062]; //@line 4571 "xmlparse.c"
        var $2064=($2063)!=0; //@line 4571 "xmlparse.c"
        if ($2064) { __label__ = 343; break; } else { __label__ = 347; break; } //@line 4571 "xmlparse.c"
      case 343: // $bb306_i
        var $2065=$parser_addr_i; //@line 4571 "xmlparse.c"
        var $2066=$2065+132; //@line 4571 "xmlparse.c"
        var $2067=HEAP[$2066]; //@line 4571 "xmlparse.c"
        var $2068=($2067)!=0; //@line 4571 "xmlparse.c"
        if ($2068) { __label__ = 344; break; } else { __label__ = 347; break; } //@line 4571 "xmlparse.c"
      case 344: // $bb307_i
        $handleDefault_i=0; //@line 4572 "xmlparse.c"
        __label__ = 350; break; //@line 4572 "xmlparse.c"
      case 345: // $bb309_i
        var $2069=$parser_addr_i; //@line 4575 "xmlparse.c"
        var $2070=$2069+128; //@line 4575 "xmlparse.c"
        var $2071=HEAP[$2070]; //@line 4575 "xmlparse.c"
        var $2072=($2071)!=0; //@line 4575 "xmlparse.c"
        if ($2072) { __label__ = 346; break; } else { __label__ = 347; break; } //@line 4575 "xmlparse.c"
      case 346: // $bb310_i
        $handleDefault_i=0; //@line 4576 "xmlparse.c"
        __label__ = 350; break; //@line 4576 "xmlparse.c"
      case 347: // $bb311_i
        var $_pr54_i=$handleDefault_i;
        var $2073=($_pr54_i)!=0; //@line 4580 "xmlparse.c"
        if ($2073) { __label__ = 348; break; } else { __label__ = 350; break; } //@line 4580 "xmlparse.c"
      case 348: // $bb312_i
        var $2074=$parser_addr_i; //@line 4580 "xmlparse.c"
        var $2075=$2074+80; //@line 4580 "xmlparse.c"
        var $2076=HEAP[$2075]; //@line 4580 "xmlparse.c"
        var $2077=($2076)!=0; //@line 4580 "xmlparse.c"
        if ($2077) { __label__ = 349; break; } else { __label__ = 350; break; } //@line 4580 "xmlparse.c"
      case 349: // $bb313_i
        var $2078=HEAP[$next_addr_i]; //@line 4581 "xmlparse.c"
        var $2079=$parser_addr_i; //@line 4581 "xmlparse.c"
        var $2080=$enc_addr_i; //@line 4581 "xmlparse.c"
        var $2081=$s_addr_i; //@line 4581 "xmlparse.c"
        _reportDefault($2079, $2080, $2081, $2078); //@line 4581 "xmlparse.c"
        __label__ = 350; break; //@line 4581 "xmlparse.c"
      case 350: // $bb314_i
        var $2082=$parser_addr_i; //@line 4583 "xmlparse.c"
        var $2083=$2082+464; //@line 4583 "xmlparse.c"
        var $2084=$2083; //@line 4583 "xmlparse.c"
        var $2085=HEAP[$2084]; //@line 4583 "xmlparse.c"
        if ($2085 == 2) {
          __label__ = 352; break;
        }
        else if ($2085 == 3) {
          __label__ = 351; break;
        }
        else {
        __label__ = 353; break;
        }
        
      case 351: // $bb315_i
        var $2086=HEAP[$next_addr_i]; //@line 4585 "xmlparse.c"
        var $2087=$nextPtr_addr_i; //@line 4585 "xmlparse.c"
        HEAP[$2087]=$2086; //@line 4585 "xmlparse.c"
        $3=0; //@line 4586 "xmlparse.c"
        __label__ = 354; break; //@line 4586 "xmlparse.c"
      case 352: // $bb316_i
        $3=35; //@line 4588 "xmlparse.c"
        __label__ = 354; break; //@line 4588 "xmlparse.c"
      case 353: // $bb317_i
        var $2088=HEAP[$next_addr_i]; //@line 4590 "xmlparse.c"
        $s_addr_i=$2088; //@line 4590 "xmlparse.c"
        var $2089=$enc_addr_i; //@line 4591 "xmlparse.c"
        var $2090=$2089; //@line 4591 "xmlparse.c"
        var $2091=$2090; //@line 4591 "xmlparse.c"
        var $2092=HEAP[$2091]; //@line 4591 "xmlparse.c"
        var $2093=$enc_addr_i; //@line 4591 "xmlparse.c"
        var $2094=$s_addr_i; //@line 4591 "xmlparse.c"
        var $2095=$end_addr_i; //@line 4591 "xmlparse.c"
        var $2096=FUNCTION_TABLE[$2092]($2093, $2094, $2095, $next_addr_i); //@line 4591 "xmlparse.c"
        $tok_addr_i=$2096; //@line 4591 "xmlparse.c"
        __label__ = 4; break; //@line 4591 "xmlparse.c"
      case 354: // $doProlog_exit
        var $2097=$3; //@line 3675 "xmlparse.c"
        $retval_i=$2097; //@line 3675 "xmlparse.c"
        var $retval319_i=$retval_i; //@line 3675 "xmlparse.c"
        $4=$retval319_i; //@line 3618 "xmlparse.c"
        var $2098=$4; //@line 3618 "xmlparse.c"
        $retval=$2098; //@line 3618 "xmlparse.c"
        var $retval1=$retval; //@line 3618 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval1; //@line 3618 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _epilogProcessor($parser, $s, $end, $nextPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $s_addr;
        var $end_addr;
        var $nextPtr_addr;
        var $retval;
        var $0;
        var $next=__stackBase__;
        var $tok;
        $parser_addr=$parser;
        $s_addr=$s;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        var $1=$parser_addr; //@line 4603 "xmlparse.c"
        var $2=$1+264; //@line 4603 "xmlparse.c"
        HEAP[$2]=(FUNCTION_TABLE_OFFSET + 70); //@line 4603 "xmlparse.c"
        var $3=$parser_addr; //@line 4604 "xmlparse.c"
        var $4=$3+272; //@line 4604 "xmlparse.c"
        var $5=$s_addr; //@line 4604 "xmlparse.c"
        HEAP[$4]=$5; //@line 4604 "xmlparse.c"
        __label__ = 1; break; //@line 4604 "xmlparse.c"
      case 1: // $bb
        HEAP[$next]=0; //@line 4606 "xmlparse.c"
        var $6=$parser_addr; //@line 4607 "xmlparse.c"
        var $7=$6+144; //@line 4607 "xmlparse.c"
        var $8=HEAP[$7]; //@line 4607 "xmlparse.c"
        var $9=$8; //@line 4607 "xmlparse.c"
        var $10=$9; //@line 4607 "xmlparse.c"
        var $11=HEAP[$10]; //@line 4607 "xmlparse.c"
        var $12=$parser_addr; //@line 4607 "xmlparse.c"
        var $13=$12+144; //@line 4607 "xmlparse.c"
        var $14=HEAP[$13]; //@line 4607 "xmlparse.c"
        var $15=$s_addr; //@line 4607 "xmlparse.c"
        var $16=$end_addr; //@line 4607 "xmlparse.c"
        var $17=FUNCTION_TABLE[$11]($14, $15, $16, $next); //@line 4607 "xmlparse.c"
        $tok=$17; //@line 4607 "xmlparse.c"
        var $18=HEAP[$next]; //@line 4608 "xmlparse.c"
        var $19=$parser_addr; //@line 4608 "xmlparse.c"
        var $20=$19+276; //@line 4608 "xmlparse.c"
        HEAP[$20]=$18; //@line 4608 "xmlparse.c"
        var $21=$tok; //@line 4609 "xmlparse.c"
        if ($21 == -15) {
          __label__ = 2; break;
        }
        else if ($21 == -4) {
          __label__ = 6; break;
        }
        else if ($21 == -2) {
          __label__ = 17; break;
        }
        else if ($21 == -1) {
          __label__ = 14; break;
        }
        else if ($21 == 0) {
          __label__ = 13; break;
        }
        else if ($21 == 11) {
          __label__ = 9; break;
        }
        else if ($21 == 13) {
          __label__ = 11; break;
        }
        else if ($21 == 15) {
          __label__ = 7; break;
        }
        else {
        __label__ = 20; break;
        }
        
      case 2: // $bb1
        var $22=$parser_addr; //@line 4612 "xmlparse.c"
        var $23=$22+80; //@line 4612 "xmlparse.c"
        var $24=HEAP[$23]; //@line 4612 "xmlparse.c"
        var $25=($24)!=0; //@line 4612 "xmlparse.c"
        if ($25) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 4612 "xmlparse.c"
      case 3: // $bb2
        var $26=HEAP[$next]; //@line 4613 "xmlparse.c"
        var $27=$parser_addr; //@line 4613 "xmlparse.c"
        var $28=$27+144; //@line 4613 "xmlparse.c"
        var $29=HEAP[$28]; //@line 4613 "xmlparse.c"
        var $30=$parser_addr; //@line 4613 "xmlparse.c"
        var $31=$s_addr; //@line 4613 "xmlparse.c"
        _reportDefault($30, $29, $31, $26); //@line 4613 "xmlparse.c"
        var $32=$parser_addr; //@line 4614 "xmlparse.c"
        var $33=$32+464; //@line 4614 "xmlparse.c"
        var $34=$33; //@line 4614 "xmlparse.c"
        var $35=HEAP[$34]; //@line 4614 "xmlparse.c"
        var $36=($35)==2; //@line 4614 "xmlparse.c"
        if ($36) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4614 "xmlparse.c"
      case 4: // $bb3
        $0=35; //@line 4615 "xmlparse.c"
        __label__ = 24; break; //@line 4615 "xmlparse.c"
      case 5: // $bb4
        var $37=HEAP[$next]; //@line 4617 "xmlparse.c"
        var $38=$nextPtr_addr; //@line 4617 "xmlparse.c"
        HEAP[$38]=$37; //@line 4617 "xmlparse.c"
        $0=0; //@line 4618 "xmlparse.c"
        __label__ = 24; break; //@line 4618 "xmlparse.c"
      case 6: // $bb5
        var $39=$nextPtr_addr; //@line 4620 "xmlparse.c"
        var $40=$s_addr; //@line 4620 "xmlparse.c"
        HEAP[$39]=$40; //@line 4620 "xmlparse.c"
        $0=0; //@line 4621 "xmlparse.c"
        __label__ = 24; break; //@line 4621 "xmlparse.c"
      case 7: // $bb6
        var $41=$parser_addr; //@line 4623 "xmlparse.c"
        var $42=$41+80; //@line 4623 "xmlparse.c"
        var $43=HEAP[$42]; //@line 4623 "xmlparse.c"
        var $44=($43)!=0; //@line 4623 "xmlparse.c"
        if ($44) { __label__ = 8; break; } else { __label__ = 21; break; } //@line 4623 "xmlparse.c"
      case 8: // $bb7
        var $45=HEAP[$next]; //@line 4624 "xmlparse.c"
        var $46=$parser_addr; //@line 4624 "xmlparse.c"
        var $47=$46+144; //@line 4624 "xmlparse.c"
        var $48=HEAP[$47]; //@line 4624 "xmlparse.c"
        var $49=$parser_addr; //@line 4624 "xmlparse.c"
        var $50=$s_addr; //@line 4624 "xmlparse.c"
        _reportDefault($49, $48, $50, $45); //@line 4624 "xmlparse.c"
        __label__ = 21; break; //@line 4624 "xmlparse.c"
      case 9: // $bb9
        var $51=HEAP[$next]; //@line 4627 "xmlparse.c"
        var $52=$parser_addr; //@line 4627 "xmlparse.c"
        var $53=$52+144; //@line 4627 "xmlparse.c"
        var $54=HEAP[$53]; //@line 4627 "xmlparse.c"
        var $55=$parser_addr; //@line 4627 "xmlparse.c"
        var $56=$s_addr; //@line 4627 "xmlparse.c"
        var $57=_reportProcessingInstruction($55, $54, $56, $51); //@line 4627 "xmlparse.c"
        var $58=($57)==0; //@line 4627 "xmlparse.c"
        if ($58) { __label__ = 10; break; } else { __label__ = 21; break; } //@line 4627 "xmlparse.c"
      case 10: // $bb10
        $0=1; //@line 4628 "xmlparse.c"
        __label__ = 24; break; //@line 4628 "xmlparse.c"
      case 11: // $bb12
        var $59=HEAP[$next]; //@line 4631 "xmlparse.c"
        var $60=$parser_addr; //@line 4631 "xmlparse.c"
        var $61=$60+144; //@line 4631 "xmlparse.c"
        var $62=HEAP[$61]; //@line 4631 "xmlparse.c"
        var $63=$parser_addr; //@line 4631 "xmlparse.c"
        var $64=$s_addr; //@line 4631 "xmlparse.c"
        var $65=_reportComment($63, $62, $64, $59); //@line 4631 "xmlparse.c"
        var $66=($65)==0; //@line 4631 "xmlparse.c"
        if ($66) { __label__ = 12; break; } else { __label__ = 21; break; } //@line 4631 "xmlparse.c"
      case 12: // $bb13
        $0=1; //@line 4632 "xmlparse.c"
        __label__ = 24; break; //@line 4632 "xmlparse.c"
      case 13: // $bb15
        var $67=HEAP[$next]; //@line 4635 "xmlparse.c"
        var $68=$parser_addr; //@line 4635 "xmlparse.c"
        var $69=$68+272; //@line 4635 "xmlparse.c"
        HEAP[$69]=$67; //@line 4635 "xmlparse.c"
        $0=4; //@line 4636 "xmlparse.c"
        __label__ = 24; break; //@line 4636 "xmlparse.c"
      case 14: // $bb16
        var $70=$parser_addr; //@line 4638 "xmlparse.c"
        var $71=$70+464; //@line 4638 "xmlparse.c"
        var $72=$71+4; //@line 4638 "xmlparse.c"
        var $73=HEAP[$72]; //@line 4638 "xmlparse.c"
        var $74=($73)==0; //@line 4638 "xmlparse.c"
        if ($74) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4638 "xmlparse.c"
      case 15: // $bb17
        var $75=$nextPtr_addr; //@line 4639 "xmlparse.c"
        var $76=$s_addr; //@line 4639 "xmlparse.c"
        HEAP[$75]=$76; //@line 4639 "xmlparse.c"
        $0=0; //@line 4640 "xmlparse.c"
        __label__ = 24; break; //@line 4640 "xmlparse.c"
      case 16: // $bb18
        $0=5; //@line 4642 "xmlparse.c"
        __label__ = 24; break; //@line 4642 "xmlparse.c"
      case 17: // $bb19
        var $77=$parser_addr; //@line 4644 "xmlparse.c"
        var $78=$77+464; //@line 4644 "xmlparse.c"
        var $79=$78+4; //@line 4644 "xmlparse.c"
        var $80=HEAP[$79]; //@line 4644 "xmlparse.c"
        var $81=($80)==0; //@line 4644 "xmlparse.c"
        if ($81) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 4644 "xmlparse.c"
      case 18: // $bb20
        var $82=$nextPtr_addr; //@line 4645 "xmlparse.c"
        var $83=$s_addr; //@line 4645 "xmlparse.c"
        HEAP[$82]=$83; //@line 4645 "xmlparse.c"
        $0=0; //@line 4646 "xmlparse.c"
        __label__ = 24; break; //@line 4646 "xmlparse.c"
      case 19: // $bb21
        $0=6; //@line 4648 "xmlparse.c"
        __label__ = 24; break; //@line 4648 "xmlparse.c"
      case 20: // $bb22
        $0=9; //@line 4650 "xmlparse.c"
        __label__ = 24; break; //@line 4650 "xmlparse.c"
      case 21: // $bb23
        var $84=HEAP[$next]; //@line 4652 "xmlparse.c"
        $s_addr=$84; //@line 4652 "xmlparse.c"
        var $85=$parser_addr; //@line 4652 "xmlparse.c"
        var $86=$85+272; //@line 4652 "xmlparse.c"
        var $87=$s_addr; //@line 4652 "xmlparse.c"
        HEAP[$86]=$87; //@line 4652 "xmlparse.c"
        var $88=$parser_addr; //@line 4653 "xmlparse.c"
        var $89=$88+464; //@line 4653 "xmlparse.c"
        var $90=$89; //@line 4653 "xmlparse.c"
        var $91=HEAP[$90]; //@line 4653 "xmlparse.c"
        if ($91 == 2) {
          __label__ = 23; break;
        }
        else if ($91 == 3) {
          __label__ = 22; break;
        }
        else {
        __label__ = 1; break;
        }
        
      case 22: // $bb24
        var $92=HEAP[$next]; //@line 4655 "xmlparse.c"
        var $93=$nextPtr_addr; //@line 4655 "xmlparse.c"
        HEAP[$93]=$92; //@line 4655 "xmlparse.c"
        $0=0; //@line 4656 "xmlparse.c"
        __label__ = 24; break; //@line 4656 "xmlparse.c"
      case 23: // $bb25
        $0=35; //@line 4658 "xmlparse.c"
        __label__ = 24; break; //@line 4658 "xmlparse.c"
      case 24: // $bb27
        var $94=$0; //@line 4615 "xmlparse.c"
        $retval=$94; //@line 4615 "xmlparse.c"
        var $retval28=$retval; //@line 4615 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval28; //@line 4615 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _internalEntityProcessor($parser, $s, $end, $nextPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $s_addr;
        var $end_addr;
        var $nextPtr_addr;
        var $retval;
        var $0;
        var $entity;
        var $textStart;
        var $textEnd;
        var $next=__stackBase__;
        var $result;
        var $openEntity;
        $parser_addr=$parser;
        $s_addr=$s;
        $end_addr=$end;
        $nextPtr_addr=$nextPtr;
        var $1=$parser_addr; //@line 4731 "xmlparse.c"
        var $2=$1+284; //@line 4731 "xmlparse.c"
        var $3=HEAP[$2]; //@line 4731 "xmlparse.c"
        $openEntity=$3; //@line 4731 "xmlparse.c"
        var $4=$openEntity; //@line 4732 "xmlparse.c"
        var $5=($4)==0; //@line 4732 "xmlparse.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4732 "xmlparse.c"
      case 1: // $bb
        $0=23; //@line 4733 "xmlparse.c"
        __label__ = 8; break; //@line 4733 "xmlparse.c"
      case 2: // $bb1
        var $6=$openEntity; //@line 4735 "xmlparse.c"
        var $7=$6+12; //@line 4735 "xmlparse.c"
        var $8=HEAP[$7]; //@line 4735 "xmlparse.c"
        $entity=$8; //@line 4735 "xmlparse.c"
        var $9=$entity; //@line 4736 "xmlparse.c"
        var $10=$9+4; //@line 4736 "xmlparse.c"
        var $11=HEAP[$10]; //@line 4736 "xmlparse.c"
        var $12=$entity; //@line 4736 "xmlparse.c"
        var $13=$12+12; //@line 4736 "xmlparse.c"
        var $14=HEAP[$13]; //@line 4736 "xmlparse.c"
        var $15=$11+$14; //@line 4736 "xmlparse.c"
        $textStart=$15; //@line 4736 "xmlparse.c"
        var $16=$entity; //@line 4737 "xmlparse.c"
        var $17=$16+4; //@line 4737 "xmlparse.c"
        var $18=HEAP[$17]; //@line 4737 "xmlparse.c"
        var $19=$entity; //@line 4737 "xmlparse.c"
        var $20=$19+8; //@line 4737 "xmlparse.c"
        var $21=HEAP[$20]; //@line 4737 "xmlparse.c"
        var $22=$18+$21; //@line 4737 "xmlparse.c"
        $textEnd=$22; //@line 4737 "xmlparse.c"
        var $23=$parser_addr; //@line 4747 "xmlparse.c"
        var $24=$23+224; //@line 4747 "xmlparse.c"
        var $25=HEAP[$24]; //@line 4747 "xmlparse.c"
        var $26=$openEntity; //@line 4747 "xmlparse.c"
        var $27=$26+16; //@line 4747 "xmlparse.c"
        var $28=HEAP[$27]; //@line 4747 "xmlparse.c"
        var $29=$parser_addr; //@line 4747 "xmlparse.c"
        var $30=$textStart; //@line 4747 "xmlparse.c"
        var $31=$textEnd; //@line 4747 "xmlparse.c"
        var $32=_doContent($29, $28, $25, $30, $31, $next, 0); //@line 4747 "xmlparse.c"
        $result=$32; //@line 4747 "xmlparse.c"
        var $33=$result; //@line 4750 "xmlparse.c"
        var $34=($33)!=0; //@line 4750 "xmlparse.c"
        if ($34) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4750 "xmlparse.c"
      case 3: // $bb2
        var $35=$result; //@line 4751 "xmlparse.c"
        $0=$35; //@line 4751 "xmlparse.c"
        __label__ = 8; break; //@line 4751 "xmlparse.c"
      case 4: // $bb3
        var $36=HEAP[$next]; //@line 4752 "xmlparse.c"
        var $37=$textEnd; //@line 4752 "xmlparse.c"
        var $38=($37)==($36); //@line 4752 "xmlparse.c"
        if ($38) { __label__ = 7; break; } else { __label__ = 5; break; } //@line 4752 "xmlparse.c"
      case 5: // $bb4
        var $39=$parser_addr; //@line 4752 "xmlparse.c"
        var $40=$39+464; //@line 4752 "xmlparse.c"
        var $41=$40; //@line 4752 "xmlparse.c"
        var $42=HEAP[$41]; //@line 4752 "xmlparse.c"
        var $43=($42)!=3; //@line 4752 "xmlparse.c"
        if ($43) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 4752 "xmlparse.c"
      case 6: // $bb5
        var $44=HEAP[$next]; //@line 4753 "xmlparse.c"
        var $45=($44); //@line 4753 "xmlparse.c"
        var $46=$entity; //@line 4753 "xmlparse.c"
        var $47=$46+4; //@line 4753 "xmlparse.c"
        var $48=HEAP[$47]; //@line 4753 "xmlparse.c"
        var $49=($48); //@line 4753 "xmlparse.c"
        var $50=($45) - ($49); //@line 4753 "xmlparse.c"
        var $51=$entity; //@line 4753 "xmlparse.c"
        var $52=$51+12; //@line 4753 "xmlparse.c"
        HEAP[$52]=$50; //@line 4753 "xmlparse.c"
        var $53=$result; //@line 4754 "xmlparse.c"
        $0=$53; //@line 4754 "xmlparse.c"
        __label__ = 8; break; //@line 4754 "xmlparse.c"
      case 7: // $bb6
        var $54=$entity; //@line 4757 "xmlparse.c"
        var $55=$54+32; //@line 4757 "xmlparse.c"
        HEAP[$55]=0; //@line 4757 "xmlparse.c"
        var $56=$openEntity; //@line 4758 "xmlparse.c"
        var $57=$56+8; //@line 4758 "xmlparse.c"
        var $58=HEAP[$57]; //@line 4758 "xmlparse.c"
        var $59=$parser_addr; //@line 4758 "xmlparse.c"
        var $60=$59+284; //@line 4758 "xmlparse.c"
        HEAP[$60]=$58; //@line 4758 "xmlparse.c"
        var $61=$parser_addr; //@line 4760 "xmlparse.c"
        var $62=$61+288; //@line 4760 "xmlparse.c"
        var $63=HEAP[$62]; //@line 4760 "xmlparse.c"
        var $64=$openEntity; //@line 4760 "xmlparse.c"
        var $65=$64+8; //@line 4760 "xmlparse.c"
        HEAP[$65]=$63; //@line 4760 "xmlparse.c"
        var $66=$parser_addr; //@line 4761 "xmlparse.c"
        var $67=$66+288; //@line 4761 "xmlparse.c"
        var $68=$openEntity; //@line 4761 "xmlparse.c"
        HEAP[$67]=$68; //@line 4761 "xmlparse.c"
        var $69=$parser_addr; //@line 4775 "xmlparse.c"
        var $70=$69+264; //@line 4775 "xmlparse.c"
        HEAP[$70]=(FUNCTION_TABLE_OFFSET + 66); //@line 4775 "xmlparse.c"
        var $71=$parser_addr; //@line 4777 "xmlparse.c"
        var $72=$71+464; //@line 4777 "xmlparse.c"
        var $73=$72+4; //@line 4777 "xmlparse.c"
        var $74=HEAP[$73]; //@line 4777 "xmlparse.c"
        var $75=($74)==0; //@line 4777 "xmlparse.c"
        var $76=($75); //@line 4777 "xmlparse.c"
        var $77=$parser_addr; //@line 4777 "xmlparse.c"
        var $78=$77+144; //@line 4777 "xmlparse.c"
        var $79=HEAP[$78]; //@line 4777 "xmlparse.c"
        var $80=$parser_addr; //@line 4777 "xmlparse.c"
        var $81=$80+460; //@line 4777 "xmlparse.c"
        var $82=HEAP[$81]; //@line 4777 "xmlparse.c"
        var $83=($82)!=0; //@line 4777 "xmlparse.c"
        var $84=($83); //@line 4777 "xmlparse.c"
        var $85=$parser_addr; //@line 4777 "xmlparse.c"
        var $86=$s_addr; //@line 4777 "xmlparse.c"
        var $87=$end_addr; //@line 4777 "xmlparse.c"
        var $88=$nextPtr_addr; //@line 4777 "xmlparse.c"
        var $89=((($76)) & 255); //@line 4777 "xmlparse.c"
        var $90=_doContent($85, $84, $79, $86, $87, $88, $89); //@line 4777 "xmlparse.c"
        $0=$90; //@line 4777 "xmlparse.c"
        __label__ = 8; break; //@line 4777 "xmlparse.c"
      case 8: // $bb7
        var $91=$0; //@line 4733 "xmlparse.c"
        $retval=$91; //@line 4733 "xmlparse.c"
        var $retval8=$retval; //@line 4733 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval8; //@line 4733 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _errorProcessor($parser, $s, $end, $nextPtr) {
    ;
    var __label__;
  
    var $parser_addr;
    var $s_addr;
    var $end_addr;
    var $nextPtr_addr;
    var $retval;
    var $0;
    $parser_addr=$parser;
    $s_addr=$s;
    $end_addr=$end;
    $nextPtr_addr=$nextPtr;
    var $1=$parser_addr; //@line 4788 "xmlparse.c"
    var $2=$1+268; //@line 4788 "xmlparse.c"
    var $3=HEAP[$2]; //@line 4788 "xmlparse.c"
    $0=$3; //@line 4788 "xmlparse.c"
    var $4=$0; //@line 4788 "xmlparse.c"
    $retval=$4; //@line 4788 "xmlparse.c"
    var $retval1=$retval; //@line 4788 "xmlparse.c"
    ;
    return $retval1; //@line 4788 "xmlparse.c"
  }
  

  function _storeAttributeValue($parser, $enc, $isCdata, $ptr, $end, $pool) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $isCdata_addr;
        var $ptr_addr;
        var $end_addr;
        var $pool_addr;
        var $retval;
        var $iftmp_230;
        var $0;
        var $result;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $isCdata_addr=$isCdata;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $pool_addr=$pool;
        var $1=$isCdata_addr; //@line 4797 "xmlparse.c"
        var $2=($1); //@line 4797 "xmlparse.c"
        var $3=$parser_addr; //@line 4797 "xmlparse.c"
        var $4=$enc_addr; //@line 4797 "xmlparse.c"
        var $5=((($2)) & 255); //@line 4797 "xmlparse.c"
        var $6=$ptr_addr; //@line 4797 "xmlparse.c"
        var $7=$end_addr; //@line 4797 "xmlparse.c"
        var $8=$pool_addr; //@line 4797 "xmlparse.c"
        var $9=_appendAttributeValue($3, $4, $5, $6, $7, $8); //@line 4797 "xmlparse.c"
        $result=$9; //@line 4797 "xmlparse.c"
        var $10=$result; //@line 4798 "xmlparse.c"
        var $11=($10)!=0; //@line 4798 "xmlparse.c"
        if ($11) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4798 "xmlparse.c"
      case 1: // $bb
        var $12=$result; //@line 4799 "xmlparse.c"
        $0=$12; //@line 4799 "xmlparse.c"
        __label__ = 10; break; //@line 4799 "xmlparse.c"
      case 2: // $bb1
        var $13=$isCdata_addr; //@line 4800 "xmlparse.c"
        var $14=($13)==0; //@line 4800 "xmlparse.c"
        if ($14) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 4800 "xmlparse.c"
      case 3: // $bb2
        var $15=$pool_addr; //@line 4800 "xmlparse.c"
        var $16=$15+12; //@line 4800 "xmlparse.c"
        var $17=HEAP[$16]; //@line 4800 "xmlparse.c"
        var $18=$pool_addr; //@line 4800 "xmlparse.c"
        var $19=$18+16; //@line 4800 "xmlparse.c"
        var $20=HEAP[$19]; //@line 4800 "xmlparse.c"
        var $21=($17)!=($20); //@line 4800 "xmlparse.c"
        if ($21) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 4800 "xmlparse.c"
      case 4: // $bb3
        var $22=$pool_addr; //@line 4800 "xmlparse.c"
        var $23=$22+12; //@line 4800 "xmlparse.c"
        var $24=HEAP[$23]; //@line 4800 "xmlparse.c"
        var $25=$24+-1; //@line 4800 "xmlparse.c"
        var $26=HEAP[$25]; //@line 4800 "xmlparse.c"
        var $27=($26)==32; //@line 4800 "xmlparse.c"
        if ($27) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4800 "xmlparse.c"
      case 5: // $bb4
        var $28=$pool_addr; //@line 4801 "xmlparse.c"
        var $29=$28+12; //@line 4801 "xmlparse.c"
        var $30=HEAP[$29]; //@line 4801 "xmlparse.c"
        var $31=$30+-1; //@line 4801 "xmlparse.c"
        var $32=$pool_addr; //@line 4801 "xmlparse.c"
        var $33=$32+12; //@line 4801 "xmlparse.c"
        HEAP[$33]=$31; //@line 4801 "xmlparse.c"
        __label__ = 6; break; //@line 4801 "xmlparse.c"
      case 6: // $bb5
        var $34=$pool_addr; //@line 4802 "xmlparse.c"
        var $35=$34+12; //@line 4802 "xmlparse.c"
        var $36=HEAP[$35]; //@line 4802 "xmlparse.c"
        var $37=$pool_addr; //@line 4802 "xmlparse.c"
        var $38=$37+8; //@line 4802 "xmlparse.c"
        var $39=HEAP[$38]; //@line 4802 "xmlparse.c"
        var $40=($36)!=($39); //@line 4802 "xmlparse.c"
        if ($40) { __label__ = 9; break; } else { __label__ = 7; break; } //@line 4802 "xmlparse.c"
      case 7: // $bb6
        var $41=$pool_addr; //@line 4802 "xmlparse.c"
        var $42=_poolGrow($41); //@line 4802 "xmlparse.c"
        var $43=($42)!=0; //@line 4802 "xmlparse.c"
        if ($43) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 4802 "xmlparse.c"
      case 8: // $bb10
        $iftmp_230=1; //@line 4802 "xmlparse.c"
        $0=1; //@line 4803 "xmlparse.c"
        __label__ = 10; break; //@line 4803 "xmlparse.c"
      case 9: // $bb11
        var $44=$pool_addr; //@line 4802 "xmlparse.c"
        var $45=$44+12; //@line 4802 "xmlparse.c"
        var $46=HEAP[$45]; //@line 4802 "xmlparse.c"
        HEAP[$46]=0; //@line 4802 "xmlparse.c"
        var $47=$46+1; //@line 4802 "xmlparse.c"
        var $48=$pool_addr; //@line 4802 "xmlparse.c"
        var $49=$48+12; //@line 4802 "xmlparse.c"
        HEAP[$49]=$47; //@line 4802 "xmlparse.c"
        $iftmp_230=0; //@line 4802 "xmlparse.c"
        $0=0; //@line 4804 "xmlparse.c"
        __label__ = 10; break; //@line 4804 "xmlparse.c"
      case 10: // $bb12
        var $50=$0; //@line 4799 "xmlparse.c"
        $retval=$50; //@line 4799 "xmlparse.c"
        var $retval13=$retval; //@line 4799 "xmlparse.c"
        ;
        return $retval13; //@line 4799 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _appendAttributeValue($parser, $enc, $isCdata, $ptr, $end, $pool) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $isCdata_addr;
        var $ptr_addr;
        var $end_addr;
        var $pool_addr;
        var $retval;
        var $iftmp_240;
        var $iftmp_239;
        var $iftmp_237;
        var $iftmp_235;
        var $iftmp_232;
        var $0;
        var $dtd;
        var $next=__stackBase__;
        var $tok;
        var $buf=__stackBase__+4;
        var $i;
        var $n;
        var $name;
        var $entity;
        var $checkEntityDecl;
        var $ch;
        var $result;
        var $textEnd;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $isCdata_addr=$isCdata;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $pool_addr=$pool;
        var $1=$parser_addr; //@line 4812 "xmlparse.c"
        var $2=$1+340; //@line 4812 "xmlparse.c"
        var $3=HEAP[$2]; //@line 4812 "xmlparse.c"
        $dtd=$3; //@line 4812 "xmlparse.c"
        var $buf17=$buf; //@line 4841 "xmlparse.c"
        __label__ = 1; break; //@line 4812 "xmlparse.c"
      case 1: // $bb
        var $4=$enc_addr; //@line 4815 "xmlparse.c"
        var $5=$4+12; //@line 4815 "xmlparse.c"
        var $6=$5; //@line 4815 "xmlparse.c"
        var $7=HEAP[$6]; //@line 4815 "xmlparse.c"
        var $8=$enc_addr; //@line 4815 "xmlparse.c"
        var $9=$ptr_addr; //@line 4815 "xmlparse.c"
        var $10=$end_addr; //@line 4815 "xmlparse.c"
        var $11=FUNCTION_TABLE[$7]($8, $9, $10, $next); //@line 4815 "xmlparse.c"
        $tok=$11; //@line 4815 "xmlparse.c"
        if ($11 == -4) {
          __label__ = 2; break;
        }
        else if ($11 == -3) {
          __label__ = 29; break;
        }
        else if ($11 == -1) {
          __label__ = 6; break;
        }
        else if ($11 == 0) {
          __label__ = 3; break;
        }
        else if ($11 == 6) {
          __label__ = 27; break;
        }
        else if ($11 == 7) {
          __label__ = 30; break;
        }
        else if ($11 == 9) {
          __label__ = 37; break;
        }
        else if ($11 == 10) {
          __label__ = 9; break;
        }
        else if ($11 == 39) {
          __label__ = 30; break;
        }
        else {
        __label__ = 74; break;
        }
        
      case 2: // $bb1
        $0=0; //@line 4818 "xmlparse.c"
        __label__ = 78; break; //@line 4818 "xmlparse.c"
      case 3: // $bb2
        var $12=$parser_addr; //@line 4820 "xmlparse.c"
        var $13=$12+144; //@line 4820 "xmlparse.c"
        var $14=HEAP[$13]; //@line 4820 "xmlparse.c"
        var $15=$enc_addr; //@line 4820 "xmlparse.c"
        var $16=($14)==($15); //@line 4820 "xmlparse.c"
        if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4820 "xmlparse.c"
      case 4: // $bb3
        var $17=HEAP[$next]; //@line 4821 "xmlparse.c"
        var $18=$parser_addr; //@line 4821 "xmlparse.c"
        var $19=$18+272; //@line 4821 "xmlparse.c"
        HEAP[$19]=$17; //@line 4821 "xmlparse.c"
        __label__ = 5; break; //@line 4821 "xmlparse.c"
      case 5: // $bb4
        $0=4; //@line 4822 "xmlparse.c"
        __label__ = 78; break; //@line 4822 "xmlparse.c"
      case 6: // $bb5
        var $20=$parser_addr; //@line 4824 "xmlparse.c"
        var $21=$20+144; //@line 4824 "xmlparse.c"
        var $22=HEAP[$21]; //@line 4824 "xmlparse.c"
        var $23=$enc_addr; //@line 4824 "xmlparse.c"
        var $24=($22)==($23); //@line 4824 "xmlparse.c"
        if ($24) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4824 "xmlparse.c"
      case 7: // $bb6
        var $25=$parser_addr; //@line 4825 "xmlparse.c"
        var $26=$25+272; //@line 4825 "xmlparse.c"
        var $27=$ptr_addr; //@line 4825 "xmlparse.c"
        HEAP[$26]=$27; //@line 4825 "xmlparse.c"
        __label__ = 8; break; //@line 4825 "xmlparse.c"
      case 8: // $bb7
        $0=4; //@line 4826 "xmlparse.c"
        __label__ = 78; break; //@line 4826 "xmlparse.c"
      case 9: // $bb8
        var $28=$enc_addr; //@line 4831 "xmlparse.c"
        var $29=$28+40; //@line 4831 "xmlparse.c"
        var $30=HEAP[$29]; //@line 4831 "xmlparse.c"
        var $31=$enc_addr; //@line 4831 "xmlparse.c"
        var $32=$ptr_addr; //@line 4831 "xmlparse.c"
        var $33=FUNCTION_TABLE[$30]($31, $32); //@line 4831 "xmlparse.c"
        $n=$33; //@line 4831 "xmlparse.c"
        var $34=$n; //@line 4832 "xmlparse.c"
        var $35=($34) < 0; //@line 4832 "xmlparse.c"
        if ($35) { __label__ = 10; break; } else { __label__ = 13; break; } //@line 4832 "xmlparse.c"
      case 10: // $bb9
        var $36=$parser_addr; //@line 4833 "xmlparse.c"
        var $37=$36+144; //@line 4833 "xmlparse.c"
        var $38=HEAP[$37]; //@line 4833 "xmlparse.c"
        var $39=$enc_addr; //@line 4833 "xmlparse.c"
        var $40=($38)==($39); //@line 4833 "xmlparse.c"
        if ($40) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4833 "xmlparse.c"
      case 11: // $bb10
        var $41=$parser_addr; //@line 4834 "xmlparse.c"
        var $42=$41+272; //@line 4834 "xmlparse.c"
        var $43=$ptr_addr; //@line 4834 "xmlparse.c"
        HEAP[$42]=$43; //@line 4834 "xmlparse.c"
        __label__ = 12; break; //@line 4834 "xmlparse.c"
      case 12: // $bb11
        $0=14; //@line 4835 "xmlparse.c"
        __label__ = 78; break; //@line 4835 "xmlparse.c"
      case 13: // $bb12
        var $44=$isCdata_addr; //@line 4837 "xmlparse.c"
        var $45=($44)==0; //@line 4837 "xmlparse.c"
        if ($45) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 4837 "xmlparse.c"
      case 14: // $bb13
        var $46=$n; //@line 4837 "xmlparse.c"
        var $47=($46)==32; //@line 4837 "xmlparse.c"
        if ($47) { __label__ = 15; break; } else { __label__ = 17; break; } //@line 4837 "xmlparse.c"
      case 15: // $bb14
        var $48=$pool_addr; //@line 4837 "xmlparse.c"
        var $49=$48+12; //@line 4837 "xmlparse.c"
        var $50=HEAP[$49]; //@line 4837 "xmlparse.c"
        var $51=$pool_addr; //@line 4837 "xmlparse.c"
        var $52=$51+16; //@line 4837 "xmlparse.c"
        var $53=HEAP[$52]; //@line 4837 "xmlparse.c"
        var $54=($50)==($53); //@line 4837 "xmlparse.c"
        if ($54) { __label__ = 77; break; } else { __label__ = 16; break; } //@line 4837 "xmlparse.c"
      case 16: // $bb15
        var $55=$pool_addr; //@line 4837 "xmlparse.c"
        var $56=$55+12; //@line 4837 "xmlparse.c"
        var $57=HEAP[$56]; //@line 4837 "xmlparse.c"
        var $58=$57+-1; //@line 4837 "xmlparse.c"
        var $59=HEAP[$58]; //@line 4837 "xmlparse.c"
        var $60=($59)==32; //@line 4837 "xmlparse.c"
        if ($60) { __label__ = 77; break; } else { __label__ = 17; break; } //@line 4837 "xmlparse.c"
      case 17: // $bb16
        var $61=$n; //@line 4841 "xmlparse.c"
        var $62=_PyExpat_XmlUtf8Encode($61, $buf17); //@line 4841 "xmlparse.c"
        $n=$62; //@line 4841 "xmlparse.c"
        var $63=($62)==0; //@line 4842 "xmlparse.c"
        if ($63) { __label__ = 18; break; } else { __label__ = 21; break; } //@line 4842 "xmlparse.c"
      case 18: // $bb18
        var $64=$parser_addr; //@line 4843 "xmlparse.c"
        var $65=$64+144; //@line 4843 "xmlparse.c"
        var $66=HEAP[$65]; //@line 4843 "xmlparse.c"
        var $67=$enc_addr; //@line 4843 "xmlparse.c"
        var $68=($66)==($67); //@line 4843 "xmlparse.c"
        if ($68) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4843 "xmlparse.c"
      case 19: // $bb19
        var $69=$parser_addr; //@line 4844 "xmlparse.c"
        var $70=$69+272; //@line 4844 "xmlparse.c"
        var $71=$ptr_addr; //@line 4844 "xmlparse.c"
        HEAP[$70]=$71; //@line 4844 "xmlparse.c"
        __label__ = 20; break; //@line 4844 "xmlparse.c"
      case 20: // $bb20
        $0=14; //@line 4845 "xmlparse.c"
        __label__ = 78; break; //@line 4845 "xmlparse.c"
      case 21: // $bb21
        $i=0; //@line 4847 "xmlparse.c"
        __label__ = 26; break; //@line 4847 "xmlparse.c"
      case 22: // $bb22
        var $72=$pool_addr; //@line 4848 "xmlparse.c"
        var $73=$72+12; //@line 4848 "xmlparse.c"
        var $74=HEAP[$73]; //@line 4848 "xmlparse.c"
        var $75=$pool_addr; //@line 4848 "xmlparse.c"
        var $76=$75+8; //@line 4848 "xmlparse.c"
        var $77=HEAP[$76]; //@line 4848 "xmlparse.c"
        var $78=($74)!=($77); //@line 4848 "xmlparse.c"
        if ($78) { __label__ = 25; break; } else { __label__ = 23; break; } //@line 4848 "xmlparse.c"
      case 23: // $bb23
        var $79=$pool_addr; //@line 4848 "xmlparse.c"
        var $80=_poolGrow($79); //@line 4848 "xmlparse.c"
        var $81=($80)!=0; //@line 4848 "xmlparse.c"
        if ($81) { __label__ = 25; break; } else { __label__ = 24; break; } //@line 4848 "xmlparse.c"
      case 24: // $bb27
        $iftmp_232=1; //@line 4848 "xmlparse.c"
        $0=1; //@line 4849 "xmlparse.c"
        __label__ = 78; break; //@line 4849 "xmlparse.c"
      case 25: // $bb28
        var $82=$pool_addr; //@line 4848 "xmlparse.c"
        var $83=$82+12; //@line 4848 "xmlparse.c"
        var $84=HEAP[$83]; //@line 4848 "xmlparse.c"
        var $85=$i; //@line 4848 "xmlparse.c"
        var $86=$buf+$85; //@line 4848 "xmlparse.c"
        var $87=HEAP[$86]; //@line 4848 "xmlparse.c"
        HEAP[$84]=$87; //@line 4848 "xmlparse.c"
        var $88=$84+1; //@line 4848 "xmlparse.c"
        var $89=$pool_addr; //@line 4848 "xmlparse.c"
        var $90=$89+12; //@line 4848 "xmlparse.c"
        HEAP[$90]=$88; //@line 4848 "xmlparse.c"
        $iftmp_232=0; //@line 4848 "xmlparse.c"
        var $91=$i; //@line 4847 "xmlparse.c"
        var $92=($91) + 1; //@line 4847 "xmlparse.c"
        $i=$92; //@line 4847 "xmlparse.c"
        __label__ = 26; break; //@line 4847 "xmlparse.c"
      case 26: // $bb29
        var $93=$i; //@line 4847 "xmlparse.c"
        var $94=$n; //@line 4847 "xmlparse.c"
        var $95=($93) < ($94); //@line 4847 "xmlparse.c"
        if ($95) { __label__ = 22; break; } else { __label__ = 77; break; } //@line 4847 "xmlparse.c"
      case 27: // $bb31
        var $96=HEAP[$next]; //@line 4854 "xmlparse.c"
        var $97=$pool_addr; //@line 4854 "xmlparse.c"
        var $98=$enc_addr; //@line 4854 "xmlparse.c"
        var $99=$ptr_addr; //@line 4854 "xmlparse.c"
        var $100=_poolAppend($97, $98, $99, $96); //@line 4854 "xmlparse.c"
        var $101=($100)==0; //@line 4854 "xmlparse.c"
        if ($101) { __label__ = 28; break; } else { __label__ = 77; break; } //@line 4854 "xmlparse.c"
      case 28: // $bb32
        $0=1; //@line 4855 "xmlparse.c"
        __label__ = 78; break; //@line 4855 "xmlparse.c"
      case 29: // $bb34
        var $102=$enc_addr; //@line 4858 "xmlparse.c"
        var $103=$102+64; //@line 4858 "xmlparse.c"
        var $104=HEAP[$103]; //@line 4858 "xmlparse.c"
        var $105=$ptr_addr; //@line 4858 "xmlparse.c"
        var $106=$105+$104; //@line 4858 "xmlparse.c"
        HEAP[$next]=$106; //@line 4858 "xmlparse.c"
        __label__ = 30; break; //@line 4858 "xmlparse.c"
      case 30: // $bb35
        var $107=$isCdata_addr; //@line 4862 "xmlparse.c"
        var $108=($107)==0; //@line 4862 "xmlparse.c"
        if ($108) { __label__ = 31; break; } else { __label__ = 33; break; } //@line 4862 "xmlparse.c"
      case 31: // $bb36
        var $109=$pool_addr; //@line 4862 "xmlparse.c"
        var $110=$109+12; //@line 4862 "xmlparse.c"
        var $111=HEAP[$110]; //@line 4862 "xmlparse.c"
        var $112=$pool_addr; //@line 4862 "xmlparse.c"
        var $113=$112+16; //@line 4862 "xmlparse.c"
        var $114=HEAP[$113]; //@line 4862 "xmlparse.c"
        var $115=($111)==($114); //@line 4862 "xmlparse.c"
        if ($115) { __label__ = 77; break; } else { __label__ = 32; break; } //@line 4862 "xmlparse.c"
      case 32: // $bb37
        var $116=$pool_addr; //@line 4862 "xmlparse.c"
        var $117=$116+12; //@line 4862 "xmlparse.c"
        var $118=HEAP[$117]; //@line 4862 "xmlparse.c"
        var $119=$118+-1; //@line 4862 "xmlparse.c"
        var $120=HEAP[$119]; //@line 4862 "xmlparse.c"
        var $121=($120)==32; //@line 4862 "xmlparse.c"
        if ($121) { __label__ = 77; break; } else { __label__ = 33; break; } //@line 4862 "xmlparse.c"
      case 33: // $bb38
        var $122=$pool_addr; //@line 4864 "xmlparse.c"
        var $123=$122+12; //@line 4864 "xmlparse.c"
        var $124=HEAP[$123]; //@line 4864 "xmlparse.c"
        var $125=$pool_addr; //@line 4864 "xmlparse.c"
        var $126=$125+8; //@line 4864 "xmlparse.c"
        var $127=HEAP[$126]; //@line 4864 "xmlparse.c"
        var $128=($124)!=($127); //@line 4864 "xmlparse.c"
        if ($128) { __label__ = 35; break; } else { __label__ = 34; break; } //@line 4864 "xmlparse.c"
      case 34: // $bb39
        var $129=$pool_addr; //@line 4864 "xmlparse.c"
        var $130=_poolGrow($129); //@line 4864 "xmlparse.c"
        var $131=($130)!=0; //@line 4864 "xmlparse.c"
        if ($131) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4864 "xmlparse.c"
      case 35: // $bb42
        var $132=$pool_addr; //@line 4864 "xmlparse.c"
        var $133=$132+12; //@line 4864 "xmlparse.c"
        var $134=HEAP[$133]; //@line 4864 "xmlparse.c"
        HEAP[$134]=32; //@line 4864 "xmlparse.c"
        var $135=$134+1; //@line 4864 "xmlparse.c"
        var $136=$pool_addr; //@line 4864 "xmlparse.c"
        var $137=$136+12; //@line 4864 "xmlparse.c"
        HEAP[$137]=$135; //@line 4864 "xmlparse.c"
        $iftmp_235=0; //@line 4864 "xmlparse.c"
        __label__ = 77; break;
      case 36: // $bb44
        $iftmp_235=1; //@line 4864 "xmlparse.c"
        $0=1; //@line 4865 "xmlparse.c"
        __label__ = 78; break; //@line 4865 "xmlparse.c"
      case 37: // $bb46
        var $138=$enc_addr; //@line 4872 "xmlparse.c"
        var $139=$138+44; //@line 4872 "xmlparse.c"
        var $140=HEAP[$139]; //@line 4872 "xmlparse.c"
        var $141=HEAP[$next]; //@line 4872 "xmlparse.c"
        var $142=$enc_addr; //@line 4872 "xmlparse.c"
        var $143=$142+64; //@line 4872 "xmlparse.c"
        var $144=HEAP[$143]; //@line 4872 "xmlparse.c"
        var $145=0 - ($144); //@line 4872 "xmlparse.c"
        var $146=$141+$145; //@line 4872 "xmlparse.c"
        var $147=$enc_addr; //@line 4872 "xmlparse.c"
        var $148=$147+64; //@line 4872 "xmlparse.c"
        var $149=HEAP[$148]; //@line 4872 "xmlparse.c"
        var $150=$ptr_addr; //@line 4872 "xmlparse.c"
        var $151=$150+$149; //@line 4872 "xmlparse.c"
        var $152=$enc_addr; //@line 4872 "xmlparse.c"
        var $153=FUNCTION_TABLE[$140]($152, $151, $146); //@line 4872 "xmlparse.c"
        var $154=((($153)) & 255); //@line 4872 "xmlparse.c"
        $ch=$154; //@line 4872 "xmlparse.c"
        var $155=$ch; //@line 4875 "xmlparse.c"
        var $156=($155)!=0; //@line 4875 "xmlparse.c"
        if ($156) { __label__ = 38; break; } else { __label__ = 42; break; } //@line 4875 "xmlparse.c"
      case 38: // $bb47
        var $157=$pool_addr; //@line 4876 "xmlparse.c"
        var $158=$157+12; //@line 4876 "xmlparse.c"
        var $159=HEAP[$158]; //@line 4876 "xmlparse.c"
        var $160=$pool_addr; //@line 4876 "xmlparse.c"
        var $161=$160+8; //@line 4876 "xmlparse.c"
        var $162=HEAP[$161]; //@line 4876 "xmlparse.c"
        var $163=($159)!=($162); //@line 4876 "xmlparse.c"
        if ($163) { __label__ = 40; break; } else { __label__ = 39; break; } //@line 4876 "xmlparse.c"
      case 39: // $bb48
        var $164=$pool_addr; //@line 4876 "xmlparse.c"
        var $165=_poolGrow($164); //@line 4876 "xmlparse.c"
        var $166=($165)!=0; //@line 4876 "xmlparse.c"
        if ($166) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 4876 "xmlparse.c"
      case 40: // $bb51
        var $167=$pool_addr; //@line 4876 "xmlparse.c"
        var $168=$167+12; //@line 4876 "xmlparse.c"
        var $169=HEAP[$168]; //@line 4876 "xmlparse.c"
        var $170=$ch; //@line 4876 "xmlparse.c"
        HEAP[$169]=$170; //@line 4876 "xmlparse.c"
        var $171=$169+1; //@line 4876 "xmlparse.c"
        var $172=$pool_addr; //@line 4876 "xmlparse.c"
        var $173=$172+12; //@line 4876 "xmlparse.c"
        HEAP[$173]=$171; //@line 4876 "xmlparse.c"
        $iftmp_237=0; //@line 4876 "xmlparse.c"
        __label__ = 77; break;
      case 41: // $bb53
        $iftmp_237=1; //@line 4876 "xmlparse.c"
        $0=1; //@line 4877 "xmlparse.c"
        __label__ = 78; break; //@line 4877 "xmlparse.c"
      case 42: // $bb55
        var $174=HEAP[$next]; //@line 4880 "xmlparse.c"
        var $175=$enc_addr; //@line 4880 "xmlparse.c"
        var $176=$175+64; //@line 4880 "xmlparse.c"
        var $177=HEAP[$176]; //@line 4880 "xmlparse.c"
        var $178=0 - ($177); //@line 4880 "xmlparse.c"
        var $179=$174+$178; //@line 4880 "xmlparse.c"
        var $180=$enc_addr; //@line 4880 "xmlparse.c"
        var $181=$180+64; //@line 4880 "xmlparse.c"
        var $182=HEAP[$181]; //@line 4880 "xmlparse.c"
        var $183=$ptr_addr; //@line 4880 "xmlparse.c"
        var $184=$183+$182; //@line 4880 "xmlparse.c"
        var $185=$parser_addr; //@line 4880 "xmlparse.c"
        var $186=$185+424; //@line 4880 "xmlparse.c"
        var $187=$enc_addr; //@line 4880 "xmlparse.c"
        var $188=_poolStoreString($186, $187, $184, $179); //@line 4880 "xmlparse.c"
        $name=$188; //@line 4880 "xmlparse.c"
        var $189=$name; //@line 4883 "xmlparse.c"
        var $190=($189)==0; //@line 4883 "xmlparse.c"
        if ($190) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 4883 "xmlparse.c"
      case 43: // $bb56
        $0=1; //@line 4884 "xmlparse.c"
        __label__ = 78; break; //@line 4884 "xmlparse.c"
      case 44: // $bb57
        var $191=$dtd; //@line 4885 "xmlparse.c"
        var $192=$191; //@line 4885 "xmlparse.c"
        var $193=$name; //@line 4885 "xmlparse.c"
        var $194=_lookup($192, $193, 0); //@line 4885 "xmlparse.c"
        var $195=$194; //@line 4885 "xmlparse.c"
        $entity=$195; //@line 4885 "xmlparse.c"
        var $196=$parser_addr; //@line 4886 "xmlparse.c"
        var $197=$196+424; //@line 4886 "xmlparse.c"
        var $198=$197+16; //@line 4886 "xmlparse.c"
        var $199=HEAP[$198]; //@line 4886 "xmlparse.c"
        var $200=$parser_addr; //@line 4886 "xmlparse.c"
        var $201=$200+424; //@line 4886 "xmlparse.c"
        var $202=$201+12; //@line 4886 "xmlparse.c"
        HEAP[$202]=$199; //@line 4886 "xmlparse.c"
        var $203=$dtd; //@line 4890 "xmlparse.c"
        var $204=$203+80; //@line 4890 "xmlparse.c"
        var $205=$pool_addr; //@line 4890 "xmlparse.c"
        var $206=($204)==($205); //@line 4890 "xmlparse.c"
        var $207=$dtd; //@line 4891 "xmlparse.c"
        if ($206) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 4890 "xmlparse.c"
      case 45: // $bb58
        var $208=$207+130; //@line 4891 "xmlparse.c"
        var $209=HEAP[$208]; //@line 4891 "xmlparse.c"
        var $210=($209)!=0; //@line 4891 "xmlparse.c"
        if ($210) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 4891 "xmlparse.c"
      case 46: // $bb59
        var $211=$parser_addr; //@line 4891 "xmlparse.c"
        var $212=$211+284; //@line 4891 "xmlparse.c"
        var $213=HEAP[$212]; //@line 4891 "xmlparse.c"
        var $214=($213)==0; //@line 4891 "xmlparse.c"
        var $215=($214); //@line 4891 "xmlparse.c"
        $iftmp_239=$215; //@line 4891 "xmlparse.c"
        __label__ = 48; break; //@line 4891 "xmlparse.c"
      case 47: // $bb60
        var $216=$dtd; //@line 4891 "xmlparse.c"
        var $217=$216+129; //@line 4891 "xmlparse.c"
        var $218=HEAP[$217]; //@line 4891 "xmlparse.c"
        var $219=($218)==0; //@line 4891 "xmlparse.c"
        var $220=($219); //@line 4891 "xmlparse.c"
        $iftmp_239=$220; //@line 4891 "xmlparse.c"
        __label__ = 48; break; //@line 4891 "xmlparse.c"
      case 48: // $bb61
        var $221=$iftmp_239; //@line 4891 "xmlparse.c"
        $checkEntityDecl=$221; //@line 4891 "xmlparse.c"
        __lastLabel__ = 48; __label__ = 54; break; //@line 4891 "xmlparse.c"
      case 49: // $bb62
        var $222=$207+129; //@line 4899 "xmlparse.c"
        var $223=HEAP[$222]; //@line 4899 "xmlparse.c"
        var $224=($223)==0; //@line 4899 "xmlparse.c"
        if ($224) { __label__ = 51; break; } else { __label__ = 50; break; } //@line 4899 "xmlparse.c"
      case 50: // $bb63
        var $225=$dtd; //@line 4899 "xmlparse.c"
        var $226=$225+130; //@line 4899 "xmlparse.c"
        var $227=HEAP[$226]; //@line 4899 "xmlparse.c"
        var $228=($227)!=0; //@line 4899 "xmlparse.c"
        if ($228) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 4899 "xmlparse.c"
      case 51: // $bb64
        $iftmp_240=1; //@line 4899 "xmlparse.c"
        __label__ = 53; break; //@line 4899 "xmlparse.c"
      case 52: // $bb65
        $iftmp_240=0; //@line 4899 "xmlparse.c"
        __label__ = 53; break; //@line 4899 "xmlparse.c"
      case 53: // $bb66
        var $229=$iftmp_240; //@line 4899 "xmlparse.c"
        var $230=((($229)) & 255); //@line 4899 "xmlparse.c"
        $checkEntityDecl=$230; //@line 4899 "xmlparse.c"
        __lastLabel__ = 53; __label__ = 54; break; //@line 4899 "xmlparse.c"
      case 54: // $bb67
        var $231=__lastLabel__ == 53 ? $230 : ($221);
        var $232=($231)!=0; //@line 4900 "xmlparse.c"
        var $233=$entity; //@line 4901 "xmlparse.c"
        var $234=($233)==0; //@line 4901 "xmlparse.c"
        if ($232) { __label__ = 55; break; } else { __label__ = 59; break; } //@line 4900 "xmlparse.c"
      case 55: // $bb68
        if ($234) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 4901 "xmlparse.c"
      case 56: // $bb69
        $0=11; //@line 4902 "xmlparse.c"
        __label__ = 78; break; //@line 4902 "xmlparse.c"
      case 57: // $bb70
        var $235=$entity; //@line 4903 "xmlparse.c"
        var $236=$235+34; //@line 4903 "xmlparse.c"
        var $237=HEAP[$236]; //@line 4903 "xmlparse.c"
        var $238=($237)==0; //@line 4903 "xmlparse.c"
        if ($238) { __label__ = 58; break; } else { __label__ = 60; break; } //@line 4903 "xmlparse.c"
      case 58: // $bb71
        $0=24; //@line 4904 "xmlparse.c"
        __label__ = 78; break; //@line 4904 "xmlparse.c"
      case 59: // $bb73
        if ($234) { __label__ = 77; break; } else { __label__ = 60; break; } //@line 4906 "xmlparse.c"
      case 60: // $bb74
        var $239=$entity; //@line 4919 "xmlparse.c"
        var $240=$239+32; //@line 4919 "xmlparse.c"
        var $241=HEAP[$240]; //@line 4919 "xmlparse.c"
        var $242=($241)!=0; //@line 4919 "xmlparse.c"
        if ($242) { __label__ = 61; break; } else { __label__ = 64; break; } //@line 4919 "xmlparse.c"
      case 61: // $bb75
        var $243=$parser_addr; //@line 4920 "xmlparse.c"
        var $244=$243+144; //@line 4920 "xmlparse.c"
        var $245=HEAP[$244]; //@line 4920 "xmlparse.c"
        var $246=$enc_addr; //@line 4920 "xmlparse.c"
        var $247=($245)==($246); //@line 4920 "xmlparse.c"
        if ($247) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 4920 "xmlparse.c"
      case 62: // $bb76
        var $248=$parser_addr; //@line 4921 "xmlparse.c"
        var $249=$248+272; //@line 4921 "xmlparse.c"
        var $250=$ptr_addr; //@line 4921 "xmlparse.c"
        HEAP[$249]=$250; //@line 4921 "xmlparse.c"
        __label__ = 63; break; //@line 4921 "xmlparse.c"
      case 63: // $bb77
        $0=12; //@line 4922 "xmlparse.c"
        __label__ = 78; break; //@line 4922 "xmlparse.c"
      case 64: // $bb78
        var $251=$entity; //@line 4924 "xmlparse.c"
        var $252=$251+28; //@line 4924 "xmlparse.c"
        var $253=HEAP[$252]; //@line 4924 "xmlparse.c"
        var $254=($253)!=0; //@line 4924 "xmlparse.c"
        if ($254) { __label__ = 65; break; } else { __label__ = 68; break; } //@line 4924 "xmlparse.c"
      case 65: // $bb79
        var $255=$parser_addr; //@line 4925 "xmlparse.c"
        var $256=$255+144; //@line 4925 "xmlparse.c"
        var $257=HEAP[$256]; //@line 4925 "xmlparse.c"
        var $258=$enc_addr; //@line 4925 "xmlparse.c"
        var $259=($257)==($258); //@line 4925 "xmlparse.c"
        if ($259) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 4925 "xmlparse.c"
      case 66: // $bb80
        var $260=$parser_addr; //@line 4926 "xmlparse.c"
        var $261=$260+272; //@line 4926 "xmlparse.c"
        var $262=$ptr_addr; //@line 4926 "xmlparse.c"
        HEAP[$261]=$262; //@line 4926 "xmlparse.c"
        __label__ = 67; break; //@line 4926 "xmlparse.c"
      case 67: // $bb81
        $0=15; //@line 4927 "xmlparse.c"
        __label__ = 78; break; //@line 4927 "xmlparse.c"
      case 68: // $bb82
        var $263=$entity; //@line 4929 "xmlparse.c"
        var $264=$263+4; //@line 4929 "xmlparse.c"
        var $265=HEAP[$264]; //@line 4929 "xmlparse.c"
        var $266=($265)==0; //@line 4929 "xmlparse.c"
        if ($266) { __label__ = 69; break; } else { __label__ = 72; break; } //@line 4929 "xmlparse.c"
      case 69: // $bb83
        var $267=$parser_addr; //@line 4930 "xmlparse.c"
        var $268=$267+144; //@line 4930 "xmlparse.c"
        var $269=HEAP[$268]; //@line 4930 "xmlparse.c"
        var $270=$enc_addr; //@line 4930 "xmlparse.c"
        var $271=($269)==($270); //@line 4930 "xmlparse.c"
        if ($271) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 4930 "xmlparse.c"
      case 70: // $bb84
        var $272=$parser_addr; //@line 4931 "xmlparse.c"
        var $273=$272+272; //@line 4931 "xmlparse.c"
        var $274=$ptr_addr; //@line 4931 "xmlparse.c"
        HEAP[$273]=$274; //@line 4931 "xmlparse.c"
        __label__ = 71; break; //@line 4931 "xmlparse.c"
      case 71: // $bb85
        $0=16; //@line 4932 "xmlparse.c"
        __label__ = 78; break; //@line 4932 "xmlparse.c"
      case 72: // $bb86
        var $275=$entity; //@line 4936 "xmlparse.c"
        var $276=$275+4; //@line 4936 "xmlparse.c"
        var $277=HEAP[$276]; //@line 4936 "xmlparse.c"
        var $278=$entity; //@line 4936 "xmlparse.c"
        var $279=$278+8; //@line 4936 "xmlparse.c"
        var $280=HEAP[$279]; //@line 4936 "xmlparse.c"
        var $281=$277+$280; //@line 4936 "xmlparse.c"
        $textEnd=$281; //@line 4936 "xmlparse.c"
        var $282=$entity; //@line 4937 "xmlparse.c"
        var $283=$282+32; //@line 4937 "xmlparse.c"
        HEAP[$283]=1; //@line 4937 "xmlparse.c"
        var $284=$entity; //@line 4938 "xmlparse.c"
        var $285=$284+4; //@line 4938 "xmlparse.c"
        var $286=HEAP[$285]; //@line 4938 "xmlparse.c"
        var $287=$isCdata_addr; //@line 4938 "xmlparse.c"
        var $288=($287); //@line 4938 "xmlparse.c"
        var $289=$parser_addr; //@line 4938 "xmlparse.c"
        var $290=$289+224; //@line 4938 "xmlparse.c"
        var $291=HEAP[$290]; //@line 4938 "xmlparse.c"
        var $292=$parser_addr; //@line 4938 "xmlparse.c"
        var $293=((($288)) & 255); //@line 4938 "xmlparse.c"
        var $294=$textEnd; //@line 4938 "xmlparse.c"
        var $295=$pool_addr; //@line 4938 "xmlparse.c"
        var $296=_appendAttributeValue($292, $291, $293, $286, $294, $295); //@line 4938 "xmlparse.c"
        $result=$296; //@line 4938 "xmlparse.c"
        var $297=$entity; //@line 4941 "xmlparse.c"
        var $298=$297+32; //@line 4941 "xmlparse.c"
        HEAP[$298]=0; //@line 4941 "xmlparse.c"
        var $299=$result; //@line 4942 "xmlparse.c"
        var $300=($299)!=0; //@line 4942 "xmlparse.c"
        if ($300) { __label__ = 73; break; } else { __label__ = 77; break; } //@line 4942 "xmlparse.c"
      case 73: // $bb87
        var $301=$result; //@line 4943 "xmlparse.c"
        $0=$301; //@line 4943 "xmlparse.c"
        __label__ = 78; break; //@line 4943 "xmlparse.c"
      case 74: // $bb89
        var $302=$parser_addr; //@line 4948 "xmlparse.c"
        var $303=$302+144; //@line 4948 "xmlparse.c"
        var $304=HEAP[$303]; //@line 4948 "xmlparse.c"
        var $305=$enc_addr; //@line 4948 "xmlparse.c"
        var $306=($304)==($305); //@line 4948 "xmlparse.c"
        if ($306) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 4948 "xmlparse.c"
      case 75: // $bb90
        var $307=$parser_addr; //@line 4949 "xmlparse.c"
        var $308=$307+272; //@line 4949 "xmlparse.c"
        var $309=$ptr_addr; //@line 4949 "xmlparse.c"
        HEAP[$308]=$309; //@line 4949 "xmlparse.c"
        __label__ = 76; break; //@line 4949 "xmlparse.c"
      case 76: // $bb91
        $0=23; //@line 4950 "xmlparse.c"
        __label__ = 78; break; //@line 4950 "xmlparse.c"
      case 77: // $bb92
        var $310=HEAP[$next]; //@line 4952 "xmlparse.c"
        $ptr_addr=$310; //@line 4952 "xmlparse.c"
        __label__ = 1; break; //@line 4952 "xmlparse.c"
      case 78: // $bb93
        var $311=$0; //@line 4818 "xmlparse.c"
        $retval=$311; //@line 4818 "xmlparse.c"
        var $retval94=$retval; //@line 4818 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval94; //@line 4818 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normalizeLines($s) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $s_addr;
        var $p;
        $s_addr=$s;
        __label__ = 1; break; //@line 5125 "xmlparse.c"
      case 1: // $bb
        var $0=$s_addr; //@line 5128 "xmlparse.c"
        var $1=HEAP[$0]; //@line 5128 "xmlparse.c"
        var $2=($1)==0; //@line 5128 "xmlparse.c"
        if ($2) { __label__ = 11; break; } else { __label__ = 2; break; } //@line 5128 "xmlparse.c"
      case 2: // $bb1
        var $3=$s_addr; //@line 5130 "xmlparse.c"
        var $4=HEAP[$3]; //@line 5130 "xmlparse.c"
        var $5=($4)==13; //@line 5130 "xmlparse.c"
        var $6=$s_addr; //@line 5133 "xmlparse.c"
        if ($5) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 5130 "xmlparse.c"
      case 3: // $bb2
        var $7=$6+1; //@line 5127 "xmlparse.c"
        $s_addr=$7; //@line 5127 "xmlparse.c"
        __label__ = 1; break; //@line 5127 "xmlparse.c"
      case 4: // $bb3
        $p=$6; //@line 5133 "xmlparse.c"
        __label__ = 5; break; //@line 5133 "xmlparse.c"
      case 5: // $bb4
        var $8=$s_addr; //@line 5135 "xmlparse.c"
        var $9=HEAP[$8]; //@line 5135 "xmlparse.c"
        var $10=($9)==13; //@line 5135 "xmlparse.c"
        if ($10) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 5135 "xmlparse.c"
      case 6: // $bb5
        var $11=$p; //@line 5136 "xmlparse.c"
        HEAP[$11]=10; //@line 5136 "xmlparse.c"
        var $12=$p; //@line 5136 "xmlparse.c"
        var $13=$12+1; //@line 5136 "xmlparse.c"
        $p=$13; //@line 5136 "xmlparse.c"
        var $14=$s_addr; //@line 5137 "xmlparse.c"
        var $15=$14+1; //@line 5137 "xmlparse.c"
        $s_addr=$15; //@line 5137 "xmlparse.c"
        var $16=$s_addr; //@line 5137 "xmlparse.c"
        var $17=HEAP[$16]; //@line 5137 "xmlparse.c"
        var $18=($17)==10; //@line 5137 "xmlparse.c"
        if ($18) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 5137 "xmlparse.c"
      case 7: // $bb6
        var $19=$s_addr; //@line 5138 "xmlparse.c"
        var $20=$19+1; //@line 5138 "xmlparse.c"
        $s_addr=$20; //@line 5138 "xmlparse.c"
        __label__ = 9; break; //@line 5138 "xmlparse.c"
      case 8: // $bb8
        var $21=$s_addr; //@line 5141 "xmlparse.c"
        var $22=HEAP[$21]; //@line 5141 "xmlparse.c"
        var $23=$p; //@line 5141 "xmlparse.c"
        HEAP[$23]=$22; //@line 5141 "xmlparse.c"
        var $24=$p; //@line 5141 "xmlparse.c"
        var $25=$24+1; //@line 5141 "xmlparse.c"
        $p=$25; //@line 5141 "xmlparse.c"
        var $26=$s_addr; //@line 5141 "xmlparse.c"
        var $27=$26+1; //@line 5141 "xmlparse.c"
        $s_addr=$27; //@line 5141 "xmlparse.c"
        __label__ = 9; break; //@line 5141 "xmlparse.c"
      case 9: // $bb9
        var $28=$s_addr; //@line 5142 "xmlparse.c"
        var $29=HEAP[$28]; //@line 5142 "xmlparse.c"
        var $30=($29)!=0; //@line 5142 "xmlparse.c"
        if ($30) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 5142 "xmlparse.c"
      case 10: // $bb10
        var $31=$p; //@line 5143 "xmlparse.c"
        HEAP[$31]=0; //@line 5143 "xmlparse.c"
        __label__ = 11; break; //@line 5143 "xmlparse.c"
      case 11: // $return
        ;
        return; //@line 5129 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _reportProcessingInstruction($parser, $enc, $start, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr_i;
        var $p_i;
        var $tem_i;
        var $parser_addr;
        var $enc_addr;
        var $start_addr;
        var $end_addr;
        var $retval;
        var $0;
        var $target;
        var $data;
        var $tem;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $start_addr=$start;
        $end_addr=$end;
        var $1=$parser_addr; //@line 5153 "xmlparse.c"
        var $2=$1+64; //@line 5153 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5153 "xmlparse.c"
        var $4=($3)==0; //@line 5153 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 5153 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 5154 "xmlparse.c"
        var $6=$5+80; //@line 5154 "xmlparse.c"
        var $7=HEAP[$6]; //@line 5154 "xmlparse.c"
        var $8=($7)!=0; //@line 5154 "xmlparse.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 5154 "xmlparse.c"
      case 2: // $bb1
        var $9=$parser_addr; //@line 5155 "xmlparse.c"
        var $10=$enc_addr; //@line 5155 "xmlparse.c"
        var $11=$start_addr; //@line 5155 "xmlparse.c"
        var $12=$end_addr; //@line 5155 "xmlparse.c"
        _reportDefault($9, $10, $11, $12); //@line 5155 "xmlparse.c"
        __label__ = 3; break; //@line 5155 "xmlparse.c"
      case 3: // $bb2
        $0=1; //@line 5156 "xmlparse.c"
        __label__ = 13; break; //@line 5156 "xmlparse.c"
      case 4: // $bb3
        var $13=$enc_addr; //@line 5158 "xmlparse.c"
        var $14=$13+64; //@line 5158 "xmlparse.c"
        var $15=HEAP[$14]; //@line 5158 "xmlparse.c"
        var $16=($15) * 2; //@line 5158 "xmlparse.c"
        var $17=$start_addr; //@line 5158 "xmlparse.c"
        var $18=$17+$16; //@line 5158 "xmlparse.c"
        $start_addr=$18; //@line 5158 "xmlparse.c"
        var $19=$enc_addr; //@line 5159 "xmlparse.c"
        var $20=$19+28; //@line 5159 "xmlparse.c"
        var $21=HEAP[$20]; //@line 5159 "xmlparse.c"
        var $22=$enc_addr; //@line 5159 "xmlparse.c"
        var $23=$start_addr; //@line 5159 "xmlparse.c"
        var $24=FUNCTION_TABLE[$21]($22, $23); //@line 5159 "xmlparse.c"
        var $25=$start_addr; //@line 5159 "xmlparse.c"
        var $26=$25+$24; //@line 5159 "xmlparse.c"
        $tem=$26; //@line 5159 "xmlparse.c"
        var $27=$parser_addr; //@line 5160 "xmlparse.c"
        var $28=$27+400; //@line 5160 "xmlparse.c"
        var $29=$enc_addr; //@line 5160 "xmlparse.c"
        var $30=$start_addr; //@line 5160 "xmlparse.c"
        var $31=$tem; //@line 5160 "xmlparse.c"
        var $32=_poolStoreString($28, $29, $30, $31); //@line 5160 "xmlparse.c"
        $target=$32; //@line 5160 "xmlparse.c"
        var $33=$target; //@line 5161 "xmlparse.c"
        var $34=($33)==0; //@line 5161 "xmlparse.c"
        if ($34) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 5161 "xmlparse.c"
      case 5: // $bb4
        $0=0; //@line 5162 "xmlparse.c"
        __label__ = 13; break; //@line 5162 "xmlparse.c"
      case 6: // $bb5
        var $35=$parser_addr; //@line 5163 "xmlparse.c"
        var $36=$35+400; //@line 5163 "xmlparse.c"
        var $37=$36+12; //@line 5163 "xmlparse.c"
        var $38=HEAP[$37]; //@line 5163 "xmlparse.c"
        var $39=$parser_addr; //@line 5163 "xmlparse.c"
        var $40=$39+400; //@line 5163 "xmlparse.c"
        var $41=$40+16; //@line 5163 "xmlparse.c"
        HEAP[$41]=$38; //@line 5163 "xmlparse.c"
        var $42=$enc_addr; //@line 5164 "xmlparse.c"
        var $43=$42+64; //@line 5164 "xmlparse.c"
        var $44=HEAP[$43]; //@line 5164 "xmlparse.c"
        var $45=($44) * -2; //@line 5164 "xmlparse.c"
        var $46=$end_addr; //@line 5164 "xmlparse.c"
        var $47=$46+$45; //@line 5164 "xmlparse.c"
        var $48=$enc_addr; //@line 5164 "xmlparse.c"
        var $49=$48+32; //@line 5164 "xmlparse.c"
        var $50=HEAP[$49]; //@line 5164 "xmlparse.c"
        var $51=$enc_addr; //@line 5164 "xmlparse.c"
        var $52=$tem; //@line 5164 "xmlparse.c"
        var $53=FUNCTION_TABLE[$50]($51, $52); //@line 5164 "xmlparse.c"
        var $54=$parser_addr; //@line 5164 "xmlparse.c"
        var $55=$54+400; //@line 5164 "xmlparse.c"
        var $56=$enc_addr; //@line 5164 "xmlparse.c"
        var $57=_poolStoreString($55, $56, $53, $47); //@line 5164 "xmlparse.c"
        $data=$57; //@line 5164 "xmlparse.c"
        var $58=$data; //@line 5167 "xmlparse.c"
        var $59=($58)==0; //@line 5167 "xmlparse.c"
        if ($59) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 5167 "xmlparse.c"
      case 7: // $bb6
        $0=0; //@line 5168 "xmlparse.c"
        __label__ = 13; break; //@line 5168 "xmlparse.c"
      case 8: // $bb7
        var $60=$data; //@line 5169 "xmlparse.c"
        _normalizeLines($60); //@line 5169 "xmlparse.c"
        var $61=$parser_addr; //@line 5170 "xmlparse.c"
        var $62=$61+64; //@line 5170 "xmlparse.c"
        var $63=HEAP[$62]; //@line 5170 "xmlparse.c"
        var $64=$parser_addr; //@line 5170 "xmlparse.c"
        var $65=$64+4; //@line 5170 "xmlparse.c"
        var $66=HEAP[$65]; //@line 5170 "xmlparse.c"
        var $67=$target; //@line 5170 "xmlparse.c"
        var $68=$data; //@line 5170 "xmlparse.c"
        FUNCTION_TABLE[$63]($66, $67, $68); //@line 5170 "xmlparse.c"
        var $69=$parser_addr; //@line 5171 "xmlparse.c"
        var $70=$69+400; //@line 5171 "xmlparse.c"
        $pool_addr_i=$70;
        var $71=$pool_addr_i; //@line 5979 "xmlparse.c"
        var $72=$71+4; //@line 5979 "xmlparse.c"
        var $73=HEAP[$72]; //@line 5979 "xmlparse.c"
        var $74=($73)==0; //@line 5979 "xmlparse.c"
        var $75=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $76=$75; //@line 5980 "xmlparse.c"
        var $77=HEAP[$76]; //@line 5980 "xmlparse.c"
        if ($74) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 5979 "xmlparse.c"
      case 9: // $bb_i
        var $78=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $79=$78+4; //@line 5980 "xmlparse.c"
        HEAP[$79]=$77; //@line 5980 "xmlparse.c"
        __label__ = 12; break; //@line 5980 "xmlparse.c"
      case 10: // $bb1_i
        $p_i=$77; //@line 5982 "xmlparse.c"
        var $80=($77)!=0; //@line 5983 "xmlparse.c"
        if ($80) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 5983 "xmlparse.c"
      case 11: // $bb2_i
        var $81=$p_i; //@line 5984 "xmlparse.c"
        var $82=$81; //@line 5984 "xmlparse.c"
        var $83=HEAP[$82]; //@line 5984 "xmlparse.c"
        $tem_i=$83; //@line 5984 "xmlparse.c"
        var $84=$pool_addr_i; //@line 5985 "xmlparse.c"
        var $85=$84+4; //@line 5985 "xmlparse.c"
        var $86=HEAP[$85]; //@line 5985 "xmlparse.c"
        var $87=$p_i; //@line 5985 "xmlparse.c"
        var $88=$87; //@line 5985 "xmlparse.c"
        HEAP[$88]=$86; //@line 5985 "xmlparse.c"
        var $89=$pool_addr_i; //@line 5986 "xmlparse.c"
        var $90=$89+4; //@line 5986 "xmlparse.c"
        var $91=$p_i; //@line 5986 "xmlparse.c"
        HEAP[$90]=$91; //@line 5986 "xmlparse.c"
        var $92=$tem_i; //@line 5987 "xmlparse.c"
        $p_i=$92; //@line 5987 "xmlparse.c"
        var $93=($92)!=0; //@line 5983 "xmlparse.c"
        if ($93) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 5983 "xmlparse.c"
      case 12: // $poolClear_exit
        var $94=$pool_addr_i; //@line 5990 "xmlparse.c"
        var $95=$94; //@line 5990 "xmlparse.c"
        HEAP[$95]=0; //@line 5990 "xmlparse.c"
        var $96=$pool_addr_i; //@line 5991 "xmlparse.c"
        var $97=$96+16; //@line 5991 "xmlparse.c"
        HEAP[$97]=0; //@line 5991 "xmlparse.c"
        var $98=$pool_addr_i; //@line 5992 "xmlparse.c"
        var $99=$98+12; //@line 5992 "xmlparse.c"
        HEAP[$99]=0; //@line 5992 "xmlparse.c"
        var $100=$pool_addr_i; //@line 5993 "xmlparse.c"
        var $101=$100+8; //@line 5993 "xmlparse.c"
        HEAP[$101]=0; //@line 5993 "xmlparse.c"
        $0=1; //@line 5172 "xmlparse.c"
        __label__ = 13; break; //@line 5172 "xmlparse.c"
      case 13: // $bb8
        var $102=$0; //@line 5156 "xmlparse.c"
        $retval=$102; //@line 5156 "xmlparse.c"
        var $retval9=$retval; //@line 5156 "xmlparse.c"
        ;
        return $retval9; //@line 5156 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _reportComment($parser, $enc, $start, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr_i;
        var $p_i;
        var $tem_i;
        var $parser_addr;
        var $enc_addr;
        var $start_addr;
        var $end_addr;
        var $retval;
        var $0;
        var $data;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $start_addr=$start;
        $end_addr=$end;
        var $1=$parser_addr; //@line 5180 "xmlparse.c"
        var $2=$1+68; //@line 5180 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5180 "xmlparse.c"
        var $4=($3)==0; //@line 5180 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 5180 "xmlparse.c"
      case 1: // $bb
        var $5=$parser_addr; //@line 5181 "xmlparse.c"
        var $6=$5+80; //@line 5181 "xmlparse.c"
        var $7=HEAP[$6]; //@line 5181 "xmlparse.c"
        var $8=($7)!=0; //@line 5181 "xmlparse.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 5181 "xmlparse.c"
      case 2: // $bb1
        var $9=$parser_addr; //@line 5182 "xmlparse.c"
        var $10=$enc_addr; //@line 5182 "xmlparse.c"
        var $11=$start_addr; //@line 5182 "xmlparse.c"
        var $12=$end_addr; //@line 5182 "xmlparse.c"
        _reportDefault($9, $10, $11, $12); //@line 5182 "xmlparse.c"
        __label__ = 3; break; //@line 5182 "xmlparse.c"
      case 3: // $bb2
        $0=1; //@line 5183 "xmlparse.c"
        __label__ = 11; break; //@line 5183 "xmlparse.c"
      case 4: // $bb3
        var $13=$enc_addr; //@line 5185 "xmlparse.c"
        var $14=$13+64; //@line 5185 "xmlparse.c"
        var $15=HEAP[$14]; //@line 5185 "xmlparse.c"
        var $16=($15) * -3; //@line 5185 "xmlparse.c"
        var $17=$end_addr; //@line 5185 "xmlparse.c"
        var $18=$17+$16; //@line 5185 "xmlparse.c"
        var $19=$enc_addr; //@line 5185 "xmlparse.c"
        var $20=$19+64; //@line 5185 "xmlparse.c"
        var $21=HEAP[$20]; //@line 5185 "xmlparse.c"
        var $22=($21) * 4; //@line 5185 "xmlparse.c"
        var $23=$start_addr; //@line 5185 "xmlparse.c"
        var $24=$23+$22; //@line 5185 "xmlparse.c"
        var $25=$parser_addr; //@line 5185 "xmlparse.c"
        var $26=$25+400; //@line 5185 "xmlparse.c"
        var $27=$enc_addr; //@line 5185 "xmlparse.c"
        var $28=_poolStoreString($26, $27, $24, $18); //@line 5185 "xmlparse.c"
        $data=$28; //@line 5185 "xmlparse.c"
        var $29=$data; //@line 5189 "xmlparse.c"
        var $30=($29)==0; //@line 5189 "xmlparse.c"
        if ($30) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 5189 "xmlparse.c"
      case 5: // $bb4
        $0=0; //@line 5190 "xmlparse.c"
        __label__ = 11; break; //@line 5190 "xmlparse.c"
      case 6: // $bb5
        var $31=$data; //@line 5191 "xmlparse.c"
        _normalizeLines($31); //@line 5191 "xmlparse.c"
        var $32=$parser_addr; //@line 5192 "xmlparse.c"
        var $33=$32+68; //@line 5192 "xmlparse.c"
        var $34=HEAP[$33]; //@line 5192 "xmlparse.c"
        var $35=$parser_addr; //@line 5192 "xmlparse.c"
        var $36=$35+4; //@line 5192 "xmlparse.c"
        var $37=HEAP[$36]; //@line 5192 "xmlparse.c"
        var $38=$data; //@line 5192 "xmlparse.c"
        FUNCTION_TABLE[$34]($37, $38); //@line 5192 "xmlparse.c"
        var $39=$parser_addr; //@line 5193 "xmlparse.c"
        var $40=$39+400; //@line 5193 "xmlparse.c"
        $pool_addr_i=$40;
        var $41=$pool_addr_i; //@line 5979 "xmlparse.c"
        var $42=$41+4; //@line 5979 "xmlparse.c"
        var $43=HEAP[$42]; //@line 5979 "xmlparse.c"
        var $44=($43)==0; //@line 5979 "xmlparse.c"
        var $45=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $46=$45; //@line 5980 "xmlparse.c"
        var $47=HEAP[$46]; //@line 5980 "xmlparse.c"
        if ($44) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 5979 "xmlparse.c"
      case 7: // $bb_i
        var $48=$pool_addr_i; //@line 5980 "xmlparse.c"
        var $49=$48+4; //@line 5980 "xmlparse.c"
        HEAP[$49]=$47; //@line 5980 "xmlparse.c"
        __label__ = 10; break; //@line 5980 "xmlparse.c"
      case 8: // $bb1_i
        $p_i=$47; //@line 5982 "xmlparse.c"
        var $50=($47)!=0; //@line 5983 "xmlparse.c"
        if ($50) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 5983 "xmlparse.c"
      case 9: // $bb2_i
        var $51=$p_i; //@line 5984 "xmlparse.c"
        var $52=$51; //@line 5984 "xmlparse.c"
        var $53=HEAP[$52]; //@line 5984 "xmlparse.c"
        $tem_i=$53; //@line 5984 "xmlparse.c"
        var $54=$pool_addr_i; //@line 5985 "xmlparse.c"
        var $55=$54+4; //@line 5985 "xmlparse.c"
        var $56=HEAP[$55]; //@line 5985 "xmlparse.c"
        var $57=$p_i; //@line 5985 "xmlparse.c"
        var $58=$57; //@line 5985 "xmlparse.c"
        HEAP[$58]=$56; //@line 5985 "xmlparse.c"
        var $59=$pool_addr_i; //@line 5986 "xmlparse.c"
        var $60=$59+4; //@line 5986 "xmlparse.c"
        var $61=$p_i; //@line 5986 "xmlparse.c"
        HEAP[$60]=$61; //@line 5986 "xmlparse.c"
        var $62=$tem_i; //@line 5987 "xmlparse.c"
        $p_i=$62; //@line 5987 "xmlparse.c"
        var $63=($62)!=0; //@line 5983 "xmlparse.c"
        if ($63) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 5983 "xmlparse.c"
      case 10: // $poolClear_exit
        var $64=$pool_addr_i; //@line 5990 "xmlparse.c"
        var $65=$64; //@line 5990 "xmlparse.c"
        HEAP[$65]=0; //@line 5990 "xmlparse.c"
        var $66=$pool_addr_i; //@line 5991 "xmlparse.c"
        var $67=$66+16; //@line 5991 "xmlparse.c"
        HEAP[$67]=0; //@line 5991 "xmlparse.c"
        var $68=$pool_addr_i; //@line 5992 "xmlparse.c"
        var $69=$68+12; //@line 5992 "xmlparse.c"
        HEAP[$69]=0; //@line 5992 "xmlparse.c"
        var $70=$pool_addr_i; //@line 5993 "xmlparse.c"
        var $71=$70+8; //@line 5993 "xmlparse.c"
        HEAP[$71]=0; //@line 5993 "xmlparse.c"
        $0=1; //@line 5194 "xmlparse.c"
        __label__ = 11; break; //@line 5194 "xmlparse.c"
      case 11: // $bb6
        var $72=$0; //@line 5183 "xmlparse.c"
        $retval=$72; //@line 5183 "xmlparse.c"
        var $retval7=$retval; //@line 5183 "xmlparse.c"
        ;
        return $retval7; //@line 5183 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _reportDefault($parser, $enc, $s, $end) {
    var __stackBase__  = STACKTOP; STACKTOP += 8; _memset(__stackBase__, 0, 8);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $s_addr=__stackBase__;
        var $end_addr;
        var $eventPP;
        var $eventEndPP;
        var $dataPtr=__stackBase__+4;
        $parser_addr=$parser;
        $enc_addr=$enc;
        HEAP[$s_addr]=$s;
        $end_addr=$end;
        var $0=$enc_addr; //@line 5201 "xmlparse.c"
        var $1=$0+68; //@line 5201 "xmlparse.c"
        var $2=HEAP[$1]; //@line 5201 "xmlparse.c"
        var $3=($2)==0; //@line 5201 "xmlparse.c"
        var $4=$parser_addr; //@line 5204 "xmlparse.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 5201 "xmlparse.c"
      case 1: // $bb
        var $5=$4+144; //@line 5204 "xmlparse.c"
        var $6=HEAP[$5]; //@line 5204 "xmlparse.c"
        var $7=$enc_addr; //@line 5204 "xmlparse.c"
        var $8=($6)==($7); //@line 5204 "xmlparse.c"
        var $9=$parser_addr; //@line 5205 "xmlparse.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 5204 "xmlparse.c"
      case 2: // $bb1
        var $10=$9+272; //@line 5205 "xmlparse.c"
        $eventPP=$10; //@line 5205 "xmlparse.c"
        var $11=$parser_addr; //@line 5206 "xmlparse.c"
        var $12=$11+276; //@line 5206 "xmlparse.c"
        $eventEndPP=$12; //@line 5206 "xmlparse.c"
        __label__ = 4; break; //@line 5206 "xmlparse.c"
      case 3: // $bb2
        var $13=$9+284; //@line 5209 "xmlparse.c"
        var $14=HEAP[$13]; //@line 5209 "xmlparse.c"
        var $15=$14; //@line 5209 "xmlparse.c"
        $eventPP=$15; //@line 5209 "xmlparse.c"
        var $16=$parser_addr; //@line 5210 "xmlparse.c"
        var $17=$16+284; //@line 5210 "xmlparse.c"
        var $18=HEAP[$17]; //@line 5210 "xmlparse.c"
        var $19=$18+4; //@line 5210 "xmlparse.c"
        $eventEndPP=$19; //@line 5210 "xmlparse.c"
        __label__ = 4; break; //@line 5210 "xmlparse.c"
      case 4: // $bb3
        var $20=$parser_addr; //@line 5213 "xmlparse.c"
        var $21=$20+44; //@line 5213 "xmlparse.c"
        var $22=HEAP[$21]; //@line 5213 "xmlparse.c"
        HEAP[$dataPtr]=$22; //@line 5213 "xmlparse.c"
        var $23=$enc_addr; //@line 5214 "xmlparse.c"
        var $24=$23+56; //@line 5214 "xmlparse.c"
        var $25=HEAP[$24]; //@line 5214 "xmlparse.c"
        var $26=$parser_addr; //@line 5214 "xmlparse.c"
        var $27=$26+48; //@line 5214 "xmlparse.c"
        var $28=HEAP[$27]; //@line 5214 "xmlparse.c"
        var $29=$enc_addr; //@line 5214 "xmlparse.c"
        var $30=$end_addr; //@line 5214 "xmlparse.c"
        FUNCTION_TABLE[$25]($29, $s_addr, $30, $dataPtr, $28); //@line 5214 "xmlparse.c"
        var $31=HEAP[$s_addr]; //@line 5215 "xmlparse.c"
        var $32=$eventEndPP; //@line 5215 "xmlparse.c"
        HEAP[$32]=$31; //@line 5215 "xmlparse.c"
        var $33=$parser_addr; //@line 5216 "xmlparse.c"
        var $34=$33+80; //@line 5216 "xmlparse.c"
        var $35=HEAP[$34]; //@line 5216 "xmlparse.c"
        var $36=HEAP[$dataPtr]; //@line 5216 "xmlparse.c"
        var $37=($36); //@line 5216 "xmlparse.c"
        var $38=$parser_addr; //@line 5216 "xmlparse.c"
        var $39=$38+44; //@line 5216 "xmlparse.c"
        var $40=HEAP[$39]; //@line 5216 "xmlparse.c"
        var $41=($40); //@line 5216 "xmlparse.c"
        var $42=($37) - ($41); //@line 5216 "xmlparse.c"
        var $43=$parser_addr; //@line 5216 "xmlparse.c"
        var $44=$43+44; //@line 5216 "xmlparse.c"
        var $45=HEAP[$44]; //@line 5216 "xmlparse.c"
        var $46=$parser_addr; //@line 5216 "xmlparse.c"
        var $47=$46+4; //@line 5216 "xmlparse.c"
        var $48=HEAP[$47]; //@line 5216 "xmlparse.c"
        FUNCTION_TABLE[$35]($48, $45, $42); //@line 5216 "xmlparse.c"
        var $49=HEAP[$s_addr]; //@line 5217 "xmlparse.c"
        var $50=$eventPP; //@line 5217 "xmlparse.c"
        HEAP[$50]=$49; //@line 5217 "xmlparse.c"
        var $51=HEAP[$s_addr]; //@line 5218 "xmlparse.c"
        var $52=$end_addr; //@line 5218 "xmlparse.c"
        var $53=($51)!=($52); //@line 5218 "xmlparse.c"
        if ($53) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 5218 "xmlparse.c"
      case 5: // $bb5
        var $54=$4+80; //@line 5221 "xmlparse.c"
        var $55=HEAP[$54]; //@line 5221 "xmlparse.c"
        var $56=$end_addr; //@line 5221 "xmlparse.c"
        var $57=($56); //@line 5221 "xmlparse.c"
        var $58=HEAP[$s_addr]; //@line 5221 "xmlparse.c"
        var $59=($58); //@line 5221 "xmlparse.c"
        var $60=($57) - ($59); //@line 5221 "xmlparse.c"
        var $61=HEAP[$s_addr]; //@line 5221 "xmlparse.c"
        var $62=$parser_addr; //@line 5221 "xmlparse.c"
        var $63=$62+4; //@line 5221 "xmlparse.c"
        var $64=HEAP[$63]; //@line 5221 "xmlparse.c"
        FUNCTION_TABLE[$55]($64, $61, $60); //@line 5221 "xmlparse.c"
        __label__ = 6; break; //@line 5221 "xmlparse.c"
      case 6: // $return
        STACKTOP = __stackBase__;
        return; //@line 5222 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _defineAttribute($type, $attId, $isCdata, $isId, $value, $parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $type_addr;
        var $attId_addr;
        var $isCdata_addr;
        var $isId_addr;
        var $value_addr;
        var $parser_addr;
        var $retval;
        var $0;
        var $att;
        var $i;
        var $temp;
        var $count;
        $type_addr=$type;
        $attId_addr=$attId;
        $isCdata_addr=$isCdata;
        $isId_addr=$isId;
        $value_addr=$value;
        $parser_addr=$parser;
        var $1=$value_addr; //@line 5230 "xmlparse.c"
        var $2=($1)!=0; //@line 5230 "xmlparse.c"
        if ($2) { __label__ = 2; break; } else { __label__ = 1; break; } //@line 5230 "xmlparse.c"
      case 1: // $bb
        var $3=$isId_addr; //@line 5230 "xmlparse.c"
        var $4=($3)!=0; //@line 5230 "xmlparse.c"
        if ($4) { __label__ = 2; break; } else { __label__ = 11; break; } //@line 5230 "xmlparse.c"
      case 2: // $bb1
        $i=0; //@line 5234 "xmlparse.c"
        __label__ = 6; break; //@line 5234 "xmlparse.c"
      case 3: // $bb2
        var $5=$type_addr; //@line 5235 "xmlparse.c"
        var $6=$5+20; //@line 5235 "xmlparse.c"
        var $7=HEAP[$6]; //@line 5235 "xmlparse.c"
        var $8=$i; //@line 5235 "xmlparse.c"
        var $9=$7+12*$8; //@line 5235 "xmlparse.c"
        var $10=$9; //@line 5235 "xmlparse.c"
        var $11=HEAP[$10]; //@line 5235 "xmlparse.c"
        var $12=$attId_addr; //@line 5235 "xmlparse.c"
        var $13=($11)==($12); //@line 5235 "xmlparse.c"
        if ($13) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 5235 "xmlparse.c"
      case 4: // $bb3
        $0=1; //@line 5236 "xmlparse.c"
        __label__ = 21; break; //@line 5236 "xmlparse.c"
      case 5: // $bb4
        var $14=$i; //@line 5234 "xmlparse.c"
        var $15=($14) + 1; //@line 5234 "xmlparse.c"
        $i=$15; //@line 5234 "xmlparse.c"
        __label__ = 6; break; //@line 5234 "xmlparse.c"
      case 6: // $bb5
        var $16=$type_addr; //@line 5234 "xmlparse.c"
        var $17=$16+12; //@line 5234 "xmlparse.c"
        var $18=HEAP[$17]; //@line 5234 "xmlparse.c"
        var $19=$i; //@line 5234 "xmlparse.c"
        var $20=($18) > ($19); //@line 5234 "xmlparse.c"
        if ($20) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 5234 "xmlparse.c"
      case 7: // $bb6
        var $21=$isId_addr; //@line 5237 "xmlparse.c"
        var $22=($21)!=0; //@line 5237 "xmlparse.c"
        if ($22) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 5237 "xmlparse.c"
      case 8: // $bb7
        var $23=$type_addr; //@line 5237 "xmlparse.c"
        var $24=$23+8; //@line 5237 "xmlparse.c"
        var $25=HEAP[$24]; //@line 5237 "xmlparse.c"
        var $26=($25)==0; //@line 5237 "xmlparse.c"
        if ($26) { __label__ = 9; break; } else { __label__ = 11; break; } //@line 5237 "xmlparse.c"
      case 9: // $bb8
        var $27=$attId_addr; //@line 5237 "xmlparse.c"
        var $28=$27+9; //@line 5237 "xmlparse.c"
        var $29=HEAP[$28]; //@line 5237 "xmlparse.c"
        var $30=($29)==0; //@line 5237 "xmlparse.c"
        if ($30) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 5237 "xmlparse.c"
      case 10: // $bb9
        var $31=$type_addr; //@line 5238 "xmlparse.c"
        var $32=$31+8; //@line 5238 "xmlparse.c"
        var $33=$attId_addr; //@line 5238 "xmlparse.c"
        HEAP[$32]=$33; //@line 5238 "xmlparse.c"
        __label__ = 11; break; //@line 5238 "xmlparse.c"
      case 11: // $bb10
        var $34=$type_addr; //@line 5240 "xmlparse.c"
        var $35=$34+12; //@line 5240 "xmlparse.c"
        var $36=HEAP[$35]; //@line 5240 "xmlparse.c"
        var $37=$type_addr; //@line 5240 "xmlparse.c"
        var $38=$37+16; //@line 5240 "xmlparse.c"
        var $39=HEAP[$38]; //@line 5240 "xmlparse.c"
        var $40=($36)==($39); //@line 5240 "xmlparse.c"
        if ($40) { __label__ = 12; break; } else { __label__ = 18; break; } //@line 5240 "xmlparse.c"
      case 12: // $bb11
        var $41=$type_addr; //@line 5241 "xmlparse.c"
        var $42=$41+16; //@line 5241 "xmlparse.c"
        var $43=HEAP[$42]; //@line 5241 "xmlparse.c"
        var $44=($43)==0; //@line 5241 "xmlparse.c"
        var $45=$type_addr; //@line 5242 "xmlparse.c"
        var $46=$45+16; //@line 5242 "xmlparse.c"
        if ($44) { __label__ = 13; break; } else { __label__ = 15; break; } //@line 5241 "xmlparse.c"
      case 13: // $bb12
        HEAP[$46]=8; //@line 5242 "xmlparse.c"
        var $47=$parser_addr; //@line 5243 "xmlparse.c"
        var $48=$47+12; //@line 5243 "xmlparse.c"
        var $49=$48; //@line 5243 "xmlparse.c"
        var $50=HEAP[$49]; //@line 5243 "xmlparse.c"
        var $51=$type_addr; //@line 5243 "xmlparse.c"
        var $52=$51+16; //@line 5243 "xmlparse.c"
        var $53=HEAP[$52]; //@line 5243 "xmlparse.c"
        var $54=($53) * 12; //@line 5243 "xmlparse.c"
        var $55=FUNCTION_TABLE[$50]($54); //@line 5243 "xmlparse.c"
        var $56=$55; //@line 5243 "xmlparse.c"
        var $57=$type_addr; //@line 5243 "xmlparse.c"
        var $58=$57+20; //@line 5243 "xmlparse.c"
        HEAP[$58]=$56; //@line 5243 "xmlparse.c"
        var $59=$type_addr; //@line 5245 "xmlparse.c"
        var $60=$59+20; //@line 5245 "xmlparse.c"
        var $61=HEAP[$60]; //@line 5245 "xmlparse.c"
        var $62=($61)==0; //@line 5245 "xmlparse.c"
        if ($62) { __label__ = 14; break; } else { __label__ = 18; break; } //@line 5245 "xmlparse.c"
      case 14: // $bb13
        $0=0; //@line 5246 "xmlparse.c"
        __label__ = 21; break; //@line 5246 "xmlparse.c"
      case 15: // $bb15
        var $63=HEAP[$46]; //@line 5250 "xmlparse.c"
        var $64=($63) * 2; //@line 5250 "xmlparse.c"
        $count=$64; //@line 5250 "xmlparse.c"
        var $65=$parser_addr; //@line 5251 "xmlparse.c"
        var $66=$65+12; //@line 5251 "xmlparse.c"
        var $67=$66+4; //@line 5251 "xmlparse.c"
        var $68=HEAP[$67]; //@line 5251 "xmlparse.c"
        var $69=$count; //@line 5251 "xmlparse.c"
        var $70=($69) * 12; //@line 5251 "xmlparse.c"
        var $71=$type_addr; //@line 5251 "xmlparse.c"
        var $72=$71+20; //@line 5251 "xmlparse.c"
        var $73=HEAP[$72]; //@line 5251 "xmlparse.c"
        var $74=$73; //@line 5251 "xmlparse.c"
        var $75=FUNCTION_TABLE[$68]($74, $70); //@line 5251 "xmlparse.c"
        var $76=$75; //@line 5251 "xmlparse.c"
        $temp=$76; //@line 5251 "xmlparse.c"
        var $77=$temp; //@line 5253 "xmlparse.c"
        var $78=($77)==0; //@line 5253 "xmlparse.c"
        if ($78) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 5253 "xmlparse.c"
      case 16: // $bb16
        $0=0; //@line 5254 "xmlparse.c"
        __label__ = 21; break; //@line 5254 "xmlparse.c"
      case 17: // $bb17
        var $79=$type_addr; //@line 5255 "xmlparse.c"
        var $80=$79+16; //@line 5255 "xmlparse.c"
        var $81=$count; //@line 5255 "xmlparse.c"
        HEAP[$80]=$81; //@line 5255 "xmlparse.c"
        var $82=$type_addr; //@line 5256 "xmlparse.c"
        var $83=$82+20; //@line 5256 "xmlparse.c"
        var $84=$temp; //@line 5256 "xmlparse.c"
        HEAP[$83]=$84; //@line 5256 "xmlparse.c"
        __label__ = 18; break; //@line 5256 "xmlparse.c"
      case 18: // $bb18
        var $85=$type_addr; //@line 5259 "xmlparse.c"
        var $86=$85+20; //@line 5259 "xmlparse.c"
        var $87=HEAP[$86]; //@line 5259 "xmlparse.c"
        var $88=$type_addr; //@line 5259 "xmlparse.c"
        var $89=$88+12; //@line 5259 "xmlparse.c"
        var $90=HEAP[$89]; //@line 5259 "xmlparse.c"
        var $91=$87+12*$90; //@line 5259 "xmlparse.c"
        $att=$91; //@line 5259 "xmlparse.c"
        var $92=$att; //@line 5260 "xmlparse.c"
        var $93=$92; //@line 5260 "xmlparse.c"
        var $94=$attId_addr; //@line 5260 "xmlparse.c"
        HEAP[$93]=$94; //@line 5260 "xmlparse.c"
        var $95=$att; //@line 5261 "xmlparse.c"
        var $96=$95+8; //@line 5261 "xmlparse.c"
        var $97=$value_addr; //@line 5261 "xmlparse.c"
        HEAP[$96]=$97; //@line 5261 "xmlparse.c"
        var $98=$att; //@line 5262 "xmlparse.c"
        var $99=$98+4; //@line 5262 "xmlparse.c"
        var $100=$isCdata_addr; //@line 5262 "xmlparse.c"
        HEAP[$99]=$100; //@line 5262 "xmlparse.c"
        var $101=$isCdata_addr; //@line 5263 "xmlparse.c"
        var $102=($101)==0; //@line 5263 "xmlparse.c"
        if ($102) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 5263 "xmlparse.c"
      case 19: // $bb19
        var $103=$attId_addr; //@line 5264 "xmlparse.c"
        var $104=$103+8; //@line 5264 "xmlparse.c"
        HEAP[$104]=1; //@line 5264 "xmlparse.c"
        __label__ = 20; break; //@line 5264 "xmlparse.c"
      case 20: // $bb20
        var $105=$type_addr; //@line 5265 "xmlparse.c"
        var $106=$105+12; //@line 5265 "xmlparse.c"
        var $107=HEAP[$106]; //@line 5265 "xmlparse.c"
        var $108=($107) + 1; //@line 5265 "xmlparse.c"
        var $109=$type_addr; //@line 5265 "xmlparse.c"
        var $110=$109+12; //@line 5265 "xmlparse.c"
        HEAP[$110]=$108; //@line 5265 "xmlparse.c"
        $0=1; //@line 5266 "xmlparse.c"
        __label__ = 21; break; //@line 5266 "xmlparse.c"
      case 21: // $bb21
        var $111=$0; //@line 5236 "xmlparse.c"
        $retval=$111; //@line 5236 "xmlparse.c"
        var $retval22=$retval; //@line 5236 "xmlparse.c"
        ;
        return $retval22; //@line 5236 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _setElementTypePrefix($parser, $elementType) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $elementType_addr;
        var $retval;
        var $iftmp_255;
        var $0;
        var $iftmp_254;
        var $dtd;
        var $name;
        var $prefix;
        var $s;
        $parser_addr=$parser;
        $elementType_addr=$elementType;
        var $1=$parser_addr; //@line 5272 "xmlparse.c"
        var $2=$1+340; //@line 5272 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5272 "xmlparse.c"
        $dtd=$3; //@line 5272 "xmlparse.c"
        var $4=$elementType_addr; //@line 5274 "xmlparse.c"
        var $5=$4; //@line 5274 "xmlparse.c"
        var $6=HEAP[$5]; //@line 5274 "xmlparse.c"
        $name=$6; //@line 5274 "xmlparse.c"
        __label__ = 18; break; //@line 5274 "xmlparse.c"
      case 1: // $bb
        var $7=$name; //@line 5275 "xmlparse.c"
        var $8=HEAP[$7]; //@line 5275 "xmlparse.c"
        var $9=($8)==58; //@line 5275 "xmlparse.c"
        if ($9) { __label__ = 2; break; } else { __label__ = 17; break; } //@line 5275 "xmlparse.c"
      case 2: // $bb1
        var $10=$elementType_addr; //@line 5278 "xmlparse.c"
        var $11=$10; //@line 5278 "xmlparse.c"
        var $12=HEAP[$11]; //@line 5278 "xmlparse.c"
        $s=$12; //@line 5278 "xmlparse.c"
        __label__ = 7; break; //@line 5278 "xmlparse.c"
      case 3: // $bb2
        if ($40) { __label__ = 6; break; } else { __label__ = 4; break; } //@line 5279 "xmlparse.c"
      case 4: // $bb3
        var $13=$dtd; //@line 5279 "xmlparse.c"
        var $14=$13+80; //@line 5279 "xmlparse.c"
        var $15=_poolGrow($14); //@line 5279 "xmlparse.c"
        var $16=($15)!=0; //@line 5279 "xmlparse.c"
        if ($16) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 5279 "xmlparse.c"
      case 5: // $bb7
        $iftmp_254=1; //@line 5279 "xmlparse.c"
        $0=0; //@line 5280 "xmlparse.c"
        __label__ = 20; break; //@line 5280 "xmlparse.c"
      case 6: // $bb8
        var $17=$dtd; //@line 5279 "xmlparse.c"
        var $18=$17+80; //@line 5279 "xmlparse.c"
        var $19=$18+12; //@line 5279 "xmlparse.c"
        var $20=HEAP[$19]; //@line 5279 "xmlparse.c"
        var $21=$s; //@line 5279 "xmlparse.c"
        var $22=HEAP[$21]; //@line 5279 "xmlparse.c"
        HEAP[$20]=$22; //@line 5279 "xmlparse.c"
        var $23=$20+1; //@line 5279 "xmlparse.c"
        var $24=$dtd; //@line 5279 "xmlparse.c"
        var $25=$24+80; //@line 5279 "xmlparse.c"
        var $26=$25+12; //@line 5279 "xmlparse.c"
        HEAP[$26]=$23; //@line 5279 "xmlparse.c"
        $iftmp_254=0; //@line 5279 "xmlparse.c"
        var $27=$s; //@line 5278 "xmlparse.c"
        var $28=$27+1; //@line 5278 "xmlparse.c"
        $s=$28; //@line 5278 "xmlparse.c"
        __label__ = 7; break; //@line 5278 "xmlparse.c"
      case 7: // $bb9
        var $29=$s; //@line 5278 "xmlparse.c"
        var $30=$name; //@line 5278 "xmlparse.c"
        var $31=($29)!=($30); //@line 5278 "xmlparse.c"
        var $32=$dtd; //@line 5279 "xmlparse.c"
        var $33=$32+80; //@line 5279 "xmlparse.c"
        var $34=$33+12; //@line 5279 "xmlparse.c"
        var $35=HEAP[$34]; //@line 5279 "xmlparse.c"
        var $36=$dtd; //@line 5279 "xmlparse.c"
        var $37=$36+80; //@line 5279 "xmlparse.c"
        var $38=$37+8; //@line 5279 "xmlparse.c"
        var $39=HEAP[$38]; //@line 5279 "xmlparse.c"
        var $40=($35)!=($39); //@line 5279 "xmlparse.c"
        if ($31) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 5278 "xmlparse.c"
      case 8: // $bb10
        if ($40) { __label__ = 11; break; } else { __label__ = 9; break; } //@line 5282 "xmlparse.c"
      case 9: // $bb11
        var $41=$dtd; //@line 5282 "xmlparse.c"
        var $42=$41+80; //@line 5282 "xmlparse.c"
        var $43=_poolGrow($42); //@line 5282 "xmlparse.c"
        var $44=($43)!=0; //@line 5282 "xmlparse.c"
        if ($44) { __label__ = 11; break; } else { __label__ = 10; break; } //@line 5282 "xmlparse.c"
      case 10: // $bb16
        $iftmp_255=1; //@line 5282 "xmlparse.c"
        $0=0; //@line 5283 "xmlparse.c"
        __label__ = 20; break; //@line 5283 "xmlparse.c"
      case 11: // $bb17
        var $45=$dtd; //@line 5282 "xmlparse.c"
        var $46=$45+80; //@line 5282 "xmlparse.c"
        var $47=$46+12; //@line 5282 "xmlparse.c"
        var $48=HEAP[$47]; //@line 5282 "xmlparse.c"
        HEAP[$48]=0; //@line 5282 "xmlparse.c"
        var $49=$48+1; //@line 5282 "xmlparse.c"
        var $50=$dtd; //@line 5282 "xmlparse.c"
        var $51=$50+80; //@line 5282 "xmlparse.c"
        var $52=$51+12; //@line 5282 "xmlparse.c"
        HEAP[$52]=$49; //@line 5282 "xmlparse.c"
        $iftmp_255=0; //@line 5282 "xmlparse.c"
        var $53=$dtd; //@line 5284 "xmlparse.c"
        var $54=$53+80; //@line 5284 "xmlparse.c"
        var $55=$54+16; //@line 5284 "xmlparse.c"
        var $56=HEAP[$55]; //@line 5284 "xmlparse.c"
        var $57=$dtd; //@line 5284 "xmlparse.c"
        var $58=$57+60; //@line 5284 "xmlparse.c"
        var $59=_lookup($58, $56, 8); //@line 5284 "xmlparse.c"
        var $60=$59; //@line 5284 "xmlparse.c"
        $prefix=$60; //@line 5284 "xmlparse.c"
        var $61=($60)==0; //@line 5286 "xmlparse.c"
        if ($61) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 5286 "xmlparse.c"
      case 12: // $bb18
        $0=0; //@line 5287 "xmlparse.c"
        __label__ = 20; break; //@line 5287 "xmlparse.c"
      case 13: // $bb19
        var $62=$prefix; //@line 5288 "xmlparse.c"
        var $63=$62; //@line 5288 "xmlparse.c"
        var $64=HEAP[$63]; //@line 5288 "xmlparse.c"
        var $65=$dtd; //@line 5288 "xmlparse.c"
        var $66=$65+80; //@line 5288 "xmlparse.c"
        var $67=$66+16; //@line 5288 "xmlparse.c"
        var $68=HEAP[$67]; //@line 5288 "xmlparse.c"
        var $69=($64)==($68); //@line 5288 "xmlparse.c"
        var $70=$dtd; //@line 5289 "xmlparse.c"
        var $71=$70+80; //@line 5289 "xmlparse.c"
        if ($69) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 5288 "xmlparse.c"
      case 14: // $bb20
        var $72=$71+12; //@line 5289 "xmlparse.c"
        var $73=HEAP[$72]; //@line 5289 "xmlparse.c"
        var $74=$dtd; //@line 5289 "xmlparse.c"
        var $75=$74+80; //@line 5289 "xmlparse.c"
        var $76=$75+16; //@line 5289 "xmlparse.c"
        HEAP[$76]=$73; //@line 5289 "xmlparse.c"
        __label__ = 16; break; //@line 5289 "xmlparse.c"
      case 15: // $bb21
        var $77=$71+16; //@line 5291 "xmlparse.c"
        var $78=HEAP[$77]; //@line 5291 "xmlparse.c"
        var $79=$dtd; //@line 5291 "xmlparse.c"
        var $80=$79+80; //@line 5291 "xmlparse.c"
        var $81=$80+12; //@line 5291 "xmlparse.c"
        HEAP[$81]=$78; //@line 5291 "xmlparse.c"
        __label__ = 16; break; //@line 5291 "xmlparse.c"
      case 16: // $bb22
        var $82=$elementType_addr; //@line 5292 "xmlparse.c"
        var $83=$82+4; //@line 5292 "xmlparse.c"
        var $84=$prefix; //@line 5292 "xmlparse.c"
        HEAP[$83]=$84; //@line 5292 "xmlparse.c"
        __label__ = 17; break; //@line 5292 "xmlparse.c"
      case 17: // $bb23
        var $85=$name; //@line 5274 "xmlparse.c"
        var $86=$85+1; //@line 5274 "xmlparse.c"
        $name=$86; //@line 5274 "xmlparse.c"
        __label__ = 18; break; //@line 5274 "xmlparse.c"
      case 18: // $bb24
        var $87=$name; //@line 5274 "xmlparse.c"
        var $88=HEAP[$87]; //@line 5274 "xmlparse.c"
        var $89=($88)!=0; //@line 5274 "xmlparse.c"
        if ($89) { __label__ = 1; break; } else { __label__ = 19; break; } //@line 5274 "xmlparse.c"
      case 19: // $bb25
        $0=1; //@line 5296 "xmlparse.c"
        __label__ = 20; break; //@line 5296 "xmlparse.c"
      case 20: // $bb26
        var $90=$0; //@line 5280 "xmlparse.c"
        $retval=$90; //@line 5280 "xmlparse.c"
        var $retval27=$retval; //@line 5280 "xmlparse.c"
        ;
        return $retval27; //@line 5280 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _getAttributeId($parser, $enc, $start, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $start_addr;
        var $end_addr;
        var $retval;
        var $iftmp_258;
        var $iftmp_257;
        var $0;
        var $iftmp_256;
        var $dtd;
        var $id;
        var $name;
        var $i;
        var $j;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $start_addr=$start;
        $end_addr=$end;
        var $1=$parser_addr; //@line 5303 "xmlparse.c"
        var $2=$1+340; //@line 5303 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5303 "xmlparse.c"
        $dtd=$3; //@line 5303 "xmlparse.c"
        var $4=$dtd; //@line 5306 "xmlparse.c"
        var $5=$4+80; //@line 5306 "xmlparse.c"
        var $6=$5+12; //@line 5306 "xmlparse.c"
        var $7=HEAP[$6]; //@line 5306 "xmlparse.c"
        var $8=$dtd; //@line 5306 "xmlparse.c"
        var $9=$8+80; //@line 5306 "xmlparse.c"
        var $10=$9+8; //@line 5306 "xmlparse.c"
        var $11=HEAP[$10]; //@line 5306 "xmlparse.c"
        var $12=($7)!=($11); //@line 5306 "xmlparse.c"
        if ($12) { __label__ = 3; break; } else { __label__ = 1; break; } //@line 5306 "xmlparse.c"
      case 1: // $bb
        var $13=$dtd; //@line 5306 "xmlparse.c"
        var $14=$13+80; //@line 5306 "xmlparse.c"
        var $15=_poolGrow($14); //@line 5306 "xmlparse.c"
        var $16=($15)!=0; //@line 5306 "xmlparse.c"
        if ($16) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 5306 "xmlparse.c"
      case 2: // $bb4
        $iftmp_256=1; //@line 5306 "xmlparse.c"
        $0=0; //@line 5307 "xmlparse.c"
        __label__ = 40; break; //@line 5307 "xmlparse.c"
      case 3: // $bb5
        var $17=$dtd; //@line 5306 "xmlparse.c"
        var $18=$17+80; //@line 5306 "xmlparse.c"
        var $19=$18+12; //@line 5306 "xmlparse.c"
        var $20=HEAP[$19]; //@line 5306 "xmlparse.c"
        HEAP[$20]=0; //@line 5306 "xmlparse.c"
        var $21=$20+1; //@line 5306 "xmlparse.c"
        var $22=$dtd; //@line 5306 "xmlparse.c"
        var $23=$22+80; //@line 5306 "xmlparse.c"
        var $24=$23+12; //@line 5306 "xmlparse.c"
        HEAP[$24]=$21; //@line 5306 "xmlparse.c"
        $iftmp_256=0; //@line 5306 "xmlparse.c"
        var $25=$dtd; //@line 5308 "xmlparse.c"
        var $26=$25+80; //@line 5308 "xmlparse.c"
        var $27=$enc_addr; //@line 5308 "xmlparse.c"
        var $28=$start_addr; //@line 5308 "xmlparse.c"
        var $29=$end_addr; //@line 5308 "xmlparse.c"
        var $30=_poolStoreString($26, $27, $28, $29); //@line 5308 "xmlparse.c"
        $name=$30; //@line 5308 "xmlparse.c"
        var $31=($30)==0; //@line 5309 "xmlparse.c"
        if ($31) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 5309 "xmlparse.c"
      case 4: // $bb6
        $0=0; //@line 5310 "xmlparse.c"
        __label__ = 40; break; //@line 5310 "xmlparse.c"
      case 5: // $bb7
        var $32=$name; //@line 5312 "xmlparse.c"
        var $33=$32+1; //@line 5312 "xmlparse.c"
        $name=$33; //@line 5312 "xmlparse.c"
        var $34=$dtd; //@line 5313 "xmlparse.c"
        var $35=$34+40; //@line 5313 "xmlparse.c"
        var $36=$name; //@line 5313 "xmlparse.c"
        var $37=_lookup($35, $36, 12); //@line 5313 "xmlparse.c"
        var $38=$37; //@line 5313 "xmlparse.c"
        $id=$38; //@line 5313 "xmlparse.c"
        var $39=$id; //@line 5314 "xmlparse.c"
        var $40=($39)==0; //@line 5314 "xmlparse.c"
        if ($40) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 5314 "xmlparse.c"
      case 6: // $bb8
        $0=0; //@line 5315 "xmlparse.c"
        __label__ = 40; break; //@line 5315 "xmlparse.c"
      case 7: // $bb9
        var $41=$id; //@line 5316 "xmlparse.c"
        var $42=$41; //@line 5316 "xmlparse.c"
        var $43=HEAP[$42]; //@line 5316 "xmlparse.c"
        var $44=$name; //@line 5316 "xmlparse.c"
        var $45=($43)!=($44); //@line 5316 "xmlparse.c"
        var $46=$dtd; //@line 5317 "xmlparse.c"
        var $47=$46+80; //@line 5317 "xmlparse.c"
        if ($45) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 5316 "xmlparse.c"
      case 8: // $bb10
        var $48=$47+16; //@line 5317 "xmlparse.c"
        var $49=HEAP[$48]; //@line 5317 "xmlparse.c"
        var $50=$dtd; //@line 5317 "xmlparse.c"
        var $51=$50+80; //@line 5317 "xmlparse.c"
        var $52=$51+12; //@line 5317 "xmlparse.c"
        HEAP[$52]=$49; //@line 5317 "xmlparse.c"
        __label__ = 39; break; //@line 5317 "xmlparse.c"
      case 9: // $bb11
        var $53=$47+12; //@line 5319 "xmlparse.c"
        var $54=HEAP[$53]; //@line 5319 "xmlparse.c"
        var $55=$dtd; //@line 5319 "xmlparse.c"
        var $56=$55+80; //@line 5319 "xmlparse.c"
        var $57=$56+16; //@line 5319 "xmlparse.c"
        HEAP[$57]=$54; //@line 5319 "xmlparse.c"
        var $58=$parser_addr; //@line 5320 "xmlparse.c"
        var $59=$58+232; //@line 5320 "xmlparse.c"
        var $60=HEAP[$59]; //@line 5320 "xmlparse.c"
        var $61=($60)!=0; //@line 5320 "xmlparse.c"
        if ($61) { __label__ = 10; break; } else { __label__ = 39; break; } //@line 5320 "xmlparse.c"
      case 10: // $bb12
        var $62=$name; //@line 5322 "xmlparse.c"
        var $63=$62; //@line 5322 "xmlparse.c"
        var $64=HEAP[$63]; //@line 5322 "xmlparse.c"
        var $65=($64)!=120; //@line 5322 "xmlparse.c"
        if ($65) { __label__ = 21; break; } else { __label__ = 11; break; } //@line 5322 "xmlparse.c"
      case 11: // $bb13
        var $66=$name; //@line 5322 "xmlparse.c"
        var $67=$66+1; //@line 5322 "xmlparse.c"
        var $68=HEAP[$67]; //@line 5322 "xmlparse.c"
        var $69=($68)!=109; //@line 5322 "xmlparse.c"
        if ($69) { __label__ = 21; break; } else { __label__ = 12; break; } //@line 5322 "xmlparse.c"
      case 12: // $bb14
        var $70=$name; //@line 5322 "xmlparse.c"
        var $71=$70+2; //@line 5322 "xmlparse.c"
        var $72=HEAP[$71]; //@line 5322 "xmlparse.c"
        var $73=($72)!=108; //@line 5322 "xmlparse.c"
        if ($73) { __label__ = 21; break; } else { __label__ = 13; break; } //@line 5322 "xmlparse.c"
      case 13: // $bb15
        var $74=$name; //@line 5322 "xmlparse.c"
        var $75=$74+3; //@line 5322 "xmlparse.c"
        var $76=HEAP[$75]; //@line 5322 "xmlparse.c"
        var $77=($76)!=110; //@line 5322 "xmlparse.c"
        if ($77) { __label__ = 21; break; } else { __label__ = 14; break; } //@line 5322 "xmlparse.c"
      case 14: // $bb16
        var $78=$name; //@line 5322 "xmlparse.c"
        var $79=$78+4; //@line 5322 "xmlparse.c"
        var $80=HEAP[$79]; //@line 5322 "xmlparse.c"
        var $81=($80)!=115; //@line 5322 "xmlparse.c"
        if ($81) { __label__ = 21; break; } else { __label__ = 15; break; } //@line 5322 "xmlparse.c"
      case 15: // $bb17
        var $82=$name; //@line 5322 "xmlparse.c"
        var $83=$82+5; //@line 5322 "xmlparse.c"
        var $84=HEAP[$83]; //@line 5322 "xmlparse.c"
        var $85=($84)==0; //@line 5322 "xmlparse.c"
        if ($85) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 5322 "xmlparse.c"
      case 16: // $bb18
        var $86=$name; //@line 5322 "xmlparse.c"
        var $87=$86+5; //@line 5322 "xmlparse.c"
        var $88=HEAP[$87]; //@line 5322 "xmlparse.c"
        var $89=($88)==58; //@line 5322 "xmlparse.c"
        if ($89) { __label__ = 17; break; } else { __label__ = 21; break; } //@line 5322 "xmlparse.c"
      case 17: // $bb19
        var $90=$name; //@line 5328 "xmlparse.c"
        var $91=$90+5; //@line 5328 "xmlparse.c"
        var $92=HEAP[$91]; //@line 5328 "xmlparse.c"
        var $93=($92)==0; //@line 5328 "xmlparse.c"
        if ($93) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 5328 "xmlparse.c"
      case 18: // $bb20
        var $94=$dtd; //@line 5329 "xmlparse.c"
        var $95=$94+132; //@line 5329 "xmlparse.c"
        var $96=$id; //@line 5329 "xmlparse.c"
        var $97=$96+4; //@line 5329 "xmlparse.c"
        HEAP[$97]=$95; //@line 5329 "xmlparse.c"
        __label__ = 20; break; //@line 5329 "xmlparse.c"
      case 19: // $bb21
        var $98=$name; //@line 5331 "xmlparse.c"
        var $99=$98+6; //@line 5331 "xmlparse.c"
        var $100=$dtd; //@line 5331 "xmlparse.c"
        var $101=$100+60; //@line 5331 "xmlparse.c"
        var $102=_lookup($101, $99, 8); //@line 5331 "xmlparse.c"
        var $103=$102; //@line 5331 "xmlparse.c"
        var $104=$id; //@line 5331 "xmlparse.c"
        var $105=$104+4; //@line 5331 "xmlparse.c"
        HEAP[$105]=$103; //@line 5331 "xmlparse.c"
        __label__ = 20; break; //@line 5331 "xmlparse.c"
      case 20: // $bb22
        var $106=$id; //@line 5332 "xmlparse.c"
        var $107=$106+9; //@line 5332 "xmlparse.c"
        HEAP[$107]=1; //@line 5332 "xmlparse.c"
        __label__ = 39; break; //@line 5332 "xmlparse.c"
      case 21: // $bb23
        $i=0; //@line 5336 "xmlparse.c"
        __label__ = 38; break; //@line 5336 "xmlparse.c"
      case 22: // $bb24
        var $108=$name; //@line 5338 "xmlparse.c"
        var $109=$i; //@line 5338 "xmlparse.c"
        var $110=$108+$109; //@line 5338 "xmlparse.c"
        var $111=HEAP[$110]; //@line 5338 "xmlparse.c"
        var $112=($111)==58; //@line 5338 "xmlparse.c"
        if ($112) { __label__ = 23; break; } else { __label__ = 37; break; } //@line 5338 "xmlparse.c"
      case 23: // $bb25
        $j=0; //@line 5340 "xmlparse.c"
        __label__ = 28; break; //@line 5340 "xmlparse.c"
      case 24: // $bb26
        if ($142) { __label__ = 27; break; } else { __label__ = 25; break; } //@line 5341 "xmlparse.c"
      case 25: // $bb27
        var $113=$dtd; //@line 5341 "xmlparse.c"
        var $114=$113+80; //@line 5341 "xmlparse.c"
        var $115=_poolGrow($114); //@line 5341 "xmlparse.c"
        var $116=($115)!=0; //@line 5341 "xmlparse.c"
        if ($116) { __label__ = 27; break; } else { __label__ = 26; break; } //@line 5341 "xmlparse.c"
      case 26: // $bb32
        $iftmp_257=1; //@line 5341 "xmlparse.c"
        $0=0; //@line 5342 "xmlparse.c"
        __label__ = 40; break; //@line 5342 "xmlparse.c"
      case 27: // $bb33
        var $117=$dtd; //@line 5341 "xmlparse.c"
        var $118=$117+80; //@line 5341 "xmlparse.c"
        var $119=$118+12; //@line 5341 "xmlparse.c"
        var $120=HEAP[$119]; //@line 5341 "xmlparse.c"
        var $121=$name; //@line 5341 "xmlparse.c"
        var $122=$j; //@line 5341 "xmlparse.c"
        var $123=$121+$122; //@line 5341 "xmlparse.c"
        var $124=HEAP[$123]; //@line 5341 "xmlparse.c"
        HEAP[$120]=$124; //@line 5341 "xmlparse.c"
        var $125=$120+1; //@line 5341 "xmlparse.c"
        var $126=$dtd; //@line 5341 "xmlparse.c"
        var $127=$126+80; //@line 5341 "xmlparse.c"
        var $128=$127+12; //@line 5341 "xmlparse.c"
        HEAP[$128]=$125; //@line 5341 "xmlparse.c"
        $iftmp_257=0; //@line 5341 "xmlparse.c"
        var $129=$j; //@line 5340 "xmlparse.c"
        var $130=($129) + 1; //@line 5340 "xmlparse.c"
        $j=$130; //@line 5340 "xmlparse.c"
        __label__ = 28; break; //@line 5340 "xmlparse.c"
      case 28: // $bb34
        var $131=$j; //@line 5340 "xmlparse.c"
        var $132=$i; //@line 5340 "xmlparse.c"
        var $133=($131) < ($132); //@line 5340 "xmlparse.c"
        var $134=$dtd; //@line 5341 "xmlparse.c"
        var $135=$134+80; //@line 5341 "xmlparse.c"
        var $136=$135+12; //@line 5341 "xmlparse.c"
        var $137=HEAP[$136]; //@line 5341 "xmlparse.c"
        var $138=$dtd; //@line 5341 "xmlparse.c"
        var $139=$138+80; //@line 5341 "xmlparse.c"
        var $140=$139+8; //@line 5341 "xmlparse.c"
        var $141=HEAP[$140]; //@line 5341 "xmlparse.c"
        var $142=($137)!=($141); //@line 5341 "xmlparse.c"
        if ($133) { __label__ = 24; break; } else { __label__ = 29; break; } //@line 5340 "xmlparse.c"
      case 29: // $bb35
        if ($142) { __label__ = 32; break; } else { __label__ = 30; break; } //@line 5344 "xmlparse.c"
      case 30: // $bb36
        var $143=$dtd; //@line 5344 "xmlparse.c"
        var $144=$143+80; //@line 5344 "xmlparse.c"
        var $145=_poolGrow($144); //@line 5344 "xmlparse.c"
        var $146=($145)!=0; //@line 5344 "xmlparse.c"
        if ($146) { __label__ = 32; break; } else { __label__ = 31; break; } //@line 5344 "xmlparse.c"
      case 31: // $bb41
        $iftmp_258=1; //@line 5344 "xmlparse.c"
        $0=0; //@line 5345 "xmlparse.c"
        __label__ = 40; break; //@line 5345 "xmlparse.c"
      case 32: // $bb42
        var $147=$dtd; //@line 5344 "xmlparse.c"
        var $148=$147+80; //@line 5344 "xmlparse.c"
        var $149=$148+12; //@line 5344 "xmlparse.c"
        var $150=HEAP[$149]; //@line 5344 "xmlparse.c"
        HEAP[$150]=0; //@line 5344 "xmlparse.c"
        var $151=$150+1; //@line 5344 "xmlparse.c"
        var $152=$dtd; //@line 5344 "xmlparse.c"
        var $153=$152+80; //@line 5344 "xmlparse.c"
        var $154=$153+12; //@line 5344 "xmlparse.c"
        HEAP[$154]=$151; //@line 5344 "xmlparse.c"
        $iftmp_258=0; //@line 5344 "xmlparse.c"
        var $155=$dtd; //@line 5346 "xmlparse.c"
        var $156=$155+80; //@line 5346 "xmlparse.c"
        var $157=$156+16; //@line 5346 "xmlparse.c"
        var $158=HEAP[$157]; //@line 5346 "xmlparse.c"
        var $159=$dtd; //@line 5346 "xmlparse.c"
        var $160=$159+60; //@line 5346 "xmlparse.c"
        var $161=_lookup($160, $158, 8); //@line 5346 "xmlparse.c"
        var $162=$161; //@line 5346 "xmlparse.c"
        var $163=$id; //@line 5346 "xmlparse.c"
        var $164=$163+4; //@line 5346 "xmlparse.c"
        HEAP[$164]=$162; //@line 5346 "xmlparse.c"
        var $165=$id; //@line 5348 "xmlparse.c"
        var $166=$165+4; //@line 5348 "xmlparse.c"
        var $167=HEAP[$166]; //@line 5348 "xmlparse.c"
        var $168=($167)==0; //@line 5348 "xmlparse.c"
        if ($168) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 5348 "xmlparse.c"
      case 33: // $bb43
        $0=0; //@line 5349 "xmlparse.c"
        __label__ = 40; break; //@line 5349 "xmlparse.c"
      case 34: // $bb44
        var $169=$id; //@line 5350 "xmlparse.c"
        var $170=$169+4; //@line 5350 "xmlparse.c"
        var $171=HEAP[$170]; //@line 5350 "xmlparse.c"
        var $172=$171; //@line 5350 "xmlparse.c"
        var $173=HEAP[$172]; //@line 5350 "xmlparse.c"
        var $174=$dtd; //@line 5350 "xmlparse.c"
        var $175=$174+80; //@line 5350 "xmlparse.c"
        var $176=$175+16; //@line 5350 "xmlparse.c"
        var $177=HEAP[$176]; //@line 5350 "xmlparse.c"
        var $178=($173)==($177); //@line 5350 "xmlparse.c"
        var $179=$dtd; //@line 5351 "xmlparse.c"
        var $180=$179+80; //@line 5351 "xmlparse.c"
        if ($178) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 5350 "xmlparse.c"
      case 35: // $bb45
        var $181=$180+12; //@line 5351 "xmlparse.c"
        var $182=HEAP[$181]; //@line 5351 "xmlparse.c"
        var $183=$dtd; //@line 5351 "xmlparse.c"
        var $184=$183+80; //@line 5351 "xmlparse.c"
        var $185=$184+16; //@line 5351 "xmlparse.c"
        HEAP[$185]=$182; //@line 5351 "xmlparse.c"
        __label__ = 39; break; //@line 5351 "xmlparse.c"
      case 36: // $bb46
        var $186=$180+16; //@line 5353 "xmlparse.c"
        var $187=HEAP[$186]; //@line 5353 "xmlparse.c"
        var $188=$dtd; //@line 5353 "xmlparse.c"
        var $189=$188+80; //@line 5353 "xmlparse.c"
        var $190=$189+12; //@line 5353 "xmlparse.c"
        HEAP[$190]=$187; //@line 5353 "xmlparse.c"
        __label__ = 39; break; //@line 5353 "xmlparse.c"
      case 37: // $bb48
        var $191=$i; //@line 5336 "xmlparse.c"
        var $192=($191) + 1; //@line 5336 "xmlparse.c"
        $i=$192; //@line 5336 "xmlparse.c"
        __label__ = 38; break; //@line 5336 "xmlparse.c"
      case 38: // $bb49
        var $193=$name; //@line 5336 "xmlparse.c"
        var $194=$i; //@line 5336 "xmlparse.c"
        var $195=$193+$194; //@line 5336 "xmlparse.c"
        var $196=HEAP[$195]; //@line 5336 "xmlparse.c"
        var $197=($196)!=0; //@line 5336 "xmlparse.c"
        if ($197) { __label__ = 22; break; } else { __label__ = 39; break; } //@line 5336 "xmlparse.c"
      case 39: // $bb50
        var $198=$id; //@line 5359 "xmlparse.c"
        $0=$198; //@line 5359 "xmlparse.c"
        __label__ = 40; break; //@line 5359 "xmlparse.c"
      case 40: // $bb51
        var $199=$0; //@line 5307 "xmlparse.c"
        $retval=$199; //@line 5307 "xmlparse.c"
        var $retval52=$retval; //@line 5307 "xmlparse.c"
        ;
        return $retval52; //@line 5307 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _setContext($parser, $context) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $context_addr;
        var $retval;
        var $iftmp_272;
        var $iftmp_271;
        var $iftmp_270;
        var $iftmp_269;
        var $0;
        var $iftmp_268;
        var $dtd;
        var $s;
        var $e;
        var $prefix;
        $parser_addr=$parser;
        $context_addr=$context;
        var $1=$parser_addr; //@line 5436 "xmlparse.c"
        var $2=$1+340; //@line 5436 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5436 "xmlparse.c"
        $dtd=$3; //@line 5436 "xmlparse.c"
        var $4=$context_addr; //@line 5437 "xmlparse.c"
        $s=$4; //@line 5437 "xmlparse.c"
        __label__ = 42; break; //@line 5437 "xmlparse.c"
      case 1: // $bb
        var $5=$s; //@line 5440 "xmlparse.c"
        var $6=HEAP[$5]; //@line 5440 "xmlparse.c"
        var $7=($6)==12; //@line 5440 "xmlparse.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 5440 "xmlparse.c"
      case 2: // $bb1
        var $8=$s; //@line 5440 "xmlparse.c"
        var $9=HEAP[$8]; //@line 5440 "xmlparse.c"
        var $10=($9)==0; //@line 5440 "xmlparse.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 11; break; } //@line 5440 "xmlparse.c"
      case 3: // $bb2
        var $11=$parser_addr; //@line 5442 "xmlparse.c"
        var $12=$11+400; //@line 5442 "xmlparse.c"
        var $13=$12+12; //@line 5442 "xmlparse.c"
        var $14=HEAP[$13]; //@line 5442 "xmlparse.c"
        var $15=$parser_addr; //@line 5442 "xmlparse.c"
        var $16=$15+400; //@line 5442 "xmlparse.c"
        var $17=$16+8; //@line 5442 "xmlparse.c"
        var $18=HEAP[$17]; //@line 5442 "xmlparse.c"
        var $19=($14)!=($18); //@line 5442 "xmlparse.c"
        if ($19) { __label__ = 6; break; } else { __label__ = 4; break; } //@line 5442 "xmlparse.c"
      case 4: // $bb3
        var $20=$parser_addr; //@line 5442 "xmlparse.c"
        var $21=$20+400; //@line 5442 "xmlparse.c"
        var $22=_poolGrow($21); //@line 5442 "xmlparse.c"
        var $23=($22)!=0; //@line 5442 "xmlparse.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 5442 "xmlparse.c"
      case 5: // $bb7
        $iftmp_268=1; //@line 5442 "xmlparse.c"
        $0=0; //@line 5443 "xmlparse.c"
        __label__ = 44; break; //@line 5443 "xmlparse.c"
      case 6: // $bb8
        var $24=$parser_addr; //@line 5442 "xmlparse.c"
        var $25=$24+400; //@line 5442 "xmlparse.c"
        var $26=$25+12; //@line 5442 "xmlparse.c"
        var $27=HEAP[$26]; //@line 5442 "xmlparse.c"
        HEAP[$27]=0; //@line 5442 "xmlparse.c"
        var $28=$27+1; //@line 5442 "xmlparse.c"
        var $29=$parser_addr; //@line 5442 "xmlparse.c"
        var $30=$29+400; //@line 5442 "xmlparse.c"
        var $31=$30+12; //@line 5442 "xmlparse.c"
        HEAP[$31]=$28; //@line 5442 "xmlparse.c"
        $iftmp_268=0; //@line 5442 "xmlparse.c"
        var $32=$parser_addr; //@line 5444 "xmlparse.c"
        var $33=$32+400; //@line 5444 "xmlparse.c"
        var $34=$33+16; //@line 5444 "xmlparse.c"
        var $35=HEAP[$34]; //@line 5444 "xmlparse.c"
        var $36=$dtd; //@line 5444 "xmlparse.c"
        var $37=$36; //@line 5444 "xmlparse.c"
        var $38=_lookup($37, $35, 0); //@line 5444 "xmlparse.c"
        var $39=$38; //@line 5444 "xmlparse.c"
        $e=$39; //@line 5444 "xmlparse.c"
        var $40=($39)!=0; //@line 5445 "xmlparse.c"
        if ($40) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 5445 "xmlparse.c"
      case 7: // $bb9
        var $41=$e; //@line 5446 "xmlparse.c"
        var $42=$41+32; //@line 5446 "xmlparse.c"
        HEAP[$42]=1; //@line 5446 "xmlparse.c"
        __label__ = 8; break; //@line 5446 "xmlparse.c"
      case 8: // $bb10
        var $43=$s; //@line 5447 "xmlparse.c"
        var $44=HEAP[$43]; //@line 5447 "xmlparse.c"
        var $45=($44)!=0; //@line 5447 "xmlparse.c"
        if ($45) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 5447 "xmlparse.c"
      case 9: // $bb11
        var $46=$s; //@line 5448 "xmlparse.c"
        var $47=$46+1; //@line 5448 "xmlparse.c"
        $s=$47; //@line 5448 "xmlparse.c"
        __label__ = 10; break; //@line 5448 "xmlparse.c"
      case 10: // $bb12
        var $48=$s; //@line 5449 "xmlparse.c"
        $context_addr=$48; //@line 5449 "xmlparse.c"
        var $49=$parser_addr; //@line 5450 "xmlparse.c"
        var $50=$49+400; //@line 5450 "xmlparse.c"
        var $51=$50+16; //@line 5450 "xmlparse.c"
        var $52=HEAP[$51]; //@line 5450 "xmlparse.c"
        var $53=$parser_addr; //@line 5450 "xmlparse.c"
        var $54=$53+400; //@line 5450 "xmlparse.c"
        var $55=$54+12; //@line 5450 "xmlparse.c"
        HEAP[$55]=$52; //@line 5450 "xmlparse.c"
        __label__ = 42; break; //@line 5450 "xmlparse.c"
      case 11: // $bb13
        var $56=$s; //@line 5452 "xmlparse.c"
        var $57=HEAP[$56]; //@line 5452 "xmlparse.c"
        var $58=($57)==61; //@line 5452 "xmlparse.c"
        var $59=$parser_addr; //@line 5454 "xmlparse.c"
        var $60=$59+400; //@line 5454 "xmlparse.c"
        var $61=$60+12; //@line 5454 "xmlparse.c"
        var $62=HEAP[$61]; //@line 5454 "xmlparse.c"
        var $63=$parser_addr; //@line 5454 "xmlparse.c"
        var $64=$63+400; //@line 5454 "xmlparse.c"
        if ($58) { __label__ = 12; break; } else { __label__ = 38; break; } //@line 5452 "xmlparse.c"
      case 12: // $bb14
        var $65=$64+16; //@line 5454 "xmlparse.c"
        var $66=HEAP[$65]; //@line 5454 "xmlparse.c"
        var $67=($62)==($66); //@line 5454 "xmlparse.c"
        if ($67) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 5454 "xmlparse.c"
      case 13: // $bb15
        var $68=$dtd; //@line 5455 "xmlparse.c"
        var $69=$68+132; //@line 5455 "xmlparse.c"
        $prefix=$69; //@line 5455 "xmlparse.c"
        __label__ = 23; break; //@line 5455 "xmlparse.c"
      case 14: // $bb16
        var $70=$parser_addr; //@line 5457 "xmlparse.c"
        var $71=$70+400; //@line 5457 "xmlparse.c"
        var $72=$71+12; //@line 5457 "xmlparse.c"
        var $73=HEAP[$72]; //@line 5457 "xmlparse.c"
        var $74=$parser_addr; //@line 5457 "xmlparse.c"
        var $75=$74+400; //@line 5457 "xmlparse.c"
        var $76=$75+8; //@line 5457 "xmlparse.c"
        var $77=HEAP[$76]; //@line 5457 "xmlparse.c"
        var $78=($73)!=($77); //@line 5457 "xmlparse.c"
        if ($78) { __label__ = 17; break; } else { __label__ = 15; break; } //@line 5457 "xmlparse.c"
      case 15: // $bb17
        var $79=$parser_addr; //@line 5457 "xmlparse.c"
        var $80=$79+400; //@line 5457 "xmlparse.c"
        var $81=_poolGrow($80); //@line 5457 "xmlparse.c"
        var $82=($81)!=0; //@line 5457 "xmlparse.c"
        if ($82) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 5457 "xmlparse.c"
      case 16: // $bb22
        $iftmp_269=1; //@line 5457 "xmlparse.c"
        $0=0; //@line 5458 "xmlparse.c"
        __label__ = 44; break; //@line 5458 "xmlparse.c"
      case 17: // $bb23
        var $83=$parser_addr; //@line 5457 "xmlparse.c"
        var $84=$83+400; //@line 5457 "xmlparse.c"
        var $85=$84+12; //@line 5457 "xmlparse.c"
        var $86=HEAP[$85]; //@line 5457 "xmlparse.c"
        HEAP[$86]=0; //@line 5457 "xmlparse.c"
        var $87=$86+1; //@line 5457 "xmlparse.c"
        var $88=$parser_addr; //@line 5457 "xmlparse.c"
        var $89=$88+400; //@line 5457 "xmlparse.c"
        var $90=$89+12; //@line 5457 "xmlparse.c"
        HEAP[$90]=$87; //@line 5457 "xmlparse.c"
        $iftmp_269=0; //@line 5457 "xmlparse.c"
        var $91=$parser_addr; //@line 5459 "xmlparse.c"
        var $92=$91+400; //@line 5459 "xmlparse.c"
        var $93=$92+16; //@line 5459 "xmlparse.c"
        var $94=HEAP[$93]; //@line 5459 "xmlparse.c"
        var $95=$dtd; //@line 5459 "xmlparse.c"
        var $96=$95+60; //@line 5459 "xmlparse.c"
        var $97=_lookup($96, $94, 8); //@line 5459 "xmlparse.c"
        var $98=$97; //@line 5459 "xmlparse.c"
        $prefix=$98; //@line 5459 "xmlparse.c"
        var $99=($98)==0; //@line 5461 "xmlparse.c"
        if ($99) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 5461 "xmlparse.c"
      case 18: // $bb24
        $0=0; //@line 5462 "xmlparse.c"
        __label__ = 44; break; //@line 5462 "xmlparse.c"
      case 19: // $bb25
        var $100=$prefix; //@line 5463 "xmlparse.c"
        var $101=$100; //@line 5463 "xmlparse.c"
        var $102=HEAP[$101]; //@line 5463 "xmlparse.c"
        var $103=$parser_addr; //@line 5463 "xmlparse.c"
        var $104=$103+400; //@line 5463 "xmlparse.c"
        var $105=$104+16; //@line 5463 "xmlparse.c"
        var $106=HEAP[$105]; //@line 5463 "xmlparse.c"
        var $107=($102)==($106); //@line 5463 "xmlparse.c"
        if ($107) { __label__ = 20; break; } else { __label__ = 22; break; } //@line 5463 "xmlparse.c"
      case 20: // $bb26
        var $108=$prefix; //@line 5464 "xmlparse.c"
        var $109=$108; //@line 5464 "xmlparse.c"
        var $110=HEAP[$109]; //@line 5464 "xmlparse.c"
        var $111=$dtd; //@line 5464 "xmlparse.c"
        var $112=$111+80; //@line 5464 "xmlparse.c"
        var $113=_poolCopyString($112, $110); //@line 5464 "xmlparse.c"
        var $114=$prefix; //@line 5464 "xmlparse.c"
        var $115=$114; //@line 5464 "xmlparse.c"
        HEAP[$115]=$113; //@line 5464 "xmlparse.c"
        var $116=$prefix; //@line 5465 "xmlparse.c"
        var $117=$116; //@line 5465 "xmlparse.c"
        var $118=HEAP[$117]; //@line 5465 "xmlparse.c"
        var $119=($118)==0; //@line 5465 "xmlparse.c"
        if ($119) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 5465 "xmlparse.c"
      case 21: // $bb27
        $0=0; //@line 5466 "xmlparse.c"
        __label__ = 44; break; //@line 5466 "xmlparse.c"
      case 22: // $bb28
        var $120=$parser_addr; //@line 5468 "xmlparse.c"
        var $121=$120+400; //@line 5468 "xmlparse.c"
        var $122=$121+16; //@line 5468 "xmlparse.c"
        var $123=HEAP[$122]; //@line 5468 "xmlparse.c"
        var $124=$parser_addr; //@line 5468 "xmlparse.c"
        var $125=$124+400; //@line 5468 "xmlparse.c"
        var $126=$125+12; //@line 5468 "xmlparse.c"
        HEAP[$126]=$123; //@line 5468 "xmlparse.c"
        __label__ = 23; break; //@line 5468 "xmlparse.c"
      case 23: // $bb29
        var $127=$s; //@line 5470 "xmlparse.c"
        var $128=$127+1; //@line 5470 "xmlparse.c"
        $context_addr=$128; //@line 5470 "xmlparse.c"
        __label__ = 28; break; //@line 5470 "xmlparse.c"
      case 24: // $bb30
        var $129=$parser_addr; //@line 5473 "xmlparse.c"
        var $130=$129+400; //@line 5473 "xmlparse.c"
        var $131=$130+12; //@line 5473 "xmlparse.c"
        var $132=HEAP[$131]; //@line 5473 "xmlparse.c"
        var $133=$parser_addr; //@line 5473 "xmlparse.c"
        var $134=$133+400; //@line 5473 "xmlparse.c"
        var $135=$134+8; //@line 5473 "xmlparse.c"
        var $136=HEAP[$135]; //@line 5473 "xmlparse.c"
        var $137=($132)!=($136); //@line 5473 "xmlparse.c"
        if ($137) { __label__ = 27; break; } else { __label__ = 25; break; } //@line 5473 "xmlparse.c"
      case 25: // $bb31
        var $138=$parser_addr; //@line 5473 "xmlparse.c"
        var $139=$138+400; //@line 5473 "xmlparse.c"
        var $140=_poolGrow($139); //@line 5473 "xmlparse.c"
        var $141=($140)!=0; //@line 5473 "xmlparse.c"
        if ($141) { __label__ = 27; break; } else { __label__ = 26; break; } //@line 5473 "xmlparse.c"
      case 26: // $bb36
        $iftmp_270=1; //@line 5473 "xmlparse.c"
        $0=0; //@line 5474 "xmlparse.c"
        __label__ = 44; break; //@line 5474 "xmlparse.c"
      case 27: // $bb37
        var $142=$parser_addr; //@line 5473 "xmlparse.c"
        var $143=$142+400; //@line 5473 "xmlparse.c"
        var $144=$143+12; //@line 5473 "xmlparse.c"
        var $145=HEAP[$144]; //@line 5473 "xmlparse.c"
        var $146=$context_addr; //@line 5473 "xmlparse.c"
        var $147=HEAP[$146]; //@line 5473 "xmlparse.c"
        HEAP[$145]=$147; //@line 5473 "xmlparse.c"
        var $148=$145+1; //@line 5473 "xmlparse.c"
        var $149=$parser_addr; //@line 5473 "xmlparse.c"
        var $150=$149+400; //@line 5473 "xmlparse.c"
        var $151=$150+12; //@line 5473 "xmlparse.c"
        HEAP[$151]=$148; //@line 5473 "xmlparse.c"
        $iftmp_270=0; //@line 5473 "xmlparse.c"
        var $152=$context_addr; //@line 5472 "xmlparse.c"
        var $153=$152+1; //@line 5472 "xmlparse.c"
        $context_addr=$153; //@line 5472 "xmlparse.c"
        __label__ = 28; break; //@line 5472 "xmlparse.c"
      case 28: // $bb38
        var $154=$context_addr; //@line 5471 "xmlparse.c"
        var $155=HEAP[$154]; //@line 5471 "xmlparse.c"
        var $156=($155)==12; //@line 5471 "xmlparse.c"
        if ($156) { __label__ = 30; break; } else { __label__ = 29; break; } //@line 5471 "xmlparse.c"
      case 29: // $bb39
        var $157=$context_addr; //@line 5471 "xmlparse.c"
        var $158=HEAP[$157]; //@line 5471 "xmlparse.c"
        var $159=($158)!=0; //@line 5471 "xmlparse.c"
        if ($159) { __label__ = 24; break; } else { __label__ = 30; break; } //@line 5471 "xmlparse.c"
      case 30: // $bb40
        var $160=$parser_addr; //@line 5475 "xmlparse.c"
        var $161=$160+400; //@line 5475 "xmlparse.c"
        var $162=$161+12; //@line 5475 "xmlparse.c"
        var $163=HEAP[$162]; //@line 5475 "xmlparse.c"
        var $164=$parser_addr; //@line 5475 "xmlparse.c"
        var $165=$164+400; //@line 5475 "xmlparse.c"
        var $166=$165+8; //@line 5475 "xmlparse.c"
        var $167=HEAP[$166]; //@line 5475 "xmlparse.c"
        var $168=($163)!=($167); //@line 5475 "xmlparse.c"
        if ($168) { __label__ = 33; break; } else { __label__ = 31; break; } //@line 5475 "xmlparse.c"
      case 31: // $bb41
        var $169=$parser_addr; //@line 5475 "xmlparse.c"
        var $170=$169+400; //@line 5475 "xmlparse.c"
        var $171=_poolGrow($170); //@line 5475 "xmlparse.c"
        var $172=($171)!=0; //@line 5475 "xmlparse.c"
        if ($172) { __label__ = 33; break; } else { __label__ = 32; break; } //@line 5475 "xmlparse.c"
      case 32: // $bb46
        $iftmp_271=1; //@line 5475 "xmlparse.c"
        $0=0; //@line 5476 "xmlparse.c"
        __label__ = 44; break; //@line 5476 "xmlparse.c"
      case 33: // $bb47
        var $173=$parser_addr; //@line 5475 "xmlparse.c"
        var $174=$173+400; //@line 5475 "xmlparse.c"
        var $175=$174+12; //@line 5475 "xmlparse.c"
        var $176=HEAP[$175]; //@line 5475 "xmlparse.c"
        HEAP[$176]=0; //@line 5475 "xmlparse.c"
        var $177=$176+1; //@line 5475 "xmlparse.c"
        var $178=$parser_addr; //@line 5475 "xmlparse.c"
        var $179=$178+400; //@line 5475 "xmlparse.c"
        var $180=$179+12; //@line 5475 "xmlparse.c"
        HEAP[$180]=$177; //@line 5475 "xmlparse.c"
        $iftmp_271=0; //@line 5475 "xmlparse.c"
        var $181=$parser_addr; //@line 5477 "xmlparse.c"
        var $182=$181+356; //@line 5477 "xmlparse.c"
        var $183=$parser_addr; //@line 5477 "xmlparse.c"
        var $184=$183+400; //@line 5477 "xmlparse.c"
        var $185=$184+16; //@line 5477 "xmlparse.c"
        var $186=HEAP[$185]; //@line 5477 "xmlparse.c"
        var $187=$parser_addr; //@line 5477 "xmlparse.c"
        var $188=$prefix; //@line 5477 "xmlparse.c"
        var $189=_addBinding($187, $188, 0, $186, $182); //@line 5477 "xmlparse.c"
        var $190=($189)!=0; //@line 5477 "xmlparse.c"
        if ($190) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 5477 "xmlparse.c"
      case 34: // $bb48
        $0=0; //@line 5479 "xmlparse.c"
        __label__ = 44; break; //@line 5479 "xmlparse.c"
      case 35: // $bb49
        var $191=$parser_addr; //@line 5480 "xmlparse.c"
        var $192=$191+400; //@line 5480 "xmlparse.c"
        var $193=$192+16; //@line 5480 "xmlparse.c"
        var $194=HEAP[$193]; //@line 5480 "xmlparse.c"
        var $195=$parser_addr; //@line 5480 "xmlparse.c"
        var $196=$195+400; //@line 5480 "xmlparse.c"
        var $197=$196+12; //@line 5480 "xmlparse.c"
        HEAP[$197]=$194; //@line 5480 "xmlparse.c"
        var $198=$context_addr; //@line 5481 "xmlparse.c"
        var $199=HEAP[$198]; //@line 5481 "xmlparse.c"
        var $200=($199)!=0; //@line 5481 "xmlparse.c"
        if ($200) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 5481 "xmlparse.c"
      case 36: // $bb50
        var $201=$context_addr; //@line 5482 "xmlparse.c"
        var $202=$201+1; //@line 5482 "xmlparse.c"
        $context_addr=$202; //@line 5482 "xmlparse.c"
        __label__ = 37; break; //@line 5482 "xmlparse.c"
      case 37: // $bb51
        var $203=$context_addr; //@line 5483 "xmlparse.c"
        $s=$203; //@line 5483 "xmlparse.c"
        __label__ = 42; break; //@line 5483 "xmlparse.c"
      case 38: // $bb52
        var $204=$64+8; //@line 5486 "xmlparse.c"
        var $205=HEAP[$204]; //@line 5486 "xmlparse.c"
        var $206=($62)!=($205); //@line 5486 "xmlparse.c"
        if ($206) { __label__ = 41; break; } else { __label__ = 39; break; } //@line 5486 "xmlparse.c"
      case 39: // $bb53
        var $207=$parser_addr; //@line 5486 "xmlparse.c"
        var $208=$207+400; //@line 5486 "xmlparse.c"
        var $209=_poolGrow($208); //@line 5486 "xmlparse.c"
        var $210=($209)!=0; //@line 5486 "xmlparse.c"
        if ($210) { __label__ = 41; break; } else { __label__ = 40; break; } //@line 5486 "xmlparse.c"
      case 40: // $bb58
        $iftmp_272=1; //@line 5486 "xmlparse.c"
        $0=0; //@line 5487 "xmlparse.c"
        __label__ = 44; break; //@line 5487 "xmlparse.c"
      case 41: // $bb59
        var $211=$parser_addr; //@line 5486 "xmlparse.c"
        var $212=$211+400; //@line 5486 "xmlparse.c"
        var $213=$212+12; //@line 5486 "xmlparse.c"
        var $214=HEAP[$213]; //@line 5486 "xmlparse.c"
        var $215=$s; //@line 5486 "xmlparse.c"
        var $216=HEAP[$215]; //@line 5486 "xmlparse.c"
        HEAP[$214]=$216; //@line 5486 "xmlparse.c"
        var $217=$214+1; //@line 5486 "xmlparse.c"
        var $218=$parser_addr; //@line 5486 "xmlparse.c"
        var $219=$218+400; //@line 5486 "xmlparse.c"
        var $220=$219+12; //@line 5486 "xmlparse.c"
        HEAP[$220]=$217; //@line 5486 "xmlparse.c"
        $iftmp_272=0; //@line 5486 "xmlparse.c"
        var $221=$s; //@line 5488 "xmlparse.c"
        var $222=$221+1; //@line 5488 "xmlparse.c"
        $s=$222; //@line 5488 "xmlparse.c"
        __label__ = 42; break; //@line 5488 "xmlparse.c"
      case 42: // $bb60
        var $223=$context_addr; //@line 5439 "xmlparse.c"
        var $224=HEAP[$223]; //@line 5439 "xmlparse.c"
        var $225=($224)!=0; //@line 5439 "xmlparse.c"
        if ($225) { __label__ = 1; break; } else { __label__ = 43; break; } //@line 5439 "xmlparse.c"
      case 43: // $bb61
        $0=1; //@line 5491 "xmlparse.c"
        __label__ = 44; break; //@line 5491 "xmlparse.c"
      case 44: // $bb62
        var $226=$0; //@line 5443 "xmlparse.c"
        $retval=$226; //@line 5443 "xmlparse.c"
        var $retval63=$retval; //@line 5443 "xmlparse.c"
        var $retval6364=((($retval63)) & 255); //@line 5443 "xmlparse.c"
        ;
        return $retval6364; //@line 5443 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normalizePublicId($publicId) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $publicId_addr;
        var $p;
        var $s;
        $publicId_addr=$publicId;
        var $0=$publicId_addr; //@line 5497 "xmlparse.c"
        $p=$0; //@line 5497 "xmlparse.c"
        var $1=$publicId_addr; //@line 5499 "xmlparse.c"
        $s=$1; //@line 5499 "xmlparse.c"
        var $2=$s; //@line 5499 "xmlparse.c"
        var $3=HEAP[$2]; //@line 5499 "xmlparse.c"
        var $4=($3)!=0; //@line 5499 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 7; break; } //@line 5499 "xmlparse.c"
      case 1: // $bb
        var $5=$s; //@line 5500 "xmlparse.c"
        var $6=HEAP[$5]; //@line 5500 "xmlparse.c"
        var $7=($6); //@line 5500 "xmlparse.c"
        if ($7 == 10) {
          __label__ = 2; break;
        }
        else if ($7 == 13) {
          __label__ = 2; break;
        }
        else if ($7 == 32) {
          __label__ = 2; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 2: // $bb1
        var $8=$p; //@line 5504 "xmlparse.c"
        var $9=$publicId_addr; //@line 5504 "xmlparse.c"
        var $10=($8)!=($9); //@line 5504 "xmlparse.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 5504 "xmlparse.c"
      case 3: // $bb2
        var $11=$p; //@line 5504 "xmlparse.c"
        var $12=$11+-1; //@line 5504 "xmlparse.c"
        var $13=HEAP[$12]; //@line 5504 "xmlparse.c"
        var $14=($13)!=32; //@line 5504 "xmlparse.c"
        if ($14) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 5504 "xmlparse.c"
      case 4: // $bb3
        var $15=$p; //@line 5505 "xmlparse.c"
        HEAP[$15]=32; //@line 5505 "xmlparse.c"
        var $16=$p; //@line 5505 "xmlparse.c"
        var $17=$16+1; //@line 5505 "xmlparse.c"
        $p=$17; //@line 5505 "xmlparse.c"
        __label__ = 6; break; //@line 5505 "xmlparse.c"
      case 5: // $bb5
        var $18=$s; //@line 5508 "xmlparse.c"
        var $19=HEAP[$18]; //@line 5508 "xmlparse.c"
        var $20=$p; //@line 5508 "xmlparse.c"
        HEAP[$20]=$19; //@line 5508 "xmlparse.c"
        var $21=$p; //@line 5508 "xmlparse.c"
        var $22=$21+1; //@line 5508 "xmlparse.c"
        $p=$22; //@line 5508 "xmlparse.c"
        __label__ = 6; break; //@line 5508 "xmlparse.c"
      case 6: // $bb6
        var $23=$s; //@line 5499 "xmlparse.c"
        var $24=$23+1; //@line 5499 "xmlparse.c"
        $s=$24; //@line 5499 "xmlparse.c"
        var $25=$s; //@line 5499 "xmlparse.c"
        var $26=HEAP[$25]; //@line 5499 "xmlparse.c"
        var $27=($26)!=0; //@line 5499 "xmlparse.c"
        if ($27) { __label__ = 1; break; } else { __label__ = 7; break; } //@line 5499 "xmlparse.c"
      case 7: // $bb8
        var $28=$p; //@line 5511 "xmlparse.c"
        var $29=$publicId_addr; //@line 5511 "xmlparse.c"
        var $30=($28)!=($29); //@line 5511 "xmlparse.c"
        if ($30) { __label__ = 8; break; } else { __label__ = 10; break; } //@line 5511 "xmlparse.c"
      case 8: // $bb9
        var $31=$p; //@line 5511 "xmlparse.c"
        var $32=$31+-1; //@line 5511 "xmlparse.c"
        var $33=HEAP[$32]; //@line 5511 "xmlparse.c"
        var $34=($33)==32; //@line 5511 "xmlparse.c"
        if ($34) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 5511 "xmlparse.c"
      case 9: // $bb10
        var $35=$p; //@line 5512 "xmlparse.c"
        var $36=$35+-1; //@line 5512 "xmlparse.c"
        $p=$36; //@line 5512 "xmlparse.c"
        __label__ = 10; break; //@line 5512 "xmlparse.c"
      case 10: // $bb11
        var $37=$p; //@line 5513 "xmlparse.c"
        HEAP[$37]=0; //@line 5513 "xmlparse.c"
        ;
        return; //@line 5514 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _lookup($table, $name, $createSize) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $s_addr_i10;
        var $retval_i11;
        var $0;
        var $h_i12;
        var $s1_addr_i;
        var $s2_addr_i;
        var $retval_i8;
        var $1;
        var $s_addr_i1;
        var $retval_i2;
        var $2;
        var $h_i3;
        var $s_addr_i;
        var $retval_i;
        var $3;
        var $h_i;
        var $table_addr;
        var $name_addr;
        var $createSize_addr;
        var $retval;
        var $iftmp_276;
        var $iftmp_275;
        var $iftmp_274;
        var $4;
        var $i;
        var $tsize;
        var $h;
        var $mask;
        var $step;
        var $newPower;
        var $newSize;
        var $newMask;
        var $tsize19;
        var $newV;
        var $newHash;
        var $j;
        $table_addr=$table;
        $name_addr=$name;
        $createSize_addr=$createSize;
        var $5=$table_addr; //@line 5842 "xmlparse.c"
        var $6=$5+8; //@line 5842 "xmlparse.c"
        var $7=HEAP[$6]; //@line 5842 "xmlparse.c"
        var $8=($7)==0; //@line 5842 "xmlparse.c"
        if ($8) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 5842 "xmlparse.c"
      case 1: // $bb
        var $9=$createSize_addr; //@line 5844 "xmlparse.c"
        var $10=($9)==0; //@line 5844 "xmlparse.c"
        if ($10) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 5844 "xmlparse.c"
      case 2: // $bb1
        $4=0; //@line 5845 "xmlparse.c"
        __label__ = 53; break; //@line 5845 "xmlparse.c"
      case 3: // $bb2
        var $11=$table_addr; //@line 5846 "xmlparse.c"
        var $12=$11+4; //@line 5846 "xmlparse.c"
        HEAP[$12]=6; //@line 5846 "xmlparse.c"
        var $13=$table_addr; //@line 5848 "xmlparse.c"
        var $14=$13+8; //@line 5848 "xmlparse.c"
        HEAP[$14]=64; //@line 5848 "xmlparse.c"
        var $15=$table_addr; //@line 5849 "xmlparse.c"
        var $16=$15+8; //@line 5849 "xmlparse.c"
        var $17=HEAP[$16]; //@line 5849 "xmlparse.c"
        var $18=($17) * 4; //@line 5849 "xmlparse.c"
        $tsize=$18; //@line 5849 "xmlparse.c"
        var $19=$table_addr; //@line 5850 "xmlparse.c"
        var $20=$19+16; //@line 5850 "xmlparse.c"
        var $21=HEAP[$20]; //@line 5850 "xmlparse.c"
        var $22=$21; //@line 5850 "xmlparse.c"
        var $23=HEAP[$22]; //@line 5850 "xmlparse.c"
        var $24=$tsize; //@line 5850 "xmlparse.c"
        var $25=FUNCTION_TABLE[$23]($24); //@line 5850 "xmlparse.c"
        var $26=$25; //@line 5850 "xmlparse.c"
        var $27=$table_addr; //@line 5850 "xmlparse.c"
        var $28=$27; //@line 5850 "xmlparse.c"
        HEAP[$28]=$26; //@line 5850 "xmlparse.c"
        var $29=$table_addr; //@line 5851 "xmlparse.c"
        var $30=$29; //@line 5851 "xmlparse.c"
        var $31=HEAP[$30]; //@line 5851 "xmlparse.c"
        var $32=($31)==0; //@line 5851 "xmlparse.c"
        var $33=$table_addr; //@line 5852 "xmlparse.c"
        if ($32) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 5851 "xmlparse.c"
      case 4: // $bb3
        var $34=$33+8; //@line 5852 "xmlparse.c"
        HEAP[$34]=0; //@line 5852 "xmlparse.c"
        $4=0; //@line 5853 "xmlparse.c"
        __label__ = 53; break; //@line 5853 "xmlparse.c"
      case 5: // $bb4
        var $35=$33; //@line 5855 "xmlparse.c"
        var $36=HEAP[$35]; //@line 5855 "xmlparse.c"
        var $37=$tsize; //@line 5855 "xmlparse.c"
        var $38=$36; //@line 5855 "xmlparse.c"
        _llvm_memset_p0i8_i32($38, 0, $37, 1, 0); //@line 5855 "xmlparse.c"
        var $39=$name_addr; //@line 5856 "xmlparse.c"
        $s_addr_i=$39;
        $h_i=0; //@line 5832 "xmlparse.c"
        var $40=$s_addr_i; //@line 5833 "xmlparse.c"
        var $41=HEAP[$40]; //@line 5833 "xmlparse.c"
        var $42=($41)!=0; //@line 5833 "xmlparse.c"
        var $43=$h_i; //@line 5834 "xmlparse.c"
        if ($42) { __lastLabel__ = 5; __label__ = 6; break; } else { __lastLabel__ = 5; __label__ = 7; break; } //@line 5833 "xmlparse.c"
      case 6: // $bb_i
        var $44=__lastLabel__ == 6 ? $55 : ($43);
        var $45=($44) * 1000003; //@line 5834 "xmlparse.c"
        var $46=$s_addr_i; //@line 5834 "xmlparse.c"
        var $47=HEAP[$46]; //@line 5834 "xmlparse.c"
        var $48=($47); //@line 5834 "xmlparse.c"
        var $49=($48) ^ ($45); //@line 5834 "xmlparse.c"
        $h_i=$49; //@line 5834 "xmlparse.c"
        var $50=$s_addr_i; //@line 5834 "xmlparse.c"
        var $51=$50+1; //@line 5834 "xmlparse.c"
        $s_addr_i=$51; //@line 5834 "xmlparse.c"
        var $52=$s_addr_i; //@line 5833 "xmlparse.c"
        var $53=HEAP[$52]; //@line 5833 "xmlparse.c"
        var $54=($53)!=0; //@line 5833 "xmlparse.c"
        var $55=$h_i; //@line 5834 "xmlparse.c"
        if ($54) { __lastLabel__ = 6; __label__ = 6; break; } else { __lastLabel__ = 6; __label__ = 7; break; } //@line 5833 "xmlparse.c"
      case 7: // $hash_exit
        var $_lcssa_i=__lastLabel__ == 5 ? $43 : ($55);
        $3=$_lcssa_i; //@line 5835 "xmlparse.c"
        var $56=$3; //@line 5835 "xmlparse.c"
        $retval_i=$56; //@line 5835 "xmlparse.c"
        var $retval3_i=$retval_i; //@line 5835 "xmlparse.c"
        var $57=$table_addr; //@line 5856 "xmlparse.c"
        var $58=$57+8; //@line 5856 "xmlparse.c"
        var $59=HEAP[$58]; //@line 5856 "xmlparse.c"
        var $60=($59) - 1; //@line 5856 "xmlparse.c"
        var $61=($60) & ($retval3_i); //@line 5856 "xmlparse.c"
        $i=$61; //@line 5856 "xmlparse.c"
        __label__ = 50; break; //@line 5856 "xmlparse.c"
      case 8: // $bb5
        var $62=$name_addr; //@line 5859 "xmlparse.c"
        $s_addr_i1=$62;
        $h_i3=0; //@line 5832 "xmlparse.c"
        var $63=$s_addr_i1; //@line 5833 "xmlparse.c"
        var $64=HEAP[$63]; //@line 5833 "xmlparse.c"
        var $65=($64)!=0; //@line 5833 "xmlparse.c"
        var $66=$h_i3; //@line 5834 "xmlparse.c"
        if ($65) { __lastLabel__ = 8; __label__ = 9; break; } else { __lastLabel__ = 8; __label__ = 10; break; } //@line 5833 "xmlparse.c"
      case 9: // $bb_i4
        var $67=__lastLabel__ == 9 ? $78 : ($66);
        var $68=($67) * 1000003; //@line 5834 "xmlparse.c"
        var $69=$s_addr_i1; //@line 5834 "xmlparse.c"
        var $70=HEAP[$69]; //@line 5834 "xmlparse.c"
        var $71=($70); //@line 5834 "xmlparse.c"
        var $72=($71) ^ ($68); //@line 5834 "xmlparse.c"
        $h_i3=$72; //@line 5834 "xmlparse.c"
        var $73=$s_addr_i1; //@line 5834 "xmlparse.c"
        var $74=$73+1; //@line 5834 "xmlparse.c"
        $s_addr_i1=$74; //@line 5834 "xmlparse.c"
        var $75=$s_addr_i1; //@line 5833 "xmlparse.c"
        var $76=HEAP[$75]; //@line 5833 "xmlparse.c"
        var $77=($76)!=0; //@line 5833 "xmlparse.c"
        var $78=$h_i3; //@line 5834 "xmlparse.c"
        if ($77) { __lastLabel__ = 9; __label__ = 9; break; } else { __lastLabel__ = 9; __label__ = 10; break; } //@line 5833 "xmlparse.c"
      case 10: // $hash_exit7
        var $_lcssa_i5=__lastLabel__ == 8 ? $66 : ($78);
        $2=$_lcssa_i5; //@line 5835 "xmlparse.c"
        var $79=$2; //@line 5835 "xmlparse.c"
        $retval_i2=$79; //@line 5835 "xmlparse.c"
        var $retval3_i6=$retval_i2; //@line 5835 "xmlparse.c"
        $h=$retval3_i6; //@line 5859 "xmlparse.c"
        var $80=$table_addr; //@line 5860 "xmlparse.c"
        var $81=$80+8; //@line 5860 "xmlparse.c"
        var $82=HEAP[$81]; //@line 5860 "xmlparse.c"
        var $83=($82) - 1; //@line 5860 "xmlparse.c"
        $mask=$83; //@line 5860 "xmlparse.c"
        $step=0; //@line 5861 "xmlparse.c"
        var $84=$h; //@line 5862 "xmlparse.c"
        var $85=$mask; //@line 5862 "xmlparse.c"
        var $86=($85) & ($84); //@line 5862 "xmlparse.c"
        $i=$86; //@line 5862 "xmlparse.c"
        __label__ = 24; break; //@line 5862 "xmlparse.c"
      case 11: // $bb6
        var $87=$table_addr; //@line 5864 "xmlparse.c"
        var $88=$87; //@line 5864 "xmlparse.c"
        var $89=HEAP[$88]; //@line 5864 "xmlparse.c"
        var $90=$i; //@line 5864 "xmlparse.c"
        var $91=$89+4*$90; //@line 5864 "xmlparse.c"
        var $92=HEAP[$91]; //@line 5864 "xmlparse.c"
        var $93=$92; //@line 5864 "xmlparse.c"
        var $94=HEAP[$93]; //@line 5864 "xmlparse.c"
        var $95=$name_addr; //@line 5864 "xmlparse.c"
        $s1_addr_i=$95;
        $s2_addr_i=$94;
        __label__ = 15; break; //@line 5823 "xmlparse.c"
      case 12: // $bb_i9
        var $96=$s1_addr_i; //@line 5824 "xmlparse.c"
        var $97=HEAP[$96]; //@line 5824 "xmlparse.c"
        var $98=($97)==0; //@line 5824 "xmlparse.c"
        if ($98) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 5824 "xmlparse.c"
      case 13: // $bb1_i
        $1=1; //@line 5825 "xmlparse.c"
        __label__ = 17; break; //@line 5825 "xmlparse.c"
      case 14: // $bb2_i
        var $99=$s1_addr_i; //@line 5823 "xmlparse.c"
        var $100=$99+1; //@line 5823 "xmlparse.c"
        $s1_addr_i=$100; //@line 5823 "xmlparse.c"
        var $101=$s2_addr_i; //@line 5823 "xmlparse.c"
        var $102=$101+1; //@line 5823 "xmlparse.c"
        $s2_addr_i=$102; //@line 5823 "xmlparse.c"
        __label__ = 15; break; //@line 5823 "xmlparse.c"
      case 15: // $bb3_i
        var $103=$s1_addr_i; //@line 5823 "xmlparse.c"
        var $104=HEAP[$103]; //@line 5823 "xmlparse.c"
        var $105=$s2_addr_i; //@line 5823 "xmlparse.c"
        var $106=HEAP[$105]; //@line 5823 "xmlparse.c"
        var $107=($104)==($106); //@line 5823 "xmlparse.c"
        if ($107) { __label__ = 12; break; } else { __label__ = 16; break; } //@line 5823 "xmlparse.c"
      case 16: // $bb4_i
        $1=0; //@line 5826 "xmlparse.c"
        __label__ = 17; break; //@line 5826 "xmlparse.c"
      case 17: // $keyeq_exit
        var $108=$1; //@line 5825 "xmlparse.c"
        $retval_i8=$108; //@line 5825 "xmlparse.c"
        var $retval6_i=$retval_i8; //@line 5825 "xmlparse.c"
        var $retval67_i=((($retval6_i)) & 255); //@line 5825 "xmlparse.c"
        var $109=($retval67_i)!=0; //@line 5864 "xmlparse.c"
        if ($109) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 5864 "xmlparse.c"
      case 18: // $bb7
        var $110=$table_addr; //@line 5865 "xmlparse.c"
        var $111=$110; //@line 5865 "xmlparse.c"
        var $112=HEAP[$111]; //@line 5865 "xmlparse.c"
        var $113=$i; //@line 5865 "xmlparse.c"
        var $114=$112+4*$113; //@line 5865 "xmlparse.c"
        var $115=HEAP[$114]; //@line 5865 "xmlparse.c"
        $4=$115; //@line 5865 "xmlparse.c"
        __label__ = 53; break; //@line 5865 "xmlparse.c"
      case 19: // $bb8
        var $116=$step; //@line 5866 "xmlparse.c"
        var $117=($116)==0; //@line 5866 "xmlparse.c"
        if ($117) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 5866 "xmlparse.c"
      case 20: // $bb9
        var $118=$mask; //@line 5867 "xmlparse.c"
        var $not=($118) ^ -1; //@line 5867 "xmlparse.c"
        var $119=$h; //@line 5867 "xmlparse.c"
        var $120=($119) & ($not); //@line 5867 "xmlparse.c"
        var $121=$table_addr; //@line 5867 "xmlparse.c"
        var $122=$121+4; //@line 5867 "xmlparse.c"
        var $123=HEAP[$122]; //@line 5867 "xmlparse.c"
        var $124=($123); //@line 5867 "xmlparse.c"
        var $125=($124) - 1; //@line 5867 "xmlparse.c"
        var $126=($120) >>> ($125); //@line 5867 "xmlparse.c"
        var $127=((($126)) & 255); //@line 5867 "xmlparse.c"
        var $128=$mask; //@line 5867 "xmlparse.c"
        var $129=($128) >>> 2; //@line 5867 "xmlparse.c"
        var $130=((($129)) & 255); //@line 5867 "xmlparse.c"
        var $131=($127) & ($130); //@line 5867 "xmlparse.c"
        var $132=($131) | 1; //@line 5867 "xmlparse.c"
        $step=$132; //@line 5867 "xmlparse.c"
        __label__ = 21; break; //@line 5867 "xmlparse.c"
      case 21: // $bb11
        var $133=$step; //@line 5868 "xmlparse.c"
        var $134=($133); //@line 5868 "xmlparse.c"
        var $135=$i; //@line 5868 "xmlparse.c"
        var $136=($134) > ($135); //@line 5868 "xmlparse.c"
        if ($136) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 5868 "xmlparse.c"
      case 22: // $bb12
        var $137=$table_addr; //@line 5868 "xmlparse.c"
        var $138=$137+8; //@line 5868 "xmlparse.c"
        var $139=HEAP[$138]; //@line 5868 "xmlparse.c"
        var $140=$step; //@line 5868 "xmlparse.c"
        var $141=($140); //@line 5868 "xmlparse.c"
        var $_neg=0 - ($141);
        var $142=$i; //@line 5868 "xmlparse.c"
        var $143=($142) + ($139);
        var $144=($143) + ($_neg); //@line 5868 "xmlparse.c"
        $i=$144; //@line 5868 "xmlparse.c"
        var $145=$i; //@line 5868 "xmlparse.c"
        $iftmp_274=$145; //@line 5868 "xmlparse.c"
        __label__ = 24; break; //@line 5868 "xmlparse.c"
      case 23: // $bb13
        var $146=$step; //@line 5868 "xmlparse.c"
        var $147=($146); //@line 5868 "xmlparse.c"
        var $148=$i; //@line 5868 "xmlparse.c"
        var $149=($148) - ($147); //@line 5868 "xmlparse.c"
        $i=$149; //@line 5868 "xmlparse.c"
        var $150=$i; //@line 5868 "xmlparse.c"
        $iftmp_274=$150; //@line 5868 "xmlparse.c"
        __label__ = 24; break; //@line 5868 "xmlparse.c"
      case 24: // $bb14
        var $151=$table_addr; //@line 5863 "xmlparse.c"
        var $152=$151; //@line 5863 "xmlparse.c"
        var $153=HEAP[$152]; //@line 5863 "xmlparse.c"
        var $154=$i; //@line 5863 "xmlparse.c"
        var $155=$153+4*$154; //@line 5863 "xmlparse.c"
        var $156=HEAP[$155]; //@line 5863 "xmlparse.c"
        var $157=($156)!=0; //@line 5863 "xmlparse.c"
        if ($157) { __label__ = 11; break; } else { __label__ = 25; break; } //@line 5863 "xmlparse.c"
      case 25: // $bb15
        var $158=$createSize_addr; //@line 5870 "xmlparse.c"
        var $159=($158)==0; //@line 5870 "xmlparse.c"
        if ($159) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 5870 "xmlparse.c"
      case 26: // $bb16
        $4=0; //@line 5871 "xmlparse.c"
        __label__ = 53; break; //@line 5871 "xmlparse.c"
      case 27: // $bb17
        var $160=$table_addr; //@line 5874 "xmlparse.c"
        var $161=$160+12; //@line 5874 "xmlparse.c"
        var $162=HEAP[$161]; //@line 5874 "xmlparse.c"
        var $163=$table_addr; //@line 5874 "xmlparse.c"
        var $164=$163+4; //@line 5874 "xmlparse.c"
        var $165=HEAP[$164]; //@line 5874 "xmlparse.c"
        var $166=($165); //@line 5874 "xmlparse.c"
        var $167=($166) - 1; //@line 5874 "xmlparse.c"
        var $168=($162) >>> ($167); //@line 5874 "xmlparse.c"
        var $169=($168)!=0; //@line 5874 "xmlparse.c"
        if ($169) { __label__ = 28; break; } else { __label__ = 50; break; } //@line 5874 "xmlparse.c"
      case 28: // $bb18
        var $170=$table_addr; //@line 5875 "xmlparse.c"
        var $171=$170+4; //@line 5875 "xmlparse.c"
        var $172=HEAP[$171]; //@line 5875 "xmlparse.c"
        var $173=($172) + 1; //@line 5875 "xmlparse.c"
        $newPower=$173; //@line 5875 "xmlparse.c"
        var $174=$newPower; //@line 5876 "xmlparse.c"
        var $175=($174); //@line 5876 "xmlparse.c"
        var $176=1 << ($175); //@line 5876 "xmlparse.c"
        $newSize=$176; //@line 5876 "xmlparse.c"
        var $177=$newSize; //@line 5877 "xmlparse.c"
        var $178=($177) - 1; //@line 5877 "xmlparse.c"
        $newMask=$178; //@line 5877 "xmlparse.c"
        var $179=$newSize; //@line 5878 "xmlparse.c"
        var $180=($179) * 4; //@line 5878 "xmlparse.c"
        $tsize19=$180; //@line 5878 "xmlparse.c"
        var $181=$table_addr; //@line 5879 "xmlparse.c"
        var $182=$181+16; //@line 5879 "xmlparse.c"
        var $183=HEAP[$182]; //@line 5879 "xmlparse.c"
        var $184=$183; //@line 5879 "xmlparse.c"
        var $185=HEAP[$184]; //@line 5879 "xmlparse.c"
        var $186=$tsize19; //@line 5879 "xmlparse.c"
        var $187=FUNCTION_TABLE[$185]($186); //@line 5879 "xmlparse.c"
        var $188=$187; //@line 5879 "xmlparse.c"
        $newV=$188; //@line 5879 "xmlparse.c"
        var $189=$newV; //@line 5880 "xmlparse.c"
        var $190=($189)==0; //@line 5880 "xmlparse.c"
        if ($190) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 5880 "xmlparse.c"
      case 29: // $bb20
        $4=0; //@line 5881 "xmlparse.c"
        __label__ = 53; break; //@line 5881 "xmlparse.c"
      case 30: // $bb21
        var $191=$newV; //@line 5882 "xmlparse.c"
        var $192=$tsize19; //@line 5882 "xmlparse.c"
        var $193=$191; //@line 5882 "xmlparse.c"
        _llvm_memset_p0i8_i32($193, 0, $192, 1, 0); //@line 5882 "xmlparse.c"
        $i=0; //@line 5883 "xmlparse.c"
        var $194=$table_addr; //@line 5883 "xmlparse.c"
        var $195=$194+8; //@line 5883 "xmlparse.c"
        var $196=HEAP[$195]; //@line 5883 "xmlparse.c"
        var $197=$i; //@line 5883 "xmlparse.c"
        var $198=($196) > ($197); //@line 5883 "xmlparse.c"
        var $199=$table_addr; //@line 5884 "xmlparse.c"
        if ($198) { __lastLabel__ = 30; __label__ = 31; break; } else { __lastLabel__ = 30; __label__ = 43; break; } //@line 5883 "xmlparse.c"
      case 31: // $bb22
        var $200=__lastLabel__ == 42 ? $290 : ($199);
        var $201=$200; //@line 5884 "xmlparse.c"
        var $202=HEAP[$201]; //@line 5884 "xmlparse.c"
        var $203=$i; //@line 5884 "xmlparse.c"
        var $204=$202+4*$203; //@line 5884 "xmlparse.c"
        var $205=HEAP[$204]; //@line 5884 "xmlparse.c"
        var $206=($205)!=0; //@line 5884 "xmlparse.c"
        if ($206) { __label__ = 32; break; } else { __label__ = 42; break; } //@line 5884 "xmlparse.c"
      case 32: // $bb23
        var $207=$table_addr; //@line 5885 "xmlparse.c"
        var $208=$207; //@line 5885 "xmlparse.c"
        var $209=HEAP[$208]; //@line 5885 "xmlparse.c"
        var $210=$i; //@line 5885 "xmlparse.c"
        var $211=$209+4*$210; //@line 5885 "xmlparse.c"
        var $212=HEAP[$211]; //@line 5885 "xmlparse.c"
        var $213=$212; //@line 5885 "xmlparse.c"
        var $214=HEAP[$213]; //@line 5885 "xmlparse.c"
        $s_addr_i10=$214;
        $h_i12=0; //@line 5832 "xmlparse.c"
        var $215=$s_addr_i10; //@line 5833 "xmlparse.c"
        var $216=HEAP[$215]; //@line 5833 "xmlparse.c"
        var $217=($216)!=0; //@line 5833 "xmlparse.c"
        var $218=$h_i12; //@line 5834 "xmlparse.c"
        if ($217) { __lastLabel__ = 32; __label__ = 33; break; } else { __lastLabel__ = 32; __label__ = 34; break; } //@line 5833 "xmlparse.c"
      case 33: // $bb_i13
        var $219=__lastLabel__ == 33 ? $230 : ($218);
        var $220=($219) * 1000003; //@line 5834 "xmlparse.c"
        var $221=$s_addr_i10; //@line 5834 "xmlparse.c"
        var $222=HEAP[$221]; //@line 5834 "xmlparse.c"
        var $223=($222); //@line 5834 "xmlparse.c"
        var $224=($223) ^ ($220); //@line 5834 "xmlparse.c"
        $h_i12=$224; //@line 5834 "xmlparse.c"
        var $225=$s_addr_i10; //@line 5834 "xmlparse.c"
        var $226=$225+1; //@line 5834 "xmlparse.c"
        $s_addr_i10=$226; //@line 5834 "xmlparse.c"
        var $227=$s_addr_i10; //@line 5833 "xmlparse.c"
        var $228=HEAP[$227]; //@line 5833 "xmlparse.c"
        var $229=($228)!=0; //@line 5833 "xmlparse.c"
        var $230=$h_i12; //@line 5834 "xmlparse.c"
        if ($229) { __lastLabel__ = 33; __label__ = 33; break; } else { __lastLabel__ = 33; __label__ = 34; break; } //@line 5833 "xmlparse.c"
      case 34: // $hash_exit17
        var $_lcssa_i14=__lastLabel__ == 32 ? $218 : ($230);
        $0=$_lcssa_i14; //@line 5835 "xmlparse.c"
        var $231=$0; //@line 5835 "xmlparse.c"
        $retval_i11=$231; //@line 5835 "xmlparse.c"
        var $retval3_i15=$retval_i11; //@line 5835 "xmlparse.c"
        $newHash=$retval3_i15; //@line 5885 "xmlparse.c"
        var $232=$newHash; //@line 5886 "xmlparse.c"
        var $233=$newMask; //@line 5886 "xmlparse.c"
        var $234=($233) & ($232); //@line 5886 "xmlparse.c"
        $j=$234; //@line 5886 "xmlparse.c"
        $step=0; //@line 5887 "xmlparse.c"
        var $235=$newV; //@line 5888 "xmlparse.c"
        var $236=$j; //@line 5888 "xmlparse.c"
        var $237=$235+4*$236; //@line 5888 "xmlparse.c"
        var $238=HEAP[$237]; //@line 5888 "xmlparse.c"
        var $239=($238)!=0; //@line 5888 "xmlparse.c"
        if ($239) { __label__ = 35; break; } else { __label__ = 41; break; } //@line 5888 "xmlparse.c"
      case 35: // $bb24
        var $240=$step; //@line 5889 "xmlparse.c"
        var $241=($240)==0; //@line 5889 "xmlparse.c"
        if ($241) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 5889 "xmlparse.c"
      case 36: // $bb25
        var $242=$newMask; //@line 5890 "xmlparse.c"
        var $not26=($242) ^ -1; //@line 5890 "xmlparse.c"
        var $243=$newHash; //@line 5890 "xmlparse.c"
        var $244=($243) & ($not26); //@line 5890 "xmlparse.c"
        var $245=$newPower; //@line 5890 "xmlparse.c"
        var $246=($245); //@line 5890 "xmlparse.c"
        var $247=($246) - 1; //@line 5890 "xmlparse.c"
        var $248=($244) >>> ($247); //@line 5890 "xmlparse.c"
        var $249=((($248)) & 255); //@line 5890 "xmlparse.c"
        var $250=$newMask; //@line 5890 "xmlparse.c"
        var $251=($250) >>> 2; //@line 5890 "xmlparse.c"
        var $252=((($251)) & 255); //@line 5890 "xmlparse.c"
        var $253=($249) & ($252); //@line 5890 "xmlparse.c"
        var $254=($253) | 1; //@line 5890 "xmlparse.c"
        $step=$254; //@line 5890 "xmlparse.c"
        __label__ = 37; break; //@line 5890 "xmlparse.c"
      case 37: // $bb28
        var $255=$step; //@line 5891 "xmlparse.c"
        var $256=($255); //@line 5891 "xmlparse.c"
        var $257=$j; //@line 5891 "xmlparse.c"
        var $258=($256) > ($257); //@line 5891 "xmlparse.c"
        var $259=$step; //@line 5891 "xmlparse.c"
        var $260=($259); //@line 5891 "xmlparse.c"
        if ($258) { __label__ = 38; break; } else { __label__ = 40; break; } //@line 5891 "xmlparse.c"
      case 38: // $bb29
        var $261=$newSize; //@line 5891 "xmlparse.c"
        var $_neg18=0 - ($260);
        var $262=$j; //@line 5891 "xmlparse.c"
        var $263=($261) + ($_neg18);
        var $264=($263) + ($262); //@line 5891 "xmlparse.c"
        $j=$264; //@line 5891 "xmlparse.c"
        var $265=$j; //@line 5891 "xmlparse.c"
        $iftmp_275=$265; //@line 5891 "xmlparse.c"
        __label__ = 39; break; //@line 5891 "xmlparse.c"
      case 39: // $bb31_backedge
        var $266=$newV; //@line 5888 "xmlparse.c"
        var $267=$j; //@line 5888 "xmlparse.c"
        var $268=$266+4*$267; //@line 5888 "xmlparse.c"
        var $269=HEAP[$268]; //@line 5888 "xmlparse.c"
        var $270=($269)!=0; //@line 5888 "xmlparse.c"
        if ($270) { __label__ = 35; break; } else { __label__ = 41; break; } //@line 5888 "xmlparse.c"
      case 40: // $bb30
        var $271=$j; //@line 5891 "xmlparse.c"
        var $272=($271) - ($260); //@line 5891 "xmlparse.c"
        $j=$272; //@line 5891 "xmlparse.c"
        var $273=$j; //@line 5891 "xmlparse.c"
        $iftmp_275=$273; //@line 5891 "xmlparse.c"
        __label__ = 39; break; //@line 5891 "xmlparse.c"
      case 41: // $bb32
        var $274=$table_addr; //@line 5893 "xmlparse.c"
        var $275=$274; //@line 5893 "xmlparse.c"
        var $276=HEAP[$275]; //@line 5893 "xmlparse.c"
        var $277=$i; //@line 5893 "xmlparse.c"
        var $278=$276+4*$277; //@line 5893 "xmlparse.c"
        var $279=HEAP[$278]; //@line 5893 "xmlparse.c"
        var $280=$newV; //@line 5893 "xmlparse.c"
        var $281=$j; //@line 5893 "xmlparse.c"
        var $282=$280+4*$281; //@line 5893 "xmlparse.c"
        HEAP[$282]=$279; //@line 5893 "xmlparse.c"
        __label__ = 42; break; //@line 5893 "xmlparse.c"
      case 42: // $bb33
        var $283=$i; //@line 5883 "xmlparse.c"
        var $284=($283) + 1; //@line 5883 "xmlparse.c"
        $i=$284; //@line 5883 "xmlparse.c"
        var $285=$table_addr; //@line 5883 "xmlparse.c"
        var $286=$285+8; //@line 5883 "xmlparse.c"
        var $287=HEAP[$286]; //@line 5883 "xmlparse.c"
        var $288=$i; //@line 5883 "xmlparse.c"
        var $289=($287) > ($288); //@line 5883 "xmlparse.c"
        var $290=$table_addr; //@line 5884 "xmlparse.c"
        if ($289) { __lastLabel__ = 42; __label__ = 31; break; } else { __lastLabel__ = 42; __label__ = 43; break; } //@line 5883 "xmlparse.c"
      case 43: // $bb35
        var $_lcssa20=__lastLabel__ == 30 ? $199 : ($290);
        var $291=$_lcssa20+16; //@line 5895 "xmlparse.c"
        var $292=HEAP[$291]; //@line 5895 "xmlparse.c"
        var $293=$292+8; //@line 5895 "xmlparse.c"
        var $294=HEAP[$293]; //@line 5895 "xmlparse.c"
        var $295=$table_addr; //@line 5895 "xmlparse.c"
        var $296=$295; //@line 5895 "xmlparse.c"
        var $297=HEAP[$296]; //@line 5895 "xmlparse.c"
        var $298=$297; //@line 5895 "xmlparse.c"
        FUNCTION_TABLE[$294]($298); //@line 5895 "xmlparse.c"
        var $299=$table_addr; //@line 5896 "xmlparse.c"
        var $300=$299; //@line 5896 "xmlparse.c"
        var $301=$newV; //@line 5896 "xmlparse.c"
        HEAP[$300]=$301; //@line 5896 "xmlparse.c"
        var $302=$table_addr; //@line 5897 "xmlparse.c"
        var $303=$302+4; //@line 5897 "xmlparse.c"
        var $304=$newPower; //@line 5897 "xmlparse.c"
        HEAP[$303]=$304; //@line 5897 "xmlparse.c"
        var $305=$table_addr; //@line 5898 "xmlparse.c"
        var $306=$305+8; //@line 5898 "xmlparse.c"
        var $307=$newSize; //@line 5898 "xmlparse.c"
        HEAP[$306]=$307; //@line 5898 "xmlparse.c"
        var $308=$h; //@line 5899 "xmlparse.c"
        var $309=$newMask; //@line 5899 "xmlparse.c"
        var $310=($309) & ($308); //@line 5899 "xmlparse.c"
        $i=$310; //@line 5899 "xmlparse.c"
        $step=0; //@line 5900 "xmlparse.c"
        var $311=$table_addr; //@line 5901 "xmlparse.c"
        var $312=$311; //@line 5901 "xmlparse.c"
        var $313=HEAP[$312]; //@line 5901 "xmlparse.c"
        var $314=$i; //@line 5901 "xmlparse.c"
        var $315=$313+4*$314; //@line 5901 "xmlparse.c"
        var $316=HEAP[$315]; //@line 5901 "xmlparse.c"
        var $317=($316)!=0; //@line 5901 "xmlparse.c"
        if ($317) { __label__ = 44; break; } else { __label__ = 50; break; } //@line 5901 "xmlparse.c"
      case 44: // $bb36
        var $318=$step; //@line 5902 "xmlparse.c"
        var $319=($318)==0; //@line 5902 "xmlparse.c"
        if ($319) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 5902 "xmlparse.c"
      case 45: // $bb37
        var $320=$newMask; //@line 5903 "xmlparse.c"
        var $not38=($320) ^ -1; //@line 5903 "xmlparse.c"
        var $321=$h; //@line 5903 "xmlparse.c"
        var $322=($321) & ($not38); //@line 5903 "xmlparse.c"
        var $323=$newPower; //@line 5903 "xmlparse.c"
        var $324=($323); //@line 5903 "xmlparse.c"
        var $325=($324) - 1; //@line 5903 "xmlparse.c"
        var $326=($322) >>> ($325); //@line 5903 "xmlparse.c"
        var $327=((($326)) & 255); //@line 5903 "xmlparse.c"
        var $328=$newMask; //@line 5903 "xmlparse.c"
        var $329=($328) >>> 2; //@line 5903 "xmlparse.c"
        var $330=((($329)) & 255); //@line 5903 "xmlparse.c"
        var $331=($327) & ($330); //@line 5903 "xmlparse.c"
        var $332=($331) | 1; //@line 5903 "xmlparse.c"
        $step=$332; //@line 5903 "xmlparse.c"
        __label__ = 46; break; //@line 5903 "xmlparse.c"
      case 46: // $bb40
        var $333=$step; //@line 5904 "xmlparse.c"
        var $334=($333); //@line 5904 "xmlparse.c"
        var $335=$i; //@line 5904 "xmlparse.c"
        var $336=($334) > ($335); //@line 5904 "xmlparse.c"
        var $337=$step; //@line 5904 "xmlparse.c"
        var $338=($337); //@line 5904 "xmlparse.c"
        if ($336) { __label__ = 47; break; } else { __label__ = 49; break; } //@line 5904 "xmlparse.c"
      case 47: // $bb41
        var $339=$newSize; //@line 5904 "xmlparse.c"
        var $_neg19=0 - ($338);
        var $340=$i; //@line 5904 "xmlparse.c"
        var $341=($339) + ($_neg19);
        var $342=($341) + ($340); //@line 5904 "xmlparse.c"
        $i=$342; //@line 5904 "xmlparse.c"
        var $343=$i; //@line 5904 "xmlparse.c"
        $iftmp_276=$343; //@line 5904 "xmlparse.c"
        __label__ = 48; break; //@line 5904 "xmlparse.c"
      case 48: // $bb43_backedge
        var $344=$table_addr; //@line 5901 "xmlparse.c"
        var $345=$344; //@line 5901 "xmlparse.c"
        var $346=HEAP[$345]; //@line 5901 "xmlparse.c"
        var $347=$i; //@line 5901 "xmlparse.c"
        var $348=$346+4*$347; //@line 5901 "xmlparse.c"
        var $349=HEAP[$348]; //@line 5901 "xmlparse.c"
        var $350=($349)!=0; //@line 5901 "xmlparse.c"
        if ($350) { __label__ = 44; break; } else { __label__ = 50; break; } //@line 5901 "xmlparse.c"
      case 49: // $bb42
        var $351=$i; //@line 5904 "xmlparse.c"
        var $352=($351) - ($338); //@line 5904 "xmlparse.c"
        $i=$352; //@line 5904 "xmlparse.c"
        var $353=$i; //@line 5904 "xmlparse.c"
        $iftmp_276=$353; //@line 5904 "xmlparse.c"
        __label__ = 48; break; //@line 5904 "xmlparse.c"
      case 50: // $bb44
        var $354=$table_addr; //@line 5908 "xmlparse.c"
        var $355=$354; //@line 5908 "xmlparse.c"
        var $356=HEAP[$355]; //@line 5908 "xmlparse.c"
        var $357=$table_addr; //@line 5908 "xmlparse.c"
        var $358=$357+16; //@line 5908 "xmlparse.c"
        var $359=HEAP[$358]; //@line 5908 "xmlparse.c"
        var $360=$359; //@line 5908 "xmlparse.c"
        var $361=HEAP[$360]; //@line 5908 "xmlparse.c"
        var $362=$createSize_addr; //@line 5908 "xmlparse.c"
        var $363=FUNCTION_TABLE[$361]($362); //@line 5908 "xmlparse.c"
        var $364=$363; //@line 5908 "xmlparse.c"
        var $365=$i; //@line 5908 "xmlparse.c"
        var $366=$356+4*$365; //@line 5908 "xmlparse.c"
        HEAP[$366]=$364; //@line 5908 "xmlparse.c"
        var $367=$table_addr; //@line 5909 "xmlparse.c"
        var $368=$367; //@line 5909 "xmlparse.c"
        var $369=HEAP[$368]; //@line 5909 "xmlparse.c"
        var $370=$i; //@line 5909 "xmlparse.c"
        var $371=$369+4*$370; //@line 5909 "xmlparse.c"
        var $372=HEAP[$371]; //@line 5909 "xmlparse.c"
        var $373=($372)==0; //@line 5909 "xmlparse.c"
        if ($373) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 5909 "xmlparse.c"
      case 51: // $bb45
        $4=0; //@line 5910 "xmlparse.c"
        __label__ = 53; break; //@line 5910 "xmlparse.c"
      case 52: // $bb46
        var $374=$table_addr; //@line 5911 "xmlparse.c"
        var $375=$374; //@line 5911 "xmlparse.c"
        var $376=HEAP[$375]; //@line 5911 "xmlparse.c"
        var $377=$i; //@line 5911 "xmlparse.c"
        var $378=$376+4*$377; //@line 5911 "xmlparse.c"
        var $379=HEAP[$378]; //@line 5911 "xmlparse.c"
        var $380=$createSize_addr; //@line 5911 "xmlparse.c"
        var $381=$379; //@line 5911 "xmlparse.c"
        _llvm_memset_p0i8_i32($381, 0, $380, 1, 0); //@line 5911 "xmlparse.c"
        var $382=$table_addr; //@line 5912 "xmlparse.c"
        var $383=$382; //@line 5912 "xmlparse.c"
        var $384=HEAP[$383]; //@line 5912 "xmlparse.c"
        var $385=$i; //@line 5912 "xmlparse.c"
        var $386=$384+4*$385; //@line 5912 "xmlparse.c"
        var $387=HEAP[$386]; //@line 5912 "xmlparse.c"
        var $388=$387; //@line 5912 "xmlparse.c"
        var $389=$name_addr; //@line 5912 "xmlparse.c"
        HEAP[$388]=$389; //@line 5912 "xmlparse.c"
        var $390=$table_addr; //@line 5913 "xmlparse.c"
        var $391=$390+12; //@line 5913 "xmlparse.c"
        var $392=HEAP[$391]; //@line 5913 "xmlparse.c"
        var $393=($392) + 1; //@line 5913 "xmlparse.c"
        var $394=$table_addr; //@line 5913 "xmlparse.c"
        var $395=$394+12; //@line 5913 "xmlparse.c"
        HEAP[$395]=$393; //@line 5913 "xmlparse.c"
        var $396=$table_addr; //@line 5914 "xmlparse.c"
        var $397=$396; //@line 5914 "xmlparse.c"
        var $398=HEAP[$397]; //@line 5914 "xmlparse.c"
        var $399=$i; //@line 5914 "xmlparse.c"
        var $400=$398+4*$399; //@line 5914 "xmlparse.c"
        var $401=HEAP[$400]; //@line 5914 "xmlparse.c"
        $4=$401; //@line 5914 "xmlparse.c"
        __label__ = 53; break; //@line 5914 "xmlparse.c"
      case 53: // $bb47
        var $402=$4; //@line 5845 "xmlparse.c"
        $retval=$402; //@line 5845 "xmlparse.c"
        var $retval48=$retval; //@line 5845 "xmlparse.c"
        ;
        return $retval48; //@line 5845 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _poolDestroy($pool) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr;
        var $p;
        var $tem;
        var $tem4;
        $pool_addr=$pool;
        var $0=$pool_addr; //@line 5999 "xmlparse.c"
        var $1=$0; //@line 5999 "xmlparse.c"
        var $2=HEAP[$1]; //@line 5999 "xmlparse.c"
        $p=$2; //@line 5999 "xmlparse.c"
        var $3=($2)!=0; //@line 6000 "xmlparse.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 6000 "xmlparse.c"
      case 1: // $bb
        var $4=$p; //@line 6001 "xmlparse.c"
        var $5=$4; //@line 6001 "xmlparse.c"
        var $6=HEAP[$5]; //@line 6001 "xmlparse.c"
        $tem=$6; //@line 6001 "xmlparse.c"
        var $7=$pool_addr; //@line 6002 "xmlparse.c"
        var $8=$7+20; //@line 6002 "xmlparse.c"
        var $9=HEAP[$8]; //@line 6002 "xmlparse.c"
        var $10=$9+8; //@line 6002 "xmlparse.c"
        var $11=HEAP[$10]; //@line 6002 "xmlparse.c"
        var $12=$p; //@line 6002 "xmlparse.c"
        var $13=$12; //@line 6002 "xmlparse.c"
        FUNCTION_TABLE[$11]($13); //@line 6002 "xmlparse.c"
        var $14=$tem; //@line 6003 "xmlparse.c"
        $p=$14; //@line 6003 "xmlparse.c"
        var $15=($14)!=0; //@line 6000 "xmlparse.c"
        if ($15) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 6000 "xmlparse.c"
      case 2: // $bb2
        var $16=$pool_addr; //@line 6005 "xmlparse.c"
        var $17=$16+4; //@line 6005 "xmlparse.c"
        var $18=HEAP[$17]; //@line 6005 "xmlparse.c"
        $p=$18; //@line 6005 "xmlparse.c"
        var $19=($18)!=0; //@line 6006 "xmlparse.c"
        if ($19) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 6006 "xmlparse.c"
      case 3: // $bb3
        var $20=$p; //@line 6007 "xmlparse.c"
        var $21=$20; //@line 6007 "xmlparse.c"
        var $22=HEAP[$21]; //@line 6007 "xmlparse.c"
        $tem4=$22; //@line 6007 "xmlparse.c"
        var $23=$pool_addr; //@line 6008 "xmlparse.c"
        var $24=$23+20; //@line 6008 "xmlparse.c"
        var $25=HEAP[$24]; //@line 6008 "xmlparse.c"
        var $26=$25+8; //@line 6008 "xmlparse.c"
        var $27=HEAP[$26]; //@line 6008 "xmlparse.c"
        var $28=$p; //@line 6008 "xmlparse.c"
        var $29=$28; //@line 6008 "xmlparse.c"
        FUNCTION_TABLE[$27]($29); //@line 6008 "xmlparse.c"
        var $30=$tem4; //@line 6009 "xmlparse.c"
        $p=$30; //@line 6009 "xmlparse.c"
        var $31=($30)!=0; //@line 6006 "xmlparse.c"
        if ($31) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 6006 "xmlparse.c"
      case 4: // $return
        ;
        return; //@line 6011 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _poolAppend($pool, $enc, $ptr, $end) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr;
        var $enc_addr;
        var $ptr_addr=__stackBase__;
        var $end_addr;
        var $retval;
        var $0;
        $pool_addr=$pool;
        $enc_addr=$enc;
        HEAP[$ptr_addr]=$ptr;
        $end_addr=$end;
        var $1=$pool_addr; //@line 6017 "xmlparse.c"
        var $2=$1+12; //@line 6017 "xmlparse.c"
        var $3=HEAP[$2]; //@line 6017 "xmlparse.c"
        var $4=($3)==0; //@line 6017 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 3; break; } //@line 6017 "xmlparse.c"
      case 1: // $bb
        var $5=$pool_addr; //@line 6017 "xmlparse.c"
        var $6=_poolGrow($5); //@line 6017 "xmlparse.c"
        var $7=($6)==0; //@line 6017 "xmlparse.c"
        if ($7) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 6017 "xmlparse.c"
      case 2: // $bb1
        $0=0; //@line 6018 "xmlparse.c"
        __label__ = 7; break; //@line 6018 "xmlparse.c"
      case 3: // $bb2
        var $8=$enc_addr; //@line 6020 "xmlparse.c"
        var $9=$8+56; //@line 6020 "xmlparse.c"
        var $10=HEAP[$9]; //@line 6020 "xmlparse.c"
        var $11=$pool_addr; //@line 6020 "xmlparse.c"
        var $12=$11+8; //@line 6020 "xmlparse.c"
        var $13=HEAP[$12]; //@line 6020 "xmlparse.c"
        var $14=$pool_addr; //@line 6020 "xmlparse.c"
        var $15=$14+12; //@line 6020 "xmlparse.c"
        var $16=$enc_addr; //@line 6020 "xmlparse.c"
        var $17=$end_addr; //@line 6020 "xmlparse.c"
        FUNCTION_TABLE[$10]($16, $ptr_addr, $17, $15, $13); //@line 6020 "xmlparse.c"
        var $18=HEAP[$ptr_addr]; //@line 6021 "xmlparse.c"
        var $19=$end_addr; //@line 6021 "xmlparse.c"
        var $20=($18)==($19); //@line 6021 "xmlparse.c"
        var $21=$pool_addr; //@line 6026 "xmlparse.c"
        if ($20) { __label__ = 6; break; } else { __label__ = 4; break; } //@line 6021 "xmlparse.c"
      case 4: // $bb3
        var $22=_poolGrow($21); //@line 6023 "xmlparse.c"
        var $23=($22)==0; //@line 6023 "xmlparse.c"
        if ($23) { __label__ = 5; break; } else { __label__ = 3; break; } //@line 6023 "xmlparse.c"
      case 5: // $bb4
        $0=0; //@line 6024 "xmlparse.c"
        __label__ = 7; break; //@line 6024 "xmlparse.c"
      case 6: // $bb6
        var $24=$21+16; //@line 6026 "xmlparse.c"
        var $25=HEAP[$24]; //@line 6026 "xmlparse.c"
        $0=$25; //@line 6026 "xmlparse.c"
        __label__ = 7; break; //@line 6026 "xmlparse.c"
      case 7: // $bb7
        var $26=$0; //@line 6018 "xmlparse.c"
        $retval=$26; //@line 6018 "xmlparse.c"
        var $retval8=$retval; //@line 6018 "xmlparse.c"
        STACKTOP = __stackBase__;
        return $retval8; //@line 6018 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _poolCopyString($pool, $s) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr;
        var $s_addr;
        var $retval;
        var $0;
        var $iftmp_278;
        $pool_addr=$pool;
        $s_addr=$s;
        __label__ = 1; break; //@line 6031 "xmlparse.c"
      case 1: // $bb
        var $1=$pool_addr; //@line 6033 "xmlparse.c"
        var $2=$1+12; //@line 6033 "xmlparse.c"
        var $3=HEAP[$2]; //@line 6033 "xmlparse.c"
        var $4=$pool_addr; //@line 6033 "xmlparse.c"
        var $5=$4+8; //@line 6033 "xmlparse.c"
        var $6=HEAP[$5]; //@line 6033 "xmlparse.c"
        var $7=($3)!=($6); //@line 6033 "xmlparse.c"
        if ($7) { __label__ = 4; break; } else { __label__ = 2; break; } //@line 6033 "xmlparse.c"
      case 2: // $bb1
        var $8=$pool_addr; //@line 6033 "xmlparse.c"
        var $9=_poolGrow($8); //@line 6033 "xmlparse.c"
        var $10=($9)!=0; //@line 6033 "xmlparse.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 6033 "xmlparse.c"
      case 3: // $bb5
        $iftmp_278=1; //@line 6033 "xmlparse.c"
        $0=0; //@line 6034 "xmlparse.c"
        __label__ = 6; break; //@line 6034 "xmlparse.c"
      case 4: // $bb6
        var $11=$pool_addr; //@line 6033 "xmlparse.c"
        var $12=$11+12; //@line 6033 "xmlparse.c"
        var $13=HEAP[$12]; //@line 6033 "xmlparse.c"
        var $14=$s_addr; //@line 6033 "xmlparse.c"
        var $15=HEAP[$14]; //@line 6033 "xmlparse.c"
        HEAP[$13]=$15; //@line 6033 "xmlparse.c"
        var $16=$13+1; //@line 6033 "xmlparse.c"
        var $17=$pool_addr; //@line 6033 "xmlparse.c"
        var $18=$17+12; //@line 6033 "xmlparse.c"
        HEAP[$18]=$16; //@line 6033 "xmlparse.c"
        $iftmp_278=0; //@line 6033 "xmlparse.c"
        var $19=$s_addr; //@line 6035 "xmlparse.c"
        var $20=HEAP[$19]; //@line 6035 "xmlparse.c"
        var $21=($20)!=0; //@line 6035 "xmlparse.c"
        var $22=($21); //@line 6035 "xmlparse.c"
        var $23=$s_addr; //@line 6035 "xmlparse.c"
        var $24=$23+1; //@line 6035 "xmlparse.c"
        $s_addr=$24; //@line 6035 "xmlparse.c"
        var $toBool7=($22)!=0; //@line 6035 "xmlparse.c"
        if ($toBool7) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 6035 "xmlparse.c"
      case 5: // $bb8
        var $25=$pool_addr; //@line 6036 "xmlparse.c"
        var $26=$25+16; //@line 6036 "xmlparse.c"
        var $27=HEAP[$26]; //@line 6036 "xmlparse.c"
        $s_addr=$27; //@line 6036 "xmlparse.c"
        var $28=$pool_addr; //@line 6037 "xmlparse.c"
        var $29=$28+12; //@line 6037 "xmlparse.c"
        var $30=HEAP[$29]; //@line 6037 "xmlparse.c"
        var $31=$pool_addr; //@line 6037 "xmlparse.c"
        var $32=$31+16; //@line 6037 "xmlparse.c"
        HEAP[$32]=$30; //@line 6037 "xmlparse.c"
        var $33=$s_addr; //@line 6038 "xmlparse.c"
        $0=$33; //@line 6038 "xmlparse.c"
        __label__ = 6; break; //@line 6038 "xmlparse.c"
      case 6: // $bb9
        var $34=$0; //@line 6034 "xmlparse.c"
        $retval=$34; //@line 6034 "xmlparse.c"
        var $retval10=$retval; //@line 6034 "xmlparse.c"
        ;
        return $retval10; //@line 6034 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _poolStoreString($pool, $enc, $ptr, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $retval;
        var $0;
        $pool_addr=$pool;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        var $1=$pool_addr; //@line 6070 "xmlparse.c"
        var $2=$enc_addr; //@line 6070 "xmlparse.c"
        var $3=$ptr_addr; //@line 6070 "xmlparse.c"
        var $4=$end_addr; //@line 6070 "xmlparse.c"
        var $5=_poolAppend($1, $2, $3, $4); //@line 6070 "xmlparse.c"
        var $6=($5)==0; //@line 6070 "xmlparse.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 6070 "xmlparse.c"
      case 1: // $bb
        $0=0; //@line 6071 "xmlparse.c"
        __label__ = 6; break; //@line 6071 "xmlparse.c"
      case 2: // $bb1
        var $7=$pool_addr; //@line 6072 "xmlparse.c"
        var $8=$7+12; //@line 6072 "xmlparse.c"
        var $9=HEAP[$8]; //@line 6072 "xmlparse.c"
        var $10=$pool_addr; //@line 6072 "xmlparse.c"
        var $11=$10+8; //@line 6072 "xmlparse.c"
        var $12=HEAP[$11]; //@line 6072 "xmlparse.c"
        var $13=($9)==($12); //@line 6072 "xmlparse.c"
        if ($13) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 6072 "xmlparse.c"
      case 3: // $bb2
        var $14=$pool_addr; //@line 6072 "xmlparse.c"
        var $15=_poolGrow($14); //@line 6072 "xmlparse.c"
        var $16=($15)==0; //@line 6072 "xmlparse.c"
        if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 6072 "xmlparse.c"
      case 4: // $bb3
        $0=0; //@line 6073 "xmlparse.c"
        __label__ = 6; break; //@line 6073 "xmlparse.c"
      case 5: // $bb4
        var $17=$pool_addr; //@line 6074 "xmlparse.c"
        var $18=$17+12; //@line 6074 "xmlparse.c"
        var $19=HEAP[$18]; //@line 6074 "xmlparse.c"
        HEAP[$19]=0; //@line 6074 "xmlparse.c"
        var $20=$19+1; //@line 6074 "xmlparse.c"
        var $21=$pool_addr; //@line 6074 "xmlparse.c"
        var $22=$21+12; //@line 6074 "xmlparse.c"
        HEAP[$22]=$20; //@line 6074 "xmlparse.c"
        var $23=$pool_addr; //@line 6075 "xmlparse.c"
        var $24=$23+16; //@line 6075 "xmlparse.c"
        var $25=HEAP[$24]; //@line 6075 "xmlparse.c"
        $0=$25; //@line 6075 "xmlparse.c"
        __label__ = 6; break; //@line 6075 "xmlparse.c"
      case 6: // $bb5
        var $26=$0; //@line 6071 "xmlparse.c"
        $retval=$26; //@line 6071 "xmlparse.c"
        var $retval6=$retval; //@line 6071 "xmlparse.c"
        ;
        return $retval6; //@line 6071 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _poolGrow($pool) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $pool_addr;
        var $retval;
        var $0;
        var $tem;
        var $blockSize;
        var $tem10;
        var $blockSize11;
        $pool_addr=$pool;
        var $1=$pool_addr; //@line 6081 "xmlparse.c"
        var $2=$1+4; //@line 6081 "xmlparse.c"
        var $3=HEAP[$2]; //@line 6081 "xmlparse.c"
        var $4=($3)!=0; //@line 6081 "xmlparse.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 6081 "xmlparse.c"
      case 1: // $bb
        var $5=$pool_addr; //@line 6082 "xmlparse.c"
        var $6=$5+16; //@line 6082 "xmlparse.c"
        var $7=HEAP[$6]; //@line 6082 "xmlparse.c"
        var $8=($7)==0; //@line 6082 "xmlparse.c"
        var $9=$pool_addr; //@line 6083 "xmlparse.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 6082 "xmlparse.c"
      case 2: // $bb1
        var $10=$9+4; //@line 6083 "xmlparse.c"
        var $11=HEAP[$10]; //@line 6083 "xmlparse.c"
        var $12=$pool_addr; //@line 6083 "xmlparse.c"
        var $13=$12; //@line 6083 "xmlparse.c"
        HEAP[$13]=$11; //@line 6083 "xmlparse.c"
        var $14=$pool_addr; //@line 6084 "xmlparse.c"
        var $15=$14+4; //@line 6084 "xmlparse.c"
        var $16=HEAP[$15]; //@line 6084 "xmlparse.c"
        var $17=$16; //@line 6084 "xmlparse.c"
        var $18=HEAP[$17]; //@line 6084 "xmlparse.c"
        var $19=$pool_addr; //@line 6084 "xmlparse.c"
        var $20=$19+4; //@line 6084 "xmlparse.c"
        HEAP[$20]=$18; //@line 6084 "xmlparse.c"
        var $21=$pool_addr; //@line 6085 "xmlparse.c"
        var $22=$21; //@line 6085 "xmlparse.c"
        var $23=HEAP[$22]; //@line 6085 "xmlparse.c"
        var $24=$23; //@line 6085 "xmlparse.c"
        HEAP[$24]=0; //@line 6085 "xmlparse.c"
        var $25=$pool_addr; //@line 6086 "xmlparse.c"
        var $26=$25; //@line 6086 "xmlparse.c"
        var $27=HEAP[$26]; //@line 6086 "xmlparse.c"
        var $28=$27+8; //@line 6086 "xmlparse.c"
        var $29=$28; //@line 6086 "xmlparse.c"
        var $30=$pool_addr; //@line 6086 "xmlparse.c"
        var $31=$30+16; //@line 6086 "xmlparse.c"
        HEAP[$31]=$29; //@line 6086 "xmlparse.c"
        var $32=$pool_addr; //@line 6087 "xmlparse.c"
        var $33=$32+16; //@line 6087 "xmlparse.c"
        var $34=HEAP[$33]; //@line 6087 "xmlparse.c"
        var $35=$pool_addr; //@line 6087 "xmlparse.c"
        var $36=$35; //@line 6087 "xmlparse.c"
        var $37=HEAP[$36]; //@line 6087 "xmlparse.c"
        var $38=$37+4; //@line 6087 "xmlparse.c"
        var $39=HEAP[$38]; //@line 6087 "xmlparse.c"
        var $40=$34+$39; //@line 6087 "xmlparse.c"
        var $41=$pool_addr; //@line 6087 "xmlparse.c"
        var $42=$41+8; //@line 6087 "xmlparse.c"
        HEAP[$42]=$40; //@line 6087 "xmlparse.c"
        var $43=$pool_addr; //@line 6088 "xmlparse.c"
        var $44=$43+16; //@line 6088 "xmlparse.c"
        var $45=HEAP[$44]; //@line 6088 "xmlparse.c"
        var $46=$pool_addr; //@line 6088 "xmlparse.c"
        var $47=$46+12; //@line 6088 "xmlparse.c"
        HEAP[$47]=$45; //@line 6088 "xmlparse.c"
        $0=1; //@line 6089 "xmlparse.c"
        __label__ = 19; break; //@line 6089 "xmlparse.c"
      case 3: // $bb2
        var $48=$9+8; //@line 6091 "xmlparse.c"
        var $49=HEAP[$48]; //@line 6091 "xmlparse.c"
        var $50=($49); //@line 6091 "xmlparse.c"
        var $51=$pool_addr; //@line 6091 "xmlparse.c"
        var $52=$51+16; //@line 6091 "xmlparse.c"
        var $53=HEAP[$52]; //@line 6091 "xmlparse.c"
        var $54=($53); //@line 6091 "xmlparse.c"
        var $55=($50) - ($54); //@line 6091 "xmlparse.c"
        var $56=$pool_addr; //@line 6091 "xmlparse.c"
        var $57=$56+4; //@line 6091 "xmlparse.c"
        var $58=HEAP[$57]; //@line 6091 "xmlparse.c"
        var $59=$58+4; //@line 6091 "xmlparse.c"
        var $60=HEAP[$59]; //@line 6091 "xmlparse.c"
        var $61=($55) < ($60); //@line 6091 "xmlparse.c"
        if ($61) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 6091 "xmlparse.c"
      case 4: // $bb3
        var $62=$pool_addr; //@line 6092 "xmlparse.c"
        var $63=$62+4; //@line 6092 "xmlparse.c"
        var $64=HEAP[$63]; //@line 6092 "xmlparse.c"
        var $65=$64; //@line 6092 "xmlparse.c"
        var $66=HEAP[$65]; //@line 6092 "xmlparse.c"
        $tem=$66; //@line 6092 "xmlparse.c"
        var $67=$pool_addr; //@line 6093 "xmlparse.c"
        var $68=$67+4; //@line 6093 "xmlparse.c"
        var $69=HEAP[$68]; //@line 6093 "xmlparse.c"
        var $70=$pool_addr; //@line 6093 "xmlparse.c"
        var $71=$70; //@line 6093 "xmlparse.c"
        var $72=HEAP[$71]; //@line 6093 "xmlparse.c"
        var $73=$69; //@line 6093 "xmlparse.c"
        HEAP[$73]=$72; //@line 6093 "xmlparse.c"
        var $74=$pool_addr; //@line 6094 "xmlparse.c"
        var $75=$74+4; //@line 6094 "xmlparse.c"
        var $76=HEAP[$75]; //@line 6094 "xmlparse.c"
        var $77=$pool_addr; //@line 6094 "xmlparse.c"
        var $78=$77; //@line 6094 "xmlparse.c"
        HEAP[$78]=$76; //@line 6094 "xmlparse.c"
        var $79=$pool_addr; //@line 6095 "xmlparse.c"
        var $80=$79+4; //@line 6095 "xmlparse.c"
        var $81=$tem; //@line 6095 "xmlparse.c"
        HEAP[$80]=$81; //@line 6095 "xmlparse.c"
        var $82=$pool_addr; //@line 6096 "xmlparse.c"
        var $83=$82+8; //@line 6096 "xmlparse.c"
        var $84=HEAP[$83]; //@line 6096 "xmlparse.c"
        var $85=($84); //@line 6096 "xmlparse.c"
        var $86=$pool_addr; //@line 6096 "xmlparse.c"
        var $87=$86+16; //@line 6096 "xmlparse.c"
        var $88=HEAP[$87]; //@line 6096 "xmlparse.c"
        var $89=($88); //@line 6096 "xmlparse.c"
        var $90=($85) - ($89); //@line 6096 "xmlparse.c"
        var $91=$pool_addr; //@line 6096 "xmlparse.c"
        var $92=$91+16; //@line 6096 "xmlparse.c"
        var $93=HEAP[$92]; //@line 6096 "xmlparse.c"
        var $94=$pool_addr; //@line 6096 "xmlparse.c"
        var $95=$94; //@line 6096 "xmlparse.c"
        var $96=HEAP[$95]; //@line 6096 "xmlparse.c"
        var $97=$96+8; //@line 6096 "xmlparse.c"
        var $98=$97; //@line 6096 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($98, $93, $90, 1, 0); //@line 6096 "xmlparse.c"
        var $99=$pool_addr; //@line 6098 "xmlparse.c"
        var $100=$99; //@line 6098 "xmlparse.c"
        var $101=HEAP[$100]; //@line 6098 "xmlparse.c"
        var $102=$101+8; //@line 6098 "xmlparse.c"
        var $103=$102; //@line 6098 "xmlparse.c"
        var $104=$pool_addr; //@line 6098 "xmlparse.c"
        var $105=$104+12; //@line 6098 "xmlparse.c"
        var $106=HEAP[$105]; //@line 6098 "xmlparse.c"
        var $107=($106); //@line 6098 "xmlparse.c"
        var $108=$pool_addr; //@line 6098 "xmlparse.c"
        var $109=$108+16; //@line 6098 "xmlparse.c"
        var $110=HEAP[$109]; //@line 6098 "xmlparse.c"
        var $111=($110); //@line 6098 "xmlparse.c"
        var $112=($107) - ($111); //@line 6098 "xmlparse.c"
        var $113=$103+$112; //@line 6098 "xmlparse.c"
        var $114=$pool_addr; //@line 6098 "xmlparse.c"
        var $115=$114+12; //@line 6098 "xmlparse.c"
        HEAP[$115]=$113; //@line 6098 "xmlparse.c"
        var $116=$pool_addr; //@line 6099 "xmlparse.c"
        var $117=$116; //@line 6099 "xmlparse.c"
        var $118=HEAP[$117]; //@line 6099 "xmlparse.c"
        var $119=$118+8; //@line 6099 "xmlparse.c"
        var $120=$119; //@line 6099 "xmlparse.c"
        var $121=$pool_addr; //@line 6099 "xmlparse.c"
        var $122=$121+16; //@line 6099 "xmlparse.c"
        HEAP[$122]=$120; //@line 6099 "xmlparse.c"
        var $123=$pool_addr; //@line 6100 "xmlparse.c"
        var $124=$123+16; //@line 6100 "xmlparse.c"
        var $125=HEAP[$124]; //@line 6100 "xmlparse.c"
        var $126=$pool_addr; //@line 6100 "xmlparse.c"
        var $127=$126; //@line 6100 "xmlparse.c"
        var $128=HEAP[$127]; //@line 6100 "xmlparse.c"
        var $129=$128+4; //@line 6100 "xmlparse.c"
        var $130=HEAP[$129]; //@line 6100 "xmlparse.c"
        var $131=$125+$130; //@line 6100 "xmlparse.c"
        var $132=$pool_addr; //@line 6100 "xmlparse.c"
        var $133=$132+8; //@line 6100 "xmlparse.c"
        HEAP[$133]=$131; //@line 6100 "xmlparse.c"
        $0=1; //@line 6101 "xmlparse.c"
        __label__ = 19; break; //@line 6101 "xmlparse.c"
      case 5: // $bb4
        var $134=$pool_addr; //@line 6104 "xmlparse.c"
        var $135=$134; //@line 6104 "xmlparse.c"
        var $136=HEAP[$135]; //@line 6104 "xmlparse.c"
        var $137=($136)==0; //@line 6104 "xmlparse.c"
        if ($137) { __label__ = 10; break; } else { __label__ = 6; break; } //@line 6104 "xmlparse.c"
      case 6: // $bb5
        var $138=$pool_addr; //@line 6104 "xmlparse.c"
        var $139=$138+16; //@line 6104 "xmlparse.c"
        var $140=HEAP[$139]; //@line 6104 "xmlparse.c"
        var $141=$pool_addr; //@line 6104 "xmlparse.c"
        var $142=$141; //@line 6104 "xmlparse.c"
        var $143=HEAP[$142]; //@line 6104 "xmlparse.c"
        var $144=$143+8; //@line 6104 "xmlparse.c"
        var $145=$144; //@line 6104 "xmlparse.c"
        var $146=($140)!=($145); //@line 6104 "xmlparse.c"
        if ($146) { __label__ = 10; break; } else { __label__ = 7; break; } //@line 6104 "xmlparse.c"
      case 7: // $bb6
        var $147=$pool_addr; //@line 6105 "xmlparse.c"
        var $148=$147+8; //@line 6105 "xmlparse.c"
        var $149=HEAP[$148]; //@line 6105 "xmlparse.c"
        var $150=($149); //@line 6105 "xmlparse.c"
        var $151=$pool_addr; //@line 6105 "xmlparse.c"
        var $152=$151+16; //@line 6105 "xmlparse.c"
        var $153=HEAP[$152]; //@line 6105 "xmlparse.c"
        var $154=($153); //@line 6105 "xmlparse.c"
        var $155=($150) - ($154); //@line 6105 "xmlparse.c"
        var $156=($155) * 2; //@line 6105 "xmlparse.c"
        $blockSize=$156; //@line 6105 "xmlparse.c"
        var $157=$pool_addr; //@line 6106 "xmlparse.c"
        var $158=$157+20; //@line 6106 "xmlparse.c"
        var $159=HEAP[$158]; //@line 6106 "xmlparse.c"
        var $160=$159+4; //@line 6106 "xmlparse.c"
        var $161=HEAP[$160]; //@line 6106 "xmlparse.c"
        var $162=$blockSize; //@line 6106 "xmlparse.c"
        var $163=($162) + 8; //@line 6106 "xmlparse.c"
        var $164=$pool_addr; //@line 6106 "xmlparse.c"
        var $165=$164; //@line 6106 "xmlparse.c"
        var $166=HEAP[$165]; //@line 6106 "xmlparse.c"
        var $167=$166; //@line 6106 "xmlparse.c"
        var $168=FUNCTION_TABLE[$161]($167, $163); //@line 6106 "xmlparse.c"
        var $169=$168; //@line 6106 "xmlparse.c"
        var $170=$pool_addr; //@line 6106 "xmlparse.c"
        var $171=$170; //@line 6106 "xmlparse.c"
        HEAP[$171]=$169; //@line 6106 "xmlparse.c"
        var $172=$pool_addr; //@line 6110 "xmlparse.c"
        var $173=$172; //@line 6110 "xmlparse.c"
        var $174=HEAP[$173]; //@line 6110 "xmlparse.c"
        var $175=($174)==0; //@line 6110 "xmlparse.c"
        if ($175) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 6110 "xmlparse.c"
      case 8: // $bb7
        $0=0; //@line 6111 "xmlparse.c"
        __label__ = 19; break; //@line 6111 "xmlparse.c"
      case 9: // $bb8
        var $176=$pool_addr; //@line 6112 "xmlparse.c"
        var $177=$176; //@line 6112 "xmlparse.c"
        var $178=HEAP[$177]; //@line 6112 "xmlparse.c"
        var $179=$178+4; //@line 6112 "xmlparse.c"
        var $180=$blockSize; //@line 6112 "xmlparse.c"
        HEAP[$179]=$180; //@line 6112 "xmlparse.c"
        var $181=$pool_addr; //@line 6113 "xmlparse.c"
        var $182=$181; //@line 6113 "xmlparse.c"
        var $183=HEAP[$182]; //@line 6113 "xmlparse.c"
        var $184=$183+8; //@line 6113 "xmlparse.c"
        var $185=$184; //@line 6113 "xmlparse.c"
        var $186=$pool_addr; //@line 6113 "xmlparse.c"
        var $187=$186+12; //@line 6113 "xmlparse.c"
        var $188=HEAP[$187]; //@line 6113 "xmlparse.c"
        var $189=($188); //@line 6113 "xmlparse.c"
        var $190=$pool_addr; //@line 6113 "xmlparse.c"
        var $191=$190+16; //@line 6113 "xmlparse.c"
        var $192=HEAP[$191]; //@line 6113 "xmlparse.c"
        var $193=($192); //@line 6113 "xmlparse.c"
        var $194=($189) - ($193); //@line 6113 "xmlparse.c"
        var $195=$185+$194; //@line 6113 "xmlparse.c"
        var $196=$pool_addr; //@line 6113 "xmlparse.c"
        var $197=$196+12; //@line 6113 "xmlparse.c"
        HEAP[$197]=$195; //@line 6113 "xmlparse.c"
        var $198=$pool_addr; //@line 6114 "xmlparse.c"
        var $199=$198; //@line 6114 "xmlparse.c"
        var $200=HEAP[$199]; //@line 6114 "xmlparse.c"
        var $201=$200+8; //@line 6114 "xmlparse.c"
        var $202=$201; //@line 6114 "xmlparse.c"
        var $203=$pool_addr; //@line 6114 "xmlparse.c"
        var $204=$203+16; //@line 6114 "xmlparse.c"
        HEAP[$204]=$202; //@line 6114 "xmlparse.c"
        var $205=$pool_addr; //@line 6115 "xmlparse.c"
        var $206=$205+16; //@line 6115 "xmlparse.c"
        var $207=HEAP[$206]; //@line 6115 "xmlparse.c"
        var $208=$blockSize; //@line 6115 "xmlparse.c"
        var $209=$207+$208; //@line 6115 "xmlparse.c"
        var $210=$pool_addr; //@line 6115 "xmlparse.c"
        var $211=$210+8; //@line 6115 "xmlparse.c"
        HEAP[$211]=$209; //@line 6115 "xmlparse.c"
        __label__ = 18; break; //@line 6115 "xmlparse.c"
      case 10: // $bb9
        var $212=$pool_addr; //@line 6119 "xmlparse.c"
        var $213=$212+8; //@line 6119 "xmlparse.c"
        var $214=HEAP[$213]; //@line 6119 "xmlparse.c"
        var $215=($214); //@line 6119 "xmlparse.c"
        var $216=$pool_addr; //@line 6119 "xmlparse.c"
        var $217=$216+16; //@line 6119 "xmlparse.c"
        var $218=HEAP[$217]; //@line 6119 "xmlparse.c"
        var $219=($218); //@line 6119 "xmlparse.c"
        var $220=($215) - ($219); //@line 6119 "xmlparse.c"
        $blockSize11=$220; //@line 6119 "xmlparse.c"
        var $221=($220) <= 1023; //@line 6120 "xmlparse.c"
        if ($221) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 6120 "xmlparse.c"
      case 11: // $bb12
        $blockSize11=1024; //@line 6121 "xmlparse.c"
        __label__ = 13; break; //@line 6121 "xmlparse.c"
      case 12: // $bb13
        var $222=$blockSize11; //@line 6123 "xmlparse.c"
        var $223=($222) * 2; //@line 6123 "xmlparse.c"
        $blockSize11=$223; //@line 6123 "xmlparse.c"
        __label__ = 13; break; //@line 6123 "xmlparse.c"
      case 13: // $bb14
        var $224=$pool_addr; //@line 6124 "xmlparse.c"
        var $225=$224+20; //@line 6124 "xmlparse.c"
        var $226=HEAP[$225]; //@line 6124 "xmlparse.c"
        var $227=$226; //@line 6124 "xmlparse.c"
        var $228=HEAP[$227]; //@line 6124 "xmlparse.c"
        var $229=$blockSize11; //@line 6124 "xmlparse.c"
        var $230=($229) + 8; //@line 6124 "xmlparse.c"
        var $231=FUNCTION_TABLE[$228]($230); //@line 6124 "xmlparse.c"
        var $232=$231; //@line 6124 "xmlparse.c"
        $tem10=$232; //@line 6124 "xmlparse.c"
        var $233=($232)==0; //@line 6126 "xmlparse.c"
        if ($233) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 6126 "xmlparse.c"
      case 14: // $bb15
        $0=0; //@line 6127 "xmlparse.c"
        __label__ = 19; break; //@line 6127 "xmlparse.c"
      case 15: // $bb16
        var $234=$tem10; //@line 6128 "xmlparse.c"
        var $235=$234+4; //@line 6128 "xmlparse.c"
        var $236=$blockSize11; //@line 6128 "xmlparse.c"
        HEAP[$235]=$236; //@line 6128 "xmlparse.c"
        var $237=$pool_addr; //@line 6129 "xmlparse.c"
        var $238=$237; //@line 6129 "xmlparse.c"
        var $239=HEAP[$238]; //@line 6129 "xmlparse.c"
        var $240=$tem10; //@line 6129 "xmlparse.c"
        var $241=$240; //@line 6129 "xmlparse.c"
        HEAP[$241]=$239; //@line 6129 "xmlparse.c"
        var $242=$pool_addr; //@line 6130 "xmlparse.c"
        var $243=$242; //@line 6130 "xmlparse.c"
        var $244=$tem10; //@line 6130 "xmlparse.c"
        HEAP[$243]=$244; //@line 6130 "xmlparse.c"
        var $245=$pool_addr; //@line 6131 "xmlparse.c"
        var $246=$245+12; //@line 6131 "xmlparse.c"
        var $247=HEAP[$246]; //@line 6131 "xmlparse.c"
        var $248=$pool_addr; //@line 6131 "xmlparse.c"
        var $249=$248+16; //@line 6131 "xmlparse.c"
        var $250=HEAP[$249]; //@line 6131 "xmlparse.c"
        var $251=($247)!=($250); //@line 6131 "xmlparse.c"
        if ($251) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 6131 "xmlparse.c"
      case 16: // $bb17
        var $252=$pool_addr; //@line 6132 "xmlparse.c"
        var $253=$252+12; //@line 6132 "xmlparse.c"
        var $254=HEAP[$253]; //@line 6132 "xmlparse.c"
        var $255=($254); //@line 6132 "xmlparse.c"
        var $256=$pool_addr; //@line 6132 "xmlparse.c"
        var $257=$256+16; //@line 6132 "xmlparse.c"
        var $258=HEAP[$257]; //@line 6132 "xmlparse.c"
        var $259=($258); //@line 6132 "xmlparse.c"
        var $260=($255) - ($259); //@line 6132 "xmlparse.c"
        var $261=$pool_addr; //@line 6132 "xmlparse.c"
        var $262=$261+16; //@line 6132 "xmlparse.c"
        var $263=HEAP[$262]; //@line 6132 "xmlparse.c"
        var $264=$tem10; //@line 6132 "xmlparse.c"
        var $265=$264+8; //@line 6132 "xmlparse.c"
        var $266=$265; //@line 6132 "xmlparse.c"
        _llvm_memcpy_p0i8_p0i8_i32($266, $263, $260, 1, 0); //@line 6132 "xmlparse.c"
        __label__ = 17; break; //@line 6132 "xmlparse.c"
      case 17: // $bb18
        var $267=$tem10; //@line 6134 "xmlparse.c"
        var $268=$267+8; //@line 6134 "xmlparse.c"
        var $269=$268; //@line 6134 "xmlparse.c"
        var $270=$pool_addr; //@line 6134 "xmlparse.c"
        var $271=$270+12; //@line 6134 "xmlparse.c"
        var $272=HEAP[$271]; //@line 6134 "xmlparse.c"
        var $273=($272); //@line 6134 "xmlparse.c"
        var $274=$pool_addr; //@line 6134 "xmlparse.c"
        var $275=$274+16; //@line 6134 "xmlparse.c"
        var $276=HEAP[$275]; //@line 6134 "xmlparse.c"
        var $277=($276); //@line 6134 "xmlparse.c"
        var $278=($273) - ($277); //@line 6134 "xmlparse.c"
        var $279=$269+$278; //@line 6134 "xmlparse.c"
        var $280=$pool_addr; //@line 6134 "xmlparse.c"
        var $281=$280+12; //@line 6134 "xmlparse.c"
        HEAP[$281]=$279; //@line 6134 "xmlparse.c"
        var $282=$tem10; //@line 6135 "xmlparse.c"
        var $283=$282+8; //@line 6135 "xmlparse.c"
        var $284=$283; //@line 6135 "xmlparse.c"
        var $285=$pool_addr; //@line 6135 "xmlparse.c"
        var $286=$285+16; //@line 6135 "xmlparse.c"
        HEAP[$286]=$284; //@line 6135 "xmlparse.c"
        var $287=$tem10; //@line 6136 "xmlparse.c"
        var $288=$287+8; //@line 6136 "xmlparse.c"
        var $289=$288; //@line 6136 "xmlparse.c"
        var $290=$blockSize11; //@line 6136 "xmlparse.c"
        var $291=$289+$290; //@line 6136 "xmlparse.c"
        var $292=$pool_addr; //@line 6136 "xmlparse.c"
        var $293=$292+8; //@line 6136 "xmlparse.c"
        HEAP[$293]=$291; //@line 6136 "xmlparse.c"
        __label__ = 18; break; //@line 6136 "xmlparse.c"
      case 18: // $bb19
        $0=1; //@line 6138 "xmlparse.c"
        __label__ = 19; break; //@line 6138 "xmlparse.c"
      case 19: // $bb20
        var $294=$0; //@line 6089 "xmlparse.c"
        $retval=$294; //@line 6089 "xmlparse.c"
        var $retval21=$retval; //@line 6089 "xmlparse.c"
        var $retval2122=((($retval21)) & 255); //@line 6089 "xmlparse.c"
        ;
        return $retval2122; //@line 6089 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _nextScaffoldPart($parser) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $retval;
        var $0;
        var $dtd;
        var $me;
        var $next;
        var $temp;
        var $parent;
        $parser_addr=$parser;
        var $1=$parser_addr; //@line 6144 "xmlparse.c"
        var $2=$1+340; //@line 6144 "xmlparse.c"
        var $3=HEAP[$2]; //@line 6144 "xmlparse.c"
        $dtd=$3; //@line 6144 "xmlparse.c"
        var $4=$dtd; //@line 6148 "xmlparse.c"
        var $5=$4+164; //@line 6148 "xmlparse.c"
        var $6=HEAP[$5]; //@line 6148 "xmlparse.c"
        var $7=($6)==0; //@line 6148 "xmlparse.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 6148 "xmlparse.c"
      case 1: // $bb
        var $8=$parser_addr; //@line 6149 "xmlparse.c"
        var $9=$8+12; //@line 6149 "xmlparse.c"
        var $10=$9; //@line 6149 "xmlparse.c"
        var $11=HEAP[$10]; //@line 6149 "xmlparse.c"
        var $12=$parser_addr; //@line 6149 "xmlparse.c"
        var $13=$12+452; //@line 6149 "xmlparse.c"
        var $14=HEAP[$13]; //@line 6149 "xmlparse.c"
        var $15=($14) * 4; //@line 6149 "xmlparse.c"
        var $16=FUNCTION_TABLE[$11]($15); //@line 6149 "xmlparse.c"
        var $17=$16; //@line 6149 "xmlparse.c"
        var $18=$dtd; //@line 6149 "xmlparse.c"
        var $19=$18+164; //@line 6149 "xmlparse.c"
        HEAP[$19]=$17; //@line 6149 "xmlparse.c"
        var $20=$dtd; //@line 6150 "xmlparse.c"
        var $21=$20+164; //@line 6150 "xmlparse.c"
        var $22=HEAP[$21]; //@line 6150 "xmlparse.c"
        var $23=($22)==0; //@line 6150 "xmlparse.c"
        if ($23) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 6150 "xmlparse.c"
      case 2: // $bb1
        $0=-1; //@line 6151 "xmlparse.c"
        __label__ = 20; break; //@line 6151 "xmlparse.c"
      case 3: // $bb2
        var $24=$dtd; //@line 6152 "xmlparse.c"
        var $25=$24+164; //@line 6152 "xmlparse.c"
        var $26=HEAP[$25]; //@line 6152 "xmlparse.c"
        var $27=$26; //@line 6152 "xmlparse.c"
        HEAP[$27]=0; //@line 6152 "xmlparse.c"
        __label__ = 4; break; //@line 6152 "xmlparse.c"
      case 4: // $bb3
        var $28=$dtd; //@line 6155 "xmlparse.c"
        var $29=$28+156; //@line 6155 "xmlparse.c"
        var $30=HEAP[$29]; //@line 6155 "xmlparse.c"
        var $31=$dtd; //@line 6155 "xmlparse.c"
        var $32=$31+152; //@line 6155 "xmlparse.c"
        var $33=HEAP[$32]; //@line 6155 "xmlparse.c"
        var $34=($30) >= ($33); //@line 6155 "xmlparse.c"
        if ($34) { __label__ = 5; break; } else { __label__ = 13; break; } //@line 6155 "xmlparse.c"
      case 5: // $bb4
        var $35=$dtd; //@line 6157 "xmlparse.c"
        var $36=$35+144; //@line 6157 "xmlparse.c"
        var $37=HEAP[$36]; //@line 6157 "xmlparse.c"
        var $38=($37)!=0; //@line 6157 "xmlparse.c"
        var $39=$parser_addr; //@line 6158 "xmlparse.c"
        var $40=$39+12; //@line 6158 "xmlparse.c"
        if ($38) { __label__ = 6; break; } else { __label__ = 9; break; } //@line 6157 "xmlparse.c"
      case 6: // $bb5
        var $41=$40+4; //@line 6158 "xmlparse.c"
        var $42=HEAP[$41]; //@line 6158 "xmlparse.c"
        var $43=$dtd; //@line 6158 "xmlparse.c"
        var $44=$43+152; //@line 6158 "xmlparse.c"
        var $45=HEAP[$44]; //@line 6158 "xmlparse.c"
        var $46=($45) * 56; //@line 6158 "xmlparse.c"
        var $47=$dtd; //@line 6158 "xmlparse.c"
        var $48=$47+144; //@line 6158 "xmlparse.c"
        var $49=HEAP[$48]; //@line 6158 "xmlparse.c"
        var $50=$49; //@line 6158 "xmlparse.c"
        var $51=FUNCTION_TABLE[$42]($50, $46); //@line 6158 "xmlparse.c"
        var $52=$51; //@line 6158 "xmlparse.c"
        $temp=$52; //@line 6158 "xmlparse.c"
        var $53=$temp; //@line 6160 "xmlparse.c"
        var $54=($53)==0; //@line 6160 "xmlparse.c"
        if ($54) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 6160 "xmlparse.c"
      case 7: // $bb6
        $0=-1; //@line 6161 "xmlparse.c"
        __label__ = 20; break; //@line 6161 "xmlparse.c"
      case 8: // $bb7
        var $55=$dtd; //@line 6162 "xmlparse.c"
        var $56=$55+152; //@line 6162 "xmlparse.c"
        var $57=HEAP[$56]; //@line 6162 "xmlparse.c"
        var $58=($57) * 2; //@line 6162 "xmlparse.c"
        var $59=$dtd; //@line 6162 "xmlparse.c"
        var $60=$59+152; //@line 6162 "xmlparse.c"
        HEAP[$60]=$58; //@line 6162 "xmlparse.c"
        __label__ = 12; break; //@line 6162 "xmlparse.c"
      case 9: // $bb8
        var $61=$40; //@line 6165 "xmlparse.c"
        var $62=HEAP[$61]; //@line 6165 "xmlparse.c"
        var $63=FUNCTION_TABLE[$62](896); //@line 6165 "xmlparse.c"
        var $64=$63; //@line 6165 "xmlparse.c"
        $temp=$64; //@line 6165 "xmlparse.c"
        var $65=$temp; //@line 6167 "xmlparse.c"
        var $66=($65)==0; //@line 6167 "xmlparse.c"
        if ($66) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 6167 "xmlparse.c"
      case 10: // $bb9
        $0=-1; //@line 6168 "xmlparse.c"
        __label__ = 20; break; //@line 6168 "xmlparse.c"
      case 11: // $bb10
        var $67=$dtd; //@line 6169 "xmlparse.c"
        var $68=$67+152; //@line 6169 "xmlparse.c"
        HEAP[$68]=32; //@line 6169 "xmlparse.c"
        __label__ = 12; break; //@line 6169 "xmlparse.c"
      case 12: // $bb11
        var $69=$dtd; //@line 6171 "xmlparse.c"
        var $70=$69+144; //@line 6171 "xmlparse.c"
        var $71=$temp; //@line 6171 "xmlparse.c"
        HEAP[$70]=$71; //@line 6171 "xmlparse.c"
        __label__ = 13; break; //@line 6171 "xmlparse.c"
      case 13: // $bb12
        var $72=$dtd; //@line 6173 "xmlparse.c"
        var $73=$72+156; //@line 6173 "xmlparse.c"
        var $74=HEAP[$73]; //@line 6173 "xmlparse.c"
        $next=$74; //@line 6173 "xmlparse.c"
        var $75=($74) + 1; //@line 6173 "xmlparse.c"
        var $76=$dtd; //@line 6173 "xmlparse.c"
        var $77=$76+156; //@line 6173 "xmlparse.c"
        HEAP[$77]=$75; //@line 6173 "xmlparse.c"
        var $78=$dtd; //@line 6174 "xmlparse.c"
        var $79=$78+144; //@line 6174 "xmlparse.c"
        var $80=HEAP[$79]; //@line 6174 "xmlparse.c"
        var $81=$next; //@line 6174 "xmlparse.c"
        var $82=$80+28*$81; //@line 6174 "xmlparse.c"
        $me=$82; //@line 6174 "xmlparse.c"
        var $83=$dtd; //@line 6175 "xmlparse.c"
        var $84=$83+160; //@line 6175 "xmlparse.c"
        var $85=HEAP[$84]; //@line 6175 "xmlparse.c"
        var $86=($85)!=0; //@line 6175 "xmlparse.c"
        if ($86) { __label__ = 14; break; } else { __label__ = 19; break; } //@line 6175 "xmlparse.c"
      case 14: // $bb13
        var $87=$dtd; //@line 6176 "xmlparse.c"
        var $88=$87+144; //@line 6176 "xmlparse.c"
        var $89=HEAP[$88]; //@line 6176 "xmlparse.c"
        var $90=$dtd; //@line 6176 "xmlparse.c"
        var $91=$90+164; //@line 6176 "xmlparse.c"
        var $92=HEAP[$91]; //@line 6176 "xmlparse.c"
        var $93=$dtd; //@line 6176 "xmlparse.c"
        var $94=$93+160; //@line 6176 "xmlparse.c"
        var $95=HEAP[$94]; //@line 6176 "xmlparse.c"
        var $96=($95) - 1; //@line 6176 "xmlparse.c"
        var $97=$92+4*$96; //@line 6176 "xmlparse.c"
        var $98=HEAP[$97]; //@line 6176 "xmlparse.c"
        var $99=$89+28*$98; //@line 6176 "xmlparse.c"
        $parent=$99; //@line 6176 "xmlparse.c"
        var $100=$parent; //@line 6177 "xmlparse.c"
        var $101=$100+16; //@line 6177 "xmlparse.c"
        var $102=HEAP[$101]; //@line 6177 "xmlparse.c"
        var $103=($102)!=0; //@line 6177 "xmlparse.c"
        if ($103) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 6177 "xmlparse.c"
      case 15: // $bb14
        var $104=$dtd; //@line 6178 "xmlparse.c"
        var $105=$104+144; //@line 6178 "xmlparse.c"
        var $106=HEAP[$105]; //@line 6178 "xmlparse.c"
        var $107=$parent; //@line 6178 "xmlparse.c"
        var $108=$107+16; //@line 6178 "xmlparse.c"
        var $109=HEAP[$108]; //@line 6178 "xmlparse.c"
        var $110=$106+28*$109; //@line 6178 "xmlparse.c"
        var $111=$110+24; //@line 6178 "xmlparse.c"
        var $112=$next; //@line 6178 "xmlparse.c"
        HEAP[$111]=$112; //@line 6178 "xmlparse.c"
        __label__ = 16; break; //@line 6178 "xmlparse.c"
      case 16: // $bb15
        var $113=$parent; //@line 6180 "xmlparse.c"
        var $114=$113+20; //@line 6180 "xmlparse.c"
        var $115=HEAP[$114]; //@line 6180 "xmlparse.c"
        var $116=($115)==0; //@line 6180 "xmlparse.c"
        if ($116) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 6180 "xmlparse.c"
      case 17: // $bb16
        var $117=$parent; //@line 6181 "xmlparse.c"
        var $118=$117+12; //@line 6181 "xmlparse.c"
        var $119=$next; //@line 6181 "xmlparse.c"
        HEAP[$118]=$119; //@line 6181 "xmlparse.c"
        __label__ = 18; break; //@line 6181 "xmlparse.c"
      case 18: // $bb17
        var $120=$parent; //@line 6182 "xmlparse.c"
        var $121=$120+16; //@line 6182 "xmlparse.c"
        var $122=$next; //@line 6182 "xmlparse.c"
        HEAP[$121]=$122; //@line 6182 "xmlparse.c"
        var $123=$parent; //@line 6183 "xmlparse.c"
        var $124=$123+20; //@line 6183 "xmlparse.c"
        var $125=HEAP[$124]; //@line 6183 "xmlparse.c"
        var $126=($125) + 1; //@line 6183 "xmlparse.c"
        var $127=$parent; //@line 6183 "xmlparse.c"
        var $128=$127+20; //@line 6183 "xmlparse.c"
        HEAP[$128]=$126; //@line 6183 "xmlparse.c"
        __label__ = 19; break; //@line 6183 "xmlparse.c"
      case 19: // $bb18
        var $129=$me; //@line 6185 "xmlparse.c"
        var $130=$129+24; //@line 6185 "xmlparse.c"
        HEAP[$130]=0; //@line 6185 "xmlparse.c"
        var $131=$me; //@line 6185 "xmlparse.c"
        var $132=$131+24; //@line 6185 "xmlparse.c"
        var $133=HEAP[$132]; //@line 6185 "xmlparse.c"
        var $134=$me; //@line 6185 "xmlparse.c"
        var $135=$134+20; //@line 6185 "xmlparse.c"
        HEAP[$135]=$133; //@line 6185 "xmlparse.c"
        var $136=$me; //@line 6185 "xmlparse.c"
        var $137=$136+20; //@line 6185 "xmlparse.c"
        var $138=HEAP[$137]; //@line 6185 "xmlparse.c"
        var $139=$me; //@line 6185 "xmlparse.c"
        var $140=$139+16; //@line 6185 "xmlparse.c"
        HEAP[$140]=$138; //@line 6185 "xmlparse.c"
        var $141=$me; //@line 6185 "xmlparse.c"
        var $142=$141+16; //@line 6185 "xmlparse.c"
        var $143=HEAP[$142]; //@line 6185 "xmlparse.c"
        var $144=$me; //@line 6185 "xmlparse.c"
        var $145=$144+12; //@line 6185 "xmlparse.c"
        HEAP[$145]=$143; //@line 6185 "xmlparse.c"
        var $146=$next; //@line 6186 "xmlparse.c"
        $0=$146; //@line 6186 "xmlparse.c"
        __label__ = 20; break; //@line 6186 "xmlparse.c"
      case 20: // $bb19
        var $147=$0; //@line 6151 "xmlparse.c"
        $retval=$147; //@line 6151 "xmlparse.c"
        var $retval20=$retval; //@line 6151 "xmlparse.c"
        ;
        return $retval20; //@line 6151 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _build_node($parser, $src_node, $dest, $contpos, $strpos) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $src_node_addr;
        var $dest_addr;
        var $contpos_addr;
        var $strpos_addr;
        var $dtd;
        var $src;
        var $i;
        var $cn;
        $parser_addr=$parser;
        $src_node_addr=$src_node;
        $dest_addr=$dest;
        $contpos_addr=$contpos;
        $strpos_addr=$strpos;
        var $0=$parser_addr; //@line 6196 "xmlparse.c"
        var $1=$0+340; //@line 6196 "xmlparse.c"
        var $2=HEAP[$1]; //@line 6196 "xmlparse.c"
        $dtd=$2; //@line 6196 "xmlparse.c"
        var $3=$dtd; //@line 6197 "xmlparse.c"
        var $4=$3+144; //@line 6197 "xmlparse.c"
        var $5=HEAP[$4]; //@line 6197 "xmlparse.c"
        var $6=$src_node_addr; //@line 6197 "xmlparse.c"
        var $7=$5+28*$6; //@line 6197 "xmlparse.c"
        var $8=$7; //@line 6197 "xmlparse.c"
        var $9=HEAP[$8]; //@line 6197 "xmlparse.c"
        var $10=$dest_addr; //@line 6197 "xmlparse.c"
        var $11=$10; //@line 6197 "xmlparse.c"
        HEAP[$11]=$9; //@line 6197 "xmlparse.c"
        var $12=$dtd; //@line 6198 "xmlparse.c"
        var $13=$12+144; //@line 6198 "xmlparse.c"
        var $14=HEAP[$13]; //@line 6198 "xmlparse.c"
        var $15=$src_node_addr; //@line 6198 "xmlparse.c"
        var $16=$14+28*$15; //@line 6198 "xmlparse.c"
        var $17=$16+4; //@line 6198 "xmlparse.c"
        var $18=HEAP[$17]; //@line 6198 "xmlparse.c"
        var $19=$dest_addr; //@line 6198 "xmlparse.c"
        var $20=$19+4; //@line 6198 "xmlparse.c"
        HEAP[$20]=$18; //@line 6198 "xmlparse.c"
        var $21=$dest_addr; //@line 6199 "xmlparse.c"
        var $22=$21; //@line 6199 "xmlparse.c"
        var $23=HEAP[$22]; //@line 6199 "xmlparse.c"
        var $24=($23)==4; //@line 6199 "xmlparse.c"
        if ($24) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 6199 "xmlparse.c"
      case 1: // $bb
        var $25=$strpos_addr; //@line 6201 "xmlparse.c"
        var $26=HEAP[$25]; //@line 6201 "xmlparse.c"
        var $27=$dest_addr; //@line 6201 "xmlparse.c"
        var $28=$27+8; //@line 6201 "xmlparse.c"
        HEAP[$28]=$26; //@line 6201 "xmlparse.c"
        var $29=$dtd; //@line 6202 "xmlparse.c"
        var $30=$29+144; //@line 6202 "xmlparse.c"
        var $31=HEAP[$30]; //@line 6202 "xmlparse.c"
        var $32=$src_node_addr; //@line 6202 "xmlparse.c"
        var $33=$31+28*$32; //@line 6202 "xmlparse.c"
        var $34=$33+8; //@line 6202 "xmlparse.c"
        var $35=HEAP[$34]; //@line 6202 "xmlparse.c"
        $src=$35; //@line 6202 "xmlparse.c"
        var $36=$strpos_addr; //@line 6204 "xmlparse.c"
        var $37=HEAP[$36]; //@line 6204 "xmlparse.c"
        var $38=$src; //@line 6204 "xmlparse.c"
        var $39=HEAP[$38]; //@line 6204 "xmlparse.c"
        HEAP[$37]=$39; //@line 6204 "xmlparse.c"
        var $40=$37+1; //@line 6204 "xmlparse.c"
        var $41=$strpos_addr; //@line 6204 "xmlparse.c"
        HEAP[$41]=$40; //@line 6204 "xmlparse.c"
        var $42=$src; //@line 6205 "xmlparse.c"
        var $43=HEAP[$42]; //@line 6205 "xmlparse.c"
        var $44=($43)==0; //@line 6205 "xmlparse.c"
        if ($44) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 6205 "xmlparse.c"
      case 2: // $bb2
        var $45=$src; //@line 6207 "xmlparse.c"
        var $46=$45+1; //@line 6207 "xmlparse.c"
        $src=$46; //@line 6207 "xmlparse.c"
        var $47=$strpos_addr; //@line 6204 "xmlparse.c"
        var $48=HEAP[$47]; //@line 6204 "xmlparse.c"
        var $49=$src; //@line 6204 "xmlparse.c"
        var $50=HEAP[$49]; //@line 6204 "xmlparse.c"
        HEAP[$48]=$50; //@line 6204 "xmlparse.c"
        var $51=$48+1; //@line 6204 "xmlparse.c"
        var $52=$strpos_addr; //@line 6204 "xmlparse.c"
        HEAP[$52]=$51; //@line 6204 "xmlparse.c"
        var $53=$src; //@line 6205 "xmlparse.c"
        var $54=HEAP[$53]; //@line 6205 "xmlparse.c"
        var $55=($54)==0; //@line 6205 "xmlparse.c"
        if ($55) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 6205 "xmlparse.c"
      case 3: // $bb3
        var $56=$dest_addr; //@line 6209 "xmlparse.c"
        var $57=$56+12; //@line 6209 "xmlparse.c"
        HEAP[$57]=0; //@line 6209 "xmlparse.c"
        var $58=$dest_addr; //@line 6210 "xmlparse.c"
        var $59=$58+16; //@line 6210 "xmlparse.c"
        HEAP[$59]=0; //@line 6210 "xmlparse.c"
        __label__ = 7; break; //@line 6210 "xmlparse.c"
      case 4: // $bb4
        var $60=$dtd; //@line 6215 "xmlparse.c"
        var $61=$60+144; //@line 6215 "xmlparse.c"
        var $62=HEAP[$61]; //@line 6215 "xmlparse.c"
        var $63=$src_node_addr; //@line 6215 "xmlparse.c"
        var $64=$62+28*$63; //@line 6215 "xmlparse.c"
        var $65=$64+20; //@line 6215 "xmlparse.c"
        var $66=HEAP[$65]; //@line 6215 "xmlparse.c"
        var $67=$dest_addr; //@line 6215 "xmlparse.c"
        var $68=$67+12; //@line 6215 "xmlparse.c"
        HEAP[$68]=$66; //@line 6215 "xmlparse.c"
        var $69=$contpos_addr; //@line 6216 "xmlparse.c"
        var $70=HEAP[$69]; //@line 6216 "xmlparse.c"
        var $71=$dest_addr; //@line 6216 "xmlparse.c"
        var $72=$71+16; //@line 6216 "xmlparse.c"
        HEAP[$72]=$70; //@line 6216 "xmlparse.c"
        var $73=$contpos_addr; //@line 6217 "xmlparse.c"
        var $74=HEAP[$73]; //@line 6217 "xmlparse.c"
        var $75=$dest_addr; //@line 6217 "xmlparse.c"
        var $76=$75+12; //@line 6217 "xmlparse.c"
        var $77=HEAP[$76]; //@line 6217 "xmlparse.c"
        var $78=$74+20*$77; //@line 6217 "xmlparse.c"
        var $79=$contpos_addr; //@line 6217 "xmlparse.c"
        HEAP[$79]=$78; //@line 6217 "xmlparse.c"
        $i=0; //@line 6218 "xmlparse.c"
        var $80=$dtd; //@line 6218 "xmlparse.c"
        var $81=$80+144; //@line 6218 "xmlparse.c"
        var $82=HEAP[$81]; //@line 6218 "xmlparse.c"
        var $83=$src_node_addr; //@line 6218 "xmlparse.c"
        var $84=$82+28*$83; //@line 6218 "xmlparse.c"
        var $85=$84+12; //@line 6218 "xmlparse.c"
        var $86=HEAP[$85]; //@line 6218 "xmlparse.c"
        $cn=$86; //@line 6218 "xmlparse.c"
        var $87=$dest_addr; //@line 6219 "xmlparse.c"
        var $88=$87+12; //@line 6219 "xmlparse.c"
        var $89=HEAP[$88]; //@line 6219 "xmlparse.c"
        var $90=$i; //@line 6219 "xmlparse.c"
        var $91=($89) > ($90); //@line 6219 "xmlparse.c"
        var $92=$dest_addr; //@line 6221 "xmlparse.c"
        if ($91) { __lastLabel__ = 4; __label__ = 5; break; } else { __lastLabel__ = 4; __label__ = 6; break; } //@line 6219 "xmlparse.c"
      case 5: // $bb5
        var $93=__lastLabel__ == 5 ? $116 : ($92);
        var $94=$93+16; //@line 6221 "xmlparse.c"
        var $95=HEAP[$94]; //@line 6221 "xmlparse.c"
        var $96=$i; //@line 6221 "xmlparse.c"
        var $97=$95+20*$96; //@line 6221 "xmlparse.c"
        var $98=$parser_addr; //@line 6221 "xmlparse.c"
        var $99=$cn; //@line 6221 "xmlparse.c"
        var $100=$contpos_addr; //@line 6221 "xmlparse.c"
        var $101=$strpos_addr; //@line 6221 "xmlparse.c"
        _build_node($98, $99, $97, $100, $101); //@line 6221 "xmlparse.c"
        var $102=$i; //@line 6220 "xmlparse.c"
        var $103=($102) + 1; //@line 6220 "xmlparse.c"
        $i=$103; //@line 6220 "xmlparse.c"
        var $104=$dtd; //@line 6220 "xmlparse.c"
        var $105=$104+144; //@line 6220 "xmlparse.c"
        var $106=HEAP[$105]; //@line 6220 "xmlparse.c"
        var $107=$cn; //@line 6220 "xmlparse.c"
        var $108=$106+28*$107; //@line 6220 "xmlparse.c"
        var $109=$108+24; //@line 6220 "xmlparse.c"
        var $110=HEAP[$109]; //@line 6220 "xmlparse.c"
        $cn=$110; //@line 6220 "xmlparse.c"
        var $111=$dest_addr; //@line 6219 "xmlparse.c"
        var $112=$111+12; //@line 6219 "xmlparse.c"
        var $113=HEAP[$112]; //@line 6219 "xmlparse.c"
        var $114=$i; //@line 6219 "xmlparse.c"
        var $115=($113) > ($114); //@line 6219 "xmlparse.c"
        var $116=$dest_addr; //@line 6221 "xmlparse.c"
        if ($115) { __lastLabel__ = 5; __label__ = 5; break; } else { __lastLabel__ = 5; __label__ = 6; break; } //@line 6219 "xmlparse.c"
      case 6: // $bb7
        var $_lcssa=__lastLabel__ == 4 ? $92 : ($116);
        var $117=$_lcssa+8; //@line 6223 "xmlparse.c"
        HEAP[$117]=0; //@line 6223 "xmlparse.c"
        __label__ = 7; break; //@line 6223 "xmlparse.c"
      case 7: // $return
        ;
        return; //@line 6225 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _getElementType($parser, $enc, $ptr, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $parser_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $retval;
        var $0;
        var $dtd;
        var $name;
        var $ret;
        $parser_addr=$parser;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        var $1=$parser_addr; //@line 6254 "xmlparse.c"
        var $2=$1+340; //@line 6254 "xmlparse.c"
        var $3=HEAP[$2]; //@line 6254 "xmlparse.c"
        $dtd=$3; //@line 6254 "xmlparse.c"
        var $4=$dtd; //@line 6255 "xmlparse.c"
        var $5=$4+80; //@line 6255 "xmlparse.c"
        var $6=$enc_addr; //@line 6255 "xmlparse.c"
        var $7=$ptr_addr; //@line 6255 "xmlparse.c"
        var $8=$end_addr; //@line 6255 "xmlparse.c"
        var $9=_poolStoreString($5, $6, $7, $8); //@line 6255 "xmlparse.c"
        $name=$9; //@line 6255 "xmlparse.c"
        var $10=$name; //@line 6258 "xmlparse.c"
        var $11=($10)==0; //@line 6258 "xmlparse.c"
        if ($11) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 6258 "xmlparse.c"
      case 1: // $bb
        $0=0; //@line 6259 "xmlparse.c"
        __label__ = 9; break; //@line 6259 "xmlparse.c"
      case 2: // $bb1
        var $12=$dtd; //@line 6260 "xmlparse.c"
        var $13=$12+20; //@line 6260 "xmlparse.c"
        var $14=$name; //@line 6260 "xmlparse.c"
        var $15=_lookup($13, $14, 24); //@line 6260 "xmlparse.c"
        var $16=$15; //@line 6260 "xmlparse.c"
        $ret=$16; //@line 6260 "xmlparse.c"
        var $17=$ret; //@line 6261 "xmlparse.c"
        var $18=($17)==0; //@line 6261 "xmlparse.c"
        if ($18) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 6261 "xmlparse.c"
      case 3: // $bb2
        $0=0; //@line 6262 "xmlparse.c"
        __label__ = 9; break; //@line 6262 "xmlparse.c"
      case 4: // $bb3
        var $19=$ret; //@line 6263 "xmlparse.c"
        var $20=$19; //@line 6263 "xmlparse.c"
        var $21=HEAP[$20]; //@line 6263 "xmlparse.c"
        var $22=$name; //@line 6263 "xmlparse.c"
        var $23=($21)!=($22); //@line 6263 "xmlparse.c"
        var $24=$dtd; //@line 6264 "xmlparse.c"
        var $25=$24+80; //@line 6264 "xmlparse.c"
        if ($23) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 6263 "xmlparse.c"
      case 5: // $bb4
        var $26=$25+16; //@line 6264 "xmlparse.c"
        var $27=HEAP[$26]; //@line 6264 "xmlparse.c"
        var $28=$dtd; //@line 6264 "xmlparse.c"
        var $29=$28+80; //@line 6264 "xmlparse.c"
        var $30=$29+12; //@line 6264 "xmlparse.c"
        HEAP[$30]=$27; //@line 6264 "xmlparse.c"
        __label__ = 8; break; //@line 6264 "xmlparse.c"
      case 6: // $bb5
        var $31=$25+12; //@line 6266 "xmlparse.c"
        var $32=HEAP[$31]; //@line 6266 "xmlparse.c"
        var $33=$dtd; //@line 6266 "xmlparse.c"
        var $34=$33+80; //@line 6266 "xmlparse.c"
        var $35=$34+16; //@line 6266 "xmlparse.c"
        HEAP[$35]=$32; //@line 6266 "xmlparse.c"
        var $36=$parser_addr; //@line 6267 "xmlparse.c"
        var $37=$ret; //@line 6267 "xmlparse.c"
        var $38=_setElementTypePrefix($36, $37); //@line 6267 "xmlparse.c"
        var $39=($38)==0; //@line 6267 "xmlparse.c"
        if ($39) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 6267 "xmlparse.c"
      case 7: // $bb6
        $0=0; //@line 6268 "xmlparse.c"
        __label__ = 9; break; //@line 6268 "xmlparse.c"
      case 8: // $bb7
        var $40=$ret; //@line 6270 "xmlparse.c"
        $0=$40; //@line 6270 "xmlparse.c"
        __label__ = 9; break; //@line 6270 "xmlparse.c"
      case 9: // $bb8
        var $41=$0; //@line 6259 "xmlparse.c"
        $retval=$41; //@line 6259 "xmlparse.c"
        var $retval9=$retval; //@line 6259 "xmlparse.c"
        ;
        return $retval9; //@line 6259 "xmlparse.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _prolog0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 128 "xmlrole.c"
        if ($2 == 11) {
          __label__ = 3; break;
        }
        else if ($2 == 12) {
          __label__ = 2; break;
        }
        else if ($2 == 13) {
          __label__ = 4; break;
        }
        else if ($2 == 14) {
          __label__ = 5; break;
        }
        else if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 16) {
          __label__ = 6; break;
        }
        else if ($2 == 29) {
          __label__ = 8; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 1: // $bb
        var $3=$state_addr; //@line 130 "xmlrole.c"
        var $4=$3; //@line 130 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 72); //@line 130 "xmlrole.c"
        $1=0; //@line 131 "xmlrole.c"
        __label__ = 10; break; //@line 131 "xmlrole.c"
      case 2: // $bb1
        var $5=$state_addr; //@line 133 "xmlrole.c"
        var $6=$5; //@line 133 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 72); //@line 133 "xmlrole.c"
        $1=1; //@line 134 "xmlrole.c"
        __label__ = 10; break; //@line 134 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 136 "xmlrole.c"
        var $8=$7; //@line 136 "xmlrole.c"
        HEAP[$8]=(FUNCTION_TABLE_OFFSET + 72); //@line 136 "xmlrole.c"
        $1=55; //@line 137 "xmlrole.c"
        __label__ = 10; break; //@line 137 "xmlrole.c"
      case 4: // $bb3
        var $9=$state_addr; //@line 139 "xmlrole.c"
        var $10=$9; //@line 139 "xmlrole.c"
        HEAP[$10]=(FUNCTION_TABLE_OFFSET + 72); //@line 139 "xmlrole.c"
        $1=56; //@line 140 "xmlrole.c"
        __label__ = 10; break; //@line 140 "xmlrole.c"
      case 5: // $bb4
        $1=0; //@line 142 "xmlrole.c"
        __label__ = 10; break; //@line 142 "xmlrole.c"
      case 6: // $bb5
        var $11=$enc_addr; //@line 144 "xmlrole.c"
        var $12=$11+24; //@line 144 "xmlrole.c"
        var $13=HEAP[$12]; //@line 144 "xmlrole.c"
        var $14=$enc_addr; //@line 144 "xmlrole.c"
        var $15=$14+64; //@line 144 "xmlrole.c"
        var $16=HEAP[$15]; //@line 144 "xmlrole.c"
        var $17=($16) * 2; //@line 144 "xmlrole.c"
        var $18=$ptr_addr; //@line 144 "xmlrole.c"
        var $19=$18+$17; //@line 144 "xmlrole.c"
        var $20=$enc_addr; //@line 144 "xmlrole.c"
        var $21=$end_addr; //@line 144 "xmlrole.c"
        var $22=FUNCTION_TABLE[$13]($20, $19, $21, _KW_DOCTYPE); //@line 144 "xmlrole.c"
        var $23=($22)==0; //@line 144 "xmlrole.c"
        if ($23) { __label__ = 9; break; } else { __label__ = 7; break; } //@line 144 "xmlrole.c"
      case 7: // $bb6
        var $24=$state_addr; //@line 149 "xmlrole.c"
        var $25=$24; //@line 149 "xmlrole.c"
        HEAP[$25]=(FUNCTION_TABLE_OFFSET + 74); //@line 149 "xmlrole.c"
        $1=3; //@line 150 "xmlrole.c"
        __label__ = 10; break; //@line 150 "xmlrole.c"
      case 8: // $bb7
        var $26=$state_addr; //@line 152 "xmlrole.c"
        var $27=$26; //@line 152 "xmlrole.c"
        HEAP[$27]=(FUNCTION_TABLE_OFFSET + 76); //@line 152 "xmlrole.c"
        $1=2; //@line 153 "xmlrole.c"
        __label__ = 10; break; //@line 153 "xmlrole.c"
      case 9: // $bb8
        var $28=$state_addr; //@line 155 "xmlrole.c"
        $state_addr_i=$28;
        var $29=$state_addr_i; //@line 1305 "xmlrole.c"
        var $30=$29; //@line 1305 "xmlrole.c"
        HEAP[$30]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $31=$0; //@line 1306 "xmlrole.c"
        $retval_i=$31; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 155 "xmlrole.c"
        __label__ = 10; break; //@line 155 "xmlrole.c"
      case 10: // $bb9
        var $32=$1; //@line 131 "xmlrole.c"
        $retval=$32; //@line 131 "xmlrole.c"
        var $retval10=$retval; //@line 131 "xmlrole.c"
        ;
        return $retval10; //@line 131 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _prolog1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 165 "xmlrole.c"
        if ($2 == 11) {
          __label__ = 2; break;
        }
        else if ($2 == 13) {
          __label__ = 3; break;
        }
        else if ($2 == 14) {
          __label__ = 4; break;
        }
        else if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 16) {
          __label__ = 5; break;
        }
        else if ($2 == 29) {
          __label__ = 7; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 1: // $bb
        $1=0; //@line 167 "xmlrole.c"
        __label__ = 9; break; //@line 167 "xmlrole.c"
      case 2: // $bb1
        $1=55; //@line 169 "xmlrole.c"
        __label__ = 9; break; //@line 169 "xmlrole.c"
      case 3: // $bb2
        $1=56; //@line 171 "xmlrole.c"
        __label__ = 9; break; //@line 171 "xmlrole.c"
      case 4: // $bb3
        $1=0; //@line 173 "xmlrole.c"
        __label__ = 9; break; //@line 173 "xmlrole.c"
      case 5: // $bb4
        var $3=$enc_addr; //@line 175 "xmlrole.c"
        var $4=$3+24; //@line 175 "xmlrole.c"
        var $5=HEAP[$4]; //@line 175 "xmlrole.c"
        var $6=$enc_addr; //@line 175 "xmlrole.c"
        var $7=$6+64; //@line 175 "xmlrole.c"
        var $8=HEAP[$7]; //@line 175 "xmlrole.c"
        var $9=($8) * 2; //@line 175 "xmlrole.c"
        var $10=$ptr_addr; //@line 175 "xmlrole.c"
        var $11=$10+$9; //@line 175 "xmlrole.c"
        var $12=$enc_addr; //@line 175 "xmlrole.c"
        var $13=$end_addr; //@line 175 "xmlrole.c"
        var $14=FUNCTION_TABLE[$5]($12, $11, $13, _KW_DOCTYPE); //@line 175 "xmlrole.c"
        var $15=($14)==0; //@line 175 "xmlrole.c"
        if ($15) { __label__ = 8; break; } else { __label__ = 6; break; } //@line 175 "xmlrole.c"
      case 6: // $bb5
        var $16=$state_addr; //@line 180 "xmlrole.c"
        var $17=$16; //@line 180 "xmlrole.c"
        HEAP[$17]=(FUNCTION_TABLE_OFFSET + 74); //@line 180 "xmlrole.c"
        $1=3; //@line 181 "xmlrole.c"
        __label__ = 9; break; //@line 181 "xmlrole.c"
      case 7: // $bb6
        var $18=$state_addr; //@line 183 "xmlrole.c"
        var $19=$18; //@line 183 "xmlrole.c"
        HEAP[$19]=(FUNCTION_TABLE_OFFSET + 76); //@line 183 "xmlrole.c"
        $1=2; //@line 184 "xmlrole.c"
        __label__ = 9; break; //@line 184 "xmlrole.c"
      case 8: // $bb7
        var $20=$state_addr; //@line 186 "xmlrole.c"
        $state_addr_i=$20;
        var $21=$state_addr_i; //@line 1305 "xmlrole.c"
        var $22=$21; //@line 1305 "xmlrole.c"
        HEAP[$22]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $23=$0; //@line 1306 "xmlrole.c"
        $retval_i=$23; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 186 "xmlrole.c"
        __label__ = 9; break; //@line 186 "xmlrole.c"
      case 9: // $bb8
        var $24=$1; //@line 167 "xmlrole.c"
        $retval=$24; //@line 167 "xmlrole.c"
        var $retval9=$retval; //@line 167 "xmlrole.c"
        ;
        return $retval9; //@line 167 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _prolog2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 196 "xmlrole.c"
        if ($2 == 11) {
          __label__ = 2; break;
        }
        else if ($2 == 13) {
          __label__ = 3; break;
        }
        else if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 29) {
          __label__ = 4; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 1: // $bb
        $1=0; //@line 198 "xmlrole.c"
        __label__ = 6; break; //@line 198 "xmlrole.c"
      case 2: // $bb1
        $1=55; //@line 200 "xmlrole.c"
        __label__ = 6; break; //@line 200 "xmlrole.c"
      case 3: // $bb2
        $1=56; //@line 202 "xmlrole.c"
        __label__ = 6; break; //@line 202 "xmlrole.c"
      case 4: // $bb3
        var $3=$state_addr; //@line 204 "xmlrole.c"
        var $4=$3; //@line 204 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 76); //@line 204 "xmlrole.c"
        $1=2; //@line 205 "xmlrole.c"
        __label__ = 6; break; //@line 205 "xmlrole.c"
      case 5: // $bb4
        var $5=$state_addr; //@line 207 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 207 "xmlrole.c"
        __label__ = 6; break; //@line 207 "xmlrole.c"
      case 6: // $bb5
        var $9=$1; //@line 198 "xmlrole.c"
        $retval=$9; //@line 198 "xmlrole.c"
        var $retval6=$retval; //@line 198 "xmlrole.c"
        ;
        return $retval6; //@line 198 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 217 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 41) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=3; //@line 219 "xmlrole.c"
        __label__ = 4; break; //@line 219 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 222 "xmlrole.c"
        var $4=$3; //@line 222 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 78); //@line 222 "xmlrole.c"
        $1=4; //@line 223 "xmlrole.c"
        __label__ = 4; break; //@line 223 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 225 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 225 "xmlrole.c"
        __label__ = 4; break; //@line 225 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 219 "xmlrole.c"
        $retval=$9; //@line 219 "xmlrole.c"
        var $retval4=$retval; //@line 219 "xmlrole.c"
        ;
        return $retval4; //@line 219 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 235 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 3; break;
        }
        else if ($2 == 18) {
          __label__ = 4; break;
        }
        else if ($2 == 25) {
          __label__ = 2; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 1: // $bb
        $1=3; //@line 237 "xmlrole.c"
        __label__ = 9; break; //@line 237 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 239 "xmlrole.c"
        var $4=$3; //@line 239 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 80); //@line 239 "xmlrole.c"
        $1=7; //@line 240 "xmlrole.c"
        __label__ = 9; break; //@line 240 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 242 "xmlrole.c"
        var $6=$5; //@line 242 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 82); //@line 242 "xmlrole.c"
        $1=8; //@line 243 "xmlrole.c"
        __label__ = 9; break; //@line 243 "xmlrole.c"
      case 4: // $bb3
        var $7=$enc_addr; //@line 245 "xmlrole.c"
        var $8=$7+24; //@line 245 "xmlrole.c"
        var $9=HEAP[$8]; //@line 245 "xmlrole.c"
        var $10=$enc_addr; //@line 245 "xmlrole.c"
        var $11=$ptr_addr; //@line 245 "xmlrole.c"
        var $12=$end_addr; //@line 245 "xmlrole.c"
        var $13=FUNCTION_TABLE[$9]($10, $11, $12, _KW_SYSTEM); //@line 245 "xmlrole.c"
        var $14=($13)!=0; //@line 245 "xmlrole.c"
        if ($14) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 245 "xmlrole.c"
      case 5: // $bb4
        var $15=$state_addr; //@line 246 "xmlrole.c"
        var $16=$15; //@line 246 "xmlrole.c"
        HEAP[$16]=(FUNCTION_TABLE_OFFSET + 84); //@line 246 "xmlrole.c"
        $1=3; //@line 247 "xmlrole.c"
        __label__ = 9; break; //@line 247 "xmlrole.c"
      case 6: // $bb5
        var $17=$enc_addr; //@line 249 "xmlrole.c"
        var $18=$17+24; //@line 249 "xmlrole.c"
        var $19=HEAP[$18]; //@line 249 "xmlrole.c"
        var $20=$enc_addr; //@line 249 "xmlrole.c"
        var $21=$ptr_addr; //@line 249 "xmlrole.c"
        var $22=$end_addr; //@line 249 "xmlrole.c"
        var $23=FUNCTION_TABLE[$19]($20, $21, $22, _KW_PUBLIC); //@line 249 "xmlrole.c"
        var $24=($23)!=0; //@line 249 "xmlrole.c"
        if ($24) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 249 "xmlrole.c"
      case 7: // $bb6
        var $25=$state_addr; //@line 250 "xmlrole.c"
        var $26=$25; //@line 250 "xmlrole.c"
        HEAP[$26]=(FUNCTION_TABLE_OFFSET + 86); //@line 250 "xmlrole.c"
        $1=3; //@line 251 "xmlrole.c"
        __label__ = 9; break; //@line 251 "xmlrole.c"
      case 8: // $bb7
        var $27=$state_addr; //@line 255 "xmlrole.c"
        $state_addr_i=$27;
        var $28=$state_addr_i; //@line 1305 "xmlrole.c"
        var $29=$28; //@line 1305 "xmlrole.c"
        HEAP[$29]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $30=$0; //@line 1306 "xmlrole.c"
        $retval_i=$30; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 255 "xmlrole.c"
        __label__ = 9; break; //@line 255 "xmlrole.c"
      case 9: // $bb8
        var $31=$1; //@line 237 "xmlrole.c"
        $retval=$31; //@line 237 "xmlrole.c"
        var $retval9=$retval; //@line 237 "xmlrole.c"
        ;
        return $retval9; //@line 237 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 265 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=3; //@line 267 "xmlrole.c"
        __label__ = 4; break; //@line 267 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 269 "xmlrole.c"
        var $4=$3; //@line 269 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 84); //@line 269 "xmlrole.c"
        $1=6; //@line 270 "xmlrole.c"
        __label__ = 4; break; //@line 270 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 272 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 272 "xmlrole.c"
        __label__ = 4; break; //@line 272 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 267 "xmlrole.c"
        $retval=$9; //@line 267 "xmlrole.c"
        var $retval4=$retval; //@line 267 "xmlrole.c"
        ;
        return $retval4; //@line 267 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype3($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 282 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=3; //@line 284 "xmlrole.c"
        __label__ = 4; break; //@line 284 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 286 "xmlrole.c"
        var $4=$3; //@line 286 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 88); //@line 286 "xmlrole.c"
        $1=5; //@line 287 "xmlrole.c"
        __label__ = 4; break; //@line 287 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 289 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 289 "xmlrole.c"
        __label__ = 4; break; //@line 289 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 284 "xmlrole.c"
        $retval=$9; //@line 284 "xmlrole.c"
        var $retval4=$retval; //@line 284 "xmlrole.c"
        ;
        return $retval4; //@line 284 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype4($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 299 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 3; break;
        }
        else if ($2 == 25) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=3; //@line 301 "xmlrole.c"
        __label__ = 5; break; //@line 301 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 303 "xmlrole.c"
        var $4=$3; //@line 303 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 80); //@line 303 "xmlrole.c"
        $1=7; //@line 304 "xmlrole.c"
        __label__ = 5; break; //@line 304 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 306 "xmlrole.c"
        var $6=$5; //@line 306 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 82); //@line 306 "xmlrole.c"
        $1=8; //@line 307 "xmlrole.c"
        __label__ = 5; break; //@line 307 "xmlrole.c"
      case 4: // $bb3
        var $7=$state_addr; //@line 309 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 309 "xmlrole.c"
        __label__ = 5; break; //@line 309 "xmlrole.c"
      case 5: // $bb4
        var $11=$1; //@line 301 "xmlrole.c"
        $retval=$11; //@line 301 "xmlrole.c"
        var $retval5=$retval; //@line 301 "xmlrole.c"
        ;
        return $retval5; //@line 301 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _doctype5($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 319 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=3; //@line 321 "xmlrole.c"
        __label__ = 4; break; //@line 321 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 323 "xmlrole.c"
        var $4=$3; //@line 323 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 82); //@line 323 "xmlrole.c"
        $1=8; //@line 324 "xmlrole.c"
        __label__ = 4; break; //@line 324 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 326 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 326 "xmlrole.c"
        __label__ = 4; break; //@line 326 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 321 "xmlrole.c"
        $retval=$9; //@line 321 "xmlrole.c"
        var $retval4=$retval; //@line 321 "xmlrole.c"
        ;
        return $retval4; //@line 321 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _internalSubset($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 336 "xmlrole.c"
        if ($2 == -4) {
          __label__ = 14; break;
        }
        else if ($2 == 11) {
          __label__ = 10; break;
        }
        else if ($2 == 13) {
          __label__ = 11; break;
        }
        else if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 16) {
          __label__ = 2; break;
        }
        else if ($2 == 26) {
          __label__ = 13; break;
        }
        else if ($2 == 28) {
          __label__ = 12; break;
        }
        else {
        __label__ = 15; break;
        }
        
      case 1: // $bb
        $1=0; //@line 338 "xmlrole.c"
        __label__ = 16; break; //@line 338 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 340 "xmlrole.c"
        var $4=$3+24; //@line 340 "xmlrole.c"
        var $5=HEAP[$4]; //@line 340 "xmlrole.c"
        var $6=$enc_addr; //@line 340 "xmlrole.c"
        var $7=$6+64; //@line 340 "xmlrole.c"
        var $8=HEAP[$7]; //@line 340 "xmlrole.c"
        var $9=($8) * 2; //@line 340 "xmlrole.c"
        var $10=$ptr_addr; //@line 340 "xmlrole.c"
        var $11=$10+$9; //@line 340 "xmlrole.c"
        var $12=$enc_addr; //@line 340 "xmlrole.c"
        var $13=$end_addr; //@line 340 "xmlrole.c"
        var $14=FUNCTION_TABLE[$5]($12, $11, $13, _KW_ENTITY); //@line 340 "xmlrole.c"
        var $15=($14)!=0; //@line 340 "xmlrole.c"
        if ($15) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 340 "xmlrole.c"
      case 3: // $bb2
        var $16=$state_addr; //@line 344 "xmlrole.c"
        var $17=$16; //@line 344 "xmlrole.c"
        HEAP[$17]=(FUNCTION_TABLE_OFFSET + 90); //@line 344 "xmlrole.c"
        $1=11; //@line 345 "xmlrole.c"
        __label__ = 16; break; //@line 345 "xmlrole.c"
      case 4: // $bb3
        var $18=$enc_addr; //@line 347 "xmlrole.c"
        var $19=$18+24; //@line 347 "xmlrole.c"
        var $20=HEAP[$19]; //@line 347 "xmlrole.c"
        var $21=$enc_addr; //@line 347 "xmlrole.c"
        var $22=$21+64; //@line 347 "xmlrole.c"
        var $23=HEAP[$22]; //@line 347 "xmlrole.c"
        var $24=($23) * 2; //@line 347 "xmlrole.c"
        var $25=$ptr_addr; //@line 347 "xmlrole.c"
        var $26=$25+$24; //@line 347 "xmlrole.c"
        var $27=$enc_addr; //@line 347 "xmlrole.c"
        var $28=$end_addr; //@line 347 "xmlrole.c"
        var $29=FUNCTION_TABLE[$20]($27, $26, $28, _KW_ATTLIST); //@line 347 "xmlrole.c"
        var $30=($29)!=0; //@line 347 "xmlrole.c"
        if ($30) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 347 "xmlrole.c"
      case 5: // $bb4
        var $31=$state_addr; //@line 351 "xmlrole.c"
        var $32=$31; //@line 351 "xmlrole.c"
        HEAP[$32]=(FUNCTION_TABLE_OFFSET + 92); //@line 351 "xmlrole.c"
        $1=33; //@line 352 "xmlrole.c"
        __label__ = 16; break; //@line 352 "xmlrole.c"
      case 6: // $bb5
        var $33=$enc_addr; //@line 354 "xmlrole.c"
        var $34=$33+24; //@line 354 "xmlrole.c"
        var $35=HEAP[$34]; //@line 354 "xmlrole.c"
        var $36=$enc_addr; //@line 354 "xmlrole.c"
        var $37=$36+64; //@line 354 "xmlrole.c"
        var $38=HEAP[$37]; //@line 354 "xmlrole.c"
        var $39=($38) * 2; //@line 354 "xmlrole.c"
        var $40=$ptr_addr; //@line 354 "xmlrole.c"
        var $41=$40+$39; //@line 354 "xmlrole.c"
        var $42=$enc_addr; //@line 354 "xmlrole.c"
        var $43=$end_addr; //@line 354 "xmlrole.c"
        var $44=FUNCTION_TABLE[$35]($42, $41, $43, _KW_ELEMENT); //@line 354 "xmlrole.c"
        var $45=($44)!=0; //@line 354 "xmlrole.c"
        if ($45) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 354 "xmlrole.c"
      case 7: // $bb6
        var $46=$state_addr; //@line 358 "xmlrole.c"
        var $47=$46; //@line 358 "xmlrole.c"
        HEAP[$47]=(FUNCTION_TABLE_OFFSET + 94); //@line 358 "xmlrole.c"
        $1=39; //@line 359 "xmlrole.c"
        __label__ = 16; break; //@line 359 "xmlrole.c"
      case 8: // $bb7
        var $48=$enc_addr; //@line 361 "xmlrole.c"
        var $49=$48+24; //@line 361 "xmlrole.c"
        var $50=HEAP[$49]; //@line 361 "xmlrole.c"
        var $51=$enc_addr; //@line 361 "xmlrole.c"
        var $52=$51+64; //@line 361 "xmlrole.c"
        var $53=HEAP[$52]; //@line 361 "xmlrole.c"
        var $54=($53) * 2; //@line 361 "xmlrole.c"
        var $55=$ptr_addr; //@line 361 "xmlrole.c"
        var $56=$55+$54; //@line 361 "xmlrole.c"
        var $57=$enc_addr; //@line 361 "xmlrole.c"
        var $58=$end_addr; //@line 361 "xmlrole.c"
        var $59=FUNCTION_TABLE[$50]($57, $56, $58, _KW_NOTATION); //@line 361 "xmlrole.c"
        var $60=($59)!=0; //@line 361 "xmlrole.c"
        if ($60) { __label__ = 9; break; } else { __label__ = 15; break; } //@line 361 "xmlrole.c"
      case 9: // $bb8
        var $61=$state_addr; //@line 365 "xmlrole.c"
        var $62=$61; //@line 365 "xmlrole.c"
        HEAP[$62]=(FUNCTION_TABLE_OFFSET + 96); //@line 365 "xmlrole.c"
        $1=17; //@line 366 "xmlrole.c"
        __label__ = 16; break; //@line 366 "xmlrole.c"
      case 10: // $bb10
        $1=55; //@line 370 "xmlrole.c"
        __label__ = 16; break; //@line 370 "xmlrole.c"
      case 11: // $bb11
        $1=56; //@line 372 "xmlrole.c"
        __label__ = 16; break; //@line 372 "xmlrole.c"
      case 12: // $bb12
        $1=57; //@line 374 "xmlrole.c"
        __label__ = 16; break; //@line 374 "xmlrole.c"
      case 13: // $bb13
        var $63=$state_addr; //@line 376 "xmlrole.c"
        var $64=$63; //@line 376 "xmlrole.c"
        HEAP[$64]=(FUNCTION_TABLE_OFFSET + 98); //@line 376 "xmlrole.c"
        $1=3; //@line 377 "xmlrole.c"
        __label__ = 16; break; //@line 377 "xmlrole.c"
      case 14: // $bb14
        $1=0; //@line 379 "xmlrole.c"
        __label__ = 16; break; //@line 379 "xmlrole.c"
      case 15: // $bb15
        var $65=$state_addr; //@line 381 "xmlrole.c"
        $state_addr_i=$65;
        var $66=$state_addr_i; //@line 1305 "xmlrole.c"
        var $67=$66; //@line 1305 "xmlrole.c"
        HEAP[$67]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $68=$0; //@line 1306 "xmlrole.c"
        $retval_i=$68; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 381 "xmlrole.c"
        __label__ = 16; break; //@line 381 "xmlrole.c"
      case 16: // $bb16
        var $69=$1; //@line 338 "xmlrole.c"
        $retval=$69; //@line 338 "xmlrole.c"
        var $retval17=$retval; //@line 338 "xmlrole.c"
        ;
        return $retval17; //@line 338 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 438 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 3; break;
        }
        else if ($2 == 22) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=11; //@line 440 "xmlrole.c"
        __label__ = 5; break; //@line 440 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 442 "xmlrole.c"
        var $4=$3; //@line 442 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 100); //@line 442 "xmlrole.c"
        $1=11; //@line 443 "xmlrole.c"
        __label__ = 5; break; //@line 443 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 445 "xmlrole.c"
        var $6=$5; //@line 445 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 102); //@line 445 "xmlrole.c"
        $1=9; //@line 446 "xmlrole.c"
        __label__ = 5; break; //@line 446 "xmlrole.c"
      case 4: // $bb3
        var $7=$state_addr; //@line 448 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 448 "xmlrole.c"
        __label__ = 5; break; //@line 448 "xmlrole.c"
      case 5: // $bb4
        var $11=$1; //@line 440 "xmlrole.c"
        $retval=$11; //@line 440 "xmlrole.c"
        var $retval5=$retval; //@line 440 "xmlrole.c"
        ;
        return $retval5; //@line 440 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 458 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 460 "xmlrole.c"
        __label__ = 4; break; //@line 460 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 462 "xmlrole.c"
        var $4=$3; //@line 462 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 104); //@line 462 "xmlrole.c"
        $1=10; //@line 463 "xmlrole.c"
        __label__ = 4; break; //@line 463 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 465 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 465 "xmlrole.c"
        __label__ = 4; break; //@line 465 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 460 "xmlrole.c"
        $retval=$9; //@line 460 "xmlrole.c"
        var $retval4=$retval; //@line 460 "xmlrole.c"
        ;
        return $retval4; //@line 460 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 475 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 27) {
          __label__ = 6; break;
        }
        else {
        __label__ = 7; break;
        }
        
      case 1: // $bb
        $1=11; //@line 477 "xmlrole.c"
        __label__ = 8; break; //@line 477 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 479 "xmlrole.c"
        var $4=$3+24; //@line 479 "xmlrole.c"
        var $5=HEAP[$4]; //@line 479 "xmlrole.c"
        var $6=$enc_addr; //@line 479 "xmlrole.c"
        var $7=$ptr_addr; //@line 479 "xmlrole.c"
        var $8=$end_addr; //@line 479 "xmlrole.c"
        var $9=FUNCTION_TABLE[$5]($6, $7, $8, _KW_SYSTEM); //@line 479 "xmlrole.c"
        var $10=($9)!=0; //@line 479 "xmlrole.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 479 "xmlrole.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 480 "xmlrole.c"
        var $12=$11; //@line 480 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 106); //@line 480 "xmlrole.c"
        $1=11; //@line 481 "xmlrole.c"
        __label__ = 8; break; //@line 481 "xmlrole.c"
      case 4: // $bb3
        var $13=$enc_addr; //@line 483 "xmlrole.c"
        var $14=$13+24; //@line 483 "xmlrole.c"
        var $15=HEAP[$14]; //@line 483 "xmlrole.c"
        var $16=$enc_addr; //@line 483 "xmlrole.c"
        var $17=$ptr_addr; //@line 483 "xmlrole.c"
        var $18=$end_addr; //@line 483 "xmlrole.c"
        var $19=FUNCTION_TABLE[$15]($16, $17, $18, _KW_PUBLIC); //@line 483 "xmlrole.c"
        var $20=($19)!=0; //@line 483 "xmlrole.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 483 "xmlrole.c"
      case 5: // $bb4
        var $21=$state_addr; //@line 484 "xmlrole.c"
        var $22=$21; //@line 484 "xmlrole.c"
        HEAP[$22]=(FUNCTION_TABLE_OFFSET + 108); //@line 484 "xmlrole.c"
        $1=11; //@line 485 "xmlrole.c"
        __label__ = 8; break; //@line 485 "xmlrole.c"
      case 6: // $bb6
        var $23=$state_addr; //@line 489 "xmlrole.c"
        var $24=$23; //@line 489 "xmlrole.c"
        HEAP[$24]=(FUNCTION_TABLE_OFFSET + 110); //@line 489 "xmlrole.c"
        var $25=$state_addr; //@line 490 "xmlrole.c"
        var $26=$25+8; //@line 490 "xmlrole.c"
        HEAP[$26]=11; //@line 490 "xmlrole.c"
        $1=12; //@line 491 "xmlrole.c"
        __label__ = 8; break; //@line 491 "xmlrole.c"
      case 7: // $bb7
        var $27=$state_addr; //@line 493 "xmlrole.c"
        $state_addr_i=$27;
        var $28=$state_addr_i; //@line 1305 "xmlrole.c"
        var $29=$28; //@line 1305 "xmlrole.c"
        HEAP[$29]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $30=$0; //@line 1306 "xmlrole.c"
        $retval_i=$30; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 493 "xmlrole.c"
        __label__ = 8; break; //@line 493 "xmlrole.c"
      case 8: // $bb8
        var $31=$1; //@line 477 "xmlrole.c"
        $retval=$31; //@line 477 "xmlrole.c"
        var $retval9=$retval; //@line 477 "xmlrole.c"
        ;
        return $retval9; //@line 477 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity3($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 503 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 505 "xmlrole.c"
        __label__ = 4; break; //@line 505 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 507 "xmlrole.c"
        var $4=$3; //@line 507 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 106); //@line 507 "xmlrole.c"
        $1=14; //@line 508 "xmlrole.c"
        __label__ = 4; break; //@line 508 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 510 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 510 "xmlrole.c"
        __label__ = 4; break; //@line 510 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 505 "xmlrole.c"
        $retval=$9; //@line 505 "xmlrole.c"
        var $retval4=$retval; //@line 505 "xmlrole.c"
        ;
        return $retval4; //@line 505 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity4($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 520 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 522 "xmlrole.c"
        __label__ = 4; break; //@line 522 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 524 "xmlrole.c"
        var $4=$3; //@line 524 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 112); //@line 524 "xmlrole.c"
        $1=13; //@line 525 "xmlrole.c"
        __label__ = 4; break; //@line 525 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 527 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 527 "xmlrole.c"
        __label__ = 4; break; //@line 527 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 522 "xmlrole.c"
        $retval=$9; //@line 522 "xmlrole.c"
        var $retval4=$retval; //@line 522 "xmlrole.c"
        ;
        return $retval4; //@line 522 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity5($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 537 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 2; break;
        }
        else if ($2 == 18) {
          __label__ = 3; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 1: // $bb
        $1=11; //@line 539 "xmlrole.c"
        __label__ = 6; break; //@line 539 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 541 "xmlrole.c"
        var $4=$3; //@line 541 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 80); //@line 541 "xmlrole.c"
        $1=15; //@line 542 "xmlrole.c"
        __label__ = 6; break; //@line 542 "xmlrole.c"
      case 3: // $bb2
        var $5=$enc_addr; //@line 544 "xmlrole.c"
        var $6=$5+24; //@line 544 "xmlrole.c"
        var $7=HEAP[$6]; //@line 544 "xmlrole.c"
        var $8=$enc_addr; //@line 544 "xmlrole.c"
        var $9=$ptr_addr; //@line 544 "xmlrole.c"
        var $10=$end_addr; //@line 544 "xmlrole.c"
        var $11=FUNCTION_TABLE[$7]($8, $9, $10, _KW_NDATA); //@line 544 "xmlrole.c"
        var $12=($11)!=0; //@line 544 "xmlrole.c"
        if ($12) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 544 "xmlrole.c"
      case 4: // $bb3
        var $13=$state_addr; //@line 545 "xmlrole.c"
        var $14=$13; //@line 545 "xmlrole.c"
        HEAP[$14]=(FUNCTION_TABLE_OFFSET + 114); //@line 545 "xmlrole.c"
        $1=11; //@line 546 "xmlrole.c"
        __label__ = 6; break; //@line 546 "xmlrole.c"
      case 5: // $bb4
        var $15=$state_addr; //@line 550 "xmlrole.c"
        $state_addr_i=$15;
        var $16=$state_addr_i; //@line 1305 "xmlrole.c"
        var $17=$16; //@line 1305 "xmlrole.c"
        HEAP[$17]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $18=$0; //@line 1306 "xmlrole.c"
        $retval_i=$18; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 550 "xmlrole.c"
        __label__ = 6; break; //@line 550 "xmlrole.c"
      case 6: // $bb5
        var $19=$1; //@line 539 "xmlrole.c"
        $retval=$19; //@line 539 "xmlrole.c"
        var $retval6=$retval; //@line 539 "xmlrole.c"
        ;
        return $retval6; //@line 539 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity6($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 560 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 562 "xmlrole.c"
        __label__ = 4; break; //@line 562 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 564 "xmlrole.c"
        var $4=$3; //@line 564 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 110); //@line 564 "xmlrole.c"
        var $5=$state_addr; //@line 565 "xmlrole.c"
        var $6=$5+8; //@line 565 "xmlrole.c"
        HEAP[$6]=11; //@line 565 "xmlrole.c"
        $1=16; //@line 566 "xmlrole.c"
        __label__ = 4; break; //@line 566 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 568 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 568 "xmlrole.c"
        __label__ = 4; break; //@line 568 "xmlrole.c"
      case 4: // $bb3
        var $11=$1; //@line 562 "xmlrole.c"
        $retval=$11; //@line 562 "xmlrole.c"
        var $retval4=$retval; //@line 562 "xmlrole.c"
        ;
        return $retval4; //@line 562 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity7($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 578 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 27) {
          __label__ = 6; break;
        }
        else {
        __label__ = 7; break;
        }
        
      case 1: // $bb
        $1=11; //@line 580 "xmlrole.c"
        __label__ = 8; break; //@line 580 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 582 "xmlrole.c"
        var $4=$3+24; //@line 582 "xmlrole.c"
        var $5=HEAP[$4]; //@line 582 "xmlrole.c"
        var $6=$enc_addr; //@line 582 "xmlrole.c"
        var $7=$ptr_addr; //@line 582 "xmlrole.c"
        var $8=$end_addr; //@line 582 "xmlrole.c"
        var $9=FUNCTION_TABLE[$5]($6, $7, $8, _KW_SYSTEM); //@line 582 "xmlrole.c"
        var $10=($9)!=0; //@line 582 "xmlrole.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 582 "xmlrole.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 583 "xmlrole.c"
        var $12=$11; //@line 583 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 116); //@line 583 "xmlrole.c"
        $1=11; //@line 584 "xmlrole.c"
        __label__ = 8; break; //@line 584 "xmlrole.c"
      case 4: // $bb3
        var $13=$enc_addr; //@line 586 "xmlrole.c"
        var $14=$13+24; //@line 586 "xmlrole.c"
        var $15=HEAP[$14]; //@line 586 "xmlrole.c"
        var $16=$enc_addr; //@line 586 "xmlrole.c"
        var $17=$ptr_addr; //@line 586 "xmlrole.c"
        var $18=$end_addr; //@line 586 "xmlrole.c"
        var $19=FUNCTION_TABLE[$15]($16, $17, $18, _KW_PUBLIC); //@line 586 "xmlrole.c"
        var $20=($19)!=0; //@line 586 "xmlrole.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 586 "xmlrole.c"
      case 5: // $bb4
        var $21=$state_addr; //@line 587 "xmlrole.c"
        var $22=$21; //@line 587 "xmlrole.c"
        HEAP[$22]=(FUNCTION_TABLE_OFFSET + 118); //@line 587 "xmlrole.c"
        $1=11; //@line 588 "xmlrole.c"
        __label__ = 8; break; //@line 588 "xmlrole.c"
      case 6: // $bb6
        var $23=$state_addr; //@line 592 "xmlrole.c"
        var $24=$23; //@line 592 "xmlrole.c"
        HEAP[$24]=(FUNCTION_TABLE_OFFSET + 110); //@line 592 "xmlrole.c"
        var $25=$state_addr; //@line 593 "xmlrole.c"
        var $26=$25+8; //@line 593 "xmlrole.c"
        HEAP[$26]=11; //@line 593 "xmlrole.c"
        $1=12; //@line 594 "xmlrole.c"
        __label__ = 8; break; //@line 594 "xmlrole.c"
      case 7: // $bb7
        var $27=$state_addr; //@line 596 "xmlrole.c"
        $state_addr_i=$27;
        var $28=$state_addr_i; //@line 1305 "xmlrole.c"
        var $29=$28; //@line 1305 "xmlrole.c"
        HEAP[$29]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $30=$0; //@line 1306 "xmlrole.c"
        $retval_i=$30; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 596 "xmlrole.c"
        __label__ = 8; break; //@line 596 "xmlrole.c"
      case 8: // $bb8
        var $31=$1; //@line 580 "xmlrole.c"
        $retval=$31; //@line 580 "xmlrole.c"
        var $retval9=$retval; //@line 580 "xmlrole.c"
        ;
        return $retval9; //@line 580 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity8($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 606 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 608 "xmlrole.c"
        __label__ = 4; break; //@line 608 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 610 "xmlrole.c"
        var $4=$3; //@line 610 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 116); //@line 610 "xmlrole.c"
        $1=14; //@line 611 "xmlrole.c"
        __label__ = 4; break; //@line 611 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 613 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 613 "xmlrole.c"
        __label__ = 4; break; //@line 613 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 608 "xmlrole.c"
        $retval=$9; //@line 608 "xmlrole.c"
        var $retval4=$retval; //@line 608 "xmlrole.c"
        ;
        return $retval4; //@line 608 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity9($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 623 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 625 "xmlrole.c"
        __label__ = 4; break; //@line 625 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 627 "xmlrole.c"
        var $4=$3; //@line 627 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 120); //@line 627 "xmlrole.c"
        $1=13; //@line 628 "xmlrole.c"
        __label__ = 4; break; //@line 628 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 630 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 630 "xmlrole.c"
        __label__ = 4; break; //@line 630 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 625 "xmlrole.c"
        $retval=$9; //@line 625 "xmlrole.c"
        var $retval4=$retval; //@line 625 "xmlrole.c"
        ;
        return $retval4; //@line 625 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _entity10($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 640 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=11; //@line 642 "xmlrole.c"
        __label__ = 4; break; //@line 642 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 644 "xmlrole.c"
        var $4=$3; //@line 644 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 80); //@line 644 "xmlrole.c"
        $1=15; //@line 645 "xmlrole.c"
        __label__ = 4; break; //@line 645 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 647 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 647 "xmlrole.c"
        __label__ = 4; break; //@line 647 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 642 "xmlrole.c"
        $retval=$9; //@line 642 "xmlrole.c"
        var $retval4=$retval; //@line 642 "xmlrole.c"
        ;
        return $retval4; //@line 642 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _notation0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 657 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=17; //@line 659 "xmlrole.c"
        __label__ = 4; break; //@line 659 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 661 "xmlrole.c"
        var $4=$3; //@line 661 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 122); //@line 661 "xmlrole.c"
        $1=18; //@line 662 "xmlrole.c"
        __label__ = 4; break; //@line 662 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 664 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 664 "xmlrole.c"
        __label__ = 4; break; //@line 664 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 659 "xmlrole.c"
        $retval=$9; //@line 659 "xmlrole.c"
        var $retval4=$retval; //@line 659 "xmlrole.c"
        ;
        return $retval4; //@line 659 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _notation1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 674 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 1: // $bb
        $1=17; //@line 676 "xmlrole.c"
        __label__ = 7; break; //@line 676 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 678 "xmlrole.c"
        var $4=$3+24; //@line 678 "xmlrole.c"
        var $5=HEAP[$4]; //@line 678 "xmlrole.c"
        var $6=$enc_addr; //@line 678 "xmlrole.c"
        var $7=$ptr_addr; //@line 678 "xmlrole.c"
        var $8=$end_addr; //@line 678 "xmlrole.c"
        var $9=FUNCTION_TABLE[$5]($6, $7, $8, _KW_SYSTEM); //@line 678 "xmlrole.c"
        var $10=($9)!=0; //@line 678 "xmlrole.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 678 "xmlrole.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 679 "xmlrole.c"
        var $12=$11; //@line 679 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 124); //@line 679 "xmlrole.c"
        $1=17; //@line 680 "xmlrole.c"
        __label__ = 7; break; //@line 680 "xmlrole.c"
      case 4: // $bb3
        var $13=$enc_addr; //@line 682 "xmlrole.c"
        var $14=$13+24; //@line 682 "xmlrole.c"
        var $15=HEAP[$14]; //@line 682 "xmlrole.c"
        var $16=$enc_addr; //@line 682 "xmlrole.c"
        var $17=$ptr_addr; //@line 682 "xmlrole.c"
        var $18=$end_addr; //@line 682 "xmlrole.c"
        var $19=FUNCTION_TABLE[$15]($16, $17, $18, _KW_PUBLIC); //@line 682 "xmlrole.c"
        var $20=($19)!=0; //@line 682 "xmlrole.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 682 "xmlrole.c"
      case 5: // $bb4
        var $21=$state_addr; //@line 683 "xmlrole.c"
        var $22=$21; //@line 683 "xmlrole.c"
        HEAP[$22]=(FUNCTION_TABLE_OFFSET + 126); //@line 683 "xmlrole.c"
        $1=17; //@line 684 "xmlrole.c"
        __label__ = 7; break; //@line 684 "xmlrole.c"
      case 6: // $bb5
        var $23=$state_addr; //@line 688 "xmlrole.c"
        $state_addr_i=$23;
        var $24=$state_addr_i; //@line 1305 "xmlrole.c"
        var $25=$24; //@line 1305 "xmlrole.c"
        HEAP[$25]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $26=$0; //@line 1306 "xmlrole.c"
        $retval_i=$26; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 688 "xmlrole.c"
        __label__ = 7; break; //@line 688 "xmlrole.c"
      case 7: // $bb6
        var $27=$1; //@line 676 "xmlrole.c"
        $retval=$27; //@line 676 "xmlrole.c"
        var $retval7=$retval; //@line 676 "xmlrole.c"
        ;
        return $retval7; //@line 676 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _notation2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 698 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=17; //@line 700 "xmlrole.c"
        __label__ = 4; break; //@line 700 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 702 "xmlrole.c"
        var $4=$3; //@line 702 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 128); //@line 702 "xmlrole.c"
        $1=21; //@line 703 "xmlrole.c"
        __label__ = 4; break; //@line 703 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 705 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 705 "xmlrole.c"
        __label__ = 4; break; //@line 705 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 700 "xmlrole.c"
        $retval=$9; //@line 700 "xmlrole.c"
        var $retval4=$retval; //@line 700 "xmlrole.c"
        ;
        return $retval4; //@line 700 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _notation3($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 715 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=17; //@line 717 "xmlrole.c"
        __label__ = 4; break; //@line 717 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 719 "xmlrole.c"
        var $4=$3; //@line 719 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 110); //@line 719 "xmlrole.c"
        var $5=$state_addr; //@line 720 "xmlrole.c"
        var $6=$5+8; //@line 720 "xmlrole.c"
        HEAP[$6]=17; //@line 720 "xmlrole.c"
        $1=19; //@line 721 "xmlrole.c"
        __label__ = 4; break; //@line 721 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 723 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 723 "xmlrole.c"
        __label__ = 4; break; //@line 723 "xmlrole.c"
      case 4: // $bb3
        var $11=$1; //@line 717 "xmlrole.c"
        $retval=$11; //@line 717 "xmlrole.c"
        var $retval4=$retval; //@line 717 "xmlrole.c"
        ;
        return $retval4; //@line 717 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _notation4($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 733 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 3; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=17; //@line 735 "xmlrole.c"
        __label__ = 5; break; //@line 735 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 737 "xmlrole.c"
        var $4=$3; //@line 737 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 110); //@line 737 "xmlrole.c"
        var $5=$state_addr; //@line 738 "xmlrole.c"
        var $6=$5+8; //@line 738 "xmlrole.c"
        HEAP[$6]=17; //@line 738 "xmlrole.c"
        $1=19; //@line 739 "xmlrole.c"
        __label__ = 5; break; //@line 739 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 741 "xmlrole.c"
        var $8=$7; //@line 741 "xmlrole.c"
        HEAP[$8]=(FUNCTION_TABLE_OFFSET + 80); //@line 741 "xmlrole.c"
        $1=20; //@line 742 "xmlrole.c"
        __label__ = 5; break; //@line 742 "xmlrole.c"
      case 4: // $bb3
        var $9=$state_addr; //@line 744 "xmlrole.c"
        $state_addr_i=$9;
        var $10=$state_addr_i; //@line 1305 "xmlrole.c"
        var $11=$10; //@line 1305 "xmlrole.c"
        HEAP[$11]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $12=$0; //@line 1306 "xmlrole.c"
        $retval_i=$12; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 744 "xmlrole.c"
        __label__ = 5; break; //@line 744 "xmlrole.c"
      case 5: // $bb4
        var $13=$1; //@line 735 "xmlrole.c"
        $retval=$13; //@line 735 "xmlrole.c"
        var $retval5=$retval; //@line 735 "xmlrole.c"
        ;
        return $retval5; //@line 735 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 754 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 41) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=33; //@line 756 "xmlrole.c"
        __label__ = 4; break; //@line 756 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 759 "xmlrole.c"
        var $4=$3; //@line 759 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 130); //@line 759 "xmlrole.c"
        $1=34; //@line 760 "xmlrole.c"
        __label__ = 4; break; //@line 760 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 762 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 762 "xmlrole.c"
        __label__ = 4; break; //@line 762 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 756 "xmlrole.c"
        $retval=$9; //@line 756 "xmlrole.c"
        var $retval4=$retval; //@line 756 "xmlrole.c"
        ;
        return $retval4; //@line 756 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 772 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 2; break;
        }
        else if ($2 == 18) {
          __label__ = 3; break;
        }
        else if ($2 == 41) {
          __label__ = 3; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=33; //@line 774 "xmlrole.c"
        __label__ = 5; break; //@line 774 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 776 "xmlrole.c"
        var $4=$3; //@line 776 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 80); //@line 776 "xmlrole.c"
        $1=33; //@line 777 "xmlrole.c"
        __label__ = 5; break; //@line 777 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 780 "xmlrole.c"
        var $6=$5; //@line 780 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 132); //@line 780 "xmlrole.c"
        $1=22; //@line 781 "xmlrole.c"
        __label__ = 5; break; //@line 781 "xmlrole.c"
      case 4: // $bb3
        var $7=$state_addr; //@line 783 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 783 "xmlrole.c"
        __label__ = 5; break; //@line 783 "xmlrole.c"
      case 5: // $bb4
        var $11=$1; //@line 774 "xmlrole.c"
        $retval=$11; //@line 774 "xmlrole.c"
        var $retval5=$retval; //@line 774 "xmlrole.c"
        ;
        return $retval5; //@line 774 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        var $i;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 793 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 23) {
          __label__ = 9; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 1: // $bb
        $1=33; //@line 795 "xmlrole.c"
        __label__ = 11; break; //@line 795 "xmlrole.c"
      case 2: // $bb1
        $i=0; //@line 809 "xmlrole.c"
        __lastLabel__ = 2; __label__ = 6; break; //@line 809 "xmlrole.c"
      case 3: // $bb2
        var $3=$i; //@line 810 "xmlrole.c"
        var $4=_types_1870+$3*4; //@line 810 "xmlrole.c"
        var $5=HEAP[$4]; //@line 810 "xmlrole.c"
        var $6=$enc_addr; //@line 810 "xmlrole.c"
        var $7=$ptr_addr; //@line 810 "xmlrole.c"
        var $8=$end_addr; //@line 810 "xmlrole.c"
        var $9=FUNCTION_TABLE[$21]($6, $7, $8, $5); //@line 810 "xmlrole.c"
        var $10=($9)!=0; //@line 810 "xmlrole.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 810 "xmlrole.c"
      case 4: // $bb3
        var $11=$state_addr; //@line 811 "xmlrole.c"
        var $12=$11; //@line 811 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 134); //@line 811 "xmlrole.c"
        var $13=$i; //@line 812 "xmlrole.c"
        var $14=($13) + 23; //@line 812 "xmlrole.c"
        $1=$14; //@line 812 "xmlrole.c"
        __label__ = 11; break; //@line 812 "xmlrole.c"
      case 5: // $bb4
        var $15=$i; //@line 809 "xmlrole.c"
        var $16=($15) + 1; //@line 809 "xmlrole.c"
        $i=$16; //@line 809 "xmlrole.c"
        __lastLabel__ = 5; __label__ = 6; break; //@line 809 "xmlrole.c"
      case 6: // $bb5
        var $17=__lastLabel__ == 5 ? $16 : (0);
        var $18=($17) <= 7; //@line 809 "xmlrole.c"
        var $19=$enc_addr; //@line 810 "xmlrole.c"
        var $20=$19+24; //@line 810 "xmlrole.c"
        var $21=HEAP[$20]; //@line 810 "xmlrole.c"
        if ($18) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 809 "xmlrole.c"
      case 7: // $bb6
        var $22=$enc_addr; //@line 815 "xmlrole.c"
        var $23=$ptr_addr; //@line 815 "xmlrole.c"
        var $24=$end_addr; //@line 815 "xmlrole.c"
        var $25=FUNCTION_TABLE[$21]($22, $23, $24, _KW_NOTATION); //@line 815 "xmlrole.c"
        var $26=($25)!=0; //@line 815 "xmlrole.c"
        if ($26) { __label__ = 8; break; } else { __label__ = 10; break; } //@line 815 "xmlrole.c"
      case 8: // $bb7
        var $27=$state_addr; //@line 816 "xmlrole.c"
        var $28=$27; //@line 816 "xmlrole.c"
        HEAP[$28]=(FUNCTION_TABLE_OFFSET + 136); //@line 816 "xmlrole.c"
        $1=33; //@line 817 "xmlrole.c"
        __label__ = 11; break; //@line 817 "xmlrole.c"
      case 9: // $bb9
        var $29=$state_addr; //@line 821 "xmlrole.c"
        var $30=$29; //@line 821 "xmlrole.c"
        HEAP[$30]=(FUNCTION_TABLE_OFFSET + 138); //@line 821 "xmlrole.c"
        $1=33; //@line 822 "xmlrole.c"
        __label__ = 11; break; //@line 822 "xmlrole.c"
      case 10: // $bb10
        var $31=$state_addr; //@line 824 "xmlrole.c"
        $state_addr_i=$31;
        var $32=$state_addr_i; //@line 1305 "xmlrole.c"
        var $33=$32; //@line 1305 "xmlrole.c"
        HEAP[$33]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $34=$0; //@line 1306 "xmlrole.c"
        $retval_i=$34; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 824 "xmlrole.c"
        __label__ = 11; break; //@line 824 "xmlrole.c"
      case 11: // $bb11
        var $35=$1; //@line 795 "xmlrole.c"
        $retval=$35; //@line 795 "xmlrole.c"
        var $retval12=$retval; //@line 795 "xmlrole.c"
        ;
        return $retval12; //@line 795 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist3($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 834 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 19) {
          __label__ = 2; break;
        }
        else if ($2 == 41) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=33; //@line 836 "xmlrole.c"
        __label__ = 4; break; //@line 836 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 840 "xmlrole.c"
        var $4=$3; //@line 840 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 140); //@line 840 "xmlrole.c"
        $1=31; //@line 841 "xmlrole.c"
        __label__ = 4; break; //@line 841 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 843 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 843 "xmlrole.c"
        __label__ = 4; break; //@line 843 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 836 "xmlrole.c"
        $retval=$9; //@line 836 "xmlrole.c"
        var $retval4=$retval; //@line 836 "xmlrole.c"
        ;
        return $retval4; //@line 836 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist4($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 853 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 21) {
          __label__ = 3; break;
        }
        else if ($2 == 24) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=33; //@line 855 "xmlrole.c"
        __label__ = 5; break; //@line 855 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 857 "xmlrole.c"
        var $4=$3; //@line 857 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 134); //@line 857 "xmlrole.c"
        $1=33; //@line 858 "xmlrole.c"
        __label__ = 5; break; //@line 858 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 860 "xmlrole.c"
        var $6=$5; //@line 860 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 138); //@line 860 "xmlrole.c"
        $1=33; //@line 861 "xmlrole.c"
        __label__ = 5; break; //@line 861 "xmlrole.c"
      case 4: // $bb3
        var $7=$state_addr; //@line 863 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 863 "xmlrole.c"
        __label__ = 5; break; //@line 863 "xmlrole.c"
      case 5: // $bb4
        var $11=$1; //@line 855 "xmlrole.c"
        $retval=$11; //@line 855 "xmlrole.c"
        var $retval5=$retval; //@line 855 "xmlrole.c"
        ;
        return $retval5; //@line 855 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist5($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 873 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 23) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=33; //@line 875 "xmlrole.c"
        __label__ = 4; break; //@line 875 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 877 "xmlrole.c"
        var $4=$3; //@line 877 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 142); //@line 877 "xmlrole.c"
        $1=33; //@line 878 "xmlrole.c"
        __label__ = 4; break; //@line 878 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 880 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 880 "xmlrole.c"
        __label__ = 4; break; //@line 880 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 875 "xmlrole.c"
        $retval=$9; //@line 875 "xmlrole.c"
        var $retval4=$retval; //@line 875 "xmlrole.c"
        ;
        return $retval4; //@line 875 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist6($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 890 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=33; //@line 892 "xmlrole.c"
        __label__ = 4; break; //@line 892 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 894 "xmlrole.c"
        var $4=$3; //@line 894 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 144); //@line 894 "xmlrole.c"
        $1=32; //@line 895 "xmlrole.c"
        __label__ = 4; break; //@line 895 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 897 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 897 "xmlrole.c"
        __label__ = 4; break; //@line 897 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 892 "xmlrole.c"
        $retval=$9; //@line 892 "xmlrole.c"
        var $retval4=$retval; //@line 892 "xmlrole.c"
        ;
        return $retval4; //@line 892 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist7($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 907 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 21) {
          __label__ = 3; break;
        }
        else if ($2 == 24) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=33; //@line 909 "xmlrole.c"
        __label__ = 5; break; //@line 909 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 911 "xmlrole.c"
        var $4=$3; //@line 911 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 134); //@line 911 "xmlrole.c"
        $1=33; //@line 912 "xmlrole.c"
        __label__ = 5; break; //@line 912 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 914 "xmlrole.c"
        var $6=$5; //@line 914 "xmlrole.c"
        HEAP[$6]=(FUNCTION_TABLE_OFFSET + 142); //@line 914 "xmlrole.c"
        $1=33; //@line 915 "xmlrole.c"
        __label__ = 5; break; //@line 915 "xmlrole.c"
      case 4: // $bb3
        var $7=$state_addr; //@line 917 "xmlrole.c"
        $state_addr_i=$7;
        var $8=$state_addr_i; //@line 1305 "xmlrole.c"
        var $9=$8; //@line 1305 "xmlrole.c"
        HEAP[$9]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $10=$0; //@line 1306 "xmlrole.c"
        $retval_i=$10; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 917 "xmlrole.c"
        __label__ = 5; break; //@line 917 "xmlrole.c"
      case 5: // $bb4
        var $11=$1; //@line 909 "xmlrole.c"
        $retval=$11; //@line 909 "xmlrole.c"
        var $retval5=$retval; //@line 909 "xmlrole.c"
        ;
        return $retval5; //@line 909 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist8($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 928 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 20) {
          __label__ = 2; break;
        }
        else if ($2 == 27) {
          __label__ = 8; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 1: // $bb
        $1=33; //@line 930 "xmlrole.c"
        __label__ = 10; break; //@line 930 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 932 "xmlrole.c"
        var $4=$3+24; //@line 932 "xmlrole.c"
        var $5=HEAP[$4]; //@line 932 "xmlrole.c"
        var $6=$enc_addr; //@line 932 "xmlrole.c"
        var $7=$6+64; //@line 932 "xmlrole.c"
        var $8=HEAP[$7]; //@line 932 "xmlrole.c"
        var $9=$ptr_addr; //@line 932 "xmlrole.c"
        var $10=$9+$8; //@line 932 "xmlrole.c"
        var $11=$enc_addr; //@line 932 "xmlrole.c"
        var $12=$end_addr; //@line 932 "xmlrole.c"
        var $13=FUNCTION_TABLE[$5]($11, $10, $12, _KW_IMPLIED); //@line 932 "xmlrole.c"
        var $14=($13)!=0; //@line 932 "xmlrole.c"
        if ($14) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 932 "xmlrole.c"
      case 3: // $bb2
        var $15=$state_addr; //@line 936 "xmlrole.c"
        var $16=$15; //@line 936 "xmlrole.c"
        HEAP[$16]=(FUNCTION_TABLE_OFFSET + 130); //@line 936 "xmlrole.c"
        $1=35; //@line 937 "xmlrole.c"
        __label__ = 10; break; //@line 937 "xmlrole.c"
      case 4: // $bb3
        var $17=$enc_addr; //@line 939 "xmlrole.c"
        var $18=$17+24; //@line 939 "xmlrole.c"
        var $19=HEAP[$18]; //@line 939 "xmlrole.c"
        var $20=$enc_addr; //@line 939 "xmlrole.c"
        var $21=$20+64; //@line 939 "xmlrole.c"
        var $22=HEAP[$21]; //@line 939 "xmlrole.c"
        var $23=$ptr_addr; //@line 939 "xmlrole.c"
        var $24=$23+$22; //@line 939 "xmlrole.c"
        var $25=$enc_addr; //@line 939 "xmlrole.c"
        var $26=$end_addr; //@line 939 "xmlrole.c"
        var $27=FUNCTION_TABLE[$19]($25, $24, $26, _KW_REQUIRED); //@line 939 "xmlrole.c"
        var $28=($27)!=0; //@line 939 "xmlrole.c"
        if ($28) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 939 "xmlrole.c"
      case 5: // $bb4
        var $29=$state_addr; //@line 943 "xmlrole.c"
        var $30=$29; //@line 943 "xmlrole.c"
        HEAP[$30]=(FUNCTION_TABLE_OFFSET + 130); //@line 943 "xmlrole.c"
        $1=36; //@line 944 "xmlrole.c"
        __label__ = 10; break; //@line 944 "xmlrole.c"
      case 6: // $bb5
        var $31=$enc_addr; //@line 946 "xmlrole.c"
        var $32=$31+24; //@line 946 "xmlrole.c"
        var $33=HEAP[$32]; //@line 946 "xmlrole.c"
        var $34=$enc_addr; //@line 946 "xmlrole.c"
        var $35=$34+64; //@line 946 "xmlrole.c"
        var $36=HEAP[$35]; //@line 946 "xmlrole.c"
        var $37=$ptr_addr; //@line 946 "xmlrole.c"
        var $38=$37+$36; //@line 946 "xmlrole.c"
        var $39=$enc_addr; //@line 946 "xmlrole.c"
        var $40=$end_addr; //@line 946 "xmlrole.c"
        var $41=FUNCTION_TABLE[$33]($39, $38, $40, _KW_FIXED); //@line 946 "xmlrole.c"
        var $42=($41)!=0; //@line 946 "xmlrole.c"
        if ($42) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 946 "xmlrole.c"
      case 7: // $bb6
        var $43=$state_addr; //@line 950 "xmlrole.c"
        var $44=$43; //@line 950 "xmlrole.c"
        HEAP[$44]=(FUNCTION_TABLE_OFFSET + 146); //@line 950 "xmlrole.c"
        $1=33; //@line 951 "xmlrole.c"
        __label__ = 10; break; //@line 951 "xmlrole.c"
      case 8: // $bb8
        var $45=$state_addr; //@line 955 "xmlrole.c"
        var $46=$45; //@line 955 "xmlrole.c"
        HEAP[$46]=(FUNCTION_TABLE_OFFSET + 130); //@line 955 "xmlrole.c"
        $1=37; //@line 956 "xmlrole.c"
        __label__ = 10; break; //@line 956 "xmlrole.c"
      case 9: // $bb9
        var $47=$state_addr; //@line 958 "xmlrole.c"
        $state_addr_i=$47;
        var $48=$state_addr_i; //@line 1305 "xmlrole.c"
        var $49=$48; //@line 1305 "xmlrole.c"
        HEAP[$49]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $50=$0; //@line 1306 "xmlrole.c"
        $retval_i=$50; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 958 "xmlrole.c"
        __label__ = 10; break; //@line 958 "xmlrole.c"
      case 10: // $bb10
        var $51=$1; //@line 930 "xmlrole.c"
        $retval=$51; //@line 930 "xmlrole.c"
        var $retval11=$retval; //@line 930 "xmlrole.c"
        ;
        return $retval11; //@line 930 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _attlist9($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 968 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 27) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=33; //@line 970 "xmlrole.c"
        __label__ = 4; break; //@line 970 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 972 "xmlrole.c"
        var $4=$3; //@line 972 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 130); //@line 972 "xmlrole.c"
        $1=38; //@line 973 "xmlrole.c"
        __label__ = 4; break; //@line 973 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 975 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 975 "xmlrole.c"
        __label__ = 4; break; //@line 975 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 970 "xmlrole.c"
        $retval=$9; //@line 970 "xmlrole.c"
        var $retval4=$retval; //@line 970 "xmlrole.c"
        ;
        return $retval4; //@line 970 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element0($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 985 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 41) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=39; //@line 987 "xmlrole.c"
        __label__ = 4; break; //@line 987 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 990 "xmlrole.c"
        var $4=$3; //@line 990 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 148); //@line 990 "xmlrole.c"
        $1=40; //@line 991 "xmlrole.c"
        __label__ = 4; break; //@line 991 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 993 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 993 "xmlrole.c"
        __label__ = 4; break; //@line 993 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 987 "xmlrole.c"
        $retval=$9; //@line 987 "xmlrole.c"
        var $retval4=$retval; //@line 987 "xmlrole.c"
        ;
        return $retval4; //@line 987 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element1($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1003 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 23) {
          __label__ = 6; break;
        }
        else {
        __label__ = 7; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1005 "xmlrole.c"
        __label__ = 8; break; //@line 1005 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 1007 "xmlrole.c"
        var $4=$3+24; //@line 1007 "xmlrole.c"
        var $5=HEAP[$4]; //@line 1007 "xmlrole.c"
        var $6=$enc_addr; //@line 1007 "xmlrole.c"
        var $7=$ptr_addr; //@line 1007 "xmlrole.c"
        var $8=$end_addr; //@line 1007 "xmlrole.c"
        var $9=FUNCTION_TABLE[$5]($6, $7, $8, _KW_EMPTY); //@line 1007 "xmlrole.c"
        var $10=($9)!=0; //@line 1007 "xmlrole.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1007 "xmlrole.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 1008 "xmlrole.c"
        var $12=$11; //@line 1008 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 110); //@line 1008 "xmlrole.c"
        var $13=$state_addr; //@line 1009 "xmlrole.c"
        var $14=$13+8; //@line 1009 "xmlrole.c"
        HEAP[$14]=39; //@line 1009 "xmlrole.c"
        $1=42; //@line 1010 "xmlrole.c"
        __label__ = 8; break; //@line 1010 "xmlrole.c"
      case 4: // $bb3
        var $15=$enc_addr; //@line 1012 "xmlrole.c"
        var $16=$15+24; //@line 1012 "xmlrole.c"
        var $17=HEAP[$16]; //@line 1012 "xmlrole.c"
        var $18=$enc_addr; //@line 1012 "xmlrole.c"
        var $19=$ptr_addr; //@line 1012 "xmlrole.c"
        var $20=$end_addr; //@line 1012 "xmlrole.c"
        var $21=FUNCTION_TABLE[$17]($18, $19, $20, _KW_ANY); //@line 1012 "xmlrole.c"
        var $22=($21)!=0; //@line 1012 "xmlrole.c"
        if ($22) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 1012 "xmlrole.c"
      case 5: // $bb4
        var $23=$state_addr; //@line 1013 "xmlrole.c"
        var $24=$23; //@line 1013 "xmlrole.c"
        HEAP[$24]=(FUNCTION_TABLE_OFFSET + 110); //@line 1013 "xmlrole.c"
        var $25=$state_addr; //@line 1014 "xmlrole.c"
        var $26=$25+8; //@line 1014 "xmlrole.c"
        HEAP[$26]=39; //@line 1014 "xmlrole.c"
        $1=41; //@line 1015 "xmlrole.c"
        __label__ = 8; break; //@line 1015 "xmlrole.c"
      case 6: // $bb6
        var $27=$state_addr; //@line 1019 "xmlrole.c"
        var $28=$27; //@line 1019 "xmlrole.c"
        HEAP[$28]=(FUNCTION_TABLE_OFFSET + 150); //@line 1019 "xmlrole.c"
        var $29=$state_addr; //@line 1020 "xmlrole.c"
        var $30=$29+4; //@line 1020 "xmlrole.c"
        HEAP[$30]=1; //@line 1020 "xmlrole.c"
        $1=44; //@line 1021 "xmlrole.c"
        __label__ = 8; break; //@line 1021 "xmlrole.c"
      case 7: // $bb7
        var $31=$state_addr; //@line 1023 "xmlrole.c"
        $state_addr_i=$31;
        var $32=$state_addr_i; //@line 1305 "xmlrole.c"
        var $33=$32; //@line 1305 "xmlrole.c"
        HEAP[$33]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $34=$0; //@line 1306 "xmlrole.c"
        $retval_i=$34; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1023 "xmlrole.c"
        __label__ = 8; break; //@line 1023 "xmlrole.c"
      case 8: // $bb8
        var $35=$1; //@line 1005 "xmlrole.c"
        $retval=$35; //@line 1005 "xmlrole.c"
        var $retval9=$retval; //@line 1005 "xmlrole.c"
        ;
        return $retval9; //@line 1005 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element2($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1033 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 5; break;
        }
        else if ($2 == 20) {
          __label__ = 2; break;
        }
        else if ($2 == 23) {
          __label__ = 4; break;
        }
        else if ($2 == 30) {
          __label__ = 6; break;
        }
        else if ($2 == 31) {
          __label__ = 7; break;
        }
        else if ($2 == 32) {
          __label__ = 8; break;
        }
        else if ($2 == 41) {
          __label__ = 5; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1035 "xmlrole.c"
        __label__ = 10; break; //@line 1035 "xmlrole.c"
      case 2: // $bb1
        var $3=$enc_addr; //@line 1037 "xmlrole.c"
        var $4=$3+24; //@line 1037 "xmlrole.c"
        var $5=HEAP[$4]; //@line 1037 "xmlrole.c"
        var $6=$enc_addr; //@line 1037 "xmlrole.c"
        var $7=$6+64; //@line 1037 "xmlrole.c"
        var $8=HEAP[$7]; //@line 1037 "xmlrole.c"
        var $9=$ptr_addr; //@line 1037 "xmlrole.c"
        var $10=$9+$8; //@line 1037 "xmlrole.c"
        var $11=$enc_addr; //@line 1037 "xmlrole.c"
        var $12=$end_addr; //@line 1037 "xmlrole.c"
        var $13=FUNCTION_TABLE[$5]($11, $10, $12, _KW_PCDATA); //@line 1037 "xmlrole.c"
        var $14=($13)!=0; //@line 1037 "xmlrole.c"
        if ($14) { __label__ = 3; break; } else { __label__ = 9; break; } //@line 1037 "xmlrole.c"
      case 3: // $bb2
        var $15=$state_addr; //@line 1041 "xmlrole.c"
        var $16=$15; //@line 1041 "xmlrole.c"
        HEAP[$16]=(FUNCTION_TABLE_OFFSET + 152); //@line 1041 "xmlrole.c"
        $1=43; //@line 1042 "xmlrole.c"
        __label__ = 10; break; //@line 1042 "xmlrole.c"
      case 4: // $bb4
        var $17=$state_addr; //@line 1046 "xmlrole.c"
        var $18=$17+4; //@line 1046 "xmlrole.c"
        HEAP[$18]=2; //@line 1046 "xmlrole.c"
        var $19=$state_addr; //@line 1047 "xmlrole.c"
        var $20=$19; //@line 1047 "xmlrole.c"
        HEAP[$20]=(FUNCTION_TABLE_OFFSET + 154); //@line 1047 "xmlrole.c"
        $1=44; //@line 1048 "xmlrole.c"
        __label__ = 10; break; //@line 1048 "xmlrole.c"
      case 5: // $bb5
        var $21=$state_addr; //@line 1051 "xmlrole.c"
        var $22=$21; //@line 1051 "xmlrole.c"
        HEAP[$22]=(FUNCTION_TABLE_OFFSET + 156); //@line 1051 "xmlrole.c"
        $1=51; //@line 1052 "xmlrole.c"
        __label__ = 10; break; //@line 1052 "xmlrole.c"
      case 6: // $bb6
        var $23=$state_addr; //@line 1054 "xmlrole.c"
        var $24=$23; //@line 1054 "xmlrole.c"
        HEAP[$24]=(FUNCTION_TABLE_OFFSET + 156); //@line 1054 "xmlrole.c"
        $1=53; //@line 1055 "xmlrole.c"
        __label__ = 10; break; //@line 1055 "xmlrole.c"
      case 7: // $bb7
        var $25=$state_addr; //@line 1057 "xmlrole.c"
        var $26=$25; //@line 1057 "xmlrole.c"
        HEAP[$26]=(FUNCTION_TABLE_OFFSET + 156); //@line 1057 "xmlrole.c"
        $1=52; //@line 1058 "xmlrole.c"
        __label__ = 10; break; //@line 1058 "xmlrole.c"
      case 8: // $bb8
        var $27=$state_addr; //@line 1060 "xmlrole.c"
        var $28=$27; //@line 1060 "xmlrole.c"
        HEAP[$28]=(FUNCTION_TABLE_OFFSET + 156); //@line 1060 "xmlrole.c"
        $1=54; //@line 1061 "xmlrole.c"
        __label__ = 10; break; //@line 1061 "xmlrole.c"
      case 9: // $bb9
        var $29=$state_addr; //@line 1063 "xmlrole.c"
        $state_addr_i=$29;
        var $30=$state_addr_i; //@line 1305 "xmlrole.c"
        var $31=$30; //@line 1305 "xmlrole.c"
        HEAP[$31]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $32=$0; //@line 1306 "xmlrole.c"
        $retval_i=$32; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1063 "xmlrole.c"
        __label__ = 10; break; //@line 1063 "xmlrole.c"
      case 10: // $bb10
        var $33=$1; //@line 1035 "xmlrole.c"
        $retval=$33; //@line 1035 "xmlrole.c"
        var $retval11=$retval; //@line 1035 "xmlrole.c"
        ;
        return $retval11; //@line 1035 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element3($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1073 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 21) {
          __label__ = 4; break;
        }
        else if ($2 == 24) {
          __label__ = 2; break;
        }
        else if ($2 == 36) {
          __label__ = 3; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1075 "xmlrole.c"
        __label__ = 6; break; //@line 1075 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 1077 "xmlrole.c"
        var $4=$3; //@line 1077 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 110); //@line 1077 "xmlrole.c"
        var $5=$state_addr; //@line 1078 "xmlrole.c"
        var $6=$5+8; //@line 1078 "xmlrole.c"
        HEAP[$6]=39; //@line 1078 "xmlrole.c"
        $1=45; //@line 1079 "xmlrole.c"
        __label__ = 6; break; //@line 1079 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 1081 "xmlrole.c"
        var $8=$7; //@line 1081 "xmlrole.c"
        HEAP[$8]=(FUNCTION_TABLE_OFFSET + 110); //@line 1081 "xmlrole.c"
        var $9=$state_addr; //@line 1082 "xmlrole.c"
        var $10=$9+8; //@line 1082 "xmlrole.c"
        HEAP[$10]=39; //@line 1082 "xmlrole.c"
        $1=46; //@line 1083 "xmlrole.c"
        __label__ = 6; break; //@line 1083 "xmlrole.c"
      case 4: // $bb3
        var $11=$state_addr; //@line 1085 "xmlrole.c"
        var $12=$11; //@line 1085 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 158); //@line 1085 "xmlrole.c"
        $1=39; //@line 1086 "xmlrole.c"
        __label__ = 6; break; //@line 1086 "xmlrole.c"
      case 5: // $bb4
        var $13=$state_addr; //@line 1088 "xmlrole.c"
        $state_addr_i=$13;
        var $14=$state_addr_i; //@line 1305 "xmlrole.c"
        var $15=$14; //@line 1305 "xmlrole.c"
        HEAP[$15]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $16=$0; //@line 1306 "xmlrole.c"
        $retval_i=$16; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1088 "xmlrole.c"
        __label__ = 6; break; //@line 1088 "xmlrole.c"
      case 6: // $bb5
        var $17=$1; //@line 1075 "xmlrole.c"
        $retval=$17; //@line 1075 "xmlrole.c"
        var $retval6=$retval; //@line 1075 "xmlrole.c"
        ;
        return $retval6; //@line 1075 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element4($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1098 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 2; break;
        }
        else if ($2 == 41) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1100 "xmlrole.c"
        __label__ = 4; break; //@line 1100 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 1103 "xmlrole.c"
        var $4=$3; //@line 1103 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 160); //@line 1103 "xmlrole.c"
        $1=51; //@line 1104 "xmlrole.c"
        __label__ = 4; break; //@line 1104 "xmlrole.c"
      case 3: // $bb2
        var $5=$state_addr; //@line 1106 "xmlrole.c"
        $state_addr_i=$5;
        var $6=$state_addr_i; //@line 1305 "xmlrole.c"
        var $7=$6; //@line 1305 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $8=$0; //@line 1306 "xmlrole.c"
        $retval_i=$8; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1106 "xmlrole.c"
        __label__ = 4; break; //@line 1106 "xmlrole.c"
      case 4: // $bb3
        var $9=$1; //@line 1100 "xmlrole.c"
        $retval=$9; //@line 1100 "xmlrole.c"
        var $retval4=$retval; //@line 1100 "xmlrole.c"
        ;
        return $retval4; //@line 1100 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element5($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1116 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 21) {
          __label__ = 3; break;
        }
        else if ($2 == 36) {
          __label__ = 2; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1118 "xmlrole.c"
        __label__ = 5; break; //@line 1118 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 1120 "xmlrole.c"
        var $4=$3; //@line 1120 "xmlrole.c"
        HEAP[$4]=(FUNCTION_TABLE_OFFSET + 110); //@line 1120 "xmlrole.c"
        var $5=$state_addr; //@line 1121 "xmlrole.c"
        var $6=$5+8; //@line 1121 "xmlrole.c"
        HEAP[$6]=39; //@line 1121 "xmlrole.c"
        $1=46; //@line 1122 "xmlrole.c"
        __label__ = 5; break; //@line 1122 "xmlrole.c"
      case 3: // $bb2
        var $7=$state_addr; //@line 1124 "xmlrole.c"
        var $8=$7; //@line 1124 "xmlrole.c"
        HEAP[$8]=(FUNCTION_TABLE_OFFSET + 158); //@line 1124 "xmlrole.c"
        $1=39; //@line 1125 "xmlrole.c"
        __label__ = 5; break; //@line 1125 "xmlrole.c"
      case 4: // $bb3
        var $9=$state_addr; //@line 1127 "xmlrole.c"
        $state_addr_i=$9;
        var $10=$state_addr_i; //@line 1305 "xmlrole.c"
        var $11=$10; //@line 1305 "xmlrole.c"
        HEAP[$11]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $12=$0; //@line 1306 "xmlrole.c"
        $retval_i=$12; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1127 "xmlrole.c"
        __label__ = 5; break; //@line 1127 "xmlrole.c"
      case 5: // $bb4
        var $13=$1; //@line 1118 "xmlrole.c"
        $retval=$13; //@line 1118 "xmlrole.c"
        var $retval5=$retval; //@line 1118 "xmlrole.c"
        ;
        return $retval5; //@line 1118 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element6($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1137 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 18) {
          __label__ = 3; break;
        }
        else if ($2 == 23) {
          __label__ = 2; break;
        }
        else if ($2 == 30) {
          __label__ = 4; break;
        }
        else if ($2 == 31) {
          __label__ = 5; break;
        }
        else if ($2 == 32) {
          __label__ = 6; break;
        }
        else if ($2 == 41) {
          __label__ = 3; break;
        }
        else {
        __label__ = 7; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1139 "xmlrole.c"
        __label__ = 8; break; //@line 1139 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 1141 "xmlrole.c"
        var $4=$3+4; //@line 1141 "xmlrole.c"
        var $5=HEAP[$4]; //@line 1141 "xmlrole.c"
        var $6=($5) + 1; //@line 1141 "xmlrole.c"
        var $7=$state_addr; //@line 1141 "xmlrole.c"
        var $8=$7+4; //@line 1141 "xmlrole.c"
        HEAP[$8]=$6; //@line 1141 "xmlrole.c"
        $1=44; //@line 1142 "xmlrole.c"
        __label__ = 8; break; //@line 1142 "xmlrole.c"
      case 3: // $bb2
        var $9=$state_addr; //@line 1145 "xmlrole.c"
        var $10=$9; //@line 1145 "xmlrole.c"
        HEAP[$10]=(FUNCTION_TABLE_OFFSET + 156); //@line 1145 "xmlrole.c"
        $1=51; //@line 1146 "xmlrole.c"
        __label__ = 8; break; //@line 1146 "xmlrole.c"
      case 4: // $bb3
        var $11=$state_addr; //@line 1148 "xmlrole.c"
        var $12=$11; //@line 1148 "xmlrole.c"
        HEAP[$12]=(FUNCTION_TABLE_OFFSET + 156); //@line 1148 "xmlrole.c"
        $1=53; //@line 1149 "xmlrole.c"
        __label__ = 8; break; //@line 1149 "xmlrole.c"
      case 5: // $bb4
        var $13=$state_addr; //@line 1151 "xmlrole.c"
        var $14=$13; //@line 1151 "xmlrole.c"
        HEAP[$14]=(FUNCTION_TABLE_OFFSET + 156); //@line 1151 "xmlrole.c"
        $1=52; //@line 1152 "xmlrole.c"
        __label__ = 8; break; //@line 1152 "xmlrole.c"
      case 6: // $bb5
        var $15=$state_addr; //@line 1154 "xmlrole.c"
        var $16=$15; //@line 1154 "xmlrole.c"
        HEAP[$16]=(FUNCTION_TABLE_OFFSET + 156); //@line 1154 "xmlrole.c"
        $1=54; //@line 1155 "xmlrole.c"
        __label__ = 8; break; //@line 1155 "xmlrole.c"
      case 7: // $bb6
        var $17=$state_addr; //@line 1157 "xmlrole.c"
        $state_addr_i=$17;
        var $18=$state_addr_i; //@line 1305 "xmlrole.c"
        var $19=$18; //@line 1305 "xmlrole.c"
        HEAP[$19]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $20=$0; //@line 1306 "xmlrole.c"
        $retval_i=$20; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1157 "xmlrole.c"
        __label__ = 8; break; //@line 1157 "xmlrole.c"
      case 8: // $bb7
        var $21=$1; //@line 1139 "xmlrole.c"
        $retval=$21; //@line 1139 "xmlrole.c"
        var $retval8=$retval; //@line 1139 "xmlrole.c"
        ;
        return $retval8; //@line 1139 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _element7($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1167 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 21) {
          __label__ = 15; break;
        }
        else if ($2 == 24) {
          __label__ = 2; break;
        }
        else if ($2 == 35) {
          __label__ = 8; break;
        }
        else if ($2 == 36) {
          __label__ = 5; break;
        }
        else if ($2 == 37) {
          __label__ = 11; break;
        }
        else if ($2 == 38) {
          __label__ = 14; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 1: // $bb
        $1=39; //@line 1169 "xmlrole.c"
        __label__ = 17; break; //@line 1169 "xmlrole.c"
      case 2: // $bb1
        var $3=$state_addr; //@line 1171 "xmlrole.c"
        var $4=$3+4; //@line 1171 "xmlrole.c"
        var $5=HEAP[$4]; //@line 1171 "xmlrole.c"
        var $6=($5) - 1; //@line 1171 "xmlrole.c"
        var $7=$state_addr; //@line 1171 "xmlrole.c"
        var $8=$7+4; //@line 1171 "xmlrole.c"
        HEAP[$8]=$6; //@line 1171 "xmlrole.c"
        var $9=$state_addr; //@line 1172 "xmlrole.c"
        var $10=$9+4; //@line 1172 "xmlrole.c"
        var $11=HEAP[$10]; //@line 1172 "xmlrole.c"
        var $12=($11)==0; //@line 1172 "xmlrole.c"
        if ($12) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1172 "xmlrole.c"
      case 3: // $bb2
        var $13=$state_addr; //@line 1173 "xmlrole.c"
        var $14=$13; //@line 1173 "xmlrole.c"
        HEAP[$14]=(FUNCTION_TABLE_OFFSET + 110); //@line 1173 "xmlrole.c"
        var $15=$state_addr; //@line 1174 "xmlrole.c"
        var $16=$15+8; //@line 1174 "xmlrole.c"
        HEAP[$16]=39; //@line 1174 "xmlrole.c"
        __label__ = 4; break; //@line 1174 "xmlrole.c"
      case 4: // $bb3
        $1=45; //@line 1176 "xmlrole.c"
        __label__ = 17; break; //@line 1176 "xmlrole.c"
      case 5: // $bb4
        var $17=$state_addr; //@line 1178 "xmlrole.c"
        var $18=$17+4; //@line 1178 "xmlrole.c"
        var $19=HEAP[$18]; //@line 1178 "xmlrole.c"
        var $20=($19) - 1; //@line 1178 "xmlrole.c"
        var $21=$state_addr; //@line 1178 "xmlrole.c"
        var $22=$21+4; //@line 1178 "xmlrole.c"
        HEAP[$22]=$20; //@line 1178 "xmlrole.c"
        var $23=$state_addr; //@line 1179 "xmlrole.c"
        var $24=$23+4; //@line 1179 "xmlrole.c"
        var $25=HEAP[$24]; //@line 1179 "xmlrole.c"
        var $26=($25)==0; //@line 1179 "xmlrole.c"
        if ($26) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1179 "xmlrole.c"
      case 6: // $bb5
        var $27=$state_addr; //@line 1180 "xmlrole.c"
        var $28=$27; //@line 1180 "xmlrole.c"
        HEAP[$28]=(FUNCTION_TABLE_OFFSET + 110); //@line 1180 "xmlrole.c"
        var $29=$state_addr; //@line 1181 "xmlrole.c"
        var $30=$29+8; //@line 1181 "xmlrole.c"
        HEAP[$30]=39; //@line 1181 "xmlrole.c"
        __label__ = 7; break; //@line 1181 "xmlrole.c"
      case 7: // $bb6
        $1=46; //@line 1183 "xmlrole.c"
        __label__ = 17; break; //@line 1183 "xmlrole.c"
      case 8: // $bb7
        var $31=$state_addr; //@line 1185 "xmlrole.c"
        var $32=$31+4; //@line 1185 "xmlrole.c"
        var $33=HEAP[$32]; //@line 1185 "xmlrole.c"
        var $34=($33) - 1; //@line 1185 "xmlrole.c"
        var $35=$state_addr; //@line 1185 "xmlrole.c"
        var $36=$35+4; //@line 1185 "xmlrole.c"
        HEAP[$36]=$34; //@line 1185 "xmlrole.c"
        var $37=$state_addr; //@line 1186 "xmlrole.c"
        var $38=$37+4; //@line 1186 "xmlrole.c"
        var $39=HEAP[$38]; //@line 1186 "xmlrole.c"
        var $40=($39)==0; //@line 1186 "xmlrole.c"
        if ($40) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1186 "xmlrole.c"
      case 9: // $bb8
        var $41=$state_addr; //@line 1187 "xmlrole.c"
        var $42=$41; //@line 1187 "xmlrole.c"
        HEAP[$42]=(FUNCTION_TABLE_OFFSET + 110); //@line 1187 "xmlrole.c"
        var $43=$state_addr; //@line 1188 "xmlrole.c"
        var $44=$43+8; //@line 1188 "xmlrole.c"
        HEAP[$44]=39; //@line 1188 "xmlrole.c"
        __label__ = 10; break; //@line 1188 "xmlrole.c"
      case 10: // $bb9
        $1=47; //@line 1190 "xmlrole.c"
        __label__ = 17; break; //@line 1190 "xmlrole.c"
      case 11: // $bb10
        var $45=$state_addr; //@line 1192 "xmlrole.c"
        var $46=$45+4; //@line 1192 "xmlrole.c"
        var $47=HEAP[$46]; //@line 1192 "xmlrole.c"
        var $48=($47) - 1; //@line 1192 "xmlrole.c"
        var $49=$state_addr; //@line 1192 "xmlrole.c"
        var $50=$49+4; //@line 1192 "xmlrole.c"
        HEAP[$50]=$48; //@line 1192 "xmlrole.c"
        var $51=$state_addr; //@line 1193 "xmlrole.c"
        var $52=$51+4; //@line 1193 "xmlrole.c"
        var $53=HEAP[$52]; //@line 1193 "xmlrole.c"
        var $54=($53)==0; //@line 1193 "xmlrole.c"
        if ($54) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1193 "xmlrole.c"
      case 12: // $bb11
        var $55=$state_addr; //@line 1194 "xmlrole.c"
        var $56=$55; //@line 1194 "xmlrole.c"
        HEAP[$56]=(FUNCTION_TABLE_OFFSET + 110); //@line 1194 "xmlrole.c"
        var $57=$state_addr; //@line 1195 "xmlrole.c"
        var $58=$57+8; //@line 1195 "xmlrole.c"
        HEAP[$58]=39; //@line 1195 "xmlrole.c"
        __label__ = 13; break; //@line 1195 "xmlrole.c"
      case 13: // $bb12
        $1=48; //@line 1197 "xmlrole.c"
        __label__ = 17; break; //@line 1197 "xmlrole.c"
      case 14: // $bb13
        var $59=$state_addr; //@line 1199 "xmlrole.c"
        var $60=$59; //@line 1199 "xmlrole.c"
        HEAP[$60]=(FUNCTION_TABLE_OFFSET + 154); //@line 1199 "xmlrole.c"
        $1=50; //@line 1200 "xmlrole.c"
        __label__ = 17; break; //@line 1200 "xmlrole.c"
      case 15: // $bb14
        var $61=$state_addr; //@line 1202 "xmlrole.c"
        var $62=$61; //@line 1202 "xmlrole.c"
        HEAP[$62]=(FUNCTION_TABLE_OFFSET + 154); //@line 1202 "xmlrole.c"
        $1=49; //@line 1203 "xmlrole.c"
        __label__ = 17; break; //@line 1203 "xmlrole.c"
      case 16: // $bb15
        var $63=$state_addr; //@line 1205 "xmlrole.c"
        $state_addr_i=$63;
        var $64=$state_addr_i; //@line 1305 "xmlrole.c"
        var $65=$64; //@line 1305 "xmlrole.c"
        HEAP[$65]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $66=$0; //@line 1306 "xmlrole.c"
        $retval_i=$66; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1205 "xmlrole.c"
        __label__ = 17; break; //@line 1205 "xmlrole.c"
      case 17: // $bb16
        var $67=$1; //@line 1169 "xmlrole.c"
        $retval=$67; //@line 1169 "xmlrole.c"
        var $retval17=$retval; //@line 1169 "xmlrole.c"
        ;
        return $retval17; //@line 1169 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _declClose($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $state_addr_i;
        var $retval_i;
        var $0;
        var $state_addr;
        var $tok_addr;
        var $ptr_addr;
        var $end_addr;
        var $enc_addr;
        var $retval;
        var $1;
        $state_addr=$state;
        $tok_addr=$tok;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $enc_addr=$enc;
        var $2=$tok_addr; //@line 1278 "xmlrole.c"
        if ($2 == 15) {
          __label__ = 1; break;
        }
        else if ($2 == 17) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 1: // $bb
        var $3=$state_addr; //@line 1280 "xmlrole.c"
        var $4=$3+8; //@line 1280 "xmlrole.c"
        var $5=HEAP[$4]; //@line 1280 "xmlrole.c"
        $1=$5; //@line 1280 "xmlrole.c"
        __label__ = 4; break; //@line 1280 "xmlrole.c"
      case 2: // $bb1
        var $6=$state_addr; //@line 1282 "xmlrole.c"
        var $7=$6; //@line 1282 "xmlrole.c"
        HEAP[$7]=(FUNCTION_TABLE_OFFSET + 80); //@line 1282 "xmlrole.c"
        var $8=$state_addr; //@line 1283 "xmlrole.c"
        var $9=$8+8; //@line 1283 "xmlrole.c"
        var $10=HEAP[$9]; //@line 1283 "xmlrole.c"
        $1=$10; //@line 1283 "xmlrole.c"
        __label__ = 4; break; //@line 1283 "xmlrole.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 1285 "xmlrole.c"
        $state_addr_i=$11;
        var $12=$state_addr_i; //@line 1305 "xmlrole.c"
        var $13=$12; //@line 1305 "xmlrole.c"
        HEAP[$13]=(FUNCTION_TABLE_OFFSET + 76); //@line 1305 "xmlrole.c"
        $0=-1; //@line 1306 "xmlrole.c"
        var $14=$0; //@line 1306 "xmlrole.c"
        $retval_i=$14; //@line 1306 "xmlrole.c"
        var $retval1_i=$retval_i; //@line 1306 "xmlrole.c"
        $1=$retval1_i; //@line 1285 "xmlrole.c"
        __label__ = 4; break; //@line 1285 "xmlrole.c"
      case 4: // $bb3
        var $15=$1; //@line 1280 "xmlrole.c"
        $retval=$15; //@line 1280 "xmlrole.c"
        var $retval4=$retval; //@line 1280 "xmlrole.c"
        ;
        return $retval4; //@line 1280 "xmlrole.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _error($state, $tok, $ptr, $end, $enc) {
    ;
    var __label__;
  
    var $state_addr;
    var $tok_addr;
    var $ptr_addr;
    var $end_addr;
    var $retval;
    var $0;
    $state_addr=$state;
    $tok_addr=$tok;
    $ptr_addr=$ptr;
    $end_addr=$end;
    $0=0; //@line 1295 "xmlrole.c"
    var $1=$0; //@line 1295 "xmlrole.c"
    $retval=$1; //@line 1295 "xmlrole.c"
    var $retval1=$retval; //@line 1295 "xmlrole.c"
    ;
    return $retval1; //@line 1295 "xmlrole.c"
  }
  

  function _PyExpat_XmlPrologStateInit($state) {
    ;
    var __label__;
  
    var $state_addr;
    $state_addr=$state;
    var $0=$state_addr; //@line 1312 "xmlrole.c"
    var $1=$0; //@line 1312 "xmlrole.c"
    HEAP[$1]=(FUNCTION_TABLE_OFFSET + 50); //@line 1312 "xmlrole.c"
    ;
    return; //@line 1318 "xmlrole.c"
  }
  

  function _isNever($enc, $p) {
    ;
    var __label__;
  
    var $enc_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $0=0; //@line 125 "xmltok.c"
    var $1=$0; //@line 125 "xmltok.c"
    $retval=$1; //@line 125 "xmltok.c"
    var $retval1=$retval; //@line 125 "xmltok.c"
    ;
    return $retval1; //@line 125 "xmltok.c"
  }
  

  function _utf8_isName2($enc, $p) {
    ;
    var __label__;
  
    var $enc_addr;
    var $p_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $p_addr=$p;
    var $1=$p_addr; //@line 131 "xmltok.c"
    var $2=$1; //@line 131 "xmltok.c"
    var $3=HEAP[$2]; //@line 131 "xmltok.c"
    var $4=($3) >>> 2; //@line 131 "xmltok.c"
    var $5=($4); //@line 131 "xmltok.c"
    var $6=($5) & 7; //@line 131 "xmltok.c"
    var $7=_namePages+$6; //@line 131 "xmltok.c"
    var $8=HEAP[$7]; //@line 131 "xmltok.c"
    var $9=($8); //@line 131 "xmltok.c"
    var $10=($9) * 8;
    var $11=$p_addr; //@line 131 "xmltok.c"
    var $12=$11; //@line 131 "xmltok.c"
    var $13=HEAP[$12]; //@line 131 "xmltok.c"
    var $14=($13); //@line 131 "xmltok.c"
    var $15=($14) & 3; //@line 131 "xmltok.c"
    var $16=($15) * 2;
    var $17=$p_addr; //@line 131 "xmltok.c"
    var $18=$17+1; //@line 131 "xmltok.c"
    var $19=HEAP[$18]; //@line 131 "xmltok.c"
    var $20=($19) >>> 5; //@line 131 "xmltok.c"
    var $21=($20); //@line 131 "xmltok.c"
    var $22=($21) & 1; //@line 131 "xmltok.c"
    var $23=($16) + ($10); //@line 131 "xmltok.c"
    var $24=($23) + ($22); //@line 131 "xmltok.c"
    var $25=_namingBitmap+$24*4; //@line 131 "xmltok.c"
    var $26=HEAP[$25]; //@line 131 "xmltok.c"
    var $27=$p_addr; //@line 131 "xmltok.c"
    var $28=$27+1; //@line 131 "xmltok.c"
    var $29=HEAP[$28]; //@line 131 "xmltok.c"
    var $30=($29); //@line 131 "xmltok.c"
    var $31=($30) & 31; //@line 131 "xmltok.c"
    var $32=1 << ($31); //@line 131 "xmltok.c"
    var $33=($32) & ($26); //@line 131 "xmltok.c"
    $0=$33; //@line 131 "xmltok.c"
    var $34=$0; //@line 131 "xmltok.c"
    $retval=$34; //@line 131 "xmltok.c"
    var $retval1=$retval; //@line 131 "xmltok.c"
    ;
    return $retval1; //@line 131 "xmltok.c"
  }
  

  function _utf8_isName3($enc, $p) {
    ;
    var __label__;
  
    var $enc_addr;
    var $p_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $p_addr=$p;
    var $1=$p_addr; //@line 137 "xmltok.c"
    var $2=$1; //@line 137 "xmltok.c"
    var $3=HEAP[$2]; //@line 137 "xmltok.c"
    var $4=($3); //@line 137 "xmltok.c"
    var $5=($4) & 15; //@line 137 "xmltok.c"
    var $6=($5) * 16;
    var $7=$p_addr; //@line 137 "xmltok.c"
    var $8=$7+1; //@line 137 "xmltok.c"
    var $9=HEAP[$8]; //@line 137 "xmltok.c"
    var $10=($9) >>> 2; //@line 137 "xmltok.c"
    var $11=($10); //@line 137 "xmltok.c"
    var $12=($11) & 15; //@line 137 "xmltok.c"
    var $13=($12) + ($6); //@line 137 "xmltok.c"
    var $14=_namePages+$13; //@line 137 "xmltok.c"
    var $15=HEAP[$14]; //@line 137 "xmltok.c"
    var $16=($15); //@line 137 "xmltok.c"
    var $17=($16) * 8;
    var $18=$p_addr; //@line 137 "xmltok.c"
    var $19=$18+1; //@line 137 "xmltok.c"
    var $20=HEAP[$19]; //@line 137 "xmltok.c"
    var $21=($20); //@line 137 "xmltok.c"
    var $22=($21) & 3; //@line 137 "xmltok.c"
    var $23=($22) * 2;
    var $24=$p_addr; //@line 137 "xmltok.c"
    var $25=$24+2; //@line 137 "xmltok.c"
    var $26=HEAP[$25]; //@line 137 "xmltok.c"
    var $27=($26) >>> 5; //@line 137 "xmltok.c"
    var $28=($27); //@line 137 "xmltok.c"
    var $29=($28) & 1; //@line 137 "xmltok.c"
    var $30=($23) + ($17); //@line 137 "xmltok.c"
    var $31=($30) + ($29); //@line 137 "xmltok.c"
    var $32=_namingBitmap+$31*4; //@line 137 "xmltok.c"
    var $33=HEAP[$32]; //@line 137 "xmltok.c"
    var $34=$p_addr; //@line 137 "xmltok.c"
    var $35=$34+2; //@line 137 "xmltok.c"
    var $36=HEAP[$35]; //@line 137 "xmltok.c"
    var $37=($36); //@line 137 "xmltok.c"
    var $38=($37) & 31; //@line 137 "xmltok.c"
    var $39=1 << ($38); //@line 137 "xmltok.c"
    var $40=($39) & ($33); //@line 137 "xmltok.c"
    $0=$40; //@line 137 "xmltok.c"
    var $41=$0; //@line 137 "xmltok.c"
    $retval=$41; //@line 137 "xmltok.c"
    var $retval1=$retval; //@line 137 "xmltok.c"
    ;
    return $retval1; //@line 137 "xmltok.c"
  }
  

  function _utf8_isNmstrt2($enc, $p) {
    ;
    var __label__;
  
    var $enc_addr;
    var $p_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $p_addr=$p;
    var $1=$p_addr; //@line 145 "xmltok.c"
    var $2=$1; //@line 145 "xmltok.c"
    var $3=HEAP[$2]; //@line 145 "xmltok.c"
    var $4=($3) >>> 2; //@line 145 "xmltok.c"
    var $5=($4); //@line 145 "xmltok.c"
    var $6=($5) & 7; //@line 145 "xmltok.c"
    var $7=_nmstrtPages+$6; //@line 145 "xmltok.c"
    var $8=HEAP[$7]; //@line 145 "xmltok.c"
    var $9=($8); //@line 145 "xmltok.c"
    var $10=($9) * 8;
    var $11=$p_addr; //@line 145 "xmltok.c"
    var $12=$11; //@line 145 "xmltok.c"
    var $13=HEAP[$12]; //@line 145 "xmltok.c"
    var $14=($13); //@line 145 "xmltok.c"
    var $15=($14) & 3; //@line 145 "xmltok.c"
    var $16=($15) * 2;
    var $17=$p_addr; //@line 145 "xmltok.c"
    var $18=$17+1; //@line 145 "xmltok.c"
    var $19=HEAP[$18]; //@line 145 "xmltok.c"
    var $20=($19) >>> 5; //@line 145 "xmltok.c"
    var $21=($20); //@line 145 "xmltok.c"
    var $22=($21) & 1; //@line 145 "xmltok.c"
    var $23=($16) + ($10); //@line 145 "xmltok.c"
    var $24=($23) + ($22); //@line 145 "xmltok.c"
    var $25=_namingBitmap+$24*4; //@line 145 "xmltok.c"
    var $26=HEAP[$25]; //@line 145 "xmltok.c"
    var $27=$p_addr; //@line 145 "xmltok.c"
    var $28=$27+1; //@line 145 "xmltok.c"
    var $29=HEAP[$28]; //@line 145 "xmltok.c"
    var $30=($29); //@line 145 "xmltok.c"
    var $31=($30) & 31; //@line 145 "xmltok.c"
    var $32=1 << ($31); //@line 145 "xmltok.c"
    var $33=($32) & ($26); //@line 145 "xmltok.c"
    $0=$33; //@line 145 "xmltok.c"
    var $34=$0; //@line 145 "xmltok.c"
    $retval=$34; //@line 145 "xmltok.c"
    var $retval1=$retval; //@line 145 "xmltok.c"
    ;
    return $retval1; //@line 145 "xmltok.c"
  }
  

  function _utf8_isNmstrt3($enc, $p) {
    ;
    var __label__;
  
    var $enc_addr;
    var $p_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $p_addr=$p;
    var $1=$p_addr; //@line 151 "xmltok.c"
    var $2=$1; //@line 151 "xmltok.c"
    var $3=HEAP[$2]; //@line 151 "xmltok.c"
    var $4=($3); //@line 151 "xmltok.c"
    var $5=($4) & 15; //@line 151 "xmltok.c"
    var $6=($5) * 16;
    var $7=$p_addr; //@line 151 "xmltok.c"
    var $8=$7+1; //@line 151 "xmltok.c"
    var $9=HEAP[$8]; //@line 151 "xmltok.c"
    var $10=($9) >>> 2; //@line 151 "xmltok.c"
    var $11=($10); //@line 151 "xmltok.c"
    var $12=($11) & 15; //@line 151 "xmltok.c"
    var $13=($12) + ($6); //@line 151 "xmltok.c"
    var $14=_nmstrtPages+$13; //@line 151 "xmltok.c"
    var $15=HEAP[$14]; //@line 151 "xmltok.c"
    var $16=($15); //@line 151 "xmltok.c"
    var $17=($16) * 8;
    var $18=$p_addr; //@line 151 "xmltok.c"
    var $19=$18+1; //@line 151 "xmltok.c"
    var $20=HEAP[$19]; //@line 151 "xmltok.c"
    var $21=($20); //@line 151 "xmltok.c"
    var $22=($21) & 3; //@line 151 "xmltok.c"
    var $23=($22) * 2;
    var $24=$p_addr; //@line 151 "xmltok.c"
    var $25=$24+2; //@line 151 "xmltok.c"
    var $26=HEAP[$25]; //@line 151 "xmltok.c"
    var $27=($26) >>> 5; //@line 151 "xmltok.c"
    var $28=($27); //@line 151 "xmltok.c"
    var $29=($28) & 1; //@line 151 "xmltok.c"
    var $30=($23) + ($17); //@line 151 "xmltok.c"
    var $31=($30) + ($29); //@line 151 "xmltok.c"
    var $32=_namingBitmap+$31*4; //@line 151 "xmltok.c"
    var $33=HEAP[$32]; //@line 151 "xmltok.c"
    var $34=$p_addr; //@line 151 "xmltok.c"
    var $35=$34+2; //@line 151 "xmltok.c"
    var $36=HEAP[$35]; //@line 151 "xmltok.c"
    var $37=($36); //@line 151 "xmltok.c"
    var $38=($37) & 31; //@line 151 "xmltok.c"
    var $39=1 << ($38); //@line 151 "xmltok.c"
    var $40=($39) & ($33); //@line 151 "xmltok.c"
    $0=$40; //@line 151 "xmltok.c"
    var $41=$0; //@line 151 "xmltok.c"
    $retval=$41; //@line 151 "xmltok.c"
    var $retval1=$retval; //@line 151 "xmltok.c"
    ;
    return $retval1; //@line 151 "xmltok.c"
  }
  

  function _utf8_isInvalid2($enc, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $iftmp_18;
        var $0;
        $enc_addr=$enc;
        $p_addr=$p;
        var $1=$p_addr; //@line 159 "xmltok.c"
        var $2=HEAP[$1]; //@line 159 "xmltok.c"
        var $3=($2) <= 193; //@line 159 "xmltok.c"
        if ($3) { __label__ = 3; break; } else { __label__ = 1; break; } //@line 159 "xmltok.c"
      case 1: // $bb
        var $4=$p_addr; //@line 159 "xmltok.c"
        var $5=$4+1; //@line 159 "xmltok.c"
        var $6=HEAP[$5]; //@line 159 "xmltok.c"
        var $7=($6) >= 0; //@line 159 "xmltok.c"
        if ($7) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 159 "xmltok.c"
      case 2: // $bb1
        var $8=$p_addr; //@line 159 "xmltok.c"
        var $9=$8+1; //@line 159 "xmltok.c"
        var $10=HEAP[$9]; //@line 159 "xmltok.c"
        var $11=($10); //@line 159 "xmltok.c"
        var $12=($11) & 192; //@line 159 "xmltok.c"
        var $13=($12)==192; //@line 159 "xmltok.c"
        if ($13) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 159 "xmltok.c"
      case 3: // $bb2
        $iftmp_18=1; //@line 159 "xmltok.c"
        __label__ = 5; break; //@line 159 "xmltok.c"
      case 4: // $bb3
        $iftmp_18=0; //@line 159 "xmltok.c"
        __label__ = 5; break; //@line 159 "xmltok.c"
      case 5: // $bb4
        var $14=$iftmp_18; //@line 159 "xmltok.c"
        $0=$14; //@line 159 "xmltok.c"
        var $15=$0; //@line 159 "xmltok.c"
        $retval=$15; //@line 159 "xmltok.c"
        var $retval5=$retval; //@line 159 "xmltok.c"
        ;
        return $retval5; //@line 159 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _utf8_isInvalid3($enc, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $iftmp_32;
        var $iftmp_29;
        var $iftmp_22;
        var $0;
        $enc_addr=$enc;
        $p_addr=$p;
        var $1=$p_addr; //@line 165 "xmltok.c"
        var $2=$1+2; //@line 165 "xmltok.c"
        var $3=HEAP[$2]; //@line 165 "xmltok.c"
        var $4=($3) >= 0; //@line 165 "xmltok.c"
        if ($4) { __label__ = 18; break; } else { __label__ = 1; break; } //@line 165 "xmltok.c"
      case 1: // $bb
        var $5=$p_addr; //@line 165 "xmltok.c"
        var $6=HEAP[$5]; //@line 165 "xmltok.c"
        var $7=($6)!=-17; //@line 165 "xmltok.c"
        if ($7) { __label__ = 4; break; } else { __label__ = 2; break; } //@line 165 "xmltok.c"
      case 2: // $bb1
        var $8=$p_addr; //@line 165 "xmltok.c"
        var $9=$8+1; //@line 165 "xmltok.c"
        var $10=HEAP[$9]; //@line 165 "xmltok.c"
        var $11=($10)!=-65; //@line 165 "xmltok.c"
        if ($11) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 165 "xmltok.c"
      case 3: // $bb2
        var $12=$p_addr; //@line 165 "xmltok.c"
        var $13=$12+2; //@line 165 "xmltok.c"
        var $14=HEAP[$13]; //@line 165 "xmltok.c"
        var $15=($14) > 189; //@line 165 "xmltok.c"
        if ($15) { __label__ = 18; break; } else { __label__ = 5; break; } //@line 165 "xmltok.c"
      case 4: // $bb4
        var $16=$p_addr; //@line 165 "xmltok.c"
        var $17=$16+2; //@line 165 "xmltok.c"
        var $18=HEAP[$17]; //@line 165 "xmltok.c"
        var $19=($18); //@line 165 "xmltok.c"
        var $20=($19) & 192; //@line 165 "xmltok.c"
        var $21=($20)==192; //@line 165 "xmltok.c"
        if ($21) { __label__ = 18; break; } else { __label__ = 5; break; } //@line 165 "xmltok.c"
      case 5: // $bb5
        var $22=$p_addr; //@line 165 "xmltok.c"
        var $23=HEAP[$22]; //@line 165 "xmltok.c"
        var $24=($23)==-32; //@line 165 "xmltok.c"
        var $25=$p_addr; //@line 165 "xmltok.c"
        var $26=$25+1; //@line 165 "xmltok.c"
        var $27=HEAP[$26]; //@line 165 "xmltok.c"
        if ($24) { __label__ = 6; break; } else { __label__ = 11; break; } //@line 165 "xmltok.c"
      case 6: // $bb6
        var $28=($27) <= 159; //@line 165 "xmltok.c"
        if ($28) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 165 "xmltok.c"
      case 7: // $bb7
        var $29=$p_addr; //@line 165 "xmltok.c"
        var $30=$29+1; //@line 165 "xmltok.c"
        var $31=HEAP[$30]; //@line 165 "xmltok.c"
        var $32=($31); //@line 165 "xmltok.c"
        var $33=($32) & 192; //@line 165 "xmltok.c"
        var $34=($33)==192; //@line 165 "xmltok.c"
        if ($34) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 165 "xmltok.c"
      case 8: // $bb8
        $iftmp_29=1; //@line 165 "xmltok.c"
        __label__ = 10; break; //@line 165 "xmltok.c"
      case 9: // $bb9
        $iftmp_29=0; //@line 165 "xmltok.c"
        __label__ = 10; break; //@line 165 "xmltok.c"
      case 10: // $bb10
        var $35=$iftmp_29; //@line 165 "xmltok.c"
        var $36=((($35)) & 255); //@line 165 "xmltok.c"
        var $toBool=($36)!=0; //@line 165 "xmltok.c"
        if ($toBool) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 165 "xmltok.c"
      case 11: // $bb11
        var $37=($27) >= 0; //@line 165 "xmltok.c"
        if ($37) { __label__ = 15; break; } else { __label__ = 12; break; } //@line 165 "xmltok.c"
      case 12: // $bb12
        var $38=$p_addr; //@line 165 "xmltok.c"
        var $39=HEAP[$38]; //@line 165 "xmltok.c"
        var $40=($39)==-19; //@line 165 "xmltok.c"
        var $41=$p_addr; //@line 165 "xmltok.c"
        var $42=$41+1; //@line 165 "xmltok.c"
        var $43=HEAP[$42]; //@line 165 "xmltok.c"
        if ($40) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 165 "xmltok.c"
      case 13: // $bb13
        var $44=($43) > 159; //@line 165 "xmltok.c"
        if ($44) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 165 "xmltok.c"
      case 14: // $bb14
        var $45=($43); //@line 165 "xmltok.c"
        var $46=($45) & 192; //@line 165 "xmltok.c"
        var $47=($46)==192; //@line 165 "xmltok.c"
        if ($47) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 165 "xmltok.c"
      case 15: // $bb15
        $iftmp_32=1; //@line 165 "xmltok.c"
        __label__ = 17; break; //@line 165 "xmltok.c"
      case 16: // $bb16
        $iftmp_32=0; //@line 165 "xmltok.c"
        __label__ = 17; break; //@line 165 "xmltok.c"
      case 17: // $bb17
        var $48=$iftmp_32; //@line 165 "xmltok.c"
        var $49=((($48)) & 255); //@line 165 "xmltok.c"
        var $toBool18=($49)!=0; //@line 165 "xmltok.c"
        if ($toBool18) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 165 "xmltok.c"
      case 18: // $bb19
        $iftmp_22=1; //@line 165 "xmltok.c"
        __label__ = 20; break; //@line 165 "xmltok.c"
      case 19: // $bb20
        $iftmp_22=0; //@line 165 "xmltok.c"
        __label__ = 20; break; //@line 165 "xmltok.c"
      case 20: // $bb21
        var $50=$iftmp_22; //@line 165 "xmltok.c"
        $0=$50; //@line 165 "xmltok.c"
        var $51=$0; //@line 165 "xmltok.c"
        $retval=$51; //@line 165 "xmltok.c"
        var $retval22=$retval; //@line 165 "xmltok.c"
        ;
        return $retval22; //@line 165 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _utf8_isInvalid4($enc, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $iftmp_46;
        var $iftmp_43;
        var $iftmp_37;
        var $0;
        $enc_addr=$enc;
        $p_addr=$p;
        var $1=$p_addr; //@line 171 "xmltok.c"
        var $2=$1+3; //@line 171 "xmltok.c"
        var $3=HEAP[$2]; //@line 171 "xmltok.c"
        var $4=($3) >= 0; //@line 171 "xmltok.c"
        if ($4) { __label__ = 17; break; } else { __label__ = 1; break; } //@line 171 "xmltok.c"
      case 1: // $bb
        var $5=$p_addr; //@line 171 "xmltok.c"
        var $6=$5+3; //@line 171 "xmltok.c"
        var $7=HEAP[$6]; //@line 171 "xmltok.c"
        var $8=($7); //@line 171 "xmltok.c"
        var $9=($8) & 192; //@line 171 "xmltok.c"
        var $10=($9)==192; //@line 171 "xmltok.c"
        if ($10) { __label__ = 17; break; } else { __label__ = 2; break; } //@line 171 "xmltok.c"
      case 2: // $bb1
        var $11=$p_addr; //@line 171 "xmltok.c"
        var $12=$11+2; //@line 171 "xmltok.c"
        var $13=HEAP[$12]; //@line 171 "xmltok.c"
        var $14=($13) >= 0; //@line 171 "xmltok.c"
        if ($14) { __label__ = 17; break; } else { __label__ = 3; break; } //@line 171 "xmltok.c"
      case 3: // $bb2
        var $15=$p_addr; //@line 171 "xmltok.c"
        var $16=$15+2; //@line 171 "xmltok.c"
        var $17=HEAP[$16]; //@line 171 "xmltok.c"
        var $18=($17); //@line 171 "xmltok.c"
        var $19=($18) & 192; //@line 171 "xmltok.c"
        var $20=($19)==192; //@line 171 "xmltok.c"
        if ($20) { __label__ = 17; break; } else { __label__ = 4; break; } //@line 171 "xmltok.c"
      case 4: // $bb3
        var $21=$p_addr; //@line 171 "xmltok.c"
        var $22=HEAP[$21]; //@line 171 "xmltok.c"
        var $23=($22)==-16; //@line 171 "xmltok.c"
        var $24=$p_addr; //@line 171 "xmltok.c"
        var $25=$24+1; //@line 171 "xmltok.c"
        var $26=HEAP[$25]; //@line 171 "xmltok.c"
        if ($23) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 171 "xmltok.c"
      case 5: // $bb4
        var $27=($26) <= 143; //@line 171 "xmltok.c"
        if ($27) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 171 "xmltok.c"
      case 6: // $bb5
        var $28=$p_addr; //@line 171 "xmltok.c"
        var $29=$28+1; //@line 171 "xmltok.c"
        var $30=HEAP[$29]; //@line 171 "xmltok.c"
        var $31=($30); //@line 171 "xmltok.c"
        var $32=($31) & 192; //@line 171 "xmltok.c"
        var $33=($32)==192; //@line 171 "xmltok.c"
        if ($33) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 171 "xmltok.c"
      case 7: // $bb6
        $iftmp_43=1; //@line 171 "xmltok.c"
        __label__ = 9; break; //@line 171 "xmltok.c"
      case 8: // $bb7
        $iftmp_43=0; //@line 171 "xmltok.c"
        __label__ = 9; break; //@line 171 "xmltok.c"
      case 9: // $bb8
        var $34=$iftmp_43; //@line 171 "xmltok.c"
        var $35=((($34)) & 255); //@line 171 "xmltok.c"
        var $toBool=($35)!=0; //@line 171 "xmltok.c"
        if ($toBool) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 171 "xmltok.c"
      case 10: // $bb9
        var $36=($26) >= 0; //@line 171 "xmltok.c"
        if ($36) { __label__ = 14; break; } else { __label__ = 11; break; } //@line 171 "xmltok.c"
      case 11: // $bb10
        var $37=$p_addr; //@line 171 "xmltok.c"
        var $38=HEAP[$37]; //@line 171 "xmltok.c"
        var $39=($38)==-12; //@line 171 "xmltok.c"
        var $40=$p_addr; //@line 171 "xmltok.c"
        var $41=$40+1; //@line 171 "xmltok.c"
        var $42=HEAP[$41]; //@line 171 "xmltok.c"
        if ($39) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 171 "xmltok.c"
      case 12: // $bb11
        var $43=($42) > 143; //@line 171 "xmltok.c"
        if ($43) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 171 "xmltok.c"
      case 13: // $bb12
        var $44=($42); //@line 171 "xmltok.c"
        var $45=($44) & 192; //@line 171 "xmltok.c"
        var $46=($45)==192; //@line 171 "xmltok.c"
        if ($46) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 171 "xmltok.c"
      case 14: // $bb13
        $iftmp_46=1; //@line 171 "xmltok.c"
        __label__ = 16; break; //@line 171 "xmltok.c"
      case 15: // $bb14
        $iftmp_46=0; //@line 171 "xmltok.c"
        __label__ = 16; break; //@line 171 "xmltok.c"
      case 16: // $bb15
        var $47=$iftmp_46; //@line 171 "xmltok.c"
        var $48=((($47)) & 255); //@line 171 "xmltok.c"
        var $toBool16=($48)!=0; //@line 171 "xmltok.c"
        if ($toBool16) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 171 "xmltok.c"
      case 17: // $bb17
        $iftmp_37=1; //@line 171 "xmltok.c"
        __label__ = 19; break; //@line 171 "xmltok.c"
      case 18: // $bb18
        $iftmp_37=0; //@line 171 "xmltok.c"
        __label__ = 19; break; //@line 171 "xmltok.c"
      case 19: // $bb19
        var $49=$iftmp_37; //@line 171 "xmltok.c"
        $0=$49; //@line 171 "xmltok.c"
        var $50=$0; //@line 171 "xmltok.c"
        $retval=$50; //@line 171 "xmltok.c"
        var $retval20=$retval; //@line 171 "xmltok.c"
        ;
        return $retval20; //@line 171 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_scanComment($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 93 "xmltok_impl.c"
        var $2=$end_addr; //@line 93 "xmltok_impl.c"
        var $3=($1)!=($2); //@line 93 "xmltok_impl.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 31; break; } //@line 93 "xmltok_impl.c"
      case 1: // $bb
        var $4=$ptr_addr; //@line 94 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 94 "xmltok_impl.c"
        var $6=($5)!=45; //@line 94 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 94 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$nextTokPtr_addr; //@line 95 "xmltok_impl.c"
        var $8=$ptr_addr; //@line 95 "xmltok_impl.c"
        HEAP[$7]=$8; //@line 95 "xmltok_impl.c"
        $0=0; //@line 96 "xmltok_impl.c"
        __label__ = 32; break; //@line 96 "xmltok_impl.c"
      case 3: // $bb2
        var $9=$ptr_addr; //@line 98 "xmltok_impl.c"
        var $10=$9+1; //@line 98 "xmltok_impl.c"
        $ptr_addr=$10; //@line 98 "xmltok_impl.c"
        __label__ = 30; break; //@line 98 "xmltok_impl.c"
      case 4: // $bb3
        var $11=$enc_addr; //@line 100 "xmltok_impl.c"
        var $12=$11; //@line 100 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 100 "xmltok_impl.c"
        var $15=($14); //@line 100 "xmltok_impl.c"
        var $16=$12+72; //@line 100 "xmltok_impl.c"
        var $17=$16+$15; //@line 100 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 100 "xmltok_impl.c"
        var $19=($18); //@line 100 "xmltok_impl.c"
        if ($19 == 0) {
          __label__ = 20; break;
        }
        else if ($19 == 1) {
          __label__ = 20; break;
        }
        else if ($19 == 5) {
          __label__ = 5; break;
        }
        else if ($19 == 6) {
          __label__ = 10; break;
        }
        else if ($19 == 7) {
          __label__ = 15; break;
        }
        else if ($19 == 8) {
          __label__ = 20; break;
        }
        else if ($19 == 27) {
          __label__ = 21; break;
        }
        else {
        __label__ = 29; break;
        }
        
      case 5: // $bb4
        var $20=$end_addr; //@line 101 "xmltok_impl.c"
        var $21=($20); //@line 101 "xmltok_impl.c"
        var $22=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $23=($22); //@line 101 "xmltok_impl.c"
        var $24=($21) - ($23); //@line 101 "xmltok_impl.c"
        var $25=($24) <= 1; //@line 101 "xmltok_impl.c"
        if ($25) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 101 "xmltok_impl.c"
      case 6: // $bb5
        $0=-2; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 7: // $bb6
        var $26=$enc_addr; //@line 101 "xmltok_impl.c"
        var $27=$26; //@line 101 "xmltok_impl.c"
        var $28=$27+352; //@line 101 "xmltok_impl.c"
        var $29=HEAP[$28]; //@line 101 "xmltok_impl.c"
        var $30=$enc_addr; //@line 101 "xmltok_impl.c"
        var $31=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $32=FUNCTION_TABLE[$29]($30, $31); //@line 101 "xmltok_impl.c"
        var $33=($32)!=0; //@line 101 "xmltok_impl.c"
        if ($33) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 101 "xmltok_impl.c"
      case 8: // $bb7
        var $34=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$34]=$35; //@line 101 "xmltok_impl.c"
        $0=0; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 9: // $bb8
        var $36=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $37=$36+2; //@line 101 "xmltok_impl.c"
        $ptr_addr=$37; //@line 101 "xmltok_impl.c"
        __label__ = 30; break; //@line 101 "xmltok_impl.c"
      case 10: // $bb9
        var $38=$end_addr; //@line 101 "xmltok_impl.c"
        var $39=($38); //@line 101 "xmltok_impl.c"
        var $40=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $41=($40); //@line 101 "xmltok_impl.c"
        var $42=($39) - ($41); //@line 101 "xmltok_impl.c"
        var $43=($42) <= 2; //@line 101 "xmltok_impl.c"
        if ($43) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 101 "xmltok_impl.c"
      case 11: // $bb10
        $0=-2; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 12: // $bb11
        var $44=$enc_addr; //@line 101 "xmltok_impl.c"
        var $45=$44; //@line 101 "xmltok_impl.c"
        var $46=$45+356; //@line 101 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 101 "xmltok_impl.c"
        var $48=$enc_addr; //@line 101 "xmltok_impl.c"
        var $49=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $50=FUNCTION_TABLE[$47]($48, $49); //@line 101 "xmltok_impl.c"
        var $51=($50)!=0; //@line 101 "xmltok_impl.c"
        if ($51) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 101 "xmltok_impl.c"
      case 13: // $bb12
        var $52=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 101 "xmltok_impl.c"
        $0=0; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 14: // $bb13
        var $54=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $55=$54+3; //@line 101 "xmltok_impl.c"
        $ptr_addr=$55; //@line 101 "xmltok_impl.c"
        __label__ = 30; break; //@line 101 "xmltok_impl.c"
      case 15: // $bb14
        var $56=$end_addr; //@line 101 "xmltok_impl.c"
        var $57=($56); //@line 101 "xmltok_impl.c"
        var $58=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $59=($58); //@line 101 "xmltok_impl.c"
        var $60=($57) - ($59); //@line 101 "xmltok_impl.c"
        var $61=($60) <= 3; //@line 101 "xmltok_impl.c"
        if ($61) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 101 "xmltok_impl.c"
      case 16: // $bb15
        $0=-2; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 17: // $bb16
        var $62=$enc_addr; //@line 101 "xmltok_impl.c"
        var $63=$62; //@line 101 "xmltok_impl.c"
        var $64=$63+360; //@line 101 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 101 "xmltok_impl.c"
        var $66=$enc_addr; //@line 101 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $68=FUNCTION_TABLE[$65]($66, $67); //@line 101 "xmltok_impl.c"
        var $69=($68)!=0; //@line 101 "xmltok_impl.c"
        if ($69) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 101 "xmltok_impl.c"
      case 18: // $bb17
        var $70=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $71=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$70]=$71; //@line 101 "xmltok_impl.c"
        $0=0; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 19: // $bb18
        var $72=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $73=$72+4; //@line 101 "xmltok_impl.c"
        $ptr_addr=$73; //@line 101 "xmltok_impl.c"
        __label__ = 30; break; //@line 101 "xmltok_impl.c"
      case 20: // $bb19
        var $74=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$74]=$75; //@line 101 "xmltok_impl.c"
        $0=0; //@line 101 "xmltok_impl.c"
        __label__ = 32; break; //@line 101 "xmltok_impl.c"
      case 21: // $bb20
        var $76=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $77=$76+1; //@line 103 "xmltok_impl.c"
        $ptr_addr=$77; //@line 103 "xmltok_impl.c"
        var $78=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $79=$end_addr; //@line 103 "xmltok_impl.c"
        var $80=($78)==($79); //@line 103 "xmltok_impl.c"
        if ($80) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 103 "xmltok_impl.c"
      case 22: // $bb21
        $0=-1; //@line 104 "xmltok_impl.c"
        __label__ = 32; break; //@line 104 "xmltok_impl.c"
      case 23: // $bb22
        var $81=$ptr_addr; //@line 105 "xmltok_impl.c"
        var $82=HEAP[$81]; //@line 105 "xmltok_impl.c"
        var $83=($82)==45; //@line 105 "xmltok_impl.c"
        if ($83) { __label__ = 24; break; } else { __label__ = 30; break; } //@line 105 "xmltok_impl.c"
      case 24: // $bb23
        var $84=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $85=$84+1; //@line 106 "xmltok_impl.c"
        $ptr_addr=$85; //@line 106 "xmltok_impl.c"
        var $86=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $87=$end_addr; //@line 106 "xmltok_impl.c"
        var $88=($86)==($87); //@line 106 "xmltok_impl.c"
        if ($88) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 106 "xmltok_impl.c"
      case 25: // $bb24
        $0=-1; //@line 107 "xmltok_impl.c"
        __label__ = 32; break; //@line 107 "xmltok_impl.c"
      case 26: // $bb25
        var $89=$ptr_addr; //@line 108 "xmltok_impl.c"
        var $90=HEAP[$89]; //@line 108 "xmltok_impl.c"
        var $91=($90)!=62; //@line 108 "xmltok_impl.c"
        if ($91) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 108 "xmltok_impl.c"
      case 27: // $bb26
        var $92=$nextTokPtr_addr; //@line 109 "xmltok_impl.c"
        var $93=$ptr_addr; //@line 109 "xmltok_impl.c"
        HEAP[$92]=$93; //@line 109 "xmltok_impl.c"
        $0=0; //@line 110 "xmltok_impl.c"
        __label__ = 32; break; //@line 110 "xmltok_impl.c"
      case 28: // $bb27
        var $94=$ptr_addr; //@line 112 "xmltok_impl.c"
        var $95=$94+1; //@line 112 "xmltok_impl.c"
        var $96=$nextTokPtr_addr; //@line 112 "xmltok_impl.c"
        HEAP[$96]=$95; //@line 112 "xmltok_impl.c"
        $0=13; //@line 113 "xmltok_impl.c"
        __label__ = 32; break; //@line 113 "xmltok_impl.c"
      case 29: // $bb29
        var $97=$ptr_addr; //@line 117 "xmltok_impl.c"
        var $98=$97+1; //@line 117 "xmltok_impl.c"
        $ptr_addr=$98; //@line 117 "xmltok_impl.c"
        __label__ = 30; break; //@line 117 "xmltok_impl.c"
      case 30: // $bb30
        var $99=$ptr_addr; //@line 99 "xmltok_impl.c"
        var $100=$end_addr; //@line 99 "xmltok_impl.c"
        var $101=($99)!=($100); //@line 99 "xmltok_impl.c"
        if ($101) { __label__ = 4; break; } else { __label__ = 31; break; } //@line 99 "xmltok_impl.c"
      case 31: // $bb31
        $0=-1; //@line 122 "xmltok_impl.c"
        __label__ = 32; break; //@line 122 "xmltok_impl.c"
      case 32: // $bb32
        var $102=$0; //@line 96 "xmltok_impl.c"
        $retval=$102; //@line 96 "xmltok_impl.c"
        var $retval33=$retval; //@line 96 "xmltok_impl.c"
        ;
        return $retval33; //@line 96 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_checkPiTarget($enc, $ptr, $end, $tokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $tokPtr_addr;
        var $retval;
        var $0;
        var $upper;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $tokPtr_addr=$tokPtr;
        $upper=0; //@line 178 "xmltok_impl.c"
        var $1=$tokPtr_addr; //@line 179 "xmltok_impl.c"
        HEAP[$1]=11; //@line 179 "xmltok_impl.c"
        var $2=$end_addr; //@line 180 "xmltok_impl.c"
        var $3=($2); //@line 180 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 180 "xmltok_impl.c"
        var $5=($4); //@line 180 "xmltok_impl.c"
        var $6=($3) - ($5); //@line 180 "xmltok_impl.c"
        var $7=($6)!=3; //@line 180 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 180 "xmltok_impl.c"
      case 1: // $bb
        $0=1; //@line 181 "xmltok_impl.c"
        __label__ = 14; break; //@line 181 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$ptr_addr; //@line 182 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 182 "xmltok_impl.c"
        var $10=($9); //@line 182 "xmltok_impl.c"
        if ($10 == 88) {
          __label__ = 3; break;
        }
        else if ($10 == 120) {
          __label__ = 5; break;
        }
        else {
        __label__ = 4; break;
        }
        
      case 3: // $bb3
        $upper=1; //@line 186 "xmltok_impl.c"
        __label__ = 5; break; //@line 186 "xmltok_impl.c"
      case 4: // $bb4
        $0=1; //@line 189 "xmltok_impl.c"
        __label__ = 14; break; //@line 189 "xmltok_impl.c"
      case 5: // $bb5
        var $11=$ptr_addr; //@line 191 "xmltok_impl.c"
        var $12=$11+1; //@line 191 "xmltok_impl.c"
        $ptr_addr=$12; //@line 191 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 192 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 192 "xmltok_impl.c"
        var $15=($14); //@line 192 "xmltok_impl.c"
        if ($15 == 77) {
          __label__ = 6; break;
        }
        else if ($15 == 109) {
          __label__ = 8; break;
        }
        else {
        __label__ = 7; break;
        }
        
      case 6: // $bb7
        $upper=1; //@line 196 "xmltok_impl.c"
        __label__ = 8; break; //@line 196 "xmltok_impl.c"
      case 7: // $bb8
        $0=1; //@line 199 "xmltok_impl.c"
        __label__ = 14; break; //@line 199 "xmltok_impl.c"
      case 8: // $bb9
        var $16=$ptr_addr; //@line 201 "xmltok_impl.c"
        var $17=$16+1; //@line 201 "xmltok_impl.c"
        $ptr_addr=$17; //@line 201 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 202 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 202 "xmltok_impl.c"
        var $20=($19); //@line 202 "xmltok_impl.c"
        if ($20 == 76) {
          __label__ = 9; break;
        }
        else if ($20 == 108) {
          __label__ = 11; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 9: // $bb13_thread
        $upper=1; //@line 206 "xmltok_impl.c"
        __label__ = 12; break;
      case 10: // $bb12
        $0=1; //@line 209 "xmltok_impl.c"
        __label__ = 14; break; //@line 209 "xmltok_impl.c"
      case 11: // $bb13
        var $_pr=$upper;
        var $21=($_pr)!=0; //@line 211 "xmltok_impl.c"
        if ($21) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 211 "xmltok_impl.c"
      case 12: // $bb14
        $0=0; //@line 212 "xmltok_impl.c"
        __label__ = 14; break; //@line 212 "xmltok_impl.c"
      case 13: // $bb15
        var $22=$tokPtr_addr; //@line 213 "xmltok_impl.c"
        HEAP[$22]=12; //@line 213 "xmltok_impl.c"
        $0=1; //@line 214 "xmltok_impl.c"
        __label__ = 14; break; //@line 214 "xmltok_impl.c"
      case 14: // $bb16
        var $23=$0; //@line 181 "xmltok_impl.c"
        $retval=$23; //@line 181 "xmltok_impl.c"
        var $retval17=$retval; //@line 181 "xmltok_impl.c"
        ;
        return $retval17; //@line 181 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_scanPi($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        var $tok=__stackBase__;
        var $target;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 224 "xmltok_impl.c"
        $target=$1; //@line 224 "xmltok_impl.c"
        var $2=$ptr_addr; //@line 225 "xmltok_impl.c"
        var $3=$end_addr; //@line 225 "xmltok_impl.c"
        var $4=($2)==($3); //@line 225 "xmltok_impl.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 225 "xmltok_impl.c"
      case 1: // $bb
        $0=-1; //@line 226 "xmltok_impl.c"
        __label__ = 75; break; //@line 226 "xmltok_impl.c"
      case 2: // $bb1
        var $5=$enc_addr; //@line 227 "xmltok_impl.c"
        var $6=$5; //@line 227 "xmltok_impl.c"
        var $7=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 227 "xmltok_impl.c"
        var $9=($8); //@line 227 "xmltok_impl.c"
        var $10=$6+72; //@line 227 "xmltok_impl.c"
        var $11=$10+$9; //@line 227 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 227 "xmltok_impl.c"
        var $13=($12); //@line 227 "xmltok_impl.c"
        if ($13 == 5) {
          __label__ = 5; break;
        }
        else if ($13 == 6) {
          __label__ = 10; break;
        }
        else if ($13 == 7) {
          __label__ = 15; break;
        }
        else if ($13 == 22) {
          __label__ = 4; break;
        }
        else if ($13 == 24) {
          __label__ = 4; break;
        }
        else if ($13 == 29) {
          __label__ = 3; break;
        }
        else {
        __label__ = 20; break;
        }
        
      case 3: // $bb2
        var $14=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $15=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$14]=$15; //@line 228 "xmltok_impl.c"
        $0=0; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 4: // $bb3
        var $16=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $17=$16+1; //@line 228 "xmltok_impl.c"
        $ptr_addr=$17; //@line 228 "xmltok_impl.c"
        __label__ = 73; break; //@line 228 "xmltok_impl.c"
      case 5: // $bb4
        var $18=$end_addr; //@line 228 "xmltok_impl.c"
        var $19=($18); //@line 228 "xmltok_impl.c"
        var $20=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $21=($20); //@line 228 "xmltok_impl.c"
        var $22=($19) - ($21); //@line 228 "xmltok_impl.c"
        var $23=($22) <= 1; //@line 228 "xmltok_impl.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 228 "xmltok_impl.c"
      case 6: // $bb5
        $0=-2; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 7: // $bb6
        var $24=$enc_addr; //@line 228 "xmltok_impl.c"
        var $25=$24; //@line 228 "xmltok_impl.c"
        var $26=$25+340; //@line 228 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 228 "xmltok_impl.c"
        var $28=$enc_addr; //@line 228 "xmltok_impl.c"
        var $29=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $30=FUNCTION_TABLE[$27]($28, $29); //@line 228 "xmltok_impl.c"
        var $31=($30)==0; //@line 228 "xmltok_impl.c"
        if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 228 "xmltok_impl.c"
      case 8: // $bb7
        var $32=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $33=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$32]=$33; //@line 228 "xmltok_impl.c"
        $0=0; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 9: // $bb8
        var $34=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $35=$34+2; //@line 228 "xmltok_impl.c"
        $ptr_addr=$35; //@line 228 "xmltok_impl.c"
        __label__ = 73; break; //@line 228 "xmltok_impl.c"
      case 10: // $bb9
        var $36=$end_addr; //@line 228 "xmltok_impl.c"
        var $37=($36); //@line 228 "xmltok_impl.c"
        var $38=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $39=($38); //@line 228 "xmltok_impl.c"
        var $40=($37) - ($39); //@line 228 "xmltok_impl.c"
        var $41=($40) <= 2; //@line 228 "xmltok_impl.c"
        if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 228 "xmltok_impl.c"
      case 11: // $bb10
        $0=-2; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 12: // $bb11
        var $42=$enc_addr; //@line 228 "xmltok_impl.c"
        var $43=$42; //@line 228 "xmltok_impl.c"
        var $44=$43+344; //@line 228 "xmltok_impl.c"
        var $45=HEAP[$44]; //@line 228 "xmltok_impl.c"
        var $46=$enc_addr; //@line 228 "xmltok_impl.c"
        var $47=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $48=FUNCTION_TABLE[$45]($46, $47); //@line 228 "xmltok_impl.c"
        var $49=($48)==0; //@line 228 "xmltok_impl.c"
        if ($49) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 228 "xmltok_impl.c"
      case 13: // $bb12
        var $50=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $51=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$50]=$51; //@line 228 "xmltok_impl.c"
        $0=0; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 14: // $bb13
        var $52=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $53=$52+3; //@line 228 "xmltok_impl.c"
        $ptr_addr=$53; //@line 228 "xmltok_impl.c"
        __label__ = 73; break; //@line 228 "xmltok_impl.c"
      case 15: // $bb14
        var $54=$end_addr; //@line 228 "xmltok_impl.c"
        var $55=($54); //@line 228 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $57=($56); //@line 228 "xmltok_impl.c"
        var $58=($55) - ($57); //@line 228 "xmltok_impl.c"
        var $59=($58) <= 3; //@line 228 "xmltok_impl.c"
        if ($59) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 228 "xmltok_impl.c"
      case 16: // $bb15
        $0=-2; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 17: // $bb16
        var $60=$enc_addr; //@line 228 "xmltok_impl.c"
        var $61=$60; //@line 228 "xmltok_impl.c"
        var $62=$61+348; //@line 228 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 228 "xmltok_impl.c"
        var $64=$enc_addr; //@line 228 "xmltok_impl.c"
        var $65=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $66=FUNCTION_TABLE[$63]($64, $65); //@line 228 "xmltok_impl.c"
        var $67=($66)==0; //@line 228 "xmltok_impl.c"
        if ($67) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 228 "xmltok_impl.c"
      case 18: // $bb17
        var $68=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $69=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$68]=$69; //@line 228 "xmltok_impl.c"
        $0=0; //@line 228 "xmltok_impl.c"
        __label__ = 75; break; //@line 228 "xmltok_impl.c"
      case 19: // $bb18
        var $70=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $71=$70+4; //@line 228 "xmltok_impl.c"
        $ptr_addr=$71; //@line 228 "xmltok_impl.c"
        __label__ = 73; break; //@line 228 "xmltok_impl.c"
      case 20: // $bb19
        var $72=$nextTokPtr_addr; //@line 230 "xmltok_impl.c"
        var $73=$ptr_addr; //@line 230 "xmltok_impl.c"
        HEAP[$72]=$73; //@line 230 "xmltok_impl.c"
        $0=0; //@line 231 "xmltok_impl.c"
        __label__ = 75; break; //@line 231 "xmltok_impl.c"
      case 21: // $bb21
        var $74=$enc_addr; //@line 234 "xmltok_impl.c"
        var $75=$74; //@line 234 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $77=HEAP[$76]; //@line 234 "xmltok_impl.c"
        var $78=($77); //@line 234 "xmltok_impl.c"
        var $79=$75+72; //@line 234 "xmltok_impl.c"
        var $80=$79+$78; //@line 234 "xmltok_impl.c"
        var $81=HEAP[$80]; //@line 234 "xmltok_impl.c"
        var $82=($81); //@line 234 "xmltok_impl.c"
        if ($82 == 5) {
          __label__ = 24; break;
        }
        else if ($82 == 6) {
          __label__ = 29; break;
        }
        else if ($82 == 7) {
          __label__ = 34; break;
        }
        else if ($82 == 9) {
          __label__ = 39; break;
        }
        else if ($82 == 10) {
          __label__ = 39; break;
        }
        else if ($82 == 15) {
          __label__ = 66; break;
        }
        else if ($82 == 21) {
          __label__ = 39; break;
        }
        else if ($82 == 22) {
          __label__ = 23; break;
        }
        else if ($82 == 24) {
          __label__ = 23; break;
        }
        else if ($82 == 25) {
          __label__ = 23; break;
        }
        else if ($82 == 26) {
          __label__ = 23; break;
        }
        else if ($82 == 27) {
          __label__ = 23; break;
        }
        else if ($82 == 29) {
          __label__ = 22; break;
        }
        else {
        __label__ = 72; break;
        }
        
      case 22: // $bb22
        var $83=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $84=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$83]=$84; //@line 235 "xmltok_impl.c"
        $0=0; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 23: // $bb23
        var $85=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $86=$85+1; //@line 235 "xmltok_impl.c"
        $ptr_addr=$86; //@line 235 "xmltok_impl.c"
        __label__ = 73; break; //@line 235 "xmltok_impl.c"
      case 24: // $bb24
        var $87=$end_addr; //@line 235 "xmltok_impl.c"
        var $88=($87); //@line 235 "xmltok_impl.c"
        var $89=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $90=($89); //@line 235 "xmltok_impl.c"
        var $91=($88) - ($90); //@line 235 "xmltok_impl.c"
        var $92=($91) <= 1; //@line 235 "xmltok_impl.c"
        if ($92) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 235 "xmltok_impl.c"
      case 25: // $bb25
        $0=-2; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 26: // $bb26
        var $93=$enc_addr; //@line 235 "xmltok_impl.c"
        var $94=$93; //@line 235 "xmltok_impl.c"
        var $95=$94+328; //@line 235 "xmltok_impl.c"
        var $96=HEAP[$95]; //@line 235 "xmltok_impl.c"
        var $97=$enc_addr; //@line 235 "xmltok_impl.c"
        var $98=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $99=FUNCTION_TABLE[$96]($97, $98); //@line 235 "xmltok_impl.c"
        var $100=($99)==0; //@line 235 "xmltok_impl.c"
        if ($100) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 235 "xmltok_impl.c"
      case 27: // $bb27
        var $101=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $102=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$101]=$102; //@line 235 "xmltok_impl.c"
        $0=0; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 28: // $bb28
        var $103=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $104=$103+2; //@line 235 "xmltok_impl.c"
        $ptr_addr=$104; //@line 235 "xmltok_impl.c"
        __label__ = 73; break; //@line 235 "xmltok_impl.c"
      case 29: // $bb29
        var $105=$end_addr; //@line 235 "xmltok_impl.c"
        var $106=($105); //@line 235 "xmltok_impl.c"
        var $107=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $108=($107); //@line 235 "xmltok_impl.c"
        var $109=($106) - ($108); //@line 235 "xmltok_impl.c"
        var $110=($109) <= 2; //@line 235 "xmltok_impl.c"
        if ($110) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 235 "xmltok_impl.c"
      case 30: // $bb30
        $0=-2; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 31: // $bb31
        var $111=$enc_addr; //@line 235 "xmltok_impl.c"
        var $112=$111; //@line 235 "xmltok_impl.c"
        var $113=$112+332; //@line 235 "xmltok_impl.c"
        var $114=HEAP[$113]; //@line 235 "xmltok_impl.c"
        var $115=$enc_addr; //@line 235 "xmltok_impl.c"
        var $116=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $117=FUNCTION_TABLE[$114]($115, $116); //@line 235 "xmltok_impl.c"
        var $118=($117)==0; //@line 235 "xmltok_impl.c"
        if ($118) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 235 "xmltok_impl.c"
      case 32: // $bb32
        var $119=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $120=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$119]=$120; //@line 235 "xmltok_impl.c"
        $0=0; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 33: // $bb33
        var $121=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $122=$121+3; //@line 235 "xmltok_impl.c"
        $ptr_addr=$122; //@line 235 "xmltok_impl.c"
        __label__ = 73; break; //@line 235 "xmltok_impl.c"
      case 34: // $bb34
        var $123=$end_addr; //@line 235 "xmltok_impl.c"
        var $124=($123); //@line 235 "xmltok_impl.c"
        var $125=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $126=($125); //@line 235 "xmltok_impl.c"
        var $127=($124) - ($126); //@line 235 "xmltok_impl.c"
        var $128=($127) <= 3; //@line 235 "xmltok_impl.c"
        if ($128) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 235 "xmltok_impl.c"
      case 35: // $bb35
        $0=-2; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 36: // $bb36
        var $129=$enc_addr; //@line 235 "xmltok_impl.c"
        var $130=$129; //@line 235 "xmltok_impl.c"
        var $131=$130+336; //@line 235 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 235 "xmltok_impl.c"
        var $133=$enc_addr; //@line 235 "xmltok_impl.c"
        var $134=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $135=FUNCTION_TABLE[$132]($133, $134); //@line 235 "xmltok_impl.c"
        var $136=($135)==0; //@line 235 "xmltok_impl.c"
        if ($136) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 235 "xmltok_impl.c"
      case 37: // $bb37
        var $137=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $138=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$137]=$138; //@line 235 "xmltok_impl.c"
        $0=0; //@line 235 "xmltok_impl.c"
        __label__ = 75; break; //@line 235 "xmltok_impl.c"
      case 38: // $bb38
        var $139=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $140=$139+4; //@line 235 "xmltok_impl.c"
        $ptr_addr=$140; //@line 235 "xmltok_impl.c"
        __label__ = 73; break; //@line 235 "xmltok_impl.c"
      case 39: // $bb39
        var $141=$enc_addr; //@line 237 "xmltok_impl.c"
        var $142=$target; //@line 237 "xmltok_impl.c"
        var $143=$ptr_addr; //@line 237 "xmltok_impl.c"
        var $144=_normal_checkPiTarget($141, $142, $143, $tok); //@line 237 "xmltok_impl.c"
        var $145=($144)==0; //@line 237 "xmltok_impl.c"
        if ($145) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 237 "xmltok_impl.c"
      case 40: // $bb40
        var $146=$nextTokPtr_addr; //@line 238 "xmltok_impl.c"
        var $147=$ptr_addr; //@line 238 "xmltok_impl.c"
        HEAP[$146]=$147; //@line 238 "xmltok_impl.c"
        $0=0; //@line 239 "xmltok_impl.c"
        __label__ = 75; break; //@line 239 "xmltok_impl.c"
      case 41: // $bb41
        var $148=$ptr_addr; //@line 241 "xmltok_impl.c"
        var $149=$148+1; //@line 241 "xmltok_impl.c"
        $ptr_addr=$149; //@line 241 "xmltok_impl.c"
        __label__ = 64; break; //@line 241 "xmltok_impl.c"
      case 42: // $bb42
        var $150=$enc_addr; //@line 243 "xmltok_impl.c"
        var $151=$150; //@line 243 "xmltok_impl.c"
        var $152=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $153=HEAP[$152]; //@line 243 "xmltok_impl.c"
        var $154=($153); //@line 243 "xmltok_impl.c"
        var $155=$151+72; //@line 243 "xmltok_impl.c"
        var $156=$155+$154; //@line 243 "xmltok_impl.c"
        var $157=HEAP[$156]; //@line 243 "xmltok_impl.c"
        var $158=($157); //@line 243 "xmltok_impl.c"
        if ($158 == 0) {
          __label__ = 58; break;
        }
        else if ($158 == 1) {
          __label__ = 58; break;
        }
        else if ($158 == 5) {
          __label__ = 43; break;
        }
        else if ($158 == 6) {
          __label__ = 48; break;
        }
        else if ($158 == 7) {
          __label__ = 53; break;
        }
        else if ($158 == 8) {
          __label__ = 58; break;
        }
        else if ($158 == 15) {
          __label__ = 59; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 43: // $bb43
        var $159=$end_addr; //@line 244 "xmltok_impl.c"
        var $160=($159); //@line 244 "xmltok_impl.c"
        var $161=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $162=($161); //@line 244 "xmltok_impl.c"
        var $163=($160) - ($162); //@line 244 "xmltok_impl.c"
        var $164=($163) <= 1; //@line 244 "xmltok_impl.c"
        if ($164) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 244 "xmltok_impl.c"
      case 44: // $bb44
        $0=-2; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 45: // $bb45
        var $165=$enc_addr; //@line 244 "xmltok_impl.c"
        var $166=$165; //@line 244 "xmltok_impl.c"
        var $167=$166+352; //@line 244 "xmltok_impl.c"
        var $168=HEAP[$167]; //@line 244 "xmltok_impl.c"
        var $169=$enc_addr; //@line 244 "xmltok_impl.c"
        var $170=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $171=FUNCTION_TABLE[$168]($169, $170); //@line 244 "xmltok_impl.c"
        var $172=($171)!=0; //@line 244 "xmltok_impl.c"
        if ($172) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 244 "xmltok_impl.c"
      case 46: // $bb46
        var $173=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $174=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$173]=$174; //@line 244 "xmltok_impl.c"
        $0=0; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 47: // $bb47
        var $175=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $176=$175+2; //@line 244 "xmltok_impl.c"
        $ptr_addr=$176; //@line 244 "xmltok_impl.c"
        __label__ = 64; break; //@line 244 "xmltok_impl.c"
      case 48: // $bb48
        var $177=$end_addr; //@line 244 "xmltok_impl.c"
        var $178=($177); //@line 244 "xmltok_impl.c"
        var $179=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $180=($179); //@line 244 "xmltok_impl.c"
        var $181=($178) - ($180); //@line 244 "xmltok_impl.c"
        var $182=($181) <= 2; //@line 244 "xmltok_impl.c"
        if ($182) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 244 "xmltok_impl.c"
      case 49: // $bb49
        $0=-2; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 50: // $bb50
        var $183=$enc_addr; //@line 244 "xmltok_impl.c"
        var $184=$183; //@line 244 "xmltok_impl.c"
        var $185=$184+356; //@line 244 "xmltok_impl.c"
        var $186=HEAP[$185]; //@line 244 "xmltok_impl.c"
        var $187=$enc_addr; //@line 244 "xmltok_impl.c"
        var $188=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $189=FUNCTION_TABLE[$186]($187, $188); //@line 244 "xmltok_impl.c"
        var $190=($189)!=0; //@line 244 "xmltok_impl.c"
        if ($190) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 244 "xmltok_impl.c"
      case 51: // $bb51
        var $191=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $192=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$191]=$192; //@line 244 "xmltok_impl.c"
        $0=0; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 52: // $bb52
        var $193=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $194=$193+3; //@line 244 "xmltok_impl.c"
        $ptr_addr=$194; //@line 244 "xmltok_impl.c"
        __label__ = 64; break; //@line 244 "xmltok_impl.c"
      case 53: // $bb53
        var $195=$end_addr; //@line 244 "xmltok_impl.c"
        var $196=($195); //@line 244 "xmltok_impl.c"
        var $197=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $198=($197); //@line 244 "xmltok_impl.c"
        var $199=($196) - ($198); //@line 244 "xmltok_impl.c"
        var $200=($199) <= 3; //@line 244 "xmltok_impl.c"
        if ($200) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 244 "xmltok_impl.c"
      case 54: // $bb54
        $0=-2; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 55: // $bb55
        var $201=$enc_addr; //@line 244 "xmltok_impl.c"
        var $202=$201; //@line 244 "xmltok_impl.c"
        var $203=$202+360; //@line 244 "xmltok_impl.c"
        var $204=HEAP[$203]; //@line 244 "xmltok_impl.c"
        var $205=$enc_addr; //@line 244 "xmltok_impl.c"
        var $206=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $207=FUNCTION_TABLE[$204]($205, $206); //@line 244 "xmltok_impl.c"
        var $208=($207)!=0; //@line 244 "xmltok_impl.c"
        if ($208) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 244 "xmltok_impl.c"
      case 56: // $bb56
        var $209=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $210=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$209]=$210; //@line 244 "xmltok_impl.c"
        $0=0; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 57: // $bb57
        var $211=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $212=$211+4; //@line 244 "xmltok_impl.c"
        $ptr_addr=$212; //@line 244 "xmltok_impl.c"
        __label__ = 64; break; //@line 244 "xmltok_impl.c"
      case 58: // $bb58
        var $213=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $214=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$213]=$214; //@line 244 "xmltok_impl.c"
        $0=0; //@line 244 "xmltok_impl.c"
        __label__ = 75; break; //@line 244 "xmltok_impl.c"
      case 59: // $bb59
        var $215=$ptr_addr; //@line 246 "xmltok_impl.c"
        var $216=$215+1; //@line 246 "xmltok_impl.c"
        $ptr_addr=$216; //@line 246 "xmltok_impl.c"
        var $217=$ptr_addr; //@line 247 "xmltok_impl.c"
        var $218=$end_addr; //@line 247 "xmltok_impl.c"
        var $219=($217)==($218); //@line 247 "xmltok_impl.c"
        if ($219) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 247 "xmltok_impl.c"
      case 60: // $bb60
        $0=-1; //@line 248 "xmltok_impl.c"
        __label__ = 75; break; //@line 248 "xmltok_impl.c"
      case 61: // $bb61
        var $220=$ptr_addr; //@line 249 "xmltok_impl.c"
        var $221=HEAP[$220]; //@line 249 "xmltok_impl.c"
        var $222=($221)==62; //@line 249 "xmltok_impl.c"
        if ($222) { __label__ = 62; break; } else { __label__ = 64; break; } //@line 249 "xmltok_impl.c"
      case 62: // $bb62
        var $223=$ptr_addr; //@line 250 "xmltok_impl.c"
        var $224=$223+1; //@line 250 "xmltok_impl.c"
        var $225=$nextTokPtr_addr; //@line 250 "xmltok_impl.c"
        HEAP[$225]=$224; //@line 250 "xmltok_impl.c"
        var $226=HEAP[$tok]; //@line 251 "xmltok_impl.c"
        $0=$226; //@line 251 "xmltok_impl.c"
        __label__ = 75; break; //@line 251 "xmltok_impl.c"
      case 63: // $bb64
        var $227=$ptr_addr; //@line 255 "xmltok_impl.c"
        var $228=$227+1; //@line 255 "xmltok_impl.c"
        $ptr_addr=$228; //@line 255 "xmltok_impl.c"
        __label__ = 64; break; //@line 255 "xmltok_impl.c"
      case 64: // $bb65
        var $229=$ptr_addr; //@line 242 "xmltok_impl.c"
        var $230=$end_addr; //@line 242 "xmltok_impl.c"
        var $231=($229)!=($230); //@line 242 "xmltok_impl.c"
        if ($231) { __label__ = 42; break; } else { __label__ = 65; break; } //@line 242 "xmltok_impl.c"
      case 65: // $bb66
        $0=-1; //@line 259 "xmltok_impl.c"
        __label__ = 75; break; //@line 259 "xmltok_impl.c"
      case 66: // $bb67
        var $232=$enc_addr; //@line 261 "xmltok_impl.c"
        var $233=$target; //@line 261 "xmltok_impl.c"
        var $234=$ptr_addr; //@line 261 "xmltok_impl.c"
        var $235=_normal_checkPiTarget($232, $233, $234, $tok); //@line 261 "xmltok_impl.c"
        var $236=($235)==0; //@line 261 "xmltok_impl.c"
        if ($236) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 261 "xmltok_impl.c"
      case 67: // $bb68
        var $237=$nextTokPtr_addr; //@line 262 "xmltok_impl.c"
        var $238=$ptr_addr; //@line 262 "xmltok_impl.c"
        HEAP[$237]=$238; //@line 262 "xmltok_impl.c"
        $0=0; //@line 263 "xmltok_impl.c"
        __label__ = 75; break; //@line 263 "xmltok_impl.c"
      case 68: // $bb69
        var $239=$ptr_addr; //@line 265 "xmltok_impl.c"
        var $240=$239+1; //@line 265 "xmltok_impl.c"
        $ptr_addr=$240; //@line 265 "xmltok_impl.c"
        var $241=$ptr_addr; //@line 266 "xmltok_impl.c"
        var $242=$end_addr; //@line 266 "xmltok_impl.c"
        var $243=($241)==($242); //@line 266 "xmltok_impl.c"
        if ($243) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 266 "xmltok_impl.c"
      case 69: // $bb70
        $0=-1; //@line 267 "xmltok_impl.c"
        __label__ = 75; break; //@line 267 "xmltok_impl.c"
      case 70: // $bb71
        var $244=$ptr_addr; //@line 268 "xmltok_impl.c"
        var $245=HEAP[$244]; //@line 268 "xmltok_impl.c"
        var $246=($245)==62; //@line 268 "xmltok_impl.c"
        if ($246) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 268 "xmltok_impl.c"
      case 71: // $bb72
        var $247=$ptr_addr; //@line 269 "xmltok_impl.c"
        var $248=$247+1; //@line 269 "xmltok_impl.c"
        var $249=$nextTokPtr_addr; //@line 269 "xmltok_impl.c"
        HEAP[$249]=$248; //@line 269 "xmltok_impl.c"
        var $250=HEAP[$tok]; //@line 270 "xmltok_impl.c"
        $0=$250; //@line 270 "xmltok_impl.c"
        __label__ = 75; break; //@line 270 "xmltok_impl.c"
      case 72: // $bb73
        var $251=$nextTokPtr_addr; //@line 274 "xmltok_impl.c"
        var $252=$ptr_addr; //@line 274 "xmltok_impl.c"
        HEAP[$251]=$252; //@line 274 "xmltok_impl.c"
        $0=0; //@line 275 "xmltok_impl.c"
        __label__ = 75; break; //@line 275 "xmltok_impl.c"
      case 73: // $bb74
        var $253=$ptr_addr; //@line 233 "xmltok_impl.c"
        var $254=$end_addr; //@line 233 "xmltok_impl.c"
        var $255=($253)!=($254); //@line 233 "xmltok_impl.c"
        if ($255) { __label__ = 21; break; } else { __label__ = 74; break; } //@line 233 "xmltok_impl.c"
      case 74: // $bb75
        $0=-1; //@line 278 "xmltok_impl.c"
        __label__ = 75; break; //@line 278 "xmltok_impl.c"
      case 75: // $bb76
        var $256=$0; //@line 226 "xmltok_impl.c"
        $retval=$256; //@line 226 "xmltok_impl.c"
        var $retval77=$retval; //@line 226 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval77; //@line 226 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_cdataSectionTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 305 "xmltok_impl.c"
        var $2=$end_addr; //@line 305 "xmltok_impl.c"
        var $3=($1)==($2); //@line 305 "xmltok_impl.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 305 "xmltok_impl.c"
      case 1: // $bb
        $0=-4; //@line 306 "xmltok_impl.c"
        __label__ = 51; break; //@line 306 "xmltok_impl.c"
      case 2: // $bb1
        var $4=$enc_addr; //@line 316 "xmltok_impl.c"
        var $5=$4; //@line 316 "xmltok_impl.c"
        var $6=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 316 "xmltok_impl.c"
        var $8=($7); //@line 316 "xmltok_impl.c"
        var $9=$5+72; //@line 316 "xmltok_impl.c"
        var $10=$9+$8; //@line 316 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 316 "xmltok_impl.c"
        var $12=($11); //@line 316 "xmltok_impl.c"
        if ($12 == 0) {
          __label__ = 32; break;
        }
        else if ($12 == 1) {
          __label__ = 32; break;
        }
        else if ($12 == 4) {
          __label__ = 3; break;
        }
        else if ($12 == 5) {
          __label__ = 17; break;
        }
        else if ($12 == 6) {
          __label__ = 22; break;
        }
        else if ($12 == 7) {
          __label__ = 27; break;
        }
        else if ($12 == 8) {
          __label__ = 32; break;
        }
        else if ($12 == 9) {
          __label__ = 11; break;
        }
        else if ($12 == 10) {
          __label__ = 16; break;
        }
        else {
        __label__ = 33; break;
        }
        
      case 3: // $bb2
        var $13=$ptr_addr; //@line 318 "xmltok_impl.c"
        var $14=$13+1; //@line 318 "xmltok_impl.c"
        $ptr_addr=$14; //@line 318 "xmltok_impl.c"
        var $15=$ptr_addr; //@line 319 "xmltok_impl.c"
        var $16=$end_addr; //@line 319 "xmltok_impl.c"
        var $17=($15)==($16); //@line 319 "xmltok_impl.c"
        if ($17) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 319 "xmltok_impl.c"
      case 4: // $bb3
        $0=-1; //@line 320 "xmltok_impl.c"
        __label__ = 51; break; //@line 320 "xmltok_impl.c"
      case 5: // $bb4
        var $18=$ptr_addr; //@line 321 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 321 "xmltok_impl.c"
        var $20=($19)!=93; //@line 321 "xmltok_impl.c"
        if ($20) { __label__ = 49; break; } else { __label__ = 6; break; } //@line 321 "xmltok_impl.c"
      case 6: // $bb5
        var $21=$ptr_addr; //@line 323 "xmltok_impl.c"
        var $22=$21+1; //@line 323 "xmltok_impl.c"
        $ptr_addr=$22; //@line 323 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 324 "xmltok_impl.c"
        var $24=$end_addr; //@line 324 "xmltok_impl.c"
        var $25=($23)==($24); //@line 324 "xmltok_impl.c"
        if ($25) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 324 "xmltok_impl.c"
      case 7: // $bb6
        $0=-1; //@line 325 "xmltok_impl.c"
        __label__ = 51; break; //@line 325 "xmltok_impl.c"
      case 8: // $bb7
        var $26=$ptr_addr; //@line 326 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 326 "xmltok_impl.c"
        var $28=($27)!=62; //@line 326 "xmltok_impl.c"
        var $29=$ptr_addr; //@line 327 "xmltok_impl.c"
        if ($28) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 326 "xmltok_impl.c"
      case 9: // $bb8
        var $30=$29+-1; //@line 327 "xmltok_impl.c"
        $ptr_addr=$30; //@line 327 "xmltok_impl.c"
        __label__ = 49; break; //@line 327 "xmltok_impl.c"
      case 10: // $bb9
        var $31=$29+1; //@line 330 "xmltok_impl.c"
        var $32=$nextTokPtr_addr; //@line 330 "xmltok_impl.c"
        HEAP[$32]=$31; //@line 330 "xmltok_impl.c"
        $0=40; //@line 331 "xmltok_impl.c"
        __label__ = 51; break; //@line 331 "xmltok_impl.c"
      case 11: // $bb10
        var $33=$ptr_addr; //@line 333 "xmltok_impl.c"
        var $34=$33+1; //@line 333 "xmltok_impl.c"
        $ptr_addr=$34; //@line 333 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 334 "xmltok_impl.c"
        var $36=$end_addr; //@line 334 "xmltok_impl.c"
        var $37=($35)==($36); //@line 334 "xmltok_impl.c"
        if ($37) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 334 "xmltok_impl.c"
      case 12: // $bb11
        $0=-1; //@line 335 "xmltok_impl.c"
        __label__ = 51; break; //@line 335 "xmltok_impl.c"
      case 13: // $bb12
        var $38=$enc_addr; //@line 336 "xmltok_impl.c"
        var $39=$38; //@line 336 "xmltok_impl.c"
        var $40=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 336 "xmltok_impl.c"
        var $42=($41); //@line 336 "xmltok_impl.c"
        var $43=$39+72; //@line 336 "xmltok_impl.c"
        var $44=$43+$42; //@line 336 "xmltok_impl.c"
        var $45=HEAP[$44]; //@line 336 "xmltok_impl.c"
        var $46=($45)==10; //@line 336 "xmltok_impl.c"
        if ($46) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 336 "xmltok_impl.c"
      case 14: // $bb13
        var $47=$ptr_addr; //@line 337 "xmltok_impl.c"
        var $48=$47+1; //@line 337 "xmltok_impl.c"
        $ptr_addr=$48; //@line 337 "xmltok_impl.c"
        __label__ = 15; break; //@line 337 "xmltok_impl.c"
      case 15: // $bb14
        var $49=$nextTokPtr_addr; //@line 338 "xmltok_impl.c"
        var $50=$ptr_addr; //@line 338 "xmltok_impl.c"
        HEAP[$49]=$50; //@line 338 "xmltok_impl.c"
        $0=7; //@line 339 "xmltok_impl.c"
        __label__ = 51; break; //@line 339 "xmltok_impl.c"
      case 16: // $bb15
        var $51=$ptr_addr; //@line 341 "xmltok_impl.c"
        var $52=$51+1; //@line 341 "xmltok_impl.c"
        var $53=$nextTokPtr_addr; //@line 341 "xmltok_impl.c"
        HEAP[$53]=$52; //@line 341 "xmltok_impl.c"
        $0=7; //@line 342 "xmltok_impl.c"
        __label__ = 51; break; //@line 342 "xmltok_impl.c"
      case 17: // $bb16
        var $54=$end_addr; //@line 343 "xmltok_impl.c"
        var $55=($54); //@line 343 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $57=($56); //@line 343 "xmltok_impl.c"
        var $58=($55) - ($57); //@line 343 "xmltok_impl.c"
        var $59=($58) <= 1; //@line 343 "xmltok_impl.c"
        if ($59) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 343 "xmltok_impl.c"
      case 18: // $bb17
        $0=-2; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 19: // $bb18
        var $60=$enc_addr; //@line 343 "xmltok_impl.c"
        var $61=$60; //@line 343 "xmltok_impl.c"
        var $62=$61+352; //@line 343 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 343 "xmltok_impl.c"
        var $64=$enc_addr; //@line 343 "xmltok_impl.c"
        var $65=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $66=FUNCTION_TABLE[$63]($64, $65); //@line 343 "xmltok_impl.c"
        var $67=($66)!=0; //@line 343 "xmltok_impl.c"
        if ($67) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 343 "xmltok_impl.c"
      case 20: // $bb19
        var $68=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $69=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$68]=$69; //@line 343 "xmltok_impl.c"
        $0=0; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 21: // $bb20
        var $70=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $71=$70+2; //@line 343 "xmltok_impl.c"
        $ptr_addr=$71; //@line 343 "xmltok_impl.c"
        __label__ = 49; break; //@line 343 "xmltok_impl.c"
      case 22: // $bb21
        var $72=$end_addr; //@line 343 "xmltok_impl.c"
        var $73=($72); //@line 343 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $75=($74); //@line 343 "xmltok_impl.c"
        var $76=($73) - ($75); //@line 343 "xmltok_impl.c"
        var $77=($76) <= 2; //@line 343 "xmltok_impl.c"
        if ($77) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 343 "xmltok_impl.c"
      case 23: // $bb22
        $0=-2; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 24: // $bb23
        var $78=$enc_addr; //@line 343 "xmltok_impl.c"
        var $79=$78; //@line 343 "xmltok_impl.c"
        var $80=$79+356; //@line 343 "xmltok_impl.c"
        var $81=HEAP[$80]; //@line 343 "xmltok_impl.c"
        var $82=$enc_addr; //@line 343 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $84=FUNCTION_TABLE[$81]($82, $83); //@line 343 "xmltok_impl.c"
        var $85=($84)!=0; //@line 343 "xmltok_impl.c"
        if ($85) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 343 "xmltok_impl.c"
      case 25: // $bb24
        var $86=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $87=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$86]=$87; //@line 343 "xmltok_impl.c"
        $0=0; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 26: // $bb25
        var $88=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $89=$88+3; //@line 343 "xmltok_impl.c"
        $ptr_addr=$89; //@line 343 "xmltok_impl.c"
        __label__ = 49; break; //@line 343 "xmltok_impl.c"
      case 27: // $bb26
        var $90=$end_addr; //@line 343 "xmltok_impl.c"
        var $91=($90); //@line 343 "xmltok_impl.c"
        var $92=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $93=($92); //@line 343 "xmltok_impl.c"
        var $94=($91) - ($93); //@line 343 "xmltok_impl.c"
        var $95=($94) <= 3; //@line 343 "xmltok_impl.c"
        if ($95) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 343 "xmltok_impl.c"
      case 28: // $bb27
        $0=-2; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 29: // $bb28
        var $96=$enc_addr; //@line 343 "xmltok_impl.c"
        var $97=$96; //@line 343 "xmltok_impl.c"
        var $98=$97+360; //@line 343 "xmltok_impl.c"
        var $99=HEAP[$98]; //@line 343 "xmltok_impl.c"
        var $100=$enc_addr; //@line 343 "xmltok_impl.c"
        var $101=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $102=FUNCTION_TABLE[$99]($100, $101); //@line 343 "xmltok_impl.c"
        var $103=($102)!=0; //@line 343 "xmltok_impl.c"
        if ($103) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 343 "xmltok_impl.c"
      case 30: // $bb29
        var $104=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $105=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$104]=$105; //@line 343 "xmltok_impl.c"
        $0=0; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 31: // $bb30
        var $106=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $107=$106+4; //@line 343 "xmltok_impl.c"
        $ptr_addr=$107; //@line 343 "xmltok_impl.c"
        __label__ = 49; break; //@line 343 "xmltok_impl.c"
      case 32: // $bb31
        var $108=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $109=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$108]=$109; //@line 343 "xmltok_impl.c"
        $0=0; //@line 343 "xmltok_impl.c"
        __label__ = 51; break; //@line 343 "xmltok_impl.c"
      case 33: // $bb32
        var $110=$ptr_addr; //@line 345 "xmltok_impl.c"
        var $111=$110+1; //@line 345 "xmltok_impl.c"
        $ptr_addr=$111; //@line 345 "xmltok_impl.c"
        __label__ = 49; break; //@line 345 "xmltok_impl.c"
      case 34: // $bb34
        var $112=$enc_addr; //@line 349 "xmltok_impl.c"
        var $113=$112; //@line 349 "xmltok_impl.c"
        var $114=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $115=HEAP[$114]; //@line 349 "xmltok_impl.c"
        var $116=($115); //@line 349 "xmltok_impl.c"
        var $117=$113+72; //@line 349 "xmltok_impl.c"
        var $118=$117+$116; //@line 349 "xmltok_impl.c"
        var $119=HEAP[$118]; //@line 349 "xmltok_impl.c"
        var $120=($119); //@line 349 "xmltok_impl.c"
        if ($120 == 0) {
          __label__ = 47; break;
        }
        else if ($120 == 1) {
          __label__ = 47; break;
        }
        else if ($120 == 4) {
          __label__ = 47; break;
        }
        else if ($120 == 5) {
          __label__ = 35; break;
        }
        else if ($120 == 6) {
          __label__ = 39; break;
        }
        else if ($120 == 7) {
          __label__ = 43; break;
        }
        else if ($120 == 8) {
          __label__ = 47; break;
        }
        else if ($120 == 9) {
          __label__ = 47; break;
        }
        else if ($120 == 10) {
          __label__ = 47; break;
        }
        else {
        __label__ = 48; break;
        }
        
      case 35: // $bb35
        var $121=$end_addr; //@line 358 "xmltok_impl.c"
        var $122=($121); //@line 358 "xmltok_impl.c"
        var $123=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $124=($123); //@line 358 "xmltok_impl.c"
        var $125=($122) - ($124); //@line 358 "xmltok_impl.c"
        var $126=($125) <= 1; //@line 358 "xmltok_impl.c"
        if ($126) { __label__ = 37; break; } else { __label__ = 36; break; } //@line 358 "xmltok_impl.c"
      case 36: // $bb36
        var $127=$enc_addr; //@line 358 "xmltok_impl.c"
        var $128=$127; //@line 358 "xmltok_impl.c"
        var $129=$128+352; //@line 358 "xmltok_impl.c"
        var $130=HEAP[$129]; //@line 358 "xmltok_impl.c"
        var $131=$enc_addr; //@line 358 "xmltok_impl.c"
        var $132=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $133=FUNCTION_TABLE[$130]($131, $132); //@line 358 "xmltok_impl.c"
        var $134=($133)!=0; //@line 358 "xmltok_impl.c"
        if ($134) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 358 "xmltok_impl.c"
      case 37: // $bb37
        var $135=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $136=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$135]=$136; //@line 358 "xmltok_impl.c"
        $0=6; //@line 358 "xmltok_impl.c"
        __label__ = 51; break; //@line 358 "xmltok_impl.c"
      case 38: // $bb38
        var $137=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $138=$137+2; //@line 358 "xmltok_impl.c"
        $ptr_addr=$138; //@line 358 "xmltok_impl.c"
        __label__ = 49; break; //@line 358 "xmltok_impl.c"
      case 39: // $bb39
        var $139=$end_addr; //@line 358 "xmltok_impl.c"
        var $140=($139); //@line 358 "xmltok_impl.c"
        var $141=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $142=($141); //@line 358 "xmltok_impl.c"
        var $143=($140) - ($142); //@line 358 "xmltok_impl.c"
        var $144=($143) <= 2; //@line 358 "xmltok_impl.c"
        if ($144) { __label__ = 41; break; } else { __label__ = 40; break; } //@line 358 "xmltok_impl.c"
      case 40: // $bb40
        var $145=$enc_addr; //@line 358 "xmltok_impl.c"
        var $146=$145; //@line 358 "xmltok_impl.c"
        var $147=$146+356; //@line 358 "xmltok_impl.c"
        var $148=HEAP[$147]; //@line 358 "xmltok_impl.c"
        var $149=$enc_addr; //@line 358 "xmltok_impl.c"
        var $150=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $151=FUNCTION_TABLE[$148]($149, $150); //@line 358 "xmltok_impl.c"
        var $152=($151)!=0; //@line 358 "xmltok_impl.c"
        if ($152) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 358 "xmltok_impl.c"
      case 41: // $bb41
        var $153=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $154=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$153]=$154; //@line 358 "xmltok_impl.c"
        $0=6; //@line 358 "xmltok_impl.c"
        __label__ = 51; break; //@line 358 "xmltok_impl.c"
      case 42: // $bb42
        var $155=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $156=$155+3; //@line 358 "xmltok_impl.c"
        $ptr_addr=$156; //@line 358 "xmltok_impl.c"
        __label__ = 49; break; //@line 358 "xmltok_impl.c"
      case 43: // $bb43
        var $157=$end_addr; //@line 358 "xmltok_impl.c"
        var $158=($157); //@line 358 "xmltok_impl.c"
        var $159=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $160=($159); //@line 358 "xmltok_impl.c"
        var $161=($158) - ($160); //@line 358 "xmltok_impl.c"
        var $162=($161) <= 3; //@line 358 "xmltok_impl.c"
        if ($162) { __label__ = 45; break; } else { __label__ = 44; break; } //@line 358 "xmltok_impl.c"
      case 44: // $bb44
        var $163=$enc_addr; //@line 358 "xmltok_impl.c"
        var $164=$163; //@line 358 "xmltok_impl.c"
        var $165=$164+360; //@line 358 "xmltok_impl.c"
        var $166=HEAP[$165]; //@line 358 "xmltok_impl.c"
        var $167=$enc_addr; //@line 358 "xmltok_impl.c"
        var $168=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $169=FUNCTION_TABLE[$166]($167, $168); //@line 358 "xmltok_impl.c"
        var $170=($169)!=0; //@line 358 "xmltok_impl.c"
        if ($170) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 358 "xmltok_impl.c"
      case 45: // $bb45
        var $171=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $172=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$171]=$172; //@line 358 "xmltok_impl.c"
        $0=6; //@line 358 "xmltok_impl.c"
        __label__ = 51; break; //@line 358 "xmltok_impl.c"
      case 46: // $bb46
        var $173=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $174=$173+4; //@line 358 "xmltok_impl.c"
        $ptr_addr=$174; //@line 358 "xmltok_impl.c"
        __label__ = 49; break; //@line 358 "xmltok_impl.c"
      case 47: // $bb47
        var $175=$nextTokPtr_addr; //@line 366 "xmltok_impl.c"
        var $176=$ptr_addr; //@line 366 "xmltok_impl.c"
        HEAP[$175]=$176; //@line 366 "xmltok_impl.c"
        $0=6; //@line 367 "xmltok_impl.c"
        __label__ = 51; break; //@line 367 "xmltok_impl.c"
      case 48: // $bb48
        var $177=$ptr_addr; //@line 369 "xmltok_impl.c"
        var $178=$177+1; //@line 369 "xmltok_impl.c"
        $ptr_addr=$178; //@line 369 "xmltok_impl.c"
        __label__ = 49; break; //@line 369 "xmltok_impl.c"
      case 49: // $bb49
        var $179=$ptr_addr; //@line 348 "xmltok_impl.c"
        var $180=$end_addr; //@line 348 "xmltok_impl.c"
        var $181=($179)!=($180); //@line 348 "xmltok_impl.c"
        if ($181) { __label__ = 34; break; } else { __label__ = 50; break; } //@line 348 "xmltok_impl.c"
      case 50: // $bb50
        var $182=$nextTokPtr_addr; //@line 373 "xmltok_impl.c"
        var $183=$ptr_addr; //@line 373 "xmltok_impl.c"
        HEAP[$182]=$183; //@line 373 "xmltok_impl.c"
        $0=6; //@line 374 "xmltok_impl.c"
        __label__ = 51; break; //@line 374 "xmltok_impl.c"
      case 51: // $bb51
        var $184=$0; //@line 306 "xmltok_impl.c"
        $retval=$184; //@line 306 "xmltok_impl.c"
        var $retval52=$retval; //@line 306 "xmltok_impl.c"
        ;
        return $retval52; //@line 306 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_scanRef($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr_i_i;
        var $ptr_addr_i_i;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i_i;
        var $0;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $2;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 496 "xmltok_impl.c"
        var $4=$end_addr; //@line 496 "xmltok_impl.c"
        var $5=($3)==($4); //@line 496 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 496 "xmltok_impl.c"
      case 1: // $bb
        $2=-1; //@line 497 "xmltok_impl.c"
        __label__ = 66; break; //@line 497 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$enc_addr; //@line 498 "xmltok_impl.c"
        var $7=$6; //@line 498 "xmltok_impl.c"
        var $8=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 498 "xmltok_impl.c"
        var $10=($9); //@line 498 "xmltok_impl.c"
        var $11=$7+72; //@line 498 "xmltok_impl.c"
        var $12=$11+$10; //@line 498 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 498 "xmltok_impl.c"
        var $14=($13); //@line 498 "xmltok_impl.c"
        if ($14 == 5) {
          __label__ = 5; break;
        }
        else if ($14 == 6) {
          __label__ = 10; break;
        }
        else if ($14 == 7) {
          __label__ = 15; break;
        }
        else if ($14 == 19) {
          __label__ = 20; break;
        }
        else if ($14 == 22) {
          __label__ = 4; break;
        }
        else if ($14 == 24) {
          __label__ = 4; break;
        }
        else if ($14 == 29) {
          __label__ = 3; break;
        }
        else {
        __label__ = 43; break;
        }
        
      case 3: // $bb2
        var $15=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $16=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$15]=$16; //@line 499 "xmltok_impl.c"
        $2=0; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 4: // $bb3
        var $17=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $18=$17+1; //@line 499 "xmltok_impl.c"
        $ptr_addr=$18; //@line 499 "xmltok_impl.c"
        __label__ = 64; break; //@line 499 "xmltok_impl.c"
      case 5: // $bb4
        var $19=$end_addr; //@line 499 "xmltok_impl.c"
        var $20=($19); //@line 499 "xmltok_impl.c"
        var $21=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $22=($21); //@line 499 "xmltok_impl.c"
        var $23=($20) - ($22); //@line 499 "xmltok_impl.c"
        var $24=($23) <= 1; //@line 499 "xmltok_impl.c"
        if ($24) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 499 "xmltok_impl.c"
      case 6: // $bb5
        $2=-2; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 7: // $bb6
        var $25=$enc_addr; //@line 499 "xmltok_impl.c"
        var $26=$25; //@line 499 "xmltok_impl.c"
        var $27=$26+340; //@line 499 "xmltok_impl.c"
        var $28=HEAP[$27]; //@line 499 "xmltok_impl.c"
        var $29=$enc_addr; //@line 499 "xmltok_impl.c"
        var $30=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $31=FUNCTION_TABLE[$28]($29, $30); //@line 499 "xmltok_impl.c"
        var $32=($31)==0; //@line 499 "xmltok_impl.c"
        if ($32) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 499 "xmltok_impl.c"
      case 8: // $bb7
        var $33=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $34=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$33]=$34; //@line 499 "xmltok_impl.c"
        $2=0; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 9: // $bb8
        var $35=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $36=$35+2; //@line 499 "xmltok_impl.c"
        $ptr_addr=$36; //@line 499 "xmltok_impl.c"
        __label__ = 64; break; //@line 499 "xmltok_impl.c"
      case 10: // $bb9
        var $37=$end_addr; //@line 499 "xmltok_impl.c"
        var $38=($37); //@line 499 "xmltok_impl.c"
        var $39=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $40=($39); //@line 499 "xmltok_impl.c"
        var $41=($38) - ($40); //@line 499 "xmltok_impl.c"
        var $42=($41) <= 2; //@line 499 "xmltok_impl.c"
        if ($42) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 499 "xmltok_impl.c"
      case 11: // $bb10
        $2=-2; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 12: // $bb11
        var $43=$enc_addr; //@line 499 "xmltok_impl.c"
        var $44=$43; //@line 499 "xmltok_impl.c"
        var $45=$44+344; //@line 499 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 499 "xmltok_impl.c"
        var $47=$enc_addr; //@line 499 "xmltok_impl.c"
        var $48=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $49=FUNCTION_TABLE[$46]($47, $48); //@line 499 "xmltok_impl.c"
        var $50=($49)==0; //@line 499 "xmltok_impl.c"
        if ($50) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 499 "xmltok_impl.c"
      case 13: // $bb12
        var $51=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $52=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$51]=$52; //@line 499 "xmltok_impl.c"
        $2=0; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 14: // $bb13
        var $53=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $54=$53+3; //@line 499 "xmltok_impl.c"
        $ptr_addr=$54; //@line 499 "xmltok_impl.c"
        __label__ = 64; break; //@line 499 "xmltok_impl.c"
      case 15: // $bb14
        var $55=$end_addr; //@line 499 "xmltok_impl.c"
        var $56=($55); //@line 499 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $58=($57); //@line 499 "xmltok_impl.c"
        var $59=($56) - ($58); //@line 499 "xmltok_impl.c"
        var $60=($59) <= 3; //@line 499 "xmltok_impl.c"
        if ($60) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 499 "xmltok_impl.c"
      case 16: // $bb15
        $2=-2; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 17: // $bb16
        var $61=$enc_addr; //@line 499 "xmltok_impl.c"
        var $62=$61; //@line 499 "xmltok_impl.c"
        var $63=$62+348; //@line 499 "xmltok_impl.c"
        var $64=HEAP[$63]; //@line 499 "xmltok_impl.c"
        var $65=$enc_addr; //@line 499 "xmltok_impl.c"
        var $66=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $67=FUNCTION_TABLE[$64]($65, $66); //@line 499 "xmltok_impl.c"
        var $68=($67)==0; //@line 499 "xmltok_impl.c"
        if ($68) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 499 "xmltok_impl.c"
      case 18: // $bb17
        var $69=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $70=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$69]=$70; //@line 499 "xmltok_impl.c"
        $2=0; //@line 499 "xmltok_impl.c"
        __label__ = 66; break; //@line 499 "xmltok_impl.c"
      case 19: // $bb18
        var $71=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $72=$71+4; //@line 499 "xmltok_impl.c"
        $ptr_addr=$72; //@line 499 "xmltok_impl.c"
        __label__ = 64; break; //@line 499 "xmltok_impl.c"
      case 20: // $bb19
        var $73=$ptr_addr; //@line 501 "xmltok_impl.c"
        var $74=$73+1; //@line 501 "xmltok_impl.c"
        var $75=$enc_addr; //@line 501 "xmltok_impl.c"
        var $76=$end_addr; //@line 501 "xmltok_impl.c"
        var $77=$nextTokPtr_addr; //@line 501 "xmltok_impl.c"
        $enc_addr_i=$75;
        $ptr_addr_i=$74;
        $end_addr_i=$76;
        $nextTokPtr_addr_i=$77;
        var $78=$ptr_addr_i; //@line 464 "xmltok_impl.c"
        var $79=$end_addr_i; //@line 464 "xmltok_impl.c"
        var $80=($78)!=($79); //@line 464 "xmltok_impl.c"
        if ($80) { __label__ = 21; break; } else { __label__ = 41; break; } //@line 464 "xmltok_impl.c"
      case 21: // $bb_i
        var $81=$ptr_addr_i; //@line 465 "xmltok_impl.c"
        var $82=HEAP[$81]; //@line 465 "xmltok_impl.c"
        var $83=($82)==120; //@line 465 "xmltok_impl.c"
        if ($83) { __label__ = 22; break; } else { __label__ = 33; break; } //@line 465 "xmltok_impl.c"
      case 22: // $bb1_i
        var $84=$ptr_addr_i; //@line 466 "xmltok_impl.c"
        var $85=$84+1; //@line 466 "xmltok_impl.c"
        var $86=$enc_addr_i; //@line 466 "xmltok_impl.c"
        var $87=$end_addr_i; //@line 466 "xmltok_impl.c"
        var $88=$nextTokPtr_addr_i; //@line 466 "xmltok_impl.c"
        $enc_addr_i_i=$86;
        $ptr_addr_i_i=$85;
        $end_addr_i_i=$87;
        $nextTokPtr_addr_i_i=$88;
        var $89=$ptr_addr_i_i; //@line 432 "xmltok_impl.c"
        var $90=$end_addr_i_i; //@line 432 "xmltok_impl.c"
        var $91=($89)!=($90); //@line 432 "xmltok_impl.c"
        if ($91) { __label__ = 23; break; } else { __label__ = 31; break; } //@line 432 "xmltok_impl.c"
      case 23: // $bb_i_i
        var $92=$enc_addr_i_i; //@line 433 "xmltok_impl.c"
        var $93=$92; //@line 433 "xmltok_impl.c"
        var $94=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 433 "xmltok_impl.c"
        var $96=($95); //@line 433 "xmltok_impl.c"
        var $97=$93+72; //@line 433 "xmltok_impl.c"
        var $98=$97+$96; //@line 433 "xmltok_impl.c"
        var $99=HEAP[$98]; //@line 433 "xmltok_impl.c"
        var $100=($99); //@line 433 "xmltok_impl.c"
        var $_off_i_i=($100) + -24;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 24; break; } else { __label__ = 25; break; }
      case 24: // $bb1_i_i
        var $101=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $102=$101+1; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$102; //@line 441 "xmltok_impl.c"
        __label__ = 30; break; //@line 441 "xmltok_impl.c"
      case 25: // $bb2_i_i
        var $103=$nextTokPtr_addr_i_i; //@line 438 "xmltok_impl.c"
        var $104=$ptr_addr_i_i; //@line 438 "xmltok_impl.c"
        HEAP[$103]=$104; //@line 438 "xmltok_impl.c"
        $0=0; //@line 439 "xmltok_impl.c"
        __label__ = 32; break; //@line 439 "xmltok_impl.c"
      case 26: // $bb3_i_i
        var $105=$enc_addr_i_i; //@line 442 "xmltok_impl.c"
        var $106=$105; //@line 442 "xmltok_impl.c"
        var $107=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $108=HEAP[$107]; //@line 442 "xmltok_impl.c"
        var $109=($108); //@line 442 "xmltok_impl.c"
        var $110=$106+72; //@line 442 "xmltok_impl.c"
        var $111=$110+$109; //@line 442 "xmltok_impl.c"
        var $112=HEAP[$111]; //@line 442 "xmltok_impl.c"
        var $113=($112); //@line 442 "xmltok_impl.c"
        if ($113 == 18) {
          __label__ = 28; break;
        }
        else if ($113 == 24) {
          __label__ = 27; break;
        }
        else if ($113 == 25) {
          __label__ = 27; break;
        }
        else {
        __label__ = 29; break;
        }
        
      case 27: // $bb4_i_i
        var $114=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $115=$114+1; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$115; //@line 441 "xmltok_impl.c"
        __label__ = 30; break; //@line 441 "xmltok_impl.c"
      case 28: // $bb5_i_i
        var $116=$ptr_addr_i_i; //@line 447 "xmltok_impl.c"
        var $117=$116+1; //@line 447 "xmltok_impl.c"
        var $118=$nextTokPtr_addr_i_i; //@line 447 "xmltok_impl.c"
        HEAP[$118]=$117; //@line 447 "xmltok_impl.c"
        $0=10; //@line 448 "xmltok_impl.c"
        __label__ = 32; break; //@line 448 "xmltok_impl.c"
      case 29: // $bb6_i_i
        var $119=$nextTokPtr_addr_i_i; //@line 450 "xmltok_impl.c"
        var $120=$ptr_addr_i_i; //@line 450 "xmltok_impl.c"
        HEAP[$119]=$120; //@line 450 "xmltok_impl.c"
        $0=0; //@line 451 "xmltok_impl.c"
        __label__ = 32; break; //@line 451 "xmltok_impl.c"
      case 30: // $bb7_i_i
        var $121=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $122=$end_addr_i_i; //@line 441 "xmltok_impl.c"
        var $123=($121)!=($122); //@line 441 "xmltok_impl.c"
        if ($123) { __label__ = 26; break; } else { __label__ = 31; break; } //@line 441 "xmltok_impl.c"
      case 31: // $bb8_i_i
        $0=-1; //@line 455 "xmltok_impl.c"
        __label__ = 32; break; //@line 455 "xmltok_impl.c"
      case 32: // $normal_scanHexCharRef_exit_i
        var $124=$0; //@line 439 "xmltok_impl.c"
        $retval_i_i=$124; //@line 439 "xmltok_impl.c"
        var $retval10_i_i=$retval_i_i; //@line 439 "xmltok_impl.c"
        $1=$retval10_i_i; //@line 466 "xmltok_impl.c"
        __label__ = 42; break; //@line 466 "xmltok_impl.c"
      case 33: // $bb2_i
        var $125=$enc_addr_i; //@line 467 "xmltok_impl.c"
        var $126=$125; //@line 467 "xmltok_impl.c"
        var $127=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $128=HEAP[$127]; //@line 467 "xmltok_impl.c"
        var $129=($128); //@line 467 "xmltok_impl.c"
        var $130=$126+72; //@line 467 "xmltok_impl.c"
        var $131=$130+$129; //@line 467 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 467 "xmltok_impl.c"
        var $133=($132); //@line 467 "xmltok_impl.c"
        var $cond_i=($133)==25;
        if ($cond_i) { __label__ = 34; break; } else { __label__ = 35; break; }
      case 34: // $bb3_i
        var $134=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $135=$134+1; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$135; //@line 474 "xmltok_impl.c"
        __label__ = 40; break; //@line 474 "xmltok_impl.c"
      case 35: // $bb4_i
        var $136=$nextTokPtr_addr_i; //@line 471 "xmltok_impl.c"
        var $137=$ptr_addr_i; //@line 471 "xmltok_impl.c"
        HEAP[$136]=$137; //@line 471 "xmltok_impl.c"
        $1=0; //@line 472 "xmltok_impl.c"
        __label__ = 42; break; //@line 472 "xmltok_impl.c"
      case 36: // $bb5_i
        var $138=$enc_addr_i; //@line 475 "xmltok_impl.c"
        var $139=$138; //@line 475 "xmltok_impl.c"
        var $140=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $141=HEAP[$140]; //@line 475 "xmltok_impl.c"
        var $142=($141); //@line 475 "xmltok_impl.c"
        var $143=$139+72; //@line 475 "xmltok_impl.c"
        var $144=$143+$142; //@line 475 "xmltok_impl.c"
        var $145=HEAP[$144]; //@line 475 "xmltok_impl.c"
        var $146=($145); //@line 475 "xmltok_impl.c"
        if ($146 == 18) {
          __label__ = 38; break;
        }
        else if ($146 == 25) {
          __label__ = 37; break;
        }
        else {
        __label__ = 39; break;
        }
        
      case 37: // $bb6_i
        var $147=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $148=$147+1; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$148; //@line 474 "xmltok_impl.c"
        __label__ = 40; break; //@line 474 "xmltok_impl.c"
      case 38: // $bb7_i
        var $149=$ptr_addr_i; //@line 479 "xmltok_impl.c"
        var $150=$149+1; //@line 479 "xmltok_impl.c"
        var $151=$nextTokPtr_addr_i; //@line 479 "xmltok_impl.c"
        HEAP[$151]=$150; //@line 479 "xmltok_impl.c"
        $1=10; //@line 480 "xmltok_impl.c"
        __label__ = 42; break; //@line 480 "xmltok_impl.c"
      case 39: // $bb8_i
        var $152=$nextTokPtr_addr_i; //@line 482 "xmltok_impl.c"
        var $153=$ptr_addr_i; //@line 482 "xmltok_impl.c"
        HEAP[$152]=$153; //@line 482 "xmltok_impl.c"
        $1=0; //@line 483 "xmltok_impl.c"
        __label__ = 42; break; //@line 483 "xmltok_impl.c"
      case 40: // $bb9_i
        var $154=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $155=$end_addr_i; //@line 474 "xmltok_impl.c"
        var $156=($154)!=($155); //@line 474 "xmltok_impl.c"
        if ($156) { __label__ = 36; break; } else { __label__ = 41; break; } //@line 474 "xmltok_impl.c"
      case 41: // $bb10_i
        $1=-1; //@line 487 "xmltok_impl.c"
        __label__ = 42; break; //@line 487 "xmltok_impl.c"
      case 42: // $normal_scanCharRef_exit
        var $157=$1; //@line 466 "xmltok_impl.c"
        $retval_i=$157; //@line 466 "xmltok_impl.c"
        var $retval12_i=$retval_i; //@line 466 "xmltok_impl.c"
        $2=$retval12_i; //@line 501 "xmltok_impl.c"
        __label__ = 66; break; //@line 501 "xmltok_impl.c"
      case 43: // $bb20
        var $158=$nextTokPtr_addr; //@line 503 "xmltok_impl.c"
        var $159=$ptr_addr; //@line 503 "xmltok_impl.c"
        HEAP[$158]=$159; //@line 503 "xmltok_impl.c"
        $2=0; //@line 504 "xmltok_impl.c"
        __label__ = 66; break; //@line 504 "xmltok_impl.c"
      case 44: // $bb22
        var $160=$enc_addr; //@line 507 "xmltok_impl.c"
        var $161=$160; //@line 507 "xmltok_impl.c"
        var $162=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $163=HEAP[$162]; //@line 507 "xmltok_impl.c"
        var $164=($163); //@line 507 "xmltok_impl.c"
        var $165=$161+72; //@line 507 "xmltok_impl.c"
        var $166=$165+$164; //@line 507 "xmltok_impl.c"
        var $167=HEAP[$166]; //@line 507 "xmltok_impl.c"
        var $168=($167); //@line 507 "xmltok_impl.c"
        if ($168 == 5) {
          __label__ = 47; break;
        }
        else if ($168 == 6) {
          __label__ = 52; break;
        }
        else if ($168 == 7) {
          __label__ = 57; break;
        }
        else if ($168 == 18) {
          __label__ = 62; break;
        }
        else if ($168 == 22) {
          __label__ = 46; break;
        }
        else if ($168 == 24) {
          __label__ = 46; break;
        }
        else if ($168 == 25) {
          __label__ = 46; break;
        }
        else if ($168 == 26) {
          __label__ = 46; break;
        }
        else if ($168 == 27) {
          __label__ = 46; break;
        }
        else if ($168 == 29) {
          __label__ = 45; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 45: // $bb23
        var $169=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $170=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$169]=$170; //@line 508 "xmltok_impl.c"
        $2=0; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 46: // $bb24
        var $171=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $172=$171+1; //@line 508 "xmltok_impl.c"
        $ptr_addr=$172; //@line 508 "xmltok_impl.c"
        __label__ = 64; break; //@line 508 "xmltok_impl.c"
      case 47: // $bb25
        var $173=$end_addr; //@line 508 "xmltok_impl.c"
        var $174=($173); //@line 508 "xmltok_impl.c"
        var $175=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $176=($175); //@line 508 "xmltok_impl.c"
        var $177=($174) - ($176); //@line 508 "xmltok_impl.c"
        var $178=($177) <= 1; //@line 508 "xmltok_impl.c"
        if ($178) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 508 "xmltok_impl.c"
      case 48: // $bb26
        $2=-2; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 49: // $bb27
        var $179=$enc_addr; //@line 508 "xmltok_impl.c"
        var $180=$179; //@line 508 "xmltok_impl.c"
        var $181=$180+328; //@line 508 "xmltok_impl.c"
        var $182=HEAP[$181]; //@line 508 "xmltok_impl.c"
        var $183=$enc_addr; //@line 508 "xmltok_impl.c"
        var $184=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $185=FUNCTION_TABLE[$182]($183, $184); //@line 508 "xmltok_impl.c"
        var $186=($185)==0; //@line 508 "xmltok_impl.c"
        if ($186) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 508 "xmltok_impl.c"
      case 50: // $bb28
        var $187=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $188=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$187]=$188; //@line 508 "xmltok_impl.c"
        $2=0; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 51: // $bb29
        var $189=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $190=$189+2; //@line 508 "xmltok_impl.c"
        $ptr_addr=$190; //@line 508 "xmltok_impl.c"
        __label__ = 64; break; //@line 508 "xmltok_impl.c"
      case 52: // $bb30
        var $191=$end_addr; //@line 508 "xmltok_impl.c"
        var $192=($191); //@line 508 "xmltok_impl.c"
        var $193=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $194=($193); //@line 508 "xmltok_impl.c"
        var $195=($192) - ($194); //@line 508 "xmltok_impl.c"
        var $196=($195) <= 2; //@line 508 "xmltok_impl.c"
        if ($196) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 508 "xmltok_impl.c"
      case 53: // $bb31
        $2=-2; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 54: // $bb32
        var $197=$enc_addr; //@line 508 "xmltok_impl.c"
        var $198=$197; //@line 508 "xmltok_impl.c"
        var $199=$198+332; //@line 508 "xmltok_impl.c"
        var $200=HEAP[$199]; //@line 508 "xmltok_impl.c"
        var $201=$enc_addr; //@line 508 "xmltok_impl.c"
        var $202=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $203=FUNCTION_TABLE[$200]($201, $202); //@line 508 "xmltok_impl.c"
        var $204=($203)==0; //@line 508 "xmltok_impl.c"
        if ($204) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 508 "xmltok_impl.c"
      case 55: // $bb33
        var $205=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $206=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$205]=$206; //@line 508 "xmltok_impl.c"
        $2=0; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 56: // $bb34
        var $207=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $208=$207+3; //@line 508 "xmltok_impl.c"
        $ptr_addr=$208; //@line 508 "xmltok_impl.c"
        __label__ = 64; break; //@line 508 "xmltok_impl.c"
      case 57: // $bb35
        var $209=$end_addr; //@line 508 "xmltok_impl.c"
        var $210=($209); //@line 508 "xmltok_impl.c"
        var $211=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $212=($211); //@line 508 "xmltok_impl.c"
        var $213=($210) - ($212); //@line 508 "xmltok_impl.c"
        var $214=($213) <= 3; //@line 508 "xmltok_impl.c"
        if ($214) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 508 "xmltok_impl.c"
      case 58: // $bb36
        $2=-2; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 59: // $bb37
        var $215=$enc_addr; //@line 508 "xmltok_impl.c"
        var $216=$215; //@line 508 "xmltok_impl.c"
        var $217=$216+336; //@line 508 "xmltok_impl.c"
        var $218=HEAP[$217]; //@line 508 "xmltok_impl.c"
        var $219=$enc_addr; //@line 508 "xmltok_impl.c"
        var $220=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $221=FUNCTION_TABLE[$218]($219, $220); //@line 508 "xmltok_impl.c"
        var $222=($221)==0; //@line 508 "xmltok_impl.c"
        if ($222) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 508 "xmltok_impl.c"
      case 60: // $bb38
        var $223=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $224=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$223]=$224; //@line 508 "xmltok_impl.c"
        $2=0; //@line 508 "xmltok_impl.c"
        __label__ = 66; break; //@line 508 "xmltok_impl.c"
      case 61: // $bb39
        var $225=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $226=$225+4; //@line 508 "xmltok_impl.c"
        $ptr_addr=$226; //@line 508 "xmltok_impl.c"
        __label__ = 64; break; //@line 508 "xmltok_impl.c"
      case 62: // $bb40
        var $227=$ptr_addr; //@line 510 "xmltok_impl.c"
        var $228=$227+1; //@line 510 "xmltok_impl.c"
        var $229=$nextTokPtr_addr; //@line 510 "xmltok_impl.c"
        HEAP[$229]=$228; //@line 510 "xmltok_impl.c"
        $2=9; //@line 511 "xmltok_impl.c"
        __label__ = 66; break; //@line 511 "xmltok_impl.c"
      case 63: // $bb41
        var $230=$nextTokPtr_addr; //@line 513 "xmltok_impl.c"
        var $231=$ptr_addr; //@line 513 "xmltok_impl.c"
        HEAP[$230]=$231; //@line 513 "xmltok_impl.c"
        $2=0; //@line 514 "xmltok_impl.c"
        __label__ = 66; break; //@line 514 "xmltok_impl.c"
      case 64: // $bb42
        var $232=$ptr_addr; //@line 506 "xmltok_impl.c"
        var $233=$end_addr; //@line 506 "xmltok_impl.c"
        var $234=($232)!=($233); //@line 506 "xmltok_impl.c"
        if ($234) { __label__ = 44; break; } else { __label__ = 65; break; } //@line 506 "xmltok_impl.c"
      case 65: // $bb43
        $2=-1; //@line 517 "xmltok_impl.c"
        __label__ = 66; break; //@line 517 "xmltok_impl.c"
      case 66: // $bb44
        var $235=$2; //@line 497 "xmltok_impl.c"
        $retval=$235; //@line 497 "xmltok_impl.c"
        var $retval45=$retval; //@line 497 "xmltok_impl.c"
        ;
        return $retval45; //@line 497 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_contentTok($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr_i13_i;
        var $ptr_addr_i14_i;
        var $end_addr_i15_i;
        var $nextTokPtr_addr_i16_i;
        var $retval_i17_i;
        var $0;
        var $enc_addr_i1_i;
        var $ptr_addr_i2_i=__stackBase__;
        var $end_addr_i3_i;
        var $nextTokPtr_addr_i4_i;
        var $retval_i5_i;
        var $1;
        var $t_i_i;
        var $open_i_i;
        var $t33_i_i;
        var $tok_i_i;
        var $enc_addr_i_i;
        var $ptr_addr_i_i;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i_i;
        var $2;
        var $i_i_i;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i;
        var $3;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $4;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $5=$ptr_addr; //@line 785 "xmltok_impl.c"
        var $6=$end_addr; //@line 785 "xmltok_impl.c"
        var $7=($5)==($6); //@line 785 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 785 "xmltok_impl.c"
      case 1: // $bb
        $4=-4; //@line 786 "xmltok_impl.c"
        __label__ = 288; break; //@line 786 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$enc_addr; //@line 796 "xmltok_impl.c"
        var $9=$8; //@line 796 "xmltok_impl.c"
        var $10=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 796 "xmltok_impl.c"
        var $12=($11); //@line 796 "xmltok_impl.c"
        var $13=$9+72; //@line 796 "xmltok_impl.c"
        var $14=$13+$12; //@line 796 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 796 "xmltok_impl.c"
        var $16=($15); //@line 796 "xmltok_impl.c"
        if ($16 == 0) {
          __label__ = 262; break;
        }
        else if ($16 == 1) {
          __label__ = 262; break;
        }
        else if ($16 == 2) {
          __label__ = 3; break;
        }
        else if ($16 == 3) {
          __label__ = 232; break;
        }
        else if ($16 == 4) {
          __label__ = 239; break;
        }
        else if ($16 == 5) {
          __label__ = 247; break;
        }
        else if ($16 == 6) {
          __label__ = 252; break;
        }
        else if ($16 == 7) {
          __label__ = 257; break;
        }
        else if ($16 == 8) {
          __label__ = 262; break;
        }
        else if ($16 == 9) {
          __label__ = 233; break;
        }
        else if ($16 == 10) {
          __label__ = 238; break;
        }
        else {
        __label__ = 263; break;
        }
        
      case 3: // $bb2
        var $17=$ptr_addr; //@line 798 "xmltok_impl.c"
        var $18=$17+1; //@line 798 "xmltok_impl.c"
        var $19=$enc_addr; //@line 798 "xmltok_impl.c"
        var $20=$end_addr; //@line 798 "xmltok_impl.c"
        var $21=$nextTokPtr_addr; //@line 798 "xmltok_impl.c"
        $enc_addr_i=$19;
        $ptr_addr_i=$18;
        $end_addr_i=$20;
        $nextTokPtr_addr_i=$21;
        var $22=$ptr_addr_i; //@line 688 "xmltok_impl.c"
        var $23=$end_addr_i; //@line 688 "xmltok_impl.c"
        var $24=($22)==($23); //@line 688 "xmltok_impl.c"
        if ($24) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 688 "xmltok_impl.c"
      case 4: // $bb_i
        $3=-1; //@line 689 "xmltok_impl.c"
        __label__ = 231; break; //@line 689 "xmltok_impl.c"
      case 5: // $bb1_i
        var $25=$enc_addr_i; //@line 690 "xmltok_impl.c"
        var $26=$25; //@line 690 "xmltok_impl.c"
        var $27=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $28=HEAP[$27]; //@line 690 "xmltok_impl.c"
        var $29=($28); //@line 690 "xmltok_impl.c"
        var $30=$26+72; //@line 690 "xmltok_impl.c"
        var $31=$30+$29; //@line 690 "xmltok_impl.c"
        var $32=HEAP[$31]; //@line 690 "xmltok_impl.c"
        var $33=($32); //@line 690 "xmltok_impl.c"
        if ($33 == 5) {
          __label__ = 8; break;
        }
        else if ($33 == 6) {
          __label__ = 13; break;
        }
        else if ($33 == 7) {
          __label__ = 18; break;
        }
        else if ($33 == 15) {
          __label__ = 37; break;
        }
        else if ($33 == 16) {
          __label__ = 23; break;
        }
        else if ($33 == 17) {
          __label__ = 38; break;
        }
        else if ($33 == 22) {
          __label__ = 7; break;
        }
        else if ($33 == 24) {
          __label__ = 7; break;
        }
        else if ($33 == 29) {
          __label__ = 6; break;
        }
        else {
        __label__ = 89; break;
        }
        
      case 6: // $bb2_i
        var $34=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $35=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$34]=$35; //@line 691 "xmltok_impl.c"
        $3=0; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 7: // $bb3_i
        var $36=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $37=$36+1; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$37; //@line 691 "xmltok_impl.c"
        __label__ = 229; break; //@line 691 "xmltok_impl.c"
      case 8: // $bb4_i
        var $38=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $39=($38); //@line 691 "xmltok_impl.c"
        var $40=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $41=($40); //@line 691 "xmltok_impl.c"
        var $42=($39) - ($41); //@line 691 "xmltok_impl.c"
        var $43=($42) <= 1; //@line 691 "xmltok_impl.c"
        if ($43) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 691 "xmltok_impl.c"
      case 9: // $bb5_i
        $3=-2; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 10: // $bb6_i
        var $44=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $45=$44; //@line 691 "xmltok_impl.c"
        var $46=$45+340; //@line 691 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 691 "xmltok_impl.c"
        var $48=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $49=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $50=FUNCTION_TABLE[$47]($48, $49); //@line 691 "xmltok_impl.c"
        var $51=($50)==0; //@line 691 "xmltok_impl.c"
        if ($51) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 691 "xmltok_impl.c"
      case 11: // $bb7_i
        var $52=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $53=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 691 "xmltok_impl.c"
        $3=0; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 12: // $bb8_i
        var $54=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $55=$54+2; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$55; //@line 691 "xmltok_impl.c"
        __label__ = 229; break; //@line 691 "xmltok_impl.c"
      case 13: // $bb9_i
        var $56=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $57=($56); //@line 691 "xmltok_impl.c"
        var $58=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $59=($58); //@line 691 "xmltok_impl.c"
        var $60=($57) - ($59); //@line 691 "xmltok_impl.c"
        var $61=($60) <= 2; //@line 691 "xmltok_impl.c"
        if ($61) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 691 "xmltok_impl.c"
      case 14: // $bb10_i
        $3=-2; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 15: // $bb11_i
        var $62=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $63=$62; //@line 691 "xmltok_impl.c"
        var $64=$63+344; //@line 691 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 691 "xmltok_impl.c"
        var $66=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $67=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $68=FUNCTION_TABLE[$65]($66, $67); //@line 691 "xmltok_impl.c"
        var $69=($68)==0; //@line 691 "xmltok_impl.c"
        if ($69) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 691 "xmltok_impl.c"
      case 16: // $bb12_i
        var $70=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $71=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$70]=$71; //@line 691 "xmltok_impl.c"
        $3=0; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 17: // $bb13_i
        var $72=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $73=$72+3; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$73; //@line 691 "xmltok_impl.c"
        __label__ = 229; break; //@line 691 "xmltok_impl.c"
      case 18: // $bb14_i
        var $74=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $75=($74); //@line 691 "xmltok_impl.c"
        var $76=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $77=($76); //@line 691 "xmltok_impl.c"
        var $78=($75) - ($77); //@line 691 "xmltok_impl.c"
        var $79=($78) <= 3; //@line 691 "xmltok_impl.c"
        if ($79) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 691 "xmltok_impl.c"
      case 19: // $bb15_i
        $3=-2; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 20: // $bb16_i
        var $80=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $81=$80; //@line 691 "xmltok_impl.c"
        var $82=$81+348; //@line 691 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 691 "xmltok_impl.c"
        var $84=$enc_addr_i; //@line 691 "xmltok_impl.c"
        var $85=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $86=FUNCTION_TABLE[$83]($84, $85); //@line 691 "xmltok_impl.c"
        var $87=($86)==0; //@line 691 "xmltok_impl.c"
        if ($87) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 691 "xmltok_impl.c"
      case 21: // $bb17_i
        var $88=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $89=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$88]=$89; //@line 691 "xmltok_impl.c"
        $3=0; //@line 691 "xmltok_impl.c"
        __label__ = 231; break; //@line 691 "xmltok_impl.c"
      case 22: // $bb18_i
        var $90=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $91=$90+4; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$91; //@line 691 "xmltok_impl.c"
        __label__ = 229; break; //@line 691 "xmltok_impl.c"
      case 23: // $bb19_i
        var $92=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $93=$92+1; //@line 693 "xmltok_impl.c"
        $ptr_addr_i=$93; //@line 693 "xmltok_impl.c"
        var $94=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $95=$end_addr_i; //@line 693 "xmltok_impl.c"
        var $96=($94)==($95); //@line 693 "xmltok_impl.c"
        if ($96) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 693 "xmltok_impl.c"
      case 24: // $bb20_i
        $3=-1; //@line 694 "xmltok_impl.c"
        __label__ = 231; break; //@line 694 "xmltok_impl.c"
      case 25: // $bb21_i
        var $97=$enc_addr_i; //@line 695 "xmltok_impl.c"
        var $98=$97; //@line 695 "xmltok_impl.c"
        var $99=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $100=HEAP[$99]; //@line 695 "xmltok_impl.c"
        var $101=($100); //@line 695 "xmltok_impl.c"
        var $102=$98+72; //@line 695 "xmltok_impl.c"
        var $103=$102+$101; //@line 695 "xmltok_impl.c"
        var $104=HEAP[$103]; //@line 695 "xmltok_impl.c"
        var $105=($104); //@line 695 "xmltok_impl.c"
        if ($105 == 20) {
          __label__ = 27; break;
        }
        else if ($105 == 27) {
          __label__ = 26; break;
        }
        else {
        __label__ = 36; break;
        }
        
      case 26: // $bb22_i
        var $106=$ptr_addr_i; //@line 697 "xmltok_impl.c"
        var $107=$106+1; //@line 697 "xmltok_impl.c"
        var $108=$enc_addr_i; //@line 697 "xmltok_impl.c"
        var $109=$end_addr_i; //@line 697 "xmltok_impl.c"
        var $110=$nextTokPtr_addr_i; //@line 697 "xmltok_impl.c"
        var $111=_normal_scanComment($108, $107, $109, $110); //@line 697 "xmltok_impl.c"
        $3=$111; //@line 697 "xmltok_impl.c"
        __label__ = 231; break; //@line 697 "xmltok_impl.c"
      case 27: // $bb23_i
        var $112=$ptr_addr_i; //@line 699 "xmltok_impl.c"
        var $113=$112+1; //@line 699 "xmltok_impl.c"
        var $114=$enc_addr_i; //@line 699 "xmltok_impl.c"
        var $115=$end_addr_i; //@line 699 "xmltok_impl.c"
        var $116=$nextTokPtr_addr_i; //@line 699 "xmltok_impl.c"
        $enc_addr_i_i=$114;
        $ptr_addr_i_i=$113;
        $end_addr_i_i=$115;
        $nextTokPtr_addr_i_i=$116;
        var $117=$end_addr_i_i; //@line 289 "xmltok_impl.c"
        var $118=($117); //@line 289 "xmltok_impl.c"
        var $119=$ptr_addr_i_i; //@line 289 "xmltok_impl.c"
        var $120=($119); //@line 289 "xmltok_impl.c"
        var $121=($118) - ($120); //@line 289 "xmltok_impl.c"
        var $122=($121) <= 5; //@line 289 "xmltok_impl.c"
        if ($122) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 289 "xmltok_impl.c"
      case 28: // $bb_i_i
        $2=-1; //@line 290 "xmltok_impl.c"
        __label__ = 35; break; //@line 290 "xmltok_impl.c"
      case 29: // $bb1_i_i
        $i_i_i=0; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 29; __label__ = 33; break; //@line 291 "xmltok_impl.c"
      case 30: // $bb2_i_i
        var $123=$ptr_addr_i_i; //@line 292 "xmltok_impl.c"
        var $124=HEAP[$123]; //@line 292 "xmltok_impl.c"
        var $125=$i_i_i; //@line 292 "xmltok_impl.c"
        var $126=_CDATA_LSQB_8477+$125; //@line 292 "xmltok_impl.c"
        var $127=HEAP[$126]; //@line 292 "xmltok_impl.c"
        var $128=($124)!=($127); //@line 292 "xmltok_impl.c"
        if ($128) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 292 "xmltok_impl.c"
      case 31: // $bb3_i_i
        var $129=$nextTokPtr_addr_i_i; //@line 293 "xmltok_impl.c"
        var $130=$ptr_addr_i_i; //@line 293 "xmltok_impl.c"
        HEAP[$129]=$130; //@line 293 "xmltok_impl.c"
        $2=0; //@line 294 "xmltok_impl.c"
        __label__ = 35; break; //@line 294 "xmltok_impl.c"
      case 32: // $bb4_i_i
        var $131=$i_i_i; //@line 291 "xmltok_impl.c"
        var $132=($131) + 1; //@line 291 "xmltok_impl.c"
        $i_i_i=$132; //@line 291 "xmltok_impl.c"
        var $133=$ptr_addr_i_i; //@line 291 "xmltok_impl.c"
        var $134=$133+1; //@line 291 "xmltok_impl.c"
        $ptr_addr_i_i=$134; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 32; __label__ = 33; break; //@line 291 "xmltok_impl.c"
      case 33: // $bb5_i_i
        var $135=__lastLabel__ == 32 ? $132 : (0);
        var $136=($135) <= 5; //@line 291 "xmltok_impl.c"
        if ($136) { __label__ = 30; break; } else { __label__ = 34; break; } //@line 291 "xmltok_impl.c"
      case 34: // $bb6_i_i
        var $137=$nextTokPtr_addr_i_i; //@line 297 "xmltok_impl.c"
        var $138=$ptr_addr_i_i; //@line 297 "xmltok_impl.c"
        HEAP[$137]=$138; //@line 297 "xmltok_impl.c"
        $2=8; //@line 298 "xmltok_impl.c"
        __label__ = 35; break; //@line 298 "xmltok_impl.c"
      case 35: // $normal_scanCdataSection_exit_i
        var $139=$2; //@line 290 "xmltok_impl.c"
        $retval_i_i=$139; //@line 290 "xmltok_impl.c"
        var $retval8_i_i=$retval_i_i; //@line 290 "xmltok_impl.c"
        $3=$retval8_i_i; //@line 699 "xmltok_impl.c"
        __label__ = 231; break; //@line 699 "xmltok_impl.c"
      case 36: // $bb24_i
        var $140=$nextTokPtr_addr_i; //@line 702 "xmltok_impl.c"
        var $141=$ptr_addr_i; //@line 702 "xmltok_impl.c"
        HEAP[$140]=$141; //@line 702 "xmltok_impl.c"
        $3=0; //@line 703 "xmltok_impl.c"
        __label__ = 231; break; //@line 703 "xmltok_impl.c"
      case 37: // $bb25_i
        var $142=$ptr_addr_i; //@line 705 "xmltok_impl.c"
        var $143=$142+1; //@line 705 "xmltok_impl.c"
        var $144=$enc_addr_i; //@line 705 "xmltok_impl.c"
        var $145=$end_addr_i; //@line 705 "xmltok_impl.c"
        var $146=$nextTokPtr_addr_i; //@line 705 "xmltok_impl.c"
        var $147=_normal_scanPi($144, $143, $145, $146); //@line 705 "xmltok_impl.c"
        $3=$147; //@line 705 "xmltok_impl.c"
        __label__ = 231; break; //@line 705 "xmltok_impl.c"
      case 38: // $bb26_i
        var $148=$ptr_addr_i; //@line 707 "xmltok_impl.c"
        var $149=$148+1; //@line 707 "xmltok_impl.c"
        var $150=$enc_addr_i; //@line 707 "xmltok_impl.c"
        var $151=$end_addr_i; //@line 707 "xmltok_impl.c"
        var $152=$nextTokPtr_addr_i; //@line 707 "xmltok_impl.c"
        $enc_addr_i13_i=$150;
        $ptr_addr_i14_i=$149;
        $end_addr_i15_i=$151;
        $nextTokPtr_addr_i16_i=$152;
        var $153=$ptr_addr_i14_i; //@line 383 "xmltok_impl.c"
        var $154=$end_addr_i15_i; //@line 383 "xmltok_impl.c"
        var $155=($153)==($154); //@line 383 "xmltok_impl.c"
        if ($155) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 383 "xmltok_impl.c"
      case 39: // $bb_i18_i
        $0=-1; //@line 384 "xmltok_impl.c"
        __label__ = 88; break; //@line 384 "xmltok_impl.c"
      case 40: // $bb1_i19_i
        var $156=$enc_addr_i13_i; //@line 385 "xmltok_impl.c"
        var $157=$156; //@line 385 "xmltok_impl.c"
        var $158=$ptr_addr_i14_i; //@line 385 "xmltok_impl.c"
        var $159=HEAP[$158]; //@line 385 "xmltok_impl.c"
        var $160=($159); //@line 385 "xmltok_impl.c"
        var $161=$157+72; //@line 385 "xmltok_impl.c"
        var $162=$161+$160; //@line 385 "xmltok_impl.c"
        var $163=HEAP[$162]; //@line 385 "xmltok_impl.c"
        var $164=($163); //@line 385 "xmltok_impl.c"
        if ($164 == 5) {
          __label__ = 43; break;
        }
        else if ($164 == 6) {
          __label__ = 48; break;
        }
        else if ($164 == 7) {
          __label__ = 53; break;
        }
        else if ($164 == 22) {
          __label__ = 42; break;
        }
        else if ($164 == 24) {
          __label__ = 42; break;
        }
        else if ($164 == 29) {
          __label__ = 41; break;
        }
        else {
        __label__ = 58; break;
        }
        
      case 41: // $bb2_i20_i
        var $165=$nextTokPtr_addr_i16_i; //@line 386 "xmltok_impl.c"
        var $166=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        HEAP[$165]=$166; //@line 386 "xmltok_impl.c"
        $0=0; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 42: // $bb3_i21_i
        var $167=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $168=$167+1; //@line 386 "xmltok_impl.c"
        $ptr_addr_i14_i=$168; //@line 386 "xmltok_impl.c"
        __label__ = 86; break; //@line 386 "xmltok_impl.c"
      case 43: // $bb4_i22_i
        var $169=$end_addr_i15_i; //@line 386 "xmltok_impl.c"
        var $170=($169); //@line 386 "xmltok_impl.c"
        var $171=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $172=($171); //@line 386 "xmltok_impl.c"
        var $173=($170) - ($172); //@line 386 "xmltok_impl.c"
        var $174=($173) <= 1; //@line 386 "xmltok_impl.c"
        if ($174) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 386 "xmltok_impl.c"
      case 44: // $bb5_i23_i
        $0=-2; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 45: // $bb6_i24_i
        var $175=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $176=$175; //@line 386 "xmltok_impl.c"
        var $177=$176+340; //@line 386 "xmltok_impl.c"
        var $178=HEAP[$177]; //@line 386 "xmltok_impl.c"
        var $179=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $180=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $181=FUNCTION_TABLE[$178]($179, $180); //@line 386 "xmltok_impl.c"
        var $182=($181)==0; //@line 386 "xmltok_impl.c"
        if ($182) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 386 "xmltok_impl.c"
      case 46: // $bb7_i25_i
        var $183=$nextTokPtr_addr_i16_i; //@line 386 "xmltok_impl.c"
        var $184=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        HEAP[$183]=$184; //@line 386 "xmltok_impl.c"
        $0=0; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 47: // $bb8_i26_i
        var $185=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $186=$185+2; //@line 386 "xmltok_impl.c"
        $ptr_addr_i14_i=$186; //@line 386 "xmltok_impl.c"
        __label__ = 86; break; //@line 386 "xmltok_impl.c"
      case 48: // $bb9_i27_i
        var $187=$end_addr_i15_i; //@line 386 "xmltok_impl.c"
        var $188=($187); //@line 386 "xmltok_impl.c"
        var $189=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $190=($189); //@line 386 "xmltok_impl.c"
        var $191=($188) - ($190); //@line 386 "xmltok_impl.c"
        var $192=($191) <= 2; //@line 386 "xmltok_impl.c"
        if ($192) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 386 "xmltok_impl.c"
      case 49: // $bb10_i28_i
        $0=-2; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 50: // $bb11_i29_i
        var $193=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $194=$193; //@line 386 "xmltok_impl.c"
        var $195=$194+344; //@line 386 "xmltok_impl.c"
        var $196=HEAP[$195]; //@line 386 "xmltok_impl.c"
        var $197=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $198=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $199=FUNCTION_TABLE[$196]($197, $198); //@line 386 "xmltok_impl.c"
        var $200=($199)==0; //@line 386 "xmltok_impl.c"
        if ($200) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 386 "xmltok_impl.c"
      case 51: // $bb12_i30_i
        var $201=$nextTokPtr_addr_i16_i; //@line 386 "xmltok_impl.c"
        var $202=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        HEAP[$201]=$202; //@line 386 "xmltok_impl.c"
        $0=0; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 52: // $bb13_i31_i
        var $203=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $204=$203+3; //@line 386 "xmltok_impl.c"
        $ptr_addr_i14_i=$204; //@line 386 "xmltok_impl.c"
        __label__ = 86; break; //@line 386 "xmltok_impl.c"
      case 53: // $bb14_i32_i
        var $205=$end_addr_i15_i; //@line 386 "xmltok_impl.c"
        var $206=($205); //@line 386 "xmltok_impl.c"
        var $207=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $208=($207); //@line 386 "xmltok_impl.c"
        var $209=($206) - ($208); //@line 386 "xmltok_impl.c"
        var $210=($209) <= 3; //@line 386 "xmltok_impl.c"
        if ($210) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 386 "xmltok_impl.c"
      case 54: // $bb15_i33_i
        $0=-2; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 55: // $bb16_i34_i
        var $211=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $212=$211; //@line 386 "xmltok_impl.c"
        var $213=$212+348; //@line 386 "xmltok_impl.c"
        var $214=HEAP[$213]; //@line 386 "xmltok_impl.c"
        var $215=$enc_addr_i13_i; //@line 386 "xmltok_impl.c"
        var $216=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $217=FUNCTION_TABLE[$214]($215, $216); //@line 386 "xmltok_impl.c"
        var $218=($217)==0; //@line 386 "xmltok_impl.c"
        if ($218) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 386 "xmltok_impl.c"
      case 56: // $bb17_i35_i
        var $219=$nextTokPtr_addr_i16_i; //@line 386 "xmltok_impl.c"
        var $220=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        HEAP[$219]=$220; //@line 386 "xmltok_impl.c"
        $0=0; //@line 386 "xmltok_impl.c"
        __label__ = 88; break; //@line 386 "xmltok_impl.c"
      case 57: // $bb18_i36_i
        var $221=$ptr_addr_i14_i; //@line 386 "xmltok_impl.c"
        var $222=$221+4; //@line 386 "xmltok_impl.c"
        $ptr_addr_i14_i=$222; //@line 386 "xmltok_impl.c"
        __label__ = 86; break; //@line 386 "xmltok_impl.c"
      case 58: // $bb19_i37_i
        var $223=$nextTokPtr_addr_i16_i; //@line 388 "xmltok_impl.c"
        var $224=$ptr_addr_i14_i; //@line 388 "xmltok_impl.c"
        HEAP[$223]=$224; //@line 388 "xmltok_impl.c"
        $0=0; //@line 389 "xmltok_impl.c"
        __label__ = 88; break; //@line 389 "xmltok_impl.c"
      case 59: // $bb21_i38_i
        var $225=$enc_addr_i13_i; //@line 392 "xmltok_impl.c"
        var $226=$225; //@line 392 "xmltok_impl.c"
        var $227=$ptr_addr_i14_i; //@line 392 "xmltok_impl.c"
        var $228=HEAP[$227]; //@line 392 "xmltok_impl.c"
        var $229=($228); //@line 392 "xmltok_impl.c"
        var $230=$226+72; //@line 392 "xmltok_impl.c"
        var $231=$230+$229; //@line 392 "xmltok_impl.c"
        var $232=HEAP[$231]; //@line 392 "xmltok_impl.c"
        var $233=($232); //@line 392 "xmltok_impl.c"
        if ($233 == 5) {
          __label__ = 62; break;
        }
        else if ($233 == 6) {
          __label__ = 67; break;
        }
        else if ($233 == 7) {
          __label__ = 72; break;
        }
        else if ($233 == 9) {
          __label__ = 77; break;
        }
        else if ($233 == 10) {
          __label__ = 77; break;
        }
        else if ($233 == 11) {
          __label__ = 84; break;
        }
        else if ($233 == 21) {
          __label__ = 77; break;
        }
        else if ($233 == 22) {
          __label__ = 61; break;
        }
        else if ($233 == 24) {
          __label__ = 61; break;
        }
        else if ($233 == 25) {
          __label__ = 61; break;
        }
        else if ($233 == 26) {
          __label__ = 61; break;
        }
        else if ($233 == 27) {
          __label__ = 61; break;
        }
        else if ($233 == 29) {
          __label__ = 60; break;
        }
        else {
        __label__ = 85; break;
        }
        
      case 60: // $bb22_i_i
        var $234=$nextTokPtr_addr_i16_i; //@line 393 "xmltok_impl.c"
        var $235=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        HEAP[$234]=$235; //@line 393 "xmltok_impl.c"
        $0=0; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 61: // $bb23_i39_i
        var $236=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $237=$236+1; //@line 393 "xmltok_impl.c"
        $ptr_addr_i14_i=$237; //@line 393 "xmltok_impl.c"
        __label__ = 86; break; //@line 393 "xmltok_impl.c"
      case 62: // $bb24_i40_i
        var $238=$end_addr_i15_i; //@line 393 "xmltok_impl.c"
        var $239=($238); //@line 393 "xmltok_impl.c"
        var $240=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $241=($240); //@line 393 "xmltok_impl.c"
        var $242=($239) - ($241); //@line 393 "xmltok_impl.c"
        var $243=($242) <= 1; //@line 393 "xmltok_impl.c"
        if ($243) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 393 "xmltok_impl.c"
      case 63: // $bb25_i41_i
        $0=-2; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 64: // $bb26_i42_i
        var $244=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $245=$244; //@line 393 "xmltok_impl.c"
        var $246=$245+328; //@line 393 "xmltok_impl.c"
        var $247=HEAP[$246]; //@line 393 "xmltok_impl.c"
        var $248=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $249=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $250=FUNCTION_TABLE[$247]($248, $249); //@line 393 "xmltok_impl.c"
        var $251=($250)==0; //@line 393 "xmltok_impl.c"
        if ($251) { __label__ = 65; break; } else { __label__ = 66; break; } //@line 393 "xmltok_impl.c"
      case 65: // $bb27_i_i
        var $252=$nextTokPtr_addr_i16_i; //@line 393 "xmltok_impl.c"
        var $253=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        HEAP[$252]=$253; //@line 393 "xmltok_impl.c"
        $0=0; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 66: // $bb28_i43_i
        var $254=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $255=$254+2; //@line 393 "xmltok_impl.c"
        $ptr_addr_i14_i=$255; //@line 393 "xmltok_impl.c"
        __label__ = 86; break; //@line 393 "xmltok_impl.c"
      case 67: // $bb29_i_i
        var $256=$end_addr_i15_i; //@line 393 "xmltok_impl.c"
        var $257=($256); //@line 393 "xmltok_impl.c"
        var $258=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $259=($258); //@line 393 "xmltok_impl.c"
        var $260=($257) - ($259); //@line 393 "xmltok_impl.c"
        var $261=($260) <= 2; //@line 393 "xmltok_impl.c"
        if ($261) { __label__ = 68; break; } else { __label__ = 69; break; } //@line 393 "xmltok_impl.c"
      case 68: // $bb30_i44_i
        $0=-2; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 69: // $bb31_i45_i
        var $262=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $263=$262; //@line 393 "xmltok_impl.c"
        var $264=$263+332; //@line 393 "xmltok_impl.c"
        var $265=HEAP[$264]; //@line 393 "xmltok_impl.c"
        var $266=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $267=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $268=FUNCTION_TABLE[$265]($266, $267); //@line 393 "xmltok_impl.c"
        var $269=($268)==0; //@line 393 "xmltok_impl.c"
        if ($269) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 393 "xmltok_impl.c"
      case 70: // $bb32_i46_i
        var $270=$nextTokPtr_addr_i16_i; //@line 393 "xmltok_impl.c"
        var $271=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        HEAP[$270]=$271; //@line 393 "xmltok_impl.c"
        $0=0; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 71: // $bb33_i_i
        var $272=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $273=$272+3; //@line 393 "xmltok_impl.c"
        $ptr_addr_i14_i=$273; //@line 393 "xmltok_impl.c"
        __label__ = 86; break; //@line 393 "xmltok_impl.c"
      case 72: // $bb34_i47_i
        var $274=$end_addr_i15_i; //@line 393 "xmltok_impl.c"
        var $275=($274); //@line 393 "xmltok_impl.c"
        var $276=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $277=($276); //@line 393 "xmltok_impl.c"
        var $278=($275) - ($277); //@line 393 "xmltok_impl.c"
        var $279=($278) <= 3; //@line 393 "xmltok_impl.c"
        if ($279) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 393 "xmltok_impl.c"
      case 73: // $bb35_i48_i
        $0=-2; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 74: // $bb36_i49_i
        var $280=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $281=$280; //@line 393 "xmltok_impl.c"
        var $282=$281+336; //@line 393 "xmltok_impl.c"
        var $283=HEAP[$282]; //@line 393 "xmltok_impl.c"
        var $284=$enc_addr_i13_i; //@line 393 "xmltok_impl.c"
        var $285=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $286=FUNCTION_TABLE[$283]($284, $285); //@line 393 "xmltok_impl.c"
        var $287=($286)==0; //@line 393 "xmltok_impl.c"
        if ($287) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 393 "xmltok_impl.c"
      case 75: // $bb37_i50_i
        var $288=$nextTokPtr_addr_i16_i; //@line 393 "xmltok_impl.c"
        var $289=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        HEAP[$288]=$289; //@line 393 "xmltok_impl.c"
        $0=0; //@line 393 "xmltok_impl.c"
        __label__ = 88; break; //@line 393 "xmltok_impl.c"
      case 76: // $bb38_i51_i
        var $290=$ptr_addr_i14_i; //@line 393 "xmltok_impl.c"
        var $291=$290+4; //@line 393 "xmltok_impl.c"
        $ptr_addr_i14_i=$291; //@line 393 "xmltok_impl.c"
        __label__ = 86; break; //@line 393 "xmltok_impl.c"
      case 77: // $bb39_i52_i
        var $292=$ptr_addr_i14_i; //@line 395 "xmltok_impl.c"
        var $293=$292+1; //@line 395 "xmltok_impl.c"
        $ptr_addr_i14_i=$293; //@line 395 "xmltok_impl.c"
        __label__ = 82; break; //@line 395 "xmltok_impl.c"
      case 78: // $bb40_i53_i
        var $294=$enc_addr_i13_i; //@line 396 "xmltok_impl.c"
        var $295=$294; //@line 396 "xmltok_impl.c"
        var $296=$ptr_addr_i14_i; //@line 396 "xmltok_impl.c"
        var $297=HEAP[$296]; //@line 396 "xmltok_impl.c"
        var $298=($297); //@line 396 "xmltok_impl.c"
        var $299=$295+72; //@line 396 "xmltok_impl.c"
        var $300=$299+$298; //@line 396 "xmltok_impl.c"
        var $301=HEAP[$300]; //@line 396 "xmltok_impl.c"
        var $302=($301); //@line 396 "xmltok_impl.c"
        if ($302 == 9) {
          __label__ = 79; break;
        }
        else if ($302 == 10) {
          __label__ = 79; break;
        }
        else if ($302 == 11) {
          __label__ = 80; break;
        }
        else if ($302 == 21) {
          __label__ = 79; break;
        }
        else {
        __label__ = 81; break;
        }
        
      case 79: // $bb41_i54_i
        var $303=$ptr_addr_i14_i; //@line 395 "xmltok_impl.c"
        var $304=$303+1; //@line 395 "xmltok_impl.c"
        $ptr_addr_i14_i=$304; //@line 395 "xmltok_impl.c"
        __label__ = 82; break; //@line 395 "xmltok_impl.c"
      case 80: // $bb42_i55_i
        var $305=$ptr_addr_i14_i; //@line 400 "xmltok_impl.c"
        var $306=$305+1; //@line 400 "xmltok_impl.c"
        var $307=$nextTokPtr_addr_i16_i; //@line 400 "xmltok_impl.c"
        HEAP[$307]=$306; //@line 400 "xmltok_impl.c"
        $0=5; //@line 401 "xmltok_impl.c"
        __label__ = 88; break; //@line 401 "xmltok_impl.c"
      case 81: // $bb43_i56_i
        var $308=$nextTokPtr_addr_i16_i; //@line 403 "xmltok_impl.c"
        var $309=$ptr_addr_i14_i; //@line 403 "xmltok_impl.c"
        HEAP[$308]=$309; //@line 403 "xmltok_impl.c"
        $0=0; //@line 404 "xmltok_impl.c"
        __label__ = 88; break; //@line 404 "xmltok_impl.c"
      case 82: // $bb44_i57_i
        var $310=$ptr_addr_i14_i; //@line 395 "xmltok_impl.c"
        var $311=$end_addr_i15_i; //@line 395 "xmltok_impl.c"
        var $312=($310)!=($311); //@line 395 "xmltok_impl.c"
        if ($312) { __label__ = 78; break; } else { __label__ = 83; break; } //@line 395 "xmltok_impl.c"
      case 83: // $bb45_i58_i
        $0=-1; //@line 407 "xmltok_impl.c"
        __label__ = 88; break; //@line 407 "xmltok_impl.c"
      case 84: // $bb46_i59_i
        var $313=$ptr_addr_i14_i; //@line 416 "xmltok_impl.c"
        var $314=$313+1; //@line 416 "xmltok_impl.c"
        var $315=$nextTokPtr_addr_i16_i; //@line 416 "xmltok_impl.c"
        HEAP[$315]=$314; //@line 416 "xmltok_impl.c"
        $0=5; //@line 417 "xmltok_impl.c"
        __label__ = 88; break; //@line 417 "xmltok_impl.c"
      case 85: // $bb47_i60_i
        var $316=$nextTokPtr_addr_i16_i; //@line 419 "xmltok_impl.c"
        var $317=$ptr_addr_i14_i; //@line 419 "xmltok_impl.c"
        HEAP[$316]=$317; //@line 419 "xmltok_impl.c"
        $0=0; //@line 420 "xmltok_impl.c"
        __label__ = 88; break; //@line 420 "xmltok_impl.c"
      case 86: // $bb48_i61_i
        var $318=$ptr_addr_i14_i; //@line 391 "xmltok_impl.c"
        var $319=$end_addr_i15_i; //@line 391 "xmltok_impl.c"
        var $320=($318)!=($319); //@line 391 "xmltok_impl.c"
        if ($320) { __label__ = 59; break; } else { __label__ = 87; break; } //@line 391 "xmltok_impl.c"
      case 87: // $bb49_i62_i
        $0=-1; //@line 423 "xmltok_impl.c"
        __label__ = 88; break; //@line 423 "xmltok_impl.c"
      case 88: // $normal_scanEndTag_exit_i
        var $321=$0; //@line 384 "xmltok_impl.c"
        $retval_i17_i=$321; //@line 384 "xmltok_impl.c"
        var $retval51_i_i=$retval_i17_i; //@line 384 "xmltok_impl.c"
        $3=$retval51_i_i; //@line 707 "xmltok_impl.c"
        __label__ = 231; break; //@line 707 "xmltok_impl.c"
      case 89: // $bb27_i
        var $322=$nextTokPtr_addr_i; //@line 709 "xmltok_impl.c"
        var $323=$ptr_addr_i; //@line 709 "xmltok_impl.c"
        HEAP[$322]=$323; //@line 709 "xmltok_impl.c"
        $3=0; //@line 710 "xmltok_impl.c"
        __label__ = 231; break; //@line 710 "xmltok_impl.c"
      case 90: // $bb29_i
        var $324=$enc_addr_i; //@line 717 "xmltok_impl.c"
        var $325=$324; //@line 717 "xmltok_impl.c"
        var $326=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $327=HEAP[$326]; //@line 717 "xmltok_impl.c"
        var $328=($327); //@line 717 "xmltok_impl.c"
        var $329=$325+72; //@line 717 "xmltok_impl.c"
        var $330=$329+$328; //@line 717 "xmltok_impl.c"
        var $331=HEAP[$330]; //@line 717 "xmltok_impl.c"
        var $332=($331); //@line 717 "xmltok_impl.c"
        if ($332 == 5) {
          __label__ = 93; break;
        }
        else if ($332 == 6) {
          __label__ = 98; break;
        }
        else if ($332 == 7) {
          __label__ = 103; break;
        }
        else if ($332 == 9) {
          __label__ = 108; break;
        }
        else if ($332 == 10) {
          __label__ = 108; break;
        }
        else if ($332 == 11) {
          __label__ = 222; break;
        }
        else if ($332 == 17) {
          __label__ = 223; break;
        }
        else if ($332 == 21) {
          __label__ = 108; break;
        }
        else if ($332 == 22) {
          __label__ = 92; break;
        }
        else if ($332 == 24) {
          __label__ = 92; break;
        }
        else if ($332 == 25) {
          __label__ = 92; break;
        }
        else if ($332 == 26) {
          __label__ = 92; break;
        }
        else if ($332 == 27) {
          __label__ = 92; break;
        }
        else if ($332 == 29) {
          __label__ = 91; break;
        }
        else {
        __label__ = 228; break;
        }
        
      case 91: // $bb30_i
        var $333=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $334=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$333]=$334; //@line 718 "xmltok_impl.c"
        $3=0; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 92: // $bb31_i
        var $335=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $336=$335+1; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$336; //@line 718 "xmltok_impl.c"
        __label__ = 229; break; //@line 718 "xmltok_impl.c"
      case 93: // $bb32_i
        var $337=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $338=($337); //@line 718 "xmltok_impl.c"
        var $339=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $340=($339); //@line 718 "xmltok_impl.c"
        var $341=($338) - ($340); //@line 718 "xmltok_impl.c"
        var $342=($341) <= 1; //@line 718 "xmltok_impl.c"
        if ($342) { __label__ = 94; break; } else { __label__ = 95; break; } //@line 718 "xmltok_impl.c"
      case 94: // $bb33_i
        $3=-2; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 95: // $bb34_i
        var $343=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $344=$343; //@line 718 "xmltok_impl.c"
        var $345=$344+328; //@line 718 "xmltok_impl.c"
        var $346=HEAP[$345]; //@line 718 "xmltok_impl.c"
        var $347=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $348=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $349=FUNCTION_TABLE[$346]($347, $348); //@line 718 "xmltok_impl.c"
        var $350=($349)==0; //@line 718 "xmltok_impl.c"
        if ($350) { __label__ = 96; break; } else { __label__ = 97; break; } //@line 718 "xmltok_impl.c"
      case 96: // $bb35_i
        var $351=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $352=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$351]=$352; //@line 718 "xmltok_impl.c"
        $3=0; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 97: // $bb36_i
        var $353=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $354=$353+2; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$354; //@line 718 "xmltok_impl.c"
        __label__ = 229; break; //@line 718 "xmltok_impl.c"
      case 98: // $bb37_i
        var $355=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $356=($355); //@line 718 "xmltok_impl.c"
        var $357=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $358=($357); //@line 718 "xmltok_impl.c"
        var $359=($356) - ($358); //@line 718 "xmltok_impl.c"
        var $360=($359) <= 2; //@line 718 "xmltok_impl.c"
        if ($360) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 718 "xmltok_impl.c"
      case 99: // $bb38_i
        $3=-2; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 100: // $bb39_i
        var $361=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $362=$361; //@line 718 "xmltok_impl.c"
        var $363=$362+332; //@line 718 "xmltok_impl.c"
        var $364=HEAP[$363]; //@line 718 "xmltok_impl.c"
        var $365=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $366=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $367=FUNCTION_TABLE[$364]($365, $366); //@line 718 "xmltok_impl.c"
        var $368=($367)==0; //@line 718 "xmltok_impl.c"
        if ($368) { __label__ = 101; break; } else { __label__ = 102; break; } //@line 718 "xmltok_impl.c"
      case 101: // $bb40_i
        var $369=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $370=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$369]=$370; //@line 718 "xmltok_impl.c"
        $3=0; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 102: // $bb41_i
        var $371=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $372=$371+3; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$372; //@line 718 "xmltok_impl.c"
        __label__ = 229; break; //@line 718 "xmltok_impl.c"
      case 103: // $bb42_i
        var $373=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $374=($373); //@line 718 "xmltok_impl.c"
        var $375=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $376=($375); //@line 718 "xmltok_impl.c"
        var $377=($374) - ($376); //@line 718 "xmltok_impl.c"
        var $378=($377) <= 3; //@line 718 "xmltok_impl.c"
        if ($378) { __label__ = 104; break; } else { __label__ = 105; break; } //@line 718 "xmltok_impl.c"
      case 104: // $bb43_i
        $3=-2; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 105: // $bb44_i
        var $379=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $380=$379; //@line 718 "xmltok_impl.c"
        var $381=$380+336; //@line 718 "xmltok_impl.c"
        var $382=HEAP[$381]; //@line 718 "xmltok_impl.c"
        var $383=$enc_addr_i; //@line 718 "xmltok_impl.c"
        var $384=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $385=FUNCTION_TABLE[$382]($383, $384); //@line 718 "xmltok_impl.c"
        var $386=($385)==0; //@line 718 "xmltok_impl.c"
        if ($386) { __label__ = 106; break; } else { __label__ = 107; break; } //@line 718 "xmltok_impl.c"
      case 106: // $bb45_i
        var $387=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $388=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$387]=$388; //@line 718 "xmltok_impl.c"
        $3=0; //@line 718 "xmltok_impl.c"
        __label__ = 231; break; //@line 718 "xmltok_impl.c"
      case 107: // $bb46_i
        var $389=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $390=$389+4; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$390; //@line 718 "xmltok_impl.c"
        __label__ = 229; break; //@line 718 "xmltok_impl.c"
      case 108: // $bb47_i
        var $391=$ptr_addr_i; //@line 739 "xmltok_impl.c"
        var $392=$391+1; //@line 739 "xmltok_impl.c"
        $ptr_addr_i=$392; //@line 739 "xmltok_impl.c"
        __label__ = 220; break; //@line 739 "xmltok_impl.c"
      case 109: // $bb48_i
        var $393=$enc_addr_i; //@line 741 "xmltok_impl.c"
        var $394=$393; //@line 741 "xmltok_impl.c"
        var $395=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $396=HEAP[$395]; //@line 741 "xmltok_impl.c"
        var $397=($396); //@line 741 "xmltok_impl.c"
        var $398=$394+72; //@line 741 "xmltok_impl.c"
        var $399=$398+$397; //@line 741 "xmltok_impl.c"
        var $400=HEAP[$399]; //@line 741 "xmltok_impl.c"
        var $401=($400); //@line 741 "xmltok_impl.c"
        if ($401 == 5) {
          __label__ = 112; break;
        }
        else if ($401 == 6) {
          __label__ = 117; break;
        }
        else if ($401 == 7) {
          __label__ = 122; break;
        }
        else if ($401 == 9) {
          __label__ = 127; break;
        }
        else if ($401 == 10) {
          __label__ = 127; break;
        }
        else if ($401 == 11) {
          __label__ = 222; break;
        }
        else if ($401 == 17) {
          __label__ = 223; break;
        }
        else if ($401 == 21) {
          __label__ = 127; break;
        }
        else if ($401 == 22) {
          __label__ = 111; break;
        }
        else if ($401 == 24) {
          __label__ = 111; break;
        }
        else if ($401 == 29) {
          __label__ = 110; break;
        }
        else {
        __label__ = 128; break;
        }
        
      case 110: // $bb49_i
        var $402=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $403=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$402]=$403; //@line 742 "xmltok_impl.c"
        $3=0; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 111: // $bb50_i
        var $404=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $405=$404+1; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$405; //@line 742 "xmltok_impl.c"
        __label__ = 129; break; //@line 742 "xmltok_impl.c"
      case 112: // $bb51_i
        var $406=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $407=($406); //@line 742 "xmltok_impl.c"
        var $408=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $409=($408); //@line 742 "xmltok_impl.c"
        var $410=($407) - ($409); //@line 742 "xmltok_impl.c"
        var $411=($410) <= 1; //@line 742 "xmltok_impl.c"
        if ($411) { __label__ = 113; break; } else { __label__ = 114; break; } //@line 742 "xmltok_impl.c"
      case 113: // $bb52_i
        $3=-2; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 114: // $bb53_i
        var $412=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $413=$412; //@line 742 "xmltok_impl.c"
        var $414=$413+340; //@line 742 "xmltok_impl.c"
        var $415=HEAP[$414]; //@line 742 "xmltok_impl.c"
        var $416=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $417=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $418=FUNCTION_TABLE[$415]($416, $417); //@line 742 "xmltok_impl.c"
        var $419=($418)==0; //@line 742 "xmltok_impl.c"
        if ($419) { __label__ = 115; break; } else { __label__ = 116; break; } //@line 742 "xmltok_impl.c"
      case 115: // $bb54_i
        var $420=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $421=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$420]=$421; //@line 742 "xmltok_impl.c"
        $3=0; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 116: // $bb55_i
        var $422=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $423=$422+2; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$423; //@line 742 "xmltok_impl.c"
        __label__ = 129; break; //@line 742 "xmltok_impl.c"
      case 117: // $bb56_i
        var $424=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $425=($424); //@line 742 "xmltok_impl.c"
        var $426=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $427=($426); //@line 742 "xmltok_impl.c"
        var $428=($425) - ($427); //@line 742 "xmltok_impl.c"
        var $429=($428) <= 2; //@line 742 "xmltok_impl.c"
        if ($429) { __label__ = 118; break; } else { __label__ = 119; break; } //@line 742 "xmltok_impl.c"
      case 118: // $bb57_i
        $3=-2; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 119: // $bb58_i
        var $430=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $431=$430; //@line 742 "xmltok_impl.c"
        var $432=$431+344; //@line 742 "xmltok_impl.c"
        var $433=HEAP[$432]; //@line 742 "xmltok_impl.c"
        var $434=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $435=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $436=FUNCTION_TABLE[$433]($434, $435); //@line 742 "xmltok_impl.c"
        var $437=($436)==0; //@line 742 "xmltok_impl.c"
        if ($437) { __label__ = 120; break; } else { __label__ = 121; break; } //@line 742 "xmltok_impl.c"
      case 120: // $bb59_i
        var $438=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $439=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$438]=$439; //@line 742 "xmltok_impl.c"
        $3=0; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 121: // $bb60_i
        var $440=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $441=$440+3; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$441; //@line 742 "xmltok_impl.c"
        __label__ = 129; break; //@line 742 "xmltok_impl.c"
      case 122: // $bb61_i
        var $442=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $443=($442); //@line 742 "xmltok_impl.c"
        var $444=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $445=($444); //@line 742 "xmltok_impl.c"
        var $446=($443) - ($445); //@line 742 "xmltok_impl.c"
        var $447=($446) <= 3; //@line 742 "xmltok_impl.c"
        if ($447) { __label__ = 123; break; } else { __label__ = 124; break; } //@line 742 "xmltok_impl.c"
      case 123: // $bb62_i
        $3=-2; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 124: // $bb63_i
        var $448=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $449=$448; //@line 742 "xmltok_impl.c"
        var $450=$449+348; //@line 742 "xmltok_impl.c"
        var $451=HEAP[$450]; //@line 742 "xmltok_impl.c"
        var $452=$enc_addr_i; //@line 742 "xmltok_impl.c"
        var $453=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $454=FUNCTION_TABLE[$451]($452, $453); //@line 742 "xmltok_impl.c"
        var $455=($454)==0; //@line 742 "xmltok_impl.c"
        if ($455) { __label__ = 125; break; } else { __label__ = 126; break; } //@line 742 "xmltok_impl.c"
      case 125: // $bb64_i
        var $456=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $457=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$456]=$457; //@line 742 "xmltok_impl.c"
        $3=0; //@line 742 "xmltok_impl.c"
        __label__ = 231; break; //@line 742 "xmltok_impl.c"
      case 126: // $bb65_i
        var $458=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $459=$458+4; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$459; //@line 742 "xmltok_impl.c"
        __label__ = 129; break; //@line 742 "xmltok_impl.c"
      case 127: // $bb68_i
        var $460=$ptr_addr_i; //@line 748 "xmltok_impl.c"
        var $461=$460+1; //@line 748 "xmltok_impl.c"
        $ptr_addr_i=$461; //@line 748 "xmltok_impl.c"
        __label__ = 220; break; //@line 748 "xmltok_impl.c"
      case 128: // $bb69_i
        var $462=$nextTokPtr_addr_i; //@line 751 "xmltok_impl.c"
        var $463=$ptr_addr_i; //@line 751 "xmltok_impl.c"
        HEAP[$462]=$463; //@line 751 "xmltok_impl.c"
        $3=0; //@line 752 "xmltok_impl.c"
        __label__ = 231; break; //@line 752 "xmltok_impl.c"
      case 129: // $bb70_i
        var $464=$enc_addr_i; //@line 754 "xmltok_impl.c"
        var $465=$ptr_addr_i; //@line 754 "xmltok_impl.c"
        var $466=$end_addr_i; //@line 754 "xmltok_impl.c"
        var $467=$nextTokPtr_addr_i; //@line 754 "xmltok_impl.c"
        $enc_addr_i1_i=$464;
        HEAP[$ptr_addr_i2_i]=$465;
        $end_addr_i3_i=$466;
        $nextTokPtr_addr_i4_i=$467;
        __label__ = 217; break; //@line 529 "xmltok_impl.c"
      case 130: // $bb_i6_i
        var $468=$enc_addr_i1_i; //@line 530 "xmltok_impl.c"
        var $469=$468; //@line 530 "xmltok_impl.c"
        var $470=HEAP[$ptr_addr_i2_i]; //@line 530 "xmltok_impl.c"
        var $471=HEAP[$470]; //@line 530 "xmltok_impl.c"
        var $472=($471); //@line 530 "xmltok_impl.c"
        var $473=$469+72; //@line 530 "xmltok_impl.c"
        var $474=$473+$472; //@line 530 "xmltok_impl.c"
        var $475=HEAP[$474]; //@line 530 "xmltok_impl.c"
        var $476=($475); //@line 530 "xmltok_impl.c"
        if ($476 == 5) {
          __label__ = 133; break;
        }
        else if ($476 == 6) {
          __label__ = 138; break;
        }
        else if ($476 == 7) {
          __label__ = 143; break;
        }
        else if ($476 == 9) {
          __label__ = 148; break;
        }
        else if ($476 == 10) {
          __label__ = 148; break;
        }
        else if ($476 == 14) {
          __label__ = 153; break;
        }
        else if ($476 == 21) {
          __label__ = 148; break;
        }
        else if ($476 == 22) {
          __label__ = 132; break;
        }
        else if ($476 == 24) {
          __label__ = 132; break;
        }
        else if ($476 == 25) {
          __label__ = 132; break;
        }
        else if ($476 == 26) {
          __label__ = 132; break;
        }
        else if ($476 == 27) {
          __label__ = 132; break;
        }
        else if ($476 == 29) {
          __label__ = 131; break;
        }
        else {
        __label__ = 216; break;
        }
        
      case 131: // $bb1_i7_i
        var $477=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $478=$nextTokPtr_addr_i4_i; //@line 531 "xmltok_impl.c"
        HEAP[$478]=$477; //@line 531 "xmltok_impl.c"
        $1=0; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 132: // $bb2_i8_i
        var $479=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $480=$479+1; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$480; //@line 531 "xmltok_impl.c"
        __label__ = 217; break; //@line 531 "xmltok_impl.c"
      case 133: // $bb3_i9_i
        var $481=$end_addr_i3_i; //@line 531 "xmltok_impl.c"
        var $482=($481); //@line 531 "xmltok_impl.c"
        var $483=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $484=($483); //@line 531 "xmltok_impl.c"
        var $485=($482) - ($484); //@line 531 "xmltok_impl.c"
        var $486=($485) <= 1; //@line 531 "xmltok_impl.c"
        if ($486) { __label__ = 134; break; } else { __label__ = 135; break; } //@line 531 "xmltok_impl.c"
      case 134: // $bb4_i10_i
        $1=-2; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 135: // $bb5_i11_i
        var $487=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $488=$487; //@line 531 "xmltok_impl.c"
        var $489=$488+328; //@line 531 "xmltok_impl.c"
        var $490=HEAP[$489]; //@line 531 "xmltok_impl.c"
        var $491=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $492=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $493=FUNCTION_TABLE[$490]($492, $491); //@line 531 "xmltok_impl.c"
        var $494=($493)==0; //@line 531 "xmltok_impl.c"
        var $495=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        if ($494) { __label__ = 136; break; } else { __label__ = 137; break; } //@line 531 "xmltok_impl.c"
      case 136: // $bb6_i12_i
        var $496=$nextTokPtr_addr_i4_i; //@line 531 "xmltok_impl.c"
        HEAP[$496]=$495; //@line 531 "xmltok_impl.c"
        $1=0; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 137: // $bb7_i_i
        var $497=$495+2; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$497; //@line 531 "xmltok_impl.c"
        __label__ = 217; break; //@line 531 "xmltok_impl.c"
      case 138: // $bb8_i_i
        var $498=$end_addr_i3_i; //@line 531 "xmltok_impl.c"
        var $499=($498); //@line 531 "xmltok_impl.c"
        var $500=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $501=($500); //@line 531 "xmltok_impl.c"
        var $502=($499) - ($501); //@line 531 "xmltok_impl.c"
        var $503=($502) <= 2; //@line 531 "xmltok_impl.c"
        if ($503) { __label__ = 139; break; } else { __label__ = 140; break; } //@line 531 "xmltok_impl.c"
      case 139: // $bb9_i_i
        $1=-2; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 140: // $bb10_i_i
        var $504=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $505=$504; //@line 531 "xmltok_impl.c"
        var $506=$505+332; //@line 531 "xmltok_impl.c"
        var $507=HEAP[$506]; //@line 531 "xmltok_impl.c"
        var $508=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $509=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $510=FUNCTION_TABLE[$507]($509, $508); //@line 531 "xmltok_impl.c"
        var $511=($510)==0; //@line 531 "xmltok_impl.c"
        var $512=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        if ($511) { __label__ = 141; break; } else { __label__ = 142; break; } //@line 531 "xmltok_impl.c"
      case 141: // $bb11_i_i
        var $513=$nextTokPtr_addr_i4_i; //@line 531 "xmltok_impl.c"
        HEAP[$513]=$512; //@line 531 "xmltok_impl.c"
        $1=0; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 142: // $bb12_i_i
        var $514=$512+3; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$514; //@line 531 "xmltok_impl.c"
        __label__ = 217; break; //@line 531 "xmltok_impl.c"
      case 143: // $bb13_i_i
        var $515=$end_addr_i3_i; //@line 531 "xmltok_impl.c"
        var $516=($515); //@line 531 "xmltok_impl.c"
        var $517=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $518=($517); //@line 531 "xmltok_impl.c"
        var $519=($516) - ($518); //@line 531 "xmltok_impl.c"
        var $520=($519) <= 3; //@line 531 "xmltok_impl.c"
        if ($520) { __label__ = 144; break; } else { __label__ = 145; break; } //@line 531 "xmltok_impl.c"
      case 144: // $bb14_i_i
        $1=-2; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 145: // $bb15_i_i
        var $521=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $522=$521; //@line 531 "xmltok_impl.c"
        var $523=$522+336; //@line 531 "xmltok_impl.c"
        var $524=HEAP[$523]; //@line 531 "xmltok_impl.c"
        var $525=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        var $526=$enc_addr_i1_i; //@line 531 "xmltok_impl.c"
        var $527=FUNCTION_TABLE[$524]($526, $525); //@line 531 "xmltok_impl.c"
        var $528=($527)==0; //@line 531 "xmltok_impl.c"
        var $529=HEAP[$ptr_addr_i2_i]; //@line 531 "xmltok_impl.c"
        if ($528) { __label__ = 146; break; } else { __label__ = 147; break; } //@line 531 "xmltok_impl.c"
      case 146: // $bb16_i_i
        var $530=$nextTokPtr_addr_i4_i; //@line 531 "xmltok_impl.c"
        HEAP[$530]=$529; //@line 531 "xmltok_impl.c"
        $1=0; //@line 531 "xmltok_impl.c"
        __label__ = 219; break; //@line 531 "xmltok_impl.c"
      case 147: // $bb17_i_i
        var $531=$529+4; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$531; //@line 531 "xmltok_impl.c"
        __label__ = 217; break; //@line 531 "xmltok_impl.c"
      case 148: // $bb18_i_i
        var $532=HEAP[$ptr_addr_i2_i]; //@line 554 "xmltok_impl.c"
        var $533=$532+1; //@line 554 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$533; //@line 554 "xmltok_impl.c"
        var $534=HEAP[$ptr_addr_i2_i]; //@line 555 "xmltok_impl.c"
        var $535=$end_addr_i3_i; //@line 555 "xmltok_impl.c"
        var $536=($534)==($535); //@line 555 "xmltok_impl.c"
        if ($536) { __label__ = 149; break; } else { __label__ = 150; break; } //@line 555 "xmltok_impl.c"
      case 149: // $bb19_i_i
        $1=-1; //@line 556 "xmltok_impl.c"
        __label__ = 219; break; //@line 556 "xmltok_impl.c"
      case 150: // $bb20_i_i
        var $537=$enc_addr_i1_i; //@line 557 "xmltok_impl.c"
        var $538=$537; //@line 557 "xmltok_impl.c"
        var $539=HEAP[$ptr_addr_i2_i]; //@line 557 "xmltok_impl.c"
        var $540=HEAP[$539]; //@line 557 "xmltok_impl.c"
        var $541=($540); //@line 557 "xmltok_impl.c"
        var $542=$538+72; //@line 557 "xmltok_impl.c"
        var $543=$542+$541; //@line 557 "xmltok_impl.c"
        var $544=HEAP[$543]; //@line 557 "xmltok_impl.c"
        var $545=($544); //@line 557 "xmltok_impl.c"
        $t_i_i=$545; //@line 557 "xmltok_impl.c"
        var $546=$t_i_i; //@line 558 "xmltok_impl.c"
        var $547=($546)==14; //@line 558 "xmltok_impl.c"
        if ($547) { __label__ = 153; break; } else { __label__ = 151; break; } //@line 558 "xmltok_impl.c"
      case 151: // $bb21_i_i
        var $548=$t_i_i; //@line 560 "xmltok_impl.c"
        if ($548 == 9) {
          __label__ = 148; break;
        }
        else if ($548 == 10) {
          __label__ = 148; break;
        }
        else if ($548 == 21) {
          __label__ = 148; break;
        }
        else {
        __label__ = 152; break;
        }
        
      case 152: // $bb23_i_i
        var $549=HEAP[$ptr_addr_i2_i]; //@line 566 "xmltok_impl.c"
        var $550=$nextTokPtr_addr_i4_i; //@line 566 "xmltok_impl.c"
        HEAP[$550]=$549; //@line 566 "xmltok_impl.c"
        $1=0; //@line 567 "xmltok_impl.c"
        __label__ = 219; break; //@line 567 "xmltok_impl.c"
      case 153: // $bb24_i_i
        var $551=HEAP[$ptr_addr_i2_i]; //@line 578 "xmltok_impl.c"
        var $552=$551+1; //@line 578 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$552; //@line 578 "xmltok_impl.c"
        var $553=HEAP[$ptr_addr_i2_i]; //@line 579 "xmltok_impl.c"
        var $554=$end_addr_i3_i; //@line 579 "xmltok_impl.c"
        var $555=($553)==($554); //@line 579 "xmltok_impl.c"
        if ($555) { __label__ = 154; break; } else { __label__ = 155; break; } //@line 579 "xmltok_impl.c"
      case 154: // $bb25_i_i
        $1=-1; //@line 580 "xmltok_impl.c"
        __label__ = 219; break; //@line 580 "xmltok_impl.c"
      case 155: // $bb26_i_i
        var $556=$enc_addr_i1_i; //@line 581 "xmltok_impl.c"
        var $557=$556; //@line 581 "xmltok_impl.c"
        var $558=HEAP[$ptr_addr_i2_i]; //@line 581 "xmltok_impl.c"
        var $559=HEAP[$558]; //@line 581 "xmltok_impl.c"
        var $560=($559); //@line 581 "xmltok_impl.c"
        var $561=$557+72; //@line 581 "xmltok_impl.c"
        var $562=$561+$560; //@line 581 "xmltok_impl.c"
        var $563=HEAP[$562]; //@line 581 "xmltok_impl.c"
        var $564=($563); //@line 581 "xmltok_impl.c"
        $open_i_i=$564; //@line 581 "xmltok_impl.c"
        var $565=$open_i_i; //@line 582 "xmltok_impl.c"
        var $566=($565)==12; //@line 582 "xmltok_impl.c"
        var $567=$open_i_i; //@line 582 "xmltok_impl.c"
        var $568=($567)==13; //@line 582 "xmltok_impl.c"
        var $or_cond_i_i=($566) | ($568);
        if ($or_cond_i_i) { __label__ = 158; break; } else { __label__ = 156; break; } //@line 582 "xmltok_impl.c"
      case 156: // $bb28_i_i
        var $569=$open_i_i; //@line 584 "xmltok_impl.c"
        if ($569 == 9) {
          __label__ = 153; break;
        }
        else if ($569 == 10) {
          __label__ = 153; break;
        }
        else if ($569 == 21) {
          __label__ = 153; break;
        }
        else {
        __label__ = 157; break;
        }
        
      case 157: // $bb30_i_i
        var $570=HEAP[$ptr_addr_i2_i]; //@line 590 "xmltok_impl.c"
        var $571=$nextTokPtr_addr_i4_i; //@line 590 "xmltok_impl.c"
        HEAP[$571]=$570; //@line 590 "xmltok_impl.c"
        $1=0; //@line 591 "xmltok_impl.c"
        __label__ = 219; break; //@line 591 "xmltok_impl.c"
      case 158: // $bb31_i_i
        var $572=HEAP[$ptr_addr_i2_i]; //@line 594 "xmltok_impl.c"
        var $573=$572+1; //@line 594 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$573; //@line 594 "xmltok_impl.c"
        __label__ = 159; break; //@line 594 "xmltok_impl.c"
      case 159: // $bb32_i_i
        var $574=HEAP[$ptr_addr_i2_i]; //@line 598 "xmltok_impl.c"
        var $575=$end_addr_i3_i; //@line 598 "xmltok_impl.c"
        var $576=($574)==($575); //@line 598 "xmltok_impl.c"
        if ($576) { __label__ = 160; break; } else { __label__ = 161; break; } //@line 598 "xmltok_impl.c"
      case 160: // $bb34_i_i
        $1=-1; //@line 599 "xmltok_impl.c"
        __label__ = 219; break; //@line 599 "xmltok_impl.c"
      case 161: // $bb35_i_i
        var $577=$enc_addr_i1_i; //@line 600 "xmltok_impl.c"
        var $578=$577; //@line 600 "xmltok_impl.c"
        var $579=HEAP[$ptr_addr_i2_i]; //@line 600 "xmltok_impl.c"
        var $580=HEAP[$579]; //@line 600 "xmltok_impl.c"
        var $581=($580); //@line 600 "xmltok_impl.c"
        var $582=$578+72; //@line 600 "xmltok_impl.c"
        var $583=$582+$581; //@line 600 "xmltok_impl.c"
        var $584=HEAP[$583]; //@line 600 "xmltok_impl.c"
        var $585=($584); //@line 600 "xmltok_impl.c"
        $t33_i_i=$585; //@line 600 "xmltok_impl.c"
        var $586=$t33_i_i; //@line 601 "xmltok_impl.c"
        var $587=$open_i_i; //@line 601 "xmltok_impl.c"
        var $588=($586)==($587); //@line 601 "xmltok_impl.c"
        if ($588) { __label__ = 185; break; } else { __label__ = 162; break; } //@line 601 "xmltok_impl.c"
      case 162: // $bb36_i_i
        var $589=$t33_i_i; //@line 603 "xmltok_impl.c"
        if ($589 == 0) {
          __label__ = 178; break;
        }
        else if ($589 == 1) {
          __label__ = 178; break;
        }
        else if ($589 == 2) {
          __label__ = 183; break;
        }
        else if ($589 == 3) {
          __label__ = 179; break;
        }
        else if ($589 == 5) {
          __label__ = 163; break;
        }
        else if ($589 == 6) {
          __label__ = 168; break;
        }
        else if ($589 == 7) {
          __label__ = 173; break;
        }
        else if ($589 == 8) {
          __label__ = 178; break;
        }
        else {
        __label__ = 184; break;
        }
        
      case 163: // $bb37_i_i
        var $590=$end_addr_i3_i; //@line 604 "xmltok_impl.c"
        var $591=($590); //@line 604 "xmltok_impl.c"
        var $592=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $593=($592); //@line 604 "xmltok_impl.c"
        var $594=($591) - ($593); //@line 604 "xmltok_impl.c"
        var $595=($594) <= 1; //@line 604 "xmltok_impl.c"
        if ($595) { __label__ = 164; break; } else { __label__ = 165; break; } //@line 604 "xmltok_impl.c"
      case 164: // $bb38_i_i
        $1=-2; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 165: // $bb39_i_i
        var $596=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $597=$596; //@line 604 "xmltok_impl.c"
        var $598=$597+352; //@line 604 "xmltok_impl.c"
        var $599=HEAP[$598]; //@line 604 "xmltok_impl.c"
        var $600=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $601=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $602=FUNCTION_TABLE[$599]($601, $600); //@line 604 "xmltok_impl.c"
        var $603=($602)!=0; //@line 604 "xmltok_impl.c"
        var $604=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        if ($603) { __label__ = 166; break; } else { __label__ = 167; break; } //@line 604 "xmltok_impl.c"
      case 166: // $bb40_i_i
        var $605=$nextTokPtr_addr_i4_i; //@line 604 "xmltok_impl.c"
        HEAP[$605]=$604; //@line 604 "xmltok_impl.c"
        $1=0; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 167: // $bb41_i_i
        var $606=$604+2; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$606; //@line 604 "xmltok_impl.c"
        __label__ = 159; break; //@line 604 "xmltok_impl.c"
      case 168: // $bb42_i_i
        var $607=$end_addr_i3_i; //@line 604 "xmltok_impl.c"
        var $608=($607); //@line 604 "xmltok_impl.c"
        var $609=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $610=($609); //@line 604 "xmltok_impl.c"
        var $611=($608) - ($610); //@line 604 "xmltok_impl.c"
        var $612=($611) <= 2; //@line 604 "xmltok_impl.c"
        if ($612) { __label__ = 169; break; } else { __label__ = 170; break; } //@line 604 "xmltok_impl.c"
      case 169: // $bb43_i_i
        $1=-2; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 170: // $bb44_i_i
        var $613=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $614=$613; //@line 604 "xmltok_impl.c"
        var $615=$614+356; //@line 604 "xmltok_impl.c"
        var $616=HEAP[$615]; //@line 604 "xmltok_impl.c"
        var $617=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $618=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $619=FUNCTION_TABLE[$616]($618, $617); //@line 604 "xmltok_impl.c"
        var $620=($619)!=0; //@line 604 "xmltok_impl.c"
        var $621=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        if ($620) { __label__ = 171; break; } else { __label__ = 172; break; } //@line 604 "xmltok_impl.c"
      case 171: // $bb45_i_i
        var $622=$nextTokPtr_addr_i4_i; //@line 604 "xmltok_impl.c"
        HEAP[$622]=$621; //@line 604 "xmltok_impl.c"
        $1=0; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 172: // $bb46_i_i
        var $623=$621+3; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$623; //@line 604 "xmltok_impl.c"
        __label__ = 159; break; //@line 604 "xmltok_impl.c"
      case 173: // $bb47_i_i
        var $624=$end_addr_i3_i; //@line 604 "xmltok_impl.c"
        var $625=($624); //@line 604 "xmltok_impl.c"
        var $626=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $627=($626); //@line 604 "xmltok_impl.c"
        var $628=($625) - ($627); //@line 604 "xmltok_impl.c"
        var $629=($628) <= 3; //@line 604 "xmltok_impl.c"
        if ($629) { __label__ = 174; break; } else { __label__ = 175; break; } //@line 604 "xmltok_impl.c"
      case 174: // $bb48_i_i
        $1=-2; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 175: // $bb49_i_i
        var $630=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $631=$630; //@line 604 "xmltok_impl.c"
        var $632=$631+360; //@line 604 "xmltok_impl.c"
        var $633=HEAP[$632]; //@line 604 "xmltok_impl.c"
        var $634=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $635=$enc_addr_i1_i; //@line 604 "xmltok_impl.c"
        var $636=FUNCTION_TABLE[$633]($635, $634); //@line 604 "xmltok_impl.c"
        var $637=($636)!=0; //@line 604 "xmltok_impl.c"
        var $638=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        if ($637) { __label__ = 176; break; } else { __label__ = 177; break; } //@line 604 "xmltok_impl.c"
      case 176: // $bb50_i_i
        var $639=$nextTokPtr_addr_i4_i; //@line 604 "xmltok_impl.c"
        HEAP[$639]=$638; //@line 604 "xmltok_impl.c"
        $1=0; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 177: // $bb51_i_i
        var $640=$638+4; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$640; //@line 604 "xmltok_impl.c"
        __label__ = 159; break; //@line 604 "xmltok_impl.c"
      case 178: // $bb52_i_i
        var $641=HEAP[$ptr_addr_i2_i]; //@line 604 "xmltok_impl.c"
        var $642=$nextTokPtr_addr_i4_i; //@line 604 "xmltok_impl.c"
        HEAP[$642]=$641; //@line 604 "xmltok_impl.c"
        $1=0; //@line 604 "xmltok_impl.c"
        __label__ = 219; break; //@line 604 "xmltok_impl.c"
      case 179: // $bb53_i_i
        var $643=HEAP[$ptr_addr_i2_i]; //@line 607 "xmltok_impl.c"
        var $644=$643+1; //@line 607 "xmltok_impl.c"
        var $645=$enc_addr_i1_i; //@line 607 "xmltok_impl.c"
        var $646=$end_addr_i3_i; //@line 607 "xmltok_impl.c"
        var $647=_normal_scanRef($645, $644, $646, $ptr_addr_i2_i); //@line 607 "xmltok_impl.c"
        $tok_i_i=$647; //@line 607 "xmltok_impl.c"
        var $648=$tok_i_i; //@line 608 "xmltok_impl.c"
        var $649=($648) <= 0; //@line 608 "xmltok_impl.c"
        if ($649) { __label__ = 180; break; } else { __label__ = 159; break; } //@line 608 "xmltok_impl.c"
      case 180: // $bb54_i_i
        var $650=$tok_i_i; //@line 609 "xmltok_impl.c"
        var $651=($650)==0; //@line 609 "xmltok_impl.c"
        if ($651) { __label__ = 181; break; } else { __label__ = 182; break; } //@line 609 "xmltok_impl.c"
      case 181: // $bb55_i_i
        var $652=HEAP[$ptr_addr_i2_i]; //@line 610 "xmltok_impl.c"
        var $653=$nextTokPtr_addr_i4_i; //@line 610 "xmltok_impl.c"
        HEAP[$653]=$652; //@line 610 "xmltok_impl.c"
        __label__ = 182; break; //@line 610 "xmltok_impl.c"
      case 182: // $bb56_i_i
        var $654=$tok_i_i; //@line 611 "xmltok_impl.c"
        $1=$654; //@line 611 "xmltok_impl.c"
        __label__ = 219; break; //@line 611 "xmltok_impl.c"
      case 183: // $bb58_i_i
        var $655=HEAP[$ptr_addr_i2_i]; //@line 616 "xmltok_impl.c"
        var $656=$nextTokPtr_addr_i4_i; //@line 616 "xmltok_impl.c"
        HEAP[$656]=$655; //@line 616 "xmltok_impl.c"
        $1=0; //@line 617 "xmltok_impl.c"
        __label__ = 219; break; //@line 617 "xmltok_impl.c"
      case 184: // $bb59_i_i
        var $657=HEAP[$ptr_addr_i2_i]; //@line 619 "xmltok_impl.c"
        var $658=$657+1; //@line 619 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$658; //@line 619 "xmltok_impl.c"
        __label__ = 159; break; //@line 619 "xmltok_impl.c"
      case 185: // $bb61_i_i
        var $659=HEAP[$ptr_addr_i2_i]; //@line 623 "xmltok_impl.c"
        var $660=$659+1; //@line 623 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$660; //@line 623 "xmltok_impl.c"
        var $661=HEAP[$ptr_addr_i2_i]; //@line 624 "xmltok_impl.c"
        var $662=$end_addr_i3_i; //@line 624 "xmltok_impl.c"
        var $663=($661)==($662); //@line 624 "xmltok_impl.c"
        if ($663) { __label__ = 186; break; } else { __label__ = 187; break; } //@line 624 "xmltok_impl.c"
      case 186: // $bb62_i_i
        $1=-1; //@line 625 "xmltok_impl.c"
        __label__ = 219; break; //@line 625 "xmltok_impl.c"
      case 187: // $bb63_i_i
        var $664=$enc_addr_i1_i; //@line 626 "xmltok_impl.c"
        var $665=$664; //@line 626 "xmltok_impl.c"
        var $666=HEAP[$ptr_addr_i2_i]; //@line 626 "xmltok_impl.c"
        var $667=HEAP[$666]; //@line 626 "xmltok_impl.c"
        var $668=($667); //@line 626 "xmltok_impl.c"
        var $669=$665+72; //@line 626 "xmltok_impl.c"
        var $670=$669+$668; //@line 626 "xmltok_impl.c"
        var $671=HEAP[$670]; //@line 626 "xmltok_impl.c"
        var $672=($671); //@line 626 "xmltok_impl.c"
        if ($672 == 9) {
          __label__ = 189; break;
        }
        else if ($672 == 10) {
          __label__ = 189; break;
        }
        else if ($672 == 11) {
          __label__ = 209; break;
        }
        else if ($672 == 17) {
          __label__ = 210; break;
        }
        else if ($672 == 21) {
          __label__ = 189; break;
        }
        else {
        __label__ = 188; break;
        }
        
      case 188: // $bb67_i_i
        var $673=HEAP[$ptr_addr_i2_i]; //@line 636 "xmltok_impl.c"
        var $674=$nextTokPtr_addr_i4_i; //@line 636 "xmltok_impl.c"
        HEAP[$674]=$673; //@line 636 "xmltok_impl.c"
        $1=0; //@line 637 "xmltok_impl.c"
        __label__ = 219; break; //@line 637 "xmltok_impl.c"
      case 189: // $bb68_i_i
        var $675=HEAP[$ptr_addr_i2_i]; //@line 641 "xmltok_impl.c"
        var $676=$675+1; //@line 641 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$676; //@line 641 "xmltok_impl.c"
        var $677=HEAP[$ptr_addr_i2_i]; //@line 642 "xmltok_impl.c"
        var $678=$end_addr_i3_i; //@line 642 "xmltok_impl.c"
        var $679=($677)==($678); //@line 642 "xmltok_impl.c"
        if ($679) { __label__ = 190; break; } else { __label__ = 191; break; } //@line 642 "xmltok_impl.c"
      case 190: // $bb69_i_i
        $1=-1; //@line 643 "xmltok_impl.c"
        __label__ = 219; break; //@line 643 "xmltok_impl.c"
      case 191: // $bb70_i_i
        var $680=$enc_addr_i1_i; //@line 644 "xmltok_impl.c"
        var $681=$680; //@line 644 "xmltok_impl.c"
        var $682=HEAP[$ptr_addr_i2_i]; //@line 644 "xmltok_impl.c"
        var $683=HEAP[$682]; //@line 644 "xmltok_impl.c"
        var $684=($683); //@line 644 "xmltok_impl.c"
        var $685=$681+72; //@line 644 "xmltok_impl.c"
        var $686=$685+$684; //@line 644 "xmltok_impl.c"
        var $687=HEAP[$686]; //@line 644 "xmltok_impl.c"
        var $688=($687); //@line 644 "xmltok_impl.c"
        if ($688 == 5) {
          __label__ = 194; break;
        }
        else if ($688 == 6) {
          __label__ = 199; break;
        }
        else if ($688 == 7) {
          __label__ = 204; break;
        }
        else if ($688 == 9) {
          __label__ = 189; break;
        }
        else if ($688 == 10) {
          __label__ = 189; break;
        }
        else if ($688 == 11) {
          __label__ = 209; break;
        }
        else if ($688 == 17) {
          __label__ = 210; break;
        }
        else if ($688 == 21) {
          __label__ = 189; break;
        }
        else if ($688 == 22) {
          __label__ = 193; break;
        }
        else if ($688 == 24) {
          __label__ = 193; break;
        }
        else if ($688 == 29) {
          __label__ = 192; break;
        }
        else {
        __label__ = 215; break;
        }
        
      case 192: // $bb71_i_i
        var $689=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $690=$nextTokPtr_addr_i4_i; //@line 645 "xmltok_impl.c"
        HEAP[$690]=$689; //@line 645 "xmltok_impl.c"
        $1=0; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 193: // $bb72_i_i
        var $691=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $692=$691+1; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$692; //@line 645 "xmltok_impl.c"
        __label__ = 217; break; //@line 645 "xmltok_impl.c"
      case 194: // $bb73_i_i
        var $693=$end_addr_i3_i; //@line 645 "xmltok_impl.c"
        var $694=($693); //@line 645 "xmltok_impl.c"
        var $695=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $696=($695); //@line 645 "xmltok_impl.c"
        var $697=($694) - ($696); //@line 645 "xmltok_impl.c"
        var $698=($697) <= 1; //@line 645 "xmltok_impl.c"
        if ($698) { __label__ = 195; break; } else { __label__ = 196; break; } //@line 645 "xmltok_impl.c"
      case 195: // $bb74_i_i
        $1=-2; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 196: // $bb75_i_i
        var $699=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $700=$699; //@line 645 "xmltok_impl.c"
        var $701=$700+340; //@line 645 "xmltok_impl.c"
        var $702=HEAP[$701]; //@line 645 "xmltok_impl.c"
        var $703=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $704=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $705=FUNCTION_TABLE[$702]($704, $703); //@line 645 "xmltok_impl.c"
        var $706=($705)==0; //@line 645 "xmltok_impl.c"
        var $707=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        if ($706) { __label__ = 197; break; } else { __label__ = 198; break; } //@line 645 "xmltok_impl.c"
      case 197: // $bb76_i_i
        var $708=$nextTokPtr_addr_i4_i; //@line 645 "xmltok_impl.c"
        HEAP[$708]=$707; //@line 645 "xmltok_impl.c"
        $1=0; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 198: // $bb77_i_i
        var $709=$707+2; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$709; //@line 645 "xmltok_impl.c"
        __label__ = 217; break; //@line 645 "xmltok_impl.c"
      case 199: // $bb78_i_i
        var $710=$end_addr_i3_i; //@line 645 "xmltok_impl.c"
        var $711=($710); //@line 645 "xmltok_impl.c"
        var $712=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $713=($712); //@line 645 "xmltok_impl.c"
        var $714=($711) - ($713); //@line 645 "xmltok_impl.c"
        var $715=($714) <= 2; //@line 645 "xmltok_impl.c"
        if ($715) { __label__ = 200; break; } else { __label__ = 201; break; } //@line 645 "xmltok_impl.c"
      case 200: // $bb79_i_i
        $1=-2; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 201: // $bb80_i_i
        var $716=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $717=$716; //@line 645 "xmltok_impl.c"
        var $718=$717+344; //@line 645 "xmltok_impl.c"
        var $719=HEAP[$718]; //@line 645 "xmltok_impl.c"
        var $720=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $721=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $722=FUNCTION_TABLE[$719]($721, $720); //@line 645 "xmltok_impl.c"
        var $723=($722)==0; //@line 645 "xmltok_impl.c"
        var $724=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        if ($723) { __label__ = 202; break; } else { __label__ = 203; break; } //@line 645 "xmltok_impl.c"
      case 202: // $bb81_i_i
        var $725=$nextTokPtr_addr_i4_i; //@line 645 "xmltok_impl.c"
        HEAP[$725]=$724; //@line 645 "xmltok_impl.c"
        $1=0; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 203: // $bb82_i_i
        var $726=$724+3; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$726; //@line 645 "xmltok_impl.c"
        __label__ = 217; break; //@line 645 "xmltok_impl.c"
      case 204: // $bb83_i_i
        var $727=$end_addr_i3_i; //@line 645 "xmltok_impl.c"
        var $728=($727); //@line 645 "xmltok_impl.c"
        var $729=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $730=($729); //@line 645 "xmltok_impl.c"
        var $731=($728) - ($730); //@line 645 "xmltok_impl.c"
        var $732=($731) <= 3; //@line 645 "xmltok_impl.c"
        if ($732) { __label__ = 205; break; } else { __label__ = 206; break; } //@line 645 "xmltok_impl.c"
      case 205: // $bb84_i_i
        $1=-2; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 206: // $bb85_i_i
        var $733=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $734=$733; //@line 645 "xmltok_impl.c"
        var $735=$734+348; //@line 645 "xmltok_impl.c"
        var $736=HEAP[$735]; //@line 645 "xmltok_impl.c"
        var $737=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        var $738=$enc_addr_i1_i; //@line 645 "xmltok_impl.c"
        var $739=FUNCTION_TABLE[$736]($738, $737); //@line 645 "xmltok_impl.c"
        var $740=($739)==0; //@line 645 "xmltok_impl.c"
        var $741=HEAP[$ptr_addr_i2_i]; //@line 645 "xmltok_impl.c"
        if ($740) { __label__ = 207; break; } else { __label__ = 208; break; } //@line 645 "xmltok_impl.c"
      case 207: // $bb86_i_i
        var $742=$nextTokPtr_addr_i4_i; //@line 645 "xmltok_impl.c"
        HEAP[$742]=$741; //@line 645 "xmltok_impl.c"
        $1=0; //@line 645 "xmltok_impl.c"
        __label__ = 219; break; //@line 645 "xmltok_impl.c"
      case 208: // $bb87_i_i
        var $743=$741+4; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$743; //@line 645 "xmltok_impl.c"
        __label__ = 217; break; //@line 645 "xmltok_impl.c"
      case 209: // $gt_i_i
        var $744=HEAP[$ptr_addr_i2_i]; //@line 650 "xmltok_impl.c"
        var $745=$744+1; //@line 650 "xmltok_impl.c"
        var $746=$nextTokPtr_addr_i4_i; //@line 650 "xmltok_impl.c"
        HEAP[$746]=$745; //@line 650 "xmltok_impl.c"
        $1=1; //@line 651 "xmltok_impl.c"
        __label__ = 219; break; //@line 651 "xmltok_impl.c"
      case 210: // $sol_i_i
        var $747=HEAP[$ptr_addr_i2_i]; //@line 654 "xmltok_impl.c"
        var $748=$747+1; //@line 654 "xmltok_impl.c"
        HEAP[$ptr_addr_i2_i]=$748; //@line 654 "xmltok_impl.c"
        var $749=HEAP[$ptr_addr_i2_i]; //@line 655 "xmltok_impl.c"
        var $750=$end_addr_i3_i; //@line 655 "xmltok_impl.c"
        var $751=($749)==($750); //@line 655 "xmltok_impl.c"
        if ($751) { __label__ = 211; break; } else { __label__ = 212; break; } //@line 655 "xmltok_impl.c"
      case 211: // $bb89_i_i
        $1=-1; //@line 656 "xmltok_impl.c"
        __label__ = 219; break; //@line 656 "xmltok_impl.c"
      case 212: // $bb90_i_i
        var $752=HEAP[$ptr_addr_i2_i]; //@line 657 "xmltok_impl.c"
        var $753=HEAP[$752]; //@line 657 "xmltok_impl.c"
        var $754=($753)!=62; //@line 657 "xmltok_impl.c"
        var $755=HEAP[$ptr_addr_i2_i]; //@line 658 "xmltok_impl.c"
        if ($754) { __label__ = 213; break; } else { __label__ = 214; break; } //@line 657 "xmltok_impl.c"
      case 213: // $bb91_i_i
        var $756=$nextTokPtr_addr_i4_i; //@line 658 "xmltok_impl.c"
        HEAP[$756]=$755; //@line 658 "xmltok_impl.c"
        $1=0; //@line 659 "xmltok_impl.c"
        __label__ = 219; break; //@line 659 "xmltok_impl.c"
      case 214: // $bb92_i_i
        var $757=$755+1; //@line 661 "xmltok_impl.c"
        var $758=$nextTokPtr_addr_i4_i; //@line 661 "xmltok_impl.c"
        HEAP[$758]=$757; //@line 661 "xmltok_impl.c"
        $1=3; //@line 662 "xmltok_impl.c"
        __label__ = 219; break; //@line 662 "xmltok_impl.c"
      case 215: // $bb93_i_i
        var $759=HEAP[$ptr_addr_i2_i]; //@line 664 "xmltok_impl.c"
        var $760=$nextTokPtr_addr_i4_i; //@line 664 "xmltok_impl.c"
        HEAP[$760]=$759; //@line 664 "xmltok_impl.c"
        $1=0; //@line 665 "xmltok_impl.c"
        __label__ = 219; break; //@line 665 "xmltok_impl.c"
      case 216: // $bb95_i_i
        var $761=HEAP[$ptr_addr_i2_i]; //@line 672 "xmltok_impl.c"
        var $762=$nextTokPtr_addr_i4_i; //@line 672 "xmltok_impl.c"
        HEAP[$762]=$761; //@line 672 "xmltok_impl.c"
        $1=0; //@line 673 "xmltok_impl.c"
        __label__ = 219; break; //@line 673 "xmltok_impl.c"
      case 217: // $bb96_i_i
        var $763=HEAP[$ptr_addr_i2_i]; //@line 529 "xmltok_impl.c"
        var $764=$end_addr_i3_i; //@line 529 "xmltok_impl.c"
        var $765=($763)!=($764); //@line 529 "xmltok_impl.c"
        if ($765) { __label__ = 130; break; } else { __label__ = 218; break; } //@line 529 "xmltok_impl.c"
      case 218: // $bb97_i_i
        $1=-1; //@line 676 "xmltok_impl.c"
        __label__ = 219; break; //@line 676 "xmltok_impl.c"
      case 219: // $normal_scanAtts_exit_i
        var $766=$1; //@line 531 "xmltok_impl.c"
        $retval_i5_i=$766; //@line 531 "xmltok_impl.c"
        var $retval99_i_i=$retval_i5_i; //@line 531 "xmltok_impl.c"
        $3=$retval99_i_i; //@line 754 "xmltok_impl.c"
        __label__ = 231; break; //@line 754 "xmltok_impl.c"
      case 220: // $bb71_i
        var $767=$ptr_addr_i; //@line 740 "xmltok_impl.c"
        var $768=$end_addr_i; //@line 740 "xmltok_impl.c"
        var $769=($767)!=($768); //@line 740 "xmltok_impl.c"
        if ($769) { __label__ = 109; break; } else { __label__ = 221; break; } //@line 740 "xmltok_impl.c"
      case 221: // $bb72_i
        $3=-1; //@line 756 "xmltok_impl.c"
        __label__ = 231; break; //@line 756 "xmltok_impl.c"
      case 222: // $gt_i
        var $770=$ptr_addr_i; //@line 760 "xmltok_impl.c"
        var $771=$770+1; //@line 760 "xmltok_impl.c"
        var $772=$nextTokPtr_addr_i; //@line 760 "xmltok_impl.c"
        HEAP[$772]=$771; //@line 760 "xmltok_impl.c"
        $3=2; //@line 761 "xmltok_impl.c"
        __label__ = 231; break; //@line 761 "xmltok_impl.c"
      case 223: // $sol_i
        var $773=$ptr_addr_i; //@line 764 "xmltok_impl.c"
        var $774=$773+1; //@line 764 "xmltok_impl.c"
        $ptr_addr_i=$774; //@line 764 "xmltok_impl.c"
        var $775=$ptr_addr_i; //@line 765 "xmltok_impl.c"
        var $776=$end_addr_i; //@line 765 "xmltok_impl.c"
        var $777=($775)==($776); //@line 765 "xmltok_impl.c"
        if ($777) { __label__ = 224; break; } else { __label__ = 225; break; } //@line 765 "xmltok_impl.c"
      case 224: // $bb73_i
        $3=-1; //@line 766 "xmltok_impl.c"
        __label__ = 231; break; //@line 766 "xmltok_impl.c"
      case 225: // $bb74_i
        var $778=$ptr_addr_i; //@line 767 "xmltok_impl.c"
        var $779=HEAP[$778]; //@line 767 "xmltok_impl.c"
        var $780=($779)!=62; //@line 767 "xmltok_impl.c"
        if ($780) { __label__ = 226; break; } else { __label__ = 227; break; } //@line 767 "xmltok_impl.c"
      case 226: // $bb75_i
        var $781=$nextTokPtr_addr_i; //@line 768 "xmltok_impl.c"
        var $782=$ptr_addr_i; //@line 768 "xmltok_impl.c"
        HEAP[$781]=$782; //@line 768 "xmltok_impl.c"
        $3=0; //@line 769 "xmltok_impl.c"
        __label__ = 231; break; //@line 769 "xmltok_impl.c"
      case 227: // $bb76_i
        var $783=$ptr_addr_i; //@line 771 "xmltok_impl.c"
        var $784=$783+1; //@line 771 "xmltok_impl.c"
        var $785=$nextTokPtr_addr_i; //@line 771 "xmltok_impl.c"
        HEAP[$785]=$784; //@line 771 "xmltok_impl.c"
        $3=4; //@line 772 "xmltok_impl.c"
        __label__ = 231; break; //@line 772 "xmltok_impl.c"
      case 228: // $bb77_i
        var $786=$nextTokPtr_addr_i; //@line 774 "xmltok_impl.c"
        var $787=$ptr_addr_i; //@line 774 "xmltok_impl.c"
        HEAP[$786]=$787; //@line 774 "xmltok_impl.c"
        $3=0; //@line 775 "xmltok_impl.c"
        __label__ = 231; break; //@line 775 "xmltok_impl.c"
      case 229: // $bb78_i
        var $788=$ptr_addr_i; //@line 716 "xmltok_impl.c"
        var $789=$end_addr_i; //@line 716 "xmltok_impl.c"
        var $790=($788)!=($789); //@line 716 "xmltok_impl.c"
        if ($790) { __label__ = 90; break; } else { __label__ = 230; break; } //@line 716 "xmltok_impl.c"
      case 230: // $bb79_i
        $3=-1; //@line 778 "xmltok_impl.c"
        __label__ = 231; break; //@line 778 "xmltok_impl.c"
      case 231: // $normal_scanLt_exit
        var $791=$3; //@line 689 "xmltok_impl.c"
        $retval_i=$791; //@line 689 "xmltok_impl.c"
        var $retval81_i=$retval_i; //@line 689 "xmltok_impl.c"
        $4=$retval81_i; //@line 798 "xmltok_impl.c"
        __label__ = 288; break; //@line 798 "xmltok_impl.c"
      case 232: // $bb3
        var $792=$ptr_addr; //@line 800 "xmltok_impl.c"
        var $793=$792+1; //@line 800 "xmltok_impl.c"
        var $794=$enc_addr; //@line 800 "xmltok_impl.c"
        var $795=$end_addr; //@line 800 "xmltok_impl.c"
        var $796=$nextTokPtr_addr; //@line 800 "xmltok_impl.c"
        var $797=_normal_scanRef($794, $793, $795, $796); //@line 800 "xmltok_impl.c"
        $4=$797; //@line 800 "xmltok_impl.c"
        __label__ = 288; break; //@line 800 "xmltok_impl.c"
      case 233: // $bb4
        var $798=$ptr_addr; //@line 802 "xmltok_impl.c"
        var $799=$798+1; //@line 802 "xmltok_impl.c"
        $ptr_addr=$799; //@line 802 "xmltok_impl.c"
        var $800=$ptr_addr; //@line 803 "xmltok_impl.c"
        var $801=$end_addr; //@line 803 "xmltok_impl.c"
        var $802=($800)==($801); //@line 803 "xmltok_impl.c"
        if ($802) { __label__ = 234; break; } else { __label__ = 235; break; } //@line 803 "xmltok_impl.c"
      case 234: // $bb5
        $4=-3; //@line 804 "xmltok_impl.c"
        __label__ = 288; break; //@line 804 "xmltok_impl.c"
      case 235: // $bb6
        var $803=$enc_addr; //@line 805 "xmltok_impl.c"
        var $804=$803; //@line 805 "xmltok_impl.c"
        var $805=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $806=HEAP[$805]; //@line 805 "xmltok_impl.c"
        var $807=($806); //@line 805 "xmltok_impl.c"
        var $808=$804+72; //@line 805 "xmltok_impl.c"
        var $809=$808+$807; //@line 805 "xmltok_impl.c"
        var $810=HEAP[$809]; //@line 805 "xmltok_impl.c"
        var $811=($810)==10; //@line 805 "xmltok_impl.c"
        if ($811) { __label__ = 236; break; } else { __label__ = 237; break; } //@line 805 "xmltok_impl.c"
      case 236: // $bb7
        var $812=$ptr_addr; //@line 806 "xmltok_impl.c"
        var $813=$812+1; //@line 806 "xmltok_impl.c"
        $ptr_addr=$813; //@line 806 "xmltok_impl.c"
        __label__ = 237; break; //@line 806 "xmltok_impl.c"
      case 237: // $bb8
        var $814=$nextTokPtr_addr; //@line 807 "xmltok_impl.c"
        var $815=$ptr_addr; //@line 807 "xmltok_impl.c"
        HEAP[$814]=$815; //@line 807 "xmltok_impl.c"
        $4=7; //@line 808 "xmltok_impl.c"
        __label__ = 288; break; //@line 808 "xmltok_impl.c"
      case 238: // $bb9
        var $816=$ptr_addr; //@line 810 "xmltok_impl.c"
        var $817=$816+1; //@line 810 "xmltok_impl.c"
        var $818=$nextTokPtr_addr; //@line 810 "xmltok_impl.c"
        HEAP[$818]=$817; //@line 810 "xmltok_impl.c"
        $4=7; //@line 811 "xmltok_impl.c"
        __label__ = 288; break; //@line 811 "xmltok_impl.c"
      case 239: // $bb10
        var $819=$ptr_addr; //@line 813 "xmltok_impl.c"
        var $820=$819+1; //@line 813 "xmltok_impl.c"
        $ptr_addr=$820; //@line 813 "xmltok_impl.c"
        var $821=$ptr_addr; //@line 814 "xmltok_impl.c"
        var $822=$end_addr; //@line 814 "xmltok_impl.c"
        var $823=($821)==($822); //@line 814 "xmltok_impl.c"
        if ($823) { __label__ = 240; break; } else { __label__ = 241; break; } //@line 814 "xmltok_impl.c"
      case 240: // $bb11
        $4=-5; //@line 815 "xmltok_impl.c"
        __label__ = 288; break; //@line 815 "xmltok_impl.c"
      case 241: // $bb12
        var $824=$ptr_addr; //@line 816 "xmltok_impl.c"
        var $825=HEAP[$824]; //@line 816 "xmltok_impl.c"
        var $826=($825)!=93; //@line 816 "xmltok_impl.c"
        if ($826) { __label__ = 286; break; } else { __label__ = 242; break; } //@line 816 "xmltok_impl.c"
      case 242: // $bb13
        var $827=$ptr_addr; //@line 818 "xmltok_impl.c"
        var $828=$827+1; //@line 818 "xmltok_impl.c"
        $ptr_addr=$828; //@line 818 "xmltok_impl.c"
        var $829=$ptr_addr; //@line 819 "xmltok_impl.c"
        var $830=$end_addr; //@line 819 "xmltok_impl.c"
        var $831=($829)==($830); //@line 819 "xmltok_impl.c"
        if ($831) { __label__ = 243; break; } else { __label__ = 244; break; } //@line 819 "xmltok_impl.c"
      case 243: // $bb14
        $4=-5; //@line 820 "xmltok_impl.c"
        __label__ = 288; break; //@line 820 "xmltok_impl.c"
      case 244: // $bb15
        var $832=$ptr_addr; //@line 821 "xmltok_impl.c"
        var $833=HEAP[$832]; //@line 821 "xmltok_impl.c"
        var $834=($833)!=62; //@line 821 "xmltok_impl.c"
        if ($834) { __label__ = 245; break; } else { __label__ = 246; break; } //@line 821 "xmltok_impl.c"
      case 245: // $bb16
        var $835=$ptr_addr; //@line 822 "xmltok_impl.c"
        var $836=$835+-1; //@line 822 "xmltok_impl.c"
        $ptr_addr=$836; //@line 822 "xmltok_impl.c"
        __label__ = 286; break; //@line 822 "xmltok_impl.c"
      case 246: // $bb17
        var $837=$nextTokPtr_addr; //@line 825 "xmltok_impl.c"
        var $838=$ptr_addr; //@line 825 "xmltok_impl.c"
        HEAP[$837]=$838; //@line 825 "xmltok_impl.c"
        $4=0; //@line 826 "xmltok_impl.c"
        __label__ = 288; break; //@line 826 "xmltok_impl.c"
      case 247: // $bb18
        var $839=$end_addr; //@line 827 "xmltok_impl.c"
        var $840=($839); //@line 827 "xmltok_impl.c"
        var $841=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $842=($841); //@line 827 "xmltok_impl.c"
        var $843=($840) - ($842); //@line 827 "xmltok_impl.c"
        var $844=($843) <= 1; //@line 827 "xmltok_impl.c"
        if ($844) { __label__ = 248; break; } else { __label__ = 249; break; } //@line 827 "xmltok_impl.c"
      case 248: // $bb19
        $4=-2; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 249: // $bb20
        var $845=$enc_addr; //@line 827 "xmltok_impl.c"
        var $846=$845; //@line 827 "xmltok_impl.c"
        var $847=$846+352; //@line 827 "xmltok_impl.c"
        var $848=HEAP[$847]; //@line 827 "xmltok_impl.c"
        var $849=$enc_addr; //@line 827 "xmltok_impl.c"
        var $850=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $851=FUNCTION_TABLE[$848]($849, $850); //@line 827 "xmltok_impl.c"
        var $852=($851)!=0; //@line 827 "xmltok_impl.c"
        if ($852) { __label__ = 250; break; } else { __label__ = 251; break; } //@line 827 "xmltok_impl.c"
      case 250: // $bb21
        var $853=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $854=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$853]=$854; //@line 827 "xmltok_impl.c"
        $4=0; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 251: // $bb22
        var $855=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $856=$855+2; //@line 827 "xmltok_impl.c"
        $ptr_addr=$856; //@line 827 "xmltok_impl.c"
        __label__ = 286; break; //@line 827 "xmltok_impl.c"
      case 252: // $bb23
        var $857=$end_addr; //@line 827 "xmltok_impl.c"
        var $858=($857); //@line 827 "xmltok_impl.c"
        var $859=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $860=($859); //@line 827 "xmltok_impl.c"
        var $861=($858) - ($860); //@line 827 "xmltok_impl.c"
        var $862=($861) <= 2; //@line 827 "xmltok_impl.c"
        if ($862) { __label__ = 253; break; } else { __label__ = 254; break; } //@line 827 "xmltok_impl.c"
      case 253: // $bb24
        $4=-2; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 254: // $bb25
        var $863=$enc_addr; //@line 827 "xmltok_impl.c"
        var $864=$863; //@line 827 "xmltok_impl.c"
        var $865=$864+356; //@line 827 "xmltok_impl.c"
        var $866=HEAP[$865]; //@line 827 "xmltok_impl.c"
        var $867=$enc_addr; //@line 827 "xmltok_impl.c"
        var $868=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $869=FUNCTION_TABLE[$866]($867, $868); //@line 827 "xmltok_impl.c"
        var $870=($869)!=0; //@line 827 "xmltok_impl.c"
        if ($870) { __label__ = 255; break; } else { __label__ = 256; break; } //@line 827 "xmltok_impl.c"
      case 255: // $bb26
        var $871=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $872=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$871]=$872; //@line 827 "xmltok_impl.c"
        $4=0; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 256: // $bb27
        var $873=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $874=$873+3; //@line 827 "xmltok_impl.c"
        $ptr_addr=$874; //@line 827 "xmltok_impl.c"
        __label__ = 286; break; //@line 827 "xmltok_impl.c"
      case 257: // $bb28
        var $875=$end_addr; //@line 827 "xmltok_impl.c"
        var $876=($875); //@line 827 "xmltok_impl.c"
        var $877=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $878=($877); //@line 827 "xmltok_impl.c"
        var $879=($876) - ($878); //@line 827 "xmltok_impl.c"
        var $880=($879) <= 3; //@line 827 "xmltok_impl.c"
        if ($880) { __label__ = 258; break; } else { __label__ = 259; break; } //@line 827 "xmltok_impl.c"
      case 258: // $bb29
        $4=-2; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 259: // $bb30
        var $881=$enc_addr; //@line 827 "xmltok_impl.c"
        var $882=$881; //@line 827 "xmltok_impl.c"
        var $883=$882+360; //@line 827 "xmltok_impl.c"
        var $884=HEAP[$883]; //@line 827 "xmltok_impl.c"
        var $885=$enc_addr; //@line 827 "xmltok_impl.c"
        var $886=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $887=FUNCTION_TABLE[$884]($885, $886); //@line 827 "xmltok_impl.c"
        var $888=($887)!=0; //@line 827 "xmltok_impl.c"
        if ($888) { __label__ = 260; break; } else { __label__ = 261; break; } //@line 827 "xmltok_impl.c"
      case 260: // $bb31
        var $889=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $890=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$889]=$890; //@line 827 "xmltok_impl.c"
        $4=0; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 261: // $bb32
        var $891=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $892=$891+4; //@line 827 "xmltok_impl.c"
        $ptr_addr=$892; //@line 827 "xmltok_impl.c"
        __label__ = 286; break; //@line 827 "xmltok_impl.c"
      case 262: // $bb33
        var $893=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $894=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$893]=$894; //@line 827 "xmltok_impl.c"
        $4=0; //@line 827 "xmltok_impl.c"
        __label__ = 288; break; //@line 827 "xmltok_impl.c"
      case 263: // $bb34
        var $895=$ptr_addr; //@line 829 "xmltok_impl.c"
        var $896=$895+1; //@line 829 "xmltok_impl.c"
        $ptr_addr=$896; //@line 829 "xmltok_impl.c"
        __label__ = 286; break; //@line 829 "xmltok_impl.c"
      case 264: // $bb36
        var $897=$enc_addr; //@line 833 "xmltok_impl.c"
        var $898=$897; //@line 833 "xmltok_impl.c"
        var $899=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $900=HEAP[$899]; //@line 833 "xmltok_impl.c"
        var $901=($900); //@line 833 "xmltok_impl.c"
        var $902=$898+72; //@line 833 "xmltok_impl.c"
        var $903=$902+$901; //@line 833 "xmltok_impl.c"
        var $904=HEAP[$903]; //@line 833 "xmltok_impl.c"
        var $905=($904); //@line 833 "xmltok_impl.c"
        if ($905 == 0) {
          __label__ = 284; break;
        }
        else if ($905 == 1) {
          __label__ = 284; break;
        }
        else if ($905 == 2) {
          __label__ = 284; break;
        }
        else if ($905 == 3) {
          __label__ = 284; break;
        }
        else if ($905 == 4) {
          __label__ = 277; break;
        }
        else if ($905 == 5) {
          __label__ = 265; break;
        }
        else if ($905 == 6) {
          __label__ = 269; break;
        }
        else if ($905 == 7) {
          __label__ = 273; break;
        }
        else if ($905 == 8) {
          __label__ = 284; break;
        }
        else if ($905 == 9) {
          __label__ = 284; break;
        }
        else if ($905 == 10) {
          __label__ = 284; break;
        }
        else {
        __label__ = 285; break;
        }
        
      case 265: // $bb37
        var $906=$end_addr; //@line 842 "xmltok_impl.c"
        var $907=($906); //@line 842 "xmltok_impl.c"
        var $908=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $909=($908); //@line 842 "xmltok_impl.c"
        var $910=($907) - ($909); //@line 842 "xmltok_impl.c"
        var $911=($910) <= 1; //@line 842 "xmltok_impl.c"
        if ($911) { __label__ = 267; break; } else { __label__ = 266; break; } //@line 842 "xmltok_impl.c"
      case 266: // $bb38
        var $912=$enc_addr; //@line 842 "xmltok_impl.c"
        var $913=$912; //@line 842 "xmltok_impl.c"
        var $914=$913+352; //@line 842 "xmltok_impl.c"
        var $915=HEAP[$914]; //@line 842 "xmltok_impl.c"
        var $916=$enc_addr; //@line 842 "xmltok_impl.c"
        var $917=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $918=FUNCTION_TABLE[$915]($916, $917); //@line 842 "xmltok_impl.c"
        var $919=($918)!=0; //@line 842 "xmltok_impl.c"
        if ($919) { __label__ = 267; break; } else { __label__ = 268; break; } //@line 842 "xmltok_impl.c"
      case 267: // $bb39
        var $920=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $921=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$920]=$921; //@line 842 "xmltok_impl.c"
        $4=6; //@line 842 "xmltok_impl.c"
        __label__ = 288; break; //@line 842 "xmltok_impl.c"
      case 268: // $bb40
        var $922=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $923=$922+2; //@line 842 "xmltok_impl.c"
        $ptr_addr=$923; //@line 842 "xmltok_impl.c"
        __label__ = 286; break; //@line 842 "xmltok_impl.c"
      case 269: // $bb41
        var $924=$end_addr; //@line 842 "xmltok_impl.c"
        var $925=($924); //@line 842 "xmltok_impl.c"
        var $926=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $927=($926); //@line 842 "xmltok_impl.c"
        var $928=($925) - ($927); //@line 842 "xmltok_impl.c"
        var $929=($928) <= 2; //@line 842 "xmltok_impl.c"
        if ($929) { __label__ = 271; break; } else { __label__ = 270; break; } //@line 842 "xmltok_impl.c"
      case 270: // $bb42
        var $930=$enc_addr; //@line 842 "xmltok_impl.c"
        var $931=$930; //@line 842 "xmltok_impl.c"
        var $932=$931+356; //@line 842 "xmltok_impl.c"
        var $933=HEAP[$932]; //@line 842 "xmltok_impl.c"
        var $934=$enc_addr; //@line 842 "xmltok_impl.c"
        var $935=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $936=FUNCTION_TABLE[$933]($934, $935); //@line 842 "xmltok_impl.c"
        var $937=($936)!=0; //@line 842 "xmltok_impl.c"
        if ($937) { __label__ = 271; break; } else { __label__ = 272; break; } //@line 842 "xmltok_impl.c"
      case 271: // $bb43
        var $938=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $939=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$938]=$939; //@line 842 "xmltok_impl.c"
        $4=6; //@line 842 "xmltok_impl.c"
        __label__ = 288; break; //@line 842 "xmltok_impl.c"
      case 272: // $bb44
        var $940=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $941=$940+3; //@line 842 "xmltok_impl.c"
        $ptr_addr=$941; //@line 842 "xmltok_impl.c"
        __label__ = 286; break; //@line 842 "xmltok_impl.c"
      case 273: // $bb45
        var $942=$end_addr; //@line 842 "xmltok_impl.c"
        var $943=($942); //@line 842 "xmltok_impl.c"
        var $944=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $945=($944); //@line 842 "xmltok_impl.c"
        var $946=($943) - ($945); //@line 842 "xmltok_impl.c"
        var $947=($946) <= 3; //@line 842 "xmltok_impl.c"
        if ($947) { __label__ = 275; break; } else { __label__ = 274; break; } //@line 842 "xmltok_impl.c"
      case 274: // $bb46
        var $948=$enc_addr; //@line 842 "xmltok_impl.c"
        var $949=$948; //@line 842 "xmltok_impl.c"
        var $950=$949+360; //@line 842 "xmltok_impl.c"
        var $951=HEAP[$950]; //@line 842 "xmltok_impl.c"
        var $952=$enc_addr; //@line 842 "xmltok_impl.c"
        var $953=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $954=FUNCTION_TABLE[$951]($952, $953); //@line 842 "xmltok_impl.c"
        var $955=($954)!=0; //@line 842 "xmltok_impl.c"
        if ($955) { __label__ = 275; break; } else { __label__ = 276; break; } //@line 842 "xmltok_impl.c"
      case 275: // $bb47
        var $956=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $957=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$956]=$957; //@line 842 "xmltok_impl.c"
        $4=6; //@line 842 "xmltok_impl.c"
        __label__ = 288; break; //@line 842 "xmltok_impl.c"
      case 276: // $bb48
        var $958=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $959=$958+4; //@line 842 "xmltok_impl.c"
        $ptr_addr=$959; //@line 842 "xmltok_impl.c"
        __label__ = 286; break; //@line 842 "xmltok_impl.c"
      case 277: // $bb49
        var $960=$ptr_addr; //@line 845 "xmltok_impl.c"
        var $961=$960+1; //@line 845 "xmltok_impl.c"
        var $962=$end_addr; //@line 845 "xmltok_impl.c"
        var $963=($961)!=($962); //@line 845 "xmltok_impl.c"
        if ($963) { __label__ = 278; break; } else { __label__ = 284; break; } //@line 845 "xmltok_impl.c"
      case 278: // $bb50
        var $964=$ptr_addr; //@line 846 "xmltok_impl.c"
        var $965=$964+1; //@line 846 "xmltok_impl.c"
        var $966=HEAP[$965]; //@line 846 "xmltok_impl.c"
        var $967=($966)!=93; //@line 846 "xmltok_impl.c"
        var $968=$ptr_addr; //@line 847 "xmltok_impl.c"
        if ($967) { __label__ = 279; break; } else { __label__ = 280; break; } //@line 846 "xmltok_impl.c"
      case 279: // $bb51
        var $969=$968+1; //@line 847 "xmltok_impl.c"
        $ptr_addr=$969; //@line 847 "xmltok_impl.c"
        __label__ = 286; break; //@line 847 "xmltok_impl.c"
      case 280: // $bb52
        var $970=$968+2; //@line 850 "xmltok_impl.c"
        var $971=$end_addr; //@line 850 "xmltok_impl.c"
        var $972=($970)!=($971); //@line 850 "xmltok_impl.c"
        if ($972) { __label__ = 281; break; } else { __label__ = 284; break; } //@line 850 "xmltok_impl.c"
      case 281: // $bb53
        var $973=$ptr_addr; //@line 851 "xmltok_impl.c"
        var $974=$973+2; //@line 851 "xmltok_impl.c"
        var $975=HEAP[$974]; //@line 851 "xmltok_impl.c"
        var $976=($975)!=62; //@line 851 "xmltok_impl.c"
        var $977=$ptr_addr; //@line 852 "xmltok_impl.c"
        if ($976) { __label__ = 282; break; } else { __label__ = 283; break; } //@line 851 "xmltok_impl.c"
      case 282: // $bb54
        var $978=$977+1; //@line 852 "xmltok_impl.c"
        $ptr_addr=$978; //@line 852 "xmltok_impl.c"
        __label__ = 286; break; //@line 852 "xmltok_impl.c"
      case 283: // $bb55
        var $979=$977+2; //@line 855 "xmltok_impl.c"
        var $980=$nextTokPtr_addr; //@line 855 "xmltok_impl.c"
        HEAP[$980]=$979; //@line 855 "xmltok_impl.c"
        $4=0; //@line 856 "xmltok_impl.c"
        __label__ = 288; break; //@line 856 "xmltok_impl.c"
      case 284: // $bb56
        var $981=$nextTokPtr_addr; //@line 867 "xmltok_impl.c"
        var $982=$ptr_addr; //@line 867 "xmltok_impl.c"
        HEAP[$981]=$982; //@line 867 "xmltok_impl.c"
        $4=6; //@line 868 "xmltok_impl.c"
        __label__ = 288; break; //@line 868 "xmltok_impl.c"
      case 285: // $bb57
        var $983=$ptr_addr; //@line 870 "xmltok_impl.c"
        var $984=$983+1; //@line 870 "xmltok_impl.c"
        $ptr_addr=$984; //@line 870 "xmltok_impl.c"
        __label__ = 286; break; //@line 870 "xmltok_impl.c"
      case 286: // $bb58
        var $985=$ptr_addr; //@line 832 "xmltok_impl.c"
        var $986=$end_addr; //@line 832 "xmltok_impl.c"
        var $987=($985)!=($986); //@line 832 "xmltok_impl.c"
        if ($987) { __label__ = 264; break; } else { __label__ = 287; break; } //@line 832 "xmltok_impl.c"
      case 287: // $bb59
        var $988=$nextTokPtr_addr; //@line 874 "xmltok_impl.c"
        var $989=$ptr_addr; //@line 874 "xmltok_impl.c"
        HEAP[$988]=$989; //@line 874 "xmltok_impl.c"
        $4=6; //@line 875 "xmltok_impl.c"
        __label__ = 288; break; //@line 875 "xmltok_impl.c"
      case 288: // $bb60
        var $990=$4; //@line 786 "xmltok_impl.c"
        $retval=$990; //@line 786 "xmltok_impl.c"
        var $retval61=$retval; //@line 786 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval61; //@line 786 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_scanPercent($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 884 "xmltok_impl.c"
        var $2=$end_addr; //@line 884 "xmltok_impl.c"
        var $3=($1)==($2); //@line 884 "xmltok_impl.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 884 "xmltok_impl.c"
      case 1: // $bb
        $0=-22; //@line 885 "xmltok_impl.c"
        __label__ = 44; break; //@line 885 "xmltok_impl.c"
      case 2: // $bb1
        var $4=$enc_addr; //@line 886 "xmltok_impl.c"
        var $5=$4; //@line 886 "xmltok_impl.c"
        var $6=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 886 "xmltok_impl.c"
        var $8=($7); //@line 886 "xmltok_impl.c"
        var $9=$5+72; //@line 886 "xmltok_impl.c"
        var $10=$9+$8; //@line 886 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 886 "xmltok_impl.c"
        var $12=($11); //@line 886 "xmltok_impl.c"
        if ($12 == 5) {
          __label__ = 5; break;
        }
        else if ($12 == 6) {
          __label__ = 10; break;
        }
        else if ($12 == 7) {
          __label__ = 15; break;
        }
        else if ($12 == 9) {
          __label__ = 20; break;
        }
        else if ($12 == 10) {
          __label__ = 20; break;
        }
        else if ($12 == 21) {
          __label__ = 20; break;
        }
        else if ($12 == 22) {
          __label__ = 4; break;
        }
        else if ($12 == 24) {
          __label__ = 4; break;
        }
        else if ($12 == 29) {
          __label__ = 3; break;
        }
        else if ($12 == 30) {
          __label__ = 20; break;
        }
        else {
        __label__ = 21; break;
        }
        
      case 3: // $bb2
        var $13=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $14=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$13]=$14; //@line 887 "xmltok_impl.c"
        $0=0; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 4: // $bb3
        var $15=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $16=$15+1; //@line 887 "xmltok_impl.c"
        $ptr_addr=$16; //@line 887 "xmltok_impl.c"
        __label__ = 42; break; //@line 887 "xmltok_impl.c"
      case 5: // $bb4
        var $17=$end_addr; //@line 887 "xmltok_impl.c"
        var $18=($17); //@line 887 "xmltok_impl.c"
        var $19=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $20=($19); //@line 887 "xmltok_impl.c"
        var $21=($18) - ($20); //@line 887 "xmltok_impl.c"
        var $22=($21) <= 1; //@line 887 "xmltok_impl.c"
        if ($22) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 887 "xmltok_impl.c"
      case 6: // $bb5
        $0=-2; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 7: // $bb6
        var $23=$enc_addr; //@line 887 "xmltok_impl.c"
        var $24=$23; //@line 887 "xmltok_impl.c"
        var $25=$24+340; //@line 887 "xmltok_impl.c"
        var $26=HEAP[$25]; //@line 887 "xmltok_impl.c"
        var $27=$enc_addr; //@line 887 "xmltok_impl.c"
        var $28=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $29=FUNCTION_TABLE[$26]($27, $28); //@line 887 "xmltok_impl.c"
        var $30=($29)==0; //@line 887 "xmltok_impl.c"
        if ($30) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 887 "xmltok_impl.c"
      case 8: // $bb7
        var $31=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $32=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$31]=$32; //@line 887 "xmltok_impl.c"
        $0=0; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 9: // $bb8
        var $33=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $34=$33+2; //@line 887 "xmltok_impl.c"
        $ptr_addr=$34; //@line 887 "xmltok_impl.c"
        __label__ = 42; break; //@line 887 "xmltok_impl.c"
      case 10: // $bb9
        var $35=$end_addr; //@line 887 "xmltok_impl.c"
        var $36=($35); //@line 887 "xmltok_impl.c"
        var $37=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $38=($37); //@line 887 "xmltok_impl.c"
        var $39=($36) - ($38); //@line 887 "xmltok_impl.c"
        var $40=($39) <= 2; //@line 887 "xmltok_impl.c"
        if ($40) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 887 "xmltok_impl.c"
      case 11: // $bb10
        $0=-2; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 12: // $bb11
        var $41=$enc_addr; //@line 887 "xmltok_impl.c"
        var $42=$41; //@line 887 "xmltok_impl.c"
        var $43=$42+344; //@line 887 "xmltok_impl.c"
        var $44=HEAP[$43]; //@line 887 "xmltok_impl.c"
        var $45=$enc_addr; //@line 887 "xmltok_impl.c"
        var $46=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $47=FUNCTION_TABLE[$44]($45, $46); //@line 887 "xmltok_impl.c"
        var $48=($47)==0; //@line 887 "xmltok_impl.c"
        if ($48) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 887 "xmltok_impl.c"
      case 13: // $bb12
        var $49=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $50=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$49]=$50; //@line 887 "xmltok_impl.c"
        $0=0; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 14: // $bb13
        var $51=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $52=$51+3; //@line 887 "xmltok_impl.c"
        $ptr_addr=$52; //@line 887 "xmltok_impl.c"
        __label__ = 42; break; //@line 887 "xmltok_impl.c"
      case 15: // $bb14
        var $53=$end_addr; //@line 887 "xmltok_impl.c"
        var $54=($53); //@line 887 "xmltok_impl.c"
        var $55=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $56=($55); //@line 887 "xmltok_impl.c"
        var $57=($54) - ($56); //@line 887 "xmltok_impl.c"
        var $58=($57) <= 3; //@line 887 "xmltok_impl.c"
        if ($58) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 887 "xmltok_impl.c"
      case 16: // $bb15
        $0=-2; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 17: // $bb16
        var $59=$enc_addr; //@line 887 "xmltok_impl.c"
        var $60=$59; //@line 887 "xmltok_impl.c"
        var $61=$60+348; //@line 887 "xmltok_impl.c"
        var $62=HEAP[$61]; //@line 887 "xmltok_impl.c"
        var $63=$enc_addr; //@line 887 "xmltok_impl.c"
        var $64=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $65=FUNCTION_TABLE[$62]($63, $64); //@line 887 "xmltok_impl.c"
        var $66=($65)==0; //@line 887 "xmltok_impl.c"
        if ($66) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 887 "xmltok_impl.c"
      case 18: // $bb17
        var $67=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$67]=$68; //@line 887 "xmltok_impl.c"
        $0=0; //@line 887 "xmltok_impl.c"
        __label__ = 44; break; //@line 887 "xmltok_impl.c"
      case 19: // $bb18
        var $69=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $70=$69+4; //@line 887 "xmltok_impl.c"
        $ptr_addr=$70; //@line 887 "xmltok_impl.c"
        __label__ = 42; break; //@line 887 "xmltok_impl.c"
      case 20: // $bb19
        var $71=$nextTokPtr_addr; //@line 889 "xmltok_impl.c"
        var $72=$ptr_addr; //@line 889 "xmltok_impl.c"
        HEAP[$71]=$72; //@line 889 "xmltok_impl.c"
        $0=22; //@line 890 "xmltok_impl.c"
        __label__ = 44; break; //@line 890 "xmltok_impl.c"
      case 21: // $bb20
        var $73=$nextTokPtr_addr; //@line 892 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 892 "xmltok_impl.c"
        HEAP[$73]=$74; //@line 892 "xmltok_impl.c"
        $0=0; //@line 893 "xmltok_impl.c"
        __label__ = 44; break; //@line 893 "xmltok_impl.c"
      case 22: // $bb22
        var $75=$enc_addr; //@line 896 "xmltok_impl.c"
        var $76=$75; //@line 896 "xmltok_impl.c"
        var $77=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $78=HEAP[$77]; //@line 896 "xmltok_impl.c"
        var $79=($78); //@line 896 "xmltok_impl.c"
        var $80=$76+72; //@line 896 "xmltok_impl.c"
        var $81=$80+$79; //@line 896 "xmltok_impl.c"
        var $82=HEAP[$81]; //@line 896 "xmltok_impl.c"
        var $83=($82); //@line 896 "xmltok_impl.c"
        if ($83 == 5) {
          __label__ = 25; break;
        }
        else if ($83 == 6) {
          __label__ = 30; break;
        }
        else if ($83 == 7) {
          __label__ = 35; break;
        }
        else if ($83 == 18) {
          __label__ = 40; break;
        }
        else if ($83 == 22) {
          __label__ = 24; break;
        }
        else if ($83 == 24) {
          __label__ = 24; break;
        }
        else if ($83 == 25) {
          __label__ = 24; break;
        }
        else if ($83 == 26) {
          __label__ = 24; break;
        }
        else if ($83 == 27) {
          __label__ = 24; break;
        }
        else if ($83 == 29) {
          __label__ = 23; break;
        }
        else {
        __label__ = 41; break;
        }
        
      case 23: // $bb23
        var $84=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $85=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$84]=$85; //@line 897 "xmltok_impl.c"
        $0=0; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 24: // $bb24
        var $86=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $87=$86+1; //@line 897 "xmltok_impl.c"
        $ptr_addr=$87; //@line 897 "xmltok_impl.c"
        __label__ = 42; break; //@line 897 "xmltok_impl.c"
      case 25: // $bb25
        var $88=$end_addr; //@line 897 "xmltok_impl.c"
        var $89=($88); //@line 897 "xmltok_impl.c"
        var $90=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $91=($90); //@line 897 "xmltok_impl.c"
        var $92=($89) - ($91); //@line 897 "xmltok_impl.c"
        var $93=($92) <= 1; //@line 897 "xmltok_impl.c"
        if ($93) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 897 "xmltok_impl.c"
      case 26: // $bb26
        $0=-2; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 27: // $bb27
        var $94=$enc_addr; //@line 897 "xmltok_impl.c"
        var $95=$94; //@line 897 "xmltok_impl.c"
        var $96=$95+328; //@line 897 "xmltok_impl.c"
        var $97=HEAP[$96]; //@line 897 "xmltok_impl.c"
        var $98=$enc_addr; //@line 897 "xmltok_impl.c"
        var $99=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $100=FUNCTION_TABLE[$97]($98, $99); //@line 897 "xmltok_impl.c"
        var $101=($100)==0; //@line 897 "xmltok_impl.c"
        if ($101) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 897 "xmltok_impl.c"
      case 28: // $bb28
        var $102=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $103=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$102]=$103; //@line 897 "xmltok_impl.c"
        $0=0; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 29: // $bb29
        var $104=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $105=$104+2; //@line 897 "xmltok_impl.c"
        $ptr_addr=$105; //@line 897 "xmltok_impl.c"
        __label__ = 42; break; //@line 897 "xmltok_impl.c"
      case 30: // $bb30
        var $106=$end_addr; //@line 897 "xmltok_impl.c"
        var $107=($106); //@line 897 "xmltok_impl.c"
        var $108=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $109=($108); //@line 897 "xmltok_impl.c"
        var $110=($107) - ($109); //@line 897 "xmltok_impl.c"
        var $111=($110) <= 2; //@line 897 "xmltok_impl.c"
        if ($111) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 897 "xmltok_impl.c"
      case 31: // $bb31
        $0=-2; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 32: // $bb32
        var $112=$enc_addr; //@line 897 "xmltok_impl.c"
        var $113=$112; //@line 897 "xmltok_impl.c"
        var $114=$113+332; //@line 897 "xmltok_impl.c"
        var $115=HEAP[$114]; //@line 897 "xmltok_impl.c"
        var $116=$enc_addr; //@line 897 "xmltok_impl.c"
        var $117=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $118=FUNCTION_TABLE[$115]($116, $117); //@line 897 "xmltok_impl.c"
        var $119=($118)==0; //@line 897 "xmltok_impl.c"
        if ($119) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 897 "xmltok_impl.c"
      case 33: // $bb33
        var $120=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $121=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$120]=$121; //@line 897 "xmltok_impl.c"
        $0=0; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 34: // $bb34
        var $122=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $123=$122+3; //@line 897 "xmltok_impl.c"
        $ptr_addr=$123; //@line 897 "xmltok_impl.c"
        __label__ = 42; break; //@line 897 "xmltok_impl.c"
      case 35: // $bb35
        var $124=$end_addr; //@line 897 "xmltok_impl.c"
        var $125=($124); //@line 897 "xmltok_impl.c"
        var $126=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $127=($126); //@line 897 "xmltok_impl.c"
        var $128=($125) - ($127); //@line 897 "xmltok_impl.c"
        var $129=($128) <= 3; //@line 897 "xmltok_impl.c"
        if ($129) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 897 "xmltok_impl.c"
      case 36: // $bb36
        $0=-2; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 37: // $bb37
        var $130=$enc_addr; //@line 897 "xmltok_impl.c"
        var $131=$130; //@line 897 "xmltok_impl.c"
        var $132=$131+336; //@line 897 "xmltok_impl.c"
        var $133=HEAP[$132]; //@line 897 "xmltok_impl.c"
        var $134=$enc_addr; //@line 897 "xmltok_impl.c"
        var $135=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $136=FUNCTION_TABLE[$133]($134, $135); //@line 897 "xmltok_impl.c"
        var $137=($136)==0; //@line 897 "xmltok_impl.c"
        if ($137) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 897 "xmltok_impl.c"
      case 38: // $bb38
        var $138=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $139=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$138]=$139; //@line 897 "xmltok_impl.c"
        $0=0; //@line 897 "xmltok_impl.c"
        __label__ = 44; break; //@line 897 "xmltok_impl.c"
      case 39: // $bb39
        var $140=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $141=$140+4; //@line 897 "xmltok_impl.c"
        $ptr_addr=$141; //@line 897 "xmltok_impl.c"
        __label__ = 42; break; //@line 897 "xmltok_impl.c"
      case 40: // $bb40
        var $142=$ptr_addr; //@line 899 "xmltok_impl.c"
        var $143=$142+1; //@line 899 "xmltok_impl.c"
        var $144=$nextTokPtr_addr; //@line 899 "xmltok_impl.c"
        HEAP[$144]=$143; //@line 899 "xmltok_impl.c"
        $0=28; //@line 900 "xmltok_impl.c"
        __label__ = 44; break; //@line 900 "xmltok_impl.c"
      case 41: // $bb41
        var $145=$nextTokPtr_addr; //@line 902 "xmltok_impl.c"
        var $146=$ptr_addr; //@line 902 "xmltok_impl.c"
        HEAP[$145]=$146; //@line 902 "xmltok_impl.c"
        $0=0; //@line 903 "xmltok_impl.c"
        __label__ = 44; break; //@line 903 "xmltok_impl.c"
      case 42: // $bb42
        var $147=$ptr_addr; //@line 895 "xmltok_impl.c"
        var $148=$end_addr; //@line 895 "xmltok_impl.c"
        var $149=($147)!=($148); //@line 895 "xmltok_impl.c"
        if ($149) { __label__ = 22; break; } else { __label__ = 43; break; } //@line 895 "xmltok_impl.c"
      case 43: // $bb43
        $0=-1; //@line 906 "xmltok_impl.c"
        __label__ = 44; break; //@line 906 "xmltok_impl.c"
      case 44: // $bb44
        var $150=$0; //@line 885 "xmltok_impl.c"
        $retval=$150; //@line 885 "xmltok_impl.c"
        var $retval45=$retval; //@line 885 "xmltok_impl.c"
        ;
        return $retval45; //@line 885 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_scanLit($open, $enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $open_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        var $t;
        $open_addr=$open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        __label__ = 25; break; //@line 941 "xmltok_impl.c"
      case 1: // $bb
        var $1=$enc_addr; //@line 942 "xmltok_impl.c"
        var $2=$1; //@line 942 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 942 "xmltok_impl.c"
        var $5=($4); //@line 942 "xmltok_impl.c"
        var $6=$2+72; //@line 942 "xmltok_impl.c"
        var $7=$6+$5; //@line 942 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 942 "xmltok_impl.c"
        var $9=($8); //@line 942 "xmltok_impl.c"
        $t=$9; //@line 942 "xmltok_impl.c"
        var $10=$t; //@line 943 "xmltok_impl.c"
        if ($10 == 0) {
          __label__ = 17; break;
        }
        else if ($10 == 1) {
          __label__ = 17; break;
        }
        else if ($10 == 5) {
          __label__ = 2; break;
        }
        else if ($10 == 6) {
          __label__ = 7; break;
        }
        else if ($10 == 7) {
          __label__ = 12; break;
        }
        else if ($10 == 8) {
          __label__ = 17; break;
        }
        else if ($10 == 12) {
          __label__ = 18; break;
        }
        else if ($10 == 13) {
          __label__ = 18; break;
        }
        else {
        __label__ = 24; break;
        }
        
      case 2: // $bb1
        var $11=$end_addr; //@line 944 "xmltok_impl.c"
        var $12=($11); //@line 944 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $14=($13); //@line 944 "xmltok_impl.c"
        var $15=($12) - ($14); //@line 944 "xmltok_impl.c"
        var $16=($15) <= 1; //@line 944 "xmltok_impl.c"
        if ($16) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 944 "xmltok_impl.c"
      case 3: // $bb2
        $0=-2; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 4: // $bb3
        var $17=$enc_addr; //@line 944 "xmltok_impl.c"
        var $18=$17; //@line 944 "xmltok_impl.c"
        var $19=$18+352; //@line 944 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 944 "xmltok_impl.c"
        var $21=$enc_addr; //@line 944 "xmltok_impl.c"
        var $22=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $23=FUNCTION_TABLE[$20]($21, $22); //@line 944 "xmltok_impl.c"
        var $24=($23)!=0; //@line 944 "xmltok_impl.c"
        if ($24) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 944 "xmltok_impl.c"
      case 5: // $bb4
        var $25=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$25]=$26; //@line 944 "xmltok_impl.c"
        $0=0; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 6: // $bb5
        var $27=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $28=$27+2; //@line 944 "xmltok_impl.c"
        $ptr_addr=$28; //@line 944 "xmltok_impl.c"
        __label__ = 25; break; //@line 944 "xmltok_impl.c"
      case 7: // $bb6
        var $29=$end_addr; //@line 944 "xmltok_impl.c"
        var $30=($29); //@line 944 "xmltok_impl.c"
        var $31=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $32=($31); //@line 944 "xmltok_impl.c"
        var $33=($30) - ($32); //@line 944 "xmltok_impl.c"
        var $34=($33) <= 2; //@line 944 "xmltok_impl.c"
        if ($34) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 944 "xmltok_impl.c"
      case 8: // $bb7
        $0=-2; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 9: // $bb8
        var $35=$enc_addr; //@line 944 "xmltok_impl.c"
        var $36=$35; //@line 944 "xmltok_impl.c"
        var $37=$36+356; //@line 944 "xmltok_impl.c"
        var $38=HEAP[$37]; //@line 944 "xmltok_impl.c"
        var $39=$enc_addr; //@line 944 "xmltok_impl.c"
        var $40=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $41=FUNCTION_TABLE[$38]($39, $40); //@line 944 "xmltok_impl.c"
        var $42=($41)!=0; //@line 944 "xmltok_impl.c"
        if ($42) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 944 "xmltok_impl.c"
      case 10: // $bb9
        var $43=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $44=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$43]=$44; //@line 944 "xmltok_impl.c"
        $0=0; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 11: // $bb10
        var $45=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $46=$45+3; //@line 944 "xmltok_impl.c"
        $ptr_addr=$46; //@line 944 "xmltok_impl.c"
        __label__ = 25; break; //@line 944 "xmltok_impl.c"
      case 12: // $bb11
        var $47=$end_addr; //@line 944 "xmltok_impl.c"
        var $48=($47); //@line 944 "xmltok_impl.c"
        var $49=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $50=($49); //@line 944 "xmltok_impl.c"
        var $51=($48) - ($50); //@line 944 "xmltok_impl.c"
        var $52=($51) <= 3; //@line 944 "xmltok_impl.c"
        if ($52) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 944 "xmltok_impl.c"
      case 13: // $bb12
        $0=-2; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 14: // $bb13
        var $53=$enc_addr; //@line 944 "xmltok_impl.c"
        var $54=$53; //@line 944 "xmltok_impl.c"
        var $55=$54+360; //@line 944 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 944 "xmltok_impl.c"
        var $57=$enc_addr; //@line 944 "xmltok_impl.c"
        var $58=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $59=FUNCTION_TABLE[$56]($57, $58); //@line 944 "xmltok_impl.c"
        var $60=($59)!=0; //@line 944 "xmltok_impl.c"
        if ($60) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 944 "xmltok_impl.c"
      case 15: // $bb14
        var $61=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $62=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$61]=$62; //@line 944 "xmltok_impl.c"
        $0=0; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 16: // $bb15
        var $63=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $64=$63+4; //@line 944 "xmltok_impl.c"
        $ptr_addr=$64; //@line 944 "xmltok_impl.c"
        __label__ = 25; break; //@line 944 "xmltok_impl.c"
      case 17: // $bb16
        var $65=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $66=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$65]=$66; //@line 944 "xmltok_impl.c"
        $0=0; //@line 944 "xmltok_impl.c"
        __label__ = 27; break; //@line 944 "xmltok_impl.c"
      case 18: // $bb17
        var $67=$ptr_addr; //@line 947 "xmltok_impl.c"
        var $68=$67+1; //@line 947 "xmltok_impl.c"
        $ptr_addr=$68; //@line 947 "xmltok_impl.c"
        var $69=$t; //@line 948 "xmltok_impl.c"
        var $70=$open_addr; //@line 948 "xmltok_impl.c"
        var $71=($69)!=($70); //@line 948 "xmltok_impl.c"
        if ($71) { __label__ = 25; break; } else { __label__ = 19; break; } //@line 948 "xmltok_impl.c"
      case 19: // $bb18
        var $72=$ptr_addr; //@line 950 "xmltok_impl.c"
        var $73=$end_addr; //@line 950 "xmltok_impl.c"
        var $74=($72)==($73); //@line 950 "xmltok_impl.c"
        if ($74) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 950 "xmltok_impl.c"
      case 20: // $bb19
        $0=-27; //@line 951 "xmltok_impl.c"
        __label__ = 27; break; //@line 951 "xmltok_impl.c"
      case 21: // $bb20
        var $75=$nextTokPtr_addr; //@line 952 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 952 "xmltok_impl.c"
        HEAP[$75]=$76; //@line 952 "xmltok_impl.c"
        var $77=$enc_addr; //@line 953 "xmltok_impl.c"
        var $78=$77; //@line 953 "xmltok_impl.c"
        var $79=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $80=HEAP[$79]; //@line 953 "xmltok_impl.c"
        var $81=($80); //@line 953 "xmltok_impl.c"
        var $82=$78+72; //@line 953 "xmltok_impl.c"
        var $83=$82+$81; //@line 953 "xmltok_impl.c"
        var $84=HEAP[$83]; //@line 953 "xmltok_impl.c"
        var $85=($84); //@line 953 "xmltok_impl.c"
        if ($85 == 9) {
          __label__ = 22; break;
        }
        else if ($85 == 10) {
          __label__ = 22; break;
        }
        else if ($85 == 11) {
          __label__ = 22; break;
        }
        else if ($85 == 20) {
          __label__ = 22; break;
        }
        else if ($85 == 21) {
          __label__ = 22; break;
        }
        else if ($85 == 30) {
          __label__ = 22; break;
        }
        else {
        __label__ = 23; break;
        }
        
      case 22: // $bb21
        $0=27; //@line 956 "xmltok_impl.c"
        __label__ = 27; break; //@line 956 "xmltok_impl.c"
      case 23: // $bb22
        $0=0; //@line 958 "xmltok_impl.c"
        __label__ = 27; break; //@line 958 "xmltok_impl.c"
      case 24: // $bb23
        var $86=$ptr_addr; //@line 961 "xmltok_impl.c"
        var $87=$86+1; //@line 961 "xmltok_impl.c"
        $ptr_addr=$87; //@line 961 "xmltok_impl.c"
        __label__ = 25; break; //@line 961 "xmltok_impl.c"
      case 25: // $bb24
        var $88=$ptr_addr; //@line 941 "xmltok_impl.c"
        var $89=$end_addr; //@line 941 "xmltok_impl.c"
        var $90=($88)!=($89); //@line 941 "xmltok_impl.c"
        if ($90) { __label__ = 1; break; } else { __label__ = 26; break; } //@line 941 "xmltok_impl.c"
      case 26: // $bb25
        $0=-1; //@line 965 "xmltok_impl.c"
        __label__ = 27; break; //@line 965 "xmltok_impl.c"
      case 27: // $bb26
        var $91=$0; //@line 944 "xmltok_impl.c"
        $retval=$91; //@line 944 "xmltok_impl.c"
        var $retval27=$retval; //@line 944 "xmltok_impl.c"
        ;
        return $retval27; //@line 944 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_prologTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr_i1;
        var $ptr_addr_i2;
        var $end_addr_i3;
        var $nextTokPtr_addr_i4;
        var $retval_i5;
        var $0;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $2;
        var $tok;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 973 "xmltok_impl.c"
        var $4=$end_addr; //@line 973 "xmltok_impl.c"
        var $5=($3)==($4); //@line 973 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 973 "xmltok_impl.c"
      case 1: // $bb
        $2=-4; //@line 974 "xmltok_impl.c"
        __label__ = 157; break; //@line 974 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$enc_addr; //@line 984 "xmltok_impl.c"
        var $7=$6; //@line 984 "xmltok_impl.c"
        var $8=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 984 "xmltok_impl.c"
        var $10=($9); //@line 984 "xmltok_impl.c"
        var $11=$7+72; //@line 984 "xmltok_impl.c"
        var $12=$11+$10; //@line 984 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 984 "xmltok_impl.c"
        var $14=($13); //@line 984 "xmltok_impl.c"
        if ($14 == 2) {
          __label__ = 5; break;
        }
        else if ($14 == 4) {
          __label__ = 39; break;
        }
        else if ($14 == 5) {
          __label__ = 102; break;
        }
        else if ($14 == 6) {
          __label__ = 109; break;
        }
        else if ($14 == 7) {
          __label__ = 116; break;
        }
        else if ($14 == 9) {
          __label__ = 29; break;
        }
        else if ($14 == 10) {
          __label__ = 31; break;
        }
        else if ($14 == 11) {
          __label__ = 57; break;
        }
        else if ($14 == 12) {
          __label__ = 3; break;
        }
        else if ($14 == 13) {
          __label__ = 4; break;
        }
        else if ($14 == 19) {
          __label__ = 58; break;
        }
        else if ($14 == 20) {
          __label__ = 38; break;
        }
        else if ($14 == 21) {
          __label__ = 31; break;
        }
        else if ($14 == 22) {
          __label__ = 123; break;
        }
        else if ($14 == 24) {
          __label__ = 123; break;
        }
        else if ($14 == 25) {
          __label__ = 124; break;
        }
        else if ($14 == 26) {
          __label__ = 124; break;
        }
        else if ($14 == 27) {
          __label__ = 124; break;
        }
        else if ($14 == 30) {
          __label__ = 36; break;
        }
        else if ($14 == 31) {
          __label__ = 47; break;
        }
        else if ($14 == 32) {
          __label__ = 48; break;
        }
        else if ($14 == 35) {
          __label__ = 37; break;
        }
        else if ($14 == 36) {
          __label__ = 56; break;
        }
        else {
        __label__ = 125; break;
        }
        
      case 3: // $bb2
        var $15=$ptr_addr; //@line 986 "xmltok_impl.c"
        var $16=$15+1; //@line 986 "xmltok_impl.c"
        var $17=$enc_addr; //@line 986 "xmltok_impl.c"
        var $18=$end_addr; //@line 986 "xmltok_impl.c"
        var $19=$nextTokPtr_addr; //@line 986 "xmltok_impl.c"
        var $20=_normal_scanLit(12, $17, $16, $18, $19); //@line 986 "xmltok_impl.c"
        $2=$20; //@line 986 "xmltok_impl.c"
        __label__ = 157; break; //@line 986 "xmltok_impl.c"
      case 4: // $bb3
        var $21=$ptr_addr; //@line 988 "xmltok_impl.c"
        var $22=$21+1; //@line 988 "xmltok_impl.c"
        var $23=$enc_addr; //@line 988 "xmltok_impl.c"
        var $24=$end_addr; //@line 988 "xmltok_impl.c"
        var $25=$nextTokPtr_addr; //@line 988 "xmltok_impl.c"
        var $26=_normal_scanLit(13, $23, $22, $24, $25); //@line 988 "xmltok_impl.c"
        $2=$26; //@line 988 "xmltok_impl.c"
        __label__ = 157; break; //@line 988 "xmltok_impl.c"
      case 5: // $bb4
        var $27=$ptr_addr; //@line 991 "xmltok_impl.c"
        var $28=$27+1; //@line 991 "xmltok_impl.c"
        $ptr_addr=$28; //@line 991 "xmltok_impl.c"
        var $29=$ptr_addr; //@line 992 "xmltok_impl.c"
        var $30=$end_addr; //@line 992 "xmltok_impl.c"
        var $31=($29)==($30); //@line 992 "xmltok_impl.c"
        if ($31) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 992 "xmltok_impl.c"
      case 6: // $bb5
        $2=-1; //@line 993 "xmltok_impl.c"
        __label__ = 157; break; //@line 993 "xmltok_impl.c"
      case 7: // $bb6
        var $32=$enc_addr; //@line 994 "xmltok_impl.c"
        var $33=$32; //@line 994 "xmltok_impl.c"
        var $34=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $35=HEAP[$34]; //@line 994 "xmltok_impl.c"
        var $36=($35); //@line 994 "xmltok_impl.c"
        var $37=$33+72; //@line 994 "xmltok_impl.c"
        var $38=$37+$36; //@line 994 "xmltok_impl.c"
        var $39=HEAP[$38]; //@line 994 "xmltok_impl.c"
        var $40=($39); //@line 994 "xmltok_impl.c"
        if ($40 == 5) {
          __label__ = 27; break;
        }
        else if ($40 == 6) {
          __label__ = 27; break;
        }
        else if ($40 == 7) {
          __label__ = 27; break;
        }
        else if ($40 == 15) {
          __label__ = 26; break;
        }
        else if ($40 == 16) {
          __label__ = 8; break;
        }
        else if ($40 == 22) {
          __label__ = 27; break;
        }
        else if ($40 == 24) {
          __label__ = 27; break;
        }
        else if ($40 == 29) {
          __label__ = 27; break;
        }
        else {
        __label__ = 28; break;
        }
        
      case 8: // $bb7
        var $41=$ptr_addr; //@line 996 "xmltok_impl.c"
        var $42=$41+1; //@line 996 "xmltok_impl.c"
        var $43=$enc_addr; //@line 996 "xmltok_impl.c"
        var $44=$end_addr; //@line 996 "xmltok_impl.c"
        var $45=$nextTokPtr_addr; //@line 996 "xmltok_impl.c"
        $enc_addr_i=$43;
        $ptr_addr_i=$42;
        $end_addr_i=$44;
        $nextTokPtr_addr_i=$45;
        var $46=$ptr_addr_i; //@line 131 "xmltok_impl.c"
        var $47=$end_addr_i; //@line 131 "xmltok_impl.c"
        var $48=($46)==($47); //@line 131 "xmltok_impl.c"
        if ($48) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 131 "xmltok_impl.c"
      case 9: // $bb_i
        $1=-1; //@line 132 "xmltok_impl.c"
        __label__ = 25; break; //@line 132 "xmltok_impl.c"
      case 10: // $bb1_i
        var $49=$enc_addr_i; //@line 133 "xmltok_impl.c"
        var $50=$49; //@line 133 "xmltok_impl.c"
        var $51=$ptr_addr_i; //@line 133 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 133 "xmltok_impl.c"
        var $53=($52); //@line 133 "xmltok_impl.c"
        var $54=$50+72; //@line 133 "xmltok_impl.c"
        var $55=$54+$53; //@line 133 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 133 "xmltok_impl.c"
        var $57=($56); //@line 133 "xmltok_impl.c"
        if ($57 == 20) {
          __label__ = 12; break;
        }
        else if ($57 == 22) {
          __label__ = 13; break;
        }
        else if ($57 == 24) {
          __label__ = 13; break;
        }
        else if ($57 == 27) {
          __label__ = 11; break;
        }
        else {
        __label__ = 14; break;
        }
        
      case 11: // $bb2_i
        var $58=$ptr_addr_i; //@line 135 "xmltok_impl.c"
        var $59=$58+1; //@line 135 "xmltok_impl.c"
        var $60=$enc_addr_i; //@line 135 "xmltok_impl.c"
        var $61=$end_addr_i; //@line 135 "xmltok_impl.c"
        var $62=$nextTokPtr_addr_i; //@line 135 "xmltok_impl.c"
        var $63=_normal_scanComment($60, $59, $61, $62); //@line 135 "xmltok_impl.c"
        $1=$63; //@line 135 "xmltok_impl.c"
        __label__ = 25; break; //@line 135 "xmltok_impl.c"
      case 12: // $bb3_i
        var $64=$ptr_addr_i; //@line 137 "xmltok_impl.c"
        var $65=$64+1; //@line 137 "xmltok_impl.c"
        var $66=$nextTokPtr_addr_i; //@line 137 "xmltok_impl.c"
        HEAP[$66]=$65; //@line 137 "xmltok_impl.c"
        $1=33; //@line 138 "xmltok_impl.c"
        __label__ = 25; break; //@line 138 "xmltok_impl.c"
      case 13: // $bb4_i
        var $67=$ptr_addr_i; //@line 141 "xmltok_impl.c"
        var $68=$67+1; //@line 141 "xmltok_impl.c"
        $ptr_addr_i=$68; //@line 141 "xmltok_impl.c"
        __label__ = 23; break; //@line 141 "xmltok_impl.c"
      case 14: // $bb5_i
        var $69=$nextTokPtr_addr_i; //@line 144 "xmltok_impl.c"
        var $70=$ptr_addr_i; //@line 144 "xmltok_impl.c"
        HEAP[$69]=$70; //@line 144 "xmltok_impl.c"
        $1=0; //@line 145 "xmltok_impl.c"
        __label__ = 25; break; //@line 145 "xmltok_impl.c"
      case 15: // $bb6_i
        var $71=$enc_addr_i; //@line 148 "xmltok_impl.c"
        var $72=$71; //@line 148 "xmltok_impl.c"
        var $73=$ptr_addr_i; //@line 148 "xmltok_impl.c"
        var $74=HEAP[$73]; //@line 148 "xmltok_impl.c"
        var $75=($74); //@line 148 "xmltok_impl.c"
        var $76=$72+72; //@line 148 "xmltok_impl.c"
        var $77=$76+$75; //@line 148 "xmltok_impl.c"
        var $78=HEAP[$77]; //@line 148 "xmltok_impl.c"
        var $79=($78); //@line 148 "xmltok_impl.c"
        if ($79 == 9) {
          __label__ = 20; break;
        }
        else if ($79 == 10) {
          __label__ = 20; break;
        }
        else if ($79 == 21) {
          __label__ = 20; break;
        }
        else if ($79 == 22) {
          __label__ = 21; break;
        }
        else if ($79 == 24) {
          __label__ = 21; break;
        }
        else if ($79 == 30) {
          __label__ = 16; break;
        }
        else {
        __label__ = 22; break;
        }
        
      case 16: // $bb7_i
        var $80=$ptr_addr_i; //@line 150 "xmltok_impl.c"
        var $81=$80+1; //@line 150 "xmltok_impl.c"
        var $82=$end_addr_i; //@line 150 "xmltok_impl.c"
        var $83=($81)==($82); //@line 150 "xmltok_impl.c"
        if ($83) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 150 "xmltok_impl.c"
      case 17: // $bb8_i
        $1=-1; //@line 151 "xmltok_impl.c"
        __label__ = 25; break; //@line 151 "xmltok_impl.c"
      case 18: // $bb9_i
        var $84=$enc_addr_i; //@line 153 "xmltok_impl.c"
        var $85=$84; //@line 153 "xmltok_impl.c"
        var $86=$ptr_addr_i; //@line 153 "xmltok_impl.c"
        var $87=$86+1; //@line 153 "xmltok_impl.c"
        var $88=HEAP[$87]; //@line 153 "xmltok_impl.c"
        var $89=($88); //@line 153 "xmltok_impl.c"
        var $90=$85+72; //@line 153 "xmltok_impl.c"
        var $91=$90+$89; //@line 153 "xmltok_impl.c"
        var $92=HEAP[$91]; //@line 153 "xmltok_impl.c"
        var $93=($92); //@line 153 "xmltok_impl.c"
        if ($93 == 9) {
          __label__ = 19; break;
        }
        else if ($93 == 10) {
          __label__ = 19; break;
        }
        else if ($93 == 21) {
          __label__ = 19; break;
        }
        else if ($93 == 30) {
          __label__ = 19; break;
        }
        else {
        __label__ = 20; break;
        }
        
      case 19: // $bb10_i
        var $94=$nextTokPtr_addr_i; //@line 155 "xmltok_impl.c"
        var $95=$ptr_addr_i; //@line 155 "xmltok_impl.c"
        HEAP[$94]=$95; //@line 155 "xmltok_impl.c"
        $1=0; //@line 156 "xmltok_impl.c"
        __label__ = 25; break; //@line 156 "xmltok_impl.c"
      case 20: // $bb11_i
        var $96=$nextTokPtr_addr_i; //@line 160 "xmltok_impl.c"
        var $97=$ptr_addr_i; //@line 160 "xmltok_impl.c"
        HEAP[$96]=$97; //@line 160 "xmltok_impl.c"
        $1=16; //@line 161 "xmltok_impl.c"
        __label__ = 25; break; //@line 161 "xmltok_impl.c"
      case 21: // $bb12_i
        var $98=$ptr_addr_i; //@line 164 "xmltok_impl.c"
        var $99=$98+1; //@line 164 "xmltok_impl.c"
        $ptr_addr_i=$99; //@line 164 "xmltok_impl.c"
        __label__ = 23; break; //@line 164 "xmltok_impl.c"
      case 22: // $bb13_i
        var $100=$nextTokPtr_addr_i; //@line 167 "xmltok_impl.c"
        var $101=$ptr_addr_i; //@line 167 "xmltok_impl.c"
        HEAP[$100]=$101; //@line 167 "xmltok_impl.c"
        $1=0; //@line 168 "xmltok_impl.c"
        __label__ = 25; break; //@line 168 "xmltok_impl.c"
      case 23: // $bb14_i
        var $102=$ptr_addr_i; //@line 147 "xmltok_impl.c"
        var $103=$end_addr_i; //@line 147 "xmltok_impl.c"
        var $104=($102)!=($103); //@line 147 "xmltok_impl.c"
        if ($104) { __label__ = 15; break; } else { __label__ = 24; break; } //@line 147 "xmltok_impl.c"
      case 24: // $bb15_i
        $1=-1; //@line 171 "xmltok_impl.c"
        __label__ = 25; break; //@line 171 "xmltok_impl.c"
      case 25: // $normal_scanDecl_exit
        var $105=$1; //@line 132 "xmltok_impl.c"
        $retval_i=$105; //@line 132 "xmltok_impl.c"
        var $retval17_i=$retval_i; //@line 132 "xmltok_impl.c"
        $2=$retval17_i; //@line 996 "xmltok_impl.c"
        __label__ = 157; break; //@line 996 "xmltok_impl.c"
      case 26: // $bb8
        var $106=$ptr_addr; //@line 998 "xmltok_impl.c"
        var $107=$106+1; //@line 998 "xmltok_impl.c"
        var $108=$enc_addr; //@line 998 "xmltok_impl.c"
        var $109=$end_addr; //@line 998 "xmltok_impl.c"
        var $110=$nextTokPtr_addr; //@line 998 "xmltok_impl.c"
        var $111=_normal_scanPi($108, $107, $109, $110); //@line 998 "xmltok_impl.c"
        $2=$111; //@line 998 "xmltok_impl.c"
        __label__ = 157; break; //@line 998 "xmltok_impl.c"
      case 27: // $bb9
        var $112=$ptr_addr; //@line 1005 "xmltok_impl.c"
        var $113=$112+-1; //@line 1005 "xmltok_impl.c"
        var $114=$nextTokPtr_addr; //@line 1005 "xmltok_impl.c"
        HEAP[$114]=$113; //@line 1005 "xmltok_impl.c"
        $2=29; //@line 1006 "xmltok_impl.c"
        __label__ = 157; break; //@line 1006 "xmltok_impl.c"
      case 28: // $bb10
        var $115=$nextTokPtr_addr; //@line 1008 "xmltok_impl.c"
        var $116=$ptr_addr; //@line 1008 "xmltok_impl.c"
        HEAP[$115]=$116; //@line 1008 "xmltok_impl.c"
        $2=0; //@line 1009 "xmltok_impl.c"
        __label__ = 157; break; //@line 1009 "xmltok_impl.c"
      case 29: // $bb11
        var $117=$ptr_addr; //@line 1012 "xmltok_impl.c"
        var $118=$117+1; //@line 1012 "xmltok_impl.c"
        var $119=$end_addr; //@line 1012 "xmltok_impl.c"
        var $120=($118)==($119); //@line 1012 "xmltok_impl.c"
        if ($120) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1012 "xmltok_impl.c"
      case 30: // $bb12
        var $121=$nextTokPtr_addr; //@line 1013 "xmltok_impl.c"
        var $122=$end_addr; //@line 1013 "xmltok_impl.c"
        HEAP[$121]=$122; //@line 1013 "xmltok_impl.c"
        $2=-15; //@line 1015 "xmltok_impl.c"
        __label__ = 157; break; //@line 1015 "xmltok_impl.c"
      case 31: // $bb13
        var $123=$ptr_addr; //@line 1020 "xmltok_impl.c"
        var $124=$123+1; //@line 1020 "xmltok_impl.c"
        $ptr_addr=$124; //@line 1020 "xmltok_impl.c"
        var $125=$ptr_addr; //@line 1021 "xmltok_impl.c"
        var $126=$end_addr; //@line 1021 "xmltok_impl.c"
        var $127=($125)==($126); //@line 1021 "xmltok_impl.c"
        if ($127) { __label__ = 35; break; } else { __label__ = 32; break; } //@line 1021 "xmltok_impl.c"
      case 32: // $bb14
        var $128=$enc_addr; //@line 1023 "xmltok_impl.c"
        var $129=$128; //@line 1023 "xmltok_impl.c"
        var $130=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $131=HEAP[$130]; //@line 1023 "xmltok_impl.c"
        var $132=($131); //@line 1023 "xmltok_impl.c"
        var $133=$129+72; //@line 1023 "xmltok_impl.c"
        var $134=$133+$132; //@line 1023 "xmltok_impl.c"
        var $135=HEAP[$134]; //@line 1023 "xmltok_impl.c"
        var $136=($135); //@line 1023 "xmltok_impl.c"
        if ($136 == 9) {
          __label__ = 33; break;
        }
        else if ($136 == 10) {
          __label__ = 31; break;
        }
        else if ($136 == 21) {
          __label__ = 31; break;
        }
        else {
        __label__ = 34; break;
        }
        
      case 33: // $bb16
        var $137=$ptr_addr; //@line 1028 "xmltok_impl.c"
        var $138=$137+1; //@line 1028 "xmltok_impl.c"
        var $139=$end_addr; //@line 1028 "xmltok_impl.c"
        var $140=($138)!=($139); //@line 1028 "xmltok_impl.c"
        if ($140) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 1028 "xmltok_impl.c"
      case 34: // $bb17
        var $141=$nextTokPtr_addr; //@line 1032 "xmltok_impl.c"
        var $142=$ptr_addr; //@line 1032 "xmltok_impl.c"
        HEAP[$141]=$142; //@line 1032 "xmltok_impl.c"
        $2=15; //@line 1033 "xmltok_impl.c"
        __label__ = 157; break; //@line 1033 "xmltok_impl.c"
      case 35: // $bb19
        var $143=$nextTokPtr_addr; //@line 1036 "xmltok_impl.c"
        var $144=$ptr_addr; //@line 1036 "xmltok_impl.c"
        HEAP[$143]=$144; //@line 1036 "xmltok_impl.c"
        $2=15; //@line 1037 "xmltok_impl.c"
        __label__ = 157; break; //@line 1037 "xmltok_impl.c"
      case 36: // $bb20
        var $145=$ptr_addr; //@line 1039 "xmltok_impl.c"
        var $146=$145+1; //@line 1039 "xmltok_impl.c"
        var $147=$enc_addr; //@line 1039 "xmltok_impl.c"
        var $148=$end_addr; //@line 1039 "xmltok_impl.c"
        var $149=$nextTokPtr_addr; //@line 1039 "xmltok_impl.c"
        var $150=_normal_scanPercent($147, $146, $148, $149); //@line 1039 "xmltok_impl.c"
        $2=$150; //@line 1039 "xmltok_impl.c"
        __label__ = 157; break; //@line 1039 "xmltok_impl.c"
      case 37: // $bb21
        var $151=$ptr_addr; //@line 1041 "xmltok_impl.c"
        var $152=$151+1; //@line 1041 "xmltok_impl.c"
        var $153=$nextTokPtr_addr; //@line 1041 "xmltok_impl.c"
        HEAP[$153]=$152; //@line 1041 "xmltok_impl.c"
        $2=38; //@line 1042 "xmltok_impl.c"
        __label__ = 157; break; //@line 1042 "xmltok_impl.c"
      case 38: // $bb22
        var $154=$ptr_addr; //@line 1044 "xmltok_impl.c"
        var $155=$154+1; //@line 1044 "xmltok_impl.c"
        var $156=$nextTokPtr_addr; //@line 1044 "xmltok_impl.c"
        HEAP[$156]=$155; //@line 1044 "xmltok_impl.c"
        $2=25; //@line 1045 "xmltok_impl.c"
        __label__ = 157; break; //@line 1045 "xmltok_impl.c"
      case 39: // $bb23
        var $157=$ptr_addr; //@line 1047 "xmltok_impl.c"
        var $158=$157+1; //@line 1047 "xmltok_impl.c"
        $ptr_addr=$158; //@line 1047 "xmltok_impl.c"
        var $159=$ptr_addr; //@line 1048 "xmltok_impl.c"
        var $160=$end_addr; //@line 1048 "xmltok_impl.c"
        var $161=($159)==($160); //@line 1048 "xmltok_impl.c"
        if ($161) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1048 "xmltok_impl.c"
      case 40: // $bb24
        $2=-26; //@line 1049 "xmltok_impl.c"
        __label__ = 157; break; //@line 1049 "xmltok_impl.c"
      case 41: // $bb25
        var $162=$ptr_addr; //@line 1050 "xmltok_impl.c"
        var $163=HEAP[$162]; //@line 1050 "xmltok_impl.c"
        var $164=($163)==93; //@line 1050 "xmltok_impl.c"
        if ($164) { __label__ = 42; break; } else { __label__ = 46; break; } //@line 1050 "xmltok_impl.c"
      case 42: // $bb26
        var $165=$ptr_addr; //@line 1051 "xmltok_impl.c"
        var $166=$165+1; //@line 1051 "xmltok_impl.c"
        var $167=$end_addr; //@line 1051 "xmltok_impl.c"
        var $168=($166)==($167); //@line 1051 "xmltok_impl.c"
        if ($168) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 1051 "xmltok_impl.c"
      case 43: // $bb27
        $2=-1; //@line 1052 "xmltok_impl.c"
        __label__ = 157; break; //@line 1052 "xmltok_impl.c"
      case 44: // $bb28
        var $169=$ptr_addr; //@line 1053 "xmltok_impl.c"
        var $170=$169+1; //@line 1053 "xmltok_impl.c"
        var $171=HEAP[$170]; //@line 1053 "xmltok_impl.c"
        var $172=($171)==62; //@line 1053 "xmltok_impl.c"
        if ($172) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 1053 "xmltok_impl.c"
      case 45: // $bb29
        var $173=$ptr_addr; //@line 1054 "xmltok_impl.c"
        var $174=$173+2; //@line 1054 "xmltok_impl.c"
        var $175=$nextTokPtr_addr; //@line 1054 "xmltok_impl.c"
        HEAP[$175]=$174; //@line 1054 "xmltok_impl.c"
        $2=34; //@line 1055 "xmltok_impl.c"
        __label__ = 157; break; //@line 1055 "xmltok_impl.c"
      case 46: // $bb30
        var $176=$nextTokPtr_addr; //@line 1058 "xmltok_impl.c"
        var $177=$ptr_addr; //@line 1058 "xmltok_impl.c"
        HEAP[$176]=$177; //@line 1058 "xmltok_impl.c"
        $2=26; //@line 1059 "xmltok_impl.c"
        __label__ = 157; break; //@line 1059 "xmltok_impl.c"
      case 47: // $bb31
        var $178=$ptr_addr; //@line 1061 "xmltok_impl.c"
        var $179=$178+1; //@line 1061 "xmltok_impl.c"
        var $180=$nextTokPtr_addr; //@line 1061 "xmltok_impl.c"
        HEAP[$180]=$179; //@line 1061 "xmltok_impl.c"
        $2=23; //@line 1062 "xmltok_impl.c"
        __label__ = 157; break; //@line 1062 "xmltok_impl.c"
      case 48: // $bb32
        var $181=$ptr_addr; //@line 1064 "xmltok_impl.c"
        var $182=$181+1; //@line 1064 "xmltok_impl.c"
        $ptr_addr=$182; //@line 1064 "xmltok_impl.c"
        var $183=$ptr_addr; //@line 1065 "xmltok_impl.c"
        var $184=$end_addr; //@line 1065 "xmltok_impl.c"
        var $185=($183)==($184); //@line 1065 "xmltok_impl.c"
        if ($185) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 1065 "xmltok_impl.c"
      case 49: // $bb33
        $2=-24; //@line 1066 "xmltok_impl.c"
        __label__ = 157; break; //@line 1066 "xmltok_impl.c"
      case 50: // $bb34
        var $186=$enc_addr; //@line 1067 "xmltok_impl.c"
        var $187=$186; //@line 1067 "xmltok_impl.c"
        var $188=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $189=HEAP[$188]; //@line 1067 "xmltok_impl.c"
        var $190=($189); //@line 1067 "xmltok_impl.c"
        var $191=$187+72; //@line 1067 "xmltok_impl.c"
        var $192=$191+$190; //@line 1067 "xmltok_impl.c"
        var $193=HEAP[$192]; //@line 1067 "xmltok_impl.c"
        var $194=($193); //@line 1067 "xmltok_impl.c"
        if ($194 == 9) {
          __label__ = 54; break;
        }
        else if ($194 == 10) {
          __label__ = 54; break;
        }
        else if ($194 == 11) {
          __label__ = 54; break;
        }
        else if ($194 == 15) {
          __label__ = 52; break;
        }
        else if ($194 == 21) {
          __label__ = 54; break;
        }
        else if ($194 == 32) {
          __label__ = 54; break;
        }
        else if ($194 == 33) {
          __label__ = 51; break;
        }
        else if ($194 == 34) {
          __label__ = 53; break;
        }
        else if ($194 == 35) {
          __label__ = 54; break;
        }
        else if ($194 == 36) {
          __label__ = 54; break;
        }
        else {
        __label__ = 55; break;
        }
        
      case 51: // $bb35
        var $195=$ptr_addr; //@line 1069 "xmltok_impl.c"
        var $196=$195+1; //@line 1069 "xmltok_impl.c"
        var $197=$nextTokPtr_addr; //@line 1069 "xmltok_impl.c"
        HEAP[$197]=$196; //@line 1069 "xmltok_impl.c"
        $2=36; //@line 1070 "xmltok_impl.c"
        __label__ = 157; break; //@line 1070 "xmltok_impl.c"
      case 52: // $bb36
        var $198=$ptr_addr; //@line 1072 "xmltok_impl.c"
        var $199=$198+1; //@line 1072 "xmltok_impl.c"
        var $200=$nextTokPtr_addr; //@line 1072 "xmltok_impl.c"
        HEAP[$200]=$199; //@line 1072 "xmltok_impl.c"
        $2=35; //@line 1073 "xmltok_impl.c"
        __label__ = 157; break; //@line 1073 "xmltok_impl.c"
      case 53: // $bb37
        var $201=$ptr_addr; //@line 1075 "xmltok_impl.c"
        var $202=$201+1; //@line 1075 "xmltok_impl.c"
        var $203=$nextTokPtr_addr; //@line 1075 "xmltok_impl.c"
        HEAP[$203]=$202; //@line 1075 "xmltok_impl.c"
        $2=37; //@line 1076 "xmltok_impl.c"
        __label__ = 157; break; //@line 1076 "xmltok_impl.c"
      case 54: // $bb38
        var $204=$nextTokPtr_addr; //@line 1080 "xmltok_impl.c"
        var $205=$ptr_addr; //@line 1080 "xmltok_impl.c"
        HEAP[$204]=$205; //@line 1080 "xmltok_impl.c"
        $2=24; //@line 1081 "xmltok_impl.c"
        __label__ = 157; break; //@line 1081 "xmltok_impl.c"
      case 55: // $bb39
        var $206=$nextTokPtr_addr; //@line 1083 "xmltok_impl.c"
        var $207=$ptr_addr; //@line 1083 "xmltok_impl.c"
        HEAP[$206]=$207; //@line 1083 "xmltok_impl.c"
        $2=0; //@line 1084 "xmltok_impl.c"
        __label__ = 157; break; //@line 1084 "xmltok_impl.c"
      case 56: // $bb40
        var $208=$ptr_addr; //@line 1086 "xmltok_impl.c"
        var $209=$208+1; //@line 1086 "xmltok_impl.c"
        var $210=$nextTokPtr_addr; //@line 1086 "xmltok_impl.c"
        HEAP[$210]=$209; //@line 1086 "xmltok_impl.c"
        $2=21; //@line 1087 "xmltok_impl.c"
        __label__ = 157; break; //@line 1087 "xmltok_impl.c"
      case 57: // $bb41
        var $211=$ptr_addr; //@line 1089 "xmltok_impl.c"
        var $212=$211+1; //@line 1089 "xmltok_impl.c"
        var $213=$nextTokPtr_addr; //@line 1089 "xmltok_impl.c"
        HEAP[$213]=$212; //@line 1089 "xmltok_impl.c"
        $2=17; //@line 1090 "xmltok_impl.c"
        __label__ = 157; break; //@line 1090 "xmltok_impl.c"
      case 58: // $bb42
        var $214=$ptr_addr; //@line 1092 "xmltok_impl.c"
        var $215=$214+1; //@line 1092 "xmltok_impl.c"
        var $216=$enc_addr; //@line 1092 "xmltok_impl.c"
        var $217=$end_addr; //@line 1092 "xmltok_impl.c"
        var $218=$nextTokPtr_addr; //@line 1092 "xmltok_impl.c"
        $enc_addr_i1=$216;
        $ptr_addr_i2=$215;
        $end_addr_i3=$217;
        $nextTokPtr_addr_i4=$218;
        var $219=$ptr_addr_i2; //@line 913 "xmltok_impl.c"
        var $220=$end_addr_i3; //@line 913 "xmltok_impl.c"
        var $221=($219)==($220); //@line 913 "xmltok_impl.c"
        if ($221) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 913 "xmltok_impl.c"
      case 59: // $bb_i6
        $0=-1; //@line 914 "xmltok_impl.c"
        __label__ = 101; break; //@line 914 "xmltok_impl.c"
      case 60: // $bb1_i7
        var $222=$enc_addr_i1; //@line 915 "xmltok_impl.c"
        var $223=$222; //@line 915 "xmltok_impl.c"
        var $224=$ptr_addr_i2; //@line 915 "xmltok_impl.c"
        var $225=HEAP[$224]; //@line 915 "xmltok_impl.c"
        var $226=($225); //@line 915 "xmltok_impl.c"
        var $227=$223+72; //@line 915 "xmltok_impl.c"
        var $228=$227+$226; //@line 915 "xmltok_impl.c"
        var $229=HEAP[$228]; //@line 915 "xmltok_impl.c"
        var $230=($229); //@line 915 "xmltok_impl.c"
        if ($230 == 5) {
          __label__ = 63; break;
        }
        else if ($230 == 6) {
          __label__ = 68; break;
        }
        else if ($230 == 7) {
          __label__ = 73; break;
        }
        else if ($230 == 22) {
          __label__ = 62; break;
        }
        else if ($230 == 24) {
          __label__ = 62; break;
        }
        else if ($230 == 29) {
          __label__ = 61; break;
        }
        else {
        __label__ = 78; break;
        }
        
      case 61: // $bb2_i8
        var $231=$nextTokPtr_addr_i4; //@line 916 "xmltok_impl.c"
        var $232=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        HEAP[$231]=$232; //@line 916 "xmltok_impl.c"
        $0=0; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 62: // $bb3_i9
        var $233=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $234=$233+1; //@line 916 "xmltok_impl.c"
        $ptr_addr_i2=$234; //@line 916 "xmltok_impl.c"
        __label__ = 99; break; //@line 916 "xmltok_impl.c"
      case 63: // $bb4_i10
        var $235=$end_addr_i3; //@line 916 "xmltok_impl.c"
        var $236=($235); //@line 916 "xmltok_impl.c"
        var $237=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $238=($237); //@line 916 "xmltok_impl.c"
        var $239=($236) - ($238); //@line 916 "xmltok_impl.c"
        var $240=($239) <= 1; //@line 916 "xmltok_impl.c"
        if ($240) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 916 "xmltok_impl.c"
      case 64: // $bb5_i11
        $0=-2; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 65: // $bb6_i12
        var $241=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $242=$241; //@line 916 "xmltok_impl.c"
        var $243=$242+340; //@line 916 "xmltok_impl.c"
        var $244=HEAP[$243]; //@line 916 "xmltok_impl.c"
        var $245=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $246=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $247=FUNCTION_TABLE[$244]($245, $246); //@line 916 "xmltok_impl.c"
        var $248=($247)==0; //@line 916 "xmltok_impl.c"
        if ($248) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 916 "xmltok_impl.c"
      case 66: // $bb7_i13
        var $249=$nextTokPtr_addr_i4; //@line 916 "xmltok_impl.c"
        var $250=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        HEAP[$249]=$250; //@line 916 "xmltok_impl.c"
        $0=0; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 67: // $bb8_i14
        var $251=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $252=$251+2; //@line 916 "xmltok_impl.c"
        $ptr_addr_i2=$252; //@line 916 "xmltok_impl.c"
        __label__ = 99; break; //@line 916 "xmltok_impl.c"
      case 68: // $bb9_i15
        var $253=$end_addr_i3; //@line 916 "xmltok_impl.c"
        var $254=($253); //@line 916 "xmltok_impl.c"
        var $255=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $256=($255); //@line 916 "xmltok_impl.c"
        var $257=($254) - ($256); //@line 916 "xmltok_impl.c"
        var $258=($257) <= 2; //@line 916 "xmltok_impl.c"
        if ($258) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 916 "xmltok_impl.c"
      case 69: // $bb10_i16
        $0=-2; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 70: // $bb11_i17
        var $259=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $260=$259; //@line 916 "xmltok_impl.c"
        var $261=$260+344; //@line 916 "xmltok_impl.c"
        var $262=HEAP[$261]; //@line 916 "xmltok_impl.c"
        var $263=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $264=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $265=FUNCTION_TABLE[$262]($263, $264); //@line 916 "xmltok_impl.c"
        var $266=($265)==0; //@line 916 "xmltok_impl.c"
        if ($266) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 916 "xmltok_impl.c"
      case 71: // $bb12_i18
        var $267=$nextTokPtr_addr_i4; //@line 916 "xmltok_impl.c"
        var $268=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        HEAP[$267]=$268; //@line 916 "xmltok_impl.c"
        $0=0; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 72: // $bb13_i19
        var $269=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $270=$269+3; //@line 916 "xmltok_impl.c"
        $ptr_addr_i2=$270; //@line 916 "xmltok_impl.c"
        __label__ = 99; break; //@line 916 "xmltok_impl.c"
      case 73: // $bb14_i20
        var $271=$end_addr_i3; //@line 916 "xmltok_impl.c"
        var $272=($271); //@line 916 "xmltok_impl.c"
        var $273=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $274=($273); //@line 916 "xmltok_impl.c"
        var $275=($272) - ($274); //@line 916 "xmltok_impl.c"
        var $276=($275) <= 3; //@line 916 "xmltok_impl.c"
        if ($276) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 916 "xmltok_impl.c"
      case 74: // $bb15_i21
        $0=-2; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 75: // $bb16_i
        var $277=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $278=$277; //@line 916 "xmltok_impl.c"
        var $279=$278+348; //@line 916 "xmltok_impl.c"
        var $280=HEAP[$279]; //@line 916 "xmltok_impl.c"
        var $281=$enc_addr_i1; //@line 916 "xmltok_impl.c"
        var $282=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $283=FUNCTION_TABLE[$280]($281, $282); //@line 916 "xmltok_impl.c"
        var $284=($283)==0; //@line 916 "xmltok_impl.c"
        if ($284) { __label__ = 76; break; } else { __label__ = 77; break; } //@line 916 "xmltok_impl.c"
      case 76: // $bb17_i
        var $285=$nextTokPtr_addr_i4; //@line 916 "xmltok_impl.c"
        var $286=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        HEAP[$285]=$286; //@line 916 "xmltok_impl.c"
        $0=0; //@line 916 "xmltok_impl.c"
        __label__ = 101; break; //@line 916 "xmltok_impl.c"
      case 77: // $bb18_i
        var $287=$ptr_addr_i2; //@line 916 "xmltok_impl.c"
        var $288=$287+4; //@line 916 "xmltok_impl.c"
        $ptr_addr_i2=$288; //@line 916 "xmltok_impl.c"
        __label__ = 99; break; //@line 916 "xmltok_impl.c"
      case 78: // $bb19_i
        var $289=$nextTokPtr_addr_i4; //@line 918 "xmltok_impl.c"
        var $290=$ptr_addr_i2; //@line 918 "xmltok_impl.c"
        HEAP[$289]=$290; //@line 918 "xmltok_impl.c"
        $0=0; //@line 919 "xmltok_impl.c"
        __label__ = 101; break; //@line 919 "xmltok_impl.c"
      case 79: // $bb21_i
        var $291=$enc_addr_i1; //@line 922 "xmltok_impl.c"
        var $292=$291; //@line 922 "xmltok_impl.c"
        var $293=$ptr_addr_i2; //@line 922 "xmltok_impl.c"
        var $294=HEAP[$293]; //@line 922 "xmltok_impl.c"
        var $295=($294); //@line 922 "xmltok_impl.c"
        var $296=$292+72; //@line 922 "xmltok_impl.c"
        var $297=$296+$295; //@line 922 "xmltok_impl.c"
        var $298=HEAP[$297]; //@line 922 "xmltok_impl.c"
        var $299=($298); //@line 922 "xmltok_impl.c"
        if ($299 == 5) {
          __label__ = 82; break;
        }
        else if ($299 == 6) {
          __label__ = 87; break;
        }
        else if ($299 == 7) {
          __label__ = 92; break;
        }
        else if ($299 == 9) {
          __label__ = 97; break;
        }
        else if ($299 == 10) {
          __label__ = 97; break;
        }
        else if ($299 == 11) {
          __label__ = 97; break;
        }
        else if ($299 == 21) {
          __label__ = 97; break;
        }
        else if ($299 == 22) {
          __label__ = 81; break;
        }
        else if ($299 == 24) {
          __label__ = 81; break;
        }
        else if ($299 == 25) {
          __label__ = 81; break;
        }
        else if ($299 == 26) {
          __label__ = 81; break;
        }
        else if ($299 == 27) {
          __label__ = 81; break;
        }
        else if ($299 == 29) {
          __label__ = 80; break;
        }
        else if ($299 == 30) {
          __label__ = 97; break;
        }
        else if ($299 == 32) {
          __label__ = 97; break;
        }
        else if ($299 == 36) {
          __label__ = 97; break;
        }
        else {
        __label__ = 98; break;
        }
        
      case 80: // $bb22_i
        var $300=$nextTokPtr_addr_i4; //@line 923 "xmltok_impl.c"
        var $301=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        HEAP[$300]=$301; //@line 923 "xmltok_impl.c"
        $0=0; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 81: // $bb23_i
        var $302=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $303=$302+1; //@line 923 "xmltok_impl.c"
        $ptr_addr_i2=$303; //@line 923 "xmltok_impl.c"
        __label__ = 99; break; //@line 923 "xmltok_impl.c"
      case 82: // $bb24_i
        var $304=$end_addr_i3; //@line 923 "xmltok_impl.c"
        var $305=($304); //@line 923 "xmltok_impl.c"
        var $306=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $307=($306); //@line 923 "xmltok_impl.c"
        var $308=($305) - ($307); //@line 923 "xmltok_impl.c"
        var $309=($308) <= 1; //@line 923 "xmltok_impl.c"
        if ($309) { __label__ = 83; break; } else { __label__ = 84; break; } //@line 923 "xmltok_impl.c"
      case 83: // $bb25_i
        $0=-2; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 84: // $bb26_i
        var $310=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $311=$310; //@line 923 "xmltok_impl.c"
        var $312=$311+328; //@line 923 "xmltok_impl.c"
        var $313=HEAP[$312]; //@line 923 "xmltok_impl.c"
        var $314=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $315=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $316=FUNCTION_TABLE[$313]($314, $315); //@line 923 "xmltok_impl.c"
        var $317=($316)==0; //@line 923 "xmltok_impl.c"
        if ($317) { __label__ = 85; break; } else { __label__ = 86; break; } //@line 923 "xmltok_impl.c"
      case 85: // $bb27_i
        var $318=$nextTokPtr_addr_i4; //@line 923 "xmltok_impl.c"
        var $319=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        HEAP[$318]=$319; //@line 923 "xmltok_impl.c"
        $0=0; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 86: // $bb28_i
        var $320=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $321=$320+2; //@line 923 "xmltok_impl.c"
        $ptr_addr_i2=$321; //@line 923 "xmltok_impl.c"
        __label__ = 99; break; //@line 923 "xmltok_impl.c"
      case 87: // $bb29_i
        var $322=$end_addr_i3; //@line 923 "xmltok_impl.c"
        var $323=($322); //@line 923 "xmltok_impl.c"
        var $324=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $325=($324); //@line 923 "xmltok_impl.c"
        var $326=($323) - ($325); //@line 923 "xmltok_impl.c"
        var $327=($326) <= 2; //@line 923 "xmltok_impl.c"
        if ($327) { __label__ = 88; break; } else { __label__ = 89; break; } //@line 923 "xmltok_impl.c"
      case 88: // $bb30_i
        $0=-2; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 89: // $bb31_i
        var $328=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $329=$328; //@line 923 "xmltok_impl.c"
        var $330=$329+332; //@line 923 "xmltok_impl.c"
        var $331=HEAP[$330]; //@line 923 "xmltok_impl.c"
        var $332=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $333=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $334=FUNCTION_TABLE[$331]($332, $333); //@line 923 "xmltok_impl.c"
        var $335=($334)==0; //@line 923 "xmltok_impl.c"
        if ($335) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 923 "xmltok_impl.c"
      case 90: // $bb32_i
        var $336=$nextTokPtr_addr_i4; //@line 923 "xmltok_impl.c"
        var $337=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        HEAP[$336]=$337; //@line 923 "xmltok_impl.c"
        $0=0; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 91: // $bb33_i
        var $338=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $339=$338+3; //@line 923 "xmltok_impl.c"
        $ptr_addr_i2=$339; //@line 923 "xmltok_impl.c"
        __label__ = 99; break; //@line 923 "xmltok_impl.c"
      case 92: // $bb34_i
        var $340=$end_addr_i3; //@line 923 "xmltok_impl.c"
        var $341=($340); //@line 923 "xmltok_impl.c"
        var $342=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $343=($342); //@line 923 "xmltok_impl.c"
        var $344=($341) - ($343); //@line 923 "xmltok_impl.c"
        var $345=($344) <= 3; //@line 923 "xmltok_impl.c"
        if ($345) { __label__ = 93; break; } else { __label__ = 94; break; } //@line 923 "xmltok_impl.c"
      case 93: // $bb35_i
        $0=-2; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 94: // $bb36_i
        var $346=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $347=$346; //@line 923 "xmltok_impl.c"
        var $348=$347+336; //@line 923 "xmltok_impl.c"
        var $349=HEAP[$348]; //@line 923 "xmltok_impl.c"
        var $350=$enc_addr_i1; //@line 923 "xmltok_impl.c"
        var $351=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $352=FUNCTION_TABLE[$349]($350, $351); //@line 923 "xmltok_impl.c"
        var $353=($352)==0; //@line 923 "xmltok_impl.c"
        if ($353) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 923 "xmltok_impl.c"
      case 95: // $bb37_i
        var $354=$nextTokPtr_addr_i4; //@line 923 "xmltok_impl.c"
        var $355=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        HEAP[$354]=$355; //@line 923 "xmltok_impl.c"
        $0=0; //@line 923 "xmltok_impl.c"
        __label__ = 101; break; //@line 923 "xmltok_impl.c"
      case 96: // $bb38_i
        var $356=$ptr_addr_i2; //@line 923 "xmltok_impl.c"
        var $357=$356+4; //@line 923 "xmltok_impl.c"
        $ptr_addr_i2=$357; //@line 923 "xmltok_impl.c"
        __label__ = 99; break; //@line 923 "xmltok_impl.c"
      case 97: // $bb39_i
        var $358=$nextTokPtr_addr_i4; //@line 926 "xmltok_impl.c"
        var $359=$ptr_addr_i2; //@line 926 "xmltok_impl.c"
        HEAP[$358]=$359; //@line 926 "xmltok_impl.c"
        $0=20; //@line 927 "xmltok_impl.c"
        __label__ = 101; break; //@line 927 "xmltok_impl.c"
      case 98: // $bb40_i
        var $360=$nextTokPtr_addr_i4; //@line 929 "xmltok_impl.c"
        var $361=$ptr_addr_i2; //@line 929 "xmltok_impl.c"
        HEAP[$360]=$361; //@line 929 "xmltok_impl.c"
        $0=0; //@line 930 "xmltok_impl.c"
        __label__ = 101; break; //@line 930 "xmltok_impl.c"
      case 99: // $bb41_i
        var $362=$ptr_addr_i2; //@line 921 "xmltok_impl.c"
        var $363=$end_addr_i3; //@line 921 "xmltok_impl.c"
        var $364=($362)!=($363); //@line 921 "xmltok_impl.c"
        if ($364) { __label__ = 79; break; } else { __label__ = 100; break; } //@line 921 "xmltok_impl.c"
      case 100: // $bb42_i
        $0=-20; //@line 933 "xmltok_impl.c"
        __label__ = 101; break; //@line 933 "xmltok_impl.c"
      case 101: // $normal_scanPoundName_exit
        var $365=$0; //@line 914 "xmltok_impl.c"
        $retval_i5=$365; //@line 914 "xmltok_impl.c"
        var $retval44_i=$retval_i5; //@line 914 "xmltok_impl.c"
        $2=$retval44_i; //@line 1092 "xmltok_impl.c"
        __label__ = 157; break; //@line 1092 "xmltok_impl.c"
      case 102: // $bb43
        var $366=$end_addr; //@line 1109 "xmltok_impl.c"
        var $367=($366); //@line 1109 "xmltok_impl.c"
        var $368=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $369=($368); //@line 1109 "xmltok_impl.c"
        var $370=($367) - ($369); //@line 1109 "xmltok_impl.c"
        var $371=($370) <= 1; //@line 1109 "xmltok_impl.c"
        if ($371) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 1109 "xmltok_impl.c"
      case 103: // $bb44
        $2=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 104: // $bb45
        var $372=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $373=$372; //@line 1109 "xmltok_impl.c"
        var $374=$373+340; //@line 1109 "xmltok_impl.c"
        var $375=HEAP[$374]; //@line 1109 "xmltok_impl.c"
        var $376=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $377=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $378=FUNCTION_TABLE[$375]($376, $377); //@line 1109 "xmltok_impl.c"
        var $379=($378)!=0; //@line 1109 "xmltok_impl.c"
        if ($379) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 1109 "xmltok_impl.c"
      case 105: // $bb46
        var $380=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $381=$380+2; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$381; //@line 1109 "xmltok_impl.c"
        $tok=18; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 106: // $bb47
        var $382=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $383=$382; //@line 1109 "xmltok_impl.c"
        var $384=$383+328; //@line 1109 "xmltok_impl.c"
        var $385=HEAP[$384]; //@line 1109 "xmltok_impl.c"
        var $386=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $387=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $388=FUNCTION_TABLE[$385]($386, $387); //@line 1109 "xmltok_impl.c"
        var $389=($388)!=0; //@line 1109 "xmltok_impl.c"
        if ($389) { __label__ = 107; break; } else { __label__ = 108; break; } //@line 1109 "xmltok_impl.c"
      case 107: // $bb48
        var $390=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $391=$390+2; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$391; //@line 1109 "xmltok_impl.c"
        $tok=19; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 108: // $bb49
        var $392=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $393=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$392]=$393; //@line 1109 "xmltok_impl.c"
        $2=0; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 109: // $bb50
        var $394=$end_addr; //@line 1109 "xmltok_impl.c"
        var $395=($394); //@line 1109 "xmltok_impl.c"
        var $396=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $397=($396); //@line 1109 "xmltok_impl.c"
        var $398=($395) - ($397); //@line 1109 "xmltok_impl.c"
        var $399=($398) <= 2; //@line 1109 "xmltok_impl.c"
        if ($399) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 1109 "xmltok_impl.c"
      case 110: // $bb51
        $2=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 111: // $bb52
        var $400=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $401=$400; //@line 1109 "xmltok_impl.c"
        var $402=$401+344; //@line 1109 "xmltok_impl.c"
        var $403=HEAP[$402]; //@line 1109 "xmltok_impl.c"
        var $404=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $405=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $406=FUNCTION_TABLE[$403]($404, $405); //@line 1109 "xmltok_impl.c"
        var $407=($406)!=0; //@line 1109 "xmltok_impl.c"
        if ($407) { __label__ = 112; break; } else { __label__ = 113; break; } //@line 1109 "xmltok_impl.c"
      case 112: // $bb53
        var $408=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $409=$408+3; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$409; //@line 1109 "xmltok_impl.c"
        $tok=18; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 113: // $bb54
        var $410=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $411=$410; //@line 1109 "xmltok_impl.c"
        var $412=$411+332; //@line 1109 "xmltok_impl.c"
        var $413=HEAP[$412]; //@line 1109 "xmltok_impl.c"
        var $414=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $415=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $416=FUNCTION_TABLE[$413]($414, $415); //@line 1109 "xmltok_impl.c"
        var $417=($416)!=0; //@line 1109 "xmltok_impl.c"
        if ($417) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 1109 "xmltok_impl.c"
      case 114: // $bb55
        var $418=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $419=$418+3; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$419; //@line 1109 "xmltok_impl.c"
        $tok=19; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 115: // $bb56
        var $420=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $421=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$420]=$421; //@line 1109 "xmltok_impl.c"
        $2=0; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 116: // $bb57
        var $422=$end_addr; //@line 1109 "xmltok_impl.c"
        var $423=($422); //@line 1109 "xmltok_impl.c"
        var $424=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $425=($424); //@line 1109 "xmltok_impl.c"
        var $426=($423) - ($425); //@line 1109 "xmltok_impl.c"
        var $427=($426) <= 3; //@line 1109 "xmltok_impl.c"
        if ($427) { __label__ = 117; break; } else { __label__ = 118; break; } //@line 1109 "xmltok_impl.c"
      case 117: // $bb58
        $2=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 118: // $bb59
        var $428=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $429=$428; //@line 1109 "xmltok_impl.c"
        var $430=$429+348; //@line 1109 "xmltok_impl.c"
        var $431=HEAP[$430]; //@line 1109 "xmltok_impl.c"
        var $432=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $433=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $434=FUNCTION_TABLE[$431]($432, $433); //@line 1109 "xmltok_impl.c"
        var $435=($434)!=0; //@line 1109 "xmltok_impl.c"
        if ($435) { __label__ = 119; break; } else { __label__ = 120; break; } //@line 1109 "xmltok_impl.c"
      case 119: // $bb60
        var $436=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $437=$436+4; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$437; //@line 1109 "xmltok_impl.c"
        $tok=18; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 120: // $bb61
        var $438=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $439=$438; //@line 1109 "xmltok_impl.c"
        var $440=$439+336; //@line 1109 "xmltok_impl.c"
        var $441=HEAP[$440]; //@line 1109 "xmltok_impl.c"
        var $442=$enc_addr; //@line 1109 "xmltok_impl.c"
        var $443=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $444=FUNCTION_TABLE[$441]($442, $443); //@line 1109 "xmltok_impl.c"
        var $445=($444)!=0; //@line 1109 "xmltok_impl.c"
        if ($445) { __label__ = 121; break; } else { __label__ = 122; break; } //@line 1109 "xmltok_impl.c"
      case 121: // $bb62
        var $446=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $447=$446+4; //@line 1109 "xmltok_impl.c"
        $ptr_addr=$447; //@line 1109 "xmltok_impl.c"
        $tok=19; //@line 1109 "xmltok_impl.c"
        __label__ = 155; break; //@line 1109 "xmltok_impl.c"
      case 122: // $bb63
        var $448=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $449=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$448]=$449; //@line 1109 "xmltok_impl.c"
        $2=0; //@line 1109 "xmltok_impl.c"
        __label__ = 157; break; //@line 1109 "xmltok_impl.c"
      case 123: // $bb64
        $tok=18; //@line 1113 "xmltok_impl.c"
        var $450=$ptr_addr; //@line 1114 "xmltok_impl.c"
        var $451=$450+1; //@line 1114 "xmltok_impl.c"
        $ptr_addr=$451; //@line 1114 "xmltok_impl.c"
        __label__ = 155; break; //@line 1114 "xmltok_impl.c"
      case 124: // $bb65
        $tok=19; //@line 1122 "xmltok_impl.c"
        var $452=$ptr_addr; //@line 1123 "xmltok_impl.c"
        var $453=$452+1; //@line 1123 "xmltok_impl.c"
        $ptr_addr=$453; //@line 1123 "xmltok_impl.c"
        __label__ = 155; break; //@line 1123 "xmltok_impl.c"
      case 125: // $bb66
        var $454=$nextTokPtr_addr; //@line 1138 "xmltok_impl.c"
        var $455=$ptr_addr; //@line 1138 "xmltok_impl.c"
        HEAP[$454]=$455; //@line 1138 "xmltok_impl.c"
        $2=0; //@line 1139 "xmltok_impl.c"
        __label__ = 157; break; //@line 1139 "xmltok_impl.c"
      case 126: // $bb68
        var $456=$enc_addr; //@line 1142 "xmltok_impl.c"
        var $457=$456; //@line 1142 "xmltok_impl.c"
        var $458=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $459=HEAP[$458]; //@line 1142 "xmltok_impl.c"
        var $460=($459); //@line 1142 "xmltok_impl.c"
        var $461=$457+72; //@line 1142 "xmltok_impl.c"
        var $462=$461+$460; //@line 1142 "xmltok_impl.c"
        var $463=HEAP[$462]; //@line 1142 "xmltok_impl.c"
        var $464=($463); //@line 1142 "xmltok_impl.c"
        if ($464 == 5) {
          __label__ = 129; break;
        }
        else if ($464 == 6) {
          __label__ = 134; break;
        }
        else if ($464 == 7) {
          __label__ = 139; break;
        }
        else if ($464 == 9) {
          __label__ = 144; break;
        }
        else if ($464 == 10) {
          __label__ = 144; break;
        }
        else if ($464 == 11) {
          __label__ = 144; break;
        }
        else if ($464 == 15) {
          __label__ = 151; break;
        }
        else if ($464 == 20) {
          __label__ = 144; break;
        }
        else if ($464 == 21) {
          __label__ = 144; break;
        }
        else if ($464 == 22) {
          __label__ = 128; break;
        }
        else if ($464 == 24) {
          __label__ = 128; break;
        }
        else if ($464 == 25) {
          __label__ = 128; break;
        }
        else if ($464 == 26) {
          __label__ = 128; break;
        }
        else if ($464 == 27) {
          __label__ = 128; break;
        }
        else if ($464 == 29) {
          __label__ = 127; break;
        }
        else if ($464 == 30) {
          __label__ = 144; break;
        }
        else if ($464 == 32) {
          __label__ = 144; break;
        }
        else if ($464 == 33) {
          __label__ = 148; break;
        }
        else if ($464 == 34) {
          __label__ = 145; break;
        }
        else if ($464 == 35) {
          __label__ = 144; break;
        }
        else if ($464 == 36) {
          __label__ = 144; break;
        }
        else {
        __label__ = 154; break;
        }
        
      case 127: // $bb69
        var $465=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $466=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$465]=$466; //@line 1143 "xmltok_impl.c"
        $2=0; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 128: // $bb70
        var $467=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $468=$467+1; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$468; //@line 1143 "xmltok_impl.c"
        __label__ = 155; break; //@line 1143 "xmltok_impl.c"
      case 129: // $bb71
        var $469=$end_addr; //@line 1143 "xmltok_impl.c"
        var $470=($469); //@line 1143 "xmltok_impl.c"
        var $471=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $472=($471); //@line 1143 "xmltok_impl.c"
        var $473=($470) - ($472); //@line 1143 "xmltok_impl.c"
        var $474=($473) <= 1; //@line 1143 "xmltok_impl.c"
        if ($474) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 1143 "xmltok_impl.c"
      case 130: // $bb72
        $2=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 131: // $bb73
        var $475=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $476=$475; //@line 1143 "xmltok_impl.c"
        var $477=$476+328; //@line 1143 "xmltok_impl.c"
        var $478=HEAP[$477]; //@line 1143 "xmltok_impl.c"
        var $479=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $480=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $481=FUNCTION_TABLE[$478]($479, $480); //@line 1143 "xmltok_impl.c"
        var $482=($481)==0; //@line 1143 "xmltok_impl.c"
        if ($482) { __label__ = 132; break; } else { __label__ = 133; break; } //@line 1143 "xmltok_impl.c"
      case 132: // $bb74
        var $483=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $484=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$483]=$484; //@line 1143 "xmltok_impl.c"
        $2=0; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 133: // $bb75
        var $485=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $486=$485+2; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$486; //@line 1143 "xmltok_impl.c"
        __label__ = 155; break; //@line 1143 "xmltok_impl.c"
      case 134: // $bb76
        var $487=$end_addr; //@line 1143 "xmltok_impl.c"
        var $488=($487); //@line 1143 "xmltok_impl.c"
        var $489=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $490=($489); //@line 1143 "xmltok_impl.c"
        var $491=($488) - ($490); //@line 1143 "xmltok_impl.c"
        var $492=($491) <= 2; //@line 1143 "xmltok_impl.c"
        if ($492) { __label__ = 135; break; } else { __label__ = 136; break; } //@line 1143 "xmltok_impl.c"
      case 135: // $bb77
        $2=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 136: // $bb78
        var $493=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $494=$493; //@line 1143 "xmltok_impl.c"
        var $495=$494+332; //@line 1143 "xmltok_impl.c"
        var $496=HEAP[$495]; //@line 1143 "xmltok_impl.c"
        var $497=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $498=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $499=FUNCTION_TABLE[$496]($497, $498); //@line 1143 "xmltok_impl.c"
        var $500=($499)==0; //@line 1143 "xmltok_impl.c"
        if ($500) { __label__ = 137; break; } else { __label__ = 138; break; } //@line 1143 "xmltok_impl.c"
      case 137: // $bb79
        var $501=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $502=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$501]=$502; //@line 1143 "xmltok_impl.c"
        $2=0; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 138: // $bb80
        var $503=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $504=$503+3; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$504; //@line 1143 "xmltok_impl.c"
        __label__ = 155; break; //@line 1143 "xmltok_impl.c"
      case 139: // $bb81
        var $505=$end_addr; //@line 1143 "xmltok_impl.c"
        var $506=($505); //@line 1143 "xmltok_impl.c"
        var $507=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $508=($507); //@line 1143 "xmltok_impl.c"
        var $509=($506) - ($508); //@line 1143 "xmltok_impl.c"
        var $510=($509) <= 3; //@line 1143 "xmltok_impl.c"
        if ($510) { __label__ = 140; break; } else { __label__ = 141; break; } //@line 1143 "xmltok_impl.c"
      case 140: // $bb82
        $2=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 141: // $bb83
        var $511=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $512=$511; //@line 1143 "xmltok_impl.c"
        var $513=$512+336; //@line 1143 "xmltok_impl.c"
        var $514=HEAP[$513]; //@line 1143 "xmltok_impl.c"
        var $515=$enc_addr; //@line 1143 "xmltok_impl.c"
        var $516=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $517=FUNCTION_TABLE[$514]($515, $516); //@line 1143 "xmltok_impl.c"
        var $518=($517)==0; //@line 1143 "xmltok_impl.c"
        if ($518) { __label__ = 142; break; } else { __label__ = 143; break; } //@line 1143 "xmltok_impl.c"
      case 142: // $bb84
        var $519=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $520=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$519]=$520; //@line 1143 "xmltok_impl.c"
        $2=0; //@line 1143 "xmltok_impl.c"
        __label__ = 157; break; //@line 1143 "xmltok_impl.c"
      case 143: // $bb85
        var $521=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $522=$521+4; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$522; //@line 1143 "xmltok_impl.c"
        __label__ = 155; break; //@line 1143 "xmltok_impl.c"
      case 144: // $bb86
        var $523=$nextTokPtr_addr; //@line 1147 "xmltok_impl.c"
        var $524=$ptr_addr; //@line 1147 "xmltok_impl.c"
        HEAP[$523]=$524; //@line 1147 "xmltok_impl.c"
        var $525=$tok; //@line 1148 "xmltok_impl.c"
        $2=$525; //@line 1148 "xmltok_impl.c"
        __label__ = 157; break; //@line 1148 "xmltok_impl.c"
      case 145: // $bb87
        var $526=$tok; //@line 1171 "xmltok_impl.c"
        var $527=($526)==19; //@line 1171 "xmltok_impl.c"
        if ($527) { __label__ = 146; break; } else { __label__ = 147; break; } //@line 1171 "xmltok_impl.c"
      case 146: // $bb88
        var $528=$nextTokPtr_addr; //@line 1172 "xmltok_impl.c"
        var $529=$ptr_addr; //@line 1172 "xmltok_impl.c"
        HEAP[$528]=$529; //@line 1172 "xmltok_impl.c"
        $2=0; //@line 1173 "xmltok_impl.c"
        __label__ = 157; break; //@line 1173 "xmltok_impl.c"
      case 147: // $bb89
        var $530=$ptr_addr; //@line 1175 "xmltok_impl.c"
        var $531=$530+1; //@line 1175 "xmltok_impl.c"
        var $532=$nextTokPtr_addr; //@line 1175 "xmltok_impl.c"
        HEAP[$532]=$531; //@line 1175 "xmltok_impl.c"
        $2=32; //@line 1176 "xmltok_impl.c"
        __label__ = 157; break; //@line 1176 "xmltok_impl.c"
      case 148: // $bb90
        var $533=$tok; //@line 1178 "xmltok_impl.c"
        var $534=($533)==19; //@line 1178 "xmltok_impl.c"
        if ($534) { __label__ = 149; break; } else { __label__ = 150; break; } //@line 1178 "xmltok_impl.c"
      case 149: // $bb91
        var $535=$nextTokPtr_addr; //@line 1179 "xmltok_impl.c"
        var $536=$ptr_addr; //@line 1179 "xmltok_impl.c"
        HEAP[$535]=$536; //@line 1179 "xmltok_impl.c"
        $2=0; //@line 1180 "xmltok_impl.c"
        __label__ = 157; break; //@line 1180 "xmltok_impl.c"
      case 150: // $bb92
        var $537=$ptr_addr; //@line 1182 "xmltok_impl.c"
        var $538=$537+1; //@line 1182 "xmltok_impl.c"
        var $539=$nextTokPtr_addr; //@line 1182 "xmltok_impl.c"
        HEAP[$539]=$538; //@line 1182 "xmltok_impl.c"
        $2=31; //@line 1183 "xmltok_impl.c"
        __label__ = 157; break; //@line 1183 "xmltok_impl.c"
      case 151: // $bb93
        var $540=$tok; //@line 1185 "xmltok_impl.c"
        var $541=($540)==19; //@line 1185 "xmltok_impl.c"
        if ($541) { __label__ = 152; break; } else { __label__ = 153; break; } //@line 1185 "xmltok_impl.c"
      case 152: // $bb94
        var $542=$nextTokPtr_addr; //@line 1186 "xmltok_impl.c"
        var $543=$ptr_addr; //@line 1186 "xmltok_impl.c"
        HEAP[$542]=$543; //@line 1186 "xmltok_impl.c"
        $2=0; //@line 1187 "xmltok_impl.c"
        __label__ = 157; break; //@line 1187 "xmltok_impl.c"
      case 153: // $bb95
        var $544=$ptr_addr; //@line 1189 "xmltok_impl.c"
        var $545=$544+1; //@line 1189 "xmltok_impl.c"
        var $546=$nextTokPtr_addr; //@line 1189 "xmltok_impl.c"
        HEAP[$546]=$545; //@line 1189 "xmltok_impl.c"
        $2=30; //@line 1190 "xmltok_impl.c"
        __label__ = 157; break; //@line 1190 "xmltok_impl.c"
      case 154: // $bb96
        var $547=$nextTokPtr_addr; //@line 1192 "xmltok_impl.c"
        var $548=$ptr_addr; //@line 1192 "xmltok_impl.c"
        HEAP[$547]=$548; //@line 1192 "xmltok_impl.c"
        $2=0; //@line 1193 "xmltok_impl.c"
        __label__ = 157; break; //@line 1193 "xmltok_impl.c"
      case 155: // $bb97
        var $549=$ptr_addr; //@line 1141 "xmltok_impl.c"
        var $550=$end_addr; //@line 1141 "xmltok_impl.c"
        var $551=($549)!=($550); //@line 1141 "xmltok_impl.c"
        if ($551) { __label__ = 126; break; } else { __label__ = 156; break; } //@line 1141 "xmltok_impl.c"
      case 156: // $bb98
        var $552=$tok; //@line 1196 "xmltok_impl.c"
        var $553=0 - ($552); //@line 1196 "xmltok_impl.c"
        $2=$553; //@line 1196 "xmltok_impl.c"
        __label__ = 157; break; //@line 1196 "xmltok_impl.c"
      case 157: // $bb99
        var $554=$2; //@line 974 "xmltok_impl.c"
        $retval=$554; //@line 974 "xmltok_impl.c"
        var $retval100=$retval; //@line 974 "xmltok_impl.c"
        ;
        return $retval100; //@line 974 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_attributeValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 1204 "xmltok_impl.c"
        var $2=$end_addr; //@line 1204 "xmltok_impl.c"
        var $3=($1)==($2); //@line 1204 "xmltok_impl.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1204 "xmltok_impl.c"
      case 1: // $bb
        $0=-4; //@line 1205 "xmltok_impl.c"
        __label__ = 27; break; //@line 1205 "xmltok_impl.c"
      case 2: // $bb1
        var $4=$ptr_addr; //@line 1206 "xmltok_impl.c"
        $start=$4; //@line 1206 "xmltok_impl.c"
        __label__ = 25; break; //@line 1206 "xmltok_impl.c"
      case 3: // $bb2
        var $5=$enc_addr; //@line 1208 "xmltok_impl.c"
        var $6=$5; //@line 1208 "xmltok_impl.c"
        var $7=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1208 "xmltok_impl.c"
        var $9=($8); //@line 1208 "xmltok_impl.c"
        var $10=$6+72; //@line 1208 "xmltok_impl.c"
        var $11=$10+$9; //@line 1208 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 1208 "xmltok_impl.c"
        var $13=($12); //@line 1208 "xmltok_impl.c"
        if ($13 == 2) {
          __label__ = 10; break;
        }
        else if ($13 == 3) {
          __label__ = 7; break;
        }
        else if ($13 == 5) {
          __label__ = 4; break;
        }
        else if ($13 == 6) {
          __label__ = 5; break;
        }
        else if ($13 == 7) {
          __label__ = 6; break;
        }
        else if ($13 == 9) {
          __label__ = 14; break;
        }
        else if ($13 == 10) {
          __label__ = 11; break;
        }
        else if ($13 == 21) {
          __label__ = 21; break;
        }
        else {
        __label__ = 24; break;
        }
        
      case 4: // $bb3
        var $14=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $15=$14+2; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$15; //@line 1211 "xmltok_impl.c"
        __label__ = 25; break; //@line 1211 "xmltok_impl.c"
      case 5: // $bb4
        var $16=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $17=$16+3; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$17; //@line 1211 "xmltok_impl.c"
        __label__ = 25; break; //@line 1211 "xmltok_impl.c"
      case 6: // $bb5
        var $18=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $19=$18+4; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$19; //@line 1211 "xmltok_impl.c"
        __label__ = 25; break; //@line 1211 "xmltok_impl.c"
      case 7: // $bb6
        var $20=$ptr_addr; //@line 1214 "xmltok_impl.c"
        var $21=$start; //@line 1214 "xmltok_impl.c"
        var $22=($20)==($21); //@line 1214 "xmltok_impl.c"
        if ($22) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1214 "xmltok_impl.c"
      case 8: // $bb7
        var $23=$ptr_addr; //@line 1215 "xmltok_impl.c"
        var $24=$23+1; //@line 1215 "xmltok_impl.c"
        var $25=$enc_addr; //@line 1215 "xmltok_impl.c"
        var $26=$end_addr; //@line 1215 "xmltok_impl.c"
        var $27=$nextTokPtr_addr; //@line 1215 "xmltok_impl.c"
        var $28=_normal_scanRef($25, $24, $26, $27); //@line 1215 "xmltok_impl.c"
        $0=$28; //@line 1215 "xmltok_impl.c"
        __label__ = 27; break; //@line 1215 "xmltok_impl.c"
      case 9: // $bb8
        var $29=$nextTokPtr_addr; //@line 1216 "xmltok_impl.c"
        var $30=$ptr_addr; //@line 1216 "xmltok_impl.c"
        HEAP[$29]=$30; //@line 1216 "xmltok_impl.c"
        $0=6; //@line 1217 "xmltok_impl.c"
        __label__ = 27; break; //@line 1217 "xmltok_impl.c"
      case 10: // $bb9
        var $31=$nextTokPtr_addr; //@line 1220 "xmltok_impl.c"
        var $32=$ptr_addr; //@line 1220 "xmltok_impl.c"
        HEAP[$31]=$32; //@line 1220 "xmltok_impl.c"
        $0=0; //@line 1221 "xmltok_impl.c"
        __label__ = 27; break; //@line 1221 "xmltok_impl.c"
      case 11: // $bb10
        var $33=$ptr_addr; //@line 1223 "xmltok_impl.c"
        var $34=$start; //@line 1223 "xmltok_impl.c"
        var $35=($33)==($34); //@line 1223 "xmltok_impl.c"
        if ($35) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1223 "xmltok_impl.c"
      case 12: // $bb11
        var $36=$ptr_addr; //@line 1224 "xmltok_impl.c"
        var $37=$36+1; //@line 1224 "xmltok_impl.c"
        var $38=$nextTokPtr_addr; //@line 1224 "xmltok_impl.c"
        HEAP[$38]=$37; //@line 1224 "xmltok_impl.c"
        $0=7; //@line 1225 "xmltok_impl.c"
        __label__ = 27; break; //@line 1225 "xmltok_impl.c"
      case 13: // $bb12
        var $39=$nextTokPtr_addr; //@line 1227 "xmltok_impl.c"
        var $40=$ptr_addr; //@line 1227 "xmltok_impl.c"
        HEAP[$39]=$40; //@line 1227 "xmltok_impl.c"
        $0=6; //@line 1228 "xmltok_impl.c"
        __label__ = 27; break; //@line 1228 "xmltok_impl.c"
      case 14: // $bb13
        var $41=$ptr_addr; //@line 1230 "xmltok_impl.c"
        var $42=$start; //@line 1230 "xmltok_impl.c"
        var $43=($41)==($42); //@line 1230 "xmltok_impl.c"
        if ($43) { __label__ = 15; break; } else { __label__ = 20; break; } //@line 1230 "xmltok_impl.c"
      case 15: // $bb14
        var $44=$ptr_addr; //@line 1231 "xmltok_impl.c"
        var $45=$44+1; //@line 1231 "xmltok_impl.c"
        $ptr_addr=$45; //@line 1231 "xmltok_impl.c"
        var $46=$ptr_addr; //@line 1232 "xmltok_impl.c"
        var $47=$end_addr; //@line 1232 "xmltok_impl.c"
        var $48=($46)==($47); //@line 1232 "xmltok_impl.c"
        if ($48) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1232 "xmltok_impl.c"
      case 16: // $bb15
        $0=-3; //@line 1233 "xmltok_impl.c"
        __label__ = 27; break; //@line 1233 "xmltok_impl.c"
      case 17: // $bb16
        var $49=$enc_addr; //@line 1234 "xmltok_impl.c"
        var $50=$49; //@line 1234 "xmltok_impl.c"
        var $51=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 1234 "xmltok_impl.c"
        var $53=($52); //@line 1234 "xmltok_impl.c"
        var $54=$50+72; //@line 1234 "xmltok_impl.c"
        var $55=$54+$53; //@line 1234 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 1234 "xmltok_impl.c"
        var $57=($56)==10; //@line 1234 "xmltok_impl.c"
        if ($57) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1234 "xmltok_impl.c"
      case 18: // $bb17
        var $58=$ptr_addr; //@line 1235 "xmltok_impl.c"
        var $59=$58+1; //@line 1235 "xmltok_impl.c"
        $ptr_addr=$59; //@line 1235 "xmltok_impl.c"
        __label__ = 19; break; //@line 1235 "xmltok_impl.c"
      case 19: // $bb18
        var $60=$nextTokPtr_addr; //@line 1236 "xmltok_impl.c"
        var $61=$ptr_addr; //@line 1236 "xmltok_impl.c"
        HEAP[$60]=$61; //@line 1236 "xmltok_impl.c"
        $0=7; //@line 1237 "xmltok_impl.c"
        __label__ = 27; break; //@line 1237 "xmltok_impl.c"
      case 20: // $bb19
        var $62=$nextTokPtr_addr; //@line 1239 "xmltok_impl.c"
        var $63=$ptr_addr; //@line 1239 "xmltok_impl.c"
        HEAP[$62]=$63; //@line 1239 "xmltok_impl.c"
        $0=6; //@line 1240 "xmltok_impl.c"
        __label__ = 27; break; //@line 1240 "xmltok_impl.c"
      case 21: // $bb20
        var $64=$ptr_addr; //@line 1242 "xmltok_impl.c"
        var $65=$start; //@line 1242 "xmltok_impl.c"
        var $66=($64)==($65); //@line 1242 "xmltok_impl.c"
        if ($66) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1242 "xmltok_impl.c"
      case 22: // $bb21
        var $67=$ptr_addr; //@line 1243 "xmltok_impl.c"
        var $68=$67+1; //@line 1243 "xmltok_impl.c"
        var $69=$nextTokPtr_addr; //@line 1243 "xmltok_impl.c"
        HEAP[$69]=$68; //@line 1243 "xmltok_impl.c"
        $0=39; //@line 1244 "xmltok_impl.c"
        __label__ = 27; break; //@line 1244 "xmltok_impl.c"
      case 23: // $bb22
        var $70=$nextTokPtr_addr; //@line 1246 "xmltok_impl.c"
        var $71=$ptr_addr; //@line 1246 "xmltok_impl.c"
        HEAP[$70]=$71; //@line 1246 "xmltok_impl.c"
        $0=6; //@line 1247 "xmltok_impl.c"
        __label__ = 27; break; //@line 1247 "xmltok_impl.c"
      case 24: // $bb23
        var $72=$ptr_addr; //@line 1249 "xmltok_impl.c"
        var $73=$72+1; //@line 1249 "xmltok_impl.c"
        $ptr_addr=$73; //@line 1249 "xmltok_impl.c"
        __label__ = 25; break; //@line 1249 "xmltok_impl.c"
      case 25: // $bb24
        var $74=$ptr_addr; //@line 1207 "xmltok_impl.c"
        var $75=$end_addr; //@line 1207 "xmltok_impl.c"
        var $76=($74)!=($75); //@line 1207 "xmltok_impl.c"
        if ($76) { __label__ = 3; break; } else { __label__ = 26; break; } //@line 1207 "xmltok_impl.c"
      case 26: // $bb25
        var $77=$nextTokPtr_addr; //@line 1253 "xmltok_impl.c"
        var $78=$ptr_addr; //@line 1253 "xmltok_impl.c"
        HEAP[$77]=$78; //@line 1253 "xmltok_impl.c"
        $0=6; //@line 1254 "xmltok_impl.c"
        __label__ = 27; break; //@line 1254 "xmltok_impl.c"
      case 27: // $bb26
        var $79=$0; //@line 1205 "xmltok_impl.c"
        $retval=$79; //@line 1205 "xmltok_impl.c"
        var $retval27=$retval; //@line 1205 "xmltok_impl.c"
        ;
        return $retval27; //@line 1205 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_entityValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_409;
        var $0;
        var $start;
        var $tok;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 1262 "xmltok_impl.c"
        var $2=$end_addr; //@line 1262 "xmltok_impl.c"
        var $3=($1)==($2); //@line 1262 "xmltok_impl.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1262 "xmltok_impl.c"
      case 1: // $bb
        $0=-4; //@line 1263 "xmltok_impl.c"
        __label__ = 29; break; //@line 1263 "xmltok_impl.c"
      case 2: // $bb1
        var $4=$ptr_addr; //@line 1264 "xmltok_impl.c"
        $start=$4; //@line 1264 "xmltok_impl.c"
        __label__ = 27; break; //@line 1264 "xmltok_impl.c"
      case 3: // $bb2
        var $5=$enc_addr; //@line 1266 "xmltok_impl.c"
        var $6=$5; //@line 1266 "xmltok_impl.c"
        var $7=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1266 "xmltok_impl.c"
        var $9=($8); //@line 1266 "xmltok_impl.c"
        var $10=$6+72; //@line 1266 "xmltok_impl.c"
        var $11=$10+$9; //@line 1266 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 1266 "xmltok_impl.c"
        var $13=($12); //@line 1266 "xmltok_impl.c"
        if ($13 == 3) {
          __label__ = 7; break;
        }
        else if ($13 == 5) {
          __label__ = 4; break;
        }
        else if ($13 == 6) {
          __label__ = 5; break;
        }
        else if ($13 == 7) {
          __label__ = 6; break;
        }
        else if ($13 == 9) {
          __label__ = 19; break;
        }
        else if ($13 == 10) {
          __label__ = 16; break;
        }
        else if ($13 == 30) {
          __label__ = 10; break;
        }
        else {
        __label__ = 26; break;
        }
        
      case 4: // $bb3
        var $14=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $15=$14+2; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$15; //@line 1269 "xmltok_impl.c"
        __label__ = 27; break; //@line 1269 "xmltok_impl.c"
      case 5: // $bb4
        var $16=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $17=$16+3; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$17; //@line 1269 "xmltok_impl.c"
        __label__ = 27; break; //@line 1269 "xmltok_impl.c"
      case 6: // $bb5
        var $18=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $19=$18+4; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$19; //@line 1269 "xmltok_impl.c"
        __label__ = 27; break; //@line 1269 "xmltok_impl.c"
      case 7: // $bb6
        var $20=$ptr_addr; //@line 1272 "xmltok_impl.c"
        var $21=$start; //@line 1272 "xmltok_impl.c"
        var $22=($20)==($21); //@line 1272 "xmltok_impl.c"
        if ($22) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1272 "xmltok_impl.c"
      case 8: // $bb7
        var $23=$ptr_addr; //@line 1273 "xmltok_impl.c"
        var $24=$23+1; //@line 1273 "xmltok_impl.c"
        var $25=$enc_addr; //@line 1273 "xmltok_impl.c"
        var $26=$end_addr; //@line 1273 "xmltok_impl.c"
        var $27=$nextTokPtr_addr; //@line 1273 "xmltok_impl.c"
        var $28=_normal_scanRef($25, $24, $26, $27); //@line 1273 "xmltok_impl.c"
        $0=$28; //@line 1273 "xmltok_impl.c"
        __label__ = 29; break; //@line 1273 "xmltok_impl.c"
      case 9: // $bb8
        var $29=$nextTokPtr_addr; //@line 1274 "xmltok_impl.c"
        var $30=$ptr_addr; //@line 1274 "xmltok_impl.c"
        HEAP[$29]=$30; //@line 1274 "xmltok_impl.c"
        $0=6; //@line 1275 "xmltok_impl.c"
        __label__ = 29; break; //@line 1275 "xmltok_impl.c"
      case 10: // $bb9
        var $31=$ptr_addr; //@line 1277 "xmltok_impl.c"
        var $32=$start; //@line 1277 "xmltok_impl.c"
        var $33=($31)==($32); //@line 1277 "xmltok_impl.c"
        if ($33) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 1277 "xmltok_impl.c"
      case 11: // $bb10
        var $34=$ptr_addr; //@line 1279 "xmltok_impl.c"
        var $35=$34+1; //@line 1279 "xmltok_impl.c"
        var $36=$enc_addr; //@line 1279 "xmltok_impl.c"
        var $37=$end_addr; //@line 1279 "xmltok_impl.c"
        var $38=$nextTokPtr_addr; //@line 1279 "xmltok_impl.c"
        var $39=_normal_scanPercent($36, $35, $37, $38); //@line 1279 "xmltok_impl.c"
        $tok=$39; //@line 1279 "xmltok_impl.c"
        var $40=$tok; //@line 1280 "xmltok_impl.c"
        var $41=($40)!=22; //@line 1280 "xmltok_impl.c"
        if ($41) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1280 "xmltok_impl.c"
      case 12: // $bb11
        var $42=$tok; //@line 1280 "xmltok_impl.c"
        $iftmp_409=$42; //@line 1280 "xmltok_impl.c"
        __label__ = 14; break; //@line 1280 "xmltok_impl.c"
      case 13: // $bb12
        $iftmp_409=0; //@line 1280 "xmltok_impl.c"
        __label__ = 14; break; //@line 1280 "xmltok_impl.c"
      case 14: // $bb13
        var $43=$iftmp_409; //@line 1280 "xmltok_impl.c"
        $0=$43; //@line 1280 "xmltok_impl.c"
        __label__ = 29; break; //@line 1280 "xmltok_impl.c"
      case 15: // $bb14
        var $44=$nextTokPtr_addr; //@line 1282 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 1282 "xmltok_impl.c"
        HEAP[$44]=$45; //@line 1282 "xmltok_impl.c"
        $0=6; //@line 1283 "xmltok_impl.c"
        __label__ = 29; break; //@line 1283 "xmltok_impl.c"
      case 16: // $bb15
        var $46=$ptr_addr; //@line 1285 "xmltok_impl.c"
        var $47=$start; //@line 1285 "xmltok_impl.c"
        var $48=($46)==($47); //@line 1285 "xmltok_impl.c"
        if ($48) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1285 "xmltok_impl.c"
      case 17: // $bb16
        var $49=$ptr_addr; //@line 1286 "xmltok_impl.c"
        var $50=$49+1; //@line 1286 "xmltok_impl.c"
        var $51=$nextTokPtr_addr; //@line 1286 "xmltok_impl.c"
        HEAP[$51]=$50; //@line 1286 "xmltok_impl.c"
        $0=7; //@line 1287 "xmltok_impl.c"
        __label__ = 29; break; //@line 1287 "xmltok_impl.c"
      case 18: // $bb17
        var $52=$nextTokPtr_addr; //@line 1289 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 1289 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 1289 "xmltok_impl.c"
        $0=6; //@line 1290 "xmltok_impl.c"
        __label__ = 29; break; //@line 1290 "xmltok_impl.c"
      case 19: // $bb18
        var $54=$ptr_addr; //@line 1292 "xmltok_impl.c"
        var $55=$start; //@line 1292 "xmltok_impl.c"
        var $56=($54)==($55); //@line 1292 "xmltok_impl.c"
        if ($56) { __label__ = 20; break; } else { __label__ = 25; break; } //@line 1292 "xmltok_impl.c"
      case 20: // $bb19
        var $57=$ptr_addr; //@line 1293 "xmltok_impl.c"
        var $58=$57+1; //@line 1293 "xmltok_impl.c"
        $ptr_addr=$58; //@line 1293 "xmltok_impl.c"
        var $59=$ptr_addr; //@line 1294 "xmltok_impl.c"
        var $60=$end_addr; //@line 1294 "xmltok_impl.c"
        var $61=($59)==($60); //@line 1294 "xmltok_impl.c"
        if ($61) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1294 "xmltok_impl.c"
      case 21: // $bb20
        $0=-3; //@line 1295 "xmltok_impl.c"
        __label__ = 29; break; //@line 1295 "xmltok_impl.c"
      case 22: // $bb21
        var $62=$enc_addr; //@line 1296 "xmltok_impl.c"
        var $63=$62; //@line 1296 "xmltok_impl.c"
        var $64=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 1296 "xmltok_impl.c"
        var $66=($65); //@line 1296 "xmltok_impl.c"
        var $67=$63+72; //@line 1296 "xmltok_impl.c"
        var $68=$67+$66; //@line 1296 "xmltok_impl.c"
        var $69=HEAP[$68]; //@line 1296 "xmltok_impl.c"
        var $70=($69)==10; //@line 1296 "xmltok_impl.c"
        if ($70) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1296 "xmltok_impl.c"
      case 23: // $bb22
        var $71=$ptr_addr; //@line 1297 "xmltok_impl.c"
        var $72=$71+1; //@line 1297 "xmltok_impl.c"
        $ptr_addr=$72; //@line 1297 "xmltok_impl.c"
        __label__ = 24; break; //@line 1297 "xmltok_impl.c"
      case 24: // $bb23
        var $73=$nextTokPtr_addr; //@line 1298 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 1298 "xmltok_impl.c"
        HEAP[$73]=$74; //@line 1298 "xmltok_impl.c"
        $0=7; //@line 1299 "xmltok_impl.c"
        __label__ = 29; break; //@line 1299 "xmltok_impl.c"
      case 25: // $bb24
        var $75=$nextTokPtr_addr; //@line 1301 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 1301 "xmltok_impl.c"
        HEAP[$75]=$76; //@line 1301 "xmltok_impl.c"
        $0=6; //@line 1302 "xmltok_impl.c"
        __label__ = 29; break; //@line 1302 "xmltok_impl.c"
      case 26: // $bb25
        var $77=$ptr_addr; //@line 1304 "xmltok_impl.c"
        var $78=$77+1; //@line 1304 "xmltok_impl.c"
        $ptr_addr=$78; //@line 1304 "xmltok_impl.c"
        __label__ = 27; break; //@line 1304 "xmltok_impl.c"
      case 27: // $bb26
        var $79=$ptr_addr; //@line 1265 "xmltok_impl.c"
        var $80=$end_addr; //@line 1265 "xmltok_impl.c"
        var $81=($79)!=($80); //@line 1265 "xmltok_impl.c"
        if ($81) { __label__ = 3; break; } else { __label__ = 28; break; } //@line 1265 "xmltok_impl.c"
      case 28: // $bb27
        var $82=$nextTokPtr_addr; //@line 1308 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 1308 "xmltok_impl.c"
        HEAP[$82]=$83; //@line 1308 "xmltok_impl.c"
        $0=6; //@line 1309 "xmltok_impl.c"
        __label__ = 29; break; //@line 1309 "xmltok_impl.c"
      case 29: // $bb28
        var $84=$0; //@line 1263 "xmltok_impl.c"
        $retval=$84; //@line 1263 "xmltok_impl.c"
        var $retval29=$retval; //@line 1263 "xmltok_impl.c"
        ;
        return $retval29; //@line 1263 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_isPublicId($enc, $ptr, $end, $badPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $badPtr_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $badPtr_addr=$badPtr;
        var $1=$ptr_addr; //@line 1371 "xmltok_impl.c"
        var $2=$1+1; //@line 1371 "xmltok_impl.c"
        $ptr_addr=$2; //@line 1371 "xmltok_impl.c"
        var $3=$end_addr; //@line 1372 "xmltok_impl.c"
        var $4=$3+-1; //@line 1372 "xmltok_impl.c"
        $end_addr=$4; //@line 1372 "xmltok_impl.c"
        __label__ = 8; break; //@line 1372 "xmltok_impl.c"
      case 1: // $bb
        var $5=$enc_addr; //@line 1374 "xmltok_impl.c"
        var $6=$5; //@line 1374 "xmltok_impl.c"
        var $7=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1374 "xmltok_impl.c"
        var $9=($8); //@line 1374 "xmltok_impl.c"
        var $10=$6+72; //@line 1374 "xmltok_impl.c"
        var $11=$10+$9; //@line 1374 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 1374 "xmltok_impl.c"
        var $13=($12); //@line 1374 "xmltok_impl.c"
        if ($13 == 9) {
          __label__ = 7; break;
        }
        else if ($13 == 10) {
          __label__ = 7; break;
        }
        else if ($13 == 13) {
          __label__ = 7; break;
        }
        else if ($13 == 14) {
          __label__ = 7; break;
        }
        else if ($13 == 15) {
          __label__ = 7; break;
        }
        else if ($13 == 16) {
          __label__ = 7; break;
        }
        else if ($13 == 17) {
          __label__ = 7; break;
        }
        else if ($13 == 18) {
          __label__ = 7; break;
        }
        else if ($13 == 19) {
          __label__ = 7; break;
        }
        else if ($13 == 21) {
          __label__ = 2; break;
        }
        else if ($13 == 22) {
          __label__ = 4; break;
        }
        else if ($13 == 24) {
          __label__ = 7; break;
        }
        else if ($13 == 25) {
          __label__ = 7; break;
        }
        else if ($13 == 26) {
          __label__ = 4; break;
        }
        else if ($13 == 27) {
          __label__ = 7; break;
        }
        else if ($13 == 30) {
          __label__ = 7; break;
        }
        else if ($13 == 31) {
          __label__ = 7; break;
        }
        else if ($13 == 32) {
          __label__ = 7; break;
        }
        else if ($13 == 33) {
          __label__ = 7; break;
        }
        else if ($13 == 34) {
          __label__ = 7; break;
        }
        else if ($13 == 35) {
          __label__ = 7; break;
        }
        else {
        __label__ = 5; break;
        }
        
      case 2: // $bb2
        var $14=$ptr_addr; //@line 1398 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1398 "xmltok_impl.c"
        var $16=($15)==9; //@line 1398 "xmltok_impl.c"
        if ($16) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 1398 "xmltok_impl.c"
      case 3: // $bb3
        var $17=$badPtr_addr; //@line 1399 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 1399 "xmltok_impl.c"
        HEAP[$17]=$18; //@line 1399 "xmltok_impl.c"
        $0=0; //@line 1400 "xmltok_impl.c"
        __label__ = 10; break; //@line 1400 "xmltok_impl.c"
      case 4: // $bb5
        var $19=$ptr_addr; //@line 1405 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 1405 "xmltok_impl.c"
        var $21=($20) >= 0; //@line 1405 "xmltok_impl.c"
        if ($21) { __label__ = 7; break; } else { __label__ = 5; break; } //@line 1405 "xmltok_impl.c"
      case 5: // $bb6
        var $22=$ptr_addr; //@line 1408 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1408 "xmltok_impl.c"
        var $24=($23); //@line 1408 "xmltok_impl.c"
        if ($24 == 36) {
          __label__ = 7; break;
        }
        else if ($24 == 64) {
          __label__ = 7; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 6: // $bb8
        var $25=$badPtr_addr; //@line 1413 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 1413 "xmltok_impl.c"
        HEAP[$25]=$26; //@line 1413 "xmltok_impl.c"
        $0=0; //@line 1414 "xmltok_impl.c"
        __label__ = 10; break; //@line 1414 "xmltok_impl.c"
      case 7: // $bb9
        var $27=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $28=$27+1; //@line 1373 "xmltok_impl.c"
        $ptr_addr=$28; //@line 1373 "xmltok_impl.c"
        __label__ = 8; break; //@line 1373 "xmltok_impl.c"
      case 8: // $bb10
        var $29=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $30=$end_addr; //@line 1373 "xmltok_impl.c"
        var $31=($29)!=($30); //@line 1373 "xmltok_impl.c"
        if ($31) { __label__ = 1; break; } else { __label__ = 9; break; } //@line 1373 "xmltok_impl.c"
      case 9: // $bb11
        $0=1; //@line 1419 "xmltok_impl.c"
        __label__ = 10; break; //@line 1419 "xmltok_impl.c"
      case 10: // $bb12
        var $32=$0; //@line 1400 "xmltok_impl.c"
        $retval=$32; //@line 1400 "xmltok_impl.c"
        var $retval13=$retval; //@line 1400 "xmltok_impl.c"
        ;
        return $retval13; //@line 1400 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_getAtts($enc, $ptr, $attsMax, $atts) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $attsMax_addr;
        var $atts_addr;
        var $retval;
        var $0;
        var $state;
        var $nAtts;
        var $open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $attsMax_addr=$attsMax;
        $atts_addr=$atts;
        $state=1; //@line 1431 "xmltok_impl.c"
        $nAtts=0; //@line 1432 "xmltok_impl.c"
        $open=0; //@line 1433 "xmltok_impl.c"
        var $1=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $2=$1+1; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$2; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      case 1: // $bb
        var $3=$enc_addr; //@line 1437 "xmltok_impl.c"
        var $4=$3; //@line 1437 "xmltok_impl.c"
        var $5=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $6=HEAP[$5]; //@line 1437 "xmltok_impl.c"
        var $7=($6); //@line 1437 "xmltok_impl.c"
        var $8=$4+72; //@line 1437 "xmltok_impl.c"
        var $9=$8+$7; //@line 1437 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1437 "xmltok_impl.c"
        var $11=($10); //@line 1437 "xmltok_impl.c"
        if ($11 == 3) {
          __label__ = 37; break;
        }
        else if ($11 == 5) {
          __label__ = 2; break;
        }
        else if ($11 == 6) {
          __label__ = 7; break;
        }
        else if ($11 == 7) {
          __label__ = 12; break;
        }
        else if ($11 == 9) {
          __label__ = 49; break;
        }
        else if ($11 == 10) {
          __label__ = 49; break;
        }
        else if ($11 == 11) {
          __label__ = 54; break;
        }
        else if ($11 == 12) {
          __label__ = 21; break;
        }
        else if ($11 == 13) {
          __label__ = 29; break;
        }
        else if ($11 == 17) {
          __label__ = 54; break;
        }
        else if ($11 == 21) {
          __label__ = 39; break;
        }
        else if ($11 == 22) {
          __label__ = 17; break;
        }
        else if ($11 == 24) {
          __label__ = 17; break;
        }
        else if ($11 == 29) {
          __label__ = 17; break;
        }
        else {
        __label__ = 56; break;
        }
        
      case 2: // $bb1
        var $12=$state; //@line 1448 "xmltok_impl.c"
        var $13=($12)==0; //@line 1448 "xmltok_impl.c"
        if ($13) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 1448 "xmltok_impl.c"
      case 3: // $bb2
        var $14=$nAtts; //@line 1448 "xmltok_impl.c"
        var $15=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $16=($14) < ($15); //@line 1448 "xmltok_impl.c"
        if ($16) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1448 "xmltok_impl.c"
      case 4: // $bb3
        var $17=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $18=$nAtts; //@line 1448 "xmltok_impl.c"
        var $19=$17+16*$18; //@line 1448 "xmltok_impl.c"
        var $20=$19; //@line 1448 "xmltok_impl.c"
        var $21=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$20]=$21; //@line 1448 "xmltok_impl.c"
        var $22=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $23=$nAtts; //@line 1448 "xmltok_impl.c"
        var $24=$22+16*$23; //@line 1448 "xmltok_impl.c"
        var $25=$24+12; //@line 1448 "xmltok_impl.c"
        HEAP[$25]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 5; break; //@line 1448 "xmltok_impl.c"
      case 5: // $bb4
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 6; break; //@line 1448 "xmltok_impl.c"
      case 6: // $bb5
        var $26=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $27=$26+1; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$27; //@line 1448 "xmltok_impl.c"
        __label__ = 56; break; //@line 1448 "xmltok_impl.c"
      case 7: // $bb6
        var $28=$state; //@line 1448 "xmltok_impl.c"
        var $29=($28)==0; //@line 1448 "xmltok_impl.c"
        if ($29) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 1448 "xmltok_impl.c"
      case 8: // $bb7
        var $30=$nAtts; //@line 1448 "xmltok_impl.c"
        var $31=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $32=($30) < ($31); //@line 1448 "xmltok_impl.c"
        if ($32) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1448 "xmltok_impl.c"
      case 9: // $bb8
        var $33=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $34=$nAtts; //@line 1448 "xmltok_impl.c"
        var $35=$33+16*$34; //@line 1448 "xmltok_impl.c"
        var $36=$35; //@line 1448 "xmltok_impl.c"
        var $37=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$36]=$37; //@line 1448 "xmltok_impl.c"
        var $38=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $39=$nAtts; //@line 1448 "xmltok_impl.c"
        var $40=$38+16*$39; //@line 1448 "xmltok_impl.c"
        var $41=$40+12; //@line 1448 "xmltok_impl.c"
        HEAP[$41]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 10; break; //@line 1448 "xmltok_impl.c"
      case 10: // $bb9
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 11; break; //@line 1448 "xmltok_impl.c"
      case 11: // $bb10
        var $42=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $43=$42+2; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$43; //@line 1448 "xmltok_impl.c"
        __label__ = 56; break; //@line 1448 "xmltok_impl.c"
      case 12: // $bb11
        var $44=$state; //@line 1448 "xmltok_impl.c"
        var $45=($44)==0; //@line 1448 "xmltok_impl.c"
        if ($45) { __label__ = 13; break; } else { __label__ = 16; break; } //@line 1448 "xmltok_impl.c"
      case 13: // $bb12
        var $46=$nAtts; //@line 1448 "xmltok_impl.c"
        var $47=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $48=($46) < ($47); //@line 1448 "xmltok_impl.c"
        if ($48) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1448 "xmltok_impl.c"
      case 14: // $bb13
        var $49=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $50=$nAtts; //@line 1448 "xmltok_impl.c"
        var $51=$49+16*$50; //@line 1448 "xmltok_impl.c"
        var $52=$51; //@line 1448 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 1448 "xmltok_impl.c"
        var $54=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $55=$nAtts; //@line 1448 "xmltok_impl.c"
        var $56=$54+16*$55; //@line 1448 "xmltok_impl.c"
        var $57=$56+12; //@line 1448 "xmltok_impl.c"
        HEAP[$57]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 15; break; //@line 1448 "xmltok_impl.c"
      case 15: // $bb14
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 16; break; //@line 1448 "xmltok_impl.c"
      case 16: // $bb15
        var $58=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $59=$58+3; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$59; //@line 1448 "xmltok_impl.c"
        __label__ = 56; break; //@line 1448 "xmltok_impl.c"
      case 17: // $bb16
        var $60=$state; //@line 1453 "xmltok_impl.c"
        var $61=($60)==0; //@line 1453 "xmltok_impl.c"
        if ($61) { __label__ = 18; break; } else { __label__ = 56; break; } //@line 1453 "xmltok_impl.c"
      case 18: // $bb17
        var $62=$nAtts; //@line 1453 "xmltok_impl.c"
        var $63=$attsMax_addr; //@line 1453 "xmltok_impl.c"
        var $64=($62) < ($63); //@line 1453 "xmltok_impl.c"
        if ($64) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1453 "xmltok_impl.c"
      case 19: // $bb18
        var $65=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $66=$nAtts; //@line 1453 "xmltok_impl.c"
        var $67=$65+16*$66; //@line 1453 "xmltok_impl.c"
        var $68=$67; //@line 1453 "xmltok_impl.c"
        var $69=$ptr_addr; //@line 1453 "xmltok_impl.c"
        HEAP[$68]=$69; //@line 1453 "xmltok_impl.c"
        var $70=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $71=$nAtts; //@line 1453 "xmltok_impl.c"
        var $72=$70+16*$71; //@line 1453 "xmltok_impl.c"
        var $73=$72+12; //@line 1453 "xmltok_impl.c"
        HEAP[$73]=1; //@line 1453 "xmltok_impl.c"
        __label__ = 20; break; //@line 1453 "xmltok_impl.c"
      case 20: // $bb19
        $state=1; //@line 1453 "xmltok_impl.c"
        __label__ = 56; break; //@line 1453 "xmltok_impl.c"
      case 21: // $bb21
        var $74=$state; //@line 1457 "xmltok_impl.c"
        var $75=($74)!=2; //@line 1457 "xmltok_impl.c"
        if ($75) { __label__ = 22; break; } else { __label__ = 25; break; } //@line 1457 "xmltok_impl.c"
      case 22: // $bb22
        var $76=$nAtts; //@line 1458 "xmltok_impl.c"
        var $77=$attsMax_addr; //@line 1458 "xmltok_impl.c"
        var $78=($76) < ($77); //@line 1458 "xmltok_impl.c"
        if ($78) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1458 "xmltok_impl.c"
      case 23: // $bb23
        var $79=$atts_addr; //@line 1459 "xmltok_impl.c"
        var $80=$nAtts; //@line 1459 "xmltok_impl.c"
        var $81=$79+16*$80; //@line 1459 "xmltok_impl.c"
        var $82=$ptr_addr; //@line 1459 "xmltok_impl.c"
        var $83=$82+1; //@line 1459 "xmltok_impl.c"
        var $84=$81+4; //@line 1459 "xmltok_impl.c"
        HEAP[$84]=$83; //@line 1459 "xmltok_impl.c"
        __label__ = 24; break; //@line 1459 "xmltok_impl.c"
      case 24: // $bb24
        $state=2; //@line 1460 "xmltok_impl.c"
        $open=12; //@line 1461 "xmltok_impl.c"
        __label__ = 56; break; //@line 1461 "xmltok_impl.c"
      case 25: // $bb25
        var $85=$open; //@line 1463 "xmltok_impl.c"
        var $86=($85)==12; //@line 1463 "xmltok_impl.c"
        if ($86) { __label__ = 26; break; } else { __label__ = 56; break; } //@line 1463 "xmltok_impl.c"
      case 26: // $bb26
        $state=0; //@line 1464 "xmltok_impl.c"
        var $87=$nAtts; //@line 1465 "xmltok_impl.c"
        var $88=$attsMax_addr; //@line 1465 "xmltok_impl.c"
        var $89=($87) < ($88); //@line 1465 "xmltok_impl.c"
        if ($89) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1465 "xmltok_impl.c"
      case 27: // $bb27
        var $90=$atts_addr; //@line 1466 "xmltok_impl.c"
        var $91=$nAtts; //@line 1466 "xmltok_impl.c"
        var $92=$90+16*$91; //@line 1466 "xmltok_impl.c"
        var $93=$92+8; //@line 1466 "xmltok_impl.c"
        var $94=$ptr_addr; //@line 1466 "xmltok_impl.c"
        HEAP[$93]=$94; //@line 1466 "xmltok_impl.c"
        __label__ = 28; break; //@line 1466 "xmltok_impl.c"
      case 28: // $bb28
        var $95=$nAtts; //@line 1467 "xmltok_impl.c"
        var $96=($95) + 1; //@line 1467 "xmltok_impl.c"
        $nAtts=$96; //@line 1467 "xmltok_impl.c"
        __label__ = 56; break; //@line 1467 "xmltok_impl.c"
      case 29: // $bb30
        var $97=$state; //@line 1471 "xmltok_impl.c"
        var $98=($97)!=2; //@line 1471 "xmltok_impl.c"
        if ($98) { __label__ = 30; break; } else { __label__ = 33; break; } //@line 1471 "xmltok_impl.c"
      case 30: // $bb31
        var $99=$nAtts; //@line 1472 "xmltok_impl.c"
        var $100=$attsMax_addr; //@line 1472 "xmltok_impl.c"
        var $101=($99) < ($100); //@line 1472 "xmltok_impl.c"
        if ($101) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 1472 "xmltok_impl.c"
      case 31: // $bb32
        var $102=$atts_addr; //@line 1473 "xmltok_impl.c"
        var $103=$nAtts; //@line 1473 "xmltok_impl.c"
        var $104=$102+16*$103; //@line 1473 "xmltok_impl.c"
        var $105=$ptr_addr; //@line 1473 "xmltok_impl.c"
        var $106=$105+1; //@line 1473 "xmltok_impl.c"
        var $107=$104+4; //@line 1473 "xmltok_impl.c"
        HEAP[$107]=$106; //@line 1473 "xmltok_impl.c"
        __label__ = 32; break; //@line 1473 "xmltok_impl.c"
      case 32: // $bb33
        $state=2; //@line 1474 "xmltok_impl.c"
        $open=13; //@line 1475 "xmltok_impl.c"
        __label__ = 56; break; //@line 1475 "xmltok_impl.c"
      case 33: // $bb34
        var $108=$open; //@line 1477 "xmltok_impl.c"
        var $109=($108)==13; //@line 1477 "xmltok_impl.c"
        if ($109) { __label__ = 34; break; } else { __label__ = 56; break; } //@line 1477 "xmltok_impl.c"
      case 34: // $bb35
        $state=0; //@line 1478 "xmltok_impl.c"
        var $110=$nAtts; //@line 1479 "xmltok_impl.c"
        var $111=$attsMax_addr; //@line 1479 "xmltok_impl.c"
        var $112=($110) < ($111); //@line 1479 "xmltok_impl.c"
        if ($112) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 1479 "xmltok_impl.c"
      case 35: // $bb36
        var $113=$atts_addr; //@line 1480 "xmltok_impl.c"
        var $114=$nAtts; //@line 1480 "xmltok_impl.c"
        var $115=$113+16*$114; //@line 1480 "xmltok_impl.c"
        var $116=$115+8; //@line 1480 "xmltok_impl.c"
        var $117=$ptr_addr; //@line 1480 "xmltok_impl.c"
        HEAP[$116]=$117; //@line 1480 "xmltok_impl.c"
        __label__ = 36; break; //@line 1480 "xmltok_impl.c"
      case 36: // $bb37
        var $118=$nAtts; //@line 1481 "xmltok_impl.c"
        var $119=($118) + 1; //@line 1481 "xmltok_impl.c"
        $nAtts=$119; //@line 1481 "xmltok_impl.c"
        __label__ = 56; break; //@line 1481 "xmltok_impl.c"
      case 37: // $bb39
        var $120=$nAtts; //@line 1485 "xmltok_impl.c"
        var $121=$attsMax_addr; //@line 1485 "xmltok_impl.c"
        var $122=($120) < ($121); //@line 1485 "xmltok_impl.c"
        if ($122) { __label__ = 38; break; } else { __label__ = 56; break; } //@line 1485 "xmltok_impl.c"
      case 38: // $bb40
        var $123=$atts_addr; //@line 1486 "xmltok_impl.c"
        var $124=$nAtts; //@line 1486 "xmltok_impl.c"
        var $125=$123+16*$124; //@line 1486 "xmltok_impl.c"
        var $126=$125+12; //@line 1486 "xmltok_impl.c"
        HEAP[$126]=0; //@line 1486 "xmltok_impl.c"
        __label__ = 56; break; //@line 1486 "xmltok_impl.c"
      case 39: // $bb42
        var $127=$state; //@line 1489 "xmltok_impl.c"
        var $128=($127)==1; //@line 1489 "xmltok_impl.c"
        if ($128) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1489 "xmltok_impl.c"
      case 40: // $bb43
        $state=0; //@line 1490 "xmltok_impl.c"
        __label__ = 56; break; //@line 1490 "xmltok_impl.c"
      case 41: // $bb44
        var $129=$state; //@line 1491 "xmltok_impl.c"
        var $130=($129)==2; //@line 1491 "xmltok_impl.c"
        if ($130) { __label__ = 42; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 42: // $bb45
        var $131=$nAtts; //@line 1491 "xmltok_impl.c"
        var $132=$attsMax_addr; //@line 1491 "xmltok_impl.c"
        var $133=($131) < ($132); //@line 1491 "xmltok_impl.c"
        if ($133) { __label__ = 43; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 43: // $bb46
        var $134=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $135=$nAtts; //@line 1491 "xmltok_impl.c"
        var $136=$134+16*$135; //@line 1491 "xmltok_impl.c"
        var $137=$136+12; //@line 1491 "xmltok_impl.c"
        var $138=HEAP[$137]; //@line 1491 "xmltok_impl.c"
        var $139=($138)!=0; //@line 1491 "xmltok_impl.c"
        if ($139) { __label__ = 44; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 44: // $bb47
        var $140=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $141=$nAtts; //@line 1491 "xmltok_impl.c"
        var $142=$140+16*$141; //@line 1491 "xmltok_impl.c"
        var $143=$142+4; //@line 1491 "xmltok_impl.c"
        var $144=HEAP[$143]; //@line 1491 "xmltok_impl.c"
        var $145=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $146=($144)==($145); //@line 1491 "xmltok_impl.c"
        if ($146) { __label__ = 48; break; } else { __label__ = 45; break; } //@line 1491 "xmltok_impl.c"
      case 45: // $bb48
        var $147=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $148=HEAP[$147]; //@line 1491 "xmltok_impl.c"
        var $149=($148)!=32; //@line 1491 "xmltok_impl.c"
        if ($149) { __label__ = 48; break; } else { __label__ = 46; break; } //@line 1491 "xmltok_impl.c"
      case 46: // $bb49
        var $150=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $151=$150+1; //@line 1491 "xmltok_impl.c"
        var $152=HEAP[$151]; //@line 1491 "xmltok_impl.c"
        var $153=($152)==32; //@line 1491 "xmltok_impl.c"
        if ($153) { __label__ = 48; break; } else { __label__ = 47; break; } //@line 1491 "xmltok_impl.c"
      case 47: // $bb50
        var $154=$enc_addr; //@line 1491 "xmltok_impl.c"
        var $155=$154; //@line 1491 "xmltok_impl.c"
        var $156=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $157=$156+1; //@line 1491 "xmltok_impl.c"
        var $158=HEAP[$157]; //@line 1491 "xmltok_impl.c"
        var $159=($158); //@line 1491 "xmltok_impl.c"
        var $160=$155+72; //@line 1491 "xmltok_impl.c"
        var $161=$160+$159; //@line 1491 "xmltok_impl.c"
        var $162=HEAP[$161]; //@line 1491 "xmltok_impl.c"
        var $163=($162); //@line 1491 "xmltok_impl.c"
        var $164=$open; //@line 1491 "xmltok_impl.c"
        var $165=($163)==($164); //@line 1491 "xmltok_impl.c"
        if ($165) { __label__ = 48; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 48: // $bb51
        var $166=$atts_addr; //@line 1498 "xmltok_impl.c"
        var $167=$nAtts; //@line 1498 "xmltok_impl.c"
        var $168=$166+16*$167; //@line 1498 "xmltok_impl.c"
        var $169=$168+12; //@line 1498 "xmltok_impl.c"
        HEAP[$169]=0; //@line 1498 "xmltok_impl.c"
        __label__ = 56; break; //@line 1498 "xmltok_impl.c"
      case 49: // $bb53
        var $170=$state; //@line 1503 "xmltok_impl.c"
        var $171=($170)==1; //@line 1503 "xmltok_impl.c"
        if ($171) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 1503 "xmltok_impl.c"
      case 50: // $bb54
        $state=0; //@line 1504 "xmltok_impl.c"
        __label__ = 56; break; //@line 1504 "xmltok_impl.c"
      case 51: // $bb55
        var $172=$state; //@line 1505 "xmltok_impl.c"
        var $173=($172)==2; //@line 1505 "xmltok_impl.c"
        if ($173) { __label__ = 52; break; } else { __label__ = 56; break; } //@line 1505 "xmltok_impl.c"
      case 52: // $bb56
        var $174=$nAtts; //@line 1505 "xmltok_impl.c"
        var $175=$attsMax_addr; //@line 1505 "xmltok_impl.c"
        var $176=($174) < ($175); //@line 1505 "xmltok_impl.c"
        if ($176) { __label__ = 53; break; } else { __label__ = 56; break; } //@line 1505 "xmltok_impl.c"
      case 53: // $bb57
        var $177=$atts_addr; //@line 1506 "xmltok_impl.c"
        var $178=$nAtts; //@line 1506 "xmltok_impl.c"
        var $179=$177+16*$178; //@line 1506 "xmltok_impl.c"
        var $180=$179+12; //@line 1506 "xmltok_impl.c"
        HEAP[$180]=0; //@line 1506 "xmltok_impl.c"
        __label__ = 56; break; //@line 1506 "xmltok_impl.c"
      case 54: // $bb59
        var $181=$state; //@line 1510 "xmltok_impl.c"
        var $182=($181)!=2; //@line 1510 "xmltok_impl.c"
        if ($182) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 1510 "xmltok_impl.c"
      case 55: // $bb60
        var $183=$nAtts; //@line 1511 "xmltok_impl.c"
        $0=$183; //@line 1511 "xmltok_impl.c"
        var $184=$0; //@line 1511 "xmltok_impl.c"
        $retval=$184; //@line 1511 "xmltok_impl.c"
        var $retval62=$retval; //@line 1436 "xmltok_impl.c"
        ;
        return $retval62; //@line 1436 "xmltok_impl.c"
      case 56: // $bb61
        var $185=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $186=$185+1; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$186; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_charRefNumber($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $result_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $1;
        var $result;
        var $c;
        var $c12;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $result=0; //@line 1523 "xmltok_impl.c"
        var $2=$ptr_addr; //@line 1525 "xmltok_impl.c"
        var $3=$2+2; //@line 1525 "xmltok_impl.c"
        $ptr_addr=$3; //@line 1525 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 1526 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1526 "xmltok_impl.c"
        var $6=($5)==120; //@line 1526 "xmltok_impl.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 14; break; } //@line 1526 "xmltok_impl.c"
      case 1: // $bb
        var $7=$ptr_addr; //@line 1527 "xmltok_impl.c"
        var $8=$7+1; //@line 1527 "xmltok_impl.c"
        $ptr_addr=$8; //@line 1527 "xmltok_impl.c"
        __label__ = 10; break; //@line 1527 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$ptr_addr; //@line 1530 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1530 "xmltok_impl.c"
        var $11=($10); //@line 1530 "xmltok_impl.c"
        $c=$11; //@line 1530 "xmltok_impl.c"
        var $12=$c; //@line 1531 "xmltok_impl.c"
        if ($12 == 48) {
          __label__ = 3; break;
        }
        else if ($12 == 49) {
          __label__ = 3; break;
        }
        else if ($12 == 50) {
          __label__ = 3; break;
        }
        else if ($12 == 51) {
          __label__ = 3; break;
        }
        else if ($12 == 52) {
          __label__ = 3; break;
        }
        else if ($12 == 53) {
          __label__ = 3; break;
        }
        else if ($12 == 54) {
          __label__ = 3; break;
        }
        else if ($12 == 55) {
          __label__ = 3; break;
        }
        else if ($12 == 56) {
          __label__ = 3; break;
        }
        else if ($12 == 57) {
          __label__ = 3; break;
        }
        else if ($12 == 65) {
          __label__ = 4; break;
        }
        else if ($12 == 66) {
          __label__ = 4; break;
        }
        else if ($12 == 67) {
          __label__ = 4; break;
        }
        else if ($12 == 68) {
          __label__ = 4; break;
        }
        else if ($12 == 69) {
          __label__ = 4; break;
        }
        else if ($12 == 70) {
          __label__ = 4; break;
        }
        else if ($12 == 97) {
          __label__ = 5; break;
        }
        else if ($12 == 98) {
          __label__ = 5; break;
        }
        else if ($12 == 99) {
          __label__ = 5; break;
        }
        else if ($12 == 100) {
          __label__ = 5; break;
        }
        else if ($12 == 101) {
          __label__ = 5; break;
        }
        else if ($12 == 102) {
          __label__ = 5; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 3: // $bb2
        var $13=$result; //@line 1534 "xmltok_impl.c"
        var $14=($13) << 4; //@line 1534 "xmltok_impl.c"
        $result=$14; //@line 1534 "xmltok_impl.c"
        var $15=$c; //@line 1535 "xmltok_impl.c"
        var $16=($15) - 48; //@line 1535 "xmltok_impl.c"
        var $17=$result; //@line 1535 "xmltok_impl.c"
        var $18=($16) | ($17); //@line 1535 "xmltok_impl.c"
        $result=$18; //@line 1535 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 7; break; //@line 1535 "xmltok_impl.c"
      case 4: // $bb3
        var $19=$result; //@line 1539 "xmltok_impl.c"
        var $20=($19) << 4; //@line 1539 "xmltok_impl.c"
        $result=$20; //@line 1539 "xmltok_impl.c"
        var $21=$c; //@line 1540 "xmltok_impl.c"
        var $22=($21) - 55; //@line 1540 "xmltok_impl.c"
        var $23=$result; //@line 1540 "xmltok_impl.c"
        var $24=($22) + ($23); //@line 1540 "xmltok_impl.c"
        $result=$24; //@line 1540 "xmltok_impl.c"
        __lastLabel__ = 4; __label__ = 7; break; //@line 1540 "xmltok_impl.c"
      case 5: // $bb4
        var $25=$result; //@line 1544 "xmltok_impl.c"
        var $26=($25) << 4; //@line 1544 "xmltok_impl.c"
        $result=$26; //@line 1544 "xmltok_impl.c"
        var $27=$c; //@line 1545 "xmltok_impl.c"
        var $28=($27) - 87; //@line 1545 "xmltok_impl.c"
        var $29=$result; //@line 1545 "xmltok_impl.c"
        var $30=($28) + ($29); //@line 1545 "xmltok_impl.c"
        $result=$30; //@line 1545 "xmltok_impl.c"
        __lastLabel__ = 5; __label__ = 7; break; //@line 1545 "xmltok_impl.c"
      case 6: // $bb5thread_pre_split
        var $_pr=$result;
        __lastLabel__ = 6; __label__ = 7; break;
      case 7: // $bb5
        var $31=__lastLabel__ == 6 ? $_pr : (__lastLabel__ == 5 ? $30 : (__lastLabel__ == 4 ? $24 : ($18)));
        var $32=($31) > 1114111; //@line 1548 "xmltok_impl.c"
        if ($32) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1548 "xmltok_impl.c"
      case 8: // $bb6
        $1=-1; //@line 1549 "xmltok_impl.c"
        __label__ = 23; break; //@line 1549 "xmltok_impl.c"
      case 9: // $bb7
        var $33=$ptr_addr; //@line 1529 "xmltok_impl.c"
        var $34=$33+1; //@line 1529 "xmltok_impl.c"
        $ptr_addr=$34; //@line 1529 "xmltok_impl.c"
        __label__ = 10; break; //@line 1529 "xmltok_impl.c"
      case 10: // $bb8
        var $35=$ptr_addr; //@line 1528 "xmltok_impl.c"
        var $36=HEAP[$35]; //@line 1528 "xmltok_impl.c"
        var $37=($36)!=59; //@line 1528 "xmltok_impl.c"
        if ($37) { __label__ = 2; break; } else { __label__ = 15; break; } //@line 1528 "xmltok_impl.c"
      case 11: // $bb11
        var $38=$ptr_addr; //@line 1554 "xmltok_impl.c"
        var $39=HEAP[$38]; //@line 1554 "xmltok_impl.c"
        var $40=($39); //@line 1554 "xmltok_impl.c"
        $c12=$40; //@line 1554 "xmltok_impl.c"
        var $41=$result; //@line 1555 "xmltok_impl.c"
        var $42=($41) * 10; //@line 1555 "xmltok_impl.c"
        $result=$42; //@line 1555 "xmltok_impl.c"
        var $43=$c12; //@line 1556 "xmltok_impl.c"
        var $44=$result; //@line 1556 "xmltok_impl.c"
        var $45=($43) + -48;
        var $46=($45) + ($44); //@line 1556 "xmltok_impl.c"
        $result=$46; //@line 1556 "xmltok_impl.c"
        var $47=$result; //@line 1557 "xmltok_impl.c"
        var $48=($47) > 1114111; //@line 1557 "xmltok_impl.c"
        if ($48) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1557 "xmltok_impl.c"
      case 12: // $bb13
        $1=-1; //@line 1558 "xmltok_impl.c"
        __label__ = 23; break; //@line 1558 "xmltok_impl.c"
      case 13: // $bb14
        var $49=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $50=$49+1; //@line 1553 "xmltok_impl.c"
        $ptr_addr=$50; //@line 1553 "xmltok_impl.c"
        __label__ = 14; break; //@line 1553 "xmltok_impl.c"
      case 14: // $bb15
        var $51=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 1553 "xmltok_impl.c"
        var $53=($52)!=59; //@line 1553 "xmltok_impl.c"
        if ($53) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 1553 "xmltok_impl.c"
      case 15: // $bb16
        var $54=$result; //@line 1561 "xmltok_impl.c"
        $result_addr_i=$54;
        var $55=$result_addr_i; //@line 1168 "xmltok.c"
        var $56=($55) >> 8; //@line 1168 "xmltok.c"
        if ($56 == 0) {
          __label__ = 17; break;
        }
        else if ($56 == 216) {
          __label__ = 16; break;
        }
        else if ($56 == 217) {
          __label__ = 16; break;
        }
        else if ($56 == 218) {
          __label__ = 16; break;
        }
        else if ($56 == 219) {
          __label__ = 16; break;
        }
        else if ($56 == 220) {
          __label__ = 16; break;
        }
        else if ($56 == 221) {
          __label__ = 16; break;
        }
        else if ($56 == 222) {
          __label__ = 16; break;
        }
        else if ($56 == 223) {
          __label__ = 16; break;
        }
        else if ($56 == 255) {
          __label__ = 19; break;
        }
        else {
        __label__ = 21; break;
        }
        
      case 16: // $bb_i
        $0=-1; //@line 1171 "xmltok.c"
        __label__ = 22; break; //@line 1171 "xmltok.c"
      case 17: // $bb1_i
        var $57=$result_addr_i; //@line 1173 "xmltok.c"
        var $58=_latin1_encoding+72+$57; //@line 1173 "xmltok.c"
        var $59=HEAP[$58]; //@line 1173 "xmltok.c"
        var $60=($59)==0; //@line 1173 "xmltok.c"
        if ($60) { __label__ = 18; break; } else { __label__ = 21; break; } //@line 1173 "xmltok.c"
      case 18: // $bb2_i
        $0=-1; //@line 1174 "xmltok.c"
        __label__ = 22; break; //@line 1174 "xmltok.c"
      case 19: // $bb4_i
        var $61=$result_addr_i; //@line 1177 "xmltok.c"
        var $62=($61)==65534; //@line 1177 "xmltok.c"
        var $63=$result_addr_i; //@line 1177 "xmltok.c"
        var $64=($63)==65535; //@line 1177 "xmltok.c"
        var $or_cond_i=($62) | ($64);
        if ($or_cond_i) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1177 "xmltok.c"
      case 20: // $bb6_i
        $0=-1; //@line 1178 "xmltok.c"
        __label__ = 22; break; //@line 1178 "xmltok.c"
      case 21: // $bb7_i
        var $65=$result_addr_i; //@line 1181 "xmltok.c"
        $0=$65; //@line 1181 "xmltok.c"
        __label__ = 22; break; //@line 1181 "xmltok.c"
      case 22: // $checkCharRefNumber_exit
        var $66=$0; //@line 1171 "xmltok.c"
        $retval_i=$66; //@line 1171 "xmltok.c"
        var $retval9_i=$retval_i; //@line 1171 "xmltok.c"
        $1=$retval9_i; //@line 1561 "xmltok_impl.c"
        __label__ = 23; break; //@line 1561 "xmltok_impl.c"
      case 23: // $bb17
        var $67=$1; //@line 1549 "xmltok_impl.c"
        $retval=$67; //@line 1549 "xmltok_impl.c"
        var $retval18=$retval; //@line 1549 "xmltok_impl.c"
        ;
        return $retval18; //@line 1549 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_predefinedEntityName($enc, $ptr, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        var $1=$end_addr; //@line 1568 "xmltok_impl.c"
        var $2=($1); //@line 1568 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1568 "xmltok_impl.c"
        var $4=($3); //@line 1568 "xmltok_impl.c"
        var $5=($2) - ($4); //@line 1568 "xmltok_impl.c"
        if ($5 == 2) {
          __label__ = 1; break;
        }
        else if ($5 == 3) {
          __label__ = 5; break;
        }
        else if ($5 == 4) {
          __label__ = 9; break;
        }
        else {
        __label__ = 18; break;
        }
        
      case 1: // $bb
        var $6=$ptr_addr; //@line 1570 "xmltok_impl.c"
        var $7=$6+1; //@line 1570 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1570 "xmltok_impl.c"
        var $9=($8)==116; //@line 1570 "xmltok_impl.c"
        if ($9) { __label__ = 2; break; } else { __label__ = 18; break; } //@line 1570 "xmltok_impl.c"
      case 2: // $bb1
        var $10=$ptr_addr; //@line 1571 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 1571 "xmltok_impl.c"
        var $12=($11); //@line 1571 "xmltok_impl.c"
        if ($12 == 103) {
          __label__ = 4; break;
        }
        else if ($12 == 108) {
          __label__ = 3; break;
        }
        else {
        __label__ = 18; break;
        }
        
      case 3: // $bb2
        $0=60; //@line 1573 "xmltok_impl.c"
        __label__ = 19; break; //@line 1573 "xmltok_impl.c"
      case 4: // $bb3
        $0=62; //@line 1575 "xmltok_impl.c"
        __label__ = 19; break; //@line 1575 "xmltok_impl.c"
      case 5: // $bb5
        var $13=$ptr_addr; //@line 1580 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1580 "xmltok_impl.c"
        var $15=($14)==97; //@line 1580 "xmltok_impl.c"
        if ($15) { __label__ = 6; break; } else { __label__ = 18; break; } //@line 1580 "xmltok_impl.c"
      case 6: // $bb6
        var $16=$ptr_addr; //@line 1581 "xmltok_impl.c"
        var $17=$16+1; //@line 1581 "xmltok_impl.c"
        $ptr_addr=$17; //@line 1581 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 1582 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1582 "xmltok_impl.c"
        var $20=($19)==109; //@line 1582 "xmltok_impl.c"
        if ($20) { __label__ = 7; break; } else { __label__ = 18; break; } //@line 1582 "xmltok_impl.c"
      case 7: // $bb7
        var $21=$ptr_addr; //@line 1583 "xmltok_impl.c"
        var $22=$21+1; //@line 1583 "xmltok_impl.c"
        $ptr_addr=$22; //@line 1583 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 1584 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 1584 "xmltok_impl.c"
        var $25=($24)==112; //@line 1584 "xmltok_impl.c"
        if ($25) { __label__ = 8; break; } else { __label__ = 18; break; } //@line 1584 "xmltok_impl.c"
      case 8: // $bb8
        $0=38; //@line 1585 "xmltok_impl.c"
        __label__ = 19; break; //@line 1585 "xmltok_impl.c"
      case 9: // $bb10
        var $26=$ptr_addr; //@line 1590 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 1590 "xmltok_impl.c"
        var $28=($27); //@line 1590 "xmltok_impl.c"
        if ($28 == 97) {
          __label__ = 14; break;
        }
        else if ($28 == 113) {
          __label__ = 10; break;
        }
        else {
        __label__ = 18; break;
        }
        
      case 10: // $bb11
        var $29=$ptr_addr; //@line 1592 "xmltok_impl.c"
        var $30=$29+1; //@line 1592 "xmltok_impl.c"
        $ptr_addr=$30; //@line 1592 "xmltok_impl.c"
        var $31=$ptr_addr; //@line 1593 "xmltok_impl.c"
        var $32=HEAP[$31]; //@line 1593 "xmltok_impl.c"
        var $33=($32)==117; //@line 1593 "xmltok_impl.c"
        if ($33) { __label__ = 11; break; } else { __label__ = 18; break; } //@line 1593 "xmltok_impl.c"
      case 11: // $bb12
        var $34=$ptr_addr; //@line 1594 "xmltok_impl.c"
        var $35=$34+1; //@line 1594 "xmltok_impl.c"
        $ptr_addr=$35; //@line 1594 "xmltok_impl.c"
        var $36=$ptr_addr; //@line 1595 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 1595 "xmltok_impl.c"
        var $38=($37)==111; //@line 1595 "xmltok_impl.c"
        if ($38) { __label__ = 12; break; } else { __label__ = 18; break; } //@line 1595 "xmltok_impl.c"
      case 12: // $bb13
        var $39=$ptr_addr; //@line 1596 "xmltok_impl.c"
        var $40=$39+1; //@line 1596 "xmltok_impl.c"
        $ptr_addr=$40; //@line 1596 "xmltok_impl.c"
        var $41=$ptr_addr; //@line 1597 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 1597 "xmltok_impl.c"
        var $43=($42)==116; //@line 1597 "xmltok_impl.c"
        if ($43) { __label__ = 13; break; } else { __label__ = 18; break; } //@line 1597 "xmltok_impl.c"
      case 13: // $bb14
        $0=34; //@line 1598 "xmltok_impl.c"
        __label__ = 19; break; //@line 1598 "xmltok_impl.c"
      case 14: // $bb16
        var $44=$ptr_addr; //@line 1603 "xmltok_impl.c"
        var $45=$44+1; //@line 1603 "xmltok_impl.c"
        $ptr_addr=$45; //@line 1603 "xmltok_impl.c"
        var $46=$ptr_addr; //@line 1604 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 1604 "xmltok_impl.c"
        var $48=($47)==112; //@line 1604 "xmltok_impl.c"
        if ($48) { __label__ = 15; break; } else { __label__ = 18; break; } //@line 1604 "xmltok_impl.c"
      case 15: // $bb17
        var $49=$ptr_addr; //@line 1605 "xmltok_impl.c"
        var $50=$49+1; //@line 1605 "xmltok_impl.c"
        $ptr_addr=$50; //@line 1605 "xmltok_impl.c"
        var $51=$ptr_addr; //@line 1606 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 1606 "xmltok_impl.c"
        var $53=($52)==111; //@line 1606 "xmltok_impl.c"
        if ($53) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 1606 "xmltok_impl.c"
      case 16: // $bb18
        var $54=$ptr_addr; //@line 1607 "xmltok_impl.c"
        var $55=$54+1; //@line 1607 "xmltok_impl.c"
        $ptr_addr=$55; //@line 1607 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 1608 "xmltok_impl.c"
        var $57=HEAP[$56]; //@line 1608 "xmltok_impl.c"
        var $58=($57)==115; //@line 1608 "xmltok_impl.c"
        if ($58) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1608 "xmltok_impl.c"
      case 17: // $bb19
        $0=39; //@line 1609 "xmltok_impl.c"
        __label__ = 19; break; //@line 1609 "xmltok_impl.c"
      case 18: // $bb20
        $0=0; //@line 1615 "xmltok_impl.c"
        __label__ = 19; break; //@line 1615 "xmltok_impl.c"
      case 19: // $bb21
        var $59=$0; //@line 1573 "xmltok_impl.c"
        $retval=$59; //@line 1573 "xmltok_impl.c"
        var $retval22=$retval; //@line 1573 "xmltok_impl.c"
        ;
        return $retval22; //@line 1573 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_sameName($enc, $ptr1, $ptr2) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr1_addr;
        var $ptr2_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $ptr2_addr=$ptr2;
        __label__ = 1; break; //@line 1620 "xmltok.c"
      case 1: // $bb
        var $1=$enc_addr; //@line 1622 "xmltok_impl.c"
        var $2=$1; //@line 1622 "xmltok_impl.c"
        var $3=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 1622 "xmltok_impl.c"
        var $5=($4); //@line 1622 "xmltok_impl.c"
        var $6=$2+72; //@line 1622 "xmltok_impl.c"
        var $7=$6+$5; //@line 1622 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1622 "xmltok_impl.c"
        var $9=($8); //@line 1622 "xmltok_impl.c"
        if ($9 == 5) {
          __label__ = 6; break;
        }
        else if ($9 == 6) {
          __label__ = 4; break;
        }
        else if ($9 == 7) {
          __label__ = 2; break;
        }
        else if ($9 == 22) {
          __label__ = 10; break;
        }
        else if ($9 == 24) {
          __label__ = 10; break;
        }
        else if ($9 == 25) {
          __label__ = 10; break;
        }
        else if ($9 == 26) {
          __label__ = 10; break;
        }
        else if ($9 == 27) {
          __label__ = 10; break;
        }
        else if ($9 == 29) {
          __label__ = 10; break;
        }
        else {
        __label__ = 12; break;
        }
        
      case 2: // $bb1
        var $10=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 1627 "xmltok_impl.c"
        var $12=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 1627 "xmltok_impl.c"
        var $14=($11)!=($13); //@line 1627 "xmltok_impl.c"
        var $15=($14); //@line 1627 "xmltok_impl.c"
        var $16=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $17=$16+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$17; //@line 1627 "xmltok_impl.c"
        var $18=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $19=$18+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$19; //@line 1627 "xmltok_impl.c"
        var $toBool=($15)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1627 "xmltok_impl.c"
      case 3: // $bb2
        $0=0; //@line 1627 "xmltok_impl.c"
        __label__ = 17; break; //@line 1627 "xmltok_impl.c"
      case 4: // $bb3
        var $20=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 1627 "xmltok_impl.c"
        var $22=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1627 "xmltok_impl.c"
        var $24=($21)!=($23); //@line 1627 "xmltok_impl.c"
        var $25=($24); //@line 1627 "xmltok_impl.c"
        var $26=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $27=$26+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$27; //@line 1627 "xmltok_impl.c"
        var $28=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $29=$28+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$29; //@line 1627 "xmltok_impl.c"
        var $toBool4=($25)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool4) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1627 "xmltok_impl.c"
      case 5: // $bb5
        $0=0; //@line 1627 "xmltok_impl.c"
        __label__ = 17; break; //@line 1627 "xmltok_impl.c"
      case 6: // $bb6
        var $30=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $31=HEAP[$30]; //@line 1627 "xmltok_impl.c"
        var $32=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 1627 "xmltok_impl.c"
        var $34=($31)!=($33); //@line 1627 "xmltok_impl.c"
        var $35=($34); //@line 1627 "xmltok_impl.c"
        var $36=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $37=$36+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$37; //@line 1627 "xmltok_impl.c"
        var $38=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $39=$38+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$39; //@line 1627 "xmltok_impl.c"
        var $toBool7=($35)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool7) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1627 "xmltok_impl.c"
      case 7: // $bb8
        $0=0; //@line 1627 "xmltok_impl.c"
        __label__ = 17; break; //@line 1627 "xmltok_impl.c"
      case 8: // $bb9
        var $40=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 1630 "xmltok_impl.c"
        var $42=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $43=HEAP[$42]; //@line 1630 "xmltok_impl.c"
        var $44=($41)!=($43); //@line 1630 "xmltok_impl.c"
        var $45=($44); //@line 1630 "xmltok_impl.c"
        var $46=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $47=$46+1; //@line 1630 "xmltok_impl.c"
        $ptr1_addr=$47; //@line 1630 "xmltok_impl.c"
        var $48=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $49=$48+1; //@line 1630 "xmltok_impl.c"
        $ptr2_addr=$49; //@line 1630 "xmltok_impl.c"
        var $toBool10=($45)!=0; //@line 1630 "xmltok_impl.c"
        if ($toBool10) { __label__ = 9; break; } else { __label__ = 1; break; } //@line 1630 "xmltok_impl.c"
      case 9: // $bb11
        $0=0; //@line 1631 "xmltok_impl.c"
        __label__ = 17; break; //@line 1631 "xmltok_impl.c"
      case 10: // $bb13
        var $50=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 1642 "xmltok_impl.c"
        var $52=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $53=HEAP[$52]; //@line 1642 "xmltok_impl.c"
        var $54=($51)!=($53); //@line 1642 "xmltok_impl.c"
        var $55=($54); //@line 1642 "xmltok_impl.c"
        var $56=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $57=$56+1; //@line 1642 "xmltok_impl.c"
        $ptr2_addr=$57; //@line 1642 "xmltok_impl.c"
        var $58=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $59=$58+1; //@line 1642 "xmltok_impl.c"
        $ptr1_addr=$59; //@line 1642 "xmltok_impl.c"
        var $toBool14=($55)!=0; //@line 1642 "xmltok_impl.c"
        if ($toBool14) { __label__ = 11; break; } else { __label__ = 1; break; } //@line 1642 "xmltok_impl.c"
      case 11: // $bb15
        $0=0; //@line 1643 "xmltok_impl.c"
        __label__ = 17; break; //@line 1643 "xmltok_impl.c"
      case 12: // $bb17
        var $60=$ptr1_addr; //@line 1658 "xmltok_impl.c"
        var $61=HEAP[$60]; //@line 1658 "xmltok_impl.c"
        var $62=$ptr2_addr; //@line 1658 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 1658 "xmltok_impl.c"
        var $64=($61)==($63); //@line 1658 "xmltok_impl.c"
        if ($64) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1658 "xmltok_impl.c"
      case 13: // $bb18
        $0=1; //@line 1659 "xmltok_impl.c"
        __label__ = 17; break; //@line 1659 "xmltok_impl.c"
      case 14: // $bb19
        var $65=$enc_addr; //@line 1660 "xmltok_impl.c"
        var $66=$65; //@line 1660 "xmltok_impl.c"
        var $67=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $68=HEAP[$67]; //@line 1660 "xmltok_impl.c"
        var $69=($68); //@line 1660 "xmltok_impl.c"
        var $70=$66+72; //@line 1660 "xmltok_impl.c"
        var $71=$70+$69; //@line 1660 "xmltok_impl.c"
        var $72=HEAP[$71]; //@line 1660 "xmltok_impl.c"
        var $73=($72); //@line 1660 "xmltok_impl.c"
        if ($73 == 5) {
          __label__ = 15; break;
        }
        else if ($73 == 6) {
          __label__ = 15; break;
        }
        else if ($73 == 7) {
          __label__ = 15; break;
        }
        else if ($73 == 22) {
          __label__ = 15; break;
        }
        else if ($73 == 24) {
          __label__ = 15; break;
        }
        else if ($73 == 25) {
          __label__ = 15; break;
        }
        else if ($73 == 26) {
          __label__ = 15; break;
        }
        else if ($73 == 27) {
          __label__ = 15; break;
        }
        else if ($73 == 29) {
          __label__ = 15; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 15: // $bb20
        $0=0; //@line 1673 "xmltok_impl.c"
        __label__ = 17; break; //@line 1673 "xmltok_impl.c"
      case 16: // $bb21
        $0=1; //@line 1675 "xmltok_impl.c"
        __label__ = 17; break; //@line 1675 "xmltok_impl.c"
      case 17: // $bb23
        var $74=$0; //@line 1627 "xmltok_impl.c"
        $retval=$74; //@line 1627 "xmltok_impl.c"
        var $retval24=$retval; //@line 1627 "xmltok_impl.c"
        ;
        return $retval24; //@line 1627 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_nameMatchesAscii($enc, $ptr1, $end1, $ptr2) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr1_addr;
        var $end1_addr;
        var $ptr2_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $end1_addr=$end1;
        $ptr2_addr=$ptr2;
        __label__ = 6; break; //@line 1686 "xmltok_impl.c"
      case 1: // $bb
        if ($15) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1687 "xmltok_impl.c"
      case 2: // $bb1
        $0=0; //@line 1688 "xmltok_impl.c"
        __label__ = 8; break; //@line 1688 "xmltok_impl.c"
      case 3: // $bb2
        var $1=$ptr1_addr; //@line 1689 "xmltok_impl.c"
        var $2=HEAP[$1]; //@line 1689 "xmltok_impl.c"
        var $3=$ptr2_addr; //@line 1689 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 1689 "xmltok_impl.c"
        var $5=($2)!=($4); //@line 1689 "xmltok_impl.c"
        if ($5) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1689 "xmltok_impl.c"
      case 4: // $bb3
        $0=0; //@line 1690 "xmltok_impl.c"
        __label__ = 8; break; //@line 1690 "xmltok_impl.c"
      case 5: // $bb4
        var $6=$ptr1_addr; //@line 1686 "xmltok_impl.c"
        var $7=$6+1; //@line 1686 "xmltok_impl.c"
        $ptr1_addr=$7; //@line 1686 "xmltok_impl.c"
        var $8=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $9=$8+1; //@line 1686 "xmltok_impl.c"
        $ptr2_addr=$9; //@line 1686 "xmltok_impl.c"
        __label__ = 6; break; //@line 1686 "xmltok_impl.c"
      case 6: // $bb5
        var $10=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 1686 "xmltok_impl.c"
        var $12=($11)!=0; //@line 1686 "xmltok_impl.c"
        var $13=$ptr1_addr; //@line 1687 "xmltok_impl.c"
        var $14=$end1_addr; //@line 1687 "xmltok_impl.c"
        var $15=($13)==($14); //@line 1687 "xmltok_impl.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 7; break; } //@line 1686 "xmltok_impl.c"
      case 7: // $bb6
        var $16=($15); //@line 1692 "xmltok_impl.c"
        $0=$16; //@line 1692 "xmltok_impl.c"
        __label__ = 8; break; //@line 1692 "xmltok_impl.c"
      case 8: // $bb7
        var $17=$0; //@line 1688 "xmltok_impl.c"
        $retval=$17; //@line 1688 "xmltok_impl.c"
        var $retval8=$retval; //@line 1688 "xmltok_impl.c"
        ;
        return $retval8; //@line 1688 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_nameLength($enc, $ptr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $0;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        var $1=$ptr_addr; //@line 1698 "xmltok_impl.c"
        $start=$1; //@line 1698 "xmltok_impl.c"
        __label__ = 1; break; //@line 1698 "xmltok_impl.c"
      case 1: // $bb
        var $2=$enc_addr; //@line 1700 "xmltok_impl.c"
        var $3=$2; //@line 1700 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1700 "xmltok_impl.c"
        var $6=($5); //@line 1700 "xmltok_impl.c"
        var $7=$3+72; //@line 1700 "xmltok_impl.c"
        var $8=$7+$6; //@line 1700 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1700 "xmltok_impl.c"
        var $10=($9); //@line 1700 "xmltok_impl.c"
        if ($10 == 5) {
          __label__ = 2; break;
        }
        else if ($10 == 6) {
          __label__ = 3; break;
        }
        else if ($10 == 7) {
          __label__ = 4; break;
        }
        else if ($10 == 22) {
          __label__ = 5; break;
        }
        else if ($10 == 24) {
          __label__ = 5; break;
        }
        else if ($10 == 25) {
          __label__ = 5; break;
        }
        else if ($10 == 26) {
          __label__ = 5; break;
        }
        else if ($10 == 27) {
          __label__ = 5; break;
        }
        else if ($10 == 29) {
          __label__ = 5; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 2: // $bb1
        var $11=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $12=$11+2; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$12; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 3: // $bb2
        var $13=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $14=$13+3; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$14; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 4: // $bb3
        var $15=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $16=$15+4; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$16; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 5: // $bb4
        var $17=$ptr_addr; //@line 1714 "xmltok_impl.c"
        var $18=$17+1; //@line 1714 "xmltok_impl.c"
        $ptr_addr=$18; //@line 1714 "xmltok_impl.c"
        __label__ = 1; break; //@line 1714 "xmltok_impl.c"
      case 6: // $bb5
        var $19=$ptr_addr; //@line 1717 "xmltok_impl.c"
        var $20=($19); //@line 1717 "xmltok_impl.c"
        var $21=$start; //@line 1717 "xmltok_impl.c"
        var $22=($21); //@line 1717 "xmltok_impl.c"
        var $23=($20) - ($22); //@line 1717 "xmltok_impl.c"
        $0=$23; //@line 1717 "xmltok_impl.c"
        var $24=$0; //@line 1717 "xmltok_impl.c"
        $retval=$24; //@line 1717 "xmltok_impl.c"
        var $retval7=$retval; //@line 1717 "xmltok_impl.c"
        ;
        return $retval7; //@line 1717 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_skipS($enc, $ptr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        __label__ = 1; break; //@line 1724 "xmltok.c"
      case 1: // $bb
        var $1=$enc_addr; //@line 1726 "xmltok_impl.c"
        var $2=$1; //@line 1726 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 1726 "xmltok_impl.c"
        var $5=($4); //@line 1726 "xmltok_impl.c"
        var $6=$2+72; //@line 1726 "xmltok_impl.c"
        var $7=$6+$5; //@line 1726 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1726 "xmltok_impl.c"
        var $9=($8); //@line 1726 "xmltok_impl.c"
        if ($9 == 9) {
          __label__ = 2; break;
        }
        else if ($9 == 10) {
          __label__ = 2; break;
        }
        else if ($9 == 21) {
          __label__ = 2; break;
        }
        else {
        __label__ = 3; break;
        }
        
      case 2: // $bb1
        var $10=$ptr_addr; //@line 1730 "xmltok_impl.c"
        var $11=$10+1; //@line 1730 "xmltok_impl.c"
        $ptr_addr=$11; //@line 1730 "xmltok_impl.c"
        __label__ = 1; break; //@line 1730 "xmltok_impl.c"
      case 3: // $bb2
        var $12=$ptr_addr; //@line 1733 "xmltok_impl.c"
        $0=$12; //@line 1733 "xmltok_impl.c"
        var $13=$0; //@line 1733 "xmltok_impl.c"
        $retval=$13; //@line 1733 "xmltok_impl.c"
        var $retval3=$retval; //@line 1733 "xmltok_impl.c"
        ;
        return $retval3; //@line 1733 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _normal_updatePosition($enc, $ptr, $end, $pos) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $pos_addr;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $pos_addr=$pos;
        var $0=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $1=$end_addr; //@line 1744 "xmltok_impl.c"
        var $2=($0) < ($1); //@line 1744 "xmltok_impl.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 1744 "xmltok_impl.c"
      case 1: // $bb
        var $3=$enc_addr; //@line 1745 "xmltok_impl.c"
        var $4=$3; //@line 1745 "xmltok_impl.c"
        var $5=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $6=HEAP[$5]; //@line 1745 "xmltok_impl.c"
        var $7=($6); //@line 1745 "xmltok_impl.c"
        var $8=$4+72; //@line 1745 "xmltok_impl.c"
        var $9=$8+$7; //@line 1745 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1745 "xmltok_impl.c"
        var $11=($10); //@line 1745 "xmltok_impl.c"
        if ($11 == 5) {
          __label__ = 2; break;
        }
        else if ($11 == 6) {
          __label__ = 3; break;
        }
        else if ($11 == 7) {
          __label__ = 4; break;
        }
        else if ($11 == 9) {
          __label__ = 6; break;
        }
        else if ($11 == 10) {
          __label__ = 5; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 2: // $bb1
        var $12=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $13=$12+2; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$13; //@line 1750 "xmltok_impl.c"
        __label__ = 11; break; //@line 1750 "xmltok_impl.c"
      case 3: // $bb2
        var $14=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $15=$14+3; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$15; //@line 1750 "xmltok_impl.c"
        __label__ = 11; break; //@line 1750 "xmltok_impl.c"
      case 4: // $bb3
        var $16=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $17=$16+4; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$17; //@line 1750 "xmltok_impl.c"
        __label__ = 11; break; //@line 1750 "xmltok_impl.c"
      case 5: // $bb4
        var $18=$pos_addr; //@line 1753 "xmltok_impl.c"
        var $19=$18+4; //@line 1753 "xmltok_impl.c"
        HEAP[$19]=-1; //@line 1753 "xmltok_impl.c"
        var $20=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $21=$20; //@line 1754 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1754 "xmltok_impl.c"
        var $23=($22) + 1; //@line 1754 "xmltok_impl.c"
        var $24=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $25=$24; //@line 1754 "xmltok_impl.c"
        HEAP[$25]=$23; //@line 1754 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 1755 "xmltok_impl.c"
        var $27=$26+1; //@line 1755 "xmltok_impl.c"
        $ptr_addr=$27; //@line 1755 "xmltok_impl.c"
        __label__ = 11; break; //@line 1755 "xmltok_impl.c"
      case 6: // $bb5
        var $28=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $29=$28; //@line 1758 "xmltok_impl.c"
        var $30=HEAP[$29]; //@line 1758 "xmltok_impl.c"
        var $31=($30) + 1; //@line 1758 "xmltok_impl.c"
        var $32=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $33=$32; //@line 1758 "xmltok_impl.c"
        HEAP[$33]=$31; //@line 1758 "xmltok_impl.c"
        var $34=$ptr_addr; //@line 1759 "xmltok_impl.c"
        var $35=$34+1; //@line 1759 "xmltok_impl.c"
        $ptr_addr=$35; //@line 1759 "xmltok_impl.c"
        var $36=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $37=$end_addr; //@line 1760 "xmltok_impl.c"
        var $38=($36)!=($37); //@line 1760 "xmltok_impl.c"
        if ($38) { __label__ = 7; break; } else { __label__ = 9; break; } //@line 1760 "xmltok_impl.c"
      case 7: // $bb6
        var $39=$enc_addr; //@line 1760 "xmltok_impl.c"
        var $40=$39; //@line 1760 "xmltok_impl.c"
        var $41=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 1760 "xmltok_impl.c"
        var $43=($42); //@line 1760 "xmltok_impl.c"
        var $44=$40+72; //@line 1760 "xmltok_impl.c"
        var $45=$44+$43; //@line 1760 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 1760 "xmltok_impl.c"
        var $47=($46)==10; //@line 1760 "xmltok_impl.c"
        if ($47) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1760 "xmltok_impl.c"
      case 8: // $bb7
        var $48=$ptr_addr; //@line 1761 "xmltok_impl.c"
        var $49=$48+1; //@line 1761 "xmltok_impl.c"
        $ptr_addr=$49; //@line 1761 "xmltok_impl.c"
        __label__ = 9; break; //@line 1761 "xmltok_impl.c"
      case 9: // $bb8
        var $50=$pos_addr; //@line 1762 "xmltok_impl.c"
        var $51=$50+4; //@line 1762 "xmltok_impl.c"
        HEAP[$51]=-1; //@line 1762 "xmltok_impl.c"
        __label__ = 11; break; //@line 1762 "xmltok_impl.c"
      case 10: // $bb9
        var $52=$ptr_addr; //@line 1765 "xmltok_impl.c"
        var $53=$52+1; //@line 1765 "xmltok_impl.c"
        $ptr_addr=$53; //@line 1765 "xmltok_impl.c"
        __label__ = 11; break; //@line 1765 "xmltok_impl.c"
      case 11: // $bb10
        var $54=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $55=$54+4; //@line 1768 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 1768 "xmltok_impl.c"
        var $57=($56) + 1; //@line 1768 "xmltok_impl.c"
        var $58=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $59=$58+4; //@line 1768 "xmltok_impl.c"
        HEAP[$59]=$57; //@line 1768 "xmltok_impl.c"
        var $60=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $61=$end_addr; //@line 1744 "xmltok_impl.c"
        var $62=($60) < ($61); //@line 1744 "xmltok_impl.c"
        if ($62) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 1744 "xmltok_impl.c"
      case 12: // $return
        ;
        return; //@line 1770 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _utf8_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $to;
        var $from;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$fromLim_addr; //@line 324 "xmltok.c"
        var $1=($0); //@line 324 "xmltok.c"
        var $2=$fromP_addr; //@line 324 "xmltok.c"
        var $3=HEAP[$2]; //@line 324 "xmltok.c"
        var $4=($3); //@line 324 "xmltok.c"
        var $5=($1) - ($4); //@line 324 "xmltok.c"
        var $6=$toLim_addr; //@line 324 "xmltok.c"
        var $7=($6); //@line 324 "xmltok.c"
        var $8=$toP_addr; //@line 324 "xmltok.c"
        var $9=HEAP[$8]; //@line 324 "xmltok.c"
        var $10=($9); //@line 324 "xmltok.c"
        var $11=($7) - ($10); //@line 324 "xmltok.c"
        var $12=($5) > ($11); //@line 324 "xmltok.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 324 "xmltok.c"
      case 1: // $bb
        var $13=$fromP_addr; //@line 326 "xmltok.c"
        var $14=HEAP[$13]; //@line 326 "xmltok.c"
        var $15=$toLim_addr; //@line 326 "xmltok.c"
        var $16=($15); //@line 326 "xmltok.c"
        var $17=$toP_addr; //@line 326 "xmltok.c"
        var $18=HEAP[$17]; //@line 326 "xmltok.c"
        var $19=($18); //@line 326 "xmltok.c"
        var $20=($16) - ($19); //@line 326 "xmltok.c"
        var $21=$14+$20; //@line 326 "xmltok.c"
        $fromLim_addr=$21; //@line 326 "xmltok.c"
        __label__ = 4; break; //@line 326 "xmltok.c"
      case 2: // $bb1
        var $22=$fromLim_addr; //@line 327 "xmltok.c"
        var $23=$22+-1; //@line 327 "xmltok.c"
        var $24=HEAP[$23]; //@line 327 "xmltok.c"
        var $25=($24); //@line 327 "xmltok.c"
        var $26=($25) & 192; //@line 327 "xmltok.c"
        var $27=($26)!=128; //@line 327 "xmltok.c"
        if ($27) { __label__ = 5; break; } else { __label__ = 3; break; } //@line 327 "xmltok.c"
      case 3: // $bb2
        var $28=$fromLim_addr; //@line 326 "xmltok.c"
        var $29=$28+-1; //@line 326 "xmltok.c"
        $fromLim_addr=$29; //@line 326 "xmltok.c"
        __label__ = 4; break; //@line 326 "xmltok.c"
      case 4: // $bb3
        var $30=$fromP_addr; //@line 326 "xmltok.c"
        var $31=HEAP[$30]; //@line 326 "xmltok.c"
        var $32=$fromLim_addr; //@line 326 "xmltok.c"
        var $33=($31) < ($32); //@line 326 "xmltok.c"
        if ($33) { __label__ = 2; break; } else { __label__ = 5; break; } //@line 326 "xmltok.c"
      case 5: // $bb4
        var $34=$toP_addr; //@line 330 "xmltok.c"
        var $35=HEAP[$34]; //@line 330 "xmltok.c"
        $to=$35; //@line 330 "xmltok.c"
        var $36=$fromP_addr; //@line 330 "xmltok.c"
        var $37=HEAP[$36]; //@line 330 "xmltok.c"
        $from=$37; //@line 330 "xmltok.c"
        var $38=$from; //@line 330 "xmltok.c"
        var $39=$fromLim_addr; //@line 330 "xmltok.c"
        var $40=($38)!=($39); //@line 330 "xmltok.c"
        if ($40) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 330 "xmltok.c"
      case 6: // $bb5
        var $41=$from; //@line 331 "xmltok.c"
        var $42=HEAP[$41]; //@line 331 "xmltok.c"
        var $43=$to; //@line 331 "xmltok.c"
        HEAP[$43]=$42; //@line 331 "xmltok.c"
        var $44=$from; //@line 330 "xmltok.c"
        var $45=$44+1; //@line 330 "xmltok.c"
        $from=$45; //@line 330 "xmltok.c"
        var $46=$to; //@line 330 "xmltok.c"
        var $47=$46+1; //@line 330 "xmltok.c"
        $to=$47; //@line 330 "xmltok.c"
        var $48=$from; //@line 330 "xmltok.c"
        var $49=$fromLim_addr; //@line 330 "xmltok.c"
        var $50=($48)!=($49); //@line 330 "xmltok.c"
        if ($50) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 330 "xmltok.c"
      case 7: // $bb7
        var $51=$fromP_addr; //@line 332 "xmltok.c"
        var $52=$from; //@line 332 "xmltok.c"
        HEAP[$51]=$52; //@line 332 "xmltok.c"
        var $53=$toP_addr; //@line 333 "xmltok.c"
        var $54=$to; //@line 333 "xmltok.c"
        HEAP[$53]=$54; //@line 333 "xmltok.c"
        ;
        return; //@line 334 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _utf8_toUtf16($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $to;
        var $from;
        var $n;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$toP_addr; //@line 341 "xmltok.c"
        var $1=HEAP[$0]; //@line 341 "xmltok.c"
        $to=$1; //@line 341 "xmltok.c"
        var $2=$fromP_addr; //@line 342 "xmltok.c"
        var $3=HEAP[$2]; //@line 342 "xmltok.c"
        $from=$3; //@line 342 "xmltok.c"
        __label__ = 7; break; //@line 342 "xmltok.c"
      case 1: // $bb
        var $4=$enc_addr; //@line 344 "xmltok.c"
        var $5=$4; //@line 344 "xmltok.c"
        var $6=$from; //@line 344 "xmltok.c"
        var $7=HEAP[$6]; //@line 344 "xmltok.c"
        var $8=($7); //@line 344 "xmltok.c"
        var $9=$5+72; //@line 344 "xmltok.c"
        var $10=$9+$8; //@line 344 "xmltok.c"
        var $11=HEAP[$10]; //@line 344 "xmltok.c"
        var $12=($11); //@line 344 "xmltok.c"
        if ($12 == 5) {
          __label__ = 2; break;
        }
        else if ($12 == 6) {
          __label__ = 3; break;
        }
        else if ($12 == 7) {
          __label__ = 4; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 2: // $bb1
        var $13=$from; //@line 346 "xmltok.c"
        var $14=$13; //@line 346 "xmltok.c"
        var $15=HEAP[$14]; //@line 346 "xmltok.c"
        var $16=($15); //@line 346 "xmltok.c"
        var $17=($16) & 31; //@line 346 "xmltok.c"
        var $18=($17) << 6; //@line 346 "xmltok.c"
        var $19=((($18)) & 65535); //@line 346 "xmltok.c"
        var $20=$from; //@line 346 "xmltok.c"
        var $21=$20+1; //@line 346 "xmltok.c"
        var $22=HEAP[$21]; //@line 346 "xmltok.c"
        var $23=($22); //@line 346 "xmltok.c"
        var $24=($23) & 63; //@line 346 "xmltok.c"
        var $25=($19) | ($24); //@line 346 "xmltok.c"
        var $26=$to; //@line 346 "xmltok.c"
        HEAP[$26]=$25; //@line 346 "xmltok.c"
        var $27=$to; //@line 346 "xmltok.c"
        var $28=$27+2; //@line 346 "xmltok.c"
        $to=$28; //@line 346 "xmltok.c"
        var $29=$from; //@line 347 "xmltok.c"
        var $30=$29+2; //@line 347 "xmltok.c"
        $from=$30; //@line 347 "xmltok.c"
        __label__ = 7; break; //@line 347 "xmltok.c"
      case 3: // $bb2
        var $31=$from; //@line 350 "xmltok.c"
        var $32=$31; //@line 350 "xmltok.c"
        var $33=HEAP[$32]; //@line 350 "xmltok.c"
        var $34=($33); //@line 350 "xmltok.c"
        var $35=($34) & 15; //@line 350 "xmltok.c"
        var $36=($35) << 12; //@line 350 "xmltok.c"
        var $37=((($36)) & 65535); //@line 350 "xmltok.c"
        var $38=$from; //@line 350 "xmltok.c"
        var $39=$38+1; //@line 350 "xmltok.c"
        var $40=HEAP[$39]; //@line 350 "xmltok.c"
        var $41=($40); //@line 350 "xmltok.c"
        var $42=($41) & 63; //@line 350 "xmltok.c"
        var $43=($42) << 6; //@line 350 "xmltok.c"
        var $44=((($43)) & 65535); //@line 350 "xmltok.c"
        var $45=$from; //@line 350 "xmltok.c"
        var $46=$45+2; //@line 350 "xmltok.c"
        var $47=HEAP[$46]; //@line 350 "xmltok.c"
        var $48=($47); //@line 350 "xmltok.c"
        var $49=($48) & 63; //@line 350 "xmltok.c"
        var $50=($49) | ($37); //@line 350 "xmltok.c"
        var $51=($50) | ($44); //@line 350 "xmltok.c"
        var $52=$to; //@line 350 "xmltok.c"
        HEAP[$52]=$51; //@line 350 "xmltok.c"
        var $53=$to; //@line 350 "xmltok.c"
        var $54=$53+2; //@line 350 "xmltok.c"
        $to=$54; //@line 350 "xmltok.c"
        var $55=$from; //@line 352 "xmltok.c"
        var $56=$55+3; //@line 352 "xmltok.c"
        $from=$56; //@line 352 "xmltok.c"
        __label__ = 7; break; //@line 352 "xmltok.c"
      case 4: // $bb3
        var $57=$to; //@line 357 "xmltok.c"
        var $58=$57+2; //@line 357 "xmltok.c"
        var $59=$toLim_addr; //@line 357 "xmltok.c"
        var $60=($58)==($59); //@line 357 "xmltok.c"
        if ($60) { __label__ = 9; break; } else { __label__ = 5; break; } //@line 357 "xmltok.c"
      case 5: // $bb4
        var $61=$from; //@line 359 "xmltok.c"
        var $62=$61; //@line 359 "xmltok.c"
        var $63=HEAP[$62]; //@line 359 "xmltok.c"
        var $64=($63); //@line 359 "xmltok.c"
        var $65=($64) & 7; //@line 359 "xmltok.c"
        var $66=($65) << 18; //@line 359 "xmltok.c"
        var $67=$from; //@line 359 "xmltok.c"
        var $68=$67+1; //@line 359 "xmltok.c"
        var $69=HEAP[$68]; //@line 359 "xmltok.c"
        var $70=($69); //@line 359 "xmltok.c"
        var $71=($70) & 63; //@line 359 "xmltok.c"
        var $72=($71) << 12; //@line 359 "xmltok.c"
        var $73=$from; //@line 359 "xmltok.c"
        var $74=$73+2; //@line 359 "xmltok.c"
        var $75=HEAP[$74]; //@line 359 "xmltok.c"
        var $76=($75); //@line 359 "xmltok.c"
        var $77=($76) & 63; //@line 359 "xmltok.c"
        var $78=($77) << 6; //@line 359 "xmltok.c"
        var $79=$from; //@line 359 "xmltok.c"
        var $80=$79+3; //@line 359 "xmltok.c"
        var $81=HEAP[$80]; //@line 359 "xmltok.c"
        var $82=($81); //@line 359 "xmltok.c"
        var $83=($82) & 63; //@line 359 "xmltok.c"
        var $84=($72) | ($66); //@line 359 "xmltok.c"
        var $85=($84) | ($78); //@line 359 "xmltok.c"
        var $86=($85) | ($83); //@line 359 "xmltok.c"
        $n=$86; //@line 359 "xmltok.c"
        var $87=$n; //@line 361 "xmltok.c"
        var $88=($87) - 65536; //@line 361 "xmltok.c"
        $n=$88; //@line 361 "xmltok.c"
        var $89=$n; //@line 362 "xmltok.c"
        var $90=($89) >>> 10; //@line 362 "xmltok.c"
        var $91=((($90)) & 65535); //@line 362 "xmltok.c"
        var $92=($91) | -10240; //@line 362 "xmltok.c"
        var $93=$to; //@line 362 "xmltok.c"
        var $94=$93; //@line 362 "xmltok.c"
        HEAP[$94]=$92; //@line 362 "xmltok.c"
        var $95=$n; //@line 363 "xmltok.c"
        var $96=((($95)) & 65535); //@line 363 "xmltok.c"
        var $97=($96) & 1023; //@line 363 "xmltok.c"
        var $98=($97) | -9216; //@line 363 "xmltok.c"
        var $99=$to; //@line 363 "xmltok.c"
        var $100=$99+2; //@line 363 "xmltok.c"
        HEAP[$100]=$98; //@line 363 "xmltok.c"
        var $101=$to; //@line 364 "xmltok.c"
        var $102=$101+4; //@line 364 "xmltok.c"
        $to=$102; //@line 364 "xmltok.c"
        var $103=$from; //@line 365 "xmltok.c"
        var $104=$103+4; //@line 365 "xmltok.c"
        $from=$104; //@line 365 "xmltok.c"
        __label__ = 7; break; //@line 365 "xmltok.c"
      case 6: // $bb5
        var $105=$from; //@line 369 "xmltok.c"
        var $106=HEAP[$105]; //@line 369 "xmltok.c"
        var $107=($106); //@line 369 "xmltok.c"
        var $108=$to; //@line 369 "xmltok.c"
        HEAP[$108]=$107; //@line 369 "xmltok.c"
        var $109=$to; //@line 369 "xmltok.c"
        var $110=$109+2; //@line 369 "xmltok.c"
        $to=$110; //@line 369 "xmltok.c"
        var $111=$from; //@line 369 "xmltok.c"
        var $112=$111+1; //@line 369 "xmltok.c"
        $from=$112; //@line 369 "xmltok.c"
        __label__ = 7; break; //@line 369 "xmltok.c"
      case 7: // $bb6
        var $113=$from; //@line 343 "xmltok.c"
        var $114=$fromLim_addr; //@line 343 "xmltok.c"
        var $115=($113)==($114); //@line 343 "xmltok.c"
        if ($115) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 343 "xmltok.c"
      case 8: // $bb7
        var $116=$to; //@line 343 "xmltok.c"
        var $117=$toLim_addr; //@line 343 "xmltok.c"
        var $118=($116)!=($117); //@line 343 "xmltok.c"
        if ($118) { __label__ = 1; break; } else { __label__ = 9; break; } //@line 343 "xmltok.c"
      case 9: // $after
        var $119=$fromP_addr; //@line 374 "xmltok.c"
        var $120=$from; //@line 374 "xmltok.c"
        HEAP[$119]=$120; //@line 374 "xmltok.c"
        var $121=$toP_addr; //@line 375 "xmltok.c"
        var $122=$to; //@line 375 "xmltok.c"
        HEAP[$121]=$122; //@line 375 "xmltok.c"
        ;
        return; //@line 376 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _latin1_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $c;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        __label__ = 1; break; //@line 428 "xmltok.c"
      case 1: // $bb
        var $0=$fromP_addr; //@line 431 "xmltok.c"
        var $1=HEAP[$0]; //@line 431 "xmltok.c"
        var $2=$fromLim_addr; //@line 431 "xmltok.c"
        var $3=($1)==($2); //@line 431 "xmltok.c"
        if ($3) { __label__ = 7; break; } else { __label__ = 2; break; } //@line 431 "xmltok.c"
      case 2: // $bb1
        var $4=$fromP_addr; //@line 433 "xmltok.c"
        var $5=HEAP[$4]; //@line 433 "xmltok.c"
        var $6=HEAP[$5]; //@line 433 "xmltok.c"
        $c=$6; //@line 433 "xmltok.c"
        var $7=$c; //@line 434 "xmltok.c"
        var $8=($7) < 0; //@line 434 "xmltok.c"
        if ($8) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 434 "xmltok.c"
      case 3: // $bb2
        var $9=$toLim_addr; //@line 435 "xmltok.c"
        var $10=($9); //@line 435 "xmltok.c"
        var $11=$toP_addr; //@line 435 "xmltok.c"
        var $12=HEAP[$11]; //@line 435 "xmltok.c"
        var $13=($12); //@line 435 "xmltok.c"
        var $14=($10) - ($13); //@line 435 "xmltok.c"
        var $15=($14) <= 1; //@line 435 "xmltok.c"
        if ($15) { __label__ = 7; break; } else { __label__ = 4; break; } //@line 435 "xmltok.c"
      case 4: // $bb3
        var $16=$toP_addr; //@line 437 "xmltok.c"
        var $17=HEAP[$16]; //@line 437 "xmltok.c"
        var $18=$c; //@line 437 "xmltok.c"
        var $19=($18) >>> 6; //@line 437 "xmltok.c"
        var $20=($19) | -64; //@line 437 "xmltok.c"
        HEAP[$17]=$20; //@line 437 "xmltok.c"
        var $21=$17+1; //@line 437 "xmltok.c"
        var $22=$toP_addr; //@line 437 "xmltok.c"
        HEAP[$22]=$21; //@line 437 "xmltok.c"
        var $23=$toP_addr; //@line 438 "xmltok.c"
        var $24=HEAP[$23]; //@line 438 "xmltok.c"
        var $25=$c; //@line 438 "xmltok.c"
        var $26=($25) & 63; //@line 438 "xmltok.c"
        var $27=($26) | -128; //@line 438 "xmltok.c"
        HEAP[$24]=$27; //@line 438 "xmltok.c"
        var $28=$24+1; //@line 438 "xmltok.c"
        var $29=$toP_addr; //@line 438 "xmltok.c"
        HEAP[$29]=$28; //@line 438 "xmltok.c"
        var $30=$fromP_addr; //@line 439 "xmltok.c"
        var $31=HEAP[$30]; //@line 439 "xmltok.c"
        var $32=$31+1; //@line 439 "xmltok.c"
        var $33=$fromP_addr; //@line 439 "xmltok.c"
        HEAP[$33]=$32; //@line 439 "xmltok.c"
        __label__ = 1; break; //@line 439 "xmltok.c"
      case 5: // $bb4
        var $34=$toP_addr; //@line 442 "xmltok.c"
        var $35=HEAP[$34]; //@line 442 "xmltok.c"
        var $36=$toLim_addr; //@line 442 "xmltok.c"
        var $37=($35)==($36); //@line 442 "xmltok.c"
        if ($37) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 442 "xmltok.c"
      case 6: // $bb5
        var $38=$toP_addr; //@line 444 "xmltok.c"
        var $39=HEAP[$38]; //@line 444 "xmltok.c"
        var $40=$fromP_addr; //@line 444 "xmltok.c"
        var $41=HEAP[$40]; //@line 444 "xmltok.c"
        var $42=HEAP[$41]; //@line 444 "xmltok.c"
        HEAP[$39]=$42; //@line 444 "xmltok.c"
        var $43=$39+1; //@line 444 "xmltok.c"
        var $44=$toP_addr; //@line 444 "xmltok.c"
        HEAP[$44]=$43; //@line 444 "xmltok.c"
        var $45=$41+1; //@line 444 "xmltok.c"
        var $46=$fromP_addr; //@line 444 "xmltok.c"
        HEAP[$46]=$45; //@line 444 "xmltok.c"
        __label__ = 1; break; //@line 444 "xmltok.c"
      case 7: // $return
        ;
        return; //@line 447 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _latin1_toUtf16($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        __label__ = 2; break; //@line 454 "xmltok.c"
      case 1: // $bb
        var $0=$toP_addr; //@line 455 "xmltok.c"
        var $1=HEAP[$0]; //@line 455 "xmltok.c"
        var $2=$fromP_addr; //@line 455 "xmltok.c"
        var $3=HEAP[$2]; //@line 455 "xmltok.c"
        var $4=HEAP[$3]; //@line 455 "xmltok.c"
        var $5=($4); //@line 455 "xmltok.c"
        HEAP[$1]=$5; //@line 455 "xmltok.c"
        var $6=$1+2; //@line 455 "xmltok.c"
        var $7=$toP_addr; //@line 455 "xmltok.c"
        HEAP[$7]=$6; //@line 455 "xmltok.c"
        var $8=$3+1; //@line 455 "xmltok.c"
        var $9=$fromP_addr; //@line 455 "xmltok.c"
        HEAP[$9]=$8; //@line 455 "xmltok.c"
        __label__ = 2; break; //@line 455 "xmltok.c"
      case 2: // $bb1
        var $10=$fromP_addr; //@line 454 "xmltok.c"
        var $11=HEAP[$10]; //@line 454 "xmltok.c"
        var $12=$fromLim_addr; //@line 454 "xmltok.c"
        var $13=($11)==($12); //@line 454 "xmltok.c"
        if ($13) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 454 "xmltok.c"
      case 3: // $bb2
        var $14=$toP_addr; //@line 454 "xmltok.c"
        var $15=HEAP[$14]; //@line 454 "xmltok.c"
        var $16=$toLim_addr; //@line 454 "xmltok.c"
        var $17=($15)!=($16); //@line 454 "xmltok.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 454 "xmltok.c"
      case 4: // $return
        ;
        return; //@line 456 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _ascii_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        __label__ = 2; break; //@line 487 "xmltok.c"
      case 1: // $bb
        var $0=$toP_addr; //@line 488 "xmltok.c"
        var $1=HEAP[$0]; //@line 488 "xmltok.c"
        var $2=$fromP_addr; //@line 488 "xmltok.c"
        var $3=HEAP[$2]; //@line 488 "xmltok.c"
        var $4=HEAP[$3]; //@line 488 "xmltok.c"
        HEAP[$1]=$4; //@line 488 "xmltok.c"
        var $5=$1+1; //@line 488 "xmltok.c"
        var $6=$toP_addr; //@line 488 "xmltok.c"
        HEAP[$6]=$5; //@line 488 "xmltok.c"
        var $7=$3+1; //@line 488 "xmltok.c"
        var $8=$fromP_addr; //@line 488 "xmltok.c"
        HEAP[$8]=$7; //@line 488 "xmltok.c"
        __label__ = 2; break; //@line 488 "xmltok.c"
      case 2: // $bb1
        var $9=$fromP_addr; //@line 487 "xmltok.c"
        var $10=HEAP[$9]; //@line 487 "xmltok.c"
        var $11=$fromLim_addr; //@line 487 "xmltok.c"
        var $12=($10)==($11); //@line 487 "xmltok.c"
        if ($12) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 487 "xmltok.c"
      case 3: // $bb2
        var $13=$toP_addr; //@line 487 "xmltok.c"
        var $14=HEAP[$13]; //@line 487 "xmltok.c"
        var $15=$toLim_addr; //@line 487 "xmltok.c"
        var $16=($14)!=($15); //@line 487 "xmltok.c"
        if ($16) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 487 "xmltok.c"
      case 4: // $return
        ;
        return; //@line 489 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $from;
        var $plane;
        var $lo2;
        var $lo;
        var $hi;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$fromP_addr; //@line 616 "xmltok.c"
        var $1=HEAP[$0]; //@line 616 "xmltok.c"
        $from=$1; //@line 616 "xmltok.c"
        __label__ = 16; break; //@line 616 "xmltok.c"
      case 1: // $bb
        var $2=$from; //@line 616 "xmltok.c"
        var $3=$2; //@line 616 "xmltok.c"
        var $4=HEAP[$3]; //@line 616 "xmltok.c"
        $lo=$4; //@line 616 "xmltok.c"
        var $5=$from; //@line 616 "xmltok.c"
        var $6=$5+1; //@line 616 "xmltok.c"
        var $7=HEAP[$6]; //@line 616 "xmltok.c"
        $hi=$7; //@line 616 "xmltok.c"
        var $8=$hi; //@line 616 "xmltok.c"
        var $9=($8); //@line 616 "xmltok.c"
        if ($9 == 0) {
          __label__ = 2; break;
        }
        else if ($9 == 1) {
          __label__ = 6; break;
        }
        else if ($9 == 2) {
          __label__ = 6; break;
        }
        else if ($9 == 3) {
          __label__ = 6; break;
        }
        else if ($9 == 4) {
          __label__ = 6; break;
        }
        else if ($9 == 5) {
          __label__ = 6; break;
        }
        else if ($9 == 6) {
          __label__ = 6; break;
        }
        else if ($9 == 7) {
          __label__ = 6; break;
        }
        else if ($9 == 216) {
          __label__ = 12; break;
        }
        else if ($9 == 217) {
          __label__ = 12; break;
        }
        else if ($9 == 218) {
          __label__ = 12; break;
        }
        else if ($9 == 219) {
          __label__ = 12; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 2: // $bb1
        var $10=$lo; //@line 616 "xmltok.c"
        var $11=($10) >= 0; //@line 616 "xmltok.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 616 "xmltok.c"
      case 3: // $bb2
        var $12=$toP_addr; //@line 616 "xmltok.c"
        var $13=HEAP[$12]; //@line 616 "xmltok.c"
        var $14=$toLim_addr; //@line 616 "xmltok.c"
        var $15=($13)==($14); //@line 616 "xmltok.c"
        if ($15) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 616 "xmltok.c"
      case 4: // $bb3
        var $16=$fromP_addr; //@line 616 "xmltok.c"
        var $17=$from; //@line 616 "xmltok.c"
        HEAP[$16]=$17; //@line 616 "xmltok.c"
        __label__ = 18; break; //@line 616 "xmltok.c"
      case 5: // $bb4
        var $18=$toP_addr; //@line 616 "xmltok.c"
        var $19=HEAP[$18]; //@line 616 "xmltok.c"
        var $20=$lo; //@line 616 "xmltok.c"
        HEAP[$19]=$20; //@line 616 "xmltok.c"
        var $21=$19+1; //@line 616 "xmltok.c"
        var $22=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$22]=$21; //@line 616 "xmltok.c"
        __label__ = 15; break; //@line 616 "xmltok.c"
      case 6: // $bb5
        var $23=$toLim_addr; //@line 616 "xmltok.c"
        var $24=($23); //@line 616 "xmltok.c"
        var $25=$toP_addr; //@line 616 "xmltok.c"
        var $26=HEAP[$25]; //@line 616 "xmltok.c"
        var $27=($26); //@line 616 "xmltok.c"
        var $28=($24) - ($27); //@line 616 "xmltok.c"
        var $29=($28) <= 1; //@line 616 "xmltok.c"
        if ($29) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 616 "xmltok.c"
      case 7: // $bb6
        var $30=$fromP_addr; //@line 616 "xmltok.c"
        var $31=$from; //@line 616 "xmltok.c"
        HEAP[$30]=$31; //@line 616 "xmltok.c"
        __label__ = 18; break; //@line 616 "xmltok.c"
      case 8: // $bb7
        var $32=$toP_addr; //@line 616 "xmltok.c"
        var $33=HEAP[$32]; //@line 616 "xmltok.c"
        var $34=$lo; //@line 616 "xmltok.c"
        var $35=($34) >>> 6; //@line 616 "xmltok.c"
        var $36=$hi; //@line 616 "xmltok.c"
        var $37=($36); //@line 616 "xmltok.c"
        var $38=($37) << 2; //@line 616 "xmltok.c"
        var $39=((($38)) & 255); //@line 616 "xmltok.c"
        var $40=($35) | -64; //@line 616 "xmltok.c"
        var $41=($40) | ($39); //@line 616 "xmltok.c"
        HEAP[$33]=$41; //@line 616 "xmltok.c"
        var $42=$33+1; //@line 616 "xmltok.c"
        var $43=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$43]=$42; //@line 616 "xmltok.c"
        var $44=$toP_addr; //@line 616 "xmltok.c"
        var $45=HEAP[$44]; //@line 616 "xmltok.c"
        var $46=$lo; //@line 616 "xmltok.c"
        var $47=($46) & 63; //@line 616 "xmltok.c"
        var $48=($47) | -128; //@line 616 "xmltok.c"
        HEAP[$45]=$48; //@line 616 "xmltok.c"
        var $49=$45+1; //@line 616 "xmltok.c"
        var $50=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$50]=$49; //@line 616 "xmltok.c"
        __label__ = 15; break; //@line 616 "xmltok.c"
      case 9: // $bb8
        var $51=$toLim_addr; //@line 616 "xmltok.c"
        var $52=($51); //@line 616 "xmltok.c"
        var $53=$toP_addr; //@line 616 "xmltok.c"
        var $54=HEAP[$53]; //@line 616 "xmltok.c"
        var $55=($54); //@line 616 "xmltok.c"
        var $56=($52) - ($55); //@line 616 "xmltok.c"
        var $57=($56) <= 2; //@line 616 "xmltok.c"
        if ($57) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 616 "xmltok.c"
      case 10: // $bb9
        var $58=$fromP_addr; //@line 616 "xmltok.c"
        var $59=$from; //@line 616 "xmltok.c"
        HEAP[$58]=$59; //@line 616 "xmltok.c"
        __label__ = 18; break; //@line 616 "xmltok.c"
      case 11: // $bb10
        var $60=$toP_addr; //@line 616 "xmltok.c"
        var $61=HEAP[$60]; //@line 616 "xmltok.c"
        var $62=$hi; //@line 616 "xmltok.c"
        var $63=($62) >>> 4; //@line 616 "xmltok.c"
        var $64=($63) | -32; //@line 616 "xmltok.c"
        HEAP[$61]=$64; //@line 616 "xmltok.c"
        var $65=$61+1; //@line 616 "xmltok.c"
        var $66=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$66]=$65; //@line 616 "xmltok.c"
        var $67=$toP_addr; //@line 616 "xmltok.c"
        var $68=HEAP[$67]; //@line 616 "xmltok.c"
        var $69=$hi; //@line 616 "xmltok.c"
        var $70=($69); //@line 616 "xmltok.c"
        var $71=($70) & 15; //@line 616 "xmltok.c"
        var $72=($71) << 2; //@line 616 "xmltok.c"
        var $73=((($72)) & 255); //@line 616 "xmltok.c"
        var $74=$lo; //@line 616 "xmltok.c"
        var $75=($74) >>> 6; //@line 616 "xmltok.c"
        var $76=($75) | -128; //@line 616 "xmltok.c"
        var $77=($76) | ($73); //@line 616 "xmltok.c"
        HEAP[$68]=$77; //@line 616 "xmltok.c"
        var $78=$68+1; //@line 616 "xmltok.c"
        var $79=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$79]=$78; //@line 616 "xmltok.c"
        var $80=$toP_addr; //@line 616 "xmltok.c"
        var $81=HEAP[$80]; //@line 616 "xmltok.c"
        var $82=$lo; //@line 616 "xmltok.c"
        var $83=($82) & 63; //@line 616 "xmltok.c"
        var $84=($83) | -128; //@line 616 "xmltok.c"
        HEAP[$81]=$84; //@line 616 "xmltok.c"
        var $85=$81+1; //@line 616 "xmltok.c"
        var $86=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$86]=$85; //@line 616 "xmltok.c"
        __label__ = 15; break; //@line 616 "xmltok.c"
      case 12: // $bb11
        var $87=$toLim_addr; //@line 616 "xmltok.c"
        var $88=($87); //@line 616 "xmltok.c"
        var $89=$toP_addr; //@line 616 "xmltok.c"
        var $90=HEAP[$89]; //@line 616 "xmltok.c"
        var $91=($90); //@line 616 "xmltok.c"
        var $92=($88) - ($91); //@line 616 "xmltok.c"
        var $93=($92) <= 3; //@line 616 "xmltok.c"
        if ($93) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 616 "xmltok.c"
      case 13: // $bb12
        var $94=$fromP_addr; //@line 616 "xmltok.c"
        var $95=$from; //@line 616 "xmltok.c"
        HEAP[$94]=$95; //@line 616 "xmltok.c"
        __label__ = 18; break; //@line 616 "xmltok.c"
      case 14: // $bb13
        var $96=$hi; //@line 616 "xmltok.c"
        var $97=($96); //@line 616 "xmltok.c"
        var $98=($97) & 3; //@line 616 "xmltok.c"
        var $99=($98) << 2; //@line 616 "xmltok.c"
        var $100=$lo; //@line 616 "xmltok.c"
        var $101=($100) >>> 6; //@line 616 "xmltok.c"
        var $102=($101); //@line 616 "xmltok.c"
        var $103=($102) & 3; //@line 616 "xmltok.c"
        var $104=($103) | ($99); //@line 616 "xmltok.c"
        var $105=($104) + 1; //@line 616 "xmltok.c"
        $plane=$105; //@line 616 "xmltok.c"
        var $106=$toP_addr; //@line 616 "xmltok.c"
        var $107=HEAP[$106]; //@line 616 "xmltok.c"
        var $108=$plane; //@line 616 "xmltok.c"
        var $109=($108) >> 2; //@line 616 "xmltok.c"
        var $110=((($109)) & 255); //@line 616 "xmltok.c"
        var $111=($110) | -16; //@line 616 "xmltok.c"
        HEAP[$107]=$111; //@line 616 "xmltok.c"
        var $112=$107+1; //@line 616 "xmltok.c"
        var $113=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$113]=$112; //@line 616 "xmltok.c"
        var $114=$toP_addr; //@line 616 "xmltok.c"
        var $115=HEAP[$114]; //@line 616 "xmltok.c"
        var $116=$lo; //@line 616 "xmltok.c"
        var $117=($116) >>> 2; //@line 616 "xmltok.c"
        var $118=($117) & 15; //@line 616 "xmltok.c"
        var $119=$plane; //@line 616 "xmltok.c"
        var $120=($119) & 3; //@line 616 "xmltok.c"
        var $121=($120) << 4; //@line 616 "xmltok.c"
        var $122=((($121)) & 255); //@line 616 "xmltok.c"
        var $123=($118) | -128; //@line 616 "xmltok.c"
        var $124=($123) | ($122); //@line 616 "xmltok.c"
        HEAP[$115]=$124; //@line 616 "xmltok.c"
        var $125=$115+1; //@line 616 "xmltok.c"
        var $126=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$126]=$125; //@line 616 "xmltok.c"
        var $127=$from; //@line 616 "xmltok.c"
        var $128=$127+2; //@line 616 "xmltok.c"
        $from=$128; //@line 616 "xmltok.c"
        var $129=$from; //@line 616 "xmltok.c"
        var $130=$129; //@line 616 "xmltok.c"
        var $131=HEAP[$130]; //@line 616 "xmltok.c"
        $lo2=$131; //@line 616 "xmltok.c"
        var $132=$toP_addr; //@line 616 "xmltok.c"
        var $133=HEAP[$132]; //@line 616 "xmltok.c"
        var $134=$lo; //@line 616 "xmltok.c"
        var $135=($134); //@line 616 "xmltok.c"
        var $136=($135) & 3; //@line 616 "xmltok.c"
        var $137=($136) << 4; //@line 616 "xmltok.c"
        var $138=((($137)) & 255); //@line 616 "xmltok.c"
        var $139=$from; //@line 616 "xmltok.c"
        var $140=$139+1; //@line 616 "xmltok.c"
        var $141=HEAP[$140]; //@line 616 "xmltok.c"
        var $142=($141); //@line 616 "xmltok.c"
        var $143=($142) & 3; //@line 616 "xmltok.c"
        var $144=($143) << 2; //@line 616 "xmltok.c"
        var $145=((($144)) & 255); //@line 616 "xmltok.c"
        var $146=$lo2; //@line 616 "xmltok.c"
        var $147=($146) >>> 6; //@line 616 "xmltok.c"
        var $148=($147) | -128; //@line 616 "xmltok.c"
        var $149=($148) | ($138); //@line 616 "xmltok.c"
        var $150=($149) | ($145); //@line 616 "xmltok.c"
        HEAP[$133]=$150; //@line 616 "xmltok.c"
        var $151=$133+1; //@line 616 "xmltok.c"
        var $152=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$152]=$151; //@line 616 "xmltok.c"
        var $153=$toP_addr; //@line 616 "xmltok.c"
        var $154=HEAP[$153]; //@line 616 "xmltok.c"
        var $155=$lo2; //@line 616 "xmltok.c"
        var $156=($155) & 63; //@line 616 "xmltok.c"
        var $157=($156) | -128; //@line 616 "xmltok.c"
        HEAP[$154]=$157; //@line 616 "xmltok.c"
        var $158=$154+1; //@line 616 "xmltok.c"
        var $159=$toP_addr; //@line 616 "xmltok.c"
        HEAP[$159]=$158; //@line 616 "xmltok.c"
        __label__ = 15; break; //@line 616 "xmltok.c"
      case 15: // $bb14
        var $160=$from; //@line 616 "xmltok.c"
        var $161=$160+2; //@line 616 "xmltok.c"
        $from=$161; //@line 616 "xmltok.c"
        __label__ = 16; break; //@line 616 "xmltok.c"
      case 16: // $bb15
        var $162=$from; //@line 616 "xmltok.c"
        var $163=$fromLim_addr; //@line 616 "xmltok.c"
        var $164=($162)!=($163); //@line 616 "xmltok.c"
        if ($164) { __label__ = 1; break; } else { __label__ = 17; break; } //@line 616 "xmltok.c"
      case 17: // $bb16
        var $165=$fromP_addr; //@line 616 "xmltok.c"
        var $166=$from; //@line 616 "xmltok.c"
        HEAP[$165]=$166; //@line 616 "xmltok.c"
        __label__ = 18; break; //@line 616 "xmltok.c"
      case 18: // $return
        ;
        return; //@line 616 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_toUtf16($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$fromLim_addr; //@line 617 "xmltok.c"
        var $1=($0); //@line 617 "xmltok.c"
        var $2=$fromP_addr; //@line 617 "xmltok.c"
        var $3=HEAP[$2]; //@line 617 "xmltok.c"
        var $4=($3); //@line 617 "xmltok.c"
        var $5=($1) - ($4); //@line 617 "xmltok.c"
        var $6=$toLim_addr; //@line 617 "xmltok.c"
        var $7=($6); //@line 617 "xmltok.c"
        var $8=$toP_addr; //@line 617 "xmltok.c"
        var $9=HEAP[$8]; //@line 617 "xmltok.c"
        var $10=($9); //@line 617 "xmltok.c"
        var $11=($7) - ($10); //@line 617 "xmltok.c"
        var $12=((($11)/2)|0); //@line 617 "xmltok.c"
        var $13=($12) << 1; //@line 617 "xmltok.c"
        var $14=($5) > ($13); //@line 617 "xmltok.c"
        if ($14) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 617 "xmltok.c"
      case 1: // $bb
        var $15=$fromLim_addr; //@line 617 "xmltok.c"
        var $16=$15+-2; //@line 617 "xmltok.c"
        var $17=$16+1; //@line 617 "xmltok.c"
        var $18=HEAP[$17]; //@line 617 "xmltok.c"
        var $19=($18); //@line 617 "xmltok.c"
        var $20=($19) & 248; //@line 617 "xmltok.c"
        var $21=($20)==216; //@line 617 "xmltok.c"
        if ($21) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 617 "xmltok.c"
      case 2: // $bb1
        var $22=$fromLim_addr; //@line 617 "xmltok.c"
        var $23=$22+-2; //@line 617 "xmltok.c"
        $fromLim_addr=$23; //@line 617 "xmltok.c"
        __label__ = 4; break; //@line 617 "xmltok.c"
      case 3: // $bb3
        var $24=$toP_addr; //@line 617 "xmltok.c"
        var $25=HEAP[$24]; //@line 617 "xmltok.c"
        var $26=$fromP_addr; //@line 617 "xmltok.c"
        var $27=HEAP[$26]; //@line 617 "xmltok.c"
        var $28=$27+1; //@line 617 "xmltok.c"
        var $29=HEAP[$28]; //@line 617 "xmltok.c"
        var $30=($29); //@line 617 "xmltok.c"
        var $31=($30) << 8; //@line 617 "xmltok.c"
        var $32=((($31)) & 65535); //@line 617 "xmltok.c"
        var $33=$fromP_addr; //@line 617 "xmltok.c"
        var $34=HEAP[$33]; //@line 617 "xmltok.c"
        var $35=$34; //@line 617 "xmltok.c"
        var $36=HEAP[$35]; //@line 617 "xmltok.c"
        var $37=($36); //@line 617 "xmltok.c"
        var $38=($37) | ($32); //@line 617 "xmltok.c"
        HEAP[$25]=$38; //@line 617 "xmltok.c"
        var $39=$25+2; //@line 617 "xmltok.c"
        var $40=$toP_addr; //@line 617 "xmltok.c"
        HEAP[$40]=$39; //@line 617 "xmltok.c"
        var $41=$fromP_addr; //@line 617 "xmltok.c"
        var $42=HEAP[$41]; //@line 617 "xmltok.c"
        var $43=$42+2; //@line 617 "xmltok.c"
        var $44=$fromP_addr; //@line 617 "xmltok.c"
        HEAP[$44]=$43; //@line 617 "xmltok.c"
        __label__ = 4; break; //@line 617 "xmltok.c"
      case 4: // $bb4
        var $45=$fromP_addr; //@line 617 "xmltok.c"
        var $46=HEAP[$45]; //@line 617 "xmltok.c"
        var $47=$fromLim_addr; //@line 617 "xmltok.c"
        var $48=($46)==($47); //@line 617 "xmltok.c"
        if ($48) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 617 "xmltok.c"
      case 5: // $bb5
        var $49=$toP_addr; //@line 617 "xmltok.c"
        var $50=HEAP[$49]; //@line 617 "xmltok.c"
        var $51=$toLim_addr; //@line 617 "xmltok.c"
        var $52=($50)!=($51); //@line 617 "xmltok.c"
        if ($52) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 617 "xmltok.c"
      case 6: // $return
        ;
        return; //@line 617 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $from;
        var $plane;
        var $lo2;
        var $lo;
        var $hi;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$fromP_addr; //@line 628 "xmltok.c"
        var $1=HEAP[$0]; //@line 628 "xmltok.c"
        $from=$1; //@line 628 "xmltok.c"
        __label__ = 16; break; //@line 628 "xmltok.c"
      case 1: // $bb
        var $2=$from; //@line 628 "xmltok.c"
        var $3=$2+1; //@line 628 "xmltok.c"
        var $4=HEAP[$3]; //@line 628 "xmltok.c"
        $lo=$4; //@line 628 "xmltok.c"
        var $5=$from; //@line 628 "xmltok.c"
        var $6=$5; //@line 628 "xmltok.c"
        var $7=HEAP[$6]; //@line 628 "xmltok.c"
        $hi=$7; //@line 628 "xmltok.c"
        var $8=$hi; //@line 628 "xmltok.c"
        var $9=($8); //@line 628 "xmltok.c"
        if ($9 == 0) {
          __label__ = 2; break;
        }
        else if ($9 == 1) {
          __label__ = 6; break;
        }
        else if ($9 == 2) {
          __label__ = 6; break;
        }
        else if ($9 == 3) {
          __label__ = 6; break;
        }
        else if ($9 == 4) {
          __label__ = 6; break;
        }
        else if ($9 == 5) {
          __label__ = 6; break;
        }
        else if ($9 == 6) {
          __label__ = 6; break;
        }
        else if ($9 == 7) {
          __label__ = 6; break;
        }
        else if ($9 == 216) {
          __label__ = 12; break;
        }
        else if ($9 == 217) {
          __label__ = 12; break;
        }
        else if ($9 == 218) {
          __label__ = 12; break;
        }
        else if ($9 == 219) {
          __label__ = 12; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 2: // $bb1
        var $10=$lo; //@line 628 "xmltok.c"
        var $11=($10) >= 0; //@line 628 "xmltok.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 628 "xmltok.c"
      case 3: // $bb2
        var $12=$toP_addr; //@line 628 "xmltok.c"
        var $13=HEAP[$12]; //@line 628 "xmltok.c"
        var $14=$toLim_addr; //@line 628 "xmltok.c"
        var $15=($13)==($14); //@line 628 "xmltok.c"
        if ($15) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 628 "xmltok.c"
      case 4: // $bb3
        var $16=$fromP_addr; //@line 628 "xmltok.c"
        var $17=$from; //@line 628 "xmltok.c"
        HEAP[$16]=$17; //@line 628 "xmltok.c"
        __label__ = 18; break; //@line 628 "xmltok.c"
      case 5: // $bb4
        var $18=$toP_addr; //@line 628 "xmltok.c"
        var $19=HEAP[$18]; //@line 628 "xmltok.c"
        var $20=$lo; //@line 628 "xmltok.c"
        HEAP[$19]=$20; //@line 628 "xmltok.c"
        var $21=$19+1; //@line 628 "xmltok.c"
        var $22=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$22]=$21; //@line 628 "xmltok.c"
        __label__ = 15; break; //@line 628 "xmltok.c"
      case 6: // $bb5
        var $23=$toLim_addr; //@line 628 "xmltok.c"
        var $24=($23); //@line 628 "xmltok.c"
        var $25=$toP_addr; //@line 628 "xmltok.c"
        var $26=HEAP[$25]; //@line 628 "xmltok.c"
        var $27=($26); //@line 628 "xmltok.c"
        var $28=($24) - ($27); //@line 628 "xmltok.c"
        var $29=($28) <= 1; //@line 628 "xmltok.c"
        if ($29) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 628 "xmltok.c"
      case 7: // $bb6
        var $30=$fromP_addr; //@line 628 "xmltok.c"
        var $31=$from; //@line 628 "xmltok.c"
        HEAP[$30]=$31; //@line 628 "xmltok.c"
        __label__ = 18; break; //@line 628 "xmltok.c"
      case 8: // $bb7
        var $32=$toP_addr; //@line 628 "xmltok.c"
        var $33=HEAP[$32]; //@line 628 "xmltok.c"
        var $34=$lo; //@line 628 "xmltok.c"
        var $35=($34) >>> 6; //@line 628 "xmltok.c"
        var $36=$hi; //@line 628 "xmltok.c"
        var $37=($36); //@line 628 "xmltok.c"
        var $38=($37) << 2; //@line 628 "xmltok.c"
        var $39=((($38)) & 255); //@line 628 "xmltok.c"
        var $40=($35) | -64; //@line 628 "xmltok.c"
        var $41=($40) | ($39); //@line 628 "xmltok.c"
        HEAP[$33]=$41; //@line 628 "xmltok.c"
        var $42=$33+1; //@line 628 "xmltok.c"
        var $43=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$43]=$42; //@line 628 "xmltok.c"
        var $44=$toP_addr; //@line 628 "xmltok.c"
        var $45=HEAP[$44]; //@line 628 "xmltok.c"
        var $46=$lo; //@line 628 "xmltok.c"
        var $47=($46) & 63; //@line 628 "xmltok.c"
        var $48=($47) | -128; //@line 628 "xmltok.c"
        HEAP[$45]=$48; //@line 628 "xmltok.c"
        var $49=$45+1; //@line 628 "xmltok.c"
        var $50=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$50]=$49; //@line 628 "xmltok.c"
        __label__ = 15; break; //@line 628 "xmltok.c"
      case 9: // $bb8
        var $51=$toLim_addr; //@line 628 "xmltok.c"
        var $52=($51); //@line 628 "xmltok.c"
        var $53=$toP_addr; //@line 628 "xmltok.c"
        var $54=HEAP[$53]; //@line 628 "xmltok.c"
        var $55=($54); //@line 628 "xmltok.c"
        var $56=($52) - ($55); //@line 628 "xmltok.c"
        var $57=($56) <= 2; //@line 628 "xmltok.c"
        if ($57) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 628 "xmltok.c"
      case 10: // $bb9
        var $58=$fromP_addr; //@line 628 "xmltok.c"
        var $59=$from; //@line 628 "xmltok.c"
        HEAP[$58]=$59; //@line 628 "xmltok.c"
        __label__ = 18; break; //@line 628 "xmltok.c"
      case 11: // $bb10
        var $60=$toP_addr; //@line 628 "xmltok.c"
        var $61=HEAP[$60]; //@line 628 "xmltok.c"
        var $62=$hi; //@line 628 "xmltok.c"
        var $63=($62) >>> 4; //@line 628 "xmltok.c"
        var $64=($63) | -32; //@line 628 "xmltok.c"
        HEAP[$61]=$64; //@line 628 "xmltok.c"
        var $65=$61+1; //@line 628 "xmltok.c"
        var $66=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$66]=$65; //@line 628 "xmltok.c"
        var $67=$toP_addr; //@line 628 "xmltok.c"
        var $68=HEAP[$67]; //@line 628 "xmltok.c"
        var $69=$hi; //@line 628 "xmltok.c"
        var $70=($69); //@line 628 "xmltok.c"
        var $71=($70) & 15; //@line 628 "xmltok.c"
        var $72=($71) << 2; //@line 628 "xmltok.c"
        var $73=((($72)) & 255); //@line 628 "xmltok.c"
        var $74=$lo; //@line 628 "xmltok.c"
        var $75=($74) >>> 6; //@line 628 "xmltok.c"
        var $76=($75) | -128; //@line 628 "xmltok.c"
        var $77=($76) | ($73); //@line 628 "xmltok.c"
        HEAP[$68]=$77; //@line 628 "xmltok.c"
        var $78=$68+1; //@line 628 "xmltok.c"
        var $79=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$79]=$78; //@line 628 "xmltok.c"
        var $80=$toP_addr; //@line 628 "xmltok.c"
        var $81=HEAP[$80]; //@line 628 "xmltok.c"
        var $82=$lo; //@line 628 "xmltok.c"
        var $83=($82) & 63; //@line 628 "xmltok.c"
        var $84=($83) | -128; //@line 628 "xmltok.c"
        HEAP[$81]=$84; //@line 628 "xmltok.c"
        var $85=$81+1; //@line 628 "xmltok.c"
        var $86=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$86]=$85; //@line 628 "xmltok.c"
        __label__ = 15; break; //@line 628 "xmltok.c"
      case 12: // $bb11
        var $87=$toLim_addr; //@line 628 "xmltok.c"
        var $88=($87); //@line 628 "xmltok.c"
        var $89=$toP_addr; //@line 628 "xmltok.c"
        var $90=HEAP[$89]; //@line 628 "xmltok.c"
        var $91=($90); //@line 628 "xmltok.c"
        var $92=($88) - ($91); //@line 628 "xmltok.c"
        var $93=($92) <= 3; //@line 628 "xmltok.c"
        if ($93) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 628 "xmltok.c"
      case 13: // $bb12
        var $94=$fromP_addr; //@line 628 "xmltok.c"
        var $95=$from; //@line 628 "xmltok.c"
        HEAP[$94]=$95; //@line 628 "xmltok.c"
        __label__ = 18; break; //@line 628 "xmltok.c"
      case 14: // $bb13
        var $96=$hi; //@line 628 "xmltok.c"
        var $97=($96); //@line 628 "xmltok.c"
        var $98=($97) & 3; //@line 628 "xmltok.c"
        var $99=($98) << 2; //@line 628 "xmltok.c"
        var $100=$lo; //@line 628 "xmltok.c"
        var $101=($100) >>> 6; //@line 628 "xmltok.c"
        var $102=($101); //@line 628 "xmltok.c"
        var $103=($102) & 3; //@line 628 "xmltok.c"
        var $104=($103) | ($99); //@line 628 "xmltok.c"
        var $105=($104) + 1; //@line 628 "xmltok.c"
        $plane=$105; //@line 628 "xmltok.c"
        var $106=$toP_addr; //@line 628 "xmltok.c"
        var $107=HEAP[$106]; //@line 628 "xmltok.c"
        var $108=$plane; //@line 628 "xmltok.c"
        var $109=($108) >> 2; //@line 628 "xmltok.c"
        var $110=((($109)) & 255); //@line 628 "xmltok.c"
        var $111=($110) | -16; //@line 628 "xmltok.c"
        HEAP[$107]=$111; //@line 628 "xmltok.c"
        var $112=$107+1; //@line 628 "xmltok.c"
        var $113=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$113]=$112; //@line 628 "xmltok.c"
        var $114=$toP_addr; //@line 628 "xmltok.c"
        var $115=HEAP[$114]; //@line 628 "xmltok.c"
        var $116=$lo; //@line 628 "xmltok.c"
        var $117=($116) >>> 2; //@line 628 "xmltok.c"
        var $118=($117) & 15; //@line 628 "xmltok.c"
        var $119=$plane; //@line 628 "xmltok.c"
        var $120=($119) & 3; //@line 628 "xmltok.c"
        var $121=($120) << 4; //@line 628 "xmltok.c"
        var $122=((($121)) & 255); //@line 628 "xmltok.c"
        var $123=($118) | -128; //@line 628 "xmltok.c"
        var $124=($123) | ($122); //@line 628 "xmltok.c"
        HEAP[$115]=$124; //@line 628 "xmltok.c"
        var $125=$115+1; //@line 628 "xmltok.c"
        var $126=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$126]=$125; //@line 628 "xmltok.c"
        var $127=$from; //@line 628 "xmltok.c"
        var $128=$127+2; //@line 628 "xmltok.c"
        $from=$128; //@line 628 "xmltok.c"
        var $129=$from; //@line 628 "xmltok.c"
        var $130=$129+1; //@line 628 "xmltok.c"
        var $131=HEAP[$130]; //@line 628 "xmltok.c"
        $lo2=$131; //@line 628 "xmltok.c"
        var $132=$toP_addr; //@line 628 "xmltok.c"
        var $133=HEAP[$132]; //@line 628 "xmltok.c"
        var $134=$lo; //@line 628 "xmltok.c"
        var $135=($134); //@line 628 "xmltok.c"
        var $136=($135) & 3; //@line 628 "xmltok.c"
        var $137=($136) << 4; //@line 628 "xmltok.c"
        var $138=((($137)) & 255); //@line 628 "xmltok.c"
        var $139=$from; //@line 628 "xmltok.c"
        var $140=$139; //@line 628 "xmltok.c"
        var $141=HEAP[$140]; //@line 628 "xmltok.c"
        var $142=($141); //@line 628 "xmltok.c"
        var $143=($142) & 3; //@line 628 "xmltok.c"
        var $144=($143) << 2; //@line 628 "xmltok.c"
        var $145=((($144)) & 255); //@line 628 "xmltok.c"
        var $146=$lo2; //@line 628 "xmltok.c"
        var $147=($146) >>> 6; //@line 628 "xmltok.c"
        var $148=($147) | -128; //@line 628 "xmltok.c"
        var $149=($148) | ($138); //@line 628 "xmltok.c"
        var $150=($149) | ($145); //@line 628 "xmltok.c"
        HEAP[$133]=$150; //@line 628 "xmltok.c"
        var $151=$133+1; //@line 628 "xmltok.c"
        var $152=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$152]=$151; //@line 628 "xmltok.c"
        var $153=$toP_addr; //@line 628 "xmltok.c"
        var $154=HEAP[$153]; //@line 628 "xmltok.c"
        var $155=$lo2; //@line 628 "xmltok.c"
        var $156=($155) & 63; //@line 628 "xmltok.c"
        var $157=($156) | -128; //@line 628 "xmltok.c"
        HEAP[$154]=$157; //@line 628 "xmltok.c"
        var $158=$154+1; //@line 628 "xmltok.c"
        var $159=$toP_addr; //@line 628 "xmltok.c"
        HEAP[$159]=$158; //@line 628 "xmltok.c"
        __label__ = 15; break; //@line 628 "xmltok.c"
      case 15: // $bb14
        var $160=$from; //@line 628 "xmltok.c"
        var $161=$160+2; //@line 628 "xmltok.c"
        $from=$161; //@line 628 "xmltok.c"
        __label__ = 16; break; //@line 628 "xmltok.c"
      case 16: // $bb15
        var $162=$from; //@line 628 "xmltok.c"
        var $163=$fromLim_addr; //@line 628 "xmltok.c"
        var $164=($162)!=($163); //@line 628 "xmltok.c"
        if ($164) { __label__ = 1; break; } else { __label__ = 17; break; } //@line 628 "xmltok.c"
      case 17: // $bb16
        var $165=$fromP_addr; //@line 628 "xmltok.c"
        var $166=$from; //@line 628 "xmltok.c"
        HEAP[$165]=$166; //@line 628 "xmltok.c"
        __label__ = 18; break; //@line 628 "xmltok.c"
      case 18: // $return
        ;
        return; //@line 628 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_toUtf16($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$fromLim_addr; //@line 629 "xmltok.c"
        var $1=($0); //@line 629 "xmltok.c"
        var $2=$fromP_addr; //@line 629 "xmltok.c"
        var $3=HEAP[$2]; //@line 629 "xmltok.c"
        var $4=($3); //@line 629 "xmltok.c"
        var $5=($1) - ($4); //@line 629 "xmltok.c"
        var $6=$toLim_addr; //@line 629 "xmltok.c"
        var $7=($6); //@line 629 "xmltok.c"
        var $8=$toP_addr; //@line 629 "xmltok.c"
        var $9=HEAP[$8]; //@line 629 "xmltok.c"
        var $10=($9); //@line 629 "xmltok.c"
        var $11=($7) - ($10); //@line 629 "xmltok.c"
        var $12=((($11)/2)|0); //@line 629 "xmltok.c"
        var $13=($12) << 1; //@line 629 "xmltok.c"
        var $14=($5) > ($13); //@line 629 "xmltok.c"
        if ($14) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 629 "xmltok.c"
      case 1: // $bb
        var $15=$fromLim_addr; //@line 629 "xmltok.c"
        var $16=$15+-2; //@line 629 "xmltok.c"
        var $17=$16; //@line 629 "xmltok.c"
        var $18=HEAP[$17]; //@line 629 "xmltok.c"
        var $19=($18); //@line 629 "xmltok.c"
        var $20=($19) & 248; //@line 629 "xmltok.c"
        var $21=($20)==216; //@line 629 "xmltok.c"
        if ($21) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 629 "xmltok.c"
      case 2: // $bb1
        var $22=$fromLim_addr; //@line 629 "xmltok.c"
        var $23=$22+-2; //@line 629 "xmltok.c"
        $fromLim_addr=$23; //@line 629 "xmltok.c"
        __label__ = 4; break; //@line 629 "xmltok.c"
      case 3: // $bb3
        var $24=$toP_addr; //@line 629 "xmltok.c"
        var $25=HEAP[$24]; //@line 629 "xmltok.c"
        var $26=$fromP_addr; //@line 629 "xmltok.c"
        var $27=HEAP[$26]; //@line 629 "xmltok.c"
        var $28=$27; //@line 629 "xmltok.c"
        var $29=HEAP[$28]; //@line 629 "xmltok.c"
        var $30=($29); //@line 629 "xmltok.c"
        var $31=($30) << 8; //@line 629 "xmltok.c"
        var $32=((($31)) & 65535); //@line 629 "xmltok.c"
        var $33=$fromP_addr; //@line 629 "xmltok.c"
        var $34=HEAP[$33]; //@line 629 "xmltok.c"
        var $35=$34+1; //@line 629 "xmltok.c"
        var $36=HEAP[$35]; //@line 629 "xmltok.c"
        var $37=($36); //@line 629 "xmltok.c"
        var $38=($37) | ($32); //@line 629 "xmltok.c"
        HEAP[$25]=$38; //@line 629 "xmltok.c"
        var $39=$25+2; //@line 629 "xmltok.c"
        var $40=$toP_addr; //@line 629 "xmltok.c"
        HEAP[$40]=$39; //@line 629 "xmltok.c"
        var $41=$fromP_addr; //@line 629 "xmltok.c"
        var $42=HEAP[$41]; //@line 629 "xmltok.c"
        var $43=$42+2; //@line 629 "xmltok.c"
        var $44=$fromP_addr; //@line 629 "xmltok.c"
        HEAP[$44]=$43; //@line 629 "xmltok.c"
        __label__ = 4; break; //@line 629 "xmltok.c"
      case 4: // $bb4
        var $45=$fromP_addr; //@line 629 "xmltok.c"
        var $46=HEAP[$45]; //@line 629 "xmltok.c"
        var $47=$fromLim_addr; //@line 629 "xmltok.c"
        var $48=($46)==($47); //@line 629 "xmltok.c"
        if ($48) { __label__ = 6; break; } else { __label__ = 5; break; } //@line 629 "xmltok.c"
      case 5: // $bb5
        var $49=$toP_addr; //@line 629 "xmltok.c"
        var $50=HEAP[$49]; //@line 629 "xmltok.c"
        var $51=$toLim_addr; //@line 629 "xmltok.c"
        var $52=($50)!=($51); //@line 629 "xmltok.c"
        if ($52) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 629 "xmltok.c"
      case 6: // $return
        ;
        return; //@line 629 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_scanComment($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_453;
        var $1;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $2=$ptr_addr; //@line 93 "xmltok_impl.c"
        var $3=$end_addr; //@line 93 "xmltok_impl.c"
        var $4=($2)!=($3); //@line 93 "xmltok_impl.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 37; break; } //@line 93 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 94 "xmltok_impl.c"
        var $6=$5+1; //@line 94 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 94 "xmltok_impl.c"
        var $8=($7)!=0; //@line 94 "xmltok_impl.c"
        if ($8) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 94 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$ptr_addr; //@line 94 "xmltok_impl.c"
        var $10=$9; //@line 94 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 94 "xmltok_impl.c"
        var $12=($11)!=45; //@line 94 "xmltok_impl.c"
        if ($12) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 94 "xmltok_impl.c"
      case 3: // $bb2
        var $13=$nextTokPtr_addr; //@line 95 "xmltok_impl.c"
        var $14=$ptr_addr; //@line 95 "xmltok_impl.c"
        HEAP[$13]=$14; //@line 95 "xmltok_impl.c"
        $1=0; //@line 96 "xmltok_impl.c"
        __label__ = 38; break; //@line 96 "xmltok_impl.c"
      case 4: // $bb3
        var $15=$ptr_addr; //@line 98 "xmltok_impl.c"
        var $16=$15+2; //@line 98 "xmltok_impl.c"
        $ptr_addr=$16; //@line 98 "xmltok_impl.c"
        __label__ = 36; break; //@line 98 "xmltok_impl.c"
      case 5: // $bb4
        var $17=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $18=$17+1; //@line 100 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 100 "xmltok_impl.c"
        var $20=($19)==0; //@line 100 "xmltok_impl.c"
        if ($20) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 100 "xmltok_impl.c"
      case 6: // $bb5
        var $21=$enc_addr; //@line 100 "xmltok_impl.c"
        var $22=$21; //@line 100 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 100 "xmltok_impl.c"
        var $25=($24); //@line 100 "xmltok_impl.c"
        var $26=$22+72; //@line 100 "xmltok_impl.c"
        var $27=$26+$25; //@line 100 "xmltok_impl.c"
        var $28=HEAP[$27]; //@line 100 "xmltok_impl.c"
        var $29=($28); //@line 100 "xmltok_impl.c"
        $iftmp_453=$29; //@line 100 "xmltok_impl.c"
        __lastLabel__ = 6; __label__ = 14; break; //@line 100 "xmltok_impl.c"
      case 7: // $bb6
        var $30=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $31=$30; //@line 100 "xmltok_impl.c"
        var $32=HEAP[$31]; //@line 100 "xmltok_impl.c"
        var $33=($32); //@line 100 "xmltok_impl.c"
        var $34=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $35=$34+1; //@line 100 "xmltok_impl.c"
        var $36=HEAP[$35]; //@line 100 "xmltok_impl.c"
        var $37=($36); //@line 100 "xmltok_impl.c"
        var $38=((($37)) & 255); //@line 100 "xmltok_impl.c"
        var $39=((($33)) & 255); //@line 100 "xmltok_impl.c"
        $hi_addr_i=$38;
        $lo_addr_i=$39;
        var $40=$hi_addr_i; //@line 518 "xmltok.c"
        var $41=($40); //@line 518 "xmltok.c"
        if ($41 == 216) {
          __label__ = 8; break;
        }
        else if ($41 == 217) {
          __label__ = 8; break;
        }
        else if ($41 == 218) {
          __label__ = 8; break;
        }
        else if ($41 == 219) {
          __label__ = 8; break;
        }
        else if ($41 == 220) {
          __label__ = 9; break;
        }
        else if ($41 == 221) {
          __label__ = 9; break;
        }
        else if ($41 == 222) {
          __label__ = 9; break;
        }
        else if ($41 == 223) {
          __label__ = 9; break;
        }
        else if ($41 == 255) {
          __label__ = 10; break;
        }
        else {
        __label__ = 12; break;
        }
        
      case 8: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 13; break; //@line 520 "xmltok.c"
      case 9: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 13; break; //@line 522 "xmltok.c"
      case 10: // $bb2_i
        var $42=$lo_addr_i; //@line 524 "xmltok.c"
        var $43=($42); //@line 524 "xmltok.c"
        var $_off_i=($43) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 11; break; } else { __label__ = 12; break; }
      case 11: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 13; break; //@line 527 "xmltok.c"
      case 12: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 13; break; //@line 531 "xmltok.c"
      case 13: // $unicode_byte_type_exit
        var $44=$0; //@line 520 "xmltok.c"
        $retval_i=$44; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_453=$retval6_i; //@line 100 "xmltok_impl.c"
        __lastLabel__ = 13; __label__ = 14; break; //@line 100 "xmltok_impl.c"
      case 14: // $bb7
        var $45=__lastLabel__ == 13 ? $retval6_i : ($29);
        if ($45 == 0) {
          __label__ = 24; break;
        }
        else if ($45 == 1) {
          __label__ = 24; break;
        }
        else if ($45 == 5) {
          __label__ = 15; break;
        }
        else if ($45 == 6) {
          __label__ = 18; break;
        }
        else if ($45 == 7) {
          __label__ = 21; break;
        }
        else if ($45 == 8) {
          __label__ = 24; break;
        }
        else if ($45 == 27) {
          __label__ = 25; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 15: // $bb8
        var $46=$end_addr; //@line 101 "xmltok_impl.c"
        var $47=($46); //@line 101 "xmltok_impl.c"
        var $48=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $49=($48); //@line 101 "xmltok_impl.c"
        var $50=($47) - ($49); //@line 101 "xmltok_impl.c"
        var $51=($50) <= 1; //@line 101 "xmltok_impl.c"
        if ($51) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 101 "xmltok_impl.c"
      case 16: // $bb9
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 17: // $bb10
        var $52=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $53=$52+2; //@line 101 "xmltok_impl.c"
        $ptr_addr=$53; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 18: // $bb11
        var $54=$end_addr; //@line 101 "xmltok_impl.c"
        var $55=($54); //@line 101 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $57=($56); //@line 101 "xmltok_impl.c"
        var $58=($55) - ($57); //@line 101 "xmltok_impl.c"
        var $59=($58) <= 2; //@line 101 "xmltok_impl.c"
        if ($59) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 101 "xmltok_impl.c"
      case 19: // $bb12
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 20: // $bb13
        var $60=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $61=$60+3; //@line 101 "xmltok_impl.c"
        $ptr_addr=$61; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 21: // $bb14
        var $62=$end_addr; //@line 101 "xmltok_impl.c"
        var $63=($62); //@line 101 "xmltok_impl.c"
        var $64=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $65=($64); //@line 101 "xmltok_impl.c"
        var $66=($63) - ($65); //@line 101 "xmltok_impl.c"
        var $67=($66) <= 3; //@line 101 "xmltok_impl.c"
        if ($67) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 101 "xmltok_impl.c"
      case 22: // $bb15
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 23: // $bb16
        var $68=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $69=$68+4; //@line 101 "xmltok_impl.c"
        $ptr_addr=$69; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 24: // $bb17
        var $70=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $71=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$70]=$71; //@line 101 "xmltok_impl.c"
        $1=0; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 25: // $bb18
        var $72=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $73=$72+2; //@line 103 "xmltok_impl.c"
        $ptr_addr=$73; //@line 103 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $75=$end_addr; //@line 103 "xmltok_impl.c"
        var $76=($74)==($75); //@line 103 "xmltok_impl.c"
        if ($76) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 103 "xmltok_impl.c"
      case 26: // $bb19
        $1=-1; //@line 104 "xmltok_impl.c"
        __label__ = 38; break; //@line 104 "xmltok_impl.c"
      case 27: // $bb20
        var $77=$ptr_addr; //@line 105 "xmltok_impl.c"
        var $78=$77+1; //@line 105 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 105 "xmltok_impl.c"
        var $80=($79)==0; //@line 105 "xmltok_impl.c"
        if ($80) { __label__ = 28; break; } else { __label__ = 36; break; } //@line 105 "xmltok_impl.c"
      case 28: // $bb21
        var $81=$ptr_addr; //@line 105 "xmltok_impl.c"
        var $82=$81; //@line 105 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 105 "xmltok_impl.c"
        var $84=($83)==45; //@line 105 "xmltok_impl.c"
        if ($84) { __label__ = 29; break; } else { __label__ = 36; break; } //@line 105 "xmltok_impl.c"
      case 29: // $bb22
        var $85=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $86=$85+2; //@line 106 "xmltok_impl.c"
        $ptr_addr=$86; //@line 106 "xmltok_impl.c"
        var $87=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $88=$end_addr; //@line 106 "xmltok_impl.c"
        var $89=($87)==($88); //@line 106 "xmltok_impl.c"
        if ($89) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 106 "xmltok_impl.c"
      case 30: // $bb23
        $1=-1; //@line 107 "xmltok_impl.c"
        __label__ = 38; break; //@line 107 "xmltok_impl.c"
      case 31: // $bb24
        var $90=$ptr_addr; //@line 108 "xmltok_impl.c"
        var $91=$90+1; //@line 108 "xmltok_impl.c"
        var $92=HEAP[$91]; //@line 108 "xmltok_impl.c"
        var $93=($92)!=0; //@line 108 "xmltok_impl.c"
        if ($93) { __label__ = 33; break; } else { __label__ = 32; break; } //@line 108 "xmltok_impl.c"
      case 32: // $bb25
        var $94=$ptr_addr; //@line 108 "xmltok_impl.c"
        var $95=$94; //@line 108 "xmltok_impl.c"
        var $96=HEAP[$95]; //@line 108 "xmltok_impl.c"
        var $97=($96)!=62; //@line 108 "xmltok_impl.c"
        if ($97) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 108 "xmltok_impl.c"
      case 33: // $bb26
        var $98=$nextTokPtr_addr; //@line 109 "xmltok_impl.c"
        var $99=$ptr_addr; //@line 109 "xmltok_impl.c"
        HEAP[$98]=$99; //@line 109 "xmltok_impl.c"
        $1=0; //@line 110 "xmltok_impl.c"
        __label__ = 38; break; //@line 110 "xmltok_impl.c"
      case 34: // $bb27
        var $100=$ptr_addr; //@line 112 "xmltok_impl.c"
        var $101=$100+2; //@line 112 "xmltok_impl.c"
        var $102=$nextTokPtr_addr; //@line 112 "xmltok_impl.c"
        HEAP[$102]=$101; //@line 112 "xmltok_impl.c"
        $1=13; //@line 113 "xmltok_impl.c"
        __label__ = 38; break; //@line 113 "xmltok_impl.c"
      case 35: // $bb29
        var $103=$ptr_addr; //@line 117 "xmltok_impl.c"
        var $104=$103+2; //@line 117 "xmltok_impl.c"
        $ptr_addr=$104; //@line 117 "xmltok_impl.c"
        __label__ = 36; break; //@line 117 "xmltok_impl.c"
      case 36: // $bb30
        var $105=$ptr_addr; //@line 99 "xmltok_impl.c"
        var $106=$end_addr; //@line 99 "xmltok_impl.c"
        var $107=($105)!=($106); //@line 99 "xmltok_impl.c"
        if ($107) { __label__ = 5; break; } else { __label__ = 37; break; } //@line 99 "xmltok_impl.c"
      case 37: // $bb31
        $1=-1; //@line 122 "xmltok_impl.c"
        __label__ = 38; break; //@line 122 "xmltok_impl.c"
      case 38: // $bb32
        var $108=$1; //@line 96 "xmltok_impl.c"
        $retval=$108; //@line 96 "xmltok_impl.c"
        var $retval33=$retval; //@line 96 "xmltok_impl.c"
        ;
        return $retval33; //@line 96 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_checkPiTarget($enc, $ptr, $end, $tokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $tokPtr_addr;
        var $retval;
        var $iftmp_471;
        var $iftmp_470;
        var $iftmp_469;
        var $0;
        var $upper;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $tokPtr_addr=$tokPtr;
        $upper=0; //@line 178 "xmltok_impl.c"
        var $1=$tokPtr_addr; //@line 179 "xmltok_impl.c"
        HEAP[$1]=11; //@line 179 "xmltok_impl.c"
        var $2=$end_addr; //@line 180 "xmltok_impl.c"
        var $3=($2); //@line 180 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 180 "xmltok_impl.c"
        var $5=($4); //@line 180 "xmltok_impl.c"
        var $6=($3) - ($5); //@line 180 "xmltok_impl.c"
        var $7=($6)!=6; //@line 180 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 180 "xmltok_impl.c"
      case 1: // $bb
        $0=1; //@line 181 "xmltok_impl.c"
        __label__ = 20; break; //@line 181 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$ptr_addr; //@line 182 "xmltok_impl.c"
        var $9=$8+1; //@line 182 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 182 "xmltok_impl.c"
        var $11=($10)==0; //@line 182 "xmltok_impl.c"
        if ($11) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 182 "xmltok_impl.c"
      case 3: // $bb4_thread
        $iftmp_469=-1; //@line 182 "xmltok_impl.c"
        __label__ = 6; break;
      case 4: // $bb4
        var $12=$ptr_addr; //@line 182 "xmltok_impl.c"
        var $13=$12; //@line 182 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 182 "xmltok_impl.c"
        var $15=($14); //@line 182 "xmltok_impl.c"
        $iftmp_469=$15; //@line 182 "xmltok_impl.c"
        if ($15 == 88) {
          __label__ = 5; break;
        }
        else if ($15 == 120) {
          __label__ = 7; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 5: // $bb6
        $upper=1; //@line 186 "xmltok_impl.c"
        __label__ = 7; break; //@line 186 "xmltok_impl.c"
      case 6: // $bb7
        $0=1; //@line 189 "xmltok_impl.c"
        __label__ = 20; break; //@line 189 "xmltok_impl.c"
      case 7: // $bb8
        var $16=$ptr_addr; //@line 191 "xmltok_impl.c"
        var $17=$16+2; //@line 191 "xmltok_impl.c"
        $ptr_addr=$17; //@line 191 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 192 "xmltok_impl.c"
        var $19=$18+1; //@line 192 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 192 "xmltok_impl.c"
        var $21=($20)==0; //@line 192 "xmltok_impl.c"
        if ($21) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 192 "xmltok_impl.c"
      case 8: // $bb11_thread
        $iftmp_470=-1; //@line 192 "xmltok_impl.c"
        __label__ = 11; break;
      case 9: // $bb11
        var $22=$ptr_addr; //@line 192 "xmltok_impl.c"
        var $23=$22; //@line 192 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 192 "xmltok_impl.c"
        var $25=($24); //@line 192 "xmltok_impl.c"
        $iftmp_470=$25; //@line 192 "xmltok_impl.c"
        if ($25 == 77) {
          __label__ = 10; break;
        }
        else if ($25 == 109) {
          __label__ = 12; break;
        }
        else {
        __label__ = 11; break;
        }
        
      case 10: // $bb13
        $upper=1; //@line 196 "xmltok_impl.c"
        __label__ = 12; break; //@line 196 "xmltok_impl.c"
      case 11: // $bb14
        $0=1; //@line 199 "xmltok_impl.c"
        __label__ = 20; break; //@line 199 "xmltok_impl.c"
      case 12: // $bb15
        var $26=$ptr_addr; //@line 201 "xmltok_impl.c"
        var $27=$26+2; //@line 201 "xmltok_impl.c"
        $ptr_addr=$27; //@line 201 "xmltok_impl.c"
        var $28=$ptr_addr; //@line 202 "xmltok_impl.c"
        var $29=$28+1; //@line 202 "xmltok_impl.c"
        var $30=HEAP[$29]; //@line 202 "xmltok_impl.c"
        var $31=($30)==0; //@line 202 "xmltok_impl.c"
        if ($31) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 202 "xmltok_impl.c"
      case 13: // $bb18_thread
        $iftmp_471=-1; //@line 202 "xmltok_impl.c"
        __label__ = 16; break;
      case 14: // $bb18
        var $32=$ptr_addr; //@line 202 "xmltok_impl.c"
        var $33=$32; //@line 202 "xmltok_impl.c"
        var $34=HEAP[$33]; //@line 202 "xmltok_impl.c"
        var $35=($34); //@line 202 "xmltok_impl.c"
        $iftmp_471=$35; //@line 202 "xmltok_impl.c"
        if ($35 == 76) {
          __label__ = 15; break;
        }
        else if ($35 == 108) {
          __label__ = 17; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 15: // $bb22_thread
        $upper=1; //@line 206 "xmltok_impl.c"
        __label__ = 18; break;
      case 16: // $bb21
        $0=1; //@line 209 "xmltok_impl.c"
        __label__ = 20; break; //@line 209 "xmltok_impl.c"
      case 17: // $bb22
        var $_pr=$upper;
        var $36=($_pr)!=0; //@line 211 "xmltok_impl.c"
        if ($36) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 211 "xmltok_impl.c"
      case 18: // $bb23
        $0=0; //@line 212 "xmltok_impl.c"
        __label__ = 20; break; //@line 212 "xmltok_impl.c"
      case 19: // $bb24
        var $37=$tokPtr_addr; //@line 213 "xmltok_impl.c"
        HEAP[$37]=12; //@line 213 "xmltok_impl.c"
        $0=1; //@line 214 "xmltok_impl.c"
        __label__ = 20; break; //@line 214 "xmltok_impl.c"
      case 20: // $bb25
        var $38=$0; //@line 181 "xmltok_impl.c"
        $retval=$38; //@line 181 "xmltok_impl.c"
        var $retval26=$retval; //@line 181 "xmltok_impl.c"
        ;
        return $retval26; //@line 181 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_scanPi($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $0;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $1;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $2;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_488;
        var $iftmp_480;
        var $iftmp_472;
        var $3;
        var $tok=__stackBase__;
        var $target;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $4=$ptr_addr; //@line 224 "xmltok_impl.c"
        $target=$4; //@line 224 "xmltok_impl.c"
        var $5=$ptr_addr; //@line 225 "xmltok_impl.c"
        var $6=$end_addr; //@line 225 "xmltok_impl.c"
        var $7=($5)==($6); //@line 225 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 225 "xmltok_impl.c"
      case 1: // $bb
        $3=-1; //@line 226 "xmltok_impl.c"
        __label__ = 88; break; //@line 226 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $9=$8+1; //@line 227 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 227 "xmltok_impl.c"
        var $11=($10)==0; //@line 227 "xmltok_impl.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 227 "xmltok_impl.c"
      case 3: // $bb2
        var $12=$enc_addr; //@line 227 "xmltok_impl.c"
        var $13=$12; //@line 227 "xmltok_impl.c"
        var $14=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 227 "xmltok_impl.c"
        var $16=($15); //@line 227 "xmltok_impl.c"
        var $17=$13+72; //@line 227 "xmltok_impl.c"
        var $18=$17+$16; //@line 227 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 227 "xmltok_impl.c"
        var $20=($19); //@line 227 "xmltok_impl.c"
        $iftmp_472=$20; //@line 227 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 227 "xmltok_impl.c"
      case 4: // $bb3
        var $21=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $22=$21; //@line 227 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 227 "xmltok_impl.c"
        var $24=($23); //@line 227 "xmltok_impl.c"
        var $25=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $26=$25+1; //@line 227 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 227 "xmltok_impl.c"
        var $28=($27); //@line 227 "xmltok_impl.c"
        var $29=((($28)) & 255); //@line 227 "xmltok_impl.c"
        var $30=((($24)) & 255); //@line 227 "xmltok_impl.c"
        $hi_addr_i=$29;
        $lo_addr_i=$30;
        var $31=$hi_addr_i; //@line 518 "xmltok.c"
        var $32=($31); //@line 518 "xmltok.c"
        if ($32 == 216) {
          __label__ = 5; break;
        }
        else if ($32 == 217) {
          __label__ = 5; break;
        }
        else if ($32 == 218) {
          __label__ = 5; break;
        }
        else if ($32 == 219) {
          __label__ = 5; break;
        }
        else if ($32 == 220) {
          __label__ = 6; break;
        }
        else if ($32 == 221) {
          __label__ = 6; break;
        }
        else if ($32 == 222) {
          __label__ = 6; break;
        }
        else if ($32 == 223) {
          __label__ = 6; break;
        }
        else if ($32 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $33=$lo_addr_i; //@line 524 "xmltok.c"
        var $34=($33); //@line 524 "xmltok.c"
        var $_off_i=($34) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $35=$2; //@line 520 "xmltok.c"
        $retval_i=$35; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_472=$retval6_i; //@line 227 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 227 "xmltok_impl.c"
      case 11: // $bb4
        var $36=__lastLabel__ == 10 ? $retval6_i : ($20);
        if ($36 == 5) {
          __label__ = 15; break;
        }
        else if ($36 == 6) {
          __label__ = 18; break;
        }
        else if ($36 == 7) {
          __label__ = 21; break;
        }
        else if ($36 == 22) {
          __label__ = 14; break;
        }
        else if ($36 == 24) {
          __label__ = 14; break;
        }
        else if ($36 == 29) {
          __label__ = 12; break;
        }
        else {
        __label__ = 24; break;
        }
        
      case 12: // $bb5
        var $37=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $38=$37+1; //@line 228 "xmltok_impl.c"
        var $39=HEAP[$38]; //@line 228 "xmltok_impl.c"
        var $40=($39); //@line 228 "xmltok_impl.c"
        var $41=_nmstrtPages+$40; //@line 228 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 228 "xmltok_impl.c"
        var $43=($42); //@line 228 "xmltok_impl.c"
        var $44=($43) * 8;
        var $45=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $46=$45; //@line 228 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 228 "xmltok_impl.c"
        var $48=($47) >>> 5; //@line 228 "xmltok_impl.c"
        var $49=($48); //@line 228 "xmltok_impl.c"
        var $50=($49) + ($44); //@line 228 "xmltok_impl.c"
        var $51=_namingBitmap+$50*4; //@line 228 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 228 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $54=$53; //@line 228 "xmltok_impl.c"
        var $55=HEAP[$54]; //@line 228 "xmltok_impl.c"
        var $56=($55); //@line 228 "xmltok_impl.c"
        var $57=($56) & 31; //@line 228 "xmltok_impl.c"
        var $58=1 << ($57); //@line 228 "xmltok_impl.c"
        var $59=($58) & ($52); //@line 228 "xmltok_impl.c"
        var $60=($59)==0; //@line 228 "xmltok_impl.c"
        if ($60) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 228 "xmltok_impl.c"
      case 13: // $bb6
        var $61=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $62=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$61]=$62; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 14: // $bb7
        var $63=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $64=$63+2; //@line 228 "xmltok_impl.c"
        $ptr_addr=$64; //@line 228 "xmltok_impl.c"
        __label__ = 86; break; //@line 228 "xmltok_impl.c"
      case 15: // $bb8
        var $65=$end_addr; //@line 228 "xmltok_impl.c"
        var $66=($65); //@line 228 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $68=($67); //@line 228 "xmltok_impl.c"
        var $69=($66) - ($68); //@line 228 "xmltok_impl.c"
        var $70=($69) <= 1; //@line 228 "xmltok_impl.c"
        if ($70) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 228 "xmltok_impl.c"
      case 16: // $bb9
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 17: // $bb10
        var $71=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $72=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$71]=$72; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 18: // $bb11
        var $73=$end_addr; //@line 228 "xmltok_impl.c"
        var $74=($73); //@line 228 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $76=($75); //@line 228 "xmltok_impl.c"
        var $77=($74) - ($76); //@line 228 "xmltok_impl.c"
        var $78=($77) <= 2; //@line 228 "xmltok_impl.c"
        if ($78) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 228 "xmltok_impl.c"
      case 19: // $bb12
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 20: // $bb13
        var $79=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $80=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$79]=$80; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 21: // $bb14
        var $81=$end_addr; //@line 228 "xmltok_impl.c"
        var $82=($81); //@line 228 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $84=($83); //@line 228 "xmltok_impl.c"
        var $85=($82) - ($84); //@line 228 "xmltok_impl.c"
        var $86=($85) <= 3; //@line 228 "xmltok_impl.c"
        if ($86) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 228 "xmltok_impl.c"
      case 22: // $bb15
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 23: // $bb16
        var $87=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $88=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$87]=$88; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 24: // $bb17
        var $89=$nextTokPtr_addr; //@line 230 "xmltok_impl.c"
        var $90=$ptr_addr; //@line 230 "xmltok_impl.c"
        HEAP[$89]=$90; //@line 230 "xmltok_impl.c"
        $3=0; //@line 231 "xmltok_impl.c"
        __label__ = 88; break; //@line 231 "xmltok_impl.c"
      case 25: // $bb18
        var $91=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $92=$91+1; //@line 234 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 234 "xmltok_impl.c"
        var $94=($93)==0; //@line 234 "xmltok_impl.c"
        if ($94) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 234 "xmltok_impl.c"
      case 26: // $bb19
        var $95=$enc_addr; //@line 234 "xmltok_impl.c"
        var $96=$95; //@line 234 "xmltok_impl.c"
        var $97=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $98=HEAP[$97]; //@line 234 "xmltok_impl.c"
        var $99=($98); //@line 234 "xmltok_impl.c"
        var $100=$96+72; //@line 234 "xmltok_impl.c"
        var $101=$100+$99; //@line 234 "xmltok_impl.c"
        var $102=HEAP[$101]; //@line 234 "xmltok_impl.c"
        var $103=($102); //@line 234 "xmltok_impl.c"
        $iftmp_480=$103; //@line 234 "xmltok_impl.c"
        __lastLabel__ = 26; __label__ = 34; break; //@line 234 "xmltok_impl.c"
      case 27: // $bb20
        var $104=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $105=$104; //@line 234 "xmltok_impl.c"
        var $106=HEAP[$105]; //@line 234 "xmltok_impl.c"
        var $107=($106); //@line 234 "xmltok_impl.c"
        var $108=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $109=$108+1; //@line 234 "xmltok_impl.c"
        var $110=HEAP[$109]; //@line 234 "xmltok_impl.c"
        var $111=($110); //@line 234 "xmltok_impl.c"
        var $112=((($111)) & 255); //@line 234 "xmltok_impl.c"
        var $113=((($107)) & 255); //@line 234 "xmltok_impl.c"
        $hi_addr_i1=$112;
        $lo_addr_i2=$113;
        var $114=$hi_addr_i1; //@line 518 "xmltok.c"
        var $115=($114); //@line 518 "xmltok.c"
        if ($115 == 216) {
          __label__ = 28; break;
        }
        else if ($115 == 217) {
          __label__ = 28; break;
        }
        else if ($115 == 218) {
          __label__ = 28; break;
        }
        else if ($115 == 219) {
          __label__ = 28; break;
        }
        else if ($115 == 220) {
          __label__ = 29; break;
        }
        else if ($115 == 221) {
          __label__ = 29; break;
        }
        else if ($115 == 222) {
          __label__ = 29; break;
        }
        else if ($115 == 223) {
          __label__ = 29; break;
        }
        else if ($115 == 255) {
          __label__ = 30; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 28: // $bb_i4
        $1=7; //@line 520 "xmltok.c"
        __label__ = 33; break; //@line 520 "xmltok.c"
      case 29: // $bb1_i5
        $1=8; //@line 522 "xmltok.c"
        __label__ = 33; break; //@line 522 "xmltok.c"
      case 30: // $bb2_i8
        var $116=$lo_addr_i2; //@line 524 "xmltok.c"
        var $117=($116); //@line 524 "xmltok.c"
        var $_off_i6=($117) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 31; break; } else { __label__ = 32; break; }
      case 31: // $bb3_i9
        $1=0; //@line 527 "xmltok.c"
        __label__ = 33; break; //@line 527 "xmltok.c"
      case 32: // $bb4_i10
        $1=29; //@line 531 "xmltok.c"
        __label__ = 33; break; //@line 531 "xmltok.c"
      case 33: // $unicode_byte_type_exit12
        var $118=$1; //@line 520 "xmltok.c"
        $retval_i3=$118; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_480=$retval6_i11; //@line 234 "xmltok_impl.c"
        __lastLabel__ = 33; __label__ = 34; break; //@line 234 "xmltok_impl.c"
      case 34: // $bb21
        var $119=__lastLabel__ == 33 ? $retval6_i11 : ($103);
        if ($119 == 5) {
          __label__ = 38; break;
        }
        else if ($119 == 6) {
          __label__ = 41; break;
        }
        else if ($119 == 7) {
          __label__ = 44; break;
        }
        else if ($119 == 9) {
          __label__ = 47; break;
        }
        else if ($119 == 10) {
          __label__ = 47; break;
        }
        else if ($119 == 15) {
          __label__ = 78; break;
        }
        else if ($119 == 21) {
          __label__ = 47; break;
        }
        else if ($119 == 22) {
          __label__ = 37; break;
        }
        else if ($119 == 24) {
          __label__ = 37; break;
        }
        else if ($119 == 25) {
          __label__ = 37; break;
        }
        else if ($119 == 26) {
          __label__ = 37; break;
        }
        else if ($119 == 27) {
          __label__ = 37; break;
        }
        else if ($119 == 29) {
          __label__ = 35; break;
        }
        else {
        __label__ = 85; break;
        }
        
      case 35: // $bb22
        var $120=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $121=$120+1; //@line 235 "xmltok_impl.c"
        var $122=HEAP[$121]; //@line 235 "xmltok_impl.c"
        var $123=($122); //@line 235 "xmltok_impl.c"
        var $124=_namePages+$123; //@line 235 "xmltok_impl.c"
        var $125=HEAP[$124]; //@line 235 "xmltok_impl.c"
        var $126=($125); //@line 235 "xmltok_impl.c"
        var $127=($126) * 8;
        var $128=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $129=$128; //@line 235 "xmltok_impl.c"
        var $130=HEAP[$129]; //@line 235 "xmltok_impl.c"
        var $131=($130) >>> 5; //@line 235 "xmltok_impl.c"
        var $132=($131); //@line 235 "xmltok_impl.c"
        var $133=($132) + ($127); //@line 235 "xmltok_impl.c"
        var $134=_namingBitmap+$133*4; //@line 235 "xmltok_impl.c"
        var $135=HEAP[$134]; //@line 235 "xmltok_impl.c"
        var $136=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $137=$136; //@line 235 "xmltok_impl.c"
        var $138=HEAP[$137]; //@line 235 "xmltok_impl.c"
        var $139=($138); //@line 235 "xmltok_impl.c"
        var $140=($139) & 31; //@line 235 "xmltok_impl.c"
        var $141=1 << ($140); //@line 235 "xmltok_impl.c"
        var $142=($141) & ($135); //@line 235 "xmltok_impl.c"
        var $143=($142)==0; //@line 235 "xmltok_impl.c"
        if ($143) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 235 "xmltok_impl.c"
      case 36: // $bb23
        var $144=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $145=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$144]=$145; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 37: // $bb24
        var $146=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $147=$146+2; //@line 235 "xmltok_impl.c"
        $ptr_addr=$147; //@line 235 "xmltok_impl.c"
        __label__ = 86; break; //@line 235 "xmltok_impl.c"
      case 38: // $bb25
        var $148=$end_addr; //@line 235 "xmltok_impl.c"
        var $149=($148); //@line 235 "xmltok_impl.c"
        var $150=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $151=($150); //@line 235 "xmltok_impl.c"
        var $152=($149) - ($151); //@line 235 "xmltok_impl.c"
        var $153=($152) <= 1; //@line 235 "xmltok_impl.c"
        if ($153) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 235 "xmltok_impl.c"
      case 39: // $bb26
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 40: // $bb27
        var $154=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $155=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$154]=$155; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 41: // $bb28
        var $156=$end_addr; //@line 235 "xmltok_impl.c"
        var $157=($156); //@line 235 "xmltok_impl.c"
        var $158=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $159=($158); //@line 235 "xmltok_impl.c"
        var $160=($157) - ($159); //@line 235 "xmltok_impl.c"
        var $161=($160) <= 2; //@line 235 "xmltok_impl.c"
        if ($161) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 235 "xmltok_impl.c"
      case 42: // $bb29
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 43: // $bb30
        var $162=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $163=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$162]=$163; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 44: // $bb31
        var $164=$end_addr; //@line 235 "xmltok_impl.c"
        var $165=($164); //@line 235 "xmltok_impl.c"
        var $166=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $167=($166); //@line 235 "xmltok_impl.c"
        var $168=($165) - ($167); //@line 235 "xmltok_impl.c"
        var $169=($168) <= 3; //@line 235 "xmltok_impl.c"
        if ($169) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 235 "xmltok_impl.c"
      case 45: // $bb32
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 46: // $bb33
        var $170=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $171=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$170]=$171; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 47: // $bb34
        var $172=$enc_addr; //@line 237 "xmltok_impl.c"
        var $173=$target; //@line 237 "xmltok_impl.c"
        var $174=$ptr_addr; //@line 237 "xmltok_impl.c"
        var $175=_little2_checkPiTarget($172, $173, $174, $tok); //@line 237 "xmltok_impl.c"
        var $176=($175)==0; //@line 237 "xmltok_impl.c"
        if ($176) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 237 "xmltok_impl.c"
      case 48: // $bb35
        var $177=$nextTokPtr_addr; //@line 238 "xmltok_impl.c"
        var $178=$ptr_addr; //@line 238 "xmltok_impl.c"
        HEAP[$177]=$178; //@line 238 "xmltok_impl.c"
        $3=0; //@line 239 "xmltok_impl.c"
        __label__ = 88; break; //@line 239 "xmltok_impl.c"
      case 49: // $bb36
        var $179=$ptr_addr; //@line 241 "xmltok_impl.c"
        var $180=$179+2; //@line 241 "xmltok_impl.c"
        $ptr_addr=$180; //@line 241 "xmltok_impl.c"
        __label__ = 76; break; //@line 241 "xmltok_impl.c"
      case 50: // $bb37
        var $181=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $182=$181+1; //@line 243 "xmltok_impl.c"
        var $183=HEAP[$182]; //@line 243 "xmltok_impl.c"
        var $184=($183)==0; //@line 243 "xmltok_impl.c"
        if ($184) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 243 "xmltok_impl.c"
      case 51: // $bb38
        var $185=$enc_addr; //@line 243 "xmltok_impl.c"
        var $186=$185; //@line 243 "xmltok_impl.c"
        var $187=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $188=HEAP[$187]; //@line 243 "xmltok_impl.c"
        var $189=($188); //@line 243 "xmltok_impl.c"
        var $190=$186+72; //@line 243 "xmltok_impl.c"
        var $191=$190+$189; //@line 243 "xmltok_impl.c"
        var $192=HEAP[$191]; //@line 243 "xmltok_impl.c"
        var $193=($192); //@line 243 "xmltok_impl.c"
        $iftmp_488=$193; //@line 243 "xmltok_impl.c"
        __lastLabel__ = 51; __label__ = 59; break; //@line 243 "xmltok_impl.c"
      case 52: // $bb39
        var $194=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $195=$194; //@line 243 "xmltok_impl.c"
        var $196=HEAP[$195]; //@line 243 "xmltok_impl.c"
        var $197=($196); //@line 243 "xmltok_impl.c"
        var $198=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $199=$198+1; //@line 243 "xmltok_impl.c"
        var $200=HEAP[$199]; //@line 243 "xmltok_impl.c"
        var $201=($200); //@line 243 "xmltok_impl.c"
        var $202=((($201)) & 255); //@line 243 "xmltok_impl.c"
        var $203=((($197)) & 255); //@line 243 "xmltok_impl.c"
        $hi_addr_i13=$202;
        $lo_addr_i14=$203;
        var $204=$hi_addr_i13; //@line 518 "xmltok.c"
        var $205=($204); //@line 518 "xmltok.c"
        if ($205 == 216) {
          __label__ = 53; break;
        }
        else if ($205 == 217) {
          __label__ = 53; break;
        }
        else if ($205 == 218) {
          __label__ = 53; break;
        }
        else if ($205 == 219) {
          __label__ = 53; break;
        }
        else if ($205 == 220) {
          __label__ = 54; break;
        }
        else if ($205 == 221) {
          __label__ = 54; break;
        }
        else if ($205 == 222) {
          __label__ = 54; break;
        }
        else if ($205 == 223) {
          __label__ = 54; break;
        }
        else if ($205 == 255) {
          __label__ = 55; break;
        }
        else {
        __label__ = 57; break;
        }
        
      case 53: // $bb_i16
        $0=7; //@line 520 "xmltok.c"
        __label__ = 58; break; //@line 520 "xmltok.c"
      case 54: // $bb1_i17
        $0=8; //@line 522 "xmltok.c"
        __label__ = 58; break; //@line 522 "xmltok.c"
      case 55: // $bb2_i20
        var $206=$lo_addr_i14; //@line 524 "xmltok.c"
        var $207=($206); //@line 524 "xmltok.c"
        var $_off_i18=($207) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 56; break; } else { __label__ = 57; break; }
      case 56: // $bb3_i21
        $0=0; //@line 527 "xmltok.c"
        __label__ = 58; break; //@line 527 "xmltok.c"
      case 57: // $bb4_i22
        $0=29; //@line 531 "xmltok.c"
        __label__ = 58; break; //@line 531 "xmltok.c"
      case 58: // $unicode_byte_type_exit24
        var $208=$0; //@line 520 "xmltok.c"
        $retval_i15=$208; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        $iftmp_488=$retval6_i23; //@line 243 "xmltok_impl.c"
        __lastLabel__ = 58; __label__ = 59; break; //@line 243 "xmltok_impl.c"
      case 59: // $bb40
        var $209=__lastLabel__ == 58 ? $retval6_i23 : ($193);
        if ($209 == 0) {
          __label__ = 69; break;
        }
        else if ($209 == 1) {
          __label__ = 69; break;
        }
        else if ($209 == 5) {
          __label__ = 60; break;
        }
        else if ($209 == 6) {
          __label__ = 63; break;
        }
        else if ($209 == 7) {
          __label__ = 66; break;
        }
        else if ($209 == 8) {
          __label__ = 69; break;
        }
        else if ($209 == 15) {
          __label__ = 70; break;
        }
        else {
        __label__ = 75; break;
        }
        
      case 60: // $bb41
        var $210=$end_addr; //@line 244 "xmltok_impl.c"
        var $211=($210); //@line 244 "xmltok_impl.c"
        var $212=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $213=($212); //@line 244 "xmltok_impl.c"
        var $214=($211) - ($213); //@line 244 "xmltok_impl.c"
        var $215=($214) <= 1; //@line 244 "xmltok_impl.c"
        if ($215) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 244 "xmltok_impl.c"
      case 61: // $bb42
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 62: // $bb43
        var $216=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $217=$216+2; //@line 244 "xmltok_impl.c"
        $ptr_addr=$217; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 63: // $bb44
        var $218=$end_addr; //@line 244 "xmltok_impl.c"
        var $219=($218); //@line 244 "xmltok_impl.c"
        var $220=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $221=($220); //@line 244 "xmltok_impl.c"
        var $222=($219) - ($221); //@line 244 "xmltok_impl.c"
        var $223=($222) <= 2; //@line 244 "xmltok_impl.c"
        if ($223) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 244 "xmltok_impl.c"
      case 64: // $bb45
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 65: // $bb46
        var $224=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $225=$224+3; //@line 244 "xmltok_impl.c"
        $ptr_addr=$225; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 66: // $bb47
        var $226=$end_addr; //@line 244 "xmltok_impl.c"
        var $227=($226); //@line 244 "xmltok_impl.c"
        var $228=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $229=($228); //@line 244 "xmltok_impl.c"
        var $230=($227) - ($229); //@line 244 "xmltok_impl.c"
        var $231=($230) <= 3; //@line 244 "xmltok_impl.c"
        if ($231) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 244 "xmltok_impl.c"
      case 67: // $bb48
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 68: // $bb49
        var $232=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $233=$232+4; //@line 244 "xmltok_impl.c"
        $ptr_addr=$233; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 69: // $bb50
        var $234=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $235=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$234]=$235; //@line 244 "xmltok_impl.c"
        $3=0; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 70: // $bb51
        var $236=$ptr_addr; //@line 246 "xmltok_impl.c"
        var $237=$236+2; //@line 246 "xmltok_impl.c"
        $ptr_addr=$237; //@line 246 "xmltok_impl.c"
        var $238=$ptr_addr; //@line 247 "xmltok_impl.c"
        var $239=$end_addr; //@line 247 "xmltok_impl.c"
        var $240=($238)==($239); //@line 247 "xmltok_impl.c"
        if ($240) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 247 "xmltok_impl.c"
      case 71: // $bb52
        $3=-1; //@line 248 "xmltok_impl.c"
        __label__ = 88; break; //@line 248 "xmltok_impl.c"
      case 72: // $bb53
        var $241=$ptr_addr; //@line 249 "xmltok_impl.c"
        var $242=$241+1; //@line 249 "xmltok_impl.c"
        var $243=HEAP[$242]; //@line 249 "xmltok_impl.c"
        var $244=($243)==0; //@line 249 "xmltok_impl.c"
        if ($244) { __label__ = 73; break; } else { __label__ = 76; break; } //@line 249 "xmltok_impl.c"
      case 73: // $bb54
        var $245=$ptr_addr; //@line 249 "xmltok_impl.c"
        var $246=$245; //@line 249 "xmltok_impl.c"
        var $247=HEAP[$246]; //@line 249 "xmltok_impl.c"
        var $248=($247)==62; //@line 249 "xmltok_impl.c"
        if ($248) { __label__ = 74; break; } else { __label__ = 76; break; } //@line 249 "xmltok_impl.c"
      case 74: // $bb55
        var $249=$ptr_addr; //@line 250 "xmltok_impl.c"
        var $250=$249+2; //@line 250 "xmltok_impl.c"
        var $251=$nextTokPtr_addr; //@line 250 "xmltok_impl.c"
        HEAP[$251]=$250; //@line 250 "xmltok_impl.c"
        var $252=HEAP[$tok]; //@line 251 "xmltok_impl.c"
        $3=$252; //@line 251 "xmltok_impl.c"
        __label__ = 88; break; //@line 251 "xmltok_impl.c"
      case 75: // $bb57
        var $253=$ptr_addr; //@line 255 "xmltok_impl.c"
        var $254=$253+2; //@line 255 "xmltok_impl.c"
        $ptr_addr=$254; //@line 255 "xmltok_impl.c"
        __label__ = 76; break; //@line 255 "xmltok_impl.c"
      case 76: // $bb58
        var $255=$ptr_addr; //@line 242 "xmltok_impl.c"
        var $256=$end_addr; //@line 242 "xmltok_impl.c"
        var $257=($255)!=($256); //@line 242 "xmltok_impl.c"
        if ($257) { __label__ = 50; break; } else { __label__ = 77; break; } //@line 242 "xmltok_impl.c"
      case 77: // $bb59
        $3=-1; //@line 259 "xmltok_impl.c"
        __label__ = 88; break; //@line 259 "xmltok_impl.c"
      case 78: // $bb60
        var $258=$enc_addr; //@line 261 "xmltok_impl.c"
        var $259=$target; //@line 261 "xmltok_impl.c"
        var $260=$ptr_addr; //@line 261 "xmltok_impl.c"
        var $261=_little2_checkPiTarget($258, $259, $260, $tok); //@line 261 "xmltok_impl.c"
        var $262=($261)==0; //@line 261 "xmltok_impl.c"
        if ($262) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 261 "xmltok_impl.c"
      case 79: // $bb61
        var $263=$nextTokPtr_addr; //@line 262 "xmltok_impl.c"
        var $264=$ptr_addr; //@line 262 "xmltok_impl.c"
        HEAP[$263]=$264; //@line 262 "xmltok_impl.c"
        $3=0; //@line 263 "xmltok_impl.c"
        __label__ = 88; break; //@line 263 "xmltok_impl.c"
      case 80: // $bb62
        var $265=$ptr_addr; //@line 265 "xmltok_impl.c"
        var $266=$265+2; //@line 265 "xmltok_impl.c"
        $ptr_addr=$266; //@line 265 "xmltok_impl.c"
        var $267=$ptr_addr; //@line 266 "xmltok_impl.c"
        var $268=$end_addr; //@line 266 "xmltok_impl.c"
        var $269=($267)==($268); //@line 266 "xmltok_impl.c"
        if ($269) { __label__ = 81; break; } else { __label__ = 82; break; } //@line 266 "xmltok_impl.c"
      case 81: // $bb63
        $3=-1; //@line 267 "xmltok_impl.c"
        __label__ = 88; break; //@line 267 "xmltok_impl.c"
      case 82: // $bb64
        var $270=$ptr_addr; //@line 268 "xmltok_impl.c"
        var $271=$270+1; //@line 268 "xmltok_impl.c"
        var $272=HEAP[$271]; //@line 268 "xmltok_impl.c"
        var $273=($272)==0; //@line 268 "xmltok_impl.c"
        if ($273) { __label__ = 83; break; } else { __label__ = 85; break; } //@line 268 "xmltok_impl.c"
      case 83: // $bb65
        var $274=$ptr_addr; //@line 268 "xmltok_impl.c"
        var $275=$274; //@line 268 "xmltok_impl.c"
        var $276=HEAP[$275]; //@line 268 "xmltok_impl.c"
        var $277=($276)==62; //@line 268 "xmltok_impl.c"
        if ($277) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 268 "xmltok_impl.c"
      case 84: // $bb66
        var $278=$ptr_addr; //@line 269 "xmltok_impl.c"
        var $279=$278+2; //@line 269 "xmltok_impl.c"
        var $280=$nextTokPtr_addr; //@line 269 "xmltok_impl.c"
        HEAP[$280]=$279; //@line 269 "xmltok_impl.c"
        var $281=HEAP[$tok]; //@line 270 "xmltok_impl.c"
        $3=$281; //@line 270 "xmltok_impl.c"
        __label__ = 88; break; //@line 270 "xmltok_impl.c"
      case 85: // $bb67
        var $282=$nextTokPtr_addr; //@line 274 "xmltok_impl.c"
        var $283=$ptr_addr; //@line 274 "xmltok_impl.c"
        HEAP[$282]=$283; //@line 274 "xmltok_impl.c"
        $3=0; //@line 275 "xmltok_impl.c"
        __label__ = 88; break; //@line 275 "xmltok_impl.c"
      case 86: // $bb68
        var $284=$ptr_addr; //@line 233 "xmltok_impl.c"
        var $285=$end_addr; //@line 233 "xmltok_impl.c"
        var $286=($284)!=($285); //@line 233 "xmltok_impl.c"
        if ($286) { __label__ = 25; break; } else { __label__ = 87; break; } //@line 233 "xmltok_impl.c"
      case 87: // $bb69
        $3=-1; //@line 278 "xmltok_impl.c"
        __label__ = 88; break; //@line 278 "xmltok_impl.c"
      case 88: // $bb70
        var $287=$3; //@line 226 "xmltok_impl.c"
        $retval=$287; //@line 226 "xmltok_impl.c"
        var $retval71=$retval; //@line 226 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval71; //@line 226 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_cdataSectionTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $0;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $1;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $2;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_512;
        var $iftmp_504;
        var $iftmp_502;
        var $3;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $4=$ptr_addr; //@line 305 "xmltok_impl.c"
        var $5=$end_addr; //@line 305 "xmltok_impl.c"
        var $6=($4)==($5); //@line 305 "xmltok_impl.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 305 "xmltok_impl.c"
      case 1: // $bb
        $3=-4; //@line 306 "xmltok_impl.c"
        __label__ = 75; break; //@line 306 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$end_addr; //@line 308 "xmltok_impl.c"
        var $8=($7); //@line 308 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 308 "xmltok_impl.c"
        var $10=($9); //@line 308 "xmltok_impl.c"
        var $11=($8) - ($10); //@line 308 "xmltok_impl.c"
        $n=$11; //@line 308 "xmltok_impl.c"
        var $12=$n; //@line 309 "xmltok_impl.c"
        var $13=($12) & 1; //@line 309 "xmltok_impl.c"
        var $14=((($13)) & 255); //@line 309 "xmltok_impl.c"
        var $toBool=($14)!=0; //@line 309 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 309 "xmltok_impl.c"
      case 3: // $bb2
        var $15=$n; //@line 310 "xmltok_impl.c"
        var $16=($15) & -2; //@line 310 "xmltok_impl.c"
        $n=$16; //@line 310 "xmltok_impl.c"
        var $17=$n; //@line 311 "xmltok_impl.c"
        var $18=($17)==0; //@line 311 "xmltok_impl.c"
        if ($18) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 311 "xmltok_impl.c"
      case 4: // $bb3
        $3=-1; //@line 312 "xmltok_impl.c"
        __label__ = 75; break; //@line 312 "xmltok_impl.c"
      case 5: // $bb4
        var $19=$ptr_addr; //@line 313 "xmltok_impl.c"
        var $20=$n; //@line 313 "xmltok_impl.c"
        var $21=$19+$20; //@line 313 "xmltok_impl.c"
        $end_addr=$21; //@line 313 "xmltok_impl.c"
        __label__ = 6; break; //@line 313 "xmltok_impl.c"
      case 6: // $bb5
        var $22=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $23=$22+1; //@line 316 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 316 "xmltok_impl.c"
        var $25=($24)==0; //@line 316 "xmltok_impl.c"
        if ($25) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 316 "xmltok_impl.c"
      case 7: // $bb6
        var $26=$enc_addr; //@line 316 "xmltok_impl.c"
        var $27=$26; //@line 316 "xmltok_impl.c"
        var $28=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $29=HEAP[$28]; //@line 316 "xmltok_impl.c"
        var $30=($29); //@line 316 "xmltok_impl.c"
        var $31=$27+72; //@line 316 "xmltok_impl.c"
        var $32=$31+$30; //@line 316 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 316 "xmltok_impl.c"
        var $34=($33); //@line 316 "xmltok_impl.c"
        $iftmp_502=$34; //@line 316 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 316 "xmltok_impl.c"
      case 8: // $bb7
        var $35=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $36=$35; //@line 316 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 316 "xmltok_impl.c"
        var $38=($37); //@line 316 "xmltok_impl.c"
        var $39=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $40=$39+1; //@line 316 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 316 "xmltok_impl.c"
        var $42=($41); //@line 316 "xmltok_impl.c"
        var $43=((($42)) & 255); //@line 316 "xmltok_impl.c"
        var $44=((($38)) & 255); //@line 316 "xmltok_impl.c"
        $hi_addr_i=$43;
        $lo_addr_i=$44;
        var $45=$hi_addr_i; //@line 518 "xmltok.c"
        var $46=($45); //@line 518 "xmltok.c"
        if ($46 == 216) {
          __label__ = 9; break;
        }
        else if ($46 == 217) {
          __label__ = 9; break;
        }
        else if ($46 == 218) {
          __label__ = 9; break;
        }
        else if ($46 == 219) {
          __label__ = 9; break;
        }
        else if ($46 == 220) {
          __label__ = 10; break;
        }
        else if ($46 == 221) {
          __label__ = 10; break;
        }
        else if ($46 == 222) {
          __label__ = 10; break;
        }
        else if ($46 == 223) {
          __label__ = 10; break;
        }
        else if ($46 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $47=$lo_addr_i; //@line 524 "xmltok.c"
        var $48=($47); //@line 524 "xmltok.c"
        var $_off_i=($48) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $49=$2; //@line 520 "xmltok.c"
        $retval_i=$49; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_502=$retval6_i; //@line 316 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 316 "xmltok_impl.c"
      case 15: // $bb8
        var $50=__lastLabel__ == 14 ? $retval6_i : ($34);
        if ($50 == 0) {
          __label__ = 50; break;
        }
        else if ($50 == 1) {
          __label__ = 50; break;
        }
        else if ($50 == 4) {
          __label__ = 16; break;
        }
        else if ($50 == 5) {
          __label__ = 41; break;
        }
        else if ($50 == 6) {
          __label__ = 44; break;
        }
        else if ($50 == 7) {
          __label__ = 47; break;
        }
        else if ($50 == 8) {
          __label__ = 50; break;
        }
        else if ($50 == 9) {
          __label__ = 26; break;
        }
        else if ($50 == 10) {
          __label__ = 40; break;
        }
        else {
        __label__ = 51; break;
        }
        
      case 16: // $bb9
        var $51=$ptr_addr; //@line 318 "xmltok_impl.c"
        var $52=$51+2; //@line 318 "xmltok_impl.c"
        $ptr_addr=$52; //@line 318 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 319 "xmltok_impl.c"
        var $54=$end_addr; //@line 319 "xmltok_impl.c"
        var $55=($53)==($54); //@line 319 "xmltok_impl.c"
        if ($55) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 319 "xmltok_impl.c"
      case 17: // $bb10
        $3=-1; //@line 320 "xmltok_impl.c"
        __label__ = 75; break; //@line 320 "xmltok_impl.c"
      case 18: // $bb11
        var $56=$ptr_addr; //@line 321 "xmltok_impl.c"
        var $57=$56+1; //@line 321 "xmltok_impl.c"
        var $58=HEAP[$57]; //@line 321 "xmltok_impl.c"
        var $59=($58)!=0; //@line 321 "xmltok_impl.c"
        if ($59) { __label__ = 73; break; } else { __label__ = 19; break; } //@line 321 "xmltok_impl.c"
      case 19: // $bb12
        var $60=$ptr_addr; //@line 321 "xmltok_impl.c"
        var $61=$60; //@line 321 "xmltok_impl.c"
        var $62=HEAP[$61]; //@line 321 "xmltok_impl.c"
        var $63=($62)!=93; //@line 321 "xmltok_impl.c"
        if ($63) { __label__ = 73; break; } else { __label__ = 20; break; } //@line 321 "xmltok_impl.c"
      case 20: // $bb13
        var $64=$ptr_addr; //@line 323 "xmltok_impl.c"
        var $65=$64+2; //@line 323 "xmltok_impl.c"
        $ptr_addr=$65; //@line 323 "xmltok_impl.c"
        var $66=$ptr_addr; //@line 324 "xmltok_impl.c"
        var $67=$end_addr; //@line 324 "xmltok_impl.c"
        var $68=($66)==($67); //@line 324 "xmltok_impl.c"
        if ($68) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 324 "xmltok_impl.c"
      case 21: // $bb14
        $3=-1; //@line 325 "xmltok_impl.c"
        __label__ = 75; break; //@line 325 "xmltok_impl.c"
      case 22: // $bb15
        var $69=$ptr_addr; //@line 326 "xmltok_impl.c"
        var $70=$69+1; //@line 326 "xmltok_impl.c"
        var $71=HEAP[$70]; //@line 326 "xmltok_impl.c"
        var $72=($71)!=0; //@line 326 "xmltok_impl.c"
        if ($72) { __label__ = 24; break; } else { __label__ = 23; break; } //@line 326 "xmltok_impl.c"
      case 23: // $bb16
        var $73=$ptr_addr; //@line 326 "xmltok_impl.c"
        var $74=$73; //@line 326 "xmltok_impl.c"
        var $75=HEAP[$74]; //@line 326 "xmltok_impl.c"
        var $76=($75)!=62; //@line 326 "xmltok_impl.c"
        if ($76) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 326 "xmltok_impl.c"
      case 24: // $bb17
        var $77=$ptr_addr; //@line 327 "xmltok_impl.c"
        var $78=$77+-2; //@line 327 "xmltok_impl.c"
        $ptr_addr=$78; //@line 327 "xmltok_impl.c"
        __label__ = 73; break; //@line 327 "xmltok_impl.c"
      case 25: // $bb18
        var $79=$ptr_addr; //@line 330 "xmltok_impl.c"
        var $80=$79+2; //@line 330 "xmltok_impl.c"
        var $81=$nextTokPtr_addr; //@line 330 "xmltok_impl.c"
        HEAP[$81]=$80; //@line 330 "xmltok_impl.c"
        $3=40; //@line 331 "xmltok_impl.c"
        __label__ = 75; break; //@line 331 "xmltok_impl.c"
      case 26: // $bb19
        var $82=$ptr_addr; //@line 333 "xmltok_impl.c"
        var $83=$82+2; //@line 333 "xmltok_impl.c"
        $ptr_addr=$83; //@line 333 "xmltok_impl.c"
        var $84=$ptr_addr; //@line 334 "xmltok_impl.c"
        var $85=$end_addr; //@line 334 "xmltok_impl.c"
        var $86=($84)==($85); //@line 334 "xmltok_impl.c"
        if ($86) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 334 "xmltok_impl.c"
      case 27: // $bb20
        $3=-1; //@line 335 "xmltok_impl.c"
        __label__ = 75; break; //@line 335 "xmltok_impl.c"
      case 28: // $bb21
        var $87=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $88=$87+1; //@line 336 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 336 "xmltok_impl.c"
        var $90=($89)==0; //@line 336 "xmltok_impl.c"
        if ($90) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 336 "xmltok_impl.c"
      case 29: // $bb22
        var $91=$enc_addr; //@line 336 "xmltok_impl.c"
        var $92=$91; //@line 336 "xmltok_impl.c"
        var $93=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $94=HEAP[$93]; //@line 336 "xmltok_impl.c"
        var $95=($94); //@line 336 "xmltok_impl.c"
        var $96=$92+72; //@line 336 "xmltok_impl.c"
        var $97=$96+$95; //@line 336 "xmltok_impl.c"
        var $98=HEAP[$97]; //@line 336 "xmltok_impl.c"
        var $99=($98)==10; //@line 336 "xmltok_impl.c"
        var $100=($99); //@line 336 "xmltok_impl.c"
        $iftmp_504=$100; //@line 336 "xmltok_impl.c"
        __lastLabel__ = 29; __label__ = 37; break; //@line 336 "xmltok_impl.c"
      case 30: // $bb23
        var $101=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $102=$101; //@line 336 "xmltok_impl.c"
        var $103=HEAP[$102]; //@line 336 "xmltok_impl.c"
        var $104=($103); //@line 336 "xmltok_impl.c"
        var $105=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $106=$105+1; //@line 336 "xmltok_impl.c"
        var $107=HEAP[$106]; //@line 336 "xmltok_impl.c"
        var $108=($107); //@line 336 "xmltok_impl.c"
        var $109=((($108)) & 255); //@line 336 "xmltok_impl.c"
        var $110=((($104)) & 255); //@line 336 "xmltok_impl.c"
        $hi_addr_i13=$109;
        $lo_addr_i14=$110;
        var $111=$hi_addr_i13; //@line 518 "xmltok.c"
        var $112=($111); //@line 518 "xmltok.c"
        if ($112 == 216) {
          __label__ = 31; break;
        }
        else if ($112 == 217) {
          __label__ = 31; break;
        }
        else if ($112 == 218) {
          __label__ = 31; break;
        }
        else if ($112 == 219) {
          __label__ = 31; break;
        }
        else if ($112 == 220) {
          __label__ = 32; break;
        }
        else if ($112 == 221) {
          __label__ = 32; break;
        }
        else if ($112 == 222) {
          __label__ = 32; break;
        }
        else if ($112 == 223) {
          __label__ = 32; break;
        }
        else if ($112 == 255) {
          __label__ = 33; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 31: // $bb_i16
        $0=7; //@line 520 "xmltok.c"
        __label__ = 36; break; //@line 520 "xmltok.c"
      case 32: // $bb1_i17
        $0=8; //@line 522 "xmltok.c"
        __label__ = 36; break; //@line 522 "xmltok.c"
      case 33: // $bb2_i20
        var $113=$lo_addr_i14; //@line 524 "xmltok.c"
        var $114=($113); //@line 524 "xmltok.c"
        var $_off_i18=($114) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 34; break; } else { __label__ = 35; break; }
      case 34: // $bb3_i21
        $0=0; //@line 527 "xmltok.c"
        __label__ = 36; break; //@line 527 "xmltok.c"
      case 35: // $bb4_i22
        $0=29; //@line 531 "xmltok.c"
        __label__ = 36; break; //@line 531 "xmltok.c"
      case 36: // $unicode_byte_type_exit24
        var $115=$0; //@line 520 "xmltok.c"
        $retval_i15=$115; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        var $116=($retval6_i23)==10; //@line 336 "xmltok_impl.c"
        var $117=($116); //@line 336 "xmltok_impl.c"
        $iftmp_504=$117; //@line 336 "xmltok_impl.c"
        __lastLabel__ = 36; __label__ = 37; break; //@line 336 "xmltok_impl.c"
      case 37: // $bb24
        var $118=__lastLabel__ == 36 ? $117 : ($100);
        var $toBool25=($118)!=0; //@line 336 "xmltok_impl.c"
        if ($toBool25) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 336 "xmltok_impl.c"
      case 38: // $bb26
        var $119=$ptr_addr; //@line 337 "xmltok_impl.c"
        var $120=$119+2; //@line 337 "xmltok_impl.c"
        $ptr_addr=$120; //@line 337 "xmltok_impl.c"
        __label__ = 39; break; //@line 337 "xmltok_impl.c"
      case 39: // $bb27
        var $121=$nextTokPtr_addr; //@line 338 "xmltok_impl.c"
        var $122=$ptr_addr; //@line 338 "xmltok_impl.c"
        HEAP[$121]=$122; //@line 338 "xmltok_impl.c"
        $3=7; //@line 339 "xmltok_impl.c"
        __label__ = 75; break; //@line 339 "xmltok_impl.c"
      case 40: // $bb28
        var $123=$ptr_addr; //@line 341 "xmltok_impl.c"
        var $124=$123+2; //@line 341 "xmltok_impl.c"
        var $125=$nextTokPtr_addr; //@line 341 "xmltok_impl.c"
        HEAP[$125]=$124; //@line 341 "xmltok_impl.c"
        $3=7; //@line 342 "xmltok_impl.c"
        __label__ = 75; break; //@line 342 "xmltok_impl.c"
      case 41: // $bb29
        var $126=$end_addr; //@line 343 "xmltok_impl.c"
        var $127=($126); //@line 343 "xmltok_impl.c"
        var $128=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $129=($128); //@line 343 "xmltok_impl.c"
        var $130=($127) - ($129); //@line 343 "xmltok_impl.c"
        var $131=($130) <= 1; //@line 343 "xmltok_impl.c"
        if ($131) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 343 "xmltok_impl.c"
      case 42: // $bb30
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 43: // $bb31
        var $132=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $133=$132+2; //@line 343 "xmltok_impl.c"
        $ptr_addr=$133; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 44: // $bb32
        var $134=$end_addr; //@line 343 "xmltok_impl.c"
        var $135=($134); //@line 343 "xmltok_impl.c"
        var $136=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $137=($136); //@line 343 "xmltok_impl.c"
        var $138=($135) - ($137); //@line 343 "xmltok_impl.c"
        var $139=($138) <= 2; //@line 343 "xmltok_impl.c"
        if ($139) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 343 "xmltok_impl.c"
      case 45: // $bb33
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 46: // $bb34
        var $140=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $141=$140+3; //@line 343 "xmltok_impl.c"
        $ptr_addr=$141; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 47: // $bb35
        var $142=$end_addr; //@line 343 "xmltok_impl.c"
        var $143=($142); //@line 343 "xmltok_impl.c"
        var $144=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $145=($144); //@line 343 "xmltok_impl.c"
        var $146=($143) - ($145); //@line 343 "xmltok_impl.c"
        var $147=($146) <= 3; //@line 343 "xmltok_impl.c"
        if ($147) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 343 "xmltok_impl.c"
      case 48: // $bb36
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 49: // $bb37
        var $148=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $149=$148+4; //@line 343 "xmltok_impl.c"
        $ptr_addr=$149; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 50: // $bb38
        var $150=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $151=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$150]=$151; //@line 343 "xmltok_impl.c"
        $3=0; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 51: // $bb39
        var $152=$ptr_addr; //@line 345 "xmltok_impl.c"
        var $153=$152+2; //@line 345 "xmltok_impl.c"
        $ptr_addr=$153; //@line 345 "xmltok_impl.c"
        __label__ = 73; break; //@line 345 "xmltok_impl.c"
      case 52: // $bb41
        var $154=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $155=$154+1; //@line 349 "xmltok_impl.c"
        var $156=HEAP[$155]; //@line 349 "xmltok_impl.c"
        var $157=($156)==0; //@line 349 "xmltok_impl.c"
        if ($157) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 349 "xmltok_impl.c"
      case 53: // $bb42
        var $158=$enc_addr; //@line 349 "xmltok_impl.c"
        var $159=$158; //@line 349 "xmltok_impl.c"
        var $160=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $161=HEAP[$160]; //@line 349 "xmltok_impl.c"
        var $162=($161); //@line 349 "xmltok_impl.c"
        var $163=$159+72; //@line 349 "xmltok_impl.c"
        var $164=$163+$162; //@line 349 "xmltok_impl.c"
        var $165=HEAP[$164]; //@line 349 "xmltok_impl.c"
        var $166=($165); //@line 349 "xmltok_impl.c"
        $iftmp_512=$166; //@line 349 "xmltok_impl.c"
        __lastLabel__ = 53; __label__ = 61; break; //@line 349 "xmltok_impl.c"
      case 54: // $bb43
        var $167=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $168=$167; //@line 349 "xmltok_impl.c"
        var $169=HEAP[$168]; //@line 349 "xmltok_impl.c"
        var $170=($169); //@line 349 "xmltok_impl.c"
        var $171=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $172=$171+1; //@line 349 "xmltok_impl.c"
        var $173=HEAP[$172]; //@line 349 "xmltok_impl.c"
        var $174=($173); //@line 349 "xmltok_impl.c"
        var $175=((($174)) & 255); //@line 349 "xmltok_impl.c"
        var $176=((($170)) & 255); //@line 349 "xmltok_impl.c"
        $hi_addr_i1=$175;
        $lo_addr_i2=$176;
        var $177=$hi_addr_i1; //@line 518 "xmltok.c"
        var $178=($177); //@line 518 "xmltok.c"
        if ($178 == 216) {
          __label__ = 55; break;
        }
        else if ($178 == 217) {
          __label__ = 55; break;
        }
        else if ($178 == 218) {
          __label__ = 55; break;
        }
        else if ($178 == 219) {
          __label__ = 55; break;
        }
        else if ($178 == 220) {
          __label__ = 56; break;
        }
        else if ($178 == 221) {
          __label__ = 56; break;
        }
        else if ($178 == 222) {
          __label__ = 56; break;
        }
        else if ($178 == 223) {
          __label__ = 56; break;
        }
        else if ($178 == 255) {
          __label__ = 57; break;
        }
        else {
        __label__ = 59; break;
        }
        
      case 55: // $bb_i4
        $1=7; //@line 520 "xmltok.c"
        __label__ = 60; break; //@line 520 "xmltok.c"
      case 56: // $bb1_i5
        $1=8; //@line 522 "xmltok.c"
        __label__ = 60; break; //@line 522 "xmltok.c"
      case 57: // $bb2_i8
        var $179=$lo_addr_i2; //@line 524 "xmltok.c"
        var $180=($179); //@line 524 "xmltok.c"
        var $_off_i6=($180) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 58; break; } else { __label__ = 59; break; }
      case 58: // $bb3_i9
        $1=0; //@line 527 "xmltok.c"
        __label__ = 60; break; //@line 527 "xmltok.c"
      case 59: // $bb4_i10
        $1=29; //@line 531 "xmltok.c"
        __label__ = 60; break; //@line 531 "xmltok.c"
      case 60: // $unicode_byte_type_exit12
        var $181=$1; //@line 520 "xmltok.c"
        $retval_i3=$181; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_512=$retval6_i11; //@line 349 "xmltok_impl.c"
        __lastLabel__ = 60; __label__ = 61; break; //@line 349 "xmltok_impl.c"
      case 61: // $bb44
        var $182=__lastLabel__ == 60 ? $retval6_i11 : ($166);
        if ($182 == 0) {
          __label__ = 71; break;
        }
        else if ($182 == 1) {
          __label__ = 71; break;
        }
        else if ($182 == 4) {
          __label__ = 71; break;
        }
        else if ($182 == 5) {
          __label__ = 62; break;
        }
        else if ($182 == 6) {
          __label__ = 65; break;
        }
        else if ($182 == 7) {
          __label__ = 68; break;
        }
        else if ($182 == 8) {
          __label__ = 71; break;
        }
        else if ($182 == 9) {
          __label__ = 71; break;
        }
        else if ($182 == 10) {
          __label__ = 71; break;
        }
        else {
        __label__ = 72; break;
        }
        
      case 62: // $bb45
        var $183=$end_addr; //@line 358 "xmltok_impl.c"
        var $184=($183); //@line 358 "xmltok_impl.c"
        var $185=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $186=($185); //@line 358 "xmltok_impl.c"
        var $187=($184) - ($186); //@line 358 "xmltok_impl.c"
        var $188=($187) <= 1; //@line 358 "xmltok_impl.c"
        if ($188) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 358 "xmltok_impl.c"
      case 63: // $bb46
        var $189=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $190=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$189]=$190; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 64: // $bb47
        var $191=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $192=$191+2; //@line 358 "xmltok_impl.c"
        $ptr_addr=$192; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 65: // $bb48
        var $193=$end_addr; //@line 358 "xmltok_impl.c"
        var $194=($193); //@line 358 "xmltok_impl.c"
        var $195=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $196=($195); //@line 358 "xmltok_impl.c"
        var $197=($194) - ($196); //@line 358 "xmltok_impl.c"
        var $198=($197) <= 2; //@line 358 "xmltok_impl.c"
        if ($198) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 358 "xmltok_impl.c"
      case 66: // $bb49
        var $199=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $200=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$199]=$200; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 67: // $bb50
        var $201=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $202=$201+3; //@line 358 "xmltok_impl.c"
        $ptr_addr=$202; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 68: // $bb51
        var $203=$end_addr; //@line 358 "xmltok_impl.c"
        var $204=($203); //@line 358 "xmltok_impl.c"
        var $205=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $206=($205); //@line 358 "xmltok_impl.c"
        var $207=($204) - ($206); //@line 358 "xmltok_impl.c"
        var $208=($207) <= 3; //@line 358 "xmltok_impl.c"
        if ($208) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 358 "xmltok_impl.c"
      case 69: // $bb52
        var $209=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $210=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$209]=$210; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 70: // $bb53
        var $211=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $212=$211+4; //@line 358 "xmltok_impl.c"
        $ptr_addr=$212; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 71: // $bb54
        var $213=$nextTokPtr_addr; //@line 366 "xmltok_impl.c"
        var $214=$ptr_addr; //@line 366 "xmltok_impl.c"
        HEAP[$213]=$214; //@line 366 "xmltok_impl.c"
        $3=6; //@line 367 "xmltok_impl.c"
        __label__ = 75; break; //@line 367 "xmltok_impl.c"
      case 72: // $bb55
        var $215=$ptr_addr; //@line 369 "xmltok_impl.c"
        var $216=$215+2; //@line 369 "xmltok_impl.c"
        $ptr_addr=$216; //@line 369 "xmltok_impl.c"
        __label__ = 73; break; //@line 369 "xmltok_impl.c"
      case 73: // $bb56
        var $217=$ptr_addr; //@line 348 "xmltok_impl.c"
        var $218=$end_addr; //@line 348 "xmltok_impl.c"
        var $219=($217)!=($218); //@line 348 "xmltok_impl.c"
        if ($219) { __label__ = 52; break; } else { __label__ = 74; break; } //@line 348 "xmltok_impl.c"
      case 74: // $bb57
        var $220=$nextTokPtr_addr; //@line 373 "xmltok_impl.c"
        var $221=$ptr_addr; //@line 373 "xmltok_impl.c"
        HEAP[$220]=$221; //@line 373 "xmltok_impl.c"
        $3=6; //@line 374 "xmltok_impl.c"
        __label__ = 75; break; //@line 374 "xmltok_impl.c"
      case 75: // $bb58
        var $222=$3; //@line 306 "xmltok_impl.c"
        $retval=$222; //@line 306 "xmltok_impl.c"
        var $retval59=$retval; //@line 306 "xmltok_impl.c"
        ;
        return $retval59; //@line 306 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_scanRef($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i10_i;
        var $lo_addr_i11_i;
        var $retval_i12_i;
        var $0;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i1_i;
        var $1;
        var $hi_addr_i1_i_i;
        var $lo_addr_i2_i_i;
        var $retval_i3_i_i;
        var $2;
        var $hi_addr_i_i_i;
        var $lo_addr_i_i_i;
        var $retval_i_i_i;
        var $3;
        var $enc_addr_i_i;
        var $ptr_addr_i_i;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i_i;
        var $iftmp_540_i_i;
        var $4;
        var $iftmp_538_i_i;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i13;
        var $iftmp_544_i;
        var $iftmp_542_i;
        var $5;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $6;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $7;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_554;
        var $iftmp_546;
        var $8;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $9=$ptr_addr; //@line 496 "xmltok_impl.c"
        var $10=$end_addr; //@line 496 "xmltok_impl.c"
        var $11=($9)==($10); //@line 496 "xmltok_impl.c"
        if ($11) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 496 "xmltok_impl.c"
      case 1: // $bb
        $8=-1; //@line 497 "xmltok_impl.c"
        __label__ = 111; break; //@line 497 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $13=$12+1; //@line 498 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 498 "xmltok_impl.c"
        var $15=($14)==0; //@line 498 "xmltok_impl.c"
        if ($15) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 498 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$enc_addr; //@line 498 "xmltok_impl.c"
        var $17=$16; //@line 498 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 498 "xmltok_impl.c"
        var $20=($19); //@line 498 "xmltok_impl.c"
        var $21=$17+72; //@line 498 "xmltok_impl.c"
        var $22=$21+$20; //@line 498 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 498 "xmltok_impl.c"
        var $24=($23); //@line 498 "xmltok_impl.c"
        $iftmp_546=$24; //@line 498 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 498 "xmltok_impl.c"
      case 4: // $bb3
        var $25=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $26=$25; //@line 498 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 498 "xmltok_impl.c"
        var $28=($27); //@line 498 "xmltok_impl.c"
        var $29=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $30=$29+1; //@line 498 "xmltok_impl.c"
        var $31=HEAP[$30]; //@line 498 "xmltok_impl.c"
        var $32=($31); //@line 498 "xmltok_impl.c"
        var $33=((($32)) & 255); //@line 498 "xmltok_impl.c"
        var $34=((($28)) & 255); //@line 498 "xmltok_impl.c"
        $hi_addr_i=$33;
        $lo_addr_i=$34;
        var $35=$hi_addr_i; //@line 518 "xmltok.c"
        var $36=($35); //@line 518 "xmltok.c"
        if ($36 == 216) {
          __label__ = 5; break;
        }
        else if ($36 == 217) {
          __label__ = 5; break;
        }
        else if ($36 == 218) {
          __label__ = 5; break;
        }
        else if ($36 == 219) {
          __label__ = 5; break;
        }
        else if ($36 == 220) {
          __label__ = 6; break;
        }
        else if ($36 == 221) {
          __label__ = 6; break;
        }
        else if ($36 == 222) {
          __label__ = 6; break;
        }
        else if ($36 == 223) {
          __label__ = 6; break;
        }
        else if ($36 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $37=$lo_addr_i; //@line 524 "xmltok.c"
        var $38=($37); //@line 524 "xmltok.c"
        var $_off_i=($38) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $39=$7; //@line 520 "xmltok.c"
        $retval_i=$39; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_546=$retval6_i; //@line 498 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 498 "xmltok_impl.c"
      case 11: // $bb4
        var $40=__lastLabel__ == 10 ? $retval6_i : ($24);
        if ($40 == 5) {
          __label__ = 15; break;
        }
        else if ($40 == 6) {
          __label__ = 18; break;
        }
        else if ($40 == 7) {
          __label__ = 21; break;
        }
        else if ($40 == 19) {
          __label__ = 24; break;
        }
        else if ($40 == 22) {
          __label__ = 14; break;
        }
        else if ($40 == 24) {
          __label__ = 14; break;
        }
        else if ($40 == 29) {
          __label__ = 12; break;
        }
        else {
        __label__ = 84; break;
        }
        
      case 12: // $bb5
        var $41=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $42=$41+1; //@line 499 "xmltok_impl.c"
        var $43=HEAP[$42]; //@line 499 "xmltok_impl.c"
        var $44=($43); //@line 499 "xmltok_impl.c"
        var $45=_nmstrtPages+$44; //@line 499 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 499 "xmltok_impl.c"
        var $47=($46); //@line 499 "xmltok_impl.c"
        var $48=($47) * 8;
        var $49=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $50=$49; //@line 499 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 499 "xmltok_impl.c"
        var $52=($51) >>> 5; //@line 499 "xmltok_impl.c"
        var $53=($52); //@line 499 "xmltok_impl.c"
        var $54=($53) + ($48); //@line 499 "xmltok_impl.c"
        var $55=_namingBitmap+$54*4; //@line 499 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 499 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $58=$57; //@line 499 "xmltok_impl.c"
        var $59=HEAP[$58]; //@line 499 "xmltok_impl.c"
        var $60=($59); //@line 499 "xmltok_impl.c"
        var $61=($60) & 31; //@line 499 "xmltok_impl.c"
        var $62=1 << ($61); //@line 499 "xmltok_impl.c"
        var $63=($62) & ($56); //@line 499 "xmltok_impl.c"
        var $64=($63)==0; //@line 499 "xmltok_impl.c"
        if ($64) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 499 "xmltok_impl.c"
      case 13: // $bb6
        var $65=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $66=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$65]=$66; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 14: // $bb7
        var $67=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $68=$67+2; //@line 499 "xmltok_impl.c"
        $ptr_addr=$68; //@line 499 "xmltok_impl.c"
        __label__ = 109; break; //@line 499 "xmltok_impl.c"
      case 15: // $bb8
        var $69=$end_addr; //@line 499 "xmltok_impl.c"
        var $70=($69); //@line 499 "xmltok_impl.c"
        var $71=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $72=($71); //@line 499 "xmltok_impl.c"
        var $73=($70) - ($72); //@line 499 "xmltok_impl.c"
        var $74=($73) <= 1; //@line 499 "xmltok_impl.c"
        if ($74) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 499 "xmltok_impl.c"
      case 16: // $bb9
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 17: // $bb10
        var $75=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$75]=$76; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 18: // $bb11
        var $77=$end_addr; //@line 499 "xmltok_impl.c"
        var $78=($77); //@line 499 "xmltok_impl.c"
        var $79=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $80=($79); //@line 499 "xmltok_impl.c"
        var $81=($78) - ($80); //@line 499 "xmltok_impl.c"
        var $82=($81) <= 2; //@line 499 "xmltok_impl.c"
        if ($82) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 499 "xmltok_impl.c"
      case 19: // $bb12
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 20: // $bb13
        var $83=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $84=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$83]=$84; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 21: // $bb14
        var $85=$end_addr; //@line 499 "xmltok_impl.c"
        var $86=($85); //@line 499 "xmltok_impl.c"
        var $87=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $88=($87); //@line 499 "xmltok_impl.c"
        var $89=($86) - ($88); //@line 499 "xmltok_impl.c"
        var $90=($89) <= 3; //@line 499 "xmltok_impl.c"
        if ($90) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 499 "xmltok_impl.c"
      case 22: // $bb15
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 23: // $bb16
        var $91=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $92=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$91]=$92; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 24: // $bb17
        var $93=$ptr_addr; //@line 501 "xmltok_impl.c"
        var $94=$93+2; //@line 501 "xmltok_impl.c"
        var $95=$enc_addr; //@line 501 "xmltok_impl.c"
        var $96=$end_addr; //@line 501 "xmltok_impl.c"
        var $97=$nextTokPtr_addr; //@line 501 "xmltok_impl.c"
        $enc_addr_i=$95;
        $ptr_addr_i=$94;
        $end_addr_i=$96;
        $nextTokPtr_addr_i=$97;
        var $98=$ptr_addr_i; //@line 464 "xmltok_impl.c"
        var $99=$end_addr_i; //@line 464 "xmltok_impl.c"
        var $100=($98)!=($99); //@line 464 "xmltok_impl.c"
        if ($100) { __label__ = 25; break; } else { __label__ = 82; break; } //@line 464 "xmltok_impl.c"
      case 25: // $bb_i14
        var $101=$ptr_addr_i; //@line 465 "xmltok_impl.c"
        var $102=$101+1; //@line 465 "xmltok_impl.c"
        var $103=HEAP[$102]; //@line 465 "xmltok_impl.c"
        var $104=($103)==0; //@line 465 "xmltok_impl.c"
        if ($104) { __label__ = 26; break; } else { __label__ = 56; break; } //@line 465 "xmltok_impl.c"
      case 26: // $bb1_i15
        var $105=$ptr_addr_i; //@line 465 "xmltok_impl.c"
        var $106=$105; //@line 465 "xmltok_impl.c"
        var $107=HEAP[$106]; //@line 465 "xmltok_impl.c"
        var $108=($107)==120; //@line 465 "xmltok_impl.c"
        if ($108) { __label__ = 27; break; } else { __label__ = 56; break; } //@line 465 "xmltok_impl.c"
      case 27: // $bb2_i16
        var $109=$ptr_addr_i; //@line 466 "xmltok_impl.c"
        var $110=$109+2; //@line 466 "xmltok_impl.c"
        var $111=$enc_addr_i; //@line 466 "xmltok_impl.c"
        var $112=$end_addr_i; //@line 466 "xmltok_impl.c"
        var $113=$nextTokPtr_addr_i; //@line 466 "xmltok_impl.c"
        $enc_addr_i_i=$111;
        $ptr_addr_i_i=$110;
        $end_addr_i_i=$112;
        $nextTokPtr_addr_i_i=$113;
        var $114=$ptr_addr_i_i; //@line 432 "xmltok_impl.c"
        var $115=$end_addr_i_i; //@line 432 "xmltok_impl.c"
        var $116=($114)!=($115); //@line 432 "xmltok_impl.c"
        if ($116) { __label__ = 28; break; } else { __label__ = 54; break; } //@line 432 "xmltok_impl.c"
      case 28: // $bb_i_i
        var $117=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $118=$117+1; //@line 433 "xmltok_impl.c"
        var $119=HEAP[$118]; //@line 433 "xmltok_impl.c"
        var $120=($119)==0; //@line 433 "xmltok_impl.c"
        if ($120) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 433 "xmltok_impl.c"
      case 29: // $bb1_i_i
        var $121=$enc_addr_i_i; //@line 433 "xmltok_impl.c"
        var $122=$121; //@line 433 "xmltok_impl.c"
        var $123=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $124=HEAP[$123]; //@line 433 "xmltok_impl.c"
        var $125=($124); //@line 433 "xmltok_impl.c"
        var $126=$122+72; //@line 433 "xmltok_impl.c"
        var $127=$126+$125; //@line 433 "xmltok_impl.c"
        var $128=HEAP[$127]; //@line 433 "xmltok_impl.c"
        var $129=($128); //@line 433 "xmltok_impl.c"
        $iftmp_538_i_i=$129; //@line 433 "xmltok_impl.c"
        __label__ = 37; break; //@line 433 "xmltok_impl.c"
      case 30: // $bb2_i_i
        var $130=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $131=$130; //@line 433 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 433 "xmltok_impl.c"
        var $133=($132); //@line 433 "xmltok_impl.c"
        var $134=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $135=$134+1; //@line 433 "xmltok_impl.c"
        var $136=HEAP[$135]; //@line 433 "xmltok_impl.c"
        var $137=($136); //@line 433 "xmltok_impl.c"
        var $138=((($137)) & 255); //@line 433 "xmltok_impl.c"
        var $139=((($133)) & 255); //@line 433 "xmltok_impl.c"
        $hi_addr_i_i_i=$138;
        $lo_addr_i_i_i=$139;
        var $140=$hi_addr_i_i_i; //@line 518 "xmltok.c"
        var $141=($140); //@line 518 "xmltok.c"
        if ($141 == 216) {
          __label__ = 31; break;
        }
        else if ($141 == 217) {
          __label__ = 31; break;
        }
        else if ($141 == 218) {
          __label__ = 31; break;
        }
        else if ($141 == 219) {
          __label__ = 31; break;
        }
        else if ($141 == 220) {
          __label__ = 32; break;
        }
        else if ($141 == 221) {
          __label__ = 32; break;
        }
        else if ($141 == 222) {
          __label__ = 32; break;
        }
        else if ($141 == 223) {
          __label__ = 32; break;
        }
        else if ($141 == 255) {
          __label__ = 33; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 31: // $bb_i_i_i
        $3=7; //@line 520 "xmltok.c"
        __label__ = 36; break; //@line 520 "xmltok.c"
      case 32: // $bb1_i_i_i
        $3=8; //@line 522 "xmltok.c"
        __label__ = 36; break; //@line 522 "xmltok.c"
      case 33: // $bb2_i_i_i
        var $142=$lo_addr_i_i_i; //@line 524 "xmltok.c"
        var $143=($142); //@line 524 "xmltok.c"
        var $_off_i_i_i=($143) + -254;
        var $switch_i_i_i=($_off_i_i_i) < 2;
        if ($switch_i_i_i) { __label__ = 34; break; } else { __label__ = 35; break; }
      case 34: // $bb3_i_i_i
        $3=0; //@line 527 "xmltok.c"
        __label__ = 36; break; //@line 527 "xmltok.c"
      case 35: // $bb4_i_i_i
        $3=29; //@line 531 "xmltok.c"
        __label__ = 36; break; //@line 531 "xmltok.c"
      case 36: // $unicode_byte_type_exit_i_i
        var $144=$3; //@line 520 "xmltok.c"
        $retval_i_i_i=$144; //@line 520 "xmltok.c"
        var $retval6_i_i_i=$retval_i_i_i; //@line 520 "xmltok.c"
        $iftmp_538_i_i=$retval6_i_i_i; //@line 433 "xmltok_impl.c"
        __label__ = 37; break; //@line 433 "xmltok_impl.c"
      case 37: // $bb3_i_i
        var $145=$iftmp_538_i_i; //@line 433 "xmltok_impl.c"
        var $_off_i_i=($145) + -24;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 38; break; } else { __label__ = 39; break; }
      case 38: // $bb4_i_i
        var $146=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $147=$146+2; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$147; //@line 441 "xmltok_impl.c"
        __label__ = 53; break; //@line 441 "xmltok_impl.c"
      case 39: // $bb5_i_i
        var $148=$nextTokPtr_addr_i_i; //@line 438 "xmltok_impl.c"
        var $149=$ptr_addr_i_i; //@line 438 "xmltok_impl.c"
        HEAP[$148]=$149; //@line 438 "xmltok_impl.c"
        $4=0; //@line 439 "xmltok_impl.c"
        __label__ = 55; break; //@line 439 "xmltok_impl.c"
      case 40: // $bb6_i_i
        var $150=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $151=$150+1; //@line 442 "xmltok_impl.c"
        var $152=HEAP[$151]; //@line 442 "xmltok_impl.c"
        var $153=($152)==0; //@line 442 "xmltok_impl.c"
        if ($153) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 442 "xmltok_impl.c"
      case 41: // $bb7_i_i
        var $154=$enc_addr_i_i; //@line 442 "xmltok_impl.c"
        var $155=$154; //@line 442 "xmltok_impl.c"
        var $156=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $157=HEAP[$156]; //@line 442 "xmltok_impl.c"
        var $158=($157); //@line 442 "xmltok_impl.c"
        var $159=$155+72; //@line 442 "xmltok_impl.c"
        var $160=$159+$158; //@line 442 "xmltok_impl.c"
        var $161=HEAP[$160]; //@line 442 "xmltok_impl.c"
        var $162=($161); //@line 442 "xmltok_impl.c"
        $iftmp_540_i_i=$162; //@line 442 "xmltok_impl.c"
        __lastLabel__ = 41; __label__ = 49; break; //@line 442 "xmltok_impl.c"
      case 42: // $bb8_i_i
        var $163=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $164=$163; //@line 442 "xmltok_impl.c"
        var $165=HEAP[$164]; //@line 442 "xmltok_impl.c"
        var $166=($165); //@line 442 "xmltok_impl.c"
        var $167=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $168=$167+1; //@line 442 "xmltok_impl.c"
        var $169=HEAP[$168]; //@line 442 "xmltok_impl.c"
        var $170=($169); //@line 442 "xmltok_impl.c"
        var $171=((($170)) & 255); //@line 442 "xmltok_impl.c"
        var $172=((($166)) & 255); //@line 442 "xmltok_impl.c"
        $hi_addr_i1_i_i=$171;
        $lo_addr_i2_i_i=$172;
        var $173=$hi_addr_i1_i_i; //@line 518 "xmltok.c"
        var $174=($173); //@line 518 "xmltok.c"
        if ($174 == 216) {
          __label__ = 43; break;
        }
        else if ($174 == 217) {
          __label__ = 43; break;
        }
        else if ($174 == 218) {
          __label__ = 43; break;
        }
        else if ($174 == 219) {
          __label__ = 43; break;
        }
        else if ($174 == 220) {
          __label__ = 44; break;
        }
        else if ($174 == 221) {
          __label__ = 44; break;
        }
        else if ($174 == 222) {
          __label__ = 44; break;
        }
        else if ($174 == 223) {
          __label__ = 44; break;
        }
        else if ($174 == 255) {
          __label__ = 45; break;
        }
        else {
        __label__ = 47; break;
        }
        
      case 43: // $bb_i4_i_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 48; break; //@line 520 "xmltok.c"
      case 44: // $bb1_i5_i_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 48; break; //@line 522 "xmltok.c"
      case 45: // $bb2_i8_i_i
        var $175=$lo_addr_i2_i_i; //@line 524 "xmltok.c"
        var $176=($175); //@line 524 "xmltok.c"
        var $_off_i6_i_i=($176) + -254;
        var $switch_i7_i_i=($_off_i6_i_i) < 2;
        if ($switch_i7_i_i) { __label__ = 46; break; } else { __label__ = 47; break; }
      case 46: // $bb3_i9_i_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 48; break; //@line 527 "xmltok.c"
      case 47: // $bb4_i10_i_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 48; break; //@line 531 "xmltok.c"
      case 48: // $unicode_byte_type_exit12_i_i
        var $177=$2; //@line 520 "xmltok.c"
        $retval_i3_i_i=$177; //@line 520 "xmltok.c"
        var $retval6_i11_i_i=$retval_i3_i_i; //@line 520 "xmltok.c"
        $iftmp_540_i_i=$retval6_i11_i_i; //@line 442 "xmltok_impl.c"
        __lastLabel__ = 48; __label__ = 49; break; //@line 442 "xmltok_impl.c"
      case 49: // $bb9_i_i
        var $178=__lastLabel__ == 48 ? $retval6_i11_i_i : ($162);
        if ($178 == 18) {
          __label__ = 51; break;
        }
        else if ($178 == 24) {
          __label__ = 50; break;
        }
        else if ($178 == 25) {
          __label__ = 50; break;
        }
        else {
        __label__ = 52; break;
        }
        
      case 50: // $bb10_i_i
        var $179=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $180=$179+2; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$180; //@line 441 "xmltok_impl.c"
        __label__ = 53; break; //@line 441 "xmltok_impl.c"
      case 51: // $bb11_i_i
        var $181=$ptr_addr_i_i; //@line 447 "xmltok_impl.c"
        var $182=$181+2; //@line 447 "xmltok_impl.c"
        var $183=$nextTokPtr_addr_i_i; //@line 447 "xmltok_impl.c"
        HEAP[$183]=$182; //@line 447 "xmltok_impl.c"
        $4=10; //@line 448 "xmltok_impl.c"
        __label__ = 55; break; //@line 448 "xmltok_impl.c"
      case 52: // $bb12_i_i
        var $184=$nextTokPtr_addr_i_i; //@line 450 "xmltok_impl.c"
        var $185=$ptr_addr_i_i; //@line 450 "xmltok_impl.c"
        HEAP[$184]=$185; //@line 450 "xmltok_impl.c"
        $4=0; //@line 451 "xmltok_impl.c"
        __label__ = 55; break; //@line 451 "xmltok_impl.c"
      case 53: // $bb13_i_i
        var $186=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $187=$end_addr_i_i; //@line 441 "xmltok_impl.c"
        var $188=($186)!=($187); //@line 441 "xmltok_impl.c"
        if ($188) { __label__ = 40; break; } else { __label__ = 54; break; } //@line 441 "xmltok_impl.c"
      case 54: // $bb14_i_i
        $4=-1; //@line 455 "xmltok_impl.c"
        __label__ = 55; break; //@line 455 "xmltok_impl.c"
      case 55: // $little2_scanHexCharRef_exit_i
        var $189=$4; //@line 439 "xmltok_impl.c"
        $retval_i_i=$189; //@line 439 "xmltok_impl.c"
        var $retval16_i_i=$retval_i_i; //@line 439 "xmltok_impl.c"
        $5=$retval16_i_i; //@line 466 "xmltok_impl.c"
        __label__ = 83; break; //@line 466 "xmltok_impl.c"
      case 56: // $bb3_i17
        var $190=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $191=$190+1; //@line 467 "xmltok_impl.c"
        var $192=HEAP[$191]; //@line 467 "xmltok_impl.c"
        var $193=($192)==0; //@line 467 "xmltok_impl.c"
        if ($193) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 467 "xmltok_impl.c"
      case 57: // $bb4_i18
        var $194=$enc_addr_i; //@line 467 "xmltok_impl.c"
        var $195=$194; //@line 467 "xmltok_impl.c"
        var $196=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $197=HEAP[$196]; //@line 467 "xmltok_impl.c"
        var $198=($197); //@line 467 "xmltok_impl.c"
        var $199=$195+72; //@line 467 "xmltok_impl.c"
        var $200=$199+$198; //@line 467 "xmltok_impl.c"
        var $201=HEAP[$200]; //@line 467 "xmltok_impl.c"
        var $202=($201); //@line 467 "xmltok_impl.c"
        $iftmp_542_i=$202; //@line 467 "xmltok_impl.c"
        __lastLabel__ = 57; __label__ = 65; break; //@line 467 "xmltok_impl.c"
      case 58: // $bb5_i
        var $203=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $204=$203; //@line 467 "xmltok_impl.c"
        var $205=HEAP[$204]; //@line 467 "xmltok_impl.c"
        var $206=($205); //@line 467 "xmltok_impl.c"
        var $207=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $208=$207+1; //@line 467 "xmltok_impl.c"
        var $209=HEAP[$208]; //@line 467 "xmltok_impl.c"
        var $210=($209); //@line 467 "xmltok_impl.c"
        var $211=((($210)) & 255); //@line 467 "xmltok_impl.c"
        var $212=((($206)) & 255); //@line 467 "xmltok_impl.c"
        $hi_addr_i10_i=$211;
        $lo_addr_i11_i=$212;
        var $213=$hi_addr_i10_i; //@line 518 "xmltok.c"
        var $214=($213); //@line 518 "xmltok.c"
        if ($214 == 216) {
          __label__ = 59; break;
        }
        else if ($214 == 217) {
          __label__ = 59; break;
        }
        else if ($214 == 218) {
          __label__ = 59; break;
        }
        else if ($214 == 219) {
          __label__ = 59; break;
        }
        else if ($214 == 220) {
          __label__ = 60; break;
        }
        else if ($214 == 221) {
          __label__ = 60; break;
        }
        else if ($214 == 222) {
          __label__ = 60; break;
        }
        else if ($214 == 223) {
          __label__ = 60; break;
        }
        else if ($214 == 255) {
          __label__ = 61; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 59: // $bb_i13_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 64; break; //@line 520 "xmltok.c"
      case 60: // $bb1_i14_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 64; break; //@line 522 "xmltok.c"
      case 61: // $bb2_i17_i
        var $215=$lo_addr_i11_i; //@line 524 "xmltok.c"
        var $216=($215); //@line 524 "xmltok.c"
        var $_off_i15_i=($216) + -254;
        var $switch_i16_i=($_off_i15_i) < 2;
        if ($switch_i16_i) { __label__ = 62; break; } else { __label__ = 63; break; }
      case 62: // $bb3_i18_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 64; break; //@line 527 "xmltok.c"
      case 63: // $bb4_i19_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 64; break; //@line 531 "xmltok.c"
      case 64: // $unicode_byte_type_exit22_i
        var $217=$0; //@line 520 "xmltok.c"
        $retval_i12_i=$217; //@line 520 "xmltok.c"
        var $retval6_i20_i=$retval_i12_i; //@line 520 "xmltok.c"
        $iftmp_542_i=$retval6_i20_i; //@line 467 "xmltok_impl.c"
        __lastLabel__ = 64; __label__ = 65; break; //@line 467 "xmltok_impl.c"
      case 65: // $bb6_i
        var $218=__lastLabel__ == 64 ? $retval6_i20_i : ($202);
        var $cond_i=($218)==25;
        if ($cond_i) { __label__ = 66; break; } else { __label__ = 67; break; }
      case 66: // $bb7_i
        var $219=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $220=$219+2; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$220; //@line 474 "xmltok_impl.c"
        __label__ = 81; break; //@line 474 "xmltok_impl.c"
      case 67: // $bb8_i
        var $221=$nextTokPtr_addr_i; //@line 471 "xmltok_impl.c"
        var $222=$ptr_addr_i; //@line 471 "xmltok_impl.c"
        HEAP[$221]=$222; //@line 471 "xmltok_impl.c"
        $5=0; //@line 472 "xmltok_impl.c"
        __label__ = 83; break; //@line 472 "xmltok_impl.c"
      case 68: // $bb9_i
        var $223=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $224=$223+1; //@line 475 "xmltok_impl.c"
        var $225=HEAP[$224]; //@line 475 "xmltok_impl.c"
        var $226=($225)==0; //@line 475 "xmltok_impl.c"
        if ($226) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 475 "xmltok_impl.c"
      case 69: // $bb10_i
        var $227=$enc_addr_i; //@line 475 "xmltok_impl.c"
        var $228=$227; //@line 475 "xmltok_impl.c"
        var $229=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $230=HEAP[$229]; //@line 475 "xmltok_impl.c"
        var $231=($230); //@line 475 "xmltok_impl.c"
        var $232=$228+72; //@line 475 "xmltok_impl.c"
        var $233=$232+$231; //@line 475 "xmltok_impl.c"
        var $234=HEAP[$233]; //@line 475 "xmltok_impl.c"
        var $235=($234); //@line 475 "xmltok_impl.c"
        $iftmp_544_i=$235; //@line 475 "xmltok_impl.c"
        __lastLabel__ = 69; __label__ = 77; break; //@line 475 "xmltok_impl.c"
      case 70: // $bb11_i
        var $236=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $237=$236; //@line 475 "xmltok_impl.c"
        var $238=HEAP[$237]; //@line 475 "xmltok_impl.c"
        var $239=($238); //@line 475 "xmltok_impl.c"
        var $240=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $241=$240+1; //@line 475 "xmltok_impl.c"
        var $242=HEAP[$241]; //@line 475 "xmltok_impl.c"
        var $243=($242); //@line 475 "xmltok_impl.c"
        var $244=((($243)) & 255); //@line 475 "xmltok_impl.c"
        var $245=((($239)) & 255); //@line 475 "xmltok_impl.c"
        $hi_addr_i_i=$244;
        $lo_addr_i_i=$245;
        var $246=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $247=($246); //@line 518 "xmltok.c"
        if ($247 == 216) {
          __label__ = 71; break;
        }
        else if ($247 == 217) {
          __label__ = 71; break;
        }
        else if ($247 == 218) {
          __label__ = 71; break;
        }
        else if ($247 == 219) {
          __label__ = 71; break;
        }
        else if ($247 == 220) {
          __label__ = 72; break;
        }
        else if ($247 == 221) {
          __label__ = 72; break;
        }
        else if ($247 == 222) {
          __label__ = 72; break;
        }
        else if ($247 == 223) {
          __label__ = 72; break;
        }
        else if ($247 == 255) {
          __label__ = 73; break;
        }
        else {
        __label__ = 75; break;
        }
        
      case 71: // $bb_i2_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 76; break; //@line 520 "xmltok.c"
      case 72: // $bb1_i3_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 76; break; //@line 522 "xmltok.c"
      case 73: // $bb2_i6_i
        var $248=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $249=($248); //@line 524 "xmltok.c"
        var $_off_i4_i=($249) + -254;
        var $switch_i5_i=($_off_i4_i) < 2;
        if ($switch_i5_i) { __label__ = 74; break; } else { __label__ = 75; break; }
      case 74: // $bb3_i7_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 76; break; //@line 527 "xmltok.c"
      case 75: // $bb4_i8_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 76; break; //@line 531 "xmltok.c"
      case 76: // $unicode_byte_type_exit_i
        var $250=$1; //@line 520 "xmltok.c"
        $retval_i1_i=$250; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i1_i; //@line 520 "xmltok.c"
        $iftmp_544_i=$retval6_i_i; //@line 475 "xmltok_impl.c"
        __lastLabel__ = 76; __label__ = 77; break; //@line 475 "xmltok_impl.c"
      case 77: // $bb12_i
        var $251=__lastLabel__ == 76 ? $retval6_i_i : ($235);
        if ($251 == 18) {
          __label__ = 79; break;
        }
        else if ($251 == 25) {
          __label__ = 78; break;
        }
        else {
        __label__ = 80; break;
        }
        
      case 78: // $bb13_i
        var $252=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $253=$252+2; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$253; //@line 474 "xmltok_impl.c"
        __label__ = 81; break; //@line 474 "xmltok_impl.c"
      case 79: // $bb14_i
        var $254=$ptr_addr_i; //@line 479 "xmltok_impl.c"
        var $255=$254+2; //@line 479 "xmltok_impl.c"
        var $256=$nextTokPtr_addr_i; //@line 479 "xmltok_impl.c"
        HEAP[$256]=$255; //@line 479 "xmltok_impl.c"
        $5=10; //@line 480 "xmltok_impl.c"
        __label__ = 83; break; //@line 480 "xmltok_impl.c"
      case 80: // $bb15_i
        var $257=$nextTokPtr_addr_i; //@line 482 "xmltok_impl.c"
        var $258=$ptr_addr_i; //@line 482 "xmltok_impl.c"
        HEAP[$257]=$258; //@line 482 "xmltok_impl.c"
        $5=0; //@line 483 "xmltok_impl.c"
        __label__ = 83; break; //@line 483 "xmltok_impl.c"
      case 81: // $bb16_i
        var $259=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $260=$end_addr_i; //@line 474 "xmltok_impl.c"
        var $261=($259)!=($260); //@line 474 "xmltok_impl.c"
        if ($261) { __label__ = 68; break; } else { __label__ = 82; break; } //@line 474 "xmltok_impl.c"
      case 82: // $bb17_i
        $5=-1; //@line 487 "xmltok_impl.c"
        __label__ = 83; break; //@line 487 "xmltok_impl.c"
      case 83: // $little2_scanCharRef_exit
        var $262=$5; //@line 466 "xmltok_impl.c"
        $retval_i13=$262; //@line 466 "xmltok_impl.c"
        var $retval19_i=$retval_i13; //@line 466 "xmltok_impl.c"
        $8=$retval19_i; //@line 501 "xmltok_impl.c"
        __label__ = 111; break; //@line 501 "xmltok_impl.c"
      case 84: // $bb18
        var $263=$nextTokPtr_addr; //@line 503 "xmltok_impl.c"
        var $264=$ptr_addr; //@line 503 "xmltok_impl.c"
        HEAP[$263]=$264; //@line 503 "xmltok_impl.c"
        $8=0; //@line 504 "xmltok_impl.c"
        __label__ = 111; break; //@line 504 "xmltok_impl.c"
      case 85: // $bb19
        var $265=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $266=$265+1; //@line 507 "xmltok_impl.c"
        var $267=HEAP[$266]; //@line 507 "xmltok_impl.c"
        var $268=($267)==0; //@line 507 "xmltok_impl.c"
        if ($268) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 507 "xmltok_impl.c"
      case 86: // $bb20
        var $269=$enc_addr; //@line 507 "xmltok_impl.c"
        var $270=$269; //@line 507 "xmltok_impl.c"
        var $271=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $272=HEAP[$271]; //@line 507 "xmltok_impl.c"
        var $273=($272); //@line 507 "xmltok_impl.c"
        var $274=$270+72; //@line 507 "xmltok_impl.c"
        var $275=$274+$273; //@line 507 "xmltok_impl.c"
        var $276=HEAP[$275]; //@line 507 "xmltok_impl.c"
        var $277=($276); //@line 507 "xmltok_impl.c"
        $iftmp_554=$277; //@line 507 "xmltok_impl.c"
        __lastLabel__ = 86; __label__ = 94; break; //@line 507 "xmltok_impl.c"
      case 87: // $bb21
        var $278=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $279=$278; //@line 507 "xmltok_impl.c"
        var $280=HEAP[$279]; //@line 507 "xmltok_impl.c"
        var $281=($280); //@line 507 "xmltok_impl.c"
        var $282=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $283=$282+1; //@line 507 "xmltok_impl.c"
        var $284=HEAP[$283]; //@line 507 "xmltok_impl.c"
        var $285=($284); //@line 507 "xmltok_impl.c"
        var $286=((($285)) & 255); //@line 507 "xmltok_impl.c"
        var $287=((($281)) & 255); //@line 507 "xmltok_impl.c"
        $hi_addr_i1=$286;
        $lo_addr_i2=$287;
        var $288=$hi_addr_i1; //@line 518 "xmltok.c"
        var $289=($288); //@line 518 "xmltok.c"
        if ($289 == 216) {
          __label__ = 88; break;
        }
        else if ($289 == 217) {
          __label__ = 88; break;
        }
        else if ($289 == 218) {
          __label__ = 88; break;
        }
        else if ($289 == 219) {
          __label__ = 88; break;
        }
        else if ($289 == 220) {
          __label__ = 89; break;
        }
        else if ($289 == 221) {
          __label__ = 89; break;
        }
        else if ($289 == 222) {
          __label__ = 89; break;
        }
        else if ($289 == 223) {
          __label__ = 89; break;
        }
        else if ($289 == 255) {
          __label__ = 90; break;
        }
        else {
        __label__ = 92; break;
        }
        
      case 88: // $bb_i4
        $6=7; //@line 520 "xmltok.c"
        __label__ = 93; break; //@line 520 "xmltok.c"
      case 89: // $bb1_i5
        $6=8; //@line 522 "xmltok.c"
        __label__ = 93; break; //@line 522 "xmltok.c"
      case 90: // $bb2_i8
        var $290=$lo_addr_i2; //@line 524 "xmltok.c"
        var $291=($290); //@line 524 "xmltok.c"
        var $_off_i6=($291) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 91; break; } else { __label__ = 92; break; }
      case 91: // $bb3_i9
        $6=0; //@line 527 "xmltok.c"
        __label__ = 93; break; //@line 527 "xmltok.c"
      case 92: // $bb4_i10
        $6=29; //@line 531 "xmltok.c"
        __label__ = 93; break; //@line 531 "xmltok.c"
      case 93: // $unicode_byte_type_exit12
        var $292=$6; //@line 520 "xmltok.c"
        $retval_i3=$292; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_554=$retval6_i11; //@line 507 "xmltok_impl.c"
        __lastLabel__ = 93; __label__ = 94; break; //@line 507 "xmltok_impl.c"
      case 94: // $bb22
        var $293=__lastLabel__ == 93 ? $retval6_i11 : ($277);
        if ($293 == 5) {
          __label__ = 98; break;
        }
        else if ($293 == 6) {
          __label__ = 101; break;
        }
        else if ($293 == 7) {
          __label__ = 104; break;
        }
        else if ($293 == 18) {
          __label__ = 107; break;
        }
        else if ($293 == 22) {
          __label__ = 97; break;
        }
        else if ($293 == 24) {
          __label__ = 97; break;
        }
        else if ($293 == 25) {
          __label__ = 97; break;
        }
        else if ($293 == 26) {
          __label__ = 97; break;
        }
        else if ($293 == 27) {
          __label__ = 97; break;
        }
        else if ($293 == 29) {
          __label__ = 95; break;
        }
        else {
        __label__ = 108; break;
        }
        
      case 95: // $bb23
        var $294=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $295=$294+1; //@line 508 "xmltok_impl.c"
        var $296=HEAP[$295]; //@line 508 "xmltok_impl.c"
        var $297=($296); //@line 508 "xmltok_impl.c"
        var $298=_namePages+$297; //@line 508 "xmltok_impl.c"
        var $299=HEAP[$298]; //@line 508 "xmltok_impl.c"
        var $300=($299); //@line 508 "xmltok_impl.c"
        var $301=($300) * 8;
        var $302=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $303=$302; //@line 508 "xmltok_impl.c"
        var $304=HEAP[$303]; //@line 508 "xmltok_impl.c"
        var $305=($304) >>> 5; //@line 508 "xmltok_impl.c"
        var $306=($305); //@line 508 "xmltok_impl.c"
        var $307=($306) + ($301); //@line 508 "xmltok_impl.c"
        var $308=_namingBitmap+$307*4; //@line 508 "xmltok_impl.c"
        var $309=HEAP[$308]; //@line 508 "xmltok_impl.c"
        var $310=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $311=$310; //@line 508 "xmltok_impl.c"
        var $312=HEAP[$311]; //@line 508 "xmltok_impl.c"
        var $313=($312); //@line 508 "xmltok_impl.c"
        var $314=($313) & 31; //@line 508 "xmltok_impl.c"
        var $315=1 << ($314); //@line 508 "xmltok_impl.c"
        var $316=($315) & ($309); //@line 508 "xmltok_impl.c"
        var $317=($316)==0; //@line 508 "xmltok_impl.c"
        if ($317) { __label__ = 96; break; } else { __label__ = 97; break; } //@line 508 "xmltok_impl.c"
      case 96: // $bb24
        var $318=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $319=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$318]=$319; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 97: // $bb25
        var $320=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $321=$320+2; //@line 508 "xmltok_impl.c"
        $ptr_addr=$321; //@line 508 "xmltok_impl.c"
        __label__ = 109; break; //@line 508 "xmltok_impl.c"
      case 98: // $bb26
        var $322=$end_addr; //@line 508 "xmltok_impl.c"
        var $323=($322); //@line 508 "xmltok_impl.c"
        var $324=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $325=($324); //@line 508 "xmltok_impl.c"
        var $326=($323) - ($325); //@line 508 "xmltok_impl.c"
        var $327=($326) <= 1; //@line 508 "xmltok_impl.c"
        if ($327) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 508 "xmltok_impl.c"
      case 99: // $bb27
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 100: // $bb28
        var $328=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $329=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$328]=$329; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 101: // $bb29
        var $330=$end_addr; //@line 508 "xmltok_impl.c"
        var $331=($330); //@line 508 "xmltok_impl.c"
        var $332=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $333=($332); //@line 508 "xmltok_impl.c"
        var $334=($331) - ($333); //@line 508 "xmltok_impl.c"
        var $335=($334) <= 2; //@line 508 "xmltok_impl.c"
        if ($335) { __label__ = 102; break; } else { __label__ = 103; break; } //@line 508 "xmltok_impl.c"
      case 102: // $bb30
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 103: // $bb31
        var $336=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $337=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$336]=$337; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 104: // $bb32
        var $338=$end_addr; //@line 508 "xmltok_impl.c"
        var $339=($338); //@line 508 "xmltok_impl.c"
        var $340=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $341=($340); //@line 508 "xmltok_impl.c"
        var $342=($339) - ($341); //@line 508 "xmltok_impl.c"
        var $343=($342) <= 3; //@line 508 "xmltok_impl.c"
        if ($343) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 508 "xmltok_impl.c"
      case 105: // $bb33
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 106: // $bb34
        var $344=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $345=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$344]=$345; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 107: // $bb35
        var $346=$ptr_addr; //@line 510 "xmltok_impl.c"
        var $347=$346+2; //@line 510 "xmltok_impl.c"
        var $348=$nextTokPtr_addr; //@line 510 "xmltok_impl.c"
        HEAP[$348]=$347; //@line 510 "xmltok_impl.c"
        $8=9; //@line 511 "xmltok_impl.c"
        __label__ = 111; break; //@line 511 "xmltok_impl.c"
      case 108: // $bb36
        var $349=$nextTokPtr_addr; //@line 513 "xmltok_impl.c"
        var $350=$ptr_addr; //@line 513 "xmltok_impl.c"
        HEAP[$349]=$350; //@line 513 "xmltok_impl.c"
        $8=0; //@line 514 "xmltok_impl.c"
        __label__ = 111; break; //@line 514 "xmltok_impl.c"
      case 109: // $bb37
        var $351=$ptr_addr; //@line 506 "xmltok_impl.c"
        var $352=$end_addr; //@line 506 "xmltok_impl.c"
        var $353=($351)!=($352); //@line 506 "xmltok_impl.c"
        if ($353) { __label__ = 85; break; } else { __label__ = 110; break; } //@line 506 "xmltok_impl.c"
      case 110: // $bb38
        $8=-1; //@line 517 "xmltok_impl.c"
        __label__ = 111; break; //@line 517 "xmltok_impl.c"
      case 111: // $bb39
        var $354=$8; //@line 497 "xmltok_impl.c"
        $retval=$354; //@line 497 "xmltok_impl.c"
        var $retval40=$retval; //@line 497 "xmltok_impl.c"
        ;
        return $retval40; //@line 497 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_contentTok($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr_i108_i;
        var $ptr_addr_i109_i;
        var $end_addr_i110_i;
        var $nextTokPtr_addr_i111_i;
        var $retval_i112_i;
        var $0;
        var $i_i_i;
        var $hi_addr_i13_i_i;
        var $lo_addr_i14_i_i;
        var $retval_i15_i_i;
        var $1;
        var $hi_addr_i1_i_i;
        var $lo_addr_i2_i_i;
        var $retval_i3_i_i;
        var $2;
        var $hi_addr_i_i46_i;
        var $lo_addr_i_i47_i;
        var $retval_i_i48_i;
        var $3;
        var $enc_addr_i49_i;
        var $ptr_addr_i50_i;
        var $end_addr_i51_i;
        var $nextTokPtr_addr_i52_i;
        var $retval_i53_i;
        var $iftmp_536_i_i;
        var $iftmp_528_i_i;
        var $iftmp_520_i_i;
        var $4;
        var $hi_addr_i33_i;
        var $lo_addr_i34_i;
        var $retval_i35_i;
        var $5;
        var $hi_addr_i20_i;
        var $lo_addr_i21_i;
        var $retval_i22_i;
        var $6;
        var $hi_addr_i7_i;
        var $lo_addr_i8_i;
        var $retval_i9_i;
        var $7;
        var $hi_addr_i50_i_i;
        var $lo_addr_i51_i_i;
        var $retval_i52_i_i;
        var $8;
        var $hi_addr_i38_i_i;
        var $lo_addr_i39_i_i;
        var $retval_i40_i_i;
        var $9;
        var $hi_addr_i26_i_i;
        var $lo_addr_i27_i_i;
        var $retval_i28_i_i;
        var $10;
        var $hi_addr_i14_i_i;
        var $lo_addr_i15_i_i;
        var $retval_i16_i_i;
        var $11;
        var $hi_addr_i2_i_i;
        var $lo_addr_i3_i_i;
        var $retval_i4_i_i;
        var $12;
        var $hi_addr_i_i_i;
        var $lo_addr_i_i_i;
        var $retval_i_i_i;
        var $13;
        var $enc_addr_i_i;
        var $ptr_addr_i_i=__stackBase__;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i1_i;
        var $iftmp_645_i_i;
        var $iftmp_636_i_i;
        var $iftmp_608_i_i;
        var $iftmp_599_i_i;
        var $iftmp_590_i_i;
        var $14;
        var $iftmp_562_i_i;
        var $t_i_i;
        var $open_i_i;
        var $t37_i_i;
        var $tok_i_i;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i_i;
        var $15;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i25;
        var $iftmp_699_i;
        var $iftmp_691_i;
        var $iftmp_689_i;
        var $iftmp_681_i;
        var $16;
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $17;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $18;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $19;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_720;
        var $iftmp_712;
        var $iftmp_710;
        var $20;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $21=$ptr_addr; //@line 785 "xmltok_impl.c"
        var $22=$end_addr; //@line 785 "xmltok_impl.c"
        var $23=($21)==($22); //@line 785 "xmltok_impl.c"
        if ($23) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 785 "xmltok_impl.c"
      case 1: // $bb
        $20=-4; //@line 786 "xmltok_impl.c"
        __label__ = 392; break; //@line 786 "xmltok_impl.c"
      case 2: // $bb1
        var $24=$end_addr; //@line 788 "xmltok_impl.c"
        var $25=($24); //@line 788 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 788 "xmltok_impl.c"
        var $27=($26); //@line 788 "xmltok_impl.c"
        var $28=($25) - ($27); //@line 788 "xmltok_impl.c"
        $n=$28; //@line 788 "xmltok_impl.c"
        var $29=$n; //@line 789 "xmltok_impl.c"
        var $30=($29) & 1; //@line 789 "xmltok_impl.c"
        var $31=((($30)) & 255); //@line 789 "xmltok_impl.c"
        var $toBool=($31)!=0; //@line 789 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 789 "xmltok_impl.c"
      case 3: // $bb2
        var $32=$n; //@line 790 "xmltok_impl.c"
        var $33=($32) & -2; //@line 790 "xmltok_impl.c"
        $n=$33; //@line 790 "xmltok_impl.c"
        var $34=$n; //@line 791 "xmltok_impl.c"
        var $35=($34)==0; //@line 791 "xmltok_impl.c"
        if ($35) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 791 "xmltok_impl.c"
      case 4: // $bb3
        $20=-1; //@line 792 "xmltok_impl.c"
        __label__ = 392; break; //@line 792 "xmltok_impl.c"
      case 5: // $bb4
        var $36=$ptr_addr; //@line 793 "xmltok_impl.c"
        var $37=$n; //@line 793 "xmltok_impl.c"
        var $38=$36+$37; //@line 793 "xmltok_impl.c"
        $end_addr=$38; //@line 793 "xmltok_impl.c"
        __label__ = 6; break; //@line 793 "xmltok_impl.c"
      case 6: // $bb5
        var $39=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $40=$39+1; //@line 796 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 796 "xmltok_impl.c"
        var $42=($41)==0; //@line 796 "xmltok_impl.c"
        if ($42) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 796 "xmltok_impl.c"
      case 7: // $bb6
        var $43=$enc_addr; //@line 796 "xmltok_impl.c"
        var $44=$43; //@line 796 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 796 "xmltok_impl.c"
        var $47=($46); //@line 796 "xmltok_impl.c"
        var $48=$44+72; //@line 796 "xmltok_impl.c"
        var $49=$48+$47; //@line 796 "xmltok_impl.c"
        var $50=HEAP[$49]; //@line 796 "xmltok_impl.c"
        var $51=($50); //@line 796 "xmltok_impl.c"
        $iftmp_710=$51; //@line 796 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 796 "xmltok_impl.c"
      case 8: // $bb7
        var $52=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $53=$52; //@line 796 "xmltok_impl.c"
        var $54=HEAP[$53]; //@line 796 "xmltok_impl.c"
        var $55=($54); //@line 796 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $57=$56+1; //@line 796 "xmltok_impl.c"
        var $58=HEAP[$57]; //@line 796 "xmltok_impl.c"
        var $59=($58); //@line 796 "xmltok_impl.c"
        var $60=((($59)) & 255); //@line 796 "xmltok_impl.c"
        var $61=((($55)) & 255); //@line 796 "xmltok_impl.c"
        $hi_addr_i=$60;
        $lo_addr_i=$61;
        var $62=$hi_addr_i; //@line 518 "xmltok.c"
        var $63=($62); //@line 518 "xmltok.c"
        if ($63 == 216) {
          __label__ = 9; break;
        }
        else if ($63 == 217) {
          __label__ = 9; break;
        }
        else if ($63 == 218) {
          __label__ = 9; break;
        }
        else if ($63 == 219) {
          __label__ = 9; break;
        }
        else if ($63 == 220) {
          __label__ = 10; break;
        }
        else if ($63 == 221) {
          __label__ = 10; break;
        }
        else if ($63 == 222) {
          __label__ = 10; break;
        }
        else if ($63 == 223) {
          __label__ = 10; break;
        }
        else if ($63 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $19=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $19=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $64=$lo_addr_i; //@line 524 "xmltok.c"
        var $65=($64); //@line 524 "xmltok.c"
        var $_off_i=($65) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $19=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $19=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $66=$19; //@line 520 "xmltok.c"
        $retval_i=$66; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_710=$retval6_i; //@line 796 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 796 "xmltok_impl.c"
      case 15: // $bb8
        var $67=__lastLabel__ == 14 ? $retval6_i : ($51);
        if ($67 == 0) {
          __label__ = 358; break;
        }
        else if ($67 == 1) {
          __label__ = 358; break;
        }
        else if ($67 == 2) {
          __label__ = 16; break;
        }
        else if ($67 == 3) {
          __label__ = 323; break;
        }
        else if ($67 == 4) {
          __label__ = 339; break;
        }
        else if ($67 == 5) {
          __label__ = 349; break;
        }
        else if ($67 == 6) {
          __label__ = 352; break;
        }
        else if ($67 == 7) {
          __label__ = 355; break;
        }
        else if ($67 == 8) {
          __label__ = 358; break;
        }
        else if ($67 == 9) {
          __label__ = 324; break;
        }
        else if ($67 == 10) {
          __label__ = 338; break;
        }
        else {
        __label__ = 359; break;
        }
        
      case 16: // $bb9
        var $68=$ptr_addr; //@line 798 "xmltok_impl.c"
        var $69=$68+2; //@line 798 "xmltok_impl.c"
        var $70=$enc_addr; //@line 798 "xmltok_impl.c"
        var $71=$end_addr; //@line 798 "xmltok_impl.c"
        var $72=$nextTokPtr_addr; //@line 798 "xmltok_impl.c"
        $enc_addr_i=$70;
        $ptr_addr_i=$69;
        $end_addr_i=$71;
        $nextTokPtr_addr_i=$72;
        var $73=$ptr_addr_i; //@line 688 "xmltok_impl.c"
        var $74=$end_addr_i; //@line 688 "xmltok_impl.c"
        var $75=($73)==($74); //@line 688 "xmltok_impl.c"
        if ($75) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 688 "xmltok_impl.c"
      case 17: // $bb_i26
        $16=-1; //@line 689 "xmltok_impl.c"
        __label__ = 322; break; //@line 689 "xmltok_impl.c"
      case 18: // $bb1_i27
        var $76=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $77=$76+1; //@line 690 "xmltok_impl.c"
        var $78=HEAP[$77]; //@line 690 "xmltok_impl.c"
        var $79=($78)==0; //@line 690 "xmltok_impl.c"
        if ($79) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 690 "xmltok_impl.c"
      case 19: // $bb2_i28
        var $80=$enc_addr_i; //@line 690 "xmltok_impl.c"
        var $81=$80; //@line 690 "xmltok_impl.c"
        var $82=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 690 "xmltok_impl.c"
        var $84=($83); //@line 690 "xmltok_impl.c"
        var $85=$81+72; //@line 690 "xmltok_impl.c"
        var $86=$85+$84; //@line 690 "xmltok_impl.c"
        var $87=HEAP[$86]; //@line 690 "xmltok_impl.c"
        var $88=($87); //@line 690 "xmltok_impl.c"
        $iftmp_681_i=$88; //@line 690 "xmltok_impl.c"
        __lastLabel__ = 19; __label__ = 27; break; //@line 690 "xmltok_impl.c"
      case 20: // $bb3_i29
        var $89=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $90=$89; //@line 690 "xmltok_impl.c"
        var $91=HEAP[$90]; //@line 690 "xmltok_impl.c"
        var $92=($91); //@line 690 "xmltok_impl.c"
        var $93=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $94=$93+1; //@line 690 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 690 "xmltok_impl.c"
        var $96=($95); //@line 690 "xmltok_impl.c"
        var $97=((($96)) & 255); //@line 690 "xmltok_impl.c"
        var $98=((($92)) & 255); //@line 690 "xmltok_impl.c"
        $hi_addr_i_i=$97;
        $lo_addr_i_i=$98;
        var $99=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $100=($99); //@line 518 "xmltok.c"
        if ($100 == 216) {
          __label__ = 21; break;
        }
        else if ($100 == 217) {
          __label__ = 21; break;
        }
        else if ($100 == 218) {
          __label__ = 21; break;
        }
        else if ($100 == 219) {
          __label__ = 21; break;
        }
        else if ($100 == 220) {
          __label__ = 22; break;
        }
        else if ($100 == 221) {
          __label__ = 22; break;
        }
        else if ($100 == 222) {
          __label__ = 22; break;
        }
        else if ($100 == 223) {
          __label__ = 22; break;
        }
        else if ($100 == 255) {
          __label__ = 23; break;
        }
        else {
        __label__ = 25; break;
        }
        
      case 21: // $bb_i_i
        $15=7; //@line 520 "xmltok.c"
        __label__ = 26; break; //@line 520 "xmltok.c"
      case 22: // $bb1_i_i
        $15=8; //@line 522 "xmltok.c"
        __label__ = 26; break; //@line 522 "xmltok.c"
      case 23: // $bb2_i_i
        var $101=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $102=($101); //@line 524 "xmltok.c"
        var $_off_i_i=($102) + -254;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 24; break; } else { __label__ = 25; break; }
      case 24: // $bb3_i_i
        $15=0; //@line 527 "xmltok.c"
        __label__ = 26; break; //@line 527 "xmltok.c"
      case 25: // $bb4_i_i
        $15=29; //@line 531 "xmltok.c"
        __label__ = 26; break; //@line 531 "xmltok.c"
      case 26: // $unicode_byte_type_exit_i
        var $103=$15; //@line 520 "xmltok.c"
        $retval_i_i=$103; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i_i; //@line 520 "xmltok.c"
        $iftmp_681_i=$retval6_i_i; //@line 690 "xmltok_impl.c"
        __lastLabel__ = 26; __label__ = 27; break; //@line 690 "xmltok_impl.c"
      case 27: // $bb4_i30
        var $104=__lastLabel__ == 26 ? $retval6_i_i : ($88);
        if ($104 == 5) {
          __label__ = 31; break;
        }
        else if ($104 == 6) {
          __label__ = 34; break;
        }
        else if ($104 == 7) {
          __label__ = 37; break;
        }
        else if ($104 == 15) {
          __label__ = 64; break;
        }
        else if ($104 == 16) {
          __label__ = 40; break;
        }
        else if ($104 == 17) {
          __label__ = 65; break;
        }
        else if ($104 == 22) {
          __label__ = 30; break;
        }
        else if ($104 == 24) {
          __label__ = 30; break;
        }
        else if ($104 == 29) {
          __label__ = 28; break;
        }
        else {
        __label__ = 133; break;
        }
        
      case 28: // $bb5_i
        var $105=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $106=$105+1; //@line 691 "xmltok_impl.c"
        var $107=HEAP[$106]; //@line 691 "xmltok_impl.c"
        var $108=($107); //@line 691 "xmltok_impl.c"
        var $109=_nmstrtPages+$108; //@line 691 "xmltok_impl.c"
        var $110=HEAP[$109]; //@line 691 "xmltok_impl.c"
        var $111=($110); //@line 691 "xmltok_impl.c"
        var $112=($111) * 8;
        var $113=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $114=$113; //@line 691 "xmltok_impl.c"
        var $115=HEAP[$114]; //@line 691 "xmltok_impl.c"
        var $116=($115) >>> 5; //@line 691 "xmltok_impl.c"
        var $117=($116); //@line 691 "xmltok_impl.c"
        var $118=($117) + ($112); //@line 691 "xmltok_impl.c"
        var $119=_namingBitmap+$118*4; //@line 691 "xmltok_impl.c"
        var $120=HEAP[$119]; //@line 691 "xmltok_impl.c"
        var $121=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $122=$121; //@line 691 "xmltok_impl.c"
        var $123=HEAP[$122]; //@line 691 "xmltok_impl.c"
        var $124=($123); //@line 691 "xmltok_impl.c"
        var $125=($124) & 31; //@line 691 "xmltok_impl.c"
        var $126=1 << ($125); //@line 691 "xmltok_impl.c"
        var $127=($126) & ($120); //@line 691 "xmltok_impl.c"
        var $128=($127)==0; //@line 691 "xmltok_impl.c"
        if ($128) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 691 "xmltok_impl.c"
      case 29: // $bb6_i
        var $129=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $130=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$129]=$130; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 30: // $bb7_i
        var $131=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $132=$131+2; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$132; //@line 691 "xmltok_impl.c"
        __label__ = 320; break; //@line 691 "xmltok_impl.c"
      case 31: // $bb8_i
        var $133=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $134=($133); //@line 691 "xmltok_impl.c"
        var $135=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $136=($135); //@line 691 "xmltok_impl.c"
        var $137=($134) - ($136); //@line 691 "xmltok_impl.c"
        var $138=($137) <= 1; //@line 691 "xmltok_impl.c"
        if ($138) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 691 "xmltok_impl.c"
      case 32: // $bb9_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 33: // $bb10_i
        var $139=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $140=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$139]=$140; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 34: // $bb11_i
        var $141=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $142=($141); //@line 691 "xmltok_impl.c"
        var $143=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $144=($143); //@line 691 "xmltok_impl.c"
        var $145=($142) - ($144); //@line 691 "xmltok_impl.c"
        var $146=($145) <= 2; //@line 691 "xmltok_impl.c"
        if ($146) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 691 "xmltok_impl.c"
      case 35: // $bb12_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 36: // $bb13_i
        var $147=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $148=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$147]=$148; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 37: // $bb14_i
        var $149=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $150=($149); //@line 691 "xmltok_impl.c"
        var $151=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $152=($151); //@line 691 "xmltok_impl.c"
        var $153=($150) - ($152); //@line 691 "xmltok_impl.c"
        var $154=($153) <= 3; //@line 691 "xmltok_impl.c"
        if ($154) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 691 "xmltok_impl.c"
      case 38: // $bb15_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 39: // $bb16_i
        var $155=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $156=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$155]=$156; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 40: // $bb17_i
        var $157=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $158=$157+2; //@line 693 "xmltok_impl.c"
        $ptr_addr_i=$158; //@line 693 "xmltok_impl.c"
        var $159=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $160=$end_addr_i; //@line 693 "xmltok_impl.c"
        var $161=($159)==($160); //@line 693 "xmltok_impl.c"
        if ($161) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 693 "xmltok_impl.c"
      case 41: // $bb18_i
        $16=-1; //@line 694 "xmltok_impl.c"
        __label__ = 322; break; //@line 694 "xmltok_impl.c"
      case 42: // $bb19_i
        var $162=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $163=$162+1; //@line 695 "xmltok_impl.c"
        var $164=HEAP[$163]; //@line 695 "xmltok_impl.c"
        var $165=($164)==0; //@line 695 "xmltok_impl.c"
        if ($165) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 695 "xmltok_impl.c"
      case 43: // $bb20_i
        var $166=$enc_addr_i; //@line 695 "xmltok_impl.c"
        var $167=$166; //@line 695 "xmltok_impl.c"
        var $168=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $169=HEAP[$168]; //@line 695 "xmltok_impl.c"
        var $170=($169); //@line 695 "xmltok_impl.c"
        var $171=$167+72; //@line 695 "xmltok_impl.c"
        var $172=$171+$170; //@line 695 "xmltok_impl.c"
        var $173=HEAP[$172]; //@line 695 "xmltok_impl.c"
        var $174=($173); //@line 695 "xmltok_impl.c"
        $iftmp_689_i=$174; //@line 695 "xmltok_impl.c"
        __lastLabel__ = 43; __label__ = 51; break; //@line 695 "xmltok_impl.c"
      case 44: // $bb21_i
        var $175=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $176=$175; //@line 695 "xmltok_impl.c"
        var $177=HEAP[$176]; //@line 695 "xmltok_impl.c"
        var $178=($177); //@line 695 "xmltok_impl.c"
        var $179=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $180=$179+1; //@line 695 "xmltok_impl.c"
        var $181=HEAP[$180]; //@line 695 "xmltok_impl.c"
        var $182=($181); //@line 695 "xmltok_impl.c"
        var $183=((($182)) & 255); //@line 695 "xmltok_impl.c"
        var $184=((($178)) & 255); //@line 695 "xmltok_impl.c"
        $hi_addr_i7_i=$183;
        $lo_addr_i8_i=$184;
        var $185=$hi_addr_i7_i; //@line 518 "xmltok.c"
        var $186=($185); //@line 518 "xmltok.c"
        if ($186 == 216) {
          __label__ = 45; break;
        }
        else if ($186 == 217) {
          __label__ = 45; break;
        }
        else if ($186 == 218) {
          __label__ = 45; break;
        }
        else if ($186 == 219) {
          __label__ = 45; break;
        }
        else if ($186 == 220) {
          __label__ = 46; break;
        }
        else if ($186 == 221) {
          __label__ = 46; break;
        }
        else if ($186 == 222) {
          __label__ = 46; break;
        }
        else if ($186 == 223) {
          __label__ = 46; break;
        }
        else if ($186 == 255) {
          __label__ = 47; break;
        }
        else {
        __label__ = 49; break;
        }
        
      case 45: // $bb_i10_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 50; break; //@line 520 "xmltok.c"
      case 46: // $bb1_i11_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 50; break; //@line 522 "xmltok.c"
      case 47: // $bb2_i14_i
        var $187=$lo_addr_i8_i; //@line 524 "xmltok.c"
        var $188=($187); //@line 524 "xmltok.c"
        var $_off_i12_i=($188) + -254;
        var $switch_i13_i=($_off_i12_i) < 2;
        if ($switch_i13_i) { __label__ = 48; break; } else { __label__ = 49; break; }
      case 48: // $bb3_i15_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 50; break; //@line 527 "xmltok.c"
      case 49: // $bb4_i16_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 50; break; //@line 531 "xmltok.c"
      case 50: // $unicode_byte_type_exit19_i
        var $189=$7; //@line 520 "xmltok.c"
        $retval_i9_i=$189; //@line 520 "xmltok.c"
        var $retval6_i17_i=$retval_i9_i; //@line 520 "xmltok.c"
        $iftmp_689_i=$retval6_i17_i; //@line 695 "xmltok_impl.c"
        __lastLabel__ = 50; __label__ = 51; break; //@line 695 "xmltok_impl.c"
      case 51: // $bb22_i
        var $190=__lastLabel__ == 50 ? $retval6_i17_i : ($174);
        if ($190 == 20) {
          __label__ = 53; break;
        }
        else if ($190 == 27) {
          __label__ = 52; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 52: // $bb23_i
        var $191=$ptr_addr_i; //@line 697 "xmltok_impl.c"
        var $192=$191+2; //@line 697 "xmltok_impl.c"
        var $193=$enc_addr_i; //@line 697 "xmltok_impl.c"
        var $194=$end_addr_i; //@line 697 "xmltok_impl.c"
        var $195=$nextTokPtr_addr_i; //@line 697 "xmltok_impl.c"
        var $196=_little2_scanComment($193, $192, $194, $195); //@line 697 "xmltok_impl.c"
        $16=$196; //@line 697 "xmltok_impl.c"
        __label__ = 322; break; //@line 697 "xmltok_impl.c"
      case 53: // $bb24_i
        var $197=$ptr_addr_i; //@line 699 "xmltok_impl.c"
        var $198=$197+2; //@line 699 "xmltok_impl.c"
        var $199=$enc_addr_i; //@line 699 "xmltok_impl.c"
        var $200=$end_addr_i; //@line 699 "xmltok_impl.c"
        var $201=$nextTokPtr_addr_i; //@line 699 "xmltok_impl.c"
        $enc_addr_i108_i=$199;
        $ptr_addr_i109_i=$198;
        $end_addr_i110_i=$200;
        $nextTokPtr_addr_i111_i=$201;
        var $202=$end_addr_i110_i; //@line 289 "xmltok_impl.c"
        var $203=($202); //@line 289 "xmltok_impl.c"
        var $204=$ptr_addr_i109_i; //@line 289 "xmltok_impl.c"
        var $205=($204); //@line 289 "xmltok_impl.c"
        var $206=($203) - ($205); //@line 289 "xmltok_impl.c"
        var $207=($206) <= 11; //@line 289 "xmltok_impl.c"
        if ($207) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 289 "xmltok_impl.c"
      case 54: // $bb_i113_i
        $0=-1; //@line 290 "xmltok_impl.c"
        __label__ = 62; break; //@line 290 "xmltok_impl.c"
      case 55: // $bb1_i114_i
        $i_i_i=0; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 55; __label__ = 60; break; //@line 291 "xmltok_impl.c"
      case 56: // $bb2_i115_i
        var $208=$ptr_addr_i109_i; //@line 292 "xmltok_impl.c"
        var $209=$208+1; //@line 292 "xmltok_impl.c"
        var $210=HEAP[$209]; //@line 292 "xmltok_impl.c"
        var $211=($210)!=0; //@line 292 "xmltok_impl.c"
        if ($211) { __label__ = 58; break; } else { __label__ = 57; break; } //@line 292 "xmltok_impl.c"
      case 57: // $bb3_i116_i
        var $212=$ptr_addr_i109_i; //@line 292 "xmltok_impl.c"
        var $213=$212; //@line 292 "xmltok_impl.c"
        var $214=HEAP[$213]; //@line 292 "xmltok_impl.c"
        var $215=$i_i_i; //@line 292 "xmltok_impl.c"
        var $216=_CDATA_LSQB_8477+$215; //@line 292 "xmltok_impl.c"
        var $217=HEAP[$216]; //@line 292 "xmltok_impl.c"
        var $218=($214)!=($217); //@line 292 "xmltok_impl.c"
        if ($218) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 292 "xmltok_impl.c"
      case 58: // $bb4_i117_i
        var $219=$nextTokPtr_addr_i111_i; //@line 293 "xmltok_impl.c"
        var $220=$ptr_addr_i109_i; //@line 293 "xmltok_impl.c"
        HEAP[$219]=$220; //@line 293 "xmltok_impl.c"
        $0=0; //@line 294 "xmltok_impl.c"
        __label__ = 62; break; //@line 294 "xmltok_impl.c"
      case 59: // $bb5_i118_i
        var $221=$i_i_i; //@line 291 "xmltok_impl.c"
        var $222=($221) + 1; //@line 291 "xmltok_impl.c"
        $i_i_i=$222; //@line 291 "xmltok_impl.c"
        var $223=$ptr_addr_i109_i; //@line 291 "xmltok_impl.c"
        var $224=$223+2; //@line 291 "xmltok_impl.c"
        $ptr_addr_i109_i=$224; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 59; __label__ = 60; break; //@line 291 "xmltok_impl.c"
      case 60: // $bb6_i119_i
        var $225=__lastLabel__ == 59 ? $222 : (0);
        var $226=($225) <= 5; //@line 291 "xmltok_impl.c"
        if ($226) { __label__ = 56; break; } else { __label__ = 61; break; } //@line 291 "xmltok_impl.c"
      case 61: // $bb7_i120_i
        var $227=$nextTokPtr_addr_i111_i; //@line 297 "xmltok_impl.c"
        var $228=$ptr_addr_i109_i; //@line 297 "xmltok_impl.c"
        HEAP[$227]=$228; //@line 297 "xmltok_impl.c"
        $0=8; //@line 298 "xmltok_impl.c"
        __label__ = 62; break; //@line 298 "xmltok_impl.c"
      case 62: // $little2_scanCdataSection_exit_i
        var $229=$0; //@line 290 "xmltok_impl.c"
        $retval_i112_i=$229; //@line 290 "xmltok_impl.c"
        var $retval9_i_i=$retval_i112_i; //@line 290 "xmltok_impl.c"
        $16=$retval9_i_i; //@line 699 "xmltok_impl.c"
        __label__ = 322; break; //@line 699 "xmltok_impl.c"
      case 63: // $bb25_i
        var $230=$nextTokPtr_addr_i; //@line 702 "xmltok_impl.c"
        var $231=$ptr_addr_i; //@line 702 "xmltok_impl.c"
        HEAP[$230]=$231; //@line 702 "xmltok_impl.c"
        $16=0; //@line 703 "xmltok_impl.c"
        __label__ = 322; break; //@line 703 "xmltok_impl.c"
      case 64: // $bb26_i
        var $232=$ptr_addr_i; //@line 705 "xmltok_impl.c"
        var $233=$232+2; //@line 705 "xmltok_impl.c"
        var $234=$enc_addr_i; //@line 705 "xmltok_impl.c"
        var $235=$end_addr_i; //@line 705 "xmltok_impl.c"
        var $236=$nextTokPtr_addr_i; //@line 705 "xmltok_impl.c"
        var $237=_little2_scanPi($234, $233, $235, $236); //@line 705 "xmltok_impl.c"
        $16=$237; //@line 705 "xmltok_impl.c"
        __label__ = 322; break; //@line 705 "xmltok_impl.c"
      case 65: // $bb27_i
        var $238=$ptr_addr_i; //@line 707 "xmltok_impl.c"
        var $239=$238+2; //@line 707 "xmltok_impl.c"
        var $240=$enc_addr_i; //@line 707 "xmltok_impl.c"
        var $241=$end_addr_i; //@line 707 "xmltok_impl.c"
        var $242=$nextTokPtr_addr_i; //@line 707 "xmltok_impl.c"
        $enc_addr_i49_i=$240;
        $ptr_addr_i50_i=$239;
        $end_addr_i51_i=$241;
        $nextTokPtr_addr_i52_i=$242;
        var $243=$ptr_addr_i50_i; //@line 383 "xmltok_impl.c"
        var $244=$end_addr_i51_i; //@line 383 "xmltok_impl.c"
        var $245=($243)==($244); //@line 383 "xmltok_impl.c"
        if ($245) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 383 "xmltok_impl.c"
      case 66: // $bb_i54_i
        $4=-1; //@line 384 "xmltok_impl.c"
        __label__ = 132; break; //@line 384 "xmltok_impl.c"
      case 67: // $bb1_i55_i
        var $246=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $247=$246+1; //@line 385 "xmltok_impl.c"
        var $248=HEAP[$247]; //@line 385 "xmltok_impl.c"
        var $249=($248)==0; //@line 385 "xmltok_impl.c"
        if ($249) { __label__ = 68; break; } else { __label__ = 69; break; } //@line 385 "xmltok_impl.c"
      case 68: // $bb2_i56_i
        var $250=$enc_addr_i49_i; //@line 385 "xmltok_impl.c"
        var $251=$250; //@line 385 "xmltok_impl.c"
        var $252=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $253=HEAP[$252]; //@line 385 "xmltok_impl.c"
        var $254=($253); //@line 385 "xmltok_impl.c"
        var $255=$251+72; //@line 385 "xmltok_impl.c"
        var $256=$255+$254; //@line 385 "xmltok_impl.c"
        var $257=HEAP[$256]; //@line 385 "xmltok_impl.c"
        var $258=($257); //@line 385 "xmltok_impl.c"
        $iftmp_520_i_i=$258; //@line 385 "xmltok_impl.c"
        __lastLabel__ = 68; __label__ = 76; break; //@line 385 "xmltok_impl.c"
      case 69: // $bb3_i57_i
        var $259=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $260=$259; //@line 385 "xmltok_impl.c"
        var $261=HEAP[$260]; //@line 385 "xmltok_impl.c"
        var $262=($261); //@line 385 "xmltok_impl.c"
        var $263=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $264=$263+1; //@line 385 "xmltok_impl.c"
        var $265=HEAP[$264]; //@line 385 "xmltok_impl.c"
        var $266=($265); //@line 385 "xmltok_impl.c"
        var $267=((($266)) & 255); //@line 385 "xmltok_impl.c"
        var $268=((($262)) & 255); //@line 385 "xmltok_impl.c"
        $hi_addr_i_i46_i=$267;
        $lo_addr_i_i47_i=$268;
        var $269=$hi_addr_i_i46_i; //@line 518 "xmltok.c"
        var $270=($269); //@line 518 "xmltok.c"
        if ($270 == 216) {
          __label__ = 70; break;
        }
        else if ($270 == 217) {
          __label__ = 70; break;
        }
        else if ($270 == 218) {
          __label__ = 70; break;
        }
        else if ($270 == 219) {
          __label__ = 70; break;
        }
        else if ($270 == 220) {
          __label__ = 71; break;
        }
        else if ($270 == 221) {
          __label__ = 71; break;
        }
        else if ($270 == 222) {
          __label__ = 71; break;
        }
        else if ($270 == 223) {
          __label__ = 71; break;
        }
        else if ($270 == 255) {
          __label__ = 72; break;
        }
        else {
        __label__ = 74; break;
        }
        
      case 70: // $bb_i_i58_i
        $3=7; //@line 520 "xmltok.c"
        __label__ = 75; break; //@line 520 "xmltok.c"
      case 71: // $bb1_i_i59_i
        $3=8; //@line 522 "xmltok.c"
        __label__ = 75; break; //@line 522 "xmltok.c"
      case 72: // $bb2_i_i62_i
        var $271=$lo_addr_i_i47_i; //@line 524 "xmltok.c"
        var $272=($271); //@line 524 "xmltok.c"
        var $_off_i_i60_i=($272) + -254;
        var $switch_i_i61_i=($_off_i_i60_i) < 2;
        if ($switch_i_i61_i) { __label__ = 73; break; } else { __label__ = 74; break; }
      case 73: // $bb3_i_i63_i
        $3=0; //@line 527 "xmltok.c"
        __label__ = 75; break; //@line 527 "xmltok.c"
      case 74: // $bb4_i_i64_i
        $3=29; //@line 531 "xmltok.c"
        __label__ = 75; break; //@line 531 "xmltok.c"
      case 75: // $unicode_byte_type_exit_i66_i
        var $273=$3; //@line 520 "xmltok.c"
        $retval_i_i48_i=$273; //@line 520 "xmltok.c"
        var $retval6_i_i65_i=$retval_i_i48_i; //@line 520 "xmltok.c"
        $iftmp_520_i_i=$retval6_i_i65_i; //@line 385 "xmltok_impl.c"
        __lastLabel__ = 75; __label__ = 76; break; //@line 385 "xmltok_impl.c"
      case 76: // $bb4_i67_i
        var $274=__lastLabel__ == 75 ? $retval6_i_i65_i : ($258);
        if ($274 == 5) {
          __label__ = 80; break;
        }
        else if ($274 == 6) {
          __label__ = 83; break;
        }
        else if ($274 == 7) {
          __label__ = 86; break;
        }
        else if ($274 == 22) {
          __label__ = 79; break;
        }
        else if ($274 == 24) {
          __label__ = 79; break;
        }
        else if ($274 == 29) {
          __label__ = 77; break;
        }
        else {
        __label__ = 89; break;
        }
        
      case 77: // $bb5_i68_i
        var $275=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $276=$275+1; //@line 386 "xmltok_impl.c"
        var $277=HEAP[$276]; //@line 386 "xmltok_impl.c"
        var $278=($277); //@line 386 "xmltok_impl.c"
        var $279=_nmstrtPages+$278; //@line 386 "xmltok_impl.c"
        var $280=HEAP[$279]; //@line 386 "xmltok_impl.c"
        var $281=($280); //@line 386 "xmltok_impl.c"
        var $282=($281) * 8;
        var $283=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $284=$283; //@line 386 "xmltok_impl.c"
        var $285=HEAP[$284]; //@line 386 "xmltok_impl.c"
        var $286=($285) >>> 5; //@line 386 "xmltok_impl.c"
        var $287=($286); //@line 386 "xmltok_impl.c"
        var $288=($287) + ($282); //@line 386 "xmltok_impl.c"
        var $289=_namingBitmap+$288*4; //@line 386 "xmltok_impl.c"
        var $290=HEAP[$289]; //@line 386 "xmltok_impl.c"
        var $291=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $292=$291; //@line 386 "xmltok_impl.c"
        var $293=HEAP[$292]; //@line 386 "xmltok_impl.c"
        var $294=($293); //@line 386 "xmltok_impl.c"
        var $295=($294) & 31; //@line 386 "xmltok_impl.c"
        var $296=1 << ($295); //@line 386 "xmltok_impl.c"
        var $297=($296) & ($290); //@line 386 "xmltok_impl.c"
        var $298=($297)==0; //@line 386 "xmltok_impl.c"
        if ($298) { __label__ = 78; break; } else { __label__ = 79; break; } //@line 386 "xmltok_impl.c"
      case 78: // $bb6_i69_i
        var $299=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $300=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$299]=$300; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 79: // $bb7_i70_i
        var $301=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $302=$301+2; //@line 386 "xmltok_impl.c"
        $ptr_addr_i50_i=$302; //@line 386 "xmltok_impl.c"
        __label__ = 130; break; //@line 386 "xmltok_impl.c"
      case 80: // $bb8_i71_i
        var $303=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $304=($303); //@line 386 "xmltok_impl.c"
        var $305=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $306=($305); //@line 386 "xmltok_impl.c"
        var $307=($304) - ($306); //@line 386 "xmltok_impl.c"
        var $308=($307) <= 1; //@line 386 "xmltok_impl.c"
        if ($308) { __label__ = 81; break; } else { __label__ = 82; break; } //@line 386 "xmltok_impl.c"
      case 81: // $bb9_i72_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 82: // $bb10_i73_i
        var $309=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $310=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$309]=$310; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 83: // $bb11_i74_i
        var $311=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $312=($311); //@line 386 "xmltok_impl.c"
        var $313=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $314=($313); //@line 386 "xmltok_impl.c"
        var $315=($312) - ($314); //@line 386 "xmltok_impl.c"
        var $316=($315) <= 2; //@line 386 "xmltok_impl.c"
        if ($316) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 386 "xmltok_impl.c"
      case 84: // $bb12_i75_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 85: // $bb13_i76_i
        var $317=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $318=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$317]=$318; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 86: // $bb14_i77_i
        var $319=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $320=($319); //@line 386 "xmltok_impl.c"
        var $321=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $322=($321); //@line 386 "xmltok_impl.c"
        var $323=($320) - ($322); //@line 386 "xmltok_impl.c"
        var $324=($323) <= 3; //@line 386 "xmltok_impl.c"
        if ($324) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 386 "xmltok_impl.c"
      case 87: // $bb15_i78_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 88: // $bb16_i79_i
        var $325=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $326=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$325]=$326; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 89: // $bb17_i80_i
        var $327=$nextTokPtr_addr_i52_i; //@line 388 "xmltok_impl.c"
        var $328=$ptr_addr_i50_i; //@line 388 "xmltok_impl.c"
        HEAP[$327]=$328; //@line 388 "xmltok_impl.c"
        $4=0; //@line 389 "xmltok_impl.c"
        __label__ = 132; break; //@line 389 "xmltok_impl.c"
      case 90: // $bb18_i81_i
        var $329=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $330=$329+1; //@line 392 "xmltok_impl.c"
        var $331=HEAP[$330]; //@line 392 "xmltok_impl.c"
        var $332=($331)==0; //@line 392 "xmltok_impl.c"
        if ($332) { __label__ = 91; break; } else { __label__ = 92; break; } //@line 392 "xmltok_impl.c"
      case 91: // $bb19_i82_i
        var $333=$enc_addr_i49_i; //@line 392 "xmltok_impl.c"
        var $334=$333; //@line 392 "xmltok_impl.c"
        var $335=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $336=HEAP[$335]; //@line 392 "xmltok_impl.c"
        var $337=($336); //@line 392 "xmltok_impl.c"
        var $338=$334+72; //@line 392 "xmltok_impl.c"
        var $339=$338+$337; //@line 392 "xmltok_impl.c"
        var $340=HEAP[$339]; //@line 392 "xmltok_impl.c"
        var $341=($340); //@line 392 "xmltok_impl.c"
        $iftmp_528_i_i=$341; //@line 392 "xmltok_impl.c"
        __lastLabel__ = 91; __label__ = 99; break; //@line 392 "xmltok_impl.c"
      case 92: // $bb20_i83_i
        var $342=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $343=$342; //@line 392 "xmltok_impl.c"
        var $344=HEAP[$343]; //@line 392 "xmltok_impl.c"
        var $345=($344); //@line 392 "xmltok_impl.c"
        var $346=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $347=$346+1; //@line 392 "xmltok_impl.c"
        var $348=HEAP[$347]; //@line 392 "xmltok_impl.c"
        var $349=($348); //@line 392 "xmltok_impl.c"
        var $350=((($349)) & 255); //@line 392 "xmltok_impl.c"
        var $351=((($345)) & 255); //@line 392 "xmltok_impl.c"
        $hi_addr_i13_i_i=$350;
        $lo_addr_i14_i_i=$351;
        var $352=$hi_addr_i13_i_i; //@line 518 "xmltok.c"
        var $353=($352); //@line 518 "xmltok.c"
        if ($353 == 216) {
          __label__ = 93; break;
        }
        else if ($353 == 217) {
          __label__ = 93; break;
        }
        else if ($353 == 218) {
          __label__ = 93; break;
        }
        else if ($353 == 219) {
          __label__ = 93; break;
        }
        else if ($353 == 220) {
          __label__ = 94; break;
        }
        else if ($353 == 221) {
          __label__ = 94; break;
        }
        else if ($353 == 222) {
          __label__ = 94; break;
        }
        else if ($353 == 223) {
          __label__ = 94; break;
        }
        else if ($353 == 255) {
          __label__ = 95; break;
        }
        else {
        __label__ = 97; break;
        }
        
      case 93: // $bb_i16_i_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 98; break; //@line 520 "xmltok.c"
      case 94: // $bb1_i17_i_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 98; break; //@line 522 "xmltok.c"
      case 95: // $bb2_i20_i_i
        var $354=$lo_addr_i14_i_i; //@line 524 "xmltok.c"
        var $355=($354); //@line 524 "xmltok.c"
        var $_off_i18_i_i=($355) + -254;
        var $switch_i19_i_i=($_off_i18_i_i) < 2;
        if ($switch_i19_i_i) { __label__ = 96; break; } else { __label__ = 97; break; }
      case 96: // $bb3_i21_i_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 98; break; //@line 527 "xmltok.c"
      case 97: // $bb4_i22_i_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 98; break; //@line 531 "xmltok.c"
      case 98: // $unicode_byte_type_exit24_i_i
        var $356=$1; //@line 520 "xmltok.c"
        $retval_i15_i_i=$356; //@line 520 "xmltok.c"
        var $retval6_i23_i_i=$retval_i15_i_i; //@line 520 "xmltok.c"
        $iftmp_528_i_i=$retval6_i23_i_i; //@line 392 "xmltok_impl.c"
        __lastLabel__ = 98; __label__ = 99; break; //@line 392 "xmltok_impl.c"
      case 99: // $bb21_i84_i
        var $357=__lastLabel__ == 98 ? $retval6_i23_i_i : ($341);
        if ($357 == 5) {
          __label__ = 103; break;
        }
        else if ($357 == 6) {
          __label__ = 106; break;
        }
        else if ($357 == 7) {
          __label__ = 109; break;
        }
        else if ($357 == 9) {
          __label__ = 112; break;
        }
        else if ($357 == 10) {
          __label__ = 112; break;
        }
        else if ($357 == 11) {
          __label__ = 128; break;
        }
        else if ($357 == 21) {
          __label__ = 112; break;
        }
        else if ($357 == 22) {
          __label__ = 102; break;
        }
        else if ($357 == 24) {
          __label__ = 102; break;
        }
        else if ($357 == 25) {
          __label__ = 102; break;
        }
        else if ($357 == 26) {
          __label__ = 102; break;
        }
        else if ($357 == 27) {
          __label__ = 102; break;
        }
        else if ($357 == 29) {
          __label__ = 100; break;
        }
        else {
        __label__ = 129; break;
        }
        
      case 100: // $bb22_i85_i
        var $358=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $359=$358+1; //@line 393 "xmltok_impl.c"
        var $360=HEAP[$359]; //@line 393 "xmltok_impl.c"
        var $361=($360); //@line 393 "xmltok_impl.c"
        var $362=_namePages+$361; //@line 393 "xmltok_impl.c"
        var $363=HEAP[$362]; //@line 393 "xmltok_impl.c"
        var $364=($363); //@line 393 "xmltok_impl.c"
        var $365=($364) * 8;
        var $366=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $367=$366; //@line 393 "xmltok_impl.c"
        var $368=HEAP[$367]; //@line 393 "xmltok_impl.c"
        var $369=($368) >>> 5; //@line 393 "xmltok_impl.c"
        var $370=($369); //@line 393 "xmltok_impl.c"
        var $371=($370) + ($365); //@line 393 "xmltok_impl.c"
        var $372=_namingBitmap+$371*4; //@line 393 "xmltok_impl.c"
        var $373=HEAP[$372]; //@line 393 "xmltok_impl.c"
        var $374=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $375=$374; //@line 393 "xmltok_impl.c"
        var $376=HEAP[$375]; //@line 393 "xmltok_impl.c"
        var $377=($376); //@line 393 "xmltok_impl.c"
        var $378=($377) & 31; //@line 393 "xmltok_impl.c"
        var $379=1 << ($378); //@line 393 "xmltok_impl.c"
        var $380=($379) & ($373); //@line 393 "xmltok_impl.c"
        var $381=($380)==0; //@line 393 "xmltok_impl.c"
        if ($381) { __label__ = 101; break; } else { __label__ = 102; break; } //@line 393 "xmltok_impl.c"
      case 101: // $bb23_i_i
        var $382=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $383=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$382]=$383; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 102: // $bb24_i86_i
        var $384=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $385=$384+2; //@line 393 "xmltok_impl.c"
        $ptr_addr_i50_i=$385; //@line 393 "xmltok_impl.c"
        __label__ = 130; break; //@line 393 "xmltok_impl.c"
      case 103: // $bb25_i87_i
        var $386=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $387=($386); //@line 393 "xmltok_impl.c"
        var $388=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $389=($388); //@line 393 "xmltok_impl.c"
        var $390=($387) - ($389); //@line 393 "xmltok_impl.c"
        var $391=($390) <= 1; //@line 393 "xmltok_impl.c"
        if ($391) { __label__ = 104; break; } else { __label__ = 105; break; } //@line 393 "xmltok_impl.c"
      case 104: // $bb26_i88_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 105: // $bb27_i89_i
        var $392=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $393=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$392]=$393; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 106: // $bb28_i90_i
        var $394=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $395=($394); //@line 393 "xmltok_impl.c"
        var $396=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $397=($396); //@line 393 "xmltok_impl.c"
        var $398=($395) - ($397); //@line 393 "xmltok_impl.c"
        var $399=($398) <= 2; //@line 393 "xmltok_impl.c"
        if ($399) { __label__ = 107; break; } else { __label__ = 108; break; } //@line 393 "xmltok_impl.c"
      case 107: // $bb29_i91_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 108: // $bb30_i92_i
        var $400=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $401=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$400]=$401; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 109: // $bb31_i_i
        var $402=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $403=($402); //@line 393 "xmltok_impl.c"
        var $404=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $405=($404); //@line 393 "xmltok_impl.c"
        var $406=($403) - ($405); //@line 393 "xmltok_impl.c"
        var $407=($406) <= 3; //@line 393 "xmltok_impl.c"
        if ($407) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 393 "xmltok_impl.c"
      case 110: // $bb32_i93_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 111: // $bb33_i_i
        var $408=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $409=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$408]=$409; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 112: // $bb34_i94_i
        var $410=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $411=$410+2; //@line 395 "xmltok_impl.c"
        $ptr_addr_i50_i=$411; //@line 395 "xmltok_impl.c"
        __label__ = 126; break; //@line 395 "xmltok_impl.c"
      case 113: // $bb35_i95_i
        var $412=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $413=$412+1; //@line 396 "xmltok_impl.c"
        var $414=HEAP[$413]; //@line 396 "xmltok_impl.c"
        var $415=($414)==0; //@line 396 "xmltok_impl.c"
        if ($415) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 396 "xmltok_impl.c"
      case 114: // $bb36_i96_i
        var $416=$enc_addr_i49_i; //@line 396 "xmltok_impl.c"
        var $417=$416; //@line 396 "xmltok_impl.c"
        var $418=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $419=HEAP[$418]; //@line 396 "xmltok_impl.c"
        var $420=($419); //@line 396 "xmltok_impl.c"
        var $421=$417+72; //@line 396 "xmltok_impl.c"
        var $422=$421+$420; //@line 396 "xmltok_impl.c"
        var $423=HEAP[$422]; //@line 396 "xmltok_impl.c"
        var $424=($423); //@line 396 "xmltok_impl.c"
        $iftmp_536_i_i=$424; //@line 396 "xmltok_impl.c"
        __lastLabel__ = 114; __label__ = 122; break; //@line 396 "xmltok_impl.c"
      case 115: // $bb37_i_i
        var $425=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $426=$425; //@line 396 "xmltok_impl.c"
        var $427=HEAP[$426]; //@line 396 "xmltok_impl.c"
        var $428=($427); //@line 396 "xmltok_impl.c"
        var $429=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $430=$429+1; //@line 396 "xmltok_impl.c"
        var $431=HEAP[$430]; //@line 396 "xmltok_impl.c"
        var $432=($431); //@line 396 "xmltok_impl.c"
        var $433=((($432)) & 255); //@line 396 "xmltok_impl.c"
        var $434=((($428)) & 255); //@line 396 "xmltok_impl.c"
        $hi_addr_i1_i_i=$433;
        $lo_addr_i2_i_i=$434;
        var $435=$hi_addr_i1_i_i; //@line 518 "xmltok.c"
        var $436=($435); //@line 518 "xmltok.c"
        if ($436 == 216) {
          __label__ = 116; break;
        }
        else if ($436 == 217) {
          __label__ = 116; break;
        }
        else if ($436 == 218) {
          __label__ = 116; break;
        }
        else if ($436 == 219) {
          __label__ = 116; break;
        }
        else if ($436 == 220) {
          __label__ = 117; break;
        }
        else if ($436 == 221) {
          __label__ = 117; break;
        }
        else if ($436 == 222) {
          __label__ = 117; break;
        }
        else if ($436 == 223) {
          __label__ = 117; break;
        }
        else if ($436 == 255) {
          __label__ = 118; break;
        }
        else {
        __label__ = 120; break;
        }
        
      case 116: // $bb_i4_i_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 121; break; //@line 520 "xmltok.c"
      case 117: // $bb1_i5_i_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 121; break; //@line 522 "xmltok.c"
      case 118: // $bb2_i8_i_i
        var $437=$lo_addr_i2_i_i; //@line 524 "xmltok.c"
        var $438=($437); //@line 524 "xmltok.c"
        var $_off_i6_i_i=($438) + -254;
        var $switch_i7_i_i=($_off_i6_i_i) < 2;
        if ($switch_i7_i_i) { __label__ = 119; break; } else { __label__ = 120; break; }
      case 119: // $bb3_i9_i_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 121; break; //@line 527 "xmltok.c"
      case 120: // $bb4_i10_i_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 121; break; //@line 531 "xmltok.c"
      case 121: // $unicode_byte_type_exit12_i_i
        var $439=$2; //@line 520 "xmltok.c"
        $retval_i3_i_i=$439; //@line 520 "xmltok.c"
        var $retval6_i11_i_i=$retval_i3_i_i; //@line 520 "xmltok.c"
        $iftmp_536_i_i=$retval6_i11_i_i; //@line 396 "xmltok_impl.c"
        __lastLabel__ = 121; __label__ = 122; break; //@line 396 "xmltok_impl.c"
      case 122: // $bb38_i97_i
        var $440=__lastLabel__ == 121 ? $retval6_i11_i_i : ($424);
        if ($440 == 9) {
          __label__ = 123; break;
        }
        else if ($440 == 10) {
          __label__ = 123; break;
        }
        else if ($440 == 11) {
          __label__ = 124; break;
        }
        else if ($440 == 21) {
          __label__ = 123; break;
        }
        else {
        __label__ = 125; break;
        }
        
      case 123: // $bb39_i98_i
        var $441=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $442=$441+2; //@line 395 "xmltok_impl.c"
        $ptr_addr_i50_i=$442; //@line 395 "xmltok_impl.c"
        __label__ = 126; break; //@line 395 "xmltok_impl.c"
      case 124: // $bb40_i99_i
        var $443=$ptr_addr_i50_i; //@line 400 "xmltok_impl.c"
        var $444=$443+2; //@line 400 "xmltok_impl.c"
        var $445=$nextTokPtr_addr_i52_i; //@line 400 "xmltok_impl.c"
        HEAP[$445]=$444; //@line 400 "xmltok_impl.c"
        $4=5; //@line 401 "xmltok_impl.c"
        __label__ = 132; break; //@line 401 "xmltok_impl.c"
      case 125: // $bb41_i100_i
        var $446=$nextTokPtr_addr_i52_i; //@line 403 "xmltok_impl.c"
        var $447=$ptr_addr_i50_i; //@line 403 "xmltok_impl.c"
        HEAP[$446]=$447; //@line 403 "xmltok_impl.c"
        $4=0; //@line 404 "xmltok_impl.c"
        __label__ = 132; break; //@line 404 "xmltok_impl.c"
      case 126: // $bb42_i101_i
        var $448=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $449=$end_addr_i51_i; //@line 395 "xmltok_impl.c"
        var $450=($448)!=($449); //@line 395 "xmltok_impl.c"
        if ($450) { __label__ = 113; break; } else { __label__ = 127; break; } //@line 395 "xmltok_impl.c"
      case 127: // $bb43_i102_i
        $4=-1; //@line 407 "xmltok_impl.c"
        __label__ = 132; break; //@line 407 "xmltok_impl.c"
      case 128: // $bb44_i103_i
        var $451=$ptr_addr_i50_i; //@line 416 "xmltok_impl.c"
        var $452=$451+2; //@line 416 "xmltok_impl.c"
        var $453=$nextTokPtr_addr_i52_i; //@line 416 "xmltok_impl.c"
        HEAP[$453]=$452; //@line 416 "xmltok_impl.c"
        $4=5; //@line 417 "xmltok_impl.c"
        __label__ = 132; break; //@line 417 "xmltok_impl.c"
      case 129: // $bb45_i104_i
        var $454=$nextTokPtr_addr_i52_i; //@line 419 "xmltok_impl.c"
        var $455=$ptr_addr_i50_i; //@line 419 "xmltok_impl.c"
        HEAP[$454]=$455; //@line 419 "xmltok_impl.c"
        $4=0; //@line 420 "xmltok_impl.c"
        __label__ = 132; break; //@line 420 "xmltok_impl.c"
      case 130: // $bb46_i105_i
        var $456=$ptr_addr_i50_i; //@line 391 "xmltok_impl.c"
        var $457=$end_addr_i51_i; //@line 391 "xmltok_impl.c"
        var $458=($456)!=($457); //@line 391 "xmltok_impl.c"
        if ($458) { __label__ = 90; break; } else { __label__ = 131; break; } //@line 391 "xmltok_impl.c"
      case 131: // $bb47_i106_i
        $4=-1; //@line 423 "xmltok_impl.c"
        __label__ = 132; break; //@line 423 "xmltok_impl.c"
      case 132: // $little2_scanEndTag_exit_i
        var $459=$4; //@line 384 "xmltok_impl.c"
        $retval_i53_i=$459; //@line 384 "xmltok_impl.c"
        var $retval49_i_i=$retval_i53_i; //@line 384 "xmltok_impl.c"
        $16=$retval49_i_i; //@line 707 "xmltok_impl.c"
        __label__ = 322; break; //@line 707 "xmltok_impl.c"
      case 133: // $bb28_i
        var $460=$nextTokPtr_addr_i; //@line 709 "xmltok_impl.c"
        var $461=$ptr_addr_i; //@line 709 "xmltok_impl.c"
        HEAP[$460]=$461; //@line 709 "xmltok_impl.c"
        $16=0; //@line 710 "xmltok_impl.c"
        __label__ = 322; break; //@line 710 "xmltok_impl.c"
      case 134: // $bb29_i
        var $462=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $463=$462+1; //@line 717 "xmltok_impl.c"
        var $464=HEAP[$463]; //@line 717 "xmltok_impl.c"
        var $465=($464)==0; //@line 717 "xmltok_impl.c"
        if ($465) { __label__ = 135; break; } else { __label__ = 136; break; } //@line 717 "xmltok_impl.c"
      case 135: // $bb30_i
        var $466=$enc_addr_i; //@line 717 "xmltok_impl.c"
        var $467=$466; //@line 717 "xmltok_impl.c"
        var $468=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $469=HEAP[$468]; //@line 717 "xmltok_impl.c"
        var $470=($469); //@line 717 "xmltok_impl.c"
        var $471=$467+72; //@line 717 "xmltok_impl.c"
        var $472=$471+$470; //@line 717 "xmltok_impl.c"
        var $473=HEAP[$472]; //@line 717 "xmltok_impl.c"
        var $474=($473); //@line 717 "xmltok_impl.c"
        $iftmp_691_i=$474; //@line 717 "xmltok_impl.c"
        __lastLabel__ = 135; __label__ = 143; break; //@line 717 "xmltok_impl.c"
      case 136: // $bb31_i
        var $475=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $476=$475; //@line 717 "xmltok_impl.c"
        var $477=HEAP[$476]; //@line 717 "xmltok_impl.c"
        var $478=($477); //@line 717 "xmltok_impl.c"
        var $479=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $480=$479+1; //@line 717 "xmltok_impl.c"
        var $481=HEAP[$480]; //@line 717 "xmltok_impl.c"
        var $482=($481); //@line 717 "xmltok_impl.c"
        var $483=((($482)) & 255); //@line 717 "xmltok_impl.c"
        var $484=((($478)) & 255); //@line 717 "xmltok_impl.c"
        $hi_addr_i33_i=$483;
        $lo_addr_i34_i=$484;
        var $485=$hi_addr_i33_i; //@line 518 "xmltok.c"
        var $486=($485); //@line 518 "xmltok.c"
        if ($486 == 216) {
          __label__ = 137; break;
        }
        else if ($486 == 217) {
          __label__ = 137; break;
        }
        else if ($486 == 218) {
          __label__ = 137; break;
        }
        else if ($486 == 219) {
          __label__ = 137; break;
        }
        else if ($486 == 220) {
          __label__ = 138; break;
        }
        else if ($486 == 221) {
          __label__ = 138; break;
        }
        else if ($486 == 222) {
          __label__ = 138; break;
        }
        else if ($486 == 223) {
          __label__ = 138; break;
        }
        else if ($486 == 255) {
          __label__ = 139; break;
        }
        else {
        __label__ = 141; break;
        }
        
      case 137: // $bb_i36_i
        $5=7; //@line 520 "xmltok.c"
        __label__ = 142; break; //@line 520 "xmltok.c"
      case 138: // $bb1_i37_i
        $5=8; //@line 522 "xmltok.c"
        __label__ = 142; break; //@line 522 "xmltok.c"
      case 139: // $bb2_i40_i
        var $487=$lo_addr_i34_i; //@line 524 "xmltok.c"
        var $488=($487); //@line 524 "xmltok.c"
        var $_off_i38_i=($488) + -254;
        var $switch_i39_i=($_off_i38_i) < 2;
        if ($switch_i39_i) { __label__ = 140; break; } else { __label__ = 141; break; }
      case 140: // $bb3_i41_i
        $5=0; //@line 527 "xmltok.c"
        __label__ = 142; break; //@line 527 "xmltok.c"
      case 141: // $bb4_i42_i
        $5=29; //@line 531 "xmltok.c"
        __label__ = 142; break; //@line 531 "xmltok.c"
      case 142: // $unicode_byte_type_exit45_i
        var $489=$5; //@line 520 "xmltok.c"
        $retval_i35_i=$489; //@line 520 "xmltok.c"
        var $retval6_i43_i=$retval_i35_i; //@line 520 "xmltok.c"
        $iftmp_691_i=$retval6_i43_i; //@line 717 "xmltok_impl.c"
        __lastLabel__ = 142; __label__ = 143; break; //@line 717 "xmltok_impl.c"
      case 143: // $bb32_i
        var $490=__lastLabel__ == 142 ? $retval6_i43_i : ($474);
        if ($490 == 5) {
          __label__ = 147; break;
        }
        else if ($490 == 6) {
          __label__ = 150; break;
        }
        else if ($490 == 7) {
          __label__ = 153; break;
        }
        else if ($490 == 9) {
          __label__ = 156; break;
        }
        else if ($490 == 10) {
          __label__ = 156; break;
        }
        else if ($490 == 11) {
          __label__ = 312; break;
        }
        else if ($490 == 17) {
          __label__ = 313; break;
        }
        else if ($490 == 21) {
          __label__ = 156; break;
        }
        else if ($490 == 22) {
          __label__ = 146; break;
        }
        else if ($490 == 24) {
          __label__ = 146; break;
        }
        else if ($490 == 25) {
          __label__ = 146; break;
        }
        else if ($490 == 26) {
          __label__ = 146; break;
        }
        else if ($490 == 27) {
          __label__ = 146; break;
        }
        else if ($490 == 29) {
          __label__ = 144; break;
        }
        else {
        __label__ = 319; break;
        }
        
      case 144: // $bb33_i
        var $491=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $492=$491+1; //@line 718 "xmltok_impl.c"
        var $493=HEAP[$492]; //@line 718 "xmltok_impl.c"
        var $494=($493); //@line 718 "xmltok_impl.c"
        var $495=_namePages+$494; //@line 718 "xmltok_impl.c"
        var $496=HEAP[$495]; //@line 718 "xmltok_impl.c"
        var $497=($496); //@line 718 "xmltok_impl.c"
        var $498=($497) * 8;
        var $499=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $500=$499; //@line 718 "xmltok_impl.c"
        var $501=HEAP[$500]; //@line 718 "xmltok_impl.c"
        var $502=($501) >>> 5; //@line 718 "xmltok_impl.c"
        var $503=($502); //@line 718 "xmltok_impl.c"
        var $504=($503) + ($498); //@line 718 "xmltok_impl.c"
        var $505=_namingBitmap+$504*4; //@line 718 "xmltok_impl.c"
        var $506=HEAP[$505]; //@line 718 "xmltok_impl.c"
        var $507=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $508=$507; //@line 718 "xmltok_impl.c"
        var $509=HEAP[$508]; //@line 718 "xmltok_impl.c"
        var $510=($509); //@line 718 "xmltok_impl.c"
        var $511=($510) & 31; //@line 718 "xmltok_impl.c"
        var $512=1 << ($511); //@line 718 "xmltok_impl.c"
        var $513=($512) & ($506); //@line 718 "xmltok_impl.c"
        var $514=($513)==0; //@line 718 "xmltok_impl.c"
        if ($514) { __label__ = 145; break; } else { __label__ = 146; break; } //@line 718 "xmltok_impl.c"
      case 145: // $bb34_i
        var $515=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $516=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$515]=$516; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 146: // $bb35_i
        var $517=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $518=$517+2; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$518; //@line 718 "xmltok_impl.c"
        __label__ = 320; break; //@line 718 "xmltok_impl.c"
      case 147: // $bb36_i
        var $519=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $520=($519); //@line 718 "xmltok_impl.c"
        var $521=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $522=($521); //@line 718 "xmltok_impl.c"
        var $523=($520) - ($522); //@line 718 "xmltok_impl.c"
        var $524=($523) <= 1; //@line 718 "xmltok_impl.c"
        if ($524) { __label__ = 148; break; } else { __label__ = 149; break; } //@line 718 "xmltok_impl.c"
      case 148: // $bb37_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 149: // $bb38_i
        var $525=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $526=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$525]=$526; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 150: // $bb39_i
        var $527=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $528=($527); //@line 718 "xmltok_impl.c"
        var $529=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $530=($529); //@line 718 "xmltok_impl.c"
        var $531=($528) - ($530); //@line 718 "xmltok_impl.c"
        var $532=($531) <= 2; //@line 718 "xmltok_impl.c"
        if ($532) { __label__ = 151; break; } else { __label__ = 152; break; } //@line 718 "xmltok_impl.c"
      case 151: // $bb40_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 152: // $bb41_i
        var $533=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $534=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$533]=$534; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 153: // $bb42_i
        var $535=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $536=($535); //@line 718 "xmltok_impl.c"
        var $537=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $538=($537); //@line 718 "xmltok_impl.c"
        var $539=($536) - ($538); //@line 718 "xmltok_impl.c"
        var $540=($539) <= 3; //@line 718 "xmltok_impl.c"
        if ($540) { __label__ = 154; break; } else { __label__ = 155; break; } //@line 718 "xmltok_impl.c"
      case 154: // $bb43_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 155: // $bb44_i
        var $541=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $542=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$541]=$542; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 156: // $bb45_i
        var $543=$ptr_addr_i; //@line 739 "xmltok_impl.c"
        var $544=$543+2; //@line 739 "xmltok_impl.c"
        $ptr_addr_i=$544; //@line 739 "xmltok_impl.c"
        __label__ = 310; break; //@line 739 "xmltok_impl.c"
      case 157: // $bb46_i
        var $545=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $546=$545+1; //@line 741 "xmltok_impl.c"
        var $547=HEAP[$546]; //@line 741 "xmltok_impl.c"
        var $548=($547)==0; //@line 741 "xmltok_impl.c"
        if ($548) { __label__ = 158; break; } else { __label__ = 159; break; } //@line 741 "xmltok_impl.c"
      case 158: // $bb47_i
        var $549=$enc_addr_i; //@line 741 "xmltok_impl.c"
        var $550=$549; //@line 741 "xmltok_impl.c"
        var $551=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $552=HEAP[$551]; //@line 741 "xmltok_impl.c"
        var $553=($552); //@line 741 "xmltok_impl.c"
        var $554=$550+72; //@line 741 "xmltok_impl.c"
        var $555=$554+$553; //@line 741 "xmltok_impl.c"
        var $556=HEAP[$555]; //@line 741 "xmltok_impl.c"
        var $557=($556); //@line 741 "xmltok_impl.c"
        $iftmp_699_i=$557; //@line 741 "xmltok_impl.c"
        __lastLabel__ = 158; __label__ = 166; break; //@line 741 "xmltok_impl.c"
      case 159: // $bb48_i
        var $558=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $559=$558; //@line 741 "xmltok_impl.c"
        var $560=HEAP[$559]; //@line 741 "xmltok_impl.c"
        var $561=($560); //@line 741 "xmltok_impl.c"
        var $562=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $563=$562+1; //@line 741 "xmltok_impl.c"
        var $564=HEAP[$563]; //@line 741 "xmltok_impl.c"
        var $565=($564); //@line 741 "xmltok_impl.c"
        var $566=((($565)) & 255); //@line 741 "xmltok_impl.c"
        var $567=((($561)) & 255); //@line 741 "xmltok_impl.c"
        $hi_addr_i20_i=$566;
        $lo_addr_i21_i=$567;
        var $568=$hi_addr_i20_i; //@line 518 "xmltok.c"
        var $569=($568); //@line 518 "xmltok.c"
        if ($569 == 216) {
          __label__ = 160; break;
        }
        else if ($569 == 217) {
          __label__ = 160; break;
        }
        else if ($569 == 218) {
          __label__ = 160; break;
        }
        else if ($569 == 219) {
          __label__ = 160; break;
        }
        else if ($569 == 220) {
          __label__ = 161; break;
        }
        else if ($569 == 221) {
          __label__ = 161; break;
        }
        else if ($569 == 222) {
          __label__ = 161; break;
        }
        else if ($569 == 223) {
          __label__ = 161; break;
        }
        else if ($569 == 255) {
          __label__ = 162; break;
        }
        else {
        __label__ = 164; break;
        }
        
      case 160: // $bb_i23_i
        $6=7; //@line 520 "xmltok.c"
        __label__ = 165; break; //@line 520 "xmltok.c"
      case 161: // $bb1_i24_i
        $6=8; //@line 522 "xmltok.c"
        __label__ = 165; break; //@line 522 "xmltok.c"
      case 162: // $bb2_i27_i
        var $570=$lo_addr_i21_i; //@line 524 "xmltok.c"
        var $571=($570); //@line 524 "xmltok.c"
        var $_off_i25_i=($571) + -254;
        var $switch_i26_i=($_off_i25_i) < 2;
        if ($switch_i26_i) { __label__ = 163; break; } else { __label__ = 164; break; }
      case 163: // $bb3_i28_i
        $6=0; //@line 527 "xmltok.c"
        __label__ = 165; break; //@line 527 "xmltok.c"
      case 164: // $bb4_i29_i
        $6=29; //@line 531 "xmltok.c"
        __label__ = 165; break; //@line 531 "xmltok.c"
      case 165: // $unicode_byte_type_exit32_i
        var $572=$6; //@line 520 "xmltok.c"
        $retval_i22_i=$572; //@line 520 "xmltok.c"
        var $retval6_i30_i=$retval_i22_i; //@line 520 "xmltok.c"
        $iftmp_699_i=$retval6_i30_i; //@line 741 "xmltok_impl.c"
        __lastLabel__ = 165; __label__ = 166; break; //@line 741 "xmltok_impl.c"
      case 166: // $bb49_i
        var $573=__lastLabel__ == 165 ? $retval6_i30_i : ($557);
        if ($573 == 5) {
          __label__ = 299; break;
        }
        else if ($573 == 6) {
          __label__ = 302; break;
        }
        else if ($573 == 7) {
          __label__ = 305; break;
        }
        else if ($573 == 9) {
          __label__ = 308; break;
        }
        else if ($573 == 10) {
          __label__ = 308; break;
        }
        else if ($573 == 11) {
          __label__ = 312; break;
        }
        else if ($573 == 17) {
          __label__ = 313; break;
        }
        else if ($573 == 21) {
          __label__ = 308; break;
        }
        else if ($573 == 22) {
          __label__ = 169; break;
        }
        else if ($573 == 24) {
          __label__ = 169; break;
        }
        else if ($573 == 29) {
          __label__ = 167; break;
        }
        else {
        __label__ = 309; break;
        }
        
      case 167: // $bb50_i
        var $574=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $575=$574+1; //@line 742 "xmltok_impl.c"
        var $576=HEAP[$575]; //@line 742 "xmltok_impl.c"
        var $577=($576); //@line 742 "xmltok_impl.c"
        var $578=_nmstrtPages+$577; //@line 742 "xmltok_impl.c"
        var $579=HEAP[$578]; //@line 742 "xmltok_impl.c"
        var $580=($579); //@line 742 "xmltok_impl.c"
        var $581=($580) * 8;
        var $582=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $583=$582; //@line 742 "xmltok_impl.c"
        var $584=HEAP[$583]; //@line 742 "xmltok_impl.c"
        var $585=($584) >>> 5; //@line 742 "xmltok_impl.c"
        var $586=($585); //@line 742 "xmltok_impl.c"
        var $587=($586) + ($581); //@line 742 "xmltok_impl.c"
        var $588=_namingBitmap+$587*4; //@line 742 "xmltok_impl.c"
        var $589=HEAP[$588]; //@line 742 "xmltok_impl.c"
        var $590=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $591=$590; //@line 742 "xmltok_impl.c"
        var $592=HEAP[$591]; //@line 742 "xmltok_impl.c"
        var $593=($592); //@line 742 "xmltok_impl.c"
        var $594=($593) & 31; //@line 742 "xmltok_impl.c"
        var $595=1 << ($594); //@line 742 "xmltok_impl.c"
        var $596=($595) & ($589); //@line 742 "xmltok_impl.c"
        var $597=($596)==0; //@line 742 "xmltok_impl.c"
        if ($597) { __label__ = 168; break; } else { __label__ = 169; break; } //@line 742 "xmltok_impl.c"
      case 168: // $bb51_i
        var $598=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $599=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$598]=$599; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 169: // $bb52_i
        var $600=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $601=$600+2; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$601; //@line 742 "xmltok_impl.c"
        var $602=$enc_addr_i; //@line 754 "xmltok_impl.c"
        var $603=$ptr_addr_i; //@line 754 "xmltok_impl.c"
        var $604=$end_addr_i; //@line 754 "xmltok_impl.c"
        var $605=$nextTokPtr_addr_i; //@line 754 "xmltok_impl.c"
        $enc_addr_i_i=$602;
        HEAP[$ptr_addr_i_i]=$603;
        $end_addr_i_i=$604;
        $nextTokPtr_addr_i_i=$605;
        __label__ = 296; break; //@line 529 "xmltok_impl.c"
      case 170: // $bb_i2_i
        var $606=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $607=$606+1; //@line 530 "xmltok_impl.c"
        var $608=HEAP[$607]; //@line 530 "xmltok_impl.c"
        var $609=($608)==0; //@line 530 "xmltok_impl.c"
        if ($609) { __label__ = 171; break; } else { __label__ = 172; break; } //@line 530 "xmltok_impl.c"
      case 171: // $bb1_i3_i
        var $610=$enc_addr_i_i; //@line 530 "xmltok_impl.c"
        var $611=$610; //@line 530 "xmltok_impl.c"
        var $612=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $613=HEAP[$612]; //@line 530 "xmltok_impl.c"
        var $614=($613); //@line 530 "xmltok_impl.c"
        var $615=$611+72; //@line 530 "xmltok_impl.c"
        var $616=$615+$614; //@line 530 "xmltok_impl.c"
        var $617=HEAP[$616]; //@line 530 "xmltok_impl.c"
        var $618=($617); //@line 530 "xmltok_impl.c"
        $iftmp_562_i_i=$618; //@line 530 "xmltok_impl.c"
        __lastLabel__ = 171; __label__ = 179; break; //@line 530 "xmltok_impl.c"
      case 172: // $bb2_i4_i
        var $619=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $620=$619; //@line 530 "xmltok_impl.c"
        var $621=HEAP[$620]; //@line 530 "xmltok_impl.c"
        var $622=($621); //@line 530 "xmltok_impl.c"
        var $623=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $624=$623+1; //@line 530 "xmltok_impl.c"
        var $625=HEAP[$624]; //@line 530 "xmltok_impl.c"
        var $626=($625); //@line 530 "xmltok_impl.c"
        var $627=((($626)) & 255); //@line 530 "xmltok_impl.c"
        var $628=((($622)) & 255); //@line 530 "xmltok_impl.c"
        $hi_addr_i_i_i=$627;
        $lo_addr_i_i_i=$628;
        var $629=$hi_addr_i_i_i; //@line 518 "xmltok.c"
        var $630=($629); //@line 518 "xmltok.c"
        if ($630 == 216) {
          __label__ = 173; break;
        }
        else if ($630 == 217) {
          __label__ = 173; break;
        }
        else if ($630 == 218) {
          __label__ = 173; break;
        }
        else if ($630 == 219) {
          __label__ = 173; break;
        }
        else if ($630 == 220) {
          __label__ = 174; break;
        }
        else if ($630 == 221) {
          __label__ = 174; break;
        }
        else if ($630 == 222) {
          __label__ = 174; break;
        }
        else if ($630 == 223) {
          __label__ = 174; break;
        }
        else if ($630 == 255) {
          __label__ = 175; break;
        }
        else {
        __label__ = 177; break;
        }
        
      case 173: // $bb_i_i_i
        $13=7; //@line 520 "xmltok.c"
        __label__ = 178; break; //@line 520 "xmltok.c"
      case 174: // $bb1_i_i_i
        $13=8; //@line 522 "xmltok.c"
        __label__ = 178; break; //@line 522 "xmltok.c"
      case 175: // $bb2_i_i_i
        var $631=$lo_addr_i_i_i; //@line 524 "xmltok.c"
        var $632=($631); //@line 524 "xmltok.c"
        var $_off_i_i_i=($632) + -254;
        var $switch_i_i_i=($_off_i_i_i) < 2;
        if ($switch_i_i_i) { __label__ = 176; break; } else { __label__ = 177; break; }
      case 176: // $bb3_i_i_i
        $13=0; //@line 527 "xmltok.c"
        __label__ = 178; break; //@line 527 "xmltok.c"
      case 177: // $bb4_i_i_i
        $13=29; //@line 531 "xmltok.c"
        __label__ = 178; break; //@line 531 "xmltok.c"
      case 178: // $unicode_byte_type_exit_i_i
        var $633=$13; //@line 520 "xmltok.c"
        $retval_i_i_i=$633; //@line 520 "xmltok.c"
        var $retval6_i_i_i=$retval_i_i_i; //@line 520 "xmltok.c"
        $iftmp_562_i_i=$retval6_i_i_i; //@line 530 "xmltok_impl.c"
        __lastLabel__ = 178; __label__ = 179; break; //@line 530 "xmltok_impl.c"
      case 179: // $bb3_i5_i
        var $634=__lastLabel__ == 178 ? $retval6_i_i_i : ($618);
        if ($634 == 5) {
          __label__ = 183; break;
        }
        else if ($634 == 6) {
          __label__ = 186; break;
        }
        else if ($634 == 7) {
          __label__ = 189; break;
        }
        else if ($634 == 9) {
          __label__ = 192; break;
        }
        else if ($634 == 10) {
          __label__ = 192; break;
        }
        else if ($634 == 14) {
          __label__ = 206; break;
        }
        else if ($634 == 21) {
          __label__ = 192; break;
        }
        else if ($634 == 22) {
          __label__ = 182; break;
        }
        else if ($634 == 24) {
          __label__ = 182; break;
        }
        else if ($634 == 25) {
          __label__ = 182; break;
        }
        else if ($634 == 26) {
          __label__ = 182; break;
        }
        else if ($634 == 27) {
          __label__ = 182; break;
        }
        else if ($634 == 29) {
          __label__ = 180; break;
        }
        else {
        __label__ = 295; break;
        }
        
      case 180: // $bb4_i6_i
        var $635=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $636=$635+1; //@line 531 "xmltok_impl.c"
        var $637=HEAP[$636]; //@line 531 "xmltok_impl.c"
        var $638=($637); //@line 531 "xmltok_impl.c"
        var $639=_namePages+$638; //@line 531 "xmltok_impl.c"
        var $640=HEAP[$639]; //@line 531 "xmltok_impl.c"
        var $641=($640); //@line 531 "xmltok_impl.c"
        var $642=($641) * 8;
        var $643=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $644=$643; //@line 531 "xmltok_impl.c"
        var $645=HEAP[$644]; //@line 531 "xmltok_impl.c"
        var $646=($645) >>> 5; //@line 531 "xmltok_impl.c"
        var $647=($646); //@line 531 "xmltok_impl.c"
        var $648=($647) + ($642); //@line 531 "xmltok_impl.c"
        var $649=_namingBitmap+$648*4; //@line 531 "xmltok_impl.c"
        var $650=HEAP[$649]; //@line 531 "xmltok_impl.c"
        var $651=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $652=$651; //@line 531 "xmltok_impl.c"
        var $653=HEAP[$652]; //@line 531 "xmltok_impl.c"
        var $654=($653); //@line 531 "xmltok_impl.c"
        var $655=($654) & 31; //@line 531 "xmltok_impl.c"
        var $656=1 << ($655); //@line 531 "xmltok_impl.c"
        var $657=($656) & ($650); //@line 531 "xmltok_impl.c"
        var $658=($657)==0; //@line 531 "xmltok_impl.c"
        if ($658) { __label__ = 181; break; } else { __label__ = 182; break; } //@line 531 "xmltok_impl.c"
      case 181: // $bb5_i_i
        var $659=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $660=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$660]=$659; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 182: // $bb6_i_i
        var $661=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $662=$661+2; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$662; //@line 531 "xmltok_impl.c"
        __label__ = 296; break; //@line 531 "xmltok_impl.c"
      case 183: // $bb7_i_i
        var $663=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $664=($663); //@line 531 "xmltok_impl.c"
        var $665=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $666=($665); //@line 531 "xmltok_impl.c"
        var $667=($664) - ($666); //@line 531 "xmltok_impl.c"
        var $668=($667) <= 1; //@line 531 "xmltok_impl.c"
        if ($668) { __label__ = 184; break; } else { __label__ = 185; break; } //@line 531 "xmltok_impl.c"
      case 184: // $bb8_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 185: // $bb9_i_i
        var $669=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $670=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$670]=$669; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 186: // $bb10_i_i
        var $671=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $672=($671); //@line 531 "xmltok_impl.c"
        var $673=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $674=($673); //@line 531 "xmltok_impl.c"
        var $675=($672) - ($674); //@line 531 "xmltok_impl.c"
        var $676=($675) <= 2; //@line 531 "xmltok_impl.c"
        if ($676) { __label__ = 187; break; } else { __label__ = 188; break; } //@line 531 "xmltok_impl.c"
      case 187: // $bb11_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 188: // $bb12_i_i
        var $677=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $678=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$678]=$677; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 189: // $bb13_i_i
        var $679=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $680=($679); //@line 531 "xmltok_impl.c"
        var $681=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $682=($681); //@line 531 "xmltok_impl.c"
        var $683=($680) - ($682); //@line 531 "xmltok_impl.c"
        var $684=($683) <= 3; //@line 531 "xmltok_impl.c"
        if ($684) { __label__ = 190; break; } else { __label__ = 191; break; } //@line 531 "xmltok_impl.c"
      case 190: // $bb14_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 191: // $bb15_i_i
        var $685=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $686=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$686]=$685; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 192: // $bb16_i_i
        var $687=HEAP[$ptr_addr_i_i]; //@line 554 "xmltok_impl.c"
        var $688=$687+2; //@line 554 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$688; //@line 554 "xmltok_impl.c"
        var $689=HEAP[$ptr_addr_i_i]; //@line 555 "xmltok_impl.c"
        var $690=$end_addr_i_i; //@line 555 "xmltok_impl.c"
        var $691=($689)==($690); //@line 555 "xmltok_impl.c"
        if ($691) { __label__ = 193; break; } else { __label__ = 194; break; } //@line 555 "xmltok_impl.c"
      case 193: // $bb17_i_i
        $14=-1; //@line 556 "xmltok_impl.c"
        __label__ = 298; break; //@line 556 "xmltok_impl.c"
      case 194: // $bb18_i_i
        var $692=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $693=$692+1; //@line 557 "xmltok_impl.c"
        var $694=HEAP[$693]; //@line 557 "xmltok_impl.c"
        var $695=($694)==0; //@line 557 "xmltok_impl.c"
        if ($695) { __label__ = 195; break; } else { __label__ = 196; break; } //@line 557 "xmltok_impl.c"
      case 195: // $bb19_i_i
        var $696=$enc_addr_i_i; //@line 557 "xmltok_impl.c"
        var $697=$696; //@line 557 "xmltok_impl.c"
        var $698=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $699=HEAP[$698]; //@line 557 "xmltok_impl.c"
        var $700=($699); //@line 557 "xmltok_impl.c"
        var $701=$697+72; //@line 557 "xmltok_impl.c"
        var $702=$701+$700; //@line 557 "xmltok_impl.c"
        var $703=HEAP[$702]; //@line 557 "xmltok_impl.c"
        var $704=($703); //@line 557 "xmltok_impl.c"
        $iftmp_590_i_i=$704; //@line 557 "xmltok_impl.c"
        __lastLabel__ = 195; __label__ = 203; break; //@line 557 "xmltok_impl.c"
      case 196: // $bb20_i_i
        var $705=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $706=$705; //@line 557 "xmltok_impl.c"
        var $707=HEAP[$706]; //@line 557 "xmltok_impl.c"
        var $708=($707); //@line 557 "xmltok_impl.c"
        var $709=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $710=$709+1; //@line 557 "xmltok_impl.c"
        var $711=HEAP[$710]; //@line 557 "xmltok_impl.c"
        var $712=($711); //@line 557 "xmltok_impl.c"
        var $713=((($712)) & 255); //@line 557 "xmltok_impl.c"
        var $714=((($708)) & 255); //@line 557 "xmltok_impl.c"
        $hi_addr_i26_i_i=$713;
        $lo_addr_i27_i_i=$714;
        var $715=$hi_addr_i26_i_i; //@line 518 "xmltok.c"
        var $716=($715); //@line 518 "xmltok.c"
        if ($716 == 216) {
          __label__ = 197; break;
        }
        else if ($716 == 217) {
          __label__ = 197; break;
        }
        else if ($716 == 218) {
          __label__ = 197; break;
        }
        else if ($716 == 219) {
          __label__ = 197; break;
        }
        else if ($716 == 220) {
          __label__ = 198; break;
        }
        else if ($716 == 221) {
          __label__ = 198; break;
        }
        else if ($716 == 222) {
          __label__ = 198; break;
        }
        else if ($716 == 223) {
          __label__ = 198; break;
        }
        else if ($716 == 255) {
          __label__ = 199; break;
        }
        else {
        __label__ = 201; break;
        }
        
      case 197: // $bb_i29_i_i
        $10=7; //@line 520 "xmltok.c"
        __label__ = 202; break; //@line 520 "xmltok.c"
      case 198: // $bb1_i30_i_i
        $10=8; //@line 522 "xmltok.c"
        __label__ = 202; break; //@line 522 "xmltok.c"
      case 199: // $bb2_i33_i_i
        var $717=$lo_addr_i27_i_i; //@line 524 "xmltok.c"
        var $718=($717); //@line 524 "xmltok.c"
        var $_off_i31_i_i=($718) + -254;
        var $switch_i32_i_i=($_off_i31_i_i) < 2;
        if ($switch_i32_i_i) { __label__ = 200; break; } else { __label__ = 201; break; }
      case 200: // $bb3_i34_i_i
        $10=0; //@line 527 "xmltok.c"
        __label__ = 202; break; //@line 527 "xmltok.c"
      case 201: // $bb4_i35_i_i
        $10=29; //@line 531 "xmltok.c"
        __label__ = 202; break; //@line 531 "xmltok.c"
      case 202: // $unicode_byte_type_exit37_i_i
        var $719=$10; //@line 520 "xmltok.c"
        $retval_i28_i_i=$719; //@line 520 "xmltok.c"
        var $retval6_i36_i_i=$retval_i28_i_i; //@line 520 "xmltok.c"
        $iftmp_590_i_i=$retval6_i36_i_i; //@line 557 "xmltok_impl.c"
        __lastLabel__ = 202; __label__ = 203; break; //@line 557 "xmltok_impl.c"
      case 203: // $bb21_i_i
        var $720=__lastLabel__ == 202 ? $retval6_i36_i_i : ($704);
        $t_i_i=$720; //@line 557 "xmltok_impl.c"
        var $721=($720)==14; //@line 558 "xmltok_impl.c"
        if ($721) { __label__ = 206; break; } else { __label__ = 204; break; } //@line 558 "xmltok_impl.c"
      case 204: // $bb22_i_i
        var $722=$t_i_i; //@line 560 "xmltok_impl.c"
        if ($722 == 9) {
          __label__ = 192; break;
        }
        else if ($722 == 10) {
          __label__ = 192; break;
        }
        else if ($722 == 21) {
          __label__ = 192; break;
        }
        else {
        __label__ = 205; break;
        }
        
      case 205: // $bb24_i_i
        var $723=HEAP[$ptr_addr_i_i]; //@line 566 "xmltok_impl.c"
        var $724=$nextTokPtr_addr_i_i; //@line 566 "xmltok_impl.c"
        HEAP[$724]=$723; //@line 566 "xmltok_impl.c"
        $14=0; //@line 567 "xmltok_impl.c"
        __label__ = 298; break; //@line 567 "xmltok_impl.c"
      case 206: // $bb25_i_i
        var $725=HEAP[$ptr_addr_i_i]; //@line 578 "xmltok_impl.c"
        var $726=$725+2; //@line 578 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$726; //@line 578 "xmltok_impl.c"
        var $727=HEAP[$ptr_addr_i_i]; //@line 579 "xmltok_impl.c"
        var $728=$end_addr_i_i; //@line 579 "xmltok_impl.c"
        var $729=($727)==($728); //@line 579 "xmltok_impl.c"
        if ($729) { __label__ = 207; break; } else { __label__ = 208; break; } //@line 579 "xmltok_impl.c"
      case 207: // $bb26_i_i
        $14=-1; //@line 580 "xmltok_impl.c"
        __label__ = 298; break; //@line 580 "xmltok_impl.c"
      case 208: // $bb27_i_i
        var $730=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $731=$730+1; //@line 581 "xmltok_impl.c"
        var $732=HEAP[$731]; //@line 581 "xmltok_impl.c"
        var $733=($732)==0; //@line 581 "xmltok_impl.c"
        if ($733) { __label__ = 209; break; } else { __label__ = 210; break; } //@line 581 "xmltok_impl.c"
      case 209: // $bb28_i_i
        var $734=$enc_addr_i_i; //@line 581 "xmltok_impl.c"
        var $735=$734; //@line 581 "xmltok_impl.c"
        var $736=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $737=HEAP[$736]; //@line 581 "xmltok_impl.c"
        var $738=($737); //@line 581 "xmltok_impl.c"
        var $739=$735+72; //@line 581 "xmltok_impl.c"
        var $740=$739+$738; //@line 581 "xmltok_impl.c"
        var $741=HEAP[$740]; //@line 581 "xmltok_impl.c"
        var $742=($741); //@line 581 "xmltok_impl.c"
        $iftmp_599_i_i=$742; //@line 581 "xmltok_impl.c"
        __label__ = 217; break; //@line 581 "xmltok_impl.c"
      case 210: // $bb29_i_i
        var $743=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $744=$743; //@line 581 "xmltok_impl.c"
        var $745=HEAP[$744]; //@line 581 "xmltok_impl.c"
        var $746=($745); //@line 581 "xmltok_impl.c"
        var $747=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $748=$747+1; //@line 581 "xmltok_impl.c"
        var $749=HEAP[$748]; //@line 581 "xmltok_impl.c"
        var $750=($749); //@line 581 "xmltok_impl.c"
        var $751=((($750)) & 255); //@line 581 "xmltok_impl.c"
        var $752=((($746)) & 255); //@line 581 "xmltok_impl.c"
        $hi_addr_i50_i_i=$751;
        $lo_addr_i51_i_i=$752;
        var $753=$hi_addr_i50_i_i; //@line 518 "xmltok.c"
        var $754=($753); //@line 518 "xmltok.c"
        if ($754 == 216) {
          __label__ = 211; break;
        }
        else if ($754 == 217) {
          __label__ = 211; break;
        }
        else if ($754 == 218) {
          __label__ = 211; break;
        }
        else if ($754 == 219) {
          __label__ = 211; break;
        }
        else if ($754 == 220) {
          __label__ = 212; break;
        }
        else if ($754 == 221) {
          __label__ = 212; break;
        }
        else if ($754 == 222) {
          __label__ = 212; break;
        }
        else if ($754 == 223) {
          __label__ = 212; break;
        }
        else if ($754 == 255) {
          __label__ = 213; break;
        }
        else {
        __label__ = 215; break;
        }
        
      case 211: // $bb_i53_i_i
        $8=7; //@line 520 "xmltok.c"
        __label__ = 216; break; //@line 520 "xmltok.c"
      case 212: // $bb1_i54_i_i
        $8=8; //@line 522 "xmltok.c"
        __label__ = 216; break; //@line 522 "xmltok.c"
      case 213: // $bb2_i57_i_i
        var $755=$lo_addr_i51_i_i; //@line 524 "xmltok.c"
        var $756=($755); //@line 524 "xmltok.c"
        var $_off_i55_i_i=($756) + -254;
        var $switch_i56_i_i=($_off_i55_i_i) < 2;
        if ($switch_i56_i_i) { __label__ = 214; break; } else { __label__ = 215; break; }
      case 214: // $bb3_i58_i_i
        $8=0; //@line 527 "xmltok.c"
        __label__ = 216; break; //@line 527 "xmltok.c"
      case 215: // $bb4_i59_i_i
        $8=29; //@line 531 "xmltok.c"
        __label__ = 216; break; //@line 531 "xmltok.c"
      case 216: // $unicode_byte_type_exit61_i_i
        var $757=$8; //@line 520 "xmltok.c"
        $retval_i52_i_i=$757; //@line 520 "xmltok.c"
        var $retval6_i60_i_i=$retval_i52_i_i; //@line 520 "xmltok.c"
        $iftmp_599_i_i=$retval6_i60_i_i; //@line 581 "xmltok_impl.c"
        __label__ = 217; break; //@line 581 "xmltok_impl.c"
      case 217: // $bb30_i_i
        var $758=$iftmp_599_i_i; //@line 581 "xmltok_impl.c"
        $open_i_i=$758; //@line 581 "xmltok_impl.c"
        var $759=$open_i_i; //@line 582 "xmltok_impl.c"
        var $760=($759)==12; //@line 582 "xmltok_impl.c"
        var $761=$open_i_i; //@line 582 "xmltok_impl.c"
        var $762=($761)==13; //@line 582 "xmltok_impl.c"
        var $or_cond_i_i=($760) | ($762);
        if ($or_cond_i_i) { __label__ = 220; break; } else { __label__ = 218; break; } //@line 582 "xmltok_impl.c"
      case 218: // $bb32_i_i
        var $763=$open_i_i; //@line 584 "xmltok_impl.c"
        if ($763 == 9) {
          __label__ = 206; break;
        }
        else if ($763 == 10) {
          __label__ = 206; break;
        }
        else if ($763 == 21) {
          __label__ = 206; break;
        }
        else {
        __label__ = 219; break;
        }
        
      case 219: // $bb34_i_i
        var $764=HEAP[$ptr_addr_i_i]; //@line 590 "xmltok_impl.c"
        var $765=$nextTokPtr_addr_i_i; //@line 590 "xmltok_impl.c"
        HEAP[$765]=$764; //@line 590 "xmltok_impl.c"
        $14=0; //@line 591 "xmltok_impl.c"
        __label__ = 298; break; //@line 591 "xmltok_impl.c"
      case 220: // $bb35_i_i
        var $766=HEAP[$ptr_addr_i_i]; //@line 594 "xmltok_impl.c"
        var $767=$766+2; //@line 594 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$767; //@line 594 "xmltok_impl.c"
        __label__ = 221; break; //@line 594 "xmltok_impl.c"
      case 221: // $bb36_i_i
        var $768=HEAP[$ptr_addr_i_i]; //@line 598 "xmltok_impl.c"
        var $769=$end_addr_i_i; //@line 598 "xmltok_impl.c"
        var $770=($768)==($769); //@line 598 "xmltok_impl.c"
        if ($770) { __label__ = 222; break; } else { __label__ = 223; break; } //@line 598 "xmltok_impl.c"
      case 222: // $bb38_i_i
        $14=-1; //@line 599 "xmltok_impl.c"
        __label__ = 298; break; //@line 599 "xmltok_impl.c"
      case 223: // $bb39_i_i
        var $771=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $772=$771+1; //@line 600 "xmltok_impl.c"
        var $773=HEAP[$772]; //@line 600 "xmltok_impl.c"
        var $774=($773)==0; //@line 600 "xmltok_impl.c"
        if ($774) { __label__ = 224; break; } else { __label__ = 225; break; } //@line 600 "xmltok_impl.c"
      case 224: // $bb40_i_i
        var $775=$enc_addr_i_i; //@line 600 "xmltok_impl.c"
        var $776=$775; //@line 600 "xmltok_impl.c"
        var $777=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $778=HEAP[$777]; //@line 600 "xmltok_impl.c"
        var $779=($778); //@line 600 "xmltok_impl.c"
        var $780=$776+72; //@line 600 "xmltok_impl.c"
        var $781=$780+$779; //@line 600 "xmltok_impl.c"
        var $782=HEAP[$781]; //@line 600 "xmltok_impl.c"
        var $783=($782); //@line 600 "xmltok_impl.c"
        $iftmp_608_i_i=$783; //@line 600 "xmltok_impl.c"
        __label__ = 232; break; //@line 600 "xmltok_impl.c"
      case 225: // $bb41_i_i
        var $784=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $785=$784; //@line 600 "xmltok_impl.c"
        var $786=HEAP[$785]; //@line 600 "xmltok_impl.c"
        var $787=($786); //@line 600 "xmltok_impl.c"
        var $788=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $789=$788+1; //@line 600 "xmltok_impl.c"
        var $790=HEAP[$789]; //@line 600 "xmltok_impl.c"
        var $791=($790); //@line 600 "xmltok_impl.c"
        var $792=((($791)) & 255); //@line 600 "xmltok_impl.c"
        var $793=((($787)) & 255); //@line 600 "xmltok_impl.c"
        $hi_addr_i38_i_i=$792;
        $lo_addr_i39_i_i=$793;
        var $794=$hi_addr_i38_i_i; //@line 518 "xmltok.c"
        var $795=($794); //@line 518 "xmltok.c"
        if ($795 == 216) {
          __label__ = 226; break;
        }
        else if ($795 == 217) {
          __label__ = 226; break;
        }
        else if ($795 == 218) {
          __label__ = 226; break;
        }
        else if ($795 == 219) {
          __label__ = 226; break;
        }
        else if ($795 == 220) {
          __label__ = 227; break;
        }
        else if ($795 == 221) {
          __label__ = 227; break;
        }
        else if ($795 == 222) {
          __label__ = 227; break;
        }
        else if ($795 == 223) {
          __label__ = 227; break;
        }
        else if ($795 == 255) {
          __label__ = 228; break;
        }
        else {
        __label__ = 230; break;
        }
        
      case 226: // $bb_i41_i_i
        $9=7; //@line 520 "xmltok.c"
        __label__ = 231; break; //@line 520 "xmltok.c"
      case 227: // $bb1_i42_i_i
        $9=8; //@line 522 "xmltok.c"
        __label__ = 231; break; //@line 522 "xmltok.c"
      case 228: // $bb2_i45_i_i
        var $796=$lo_addr_i39_i_i; //@line 524 "xmltok.c"
        var $797=($796); //@line 524 "xmltok.c"
        var $_off_i43_i_i=($797) + -254;
        var $switch_i44_i_i=($_off_i43_i_i) < 2;
        if ($switch_i44_i_i) { __label__ = 229; break; } else { __label__ = 230; break; }
      case 229: // $bb3_i46_i_i
        $9=0; //@line 527 "xmltok.c"
        __label__ = 231; break; //@line 527 "xmltok.c"
      case 230: // $bb4_i47_i_i
        $9=29; //@line 531 "xmltok.c"
        __label__ = 231; break; //@line 531 "xmltok.c"
      case 231: // $unicode_byte_type_exit49_i_i
        var $798=$9; //@line 520 "xmltok.c"
        $retval_i40_i_i=$798; //@line 520 "xmltok.c"
        var $retval6_i48_i_i=$retval_i40_i_i; //@line 520 "xmltok.c"
        $iftmp_608_i_i=$retval6_i48_i_i; //@line 600 "xmltok_impl.c"
        __label__ = 232; break; //@line 600 "xmltok_impl.c"
      case 232: // $bb42_i_i
        var $799=$iftmp_608_i_i; //@line 600 "xmltok_impl.c"
        $t37_i_i=$799; //@line 600 "xmltok_impl.c"
        var $800=$t37_i_i; //@line 601 "xmltok_impl.c"
        var $801=$open_i_i; //@line 601 "xmltok_impl.c"
        var $802=($800)==($801); //@line 601 "xmltok_impl.c"
        if ($802) { __label__ = 250; break; } else { __label__ = 233; break; } //@line 601 "xmltok_impl.c"
      case 233: // $bb43_i_i
        var $803=$t37_i_i; //@line 603 "xmltok_impl.c"
        if ($803 == 0) {
          __label__ = 243; break;
        }
        else if ($803 == 1) {
          __label__ = 243; break;
        }
        else if ($803 == 2) {
          __label__ = 248; break;
        }
        else if ($803 == 3) {
          __label__ = 244; break;
        }
        else if ($803 == 5) {
          __label__ = 234; break;
        }
        else if ($803 == 6) {
          __label__ = 237; break;
        }
        else if ($803 == 7) {
          __label__ = 240; break;
        }
        else if ($803 == 8) {
          __label__ = 243; break;
        }
        else {
        __label__ = 249; break;
        }
        
      case 234: // $bb44_i_i
        var $804=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $805=($804); //@line 604 "xmltok_impl.c"
        var $806=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $807=($806); //@line 604 "xmltok_impl.c"
        var $808=($805) - ($807); //@line 604 "xmltok_impl.c"
        var $809=($808) <= 1; //@line 604 "xmltok_impl.c"
        if ($809) { __label__ = 235; break; } else { __label__ = 236; break; } //@line 604 "xmltok_impl.c"
      case 235: // $bb45_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 236: // $bb46_i_i
        var $810=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $811=$810+2; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$811; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 237: // $bb47_i_i
        var $812=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $813=($812); //@line 604 "xmltok_impl.c"
        var $814=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $815=($814); //@line 604 "xmltok_impl.c"
        var $816=($813) - ($815); //@line 604 "xmltok_impl.c"
        var $817=($816) <= 2; //@line 604 "xmltok_impl.c"
        if ($817) { __label__ = 238; break; } else { __label__ = 239; break; } //@line 604 "xmltok_impl.c"
      case 238: // $bb48_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 239: // $bb49_i_i
        var $818=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $819=$818+3; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$819; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 240: // $bb50_i_i
        var $820=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $821=($820); //@line 604 "xmltok_impl.c"
        var $822=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $823=($822); //@line 604 "xmltok_impl.c"
        var $824=($821) - ($823); //@line 604 "xmltok_impl.c"
        var $825=($824) <= 3; //@line 604 "xmltok_impl.c"
        if ($825) { __label__ = 241; break; } else { __label__ = 242; break; } //@line 604 "xmltok_impl.c"
      case 241: // $bb51_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 242: // $bb52_i_i
        var $826=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $827=$826+4; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$827; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 243: // $bb53_i_i
        var $828=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $829=$nextTokPtr_addr_i_i; //@line 604 "xmltok_impl.c"
        HEAP[$829]=$828; //@line 604 "xmltok_impl.c"
        $14=0; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 244: // $bb54_i_i
        var $830=HEAP[$ptr_addr_i_i]; //@line 607 "xmltok_impl.c"
        var $831=$830+2; //@line 607 "xmltok_impl.c"
        var $832=$enc_addr_i_i; //@line 607 "xmltok_impl.c"
        var $833=$end_addr_i_i; //@line 607 "xmltok_impl.c"
        var $834=_little2_scanRef($832, $831, $833, $ptr_addr_i_i); //@line 607 "xmltok_impl.c"
        $tok_i_i=$834; //@line 607 "xmltok_impl.c"
        var $835=$tok_i_i; //@line 608 "xmltok_impl.c"
        var $836=($835) <= 0; //@line 608 "xmltok_impl.c"
        if ($836) { __label__ = 245; break; } else { __label__ = 221; break; } //@line 608 "xmltok_impl.c"
      case 245: // $bb55_i_i
        var $837=$tok_i_i; //@line 609 "xmltok_impl.c"
        var $838=($837)==0; //@line 609 "xmltok_impl.c"
        if ($838) { __label__ = 246; break; } else { __label__ = 247; break; } //@line 609 "xmltok_impl.c"
      case 246: // $bb56_i_i
        var $839=HEAP[$ptr_addr_i_i]; //@line 610 "xmltok_impl.c"
        var $840=$nextTokPtr_addr_i_i; //@line 610 "xmltok_impl.c"
        HEAP[$840]=$839; //@line 610 "xmltok_impl.c"
        __label__ = 247; break; //@line 610 "xmltok_impl.c"
      case 247: // $bb57_i_i
        var $841=$tok_i_i; //@line 611 "xmltok_impl.c"
        $14=$841; //@line 611 "xmltok_impl.c"
        __label__ = 298; break; //@line 611 "xmltok_impl.c"
      case 248: // $bb59_i_i
        var $842=HEAP[$ptr_addr_i_i]; //@line 616 "xmltok_impl.c"
        var $843=$nextTokPtr_addr_i_i; //@line 616 "xmltok_impl.c"
        HEAP[$843]=$842; //@line 616 "xmltok_impl.c"
        $14=0; //@line 617 "xmltok_impl.c"
        __label__ = 298; break; //@line 617 "xmltok_impl.c"
      case 249: // $bb60_i_i
        var $844=HEAP[$ptr_addr_i_i]; //@line 619 "xmltok_impl.c"
        var $845=$844+2; //@line 619 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$845; //@line 619 "xmltok_impl.c"
        __label__ = 221; break; //@line 619 "xmltok_impl.c"
      case 250: // $bb62_i_i
        var $846=HEAP[$ptr_addr_i_i]; //@line 623 "xmltok_impl.c"
        var $847=$846+2; //@line 623 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$847; //@line 623 "xmltok_impl.c"
        var $848=HEAP[$ptr_addr_i_i]; //@line 624 "xmltok_impl.c"
        var $849=$end_addr_i_i; //@line 624 "xmltok_impl.c"
        var $850=($848)==($849); //@line 624 "xmltok_impl.c"
        if ($850) { __label__ = 251; break; } else { __label__ = 252; break; } //@line 624 "xmltok_impl.c"
      case 251: // $bb63_i_i
        $14=-1; //@line 625 "xmltok_impl.c"
        __label__ = 298; break; //@line 625 "xmltok_impl.c"
      case 252: // $bb64_i_i
        var $851=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $852=$851+1; //@line 626 "xmltok_impl.c"
        var $853=HEAP[$852]; //@line 626 "xmltok_impl.c"
        var $854=($853)==0; //@line 626 "xmltok_impl.c"
        if ($854) { __label__ = 253; break; } else { __label__ = 254; break; } //@line 626 "xmltok_impl.c"
      case 253: // $bb65_i_i
        var $855=$enc_addr_i_i; //@line 626 "xmltok_impl.c"
        var $856=$855; //@line 626 "xmltok_impl.c"
        var $857=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $858=HEAP[$857]; //@line 626 "xmltok_impl.c"
        var $859=($858); //@line 626 "xmltok_impl.c"
        var $860=$856+72; //@line 626 "xmltok_impl.c"
        var $861=$860+$859; //@line 626 "xmltok_impl.c"
        var $862=HEAP[$861]; //@line 626 "xmltok_impl.c"
        var $863=($862); //@line 626 "xmltok_impl.c"
        $iftmp_636_i_i=$863; //@line 626 "xmltok_impl.c"
        __lastLabel__ = 253; __label__ = 261; break; //@line 626 "xmltok_impl.c"
      case 254: // $bb66_i_i
        var $864=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $865=$864; //@line 626 "xmltok_impl.c"
        var $866=HEAP[$865]; //@line 626 "xmltok_impl.c"
        var $867=($866); //@line 626 "xmltok_impl.c"
        var $868=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $869=$868+1; //@line 626 "xmltok_impl.c"
        var $870=HEAP[$869]; //@line 626 "xmltok_impl.c"
        var $871=($870); //@line 626 "xmltok_impl.c"
        var $872=((($871)) & 255); //@line 626 "xmltok_impl.c"
        var $873=((($867)) & 255); //@line 626 "xmltok_impl.c"
        $hi_addr_i14_i_i=$872;
        $lo_addr_i15_i_i=$873;
        var $874=$hi_addr_i14_i_i; //@line 518 "xmltok.c"
        var $875=($874); //@line 518 "xmltok.c"
        if ($875 == 216) {
          __label__ = 255; break;
        }
        else if ($875 == 217) {
          __label__ = 255; break;
        }
        else if ($875 == 218) {
          __label__ = 255; break;
        }
        else if ($875 == 219) {
          __label__ = 255; break;
        }
        else if ($875 == 220) {
          __label__ = 256; break;
        }
        else if ($875 == 221) {
          __label__ = 256; break;
        }
        else if ($875 == 222) {
          __label__ = 256; break;
        }
        else if ($875 == 223) {
          __label__ = 256; break;
        }
        else if ($875 == 255) {
          __label__ = 257; break;
        }
        else {
        __label__ = 259; break;
        }
        
      case 255: // $bb_i17_i_i
        $11=7; //@line 520 "xmltok.c"
        __label__ = 260; break; //@line 520 "xmltok.c"
      case 256: // $bb1_i18_i_i
        $11=8; //@line 522 "xmltok.c"
        __label__ = 260; break; //@line 522 "xmltok.c"
      case 257: // $bb2_i21_i_i
        var $876=$lo_addr_i15_i_i; //@line 524 "xmltok.c"
        var $877=($876); //@line 524 "xmltok.c"
        var $_off_i19_i_i=($877) + -254;
        var $switch_i20_i_i=($_off_i19_i_i) < 2;
        if ($switch_i20_i_i) { __label__ = 258; break; } else { __label__ = 259; break; }
      case 258: // $bb3_i22_i_i
        $11=0; //@line 527 "xmltok.c"
        __label__ = 260; break; //@line 527 "xmltok.c"
      case 259: // $bb4_i23_i_i
        $11=29; //@line 531 "xmltok.c"
        __label__ = 260; break; //@line 531 "xmltok.c"
      case 260: // $unicode_byte_type_exit25_i_i
        var $878=$11; //@line 520 "xmltok.c"
        $retval_i16_i_i=$878; //@line 520 "xmltok.c"
        var $retval6_i24_i_i=$retval_i16_i_i; //@line 520 "xmltok.c"
        $iftmp_636_i_i=$retval6_i24_i_i; //@line 626 "xmltok_impl.c"
        __lastLabel__ = 260; __label__ = 261; break; //@line 626 "xmltok_impl.c"
      case 261: // $bb67_i_i
        var $879=__lastLabel__ == 260 ? $retval6_i24_i_i : ($863);
        if ($879 == 9) {
          __label__ = 263; break;
        }
        else if ($879 == 10) {
          __label__ = 263; break;
        }
        else if ($879 == 11) {
          __label__ = 287; break;
        }
        else if ($879 == 17) {
          __label__ = 288; break;
        }
        else if ($879 == 21) {
          __label__ = 263; break;
        }
        else {
        __label__ = 262; break;
        }
        
      case 262: // $bb71_i_i
        var $880=HEAP[$ptr_addr_i_i]; //@line 636 "xmltok_impl.c"
        var $881=$nextTokPtr_addr_i_i; //@line 636 "xmltok_impl.c"
        HEAP[$881]=$880; //@line 636 "xmltok_impl.c"
        $14=0; //@line 637 "xmltok_impl.c"
        __label__ = 298; break; //@line 637 "xmltok_impl.c"
      case 263: // $bb72_i_i
        var $882=HEAP[$ptr_addr_i_i]; //@line 641 "xmltok_impl.c"
        var $883=$882+2; //@line 641 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$883; //@line 641 "xmltok_impl.c"
        var $884=HEAP[$ptr_addr_i_i]; //@line 642 "xmltok_impl.c"
        var $885=$end_addr_i_i; //@line 642 "xmltok_impl.c"
        var $886=($884)==($885); //@line 642 "xmltok_impl.c"
        if ($886) { __label__ = 264; break; } else { __label__ = 265; break; } //@line 642 "xmltok_impl.c"
      case 264: // $bb73_i_i
        $14=-1; //@line 643 "xmltok_impl.c"
        __label__ = 298; break; //@line 643 "xmltok_impl.c"
      case 265: // $bb74_i_i
        var $887=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $888=$887+1; //@line 644 "xmltok_impl.c"
        var $889=HEAP[$888]; //@line 644 "xmltok_impl.c"
        var $890=($889)==0; //@line 644 "xmltok_impl.c"
        if ($890) { __label__ = 266; break; } else { __label__ = 267; break; } //@line 644 "xmltok_impl.c"
      case 266: // $bb75_i_i
        var $891=$enc_addr_i_i; //@line 644 "xmltok_impl.c"
        var $892=$891; //@line 644 "xmltok_impl.c"
        var $893=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $894=HEAP[$893]; //@line 644 "xmltok_impl.c"
        var $895=($894); //@line 644 "xmltok_impl.c"
        var $896=$892+72; //@line 644 "xmltok_impl.c"
        var $897=$896+$895; //@line 644 "xmltok_impl.c"
        var $898=HEAP[$897]; //@line 644 "xmltok_impl.c"
        var $899=($898); //@line 644 "xmltok_impl.c"
        $iftmp_645_i_i=$899; //@line 644 "xmltok_impl.c"
        __lastLabel__ = 266; __label__ = 274; break; //@line 644 "xmltok_impl.c"
      case 267: // $bb76_i_i
        var $900=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $901=$900; //@line 644 "xmltok_impl.c"
        var $902=HEAP[$901]; //@line 644 "xmltok_impl.c"
        var $903=($902); //@line 644 "xmltok_impl.c"
        var $904=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $905=$904+1; //@line 644 "xmltok_impl.c"
        var $906=HEAP[$905]; //@line 644 "xmltok_impl.c"
        var $907=($906); //@line 644 "xmltok_impl.c"
        var $908=((($907)) & 255); //@line 644 "xmltok_impl.c"
        var $909=((($903)) & 255); //@line 644 "xmltok_impl.c"
        $hi_addr_i2_i_i=$908;
        $lo_addr_i3_i_i=$909;
        var $910=$hi_addr_i2_i_i; //@line 518 "xmltok.c"
        var $911=($910); //@line 518 "xmltok.c"
        if ($911 == 216) {
          __label__ = 268; break;
        }
        else if ($911 == 217) {
          __label__ = 268; break;
        }
        else if ($911 == 218) {
          __label__ = 268; break;
        }
        else if ($911 == 219) {
          __label__ = 268; break;
        }
        else if ($911 == 220) {
          __label__ = 269; break;
        }
        else if ($911 == 221) {
          __label__ = 269; break;
        }
        else if ($911 == 222) {
          __label__ = 269; break;
        }
        else if ($911 == 223) {
          __label__ = 269; break;
        }
        else if ($911 == 255) {
          __label__ = 270; break;
        }
        else {
        __label__ = 272; break;
        }
        
      case 268: // $bb_i5_i_i
        $12=7; //@line 520 "xmltok.c"
        __label__ = 273; break; //@line 520 "xmltok.c"
      case 269: // $bb1_i6_i_i
        $12=8; //@line 522 "xmltok.c"
        __label__ = 273; break; //@line 522 "xmltok.c"
      case 270: // $bb2_i9_i_i
        var $912=$lo_addr_i3_i_i; //@line 524 "xmltok.c"
        var $913=($912); //@line 524 "xmltok.c"
        var $_off_i7_i_i=($913) + -254;
        var $switch_i8_i_i=($_off_i7_i_i) < 2;
        if ($switch_i8_i_i) { __label__ = 271; break; } else { __label__ = 272; break; }
      case 271: // $bb3_i10_i_i
        $12=0; //@line 527 "xmltok.c"
        __label__ = 273; break; //@line 527 "xmltok.c"
      case 272: // $bb4_i11_i_i
        $12=29; //@line 531 "xmltok.c"
        __label__ = 273; break; //@line 531 "xmltok.c"
      case 273: // $unicode_byte_type_exit13_i_i
        var $914=$12; //@line 520 "xmltok.c"
        $retval_i4_i_i=$914; //@line 520 "xmltok.c"
        var $retval6_i12_i_i=$retval_i4_i_i; //@line 520 "xmltok.c"
        $iftmp_645_i_i=$retval6_i12_i_i; //@line 644 "xmltok_impl.c"
        __lastLabel__ = 273; __label__ = 274; break; //@line 644 "xmltok_impl.c"
      case 274: // $bb77_i_i
        var $915=__lastLabel__ == 273 ? $retval6_i12_i_i : ($899);
        if ($915 == 5) {
          __label__ = 278; break;
        }
        else if ($915 == 6) {
          __label__ = 281; break;
        }
        else if ($915 == 7) {
          __label__ = 284; break;
        }
        else if ($915 == 9) {
          __label__ = 263; break;
        }
        else if ($915 == 10) {
          __label__ = 263; break;
        }
        else if ($915 == 11) {
          __label__ = 287; break;
        }
        else if ($915 == 17) {
          __label__ = 288; break;
        }
        else if ($915 == 21) {
          __label__ = 263; break;
        }
        else if ($915 == 22) {
          __label__ = 277; break;
        }
        else if ($915 == 24) {
          __label__ = 277; break;
        }
        else if ($915 == 29) {
          __label__ = 275; break;
        }
        else {
        __label__ = 294; break;
        }
        
      case 275: // $bb78_i_i
        var $916=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $917=$916+1; //@line 645 "xmltok_impl.c"
        var $918=HEAP[$917]; //@line 645 "xmltok_impl.c"
        var $919=($918); //@line 645 "xmltok_impl.c"
        var $920=_nmstrtPages+$919; //@line 645 "xmltok_impl.c"
        var $921=HEAP[$920]; //@line 645 "xmltok_impl.c"
        var $922=($921); //@line 645 "xmltok_impl.c"
        var $923=($922) * 8;
        var $924=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $925=$924; //@line 645 "xmltok_impl.c"
        var $926=HEAP[$925]; //@line 645 "xmltok_impl.c"
        var $927=($926) >>> 5; //@line 645 "xmltok_impl.c"
        var $928=($927); //@line 645 "xmltok_impl.c"
        var $929=($928) + ($923); //@line 645 "xmltok_impl.c"
        var $930=_namingBitmap+$929*4; //@line 645 "xmltok_impl.c"
        var $931=HEAP[$930]; //@line 645 "xmltok_impl.c"
        var $932=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $933=$932; //@line 645 "xmltok_impl.c"
        var $934=HEAP[$933]; //@line 645 "xmltok_impl.c"
        var $935=($934); //@line 645 "xmltok_impl.c"
        var $936=($935) & 31; //@line 645 "xmltok_impl.c"
        var $937=1 << ($936); //@line 645 "xmltok_impl.c"
        var $938=($937) & ($931); //@line 645 "xmltok_impl.c"
        var $939=($938)==0; //@line 645 "xmltok_impl.c"
        if ($939) { __label__ = 276; break; } else { __label__ = 277; break; } //@line 645 "xmltok_impl.c"
      case 276: // $bb79_i_i
        var $940=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $941=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$941]=$940; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 277: // $bb80_i_i
        var $942=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $943=$942+2; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$943; //@line 645 "xmltok_impl.c"
        __label__ = 296; break; //@line 645 "xmltok_impl.c"
      case 278: // $bb81_i_i
        var $944=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $945=($944); //@line 645 "xmltok_impl.c"
        var $946=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $947=($946); //@line 645 "xmltok_impl.c"
        var $948=($945) - ($947); //@line 645 "xmltok_impl.c"
        var $949=($948) <= 1; //@line 645 "xmltok_impl.c"
        if ($949) { __label__ = 279; break; } else { __label__ = 280; break; } //@line 645 "xmltok_impl.c"
      case 279: // $bb82_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 280: // $bb83_i_i
        var $950=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $951=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$951]=$950; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 281: // $bb84_i_i
        var $952=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $953=($952); //@line 645 "xmltok_impl.c"
        var $954=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $955=($954); //@line 645 "xmltok_impl.c"
        var $956=($953) - ($955); //@line 645 "xmltok_impl.c"
        var $957=($956) <= 2; //@line 645 "xmltok_impl.c"
        if ($957) { __label__ = 282; break; } else { __label__ = 283; break; } //@line 645 "xmltok_impl.c"
      case 282: // $bb85_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 283: // $bb86_i_i
        var $958=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $959=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$959]=$958; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 284: // $bb87_i_i
        var $960=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $961=($960); //@line 645 "xmltok_impl.c"
        var $962=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $963=($962); //@line 645 "xmltok_impl.c"
        var $964=($961) - ($963); //@line 645 "xmltok_impl.c"
        var $965=($964) <= 3; //@line 645 "xmltok_impl.c"
        if ($965) { __label__ = 285; break; } else { __label__ = 286; break; } //@line 645 "xmltok_impl.c"
      case 285: // $bb88_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 286: // $bb89_i_i
        var $966=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $967=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$967]=$966; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 287: // $gt_i_i
        var $968=HEAP[$ptr_addr_i_i]; //@line 650 "xmltok_impl.c"
        var $969=$968+2; //@line 650 "xmltok_impl.c"
        var $970=$nextTokPtr_addr_i_i; //@line 650 "xmltok_impl.c"
        HEAP[$970]=$969; //@line 650 "xmltok_impl.c"
        $14=1; //@line 651 "xmltok_impl.c"
        __label__ = 298; break; //@line 651 "xmltok_impl.c"
      case 288: // $sol_i_i
        var $971=HEAP[$ptr_addr_i_i]; //@line 654 "xmltok_impl.c"
        var $972=$971+2; //@line 654 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$972; //@line 654 "xmltok_impl.c"
        var $973=HEAP[$ptr_addr_i_i]; //@line 655 "xmltok_impl.c"
        var $974=$end_addr_i_i; //@line 655 "xmltok_impl.c"
        var $975=($973)==($974); //@line 655 "xmltok_impl.c"
        if ($975) { __label__ = 289; break; } else { __label__ = 290; break; } //@line 655 "xmltok_impl.c"
      case 289: // $bb91_i_i
        $14=-1; //@line 656 "xmltok_impl.c"
        __label__ = 298; break; //@line 656 "xmltok_impl.c"
      case 290: // $bb92_i_i
        var $976=HEAP[$ptr_addr_i_i]; //@line 657 "xmltok_impl.c"
        var $977=$976+1; //@line 657 "xmltok_impl.c"
        var $978=HEAP[$977]; //@line 657 "xmltok_impl.c"
        var $979=($978)!=0; //@line 657 "xmltok_impl.c"
        if ($979) { __label__ = 292; break; } else { __label__ = 291; break; } //@line 657 "xmltok_impl.c"
      case 291: // $bb93_i_i
        var $980=HEAP[$ptr_addr_i_i]; //@line 657 "xmltok_impl.c"
        var $981=$980; //@line 657 "xmltok_impl.c"
        var $982=HEAP[$981]; //@line 657 "xmltok_impl.c"
        var $983=($982)!=62; //@line 657 "xmltok_impl.c"
        if ($983) { __label__ = 292; break; } else { __label__ = 293; break; } //@line 657 "xmltok_impl.c"
      case 292: // $bb94_i_i
        var $984=HEAP[$ptr_addr_i_i]; //@line 658 "xmltok_impl.c"
        var $985=$nextTokPtr_addr_i_i; //@line 658 "xmltok_impl.c"
        HEAP[$985]=$984; //@line 658 "xmltok_impl.c"
        $14=0; //@line 659 "xmltok_impl.c"
        __label__ = 298; break; //@line 659 "xmltok_impl.c"
      case 293: // $bb95_i_i
        var $986=HEAP[$ptr_addr_i_i]; //@line 661 "xmltok_impl.c"
        var $987=$986+2; //@line 661 "xmltok_impl.c"
        var $988=$nextTokPtr_addr_i_i; //@line 661 "xmltok_impl.c"
        HEAP[$988]=$987; //@line 661 "xmltok_impl.c"
        $14=3; //@line 662 "xmltok_impl.c"
        __label__ = 298; break; //@line 662 "xmltok_impl.c"
      case 294: // $bb96_i_i
        var $989=HEAP[$ptr_addr_i_i]; //@line 664 "xmltok_impl.c"
        var $990=$nextTokPtr_addr_i_i; //@line 664 "xmltok_impl.c"
        HEAP[$990]=$989; //@line 664 "xmltok_impl.c"
        $14=0; //@line 665 "xmltok_impl.c"
        __label__ = 298; break; //@line 665 "xmltok_impl.c"
      case 295: // $bb97_i_i
        var $991=HEAP[$ptr_addr_i_i]; //@line 672 "xmltok_impl.c"
        var $992=$nextTokPtr_addr_i_i; //@line 672 "xmltok_impl.c"
        HEAP[$992]=$991; //@line 672 "xmltok_impl.c"
        $14=0; //@line 673 "xmltok_impl.c"
        __label__ = 298; break; //@line 673 "xmltok_impl.c"
      case 296: // $bb98_i_i
        var $993=HEAP[$ptr_addr_i_i]; //@line 529 "xmltok_impl.c"
        var $994=$end_addr_i_i; //@line 529 "xmltok_impl.c"
        var $995=($993)!=($994); //@line 529 "xmltok_impl.c"
        if ($995) { __label__ = 170; break; } else { __label__ = 297; break; } //@line 529 "xmltok_impl.c"
      case 297: // $bb99_i_i
        $14=-1; //@line 676 "xmltok_impl.c"
        __label__ = 298; break; //@line 676 "xmltok_impl.c"
      case 298: // $little2_scanAtts_exit_i
        var $996=$14; //@line 531 "xmltok_impl.c"
        $retval_i1_i=$996; //@line 531 "xmltok_impl.c"
        var $retval101_i_i=$retval_i1_i; //@line 531 "xmltok_impl.c"
        $16=$retval101_i_i; //@line 754 "xmltok_impl.c"
        __label__ = 322; break; //@line 754 "xmltok_impl.c"
      case 299: // $bb53_i
        var $997=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $998=($997); //@line 742 "xmltok_impl.c"
        var $999=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1000=($999); //@line 742 "xmltok_impl.c"
        var $1001=($998) - ($1000); //@line 742 "xmltok_impl.c"
        var $1002=($1001) <= 1; //@line 742 "xmltok_impl.c"
        if ($1002) { __label__ = 300; break; } else { __label__ = 301; break; } //@line 742 "xmltok_impl.c"
      case 300: // $bb54_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 301: // $bb55_i
        var $1003=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1004=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1003]=$1004; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 302: // $bb56_i
        var $1005=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $1006=($1005); //@line 742 "xmltok_impl.c"
        var $1007=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1008=($1007); //@line 742 "xmltok_impl.c"
        var $1009=($1006) - ($1008); //@line 742 "xmltok_impl.c"
        var $1010=($1009) <= 2; //@line 742 "xmltok_impl.c"
        if ($1010) { __label__ = 303; break; } else { __label__ = 304; break; } //@line 742 "xmltok_impl.c"
      case 303: // $bb57_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 304: // $bb58_i
        var $1011=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1012=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1011]=$1012; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 305: // $bb59_i
        var $1013=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $1014=($1013); //@line 742 "xmltok_impl.c"
        var $1015=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1016=($1015); //@line 742 "xmltok_impl.c"
        var $1017=($1014) - ($1016); //@line 742 "xmltok_impl.c"
        var $1018=($1017) <= 3; //@line 742 "xmltok_impl.c"
        if ($1018) { __label__ = 306; break; } else { __label__ = 307; break; } //@line 742 "xmltok_impl.c"
      case 306: // $bb60_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 307: // $bb61_i
        var $1019=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1020=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1019]=$1020; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 308: // $bb64_i
        var $1021=$ptr_addr_i; //@line 748 "xmltok_impl.c"
        var $1022=$1021+2; //@line 748 "xmltok_impl.c"
        $ptr_addr_i=$1022; //@line 748 "xmltok_impl.c"
        __label__ = 310; break; //@line 748 "xmltok_impl.c"
      case 309: // $bb65_i
        var $1023=$nextTokPtr_addr_i; //@line 751 "xmltok_impl.c"
        var $1024=$ptr_addr_i; //@line 751 "xmltok_impl.c"
        HEAP[$1023]=$1024; //@line 751 "xmltok_impl.c"
        $16=0; //@line 752 "xmltok_impl.c"
        __label__ = 322; break; //@line 752 "xmltok_impl.c"
      case 310: // $bb66_i
        var $1025=$ptr_addr_i; //@line 740 "xmltok_impl.c"
        var $1026=$end_addr_i; //@line 740 "xmltok_impl.c"
        var $1027=($1025)!=($1026); //@line 740 "xmltok_impl.c"
        if ($1027) { __label__ = 157; break; } else { __label__ = 311; break; } //@line 740 "xmltok_impl.c"
      case 311: // $bb67_i
        $16=-1; //@line 756 "xmltok_impl.c"
        __label__ = 322; break; //@line 756 "xmltok_impl.c"
      case 312: // $gt_i
        var $1028=$ptr_addr_i; //@line 760 "xmltok_impl.c"
        var $1029=$1028+2; //@line 760 "xmltok_impl.c"
        var $1030=$nextTokPtr_addr_i; //@line 760 "xmltok_impl.c"
        HEAP[$1030]=$1029; //@line 760 "xmltok_impl.c"
        $16=2; //@line 761 "xmltok_impl.c"
        __label__ = 322; break; //@line 761 "xmltok_impl.c"
      case 313: // $sol_i
        var $1031=$ptr_addr_i; //@line 764 "xmltok_impl.c"
        var $1032=$1031+2; //@line 764 "xmltok_impl.c"
        $ptr_addr_i=$1032; //@line 764 "xmltok_impl.c"
        var $1033=$ptr_addr_i; //@line 765 "xmltok_impl.c"
        var $1034=$end_addr_i; //@line 765 "xmltok_impl.c"
        var $1035=($1033)==($1034); //@line 765 "xmltok_impl.c"
        if ($1035) { __label__ = 314; break; } else { __label__ = 315; break; } //@line 765 "xmltok_impl.c"
      case 314: // $bb68_i
        $16=-1; //@line 766 "xmltok_impl.c"
        __label__ = 322; break; //@line 766 "xmltok_impl.c"
      case 315: // $bb69_i
        var $1036=$ptr_addr_i; //@line 767 "xmltok_impl.c"
        var $1037=$1036+1; //@line 767 "xmltok_impl.c"
        var $1038=HEAP[$1037]; //@line 767 "xmltok_impl.c"
        var $1039=($1038)!=0; //@line 767 "xmltok_impl.c"
        if ($1039) { __label__ = 317; break; } else { __label__ = 316; break; } //@line 767 "xmltok_impl.c"
      case 316: // $bb70_i
        var $1040=$ptr_addr_i; //@line 767 "xmltok_impl.c"
        var $1041=$1040; //@line 767 "xmltok_impl.c"
        var $1042=HEAP[$1041]; //@line 767 "xmltok_impl.c"
        var $1043=($1042)!=62; //@line 767 "xmltok_impl.c"
        if ($1043) { __label__ = 317; break; } else { __label__ = 318; break; } //@line 767 "xmltok_impl.c"
      case 317: // $bb71_i
        var $1044=$nextTokPtr_addr_i; //@line 768 "xmltok_impl.c"
        var $1045=$ptr_addr_i; //@line 768 "xmltok_impl.c"
        HEAP[$1044]=$1045; //@line 768 "xmltok_impl.c"
        $16=0; //@line 769 "xmltok_impl.c"
        __label__ = 322; break; //@line 769 "xmltok_impl.c"
      case 318: // $bb72_i
        var $1046=$ptr_addr_i; //@line 771 "xmltok_impl.c"
        var $1047=$1046+2; //@line 771 "xmltok_impl.c"
        var $1048=$nextTokPtr_addr_i; //@line 771 "xmltok_impl.c"
        HEAP[$1048]=$1047; //@line 771 "xmltok_impl.c"
        $16=4; //@line 772 "xmltok_impl.c"
        __label__ = 322; break; //@line 772 "xmltok_impl.c"
      case 319: // $bb73_i
        var $1049=$nextTokPtr_addr_i; //@line 774 "xmltok_impl.c"
        var $1050=$ptr_addr_i; //@line 774 "xmltok_impl.c"
        HEAP[$1049]=$1050; //@line 774 "xmltok_impl.c"
        $16=0; //@line 775 "xmltok_impl.c"
        __label__ = 322; break; //@line 775 "xmltok_impl.c"
      case 320: // $bb74_i
        var $1051=$ptr_addr_i; //@line 716 "xmltok_impl.c"
        var $1052=$end_addr_i; //@line 716 "xmltok_impl.c"
        var $1053=($1051)!=($1052); //@line 716 "xmltok_impl.c"
        if ($1053) { __label__ = 134; break; } else { __label__ = 321; break; } //@line 716 "xmltok_impl.c"
      case 321: // $bb75_i
        $16=-1; //@line 778 "xmltok_impl.c"
        __label__ = 322; break; //@line 778 "xmltok_impl.c"
      case 322: // $little2_scanLt_exit
        var $1054=$16; //@line 689 "xmltok_impl.c"
        $retval_i25=$1054; //@line 689 "xmltok_impl.c"
        var $retval77_i=$retval_i25; //@line 689 "xmltok_impl.c"
        $20=$retval77_i; //@line 798 "xmltok_impl.c"
        __label__ = 392; break; //@line 798 "xmltok_impl.c"
      case 323: // $bb10
        var $1055=$ptr_addr; //@line 800 "xmltok_impl.c"
        var $1056=$1055+2; //@line 800 "xmltok_impl.c"
        var $1057=$enc_addr; //@line 800 "xmltok_impl.c"
        var $1058=$end_addr; //@line 800 "xmltok_impl.c"
        var $1059=$nextTokPtr_addr; //@line 800 "xmltok_impl.c"
        var $1060=_little2_scanRef($1057, $1056, $1058, $1059); //@line 800 "xmltok_impl.c"
        $20=$1060; //@line 800 "xmltok_impl.c"
        __label__ = 392; break; //@line 800 "xmltok_impl.c"
      case 324: // $bb11
        var $1061=$ptr_addr; //@line 802 "xmltok_impl.c"
        var $1062=$1061+2; //@line 802 "xmltok_impl.c"
        $ptr_addr=$1062; //@line 802 "xmltok_impl.c"
        var $1063=$ptr_addr; //@line 803 "xmltok_impl.c"
        var $1064=$end_addr; //@line 803 "xmltok_impl.c"
        var $1065=($1063)==($1064); //@line 803 "xmltok_impl.c"
        if ($1065) { __label__ = 325; break; } else { __label__ = 326; break; } //@line 803 "xmltok_impl.c"
      case 325: // $bb12
        $20=-3; //@line 804 "xmltok_impl.c"
        __label__ = 392; break; //@line 804 "xmltok_impl.c"
      case 326: // $bb13
        var $1066=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1067=$1066+1; //@line 805 "xmltok_impl.c"
        var $1068=HEAP[$1067]; //@line 805 "xmltok_impl.c"
        var $1069=($1068)==0; //@line 805 "xmltok_impl.c"
        if ($1069) { __label__ = 327; break; } else { __label__ = 328; break; } //@line 805 "xmltok_impl.c"
      case 327: // $bb14
        var $1070=$enc_addr; //@line 805 "xmltok_impl.c"
        var $1071=$1070; //@line 805 "xmltok_impl.c"
        var $1072=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1073=HEAP[$1072]; //@line 805 "xmltok_impl.c"
        var $1074=($1073); //@line 805 "xmltok_impl.c"
        var $1075=$1071+72; //@line 805 "xmltok_impl.c"
        var $1076=$1075+$1074; //@line 805 "xmltok_impl.c"
        var $1077=HEAP[$1076]; //@line 805 "xmltok_impl.c"
        var $1078=($1077)==10; //@line 805 "xmltok_impl.c"
        var $1079=($1078); //@line 805 "xmltok_impl.c"
        $iftmp_712=$1079; //@line 805 "xmltok_impl.c"
        __lastLabel__ = 327; __label__ = 335; break; //@line 805 "xmltok_impl.c"
      case 328: // $bb15
        var $1080=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1081=$1080; //@line 805 "xmltok_impl.c"
        var $1082=HEAP[$1081]; //@line 805 "xmltok_impl.c"
        var $1083=($1082); //@line 805 "xmltok_impl.c"
        var $1084=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1085=$1084+1; //@line 805 "xmltok_impl.c"
        var $1086=HEAP[$1085]; //@line 805 "xmltok_impl.c"
        var $1087=($1086); //@line 805 "xmltok_impl.c"
        var $1088=((($1087)) & 255); //@line 805 "xmltok_impl.c"
        var $1089=((($1083)) & 255); //@line 805 "xmltok_impl.c"
        $hi_addr_i13=$1088;
        $lo_addr_i14=$1089;
        var $1090=$hi_addr_i13; //@line 518 "xmltok.c"
        var $1091=($1090); //@line 518 "xmltok.c"
        if ($1091 == 216) {
          __label__ = 329; break;
        }
        else if ($1091 == 217) {
          __label__ = 329; break;
        }
        else if ($1091 == 218) {
          __label__ = 329; break;
        }
        else if ($1091 == 219) {
          __label__ = 329; break;
        }
        else if ($1091 == 220) {
          __label__ = 330; break;
        }
        else if ($1091 == 221) {
          __label__ = 330; break;
        }
        else if ($1091 == 222) {
          __label__ = 330; break;
        }
        else if ($1091 == 223) {
          __label__ = 330; break;
        }
        else if ($1091 == 255) {
          __label__ = 331; break;
        }
        else {
        __label__ = 333; break;
        }
        
      case 329: // $bb_i16
        $17=7; //@line 520 "xmltok.c"
        __label__ = 334; break; //@line 520 "xmltok.c"
      case 330: // $bb1_i17
        $17=8; //@line 522 "xmltok.c"
        __label__ = 334; break; //@line 522 "xmltok.c"
      case 331: // $bb2_i20
        var $1092=$lo_addr_i14; //@line 524 "xmltok.c"
        var $1093=($1092); //@line 524 "xmltok.c"
        var $_off_i18=($1093) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 332; break; } else { __label__ = 333; break; }
      case 332: // $bb3_i21
        $17=0; //@line 527 "xmltok.c"
        __label__ = 334; break; //@line 527 "xmltok.c"
      case 333: // $bb4_i22
        $17=29; //@line 531 "xmltok.c"
        __label__ = 334; break; //@line 531 "xmltok.c"
      case 334: // $unicode_byte_type_exit24
        var $1094=$17; //@line 520 "xmltok.c"
        $retval_i15=$1094; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        var $1095=($retval6_i23)==10; //@line 805 "xmltok_impl.c"
        var $1096=($1095); //@line 805 "xmltok_impl.c"
        $iftmp_712=$1096; //@line 805 "xmltok_impl.c"
        __lastLabel__ = 334; __label__ = 335; break; //@line 805 "xmltok_impl.c"
      case 335: // $bb16
        var $1097=__lastLabel__ == 334 ? $1096 : ($1079);
        var $toBool17=($1097)!=0; //@line 805 "xmltok_impl.c"
        if ($toBool17) { __label__ = 336; break; } else { __label__ = 337; break; } //@line 805 "xmltok_impl.c"
      case 336: // $bb18
        var $1098=$ptr_addr; //@line 806 "xmltok_impl.c"
        var $1099=$1098+2; //@line 806 "xmltok_impl.c"
        $ptr_addr=$1099; //@line 806 "xmltok_impl.c"
        __label__ = 337; break; //@line 806 "xmltok_impl.c"
      case 337: // $bb19
        var $1100=$nextTokPtr_addr; //@line 807 "xmltok_impl.c"
        var $1101=$ptr_addr; //@line 807 "xmltok_impl.c"
        HEAP[$1100]=$1101; //@line 807 "xmltok_impl.c"
        $20=7; //@line 808 "xmltok_impl.c"
        __label__ = 392; break; //@line 808 "xmltok_impl.c"
      case 338: // $bb20
        var $1102=$ptr_addr; //@line 810 "xmltok_impl.c"
        var $1103=$1102+2; //@line 810 "xmltok_impl.c"
        var $1104=$nextTokPtr_addr; //@line 810 "xmltok_impl.c"
        HEAP[$1104]=$1103; //@line 810 "xmltok_impl.c"
        $20=7; //@line 811 "xmltok_impl.c"
        __label__ = 392; break; //@line 811 "xmltok_impl.c"
      case 339: // $bb21
        var $1105=$ptr_addr; //@line 813 "xmltok_impl.c"
        var $1106=$1105+2; //@line 813 "xmltok_impl.c"
        $ptr_addr=$1106; //@line 813 "xmltok_impl.c"
        var $1107=$ptr_addr; //@line 814 "xmltok_impl.c"
        var $1108=$end_addr; //@line 814 "xmltok_impl.c"
        var $1109=($1107)==($1108); //@line 814 "xmltok_impl.c"
        if ($1109) { __label__ = 340; break; } else { __label__ = 341; break; } //@line 814 "xmltok_impl.c"
      case 340: // $bb22
        $20=-5; //@line 815 "xmltok_impl.c"
        __label__ = 392; break; //@line 815 "xmltok_impl.c"
      case 341: // $bb23
        var $1110=$ptr_addr; //@line 816 "xmltok_impl.c"
        var $1111=$1110+1; //@line 816 "xmltok_impl.c"
        var $1112=HEAP[$1111]; //@line 816 "xmltok_impl.c"
        var $1113=($1112)!=0; //@line 816 "xmltok_impl.c"
        if ($1113) { __label__ = 390; break; } else { __label__ = 342; break; } //@line 816 "xmltok_impl.c"
      case 342: // $bb24
        var $1114=$ptr_addr; //@line 816 "xmltok_impl.c"
        var $1115=$1114; //@line 816 "xmltok_impl.c"
        var $1116=HEAP[$1115]; //@line 816 "xmltok_impl.c"
        var $1117=($1116)!=93; //@line 816 "xmltok_impl.c"
        if ($1117) { __label__ = 390; break; } else { __label__ = 343; break; } //@line 816 "xmltok_impl.c"
      case 343: // $bb25
        var $1118=$ptr_addr; //@line 818 "xmltok_impl.c"
        var $1119=$1118+2; //@line 818 "xmltok_impl.c"
        $ptr_addr=$1119; //@line 818 "xmltok_impl.c"
        var $1120=$ptr_addr; //@line 819 "xmltok_impl.c"
        var $1121=$end_addr; //@line 819 "xmltok_impl.c"
        var $1122=($1120)==($1121); //@line 819 "xmltok_impl.c"
        if ($1122) { __label__ = 344; break; } else { __label__ = 345; break; } //@line 819 "xmltok_impl.c"
      case 344: // $bb26
        $20=-5; //@line 820 "xmltok_impl.c"
        __label__ = 392; break; //@line 820 "xmltok_impl.c"
      case 345: // $bb27
        var $1123=$ptr_addr; //@line 821 "xmltok_impl.c"
        var $1124=$1123+1; //@line 821 "xmltok_impl.c"
        var $1125=HEAP[$1124]; //@line 821 "xmltok_impl.c"
        var $1126=($1125)!=0; //@line 821 "xmltok_impl.c"
        if ($1126) { __label__ = 347; break; } else { __label__ = 346; break; } //@line 821 "xmltok_impl.c"
      case 346: // $bb28
        var $1127=$ptr_addr; //@line 821 "xmltok_impl.c"
        var $1128=$1127; //@line 821 "xmltok_impl.c"
        var $1129=HEAP[$1128]; //@line 821 "xmltok_impl.c"
        var $1130=($1129)!=62; //@line 821 "xmltok_impl.c"
        if ($1130) { __label__ = 347; break; } else { __label__ = 348; break; } //@line 821 "xmltok_impl.c"
      case 347: // $bb29
        var $1131=$ptr_addr; //@line 822 "xmltok_impl.c"
        var $1132=$1131+-2; //@line 822 "xmltok_impl.c"
        $ptr_addr=$1132; //@line 822 "xmltok_impl.c"
        __label__ = 390; break; //@line 822 "xmltok_impl.c"
      case 348: // $bb30
        var $1133=$nextTokPtr_addr; //@line 825 "xmltok_impl.c"
        var $1134=$ptr_addr; //@line 825 "xmltok_impl.c"
        HEAP[$1133]=$1134; //@line 825 "xmltok_impl.c"
        $20=0; //@line 826 "xmltok_impl.c"
        __label__ = 392; break; //@line 826 "xmltok_impl.c"
      case 349: // $bb31
        var $1135=$end_addr; //@line 827 "xmltok_impl.c"
        var $1136=($1135); //@line 827 "xmltok_impl.c"
        var $1137=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1138=($1137); //@line 827 "xmltok_impl.c"
        var $1139=($1136) - ($1138); //@line 827 "xmltok_impl.c"
        var $1140=($1139) <= 1; //@line 827 "xmltok_impl.c"
        if ($1140) { __label__ = 350; break; } else { __label__ = 351; break; } //@line 827 "xmltok_impl.c"
      case 350: // $bb32
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 351: // $bb33
        var $1141=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1142=$1141+2; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1142; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 352: // $bb34
        var $1143=$end_addr; //@line 827 "xmltok_impl.c"
        var $1144=($1143); //@line 827 "xmltok_impl.c"
        var $1145=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1146=($1145); //@line 827 "xmltok_impl.c"
        var $1147=($1144) - ($1146); //@line 827 "xmltok_impl.c"
        var $1148=($1147) <= 2; //@line 827 "xmltok_impl.c"
        if ($1148) { __label__ = 353; break; } else { __label__ = 354; break; } //@line 827 "xmltok_impl.c"
      case 353: // $bb35
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 354: // $bb36
        var $1149=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1150=$1149+3; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1150; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 355: // $bb37
        var $1151=$end_addr; //@line 827 "xmltok_impl.c"
        var $1152=($1151); //@line 827 "xmltok_impl.c"
        var $1153=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1154=($1153); //@line 827 "xmltok_impl.c"
        var $1155=($1152) - ($1154); //@line 827 "xmltok_impl.c"
        var $1156=($1155) <= 3; //@line 827 "xmltok_impl.c"
        if ($1156) { __label__ = 356; break; } else { __label__ = 357; break; } //@line 827 "xmltok_impl.c"
      case 356: // $bb38
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 357: // $bb39
        var $1157=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1158=$1157+4; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1158; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 358: // $bb40
        var $1159=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $1160=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$1159]=$1160; //@line 827 "xmltok_impl.c"
        $20=0; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 359: // $bb41
        var $1161=$ptr_addr; //@line 829 "xmltok_impl.c"
        var $1162=$1161+2; //@line 829 "xmltok_impl.c"
        $ptr_addr=$1162; //@line 829 "xmltok_impl.c"
        __label__ = 390; break; //@line 829 "xmltok_impl.c"
      case 360: // $bb43
        var $1163=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1164=$1163+1; //@line 833 "xmltok_impl.c"
        var $1165=HEAP[$1164]; //@line 833 "xmltok_impl.c"
        var $1166=($1165)==0; //@line 833 "xmltok_impl.c"
        if ($1166) { __label__ = 361; break; } else { __label__ = 362; break; } //@line 833 "xmltok_impl.c"
      case 361: // $bb44
        var $1167=$enc_addr; //@line 833 "xmltok_impl.c"
        var $1168=$1167; //@line 833 "xmltok_impl.c"
        var $1169=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1170=HEAP[$1169]; //@line 833 "xmltok_impl.c"
        var $1171=($1170); //@line 833 "xmltok_impl.c"
        var $1172=$1168+72; //@line 833 "xmltok_impl.c"
        var $1173=$1172+$1171; //@line 833 "xmltok_impl.c"
        var $1174=HEAP[$1173]; //@line 833 "xmltok_impl.c"
        var $1175=($1174); //@line 833 "xmltok_impl.c"
        $iftmp_720=$1175; //@line 833 "xmltok_impl.c"
        __lastLabel__ = 361; __label__ = 369; break; //@line 833 "xmltok_impl.c"
      case 362: // $bb45
        var $1176=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1177=$1176; //@line 833 "xmltok_impl.c"
        var $1178=HEAP[$1177]; //@line 833 "xmltok_impl.c"
        var $1179=($1178); //@line 833 "xmltok_impl.c"
        var $1180=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1181=$1180+1; //@line 833 "xmltok_impl.c"
        var $1182=HEAP[$1181]; //@line 833 "xmltok_impl.c"
        var $1183=($1182); //@line 833 "xmltok_impl.c"
        var $1184=((($1183)) & 255); //@line 833 "xmltok_impl.c"
        var $1185=((($1179)) & 255); //@line 833 "xmltok_impl.c"
        $hi_addr_i1=$1184;
        $lo_addr_i2=$1185;
        var $1186=$hi_addr_i1; //@line 518 "xmltok.c"
        var $1187=($1186); //@line 518 "xmltok.c"
        if ($1187 == 216) {
          __label__ = 363; break;
        }
        else if ($1187 == 217) {
          __label__ = 363; break;
        }
        else if ($1187 == 218) {
          __label__ = 363; break;
        }
        else if ($1187 == 219) {
          __label__ = 363; break;
        }
        else if ($1187 == 220) {
          __label__ = 364; break;
        }
        else if ($1187 == 221) {
          __label__ = 364; break;
        }
        else if ($1187 == 222) {
          __label__ = 364; break;
        }
        else if ($1187 == 223) {
          __label__ = 364; break;
        }
        else if ($1187 == 255) {
          __label__ = 365; break;
        }
        else {
        __label__ = 367; break;
        }
        
      case 363: // $bb_i4
        $18=7; //@line 520 "xmltok.c"
        __label__ = 368; break; //@line 520 "xmltok.c"
      case 364: // $bb1_i5
        $18=8; //@line 522 "xmltok.c"
        __label__ = 368; break; //@line 522 "xmltok.c"
      case 365: // $bb2_i8
        var $1188=$lo_addr_i2; //@line 524 "xmltok.c"
        var $1189=($1188); //@line 524 "xmltok.c"
        var $_off_i6=($1189) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 366; break; } else { __label__ = 367; break; }
      case 366: // $bb3_i9
        $18=0; //@line 527 "xmltok.c"
        __label__ = 368; break; //@line 527 "xmltok.c"
      case 367: // $bb4_i10
        $18=29; //@line 531 "xmltok.c"
        __label__ = 368; break; //@line 531 "xmltok.c"
      case 368: // $unicode_byte_type_exit12
        var $1190=$18; //@line 520 "xmltok.c"
        $retval_i3=$1190; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_720=$retval6_i11; //@line 833 "xmltok_impl.c"
        __lastLabel__ = 368; __label__ = 369; break; //@line 833 "xmltok_impl.c"
      case 369: // $bb46
        var $1191=__lastLabel__ == 368 ? $retval6_i11 : ($1175);
        if ($1191 == 0) {
          __label__ = 388; break;
        }
        else if ($1191 == 1) {
          __label__ = 388; break;
        }
        else if ($1191 == 2) {
          __label__ = 388; break;
        }
        else if ($1191 == 3) {
          __label__ = 388; break;
        }
        else if ($1191 == 4) {
          __label__ = 379; break;
        }
        else if ($1191 == 5) {
          __label__ = 370; break;
        }
        else if ($1191 == 6) {
          __label__ = 373; break;
        }
        else if ($1191 == 7) {
          __label__ = 376; break;
        }
        else if ($1191 == 8) {
          __label__ = 388; break;
        }
        else if ($1191 == 9) {
          __label__ = 388; break;
        }
        else if ($1191 == 10) {
          __label__ = 388; break;
        }
        else {
        __label__ = 389; break;
        }
        
      case 370: // $bb47
        var $1192=$end_addr; //@line 842 "xmltok_impl.c"
        var $1193=($1192); //@line 842 "xmltok_impl.c"
        var $1194=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1195=($1194); //@line 842 "xmltok_impl.c"
        var $1196=($1193) - ($1195); //@line 842 "xmltok_impl.c"
        var $1197=($1196) <= 1; //@line 842 "xmltok_impl.c"
        if ($1197) { __label__ = 371; break; } else { __label__ = 372; break; } //@line 842 "xmltok_impl.c"
      case 371: // $bb48
        var $1198=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1199=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1198]=$1199; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 372: // $bb49
        var $1200=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1201=$1200+2; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1201; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 373: // $bb50
        var $1202=$end_addr; //@line 842 "xmltok_impl.c"
        var $1203=($1202); //@line 842 "xmltok_impl.c"
        var $1204=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1205=($1204); //@line 842 "xmltok_impl.c"
        var $1206=($1203) - ($1205); //@line 842 "xmltok_impl.c"
        var $1207=($1206) <= 2; //@line 842 "xmltok_impl.c"
        if ($1207) { __label__ = 374; break; } else { __label__ = 375; break; } //@line 842 "xmltok_impl.c"
      case 374: // $bb51
        var $1208=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1209=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1208]=$1209; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 375: // $bb52
        var $1210=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1211=$1210+3; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1211; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 376: // $bb53
        var $1212=$end_addr; //@line 842 "xmltok_impl.c"
        var $1213=($1212); //@line 842 "xmltok_impl.c"
        var $1214=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1215=($1214); //@line 842 "xmltok_impl.c"
        var $1216=($1213) - ($1215); //@line 842 "xmltok_impl.c"
        var $1217=($1216) <= 3; //@line 842 "xmltok_impl.c"
        if ($1217) { __label__ = 377; break; } else { __label__ = 378; break; } //@line 842 "xmltok_impl.c"
      case 377: // $bb54
        var $1218=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1219=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1218]=$1219; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 378: // $bb55
        var $1220=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1221=$1220+4; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1221; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 379: // $bb56
        var $1222=$ptr_addr; //@line 845 "xmltok_impl.c"
        var $1223=$1222+2; //@line 845 "xmltok_impl.c"
        var $1224=$end_addr; //@line 845 "xmltok_impl.c"
        var $1225=($1223)!=($1224); //@line 845 "xmltok_impl.c"
        if ($1225) { __label__ = 380; break; } else { __label__ = 388; break; } //@line 845 "xmltok_impl.c"
      case 380: // $bb57
        var $1226=$ptr_addr; //@line 846 "xmltok_impl.c"
        var $1227=$1226+2; //@line 846 "xmltok_impl.c"
        var $1228=$1227+1; //@line 846 "xmltok_impl.c"
        var $1229=HEAP[$1228]; //@line 846 "xmltok_impl.c"
        var $1230=($1229)!=0; //@line 846 "xmltok_impl.c"
        if ($1230) { __label__ = 382; break; } else { __label__ = 381; break; } //@line 846 "xmltok_impl.c"
      case 381: // $bb58
        var $1231=$ptr_addr; //@line 846 "xmltok_impl.c"
        var $1232=$1231+2; //@line 846 "xmltok_impl.c"
        var $1233=$1232; //@line 846 "xmltok_impl.c"
        var $1234=HEAP[$1233]; //@line 846 "xmltok_impl.c"
        var $1235=($1234)!=93; //@line 846 "xmltok_impl.c"
        if ($1235) { __label__ = 382; break; } else { __label__ = 383; break; } //@line 846 "xmltok_impl.c"
      case 382: // $bb59
        var $1236=$ptr_addr; //@line 847 "xmltok_impl.c"
        var $1237=$1236+2; //@line 847 "xmltok_impl.c"
        $ptr_addr=$1237; //@line 847 "xmltok_impl.c"
        __label__ = 390; break; //@line 847 "xmltok_impl.c"
      case 383: // $bb60
        var $1238=$ptr_addr; //@line 850 "xmltok_impl.c"
        var $1239=$1238+4; //@line 850 "xmltok_impl.c"
        var $1240=$end_addr; //@line 850 "xmltok_impl.c"
        var $1241=($1239)!=($1240); //@line 850 "xmltok_impl.c"
        if ($1241) { __label__ = 384; break; } else { __label__ = 388; break; } //@line 850 "xmltok_impl.c"
      case 384: // $bb61
        var $1242=$ptr_addr; //@line 851 "xmltok_impl.c"
        var $1243=$1242+4; //@line 851 "xmltok_impl.c"
        var $1244=$1243+1; //@line 851 "xmltok_impl.c"
        var $1245=HEAP[$1244]; //@line 851 "xmltok_impl.c"
        var $1246=($1245)!=0; //@line 851 "xmltok_impl.c"
        if ($1246) { __label__ = 386; break; } else { __label__ = 385; break; } //@line 851 "xmltok_impl.c"
      case 385: // $bb62
        var $1247=$ptr_addr; //@line 851 "xmltok_impl.c"
        var $1248=$1247+4; //@line 851 "xmltok_impl.c"
        var $1249=$1248; //@line 851 "xmltok_impl.c"
        var $1250=HEAP[$1249]; //@line 851 "xmltok_impl.c"
        var $1251=($1250)!=62; //@line 851 "xmltok_impl.c"
        if ($1251) { __label__ = 386; break; } else { __label__ = 387; break; } //@line 851 "xmltok_impl.c"
      case 386: // $bb63
        var $1252=$ptr_addr; //@line 852 "xmltok_impl.c"
        var $1253=$1252+2; //@line 852 "xmltok_impl.c"
        $ptr_addr=$1253; //@line 852 "xmltok_impl.c"
        __label__ = 390; break; //@line 852 "xmltok_impl.c"
      case 387: // $bb64
        var $1254=$ptr_addr; //@line 855 "xmltok_impl.c"
        var $1255=$1254+4; //@line 855 "xmltok_impl.c"
        var $1256=$nextTokPtr_addr; //@line 855 "xmltok_impl.c"
        HEAP[$1256]=$1255; //@line 855 "xmltok_impl.c"
        $20=0; //@line 856 "xmltok_impl.c"
        __label__ = 392; break; //@line 856 "xmltok_impl.c"
      case 388: // $bb65
        var $1257=$nextTokPtr_addr; //@line 867 "xmltok_impl.c"
        var $1258=$ptr_addr; //@line 867 "xmltok_impl.c"
        HEAP[$1257]=$1258; //@line 867 "xmltok_impl.c"
        $20=6; //@line 868 "xmltok_impl.c"
        __label__ = 392; break; //@line 868 "xmltok_impl.c"
      case 389: // $bb66
        var $1259=$ptr_addr; //@line 870 "xmltok_impl.c"
        var $1260=$1259+2; //@line 870 "xmltok_impl.c"
        $ptr_addr=$1260; //@line 870 "xmltok_impl.c"
        __label__ = 390; break; //@line 870 "xmltok_impl.c"
      case 390: // $bb67
        var $1261=$ptr_addr; //@line 832 "xmltok_impl.c"
        var $1262=$end_addr; //@line 832 "xmltok_impl.c"
        var $1263=($1261)!=($1262); //@line 832 "xmltok_impl.c"
        if ($1263) { __label__ = 360; break; } else { __label__ = 391; break; } //@line 832 "xmltok_impl.c"
      case 391: // $bb68
        var $1264=$nextTokPtr_addr; //@line 874 "xmltok_impl.c"
        var $1265=$ptr_addr; //@line 874 "xmltok_impl.c"
        HEAP[$1264]=$1265; //@line 874 "xmltok_impl.c"
        $20=6; //@line 875 "xmltok_impl.c"
        __label__ = 392; break; //@line 875 "xmltok_impl.c"
      case 392: // $bb69
        var $1266=$20; //@line 786 "xmltok_impl.c"
        $retval=$1266; //@line 786 "xmltok_impl.c"
        var $retval70=$retval; //@line 786 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval70; //@line 786 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_scanPercent($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_736;
        var $iftmp_728;
        var $2;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 884 "xmltok_impl.c"
        var $4=$end_addr; //@line 884 "xmltok_impl.c"
        var $5=($3)==($4); //@line 884 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 884 "xmltok_impl.c"
      case 1: // $bb
        $2=-22; //@line 885 "xmltok_impl.c"
        __label__ = 52; break; //@line 885 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $7=$6+1; //@line 886 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 886 "xmltok_impl.c"
        var $9=($8)==0; //@line 886 "xmltok_impl.c"
        if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 886 "xmltok_impl.c"
      case 3: // $bb2
        var $10=$enc_addr; //@line 886 "xmltok_impl.c"
        var $11=$10; //@line 886 "xmltok_impl.c"
        var $12=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 886 "xmltok_impl.c"
        var $14=($13); //@line 886 "xmltok_impl.c"
        var $15=$11+72; //@line 886 "xmltok_impl.c"
        var $16=$15+$14; //@line 886 "xmltok_impl.c"
        var $17=HEAP[$16]; //@line 886 "xmltok_impl.c"
        var $18=($17); //@line 886 "xmltok_impl.c"
        $iftmp_728=$18; //@line 886 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 886 "xmltok_impl.c"
      case 4: // $bb3
        var $19=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $20=$19; //@line 886 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 886 "xmltok_impl.c"
        var $22=($21); //@line 886 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $24=$23+1; //@line 886 "xmltok_impl.c"
        var $25=HEAP[$24]; //@line 886 "xmltok_impl.c"
        var $26=($25); //@line 886 "xmltok_impl.c"
        var $27=((($26)) & 255); //@line 886 "xmltok_impl.c"
        var $28=((($22)) & 255); //@line 886 "xmltok_impl.c"
        $hi_addr_i=$27;
        $lo_addr_i=$28;
        var $29=$hi_addr_i; //@line 518 "xmltok.c"
        var $30=($29); //@line 518 "xmltok.c"
        if ($30 == 216) {
          __label__ = 5; break;
        }
        else if ($30 == 217) {
          __label__ = 5; break;
        }
        else if ($30 == 218) {
          __label__ = 5; break;
        }
        else if ($30 == 219) {
          __label__ = 5; break;
        }
        else if ($30 == 220) {
          __label__ = 6; break;
        }
        else if ($30 == 221) {
          __label__ = 6; break;
        }
        else if ($30 == 222) {
          __label__ = 6; break;
        }
        else if ($30 == 223) {
          __label__ = 6; break;
        }
        else if ($30 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $31=$lo_addr_i; //@line 524 "xmltok.c"
        var $32=($31); //@line 524 "xmltok.c"
        var $_off_i=($32) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $33=$1; //@line 520 "xmltok.c"
        $retval_i=$33; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_728=$retval6_i; //@line 886 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 886 "xmltok_impl.c"
      case 11: // $bb4
        var $34=__lastLabel__ == 10 ? $retval6_i : ($18);
        if ($34 == 5) {
          __label__ = 15; break;
        }
        else if ($34 == 6) {
          __label__ = 18; break;
        }
        else if ($34 == 7) {
          __label__ = 21; break;
        }
        else if ($34 == 9) {
          __label__ = 24; break;
        }
        else if ($34 == 10) {
          __label__ = 24; break;
        }
        else if ($34 == 21) {
          __label__ = 24; break;
        }
        else if ($34 == 22) {
          __label__ = 14; break;
        }
        else if ($34 == 24) {
          __label__ = 14; break;
        }
        else if ($34 == 29) {
          __label__ = 12; break;
        }
        else if ($34 == 30) {
          __label__ = 24; break;
        }
        else {
        __label__ = 25; break;
        }
        
      case 12: // $bb5
        var $35=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $36=$35+1; //@line 887 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 887 "xmltok_impl.c"
        var $38=($37); //@line 887 "xmltok_impl.c"
        var $39=_nmstrtPages+$38; //@line 887 "xmltok_impl.c"
        var $40=HEAP[$39]; //@line 887 "xmltok_impl.c"
        var $41=($40); //@line 887 "xmltok_impl.c"
        var $42=($41) * 8;
        var $43=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $44=$43; //@line 887 "xmltok_impl.c"
        var $45=HEAP[$44]; //@line 887 "xmltok_impl.c"
        var $46=($45) >>> 5; //@line 887 "xmltok_impl.c"
        var $47=($46); //@line 887 "xmltok_impl.c"
        var $48=($47) + ($42); //@line 887 "xmltok_impl.c"
        var $49=_namingBitmap+$48*4; //@line 887 "xmltok_impl.c"
        var $50=HEAP[$49]; //@line 887 "xmltok_impl.c"
        var $51=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $52=$51; //@line 887 "xmltok_impl.c"
        var $53=HEAP[$52]; //@line 887 "xmltok_impl.c"
        var $54=($53); //@line 887 "xmltok_impl.c"
        var $55=($54) & 31; //@line 887 "xmltok_impl.c"
        var $56=1 << ($55); //@line 887 "xmltok_impl.c"
        var $57=($56) & ($50); //@line 887 "xmltok_impl.c"
        var $58=($57)==0; //@line 887 "xmltok_impl.c"
        if ($58) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 887 "xmltok_impl.c"
      case 13: // $bb6
        var $59=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $60=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$59]=$60; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 14: // $bb7
        var $61=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $62=$61+2; //@line 887 "xmltok_impl.c"
        $ptr_addr=$62; //@line 887 "xmltok_impl.c"
        __label__ = 50; break; //@line 887 "xmltok_impl.c"
      case 15: // $bb8
        var $63=$end_addr; //@line 887 "xmltok_impl.c"
        var $64=($63); //@line 887 "xmltok_impl.c"
        var $65=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $66=($65); //@line 887 "xmltok_impl.c"
        var $67=($64) - ($66); //@line 887 "xmltok_impl.c"
        var $68=($67) <= 1; //@line 887 "xmltok_impl.c"
        if ($68) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 887 "xmltok_impl.c"
      case 16: // $bb9
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 17: // $bb10
        var $69=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $70=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$69]=$70; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 18: // $bb11
        var $71=$end_addr; //@line 887 "xmltok_impl.c"
        var $72=($71); //@line 887 "xmltok_impl.c"
        var $73=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $74=($73); //@line 887 "xmltok_impl.c"
        var $75=($72) - ($74); //@line 887 "xmltok_impl.c"
        var $76=($75) <= 2; //@line 887 "xmltok_impl.c"
        if ($76) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 887 "xmltok_impl.c"
      case 19: // $bb12
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 20: // $bb13
        var $77=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $78=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$77]=$78; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 21: // $bb14
        var $79=$end_addr; //@line 887 "xmltok_impl.c"
        var $80=($79); //@line 887 "xmltok_impl.c"
        var $81=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $82=($81); //@line 887 "xmltok_impl.c"
        var $83=($80) - ($82); //@line 887 "xmltok_impl.c"
        var $84=($83) <= 3; //@line 887 "xmltok_impl.c"
        if ($84) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 887 "xmltok_impl.c"
      case 22: // $bb15
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 23: // $bb16
        var $85=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $86=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$85]=$86; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 24: // $bb17
        var $87=$nextTokPtr_addr; //@line 889 "xmltok_impl.c"
        var $88=$ptr_addr; //@line 889 "xmltok_impl.c"
        HEAP[$87]=$88; //@line 889 "xmltok_impl.c"
        $2=22; //@line 890 "xmltok_impl.c"
        __label__ = 52; break; //@line 890 "xmltok_impl.c"
      case 25: // $bb18
        var $89=$nextTokPtr_addr; //@line 892 "xmltok_impl.c"
        var $90=$ptr_addr; //@line 892 "xmltok_impl.c"
        HEAP[$89]=$90; //@line 892 "xmltok_impl.c"
        $2=0; //@line 893 "xmltok_impl.c"
        __label__ = 52; break; //@line 893 "xmltok_impl.c"
      case 26: // $bb19
        var $91=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $92=$91+1; //@line 896 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 896 "xmltok_impl.c"
        var $94=($93)==0; //@line 896 "xmltok_impl.c"
        if ($94) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 896 "xmltok_impl.c"
      case 27: // $bb20
        var $95=$enc_addr; //@line 896 "xmltok_impl.c"
        var $96=$95; //@line 896 "xmltok_impl.c"
        var $97=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $98=HEAP[$97]; //@line 896 "xmltok_impl.c"
        var $99=($98); //@line 896 "xmltok_impl.c"
        var $100=$96+72; //@line 896 "xmltok_impl.c"
        var $101=$100+$99; //@line 896 "xmltok_impl.c"
        var $102=HEAP[$101]; //@line 896 "xmltok_impl.c"
        var $103=($102); //@line 896 "xmltok_impl.c"
        $iftmp_736=$103; //@line 896 "xmltok_impl.c"
        __lastLabel__ = 27; __label__ = 35; break; //@line 896 "xmltok_impl.c"
      case 28: // $bb21
        var $104=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $105=$104; //@line 896 "xmltok_impl.c"
        var $106=HEAP[$105]; //@line 896 "xmltok_impl.c"
        var $107=($106); //@line 896 "xmltok_impl.c"
        var $108=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $109=$108+1; //@line 896 "xmltok_impl.c"
        var $110=HEAP[$109]; //@line 896 "xmltok_impl.c"
        var $111=($110); //@line 896 "xmltok_impl.c"
        var $112=((($111)) & 255); //@line 896 "xmltok_impl.c"
        var $113=((($107)) & 255); //@line 896 "xmltok_impl.c"
        $hi_addr_i1=$112;
        $lo_addr_i2=$113;
        var $114=$hi_addr_i1; //@line 518 "xmltok.c"
        var $115=($114); //@line 518 "xmltok.c"
        if ($115 == 216) {
          __label__ = 29; break;
        }
        else if ($115 == 217) {
          __label__ = 29; break;
        }
        else if ($115 == 218) {
          __label__ = 29; break;
        }
        else if ($115 == 219) {
          __label__ = 29; break;
        }
        else if ($115 == 220) {
          __label__ = 30; break;
        }
        else if ($115 == 221) {
          __label__ = 30; break;
        }
        else if ($115 == 222) {
          __label__ = 30; break;
        }
        else if ($115 == 223) {
          __label__ = 30; break;
        }
        else if ($115 == 255) {
          __label__ = 31; break;
        }
        else {
        __label__ = 33; break;
        }
        
      case 29: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 34; break; //@line 520 "xmltok.c"
      case 30: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 34; break; //@line 522 "xmltok.c"
      case 31: // $bb2_i8
        var $116=$lo_addr_i2; //@line 524 "xmltok.c"
        var $117=($116); //@line 524 "xmltok.c"
        var $_off_i6=($117) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 32; break; } else { __label__ = 33; break; }
      case 32: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 34; break; //@line 527 "xmltok.c"
      case 33: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 34; break; //@line 531 "xmltok.c"
      case 34: // $unicode_byte_type_exit12
        var $118=$0; //@line 520 "xmltok.c"
        $retval_i3=$118; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_736=$retval6_i11; //@line 896 "xmltok_impl.c"
        __lastLabel__ = 34; __label__ = 35; break; //@line 896 "xmltok_impl.c"
      case 35: // $bb22
        var $119=__lastLabel__ == 34 ? $retval6_i11 : ($103);
        if ($119 == 5) {
          __label__ = 39; break;
        }
        else if ($119 == 6) {
          __label__ = 42; break;
        }
        else if ($119 == 7) {
          __label__ = 45; break;
        }
        else if ($119 == 18) {
          __label__ = 48; break;
        }
        else if ($119 == 22) {
          __label__ = 38; break;
        }
        else if ($119 == 24) {
          __label__ = 38; break;
        }
        else if ($119 == 25) {
          __label__ = 38; break;
        }
        else if ($119 == 26) {
          __label__ = 38; break;
        }
        else if ($119 == 27) {
          __label__ = 38; break;
        }
        else if ($119 == 29) {
          __label__ = 36; break;
        }
        else {
        __label__ = 49; break;
        }
        
      case 36: // $bb23
        var $120=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $121=$120+1; //@line 897 "xmltok_impl.c"
        var $122=HEAP[$121]; //@line 897 "xmltok_impl.c"
        var $123=($122); //@line 897 "xmltok_impl.c"
        var $124=_namePages+$123; //@line 897 "xmltok_impl.c"
        var $125=HEAP[$124]; //@line 897 "xmltok_impl.c"
        var $126=($125); //@line 897 "xmltok_impl.c"
        var $127=($126) * 8;
        var $128=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $129=$128; //@line 897 "xmltok_impl.c"
        var $130=HEAP[$129]; //@line 897 "xmltok_impl.c"
        var $131=($130) >>> 5; //@line 897 "xmltok_impl.c"
        var $132=($131); //@line 897 "xmltok_impl.c"
        var $133=($132) + ($127); //@line 897 "xmltok_impl.c"
        var $134=_namingBitmap+$133*4; //@line 897 "xmltok_impl.c"
        var $135=HEAP[$134]; //@line 897 "xmltok_impl.c"
        var $136=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $137=$136; //@line 897 "xmltok_impl.c"
        var $138=HEAP[$137]; //@line 897 "xmltok_impl.c"
        var $139=($138); //@line 897 "xmltok_impl.c"
        var $140=($139) & 31; //@line 897 "xmltok_impl.c"
        var $141=1 << ($140); //@line 897 "xmltok_impl.c"
        var $142=($141) & ($135); //@line 897 "xmltok_impl.c"
        var $143=($142)==0; //@line 897 "xmltok_impl.c"
        if ($143) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 897 "xmltok_impl.c"
      case 37: // $bb24
        var $144=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $145=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$144]=$145; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 38: // $bb25
        var $146=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $147=$146+2; //@line 897 "xmltok_impl.c"
        $ptr_addr=$147; //@line 897 "xmltok_impl.c"
        __label__ = 50; break; //@line 897 "xmltok_impl.c"
      case 39: // $bb26
        var $148=$end_addr; //@line 897 "xmltok_impl.c"
        var $149=($148); //@line 897 "xmltok_impl.c"
        var $150=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $151=($150); //@line 897 "xmltok_impl.c"
        var $152=($149) - ($151); //@line 897 "xmltok_impl.c"
        var $153=($152) <= 1; //@line 897 "xmltok_impl.c"
        if ($153) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 897 "xmltok_impl.c"
      case 40: // $bb27
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 41: // $bb28
        var $154=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $155=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$154]=$155; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 42: // $bb29
        var $156=$end_addr; //@line 897 "xmltok_impl.c"
        var $157=($156); //@line 897 "xmltok_impl.c"
        var $158=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $159=($158); //@line 897 "xmltok_impl.c"
        var $160=($157) - ($159); //@line 897 "xmltok_impl.c"
        var $161=($160) <= 2; //@line 897 "xmltok_impl.c"
        if ($161) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 897 "xmltok_impl.c"
      case 43: // $bb30
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 44: // $bb31
        var $162=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $163=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$162]=$163; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 45: // $bb32
        var $164=$end_addr; //@line 897 "xmltok_impl.c"
        var $165=($164); //@line 897 "xmltok_impl.c"
        var $166=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $167=($166); //@line 897 "xmltok_impl.c"
        var $168=($165) - ($167); //@line 897 "xmltok_impl.c"
        var $169=($168) <= 3; //@line 897 "xmltok_impl.c"
        if ($169) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 897 "xmltok_impl.c"
      case 46: // $bb33
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 47: // $bb34
        var $170=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $171=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$170]=$171; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 48: // $bb35
        var $172=$ptr_addr; //@line 899 "xmltok_impl.c"
        var $173=$172+2; //@line 899 "xmltok_impl.c"
        var $174=$nextTokPtr_addr; //@line 899 "xmltok_impl.c"
        HEAP[$174]=$173; //@line 899 "xmltok_impl.c"
        $2=28; //@line 900 "xmltok_impl.c"
        __label__ = 52; break; //@line 900 "xmltok_impl.c"
      case 49: // $bb36
        var $175=$nextTokPtr_addr; //@line 902 "xmltok_impl.c"
        var $176=$ptr_addr; //@line 902 "xmltok_impl.c"
        HEAP[$175]=$176; //@line 902 "xmltok_impl.c"
        $2=0; //@line 903 "xmltok_impl.c"
        __label__ = 52; break; //@line 903 "xmltok_impl.c"
      case 50: // $bb37
        var $177=$ptr_addr; //@line 895 "xmltok_impl.c"
        var $178=$end_addr; //@line 895 "xmltok_impl.c"
        var $179=($177)!=($178); //@line 895 "xmltok_impl.c"
        if ($179) { __label__ = 26; break; } else { __label__ = 51; break; } //@line 895 "xmltok_impl.c"
      case 51: // $bb38
        $2=-1; //@line 906 "xmltok_impl.c"
        __label__ = 52; break; //@line 906 "xmltok_impl.c"
      case 52: // $bb39
        var $180=$2; //@line 885 "xmltok_impl.c"
        $retval=$180; //@line 885 "xmltok_impl.c"
        var $retval40=$retval; //@line 885 "xmltok_impl.c"
        ;
        return $retval40; //@line 885 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_scanLit($open, $enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $open_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_768;
        var $2;
        var $iftmp_760;
        var $t;
        $open_addr=$open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        __label__ = 37; break; //@line 941 "xmltok_impl.c"
      case 1: // $bb
        var $3=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $4=$3+1; //@line 942 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 942 "xmltok_impl.c"
        var $6=($5)==0; //@line 942 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 942 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 942 "xmltok_impl.c"
        var $8=$7; //@line 942 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 942 "xmltok_impl.c"
        var $11=($10); //@line 942 "xmltok_impl.c"
        var $12=$8+72; //@line 942 "xmltok_impl.c"
        var $13=$12+$11; //@line 942 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 942 "xmltok_impl.c"
        var $15=($14); //@line 942 "xmltok_impl.c"
        $iftmp_760=$15; //@line 942 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 942 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $17=$16; //@line 942 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 942 "xmltok_impl.c"
        var $19=($18); //@line 942 "xmltok_impl.c"
        var $20=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $21=$20+1; //@line 942 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 942 "xmltok_impl.c"
        var $23=($22); //@line 942 "xmltok_impl.c"
        var $24=((($23)) & 255); //@line 942 "xmltok_impl.c"
        var $25=((($19)) & 255); //@line 942 "xmltok_impl.c"
        $hi_addr_i=$24;
        $lo_addr_i=$25;
        var $26=$hi_addr_i; //@line 518 "xmltok.c"
        var $27=($26); //@line 518 "xmltok.c"
        if ($27 == 216) {
          __label__ = 4; break;
        }
        else if ($27 == 217) {
          __label__ = 4; break;
        }
        else if ($27 == 218) {
          __label__ = 4; break;
        }
        else if ($27 == 219) {
          __label__ = 4; break;
        }
        else if ($27 == 220) {
          __label__ = 5; break;
        }
        else if ($27 == 221) {
          __label__ = 5; break;
        }
        else if ($27 == 222) {
          __label__ = 5; break;
        }
        else if ($27 == 223) {
          __label__ = 5; break;
        }
        else if ($27 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $28=$lo_addr_i; //@line 524 "xmltok.c"
        var $29=($28); //@line 524 "xmltok.c"
        var $_off_i=($29) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $30=$1; //@line 520 "xmltok.c"
        $retval_i=$30; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_760=$retval6_i; //@line 942 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 942 "xmltok_impl.c"
      case 10: // $bb3
        var $31=__lastLabel__ == 9 ? $retval6_i : ($15);
        $t=$31; //@line 942 "xmltok_impl.c"
        if ($31 == 0) {
          __label__ = 20; break;
        }
        else if ($31 == 1) {
          __label__ = 20; break;
        }
        else if ($31 == 5) {
          __label__ = 11; break;
        }
        else if ($31 == 6) {
          __label__ = 14; break;
        }
        else if ($31 == 7) {
          __label__ = 17; break;
        }
        else if ($31 == 8) {
          __label__ = 20; break;
        }
        else if ($31 == 12) {
          __label__ = 21; break;
        }
        else if ($31 == 13) {
          __label__ = 21; break;
        }
        else {
        __label__ = 36; break;
        }
        
      case 11: // $bb4
        var $32=$end_addr; //@line 944 "xmltok_impl.c"
        var $33=($32); //@line 944 "xmltok_impl.c"
        var $34=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $35=($34); //@line 944 "xmltok_impl.c"
        var $36=($33) - ($35); //@line 944 "xmltok_impl.c"
        var $37=($36) <= 1; //@line 944 "xmltok_impl.c"
        if ($37) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 944 "xmltok_impl.c"
      case 12: // $bb5
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 13: // $bb6
        var $38=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $39=$38+2; //@line 944 "xmltok_impl.c"
        $ptr_addr=$39; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 14: // $bb7
        var $40=$end_addr; //@line 944 "xmltok_impl.c"
        var $41=($40); //@line 944 "xmltok_impl.c"
        var $42=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $43=($42); //@line 944 "xmltok_impl.c"
        var $44=($41) - ($43); //@line 944 "xmltok_impl.c"
        var $45=($44) <= 2; //@line 944 "xmltok_impl.c"
        if ($45) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 944 "xmltok_impl.c"
      case 15: // $bb8
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 16: // $bb9
        var $46=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $47=$46+3; //@line 944 "xmltok_impl.c"
        $ptr_addr=$47; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 17: // $bb10
        var $48=$end_addr; //@line 944 "xmltok_impl.c"
        var $49=($48); //@line 944 "xmltok_impl.c"
        var $50=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $51=($50); //@line 944 "xmltok_impl.c"
        var $52=($49) - ($51); //@line 944 "xmltok_impl.c"
        var $53=($52) <= 3; //@line 944 "xmltok_impl.c"
        if ($53) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 944 "xmltok_impl.c"
      case 18: // $bb11
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 19: // $bb12
        var $54=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $55=$54+4; //@line 944 "xmltok_impl.c"
        $ptr_addr=$55; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 20: // $bb13
        var $56=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$56]=$57; //@line 944 "xmltok_impl.c"
        $2=0; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 21: // $bb14
        var $58=$ptr_addr; //@line 947 "xmltok_impl.c"
        var $59=$58+2; //@line 947 "xmltok_impl.c"
        $ptr_addr=$59; //@line 947 "xmltok_impl.c"
        var $60=$t; //@line 948 "xmltok_impl.c"
        var $61=$open_addr; //@line 948 "xmltok_impl.c"
        var $62=($60)!=($61); //@line 948 "xmltok_impl.c"
        if ($62) { __label__ = 37; break; } else { __label__ = 22; break; } //@line 948 "xmltok_impl.c"
      case 22: // $bb15
        var $63=$ptr_addr; //@line 950 "xmltok_impl.c"
        var $64=$end_addr; //@line 950 "xmltok_impl.c"
        var $65=($63)==($64); //@line 950 "xmltok_impl.c"
        if ($65) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 950 "xmltok_impl.c"
      case 23: // $bb16
        $2=-27; //@line 951 "xmltok_impl.c"
        __label__ = 39; break; //@line 951 "xmltok_impl.c"
      case 24: // $bb17
        var $66=$nextTokPtr_addr; //@line 952 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 952 "xmltok_impl.c"
        HEAP[$66]=$67; //@line 952 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $69=$68+1; //@line 953 "xmltok_impl.c"
        var $70=HEAP[$69]; //@line 953 "xmltok_impl.c"
        var $71=($70)==0; //@line 953 "xmltok_impl.c"
        if ($71) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 953 "xmltok_impl.c"
      case 25: // $bb18
        var $72=$enc_addr; //@line 953 "xmltok_impl.c"
        var $73=$72; //@line 953 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $75=HEAP[$74]; //@line 953 "xmltok_impl.c"
        var $76=($75); //@line 953 "xmltok_impl.c"
        var $77=$73+72; //@line 953 "xmltok_impl.c"
        var $78=$77+$76; //@line 953 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 953 "xmltok_impl.c"
        var $80=($79); //@line 953 "xmltok_impl.c"
        $iftmp_768=$80; //@line 953 "xmltok_impl.c"
        __lastLabel__ = 25; __label__ = 33; break; //@line 953 "xmltok_impl.c"
      case 26: // $bb19
        var $81=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $82=$81; //@line 953 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 953 "xmltok_impl.c"
        var $84=($83); //@line 953 "xmltok_impl.c"
        var $85=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $86=$85+1; //@line 953 "xmltok_impl.c"
        var $87=HEAP[$86]; //@line 953 "xmltok_impl.c"
        var $88=($87); //@line 953 "xmltok_impl.c"
        var $89=((($88)) & 255); //@line 953 "xmltok_impl.c"
        var $90=((($84)) & 255); //@line 953 "xmltok_impl.c"
        $hi_addr_i1=$89;
        $lo_addr_i2=$90;
        var $91=$hi_addr_i1; //@line 518 "xmltok.c"
        var $92=($91); //@line 518 "xmltok.c"
        if ($92 == 216) {
          __label__ = 27; break;
        }
        else if ($92 == 217) {
          __label__ = 27; break;
        }
        else if ($92 == 218) {
          __label__ = 27; break;
        }
        else if ($92 == 219) {
          __label__ = 27; break;
        }
        else if ($92 == 220) {
          __label__ = 28; break;
        }
        else if ($92 == 221) {
          __label__ = 28; break;
        }
        else if ($92 == 222) {
          __label__ = 28; break;
        }
        else if ($92 == 223) {
          __label__ = 28; break;
        }
        else if ($92 == 255) {
          __label__ = 29; break;
        }
        else {
        __label__ = 31; break;
        }
        
      case 27: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 32; break; //@line 520 "xmltok.c"
      case 28: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 32; break; //@line 522 "xmltok.c"
      case 29: // $bb2_i8
        var $93=$lo_addr_i2; //@line 524 "xmltok.c"
        var $94=($93); //@line 524 "xmltok.c"
        var $_off_i6=($94) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 30; break; } else { __label__ = 31; break; }
      case 30: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 32; break; //@line 527 "xmltok.c"
      case 31: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 32; break; //@line 531 "xmltok.c"
      case 32: // $unicode_byte_type_exit12
        var $95=$0; //@line 520 "xmltok.c"
        $retval_i3=$95; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_768=$retval6_i11; //@line 953 "xmltok_impl.c"
        __lastLabel__ = 32; __label__ = 33; break; //@line 953 "xmltok_impl.c"
      case 33: // $bb20
        var $96=__lastLabel__ == 32 ? $retval6_i11 : ($80);
        if ($96 == 9) {
          __label__ = 34; break;
        }
        else if ($96 == 10) {
          __label__ = 34; break;
        }
        else if ($96 == 11) {
          __label__ = 34; break;
        }
        else if ($96 == 20) {
          __label__ = 34; break;
        }
        else if ($96 == 21) {
          __label__ = 34; break;
        }
        else if ($96 == 30) {
          __label__ = 34; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 34: // $bb21
        $2=27; //@line 956 "xmltok_impl.c"
        __label__ = 39; break; //@line 956 "xmltok_impl.c"
      case 35: // $bb22
        $2=0; //@line 958 "xmltok_impl.c"
        __label__ = 39; break; //@line 958 "xmltok_impl.c"
      case 36: // $bb23
        var $97=$ptr_addr; //@line 961 "xmltok_impl.c"
        var $98=$97+2; //@line 961 "xmltok_impl.c"
        $ptr_addr=$98; //@line 961 "xmltok_impl.c"
        __label__ = 37; break; //@line 961 "xmltok_impl.c"
      case 37: // $bb24
        var $99=$ptr_addr; //@line 941 "xmltok_impl.c"
        var $100=$end_addr; //@line 941 "xmltok_impl.c"
        var $101=($99)!=($100); //@line 941 "xmltok_impl.c"
        if ($101) { __label__ = 1; break; } else { __label__ = 38; break; } //@line 941 "xmltok_impl.c"
      case 38: // $bb25
        $2=-1; //@line 965 "xmltok_impl.c"
        __label__ = 39; break; //@line 965 "xmltok_impl.c"
      case 39: // $bb26
        var $102=$2; //@line 944 "xmltok_impl.c"
        $retval=$102; //@line 944 "xmltok_impl.c"
        var $retval27=$retval; //@line 944 "xmltok_impl.c"
        ;
        return $retval27; //@line 944 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_prologTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13_i;
        var $lo_addr_i14_i;
        var $retval_i15_i;
        var $0;
        var $hi_addr_i1_i58;
        var $lo_addr_i2_i59;
        var $retval_i3_i60;
        var $1;
        var $hi_addr_i_i61;
        var $lo_addr_i_i62;
        var $retval_i_i63;
        var $2;
        var $enc_addr_i64;
        var $ptr_addr_i65;
        var $end_addr_i66;
        var $nextTokPtr_addr_i67;
        var $retval_i68;
        var $iftmp_465_i;
        var $iftmp_463_i;
        var $iftmp_461_i;
        var $3;
        var $hi_addr_i45;
        var $lo_addr_i46;
        var $retval_i47;
        var $4;
        var $hi_addr_i32;
        var $lo_addr_i33;
        var $retval_i34;
        var $5;
        var $hi_addr_i19;
        var $lo_addr_i20;
        var $retval_i21;
        var $6;
        var $hi_addr_i1_i;
        var $lo_addr_i2_i;
        var $retval_i3_i;
        var $7;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i_i;
        var $8;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i13;
        var $iftmp_752_i;
        var $iftmp_744_i;
        var $9;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $10;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $11;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_787;
        var $iftmp_779;
        var $iftmp_777;
        var $iftmp_775;
        var $iftmp_773;
        var $12;
        var $tok;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $13=$ptr_addr; //@line 973 "xmltok_impl.c"
        var $14=$end_addr; //@line 973 "xmltok_impl.c"
        var $15=($13)==($14); //@line 973 "xmltok_impl.c"
        if ($15) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 973 "xmltok_impl.c"
      case 1: // $bb
        $12=-4; //@line 974 "xmltok_impl.c"
        __label__ = 230; break; //@line 974 "xmltok_impl.c"
      case 2: // $bb1
        var $16=$end_addr; //@line 976 "xmltok_impl.c"
        var $17=($16); //@line 976 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 976 "xmltok_impl.c"
        var $19=($18); //@line 976 "xmltok_impl.c"
        var $20=($17) - ($19); //@line 976 "xmltok_impl.c"
        $n=$20; //@line 976 "xmltok_impl.c"
        var $21=$n; //@line 977 "xmltok_impl.c"
        var $22=($21) & 1; //@line 977 "xmltok_impl.c"
        var $23=((($22)) & 255); //@line 977 "xmltok_impl.c"
        var $toBool=($23)!=0; //@line 977 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 977 "xmltok_impl.c"
      case 3: // $bb2
        var $24=$n; //@line 978 "xmltok_impl.c"
        var $25=($24) & -2; //@line 978 "xmltok_impl.c"
        $n=$25; //@line 978 "xmltok_impl.c"
        var $26=$n; //@line 979 "xmltok_impl.c"
        var $27=($26)==0; //@line 979 "xmltok_impl.c"
        if ($27) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 979 "xmltok_impl.c"
      case 4: // $bb3
        $12=-1; //@line 980 "xmltok_impl.c"
        __label__ = 230; break; //@line 980 "xmltok_impl.c"
      case 5: // $bb4
        var $28=$ptr_addr; //@line 981 "xmltok_impl.c"
        var $29=$n; //@line 981 "xmltok_impl.c"
        var $30=$28+$29; //@line 981 "xmltok_impl.c"
        $end_addr=$30; //@line 981 "xmltok_impl.c"
        __label__ = 6; break; //@line 981 "xmltok_impl.c"
      case 6: // $bb5
        var $31=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $32=$31+1; //@line 984 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 984 "xmltok_impl.c"
        var $34=($33)==0; //@line 984 "xmltok_impl.c"
        if ($34) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 984 "xmltok_impl.c"
      case 7: // $bb6
        var $35=$enc_addr; //@line 984 "xmltok_impl.c"
        var $36=$35; //@line 984 "xmltok_impl.c"
        var $37=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $38=HEAP[$37]; //@line 984 "xmltok_impl.c"
        var $39=($38); //@line 984 "xmltok_impl.c"
        var $40=$36+72; //@line 984 "xmltok_impl.c"
        var $41=$40+$39; //@line 984 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 984 "xmltok_impl.c"
        var $43=($42); //@line 984 "xmltok_impl.c"
        $iftmp_773=$43; //@line 984 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 984 "xmltok_impl.c"
      case 8: // $bb7
        var $44=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $45=$44; //@line 984 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 984 "xmltok_impl.c"
        var $47=($46); //@line 984 "xmltok_impl.c"
        var $48=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $49=$48+1; //@line 984 "xmltok_impl.c"
        var $50=HEAP[$49]; //@line 984 "xmltok_impl.c"
        var $51=($50); //@line 984 "xmltok_impl.c"
        var $52=((($51)) & 255); //@line 984 "xmltok_impl.c"
        var $53=((($47)) & 255); //@line 984 "xmltok_impl.c"
        $hi_addr_i=$52;
        $lo_addr_i=$53;
        var $54=$hi_addr_i; //@line 518 "xmltok.c"
        var $55=($54); //@line 518 "xmltok.c"
        if ($55 == 216) {
          __label__ = 9; break;
        }
        else if ($55 == 217) {
          __label__ = 9; break;
        }
        else if ($55 == 218) {
          __label__ = 9; break;
        }
        else if ($55 == 219) {
          __label__ = 9; break;
        }
        else if ($55 == 220) {
          __label__ = 10; break;
        }
        else if ($55 == 221) {
          __label__ = 10; break;
        }
        else if ($55 == 222) {
          __label__ = 10; break;
        }
        else if ($55 == 223) {
          __label__ = 10; break;
        }
        else if ($55 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $11=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $11=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $56=$lo_addr_i; //@line 524 "xmltok.c"
        var $57=($56); //@line 524 "xmltok.c"
        var $_off_i=($57) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $11=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $11=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $58=$11; //@line 520 "xmltok.c"
        $retval_i=$58; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_773=$retval6_i; //@line 984 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 984 "xmltok_impl.c"
      case 15: // $bb8
        var $59=__lastLabel__ == 14 ? $retval6_i : ($43);
        if ($59 == 2) {
          __label__ = 18; break;
        }
        else if ($59 == 4) {
          __label__ = 97; break;
        }
        else if ($59 == 5) {
          __label__ = 179; break;
        }
        else if ($59 == 6) {
          __label__ = 182; break;
        }
        else if ($59 == 7) {
          __label__ = 185; break;
        }
        else if ($59 == 9) {
          __label__ = 78; break;
        }
        else if ($59 == 10) {
          __label__ = 80; break;
        }
        else if ($59 == 11) {
          __label__ = 126; break;
        }
        else if ($59 == 12) {
          __label__ = 16; break;
        }
        else if ($59 == 13) {
          __label__ = 17; break;
        }
        else if ($59 == 19) {
          __label__ = 127; break;
        }
        else if ($59 == 20) {
          __label__ = 96; break;
        }
        else if ($59 == 21) {
          __label__ = 80; break;
        }
        else if ($59 == 22) {
          __label__ = 188; break;
        }
        else if ($59 == 24) {
          __label__ = 188; break;
        }
        else if ($59 == 25) {
          __label__ = 189; break;
        }
        else if ($59 == 26) {
          __label__ = 189; break;
        }
        else if ($59 == 27) {
          __label__ = 189; break;
        }
        else if ($59 == 29) {
          __label__ = 190; break;
        }
        else if ($59 == 30) {
          __label__ = 94; break;
        }
        else if ($59 == 31) {
          __label__ = 107; break;
        }
        else if ($59 == 32) {
          __label__ = 108; break;
        }
        else if ($59 == 35) {
          __label__ = 95; break;
        }
        else if ($59 == 36) {
          __label__ = 125; break;
        }
        else {
        __label__ = 194; break;
        }
        
      case 16: // $bb9
        var $60=$ptr_addr; //@line 986 "xmltok_impl.c"
        var $61=$60+2; //@line 986 "xmltok_impl.c"
        var $62=$enc_addr; //@line 986 "xmltok_impl.c"
        var $63=$end_addr; //@line 986 "xmltok_impl.c"
        var $64=$nextTokPtr_addr; //@line 986 "xmltok_impl.c"
        var $65=_little2_scanLit(12, $62, $61, $63, $64); //@line 986 "xmltok_impl.c"
        $12=$65; //@line 986 "xmltok_impl.c"
        __label__ = 230; break; //@line 986 "xmltok_impl.c"
      case 17: // $bb10
        var $66=$ptr_addr; //@line 988 "xmltok_impl.c"
        var $67=$66+2; //@line 988 "xmltok_impl.c"
        var $68=$enc_addr; //@line 988 "xmltok_impl.c"
        var $69=$end_addr; //@line 988 "xmltok_impl.c"
        var $70=$nextTokPtr_addr; //@line 988 "xmltok_impl.c"
        var $71=_little2_scanLit(13, $68, $67, $69, $70); //@line 988 "xmltok_impl.c"
        $12=$71; //@line 988 "xmltok_impl.c"
        __label__ = 230; break; //@line 988 "xmltok_impl.c"
      case 18: // $bb11
        var $72=$ptr_addr; //@line 991 "xmltok_impl.c"
        var $73=$72+2; //@line 991 "xmltok_impl.c"
        $ptr_addr=$73; //@line 991 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 992 "xmltok_impl.c"
        var $75=$end_addr; //@line 992 "xmltok_impl.c"
        var $76=($74)==($75); //@line 992 "xmltok_impl.c"
        if ($76) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 992 "xmltok_impl.c"
      case 19: // $bb12
        $12=-1; //@line 993 "xmltok_impl.c"
        __label__ = 230; break; //@line 993 "xmltok_impl.c"
      case 20: // $bb13
        var $77=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $78=$77+1; //@line 994 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 994 "xmltok_impl.c"
        var $80=($79)==0; //@line 994 "xmltok_impl.c"
        if ($80) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 994 "xmltok_impl.c"
      case 21: // $bb14
        var $81=$enc_addr; //@line 994 "xmltok_impl.c"
        var $82=$81; //@line 994 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $84=HEAP[$83]; //@line 994 "xmltok_impl.c"
        var $85=($84); //@line 994 "xmltok_impl.c"
        var $86=$82+72; //@line 994 "xmltok_impl.c"
        var $87=$86+$85; //@line 994 "xmltok_impl.c"
        var $88=HEAP[$87]; //@line 994 "xmltok_impl.c"
        var $89=($88); //@line 994 "xmltok_impl.c"
        $iftmp_775=$89; //@line 994 "xmltok_impl.c"
        __lastLabel__ = 21; __label__ = 29; break; //@line 994 "xmltok_impl.c"
      case 22: // $bb15
        var $90=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $91=$90; //@line 994 "xmltok_impl.c"
        var $92=HEAP[$91]; //@line 994 "xmltok_impl.c"
        var $93=($92); //@line 994 "xmltok_impl.c"
        var $94=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $95=$94+1; //@line 994 "xmltok_impl.c"
        var $96=HEAP[$95]; //@line 994 "xmltok_impl.c"
        var $97=($96); //@line 994 "xmltok_impl.c"
        var $98=((($97)) & 255); //@line 994 "xmltok_impl.c"
        var $99=((($93)) & 255); //@line 994 "xmltok_impl.c"
        $hi_addr_i32=$98;
        $lo_addr_i33=$99;
        var $100=$hi_addr_i32; //@line 518 "xmltok.c"
        var $101=($100); //@line 518 "xmltok.c"
        if ($101 == 216) {
          __label__ = 23; break;
        }
        else if ($101 == 217) {
          __label__ = 23; break;
        }
        else if ($101 == 218) {
          __label__ = 23; break;
        }
        else if ($101 == 219) {
          __label__ = 23; break;
        }
        else if ($101 == 220) {
          __label__ = 24; break;
        }
        else if ($101 == 221) {
          __label__ = 24; break;
        }
        else if ($101 == 222) {
          __label__ = 24; break;
        }
        else if ($101 == 223) {
          __label__ = 24; break;
        }
        else if ($101 == 255) {
          __label__ = 25; break;
        }
        else {
        __label__ = 27; break;
        }
        
      case 23: // $bb_i35
        $5=7; //@line 520 "xmltok.c"
        __label__ = 28; break; //@line 520 "xmltok.c"
      case 24: // $bb1_i36
        $5=8; //@line 522 "xmltok.c"
        __label__ = 28; break; //@line 522 "xmltok.c"
      case 25: // $bb2_i39
        var $102=$lo_addr_i33; //@line 524 "xmltok.c"
        var $103=($102); //@line 524 "xmltok.c"
        var $_off_i37=($103) + -254;
        var $switch_i38=($_off_i37) < 2;
        if ($switch_i38) { __label__ = 26; break; } else { __label__ = 27; break; }
      case 26: // $bb3_i40
        $5=0; //@line 527 "xmltok.c"
        __label__ = 28; break; //@line 527 "xmltok.c"
      case 27: // $bb4_i41
        $5=29; //@line 531 "xmltok.c"
        __label__ = 28; break; //@line 531 "xmltok.c"
      case 28: // $unicode_byte_type_exit44
        var $104=$5; //@line 520 "xmltok.c"
        $retval_i34=$104; //@line 520 "xmltok.c"
        var $retval6_i42=$retval_i34; //@line 520 "xmltok.c"
        $iftmp_775=$retval6_i42; //@line 994 "xmltok_impl.c"
        __lastLabel__ = 28; __label__ = 29; break; //@line 994 "xmltok_impl.c"
      case 29: // $bb16
        var $105=__lastLabel__ == 28 ? $retval6_i42 : ($89);
        if ($105 == 5) {
          __label__ = 76; break;
        }
        else if ($105 == 6) {
          __label__ = 76; break;
        }
        else if ($105 == 7) {
          __label__ = 76; break;
        }
        else if ($105 == 15) {
          __label__ = 75; break;
        }
        else if ($105 == 16) {
          __label__ = 30; break;
        }
        else if ($105 == 22) {
          __label__ = 76; break;
        }
        else if ($105 == 24) {
          __label__ = 76; break;
        }
        else if ($105 == 29) {
          __label__ = 76; break;
        }
        else {
        __label__ = 77; break;
        }
        
      case 30: // $bb17
        var $106=$ptr_addr; //@line 996 "xmltok_impl.c"
        var $107=$106+2; //@line 996 "xmltok_impl.c"
        var $108=$enc_addr; //@line 996 "xmltok_impl.c"
        var $109=$end_addr; //@line 996 "xmltok_impl.c"
        var $110=$nextTokPtr_addr; //@line 996 "xmltok_impl.c"
        $enc_addr_i64=$108;
        $ptr_addr_i65=$107;
        $end_addr_i66=$109;
        $nextTokPtr_addr_i67=$110;
        var $111=$ptr_addr_i65; //@line 131 "xmltok_impl.c"
        var $112=$end_addr_i66; //@line 131 "xmltok_impl.c"
        var $113=($111)==($112); //@line 131 "xmltok_impl.c"
        if ($113) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 131 "xmltok_impl.c"
      case 31: // $bb_i69
        $3=-1; //@line 132 "xmltok_impl.c"
        __label__ = 74; break; //@line 132 "xmltok_impl.c"
      case 32: // $bb1_i70
        var $114=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $115=$114+1; //@line 133 "xmltok_impl.c"
        var $116=HEAP[$115]; //@line 133 "xmltok_impl.c"
        var $117=($116)==0; //@line 133 "xmltok_impl.c"
        if ($117) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 133 "xmltok_impl.c"
      case 33: // $bb2_i71
        var $118=$enc_addr_i64; //@line 133 "xmltok_impl.c"
        var $119=$118; //@line 133 "xmltok_impl.c"
        var $120=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $121=HEAP[$120]; //@line 133 "xmltok_impl.c"
        var $122=($121); //@line 133 "xmltok_impl.c"
        var $123=$119+72; //@line 133 "xmltok_impl.c"
        var $124=$123+$122; //@line 133 "xmltok_impl.c"
        var $125=HEAP[$124]; //@line 133 "xmltok_impl.c"
        var $126=($125); //@line 133 "xmltok_impl.c"
        $iftmp_461_i=$126; //@line 133 "xmltok_impl.c"
        __lastLabel__ = 33; __label__ = 41; break; //@line 133 "xmltok_impl.c"
      case 34: // $bb3_i72
        var $127=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $128=$127; //@line 133 "xmltok_impl.c"
        var $129=HEAP[$128]; //@line 133 "xmltok_impl.c"
        var $130=($129); //@line 133 "xmltok_impl.c"
        var $131=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $132=$131+1; //@line 133 "xmltok_impl.c"
        var $133=HEAP[$132]; //@line 133 "xmltok_impl.c"
        var $134=($133); //@line 133 "xmltok_impl.c"
        var $135=((($134)) & 255); //@line 133 "xmltok_impl.c"
        var $136=((($130)) & 255); //@line 133 "xmltok_impl.c"
        $hi_addr_i_i61=$135;
        $lo_addr_i_i62=$136;
        var $137=$hi_addr_i_i61; //@line 518 "xmltok.c"
        var $138=($137); //@line 518 "xmltok.c"
        if ($138 == 216) {
          __label__ = 35; break;
        }
        else if ($138 == 217) {
          __label__ = 35; break;
        }
        else if ($138 == 218) {
          __label__ = 35; break;
        }
        else if ($138 == 219) {
          __label__ = 35; break;
        }
        else if ($138 == 220) {
          __label__ = 36; break;
        }
        else if ($138 == 221) {
          __label__ = 36; break;
        }
        else if ($138 == 222) {
          __label__ = 36; break;
        }
        else if ($138 == 223) {
          __label__ = 36; break;
        }
        else if ($138 == 255) {
          __label__ = 37; break;
        }
        else {
        __label__ = 39; break;
        }
        
      case 35: // $bb_i_i73
        $2=7; //@line 520 "xmltok.c"
        __label__ = 40; break; //@line 520 "xmltok.c"
      case 36: // $bb1_i_i74
        $2=8; //@line 522 "xmltok.c"
        __label__ = 40; break; //@line 522 "xmltok.c"
      case 37: // $bb2_i_i77
        var $139=$lo_addr_i_i62; //@line 524 "xmltok.c"
        var $140=($139); //@line 524 "xmltok.c"
        var $_off_i_i75=($140) + -254;
        var $switch_i_i76=($_off_i_i75) < 2;
        if ($switch_i_i76) { __label__ = 38; break; } else { __label__ = 39; break; }
      case 38: // $bb3_i_i78
        $2=0; //@line 527 "xmltok.c"
        __label__ = 40; break; //@line 527 "xmltok.c"
      case 39: // $bb4_i_i79
        $2=29; //@line 531 "xmltok.c"
        __label__ = 40; break; //@line 531 "xmltok.c"
      case 40: // $unicode_byte_type_exit_i81
        var $141=$2; //@line 520 "xmltok.c"
        $retval_i_i63=$141; //@line 520 "xmltok.c"
        var $retval6_i_i80=$retval_i_i63; //@line 520 "xmltok.c"
        $iftmp_461_i=$retval6_i_i80; //@line 133 "xmltok_impl.c"
        __lastLabel__ = 40; __label__ = 41; break; //@line 133 "xmltok_impl.c"
      case 41: // $bb4_i82
        var $142=__lastLabel__ == 40 ? $retval6_i_i80 : ($126);
        if ($142 == 20) {
          __label__ = 43; break;
        }
        else if ($142 == 22) {
          __label__ = 44; break;
        }
        else if ($142 == 24) {
          __label__ = 44; break;
        }
        else if ($142 == 27) {
          __label__ = 42; break;
        }
        else {
        __label__ = 45; break;
        }
        
      case 42: // $bb5_i83
        var $143=$ptr_addr_i65; //@line 135 "xmltok_impl.c"
        var $144=$143+2; //@line 135 "xmltok_impl.c"
        var $145=$enc_addr_i64; //@line 135 "xmltok_impl.c"
        var $146=$end_addr_i66; //@line 135 "xmltok_impl.c"
        var $147=$nextTokPtr_addr_i67; //@line 135 "xmltok_impl.c"
        var $148=_little2_scanComment($145, $144, $146, $147); //@line 135 "xmltok_impl.c"
        $3=$148; //@line 135 "xmltok_impl.c"
        __label__ = 74; break; //@line 135 "xmltok_impl.c"
      case 43: // $bb6_i84
        var $149=$ptr_addr_i65; //@line 137 "xmltok_impl.c"
        var $150=$149+2; //@line 137 "xmltok_impl.c"
        var $151=$nextTokPtr_addr_i67; //@line 137 "xmltok_impl.c"
        HEAP[$151]=$150; //@line 137 "xmltok_impl.c"
        $3=33; //@line 138 "xmltok_impl.c"
        __label__ = 74; break; //@line 138 "xmltok_impl.c"
      case 44: // $bb7_i85
        var $152=$ptr_addr_i65; //@line 141 "xmltok_impl.c"
        var $153=$152+2; //@line 141 "xmltok_impl.c"
        $ptr_addr_i65=$153; //@line 141 "xmltok_impl.c"
        __label__ = 72; break; //@line 141 "xmltok_impl.c"
      case 45: // $bb8_i86
        var $154=$nextTokPtr_addr_i67; //@line 144 "xmltok_impl.c"
        var $155=$ptr_addr_i65; //@line 144 "xmltok_impl.c"
        HEAP[$154]=$155; //@line 144 "xmltok_impl.c"
        $3=0; //@line 145 "xmltok_impl.c"
        __label__ = 74; break; //@line 145 "xmltok_impl.c"
      case 46: // $bb9_i87
        var $156=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $157=$156+1; //@line 148 "xmltok_impl.c"
        var $158=HEAP[$157]; //@line 148 "xmltok_impl.c"
        var $159=($158)==0; //@line 148 "xmltok_impl.c"
        if ($159) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 148 "xmltok_impl.c"
      case 47: // $bb10_i88
        var $160=$enc_addr_i64; //@line 148 "xmltok_impl.c"
        var $161=$160; //@line 148 "xmltok_impl.c"
        var $162=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $163=HEAP[$162]; //@line 148 "xmltok_impl.c"
        var $164=($163); //@line 148 "xmltok_impl.c"
        var $165=$161+72; //@line 148 "xmltok_impl.c"
        var $166=$165+$164; //@line 148 "xmltok_impl.c"
        var $167=HEAP[$166]; //@line 148 "xmltok_impl.c"
        var $168=($167); //@line 148 "xmltok_impl.c"
        $iftmp_463_i=$168; //@line 148 "xmltok_impl.c"
        __lastLabel__ = 47; __label__ = 55; break; //@line 148 "xmltok_impl.c"
      case 48: // $bb11_i89
        var $169=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $170=$169; //@line 148 "xmltok_impl.c"
        var $171=HEAP[$170]; //@line 148 "xmltok_impl.c"
        var $172=($171); //@line 148 "xmltok_impl.c"
        var $173=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $174=$173+1; //@line 148 "xmltok_impl.c"
        var $175=HEAP[$174]; //@line 148 "xmltok_impl.c"
        var $176=($175); //@line 148 "xmltok_impl.c"
        var $177=((($176)) & 255); //@line 148 "xmltok_impl.c"
        var $178=((($172)) & 255); //@line 148 "xmltok_impl.c"
        $hi_addr_i13_i=$177;
        $lo_addr_i14_i=$178;
        var $179=$hi_addr_i13_i; //@line 518 "xmltok.c"
        var $180=($179); //@line 518 "xmltok.c"
        if ($180 == 216) {
          __label__ = 49; break;
        }
        else if ($180 == 217) {
          __label__ = 49; break;
        }
        else if ($180 == 218) {
          __label__ = 49; break;
        }
        else if ($180 == 219) {
          __label__ = 49; break;
        }
        else if ($180 == 220) {
          __label__ = 50; break;
        }
        else if ($180 == 221) {
          __label__ = 50; break;
        }
        else if ($180 == 222) {
          __label__ = 50; break;
        }
        else if ($180 == 223) {
          __label__ = 50; break;
        }
        else if ($180 == 255) {
          __label__ = 51; break;
        }
        else {
        __label__ = 53; break;
        }
        
      case 49: // $bb_i16_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 54; break; //@line 520 "xmltok.c"
      case 50: // $bb1_i17_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 54; break; //@line 522 "xmltok.c"
      case 51: // $bb2_i20_i
        var $181=$lo_addr_i14_i; //@line 524 "xmltok.c"
        var $182=($181); //@line 524 "xmltok.c"
        var $_off_i18_i=($182) + -254;
        var $switch_i19_i=($_off_i18_i) < 2;
        if ($switch_i19_i) { __label__ = 52; break; } else { __label__ = 53; break; }
      case 52: // $bb3_i21_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 54; break; //@line 527 "xmltok.c"
      case 53: // $bb4_i22_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 54; break; //@line 531 "xmltok.c"
      case 54: // $unicode_byte_type_exit24_i
        var $183=$0; //@line 520 "xmltok.c"
        $retval_i15_i=$183; //@line 520 "xmltok.c"
        var $retval6_i23_i=$retval_i15_i; //@line 520 "xmltok.c"
        $iftmp_463_i=$retval6_i23_i; //@line 148 "xmltok_impl.c"
        __lastLabel__ = 54; __label__ = 55; break; //@line 148 "xmltok_impl.c"
      case 55: // $bb12_i90
        var $184=__lastLabel__ == 54 ? $retval6_i23_i : ($168);
        if ($184 == 9) {
          __label__ = 69; break;
        }
        else if ($184 == 10) {
          __label__ = 69; break;
        }
        else if ($184 == 21) {
          __label__ = 69; break;
        }
        else if ($184 == 22) {
          __label__ = 70; break;
        }
        else if ($184 == 24) {
          __label__ = 70; break;
        }
        else if ($184 == 30) {
          __label__ = 56; break;
        }
        else {
        __label__ = 71; break;
        }
        
      case 56: // $bb13_i91
        var $185=$ptr_addr_i65; //@line 150 "xmltok_impl.c"
        var $186=$185+2; //@line 150 "xmltok_impl.c"
        var $187=$end_addr_i66; //@line 150 "xmltok_impl.c"
        var $188=($186)==($187); //@line 150 "xmltok_impl.c"
        if ($188) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 150 "xmltok_impl.c"
      case 57: // $bb14_i92
        $3=-1; //@line 151 "xmltok_impl.c"
        __label__ = 74; break; //@line 151 "xmltok_impl.c"
      case 58: // $bb15_i93
        var $189=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $190=$189+2; //@line 153 "xmltok_impl.c"
        var $191=$190+1; //@line 153 "xmltok_impl.c"
        var $192=HEAP[$191]; //@line 153 "xmltok_impl.c"
        var $193=($192)==0; //@line 153 "xmltok_impl.c"
        if ($193) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 153 "xmltok_impl.c"
      case 59: // $bb16_i94
        var $194=$enc_addr_i64; //@line 153 "xmltok_impl.c"
        var $195=$194; //@line 153 "xmltok_impl.c"
        var $196=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $197=$196+2; //@line 153 "xmltok_impl.c"
        var $198=HEAP[$197]; //@line 153 "xmltok_impl.c"
        var $199=($198); //@line 153 "xmltok_impl.c"
        var $200=$195+72; //@line 153 "xmltok_impl.c"
        var $201=$200+$199; //@line 153 "xmltok_impl.c"
        var $202=HEAP[$201]; //@line 153 "xmltok_impl.c"
        var $203=($202); //@line 153 "xmltok_impl.c"
        $iftmp_465_i=$203; //@line 153 "xmltok_impl.c"
        __lastLabel__ = 59; __label__ = 67; break; //@line 153 "xmltok_impl.c"
      case 60: // $bb17_i95
        var $204=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $205=$204+2; //@line 153 "xmltok_impl.c"
        var $206=$205; //@line 153 "xmltok_impl.c"
        var $207=HEAP[$206]; //@line 153 "xmltok_impl.c"
        var $208=($207); //@line 153 "xmltok_impl.c"
        var $209=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $210=$209+2; //@line 153 "xmltok_impl.c"
        var $211=$210+1; //@line 153 "xmltok_impl.c"
        var $212=HEAP[$211]; //@line 153 "xmltok_impl.c"
        var $213=($212); //@line 153 "xmltok_impl.c"
        var $214=((($213)) & 255); //@line 153 "xmltok_impl.c"
        var $215=((($208)) & 255); //@line 153 "xmltok_impl.c"
        $hi_addr_i1_i58=$214;
        $lo_addr_i2_i59=$215;
        var $216=$hi_addr_i1_i58; //@line 518 "xmltok.c"
        var $217=($216); //@line 518 "xmltok.c"
        if ($217 == 216) {
          __label__ = 61; break;
        }
        else if ($217 == 217) {
          __label__ = 61; break;
        }
        else if ($217 == 218) {
          __label__ = 61; break;
        }
        else if ($217 == 219) {
          __label__ = 61; break;
        }
        else if ($217 == 220) {
          __label__ = 62; break;
        }
        else if ($217 == 221) {
          __label__ = 62; break;
        }
        else if ($217 == 222) {
          __label__ = 62; break;
        }
        else if ($217 == 223) {
          __label__ = 62; break;
        }
        else if ($217 == 255) {
          __label__ = 63; break;
        }
        else {
        __label__ = 65; break;
        }
        
      case 61: // $bb_i4_i96
        $1=7; //@line 520 "xmltok.c"
        __label__ = 66; break; //@line 520 "xmltok.c"
      case 62: // $bb1_i5_i97
        $1=8; //@line 522 "xmltok.c"
        __label__ = 66; break; //@line 522 "xmltok.c"
      case 63: // $bb2_i8_i100
        var $218=$lo_addr_i2_i59; //@line 524 "xmltok.c"
        var $219=($218); //@line 524 "xmltok.c"
        var $_off_i6_i98=($219) + -254;
        var $switch_i7_i99=($_off_i6_i98) < 2;
        if ($switch_i7_i99) { __label__ = 64; break; } else { __label__ = 65; break; }
      case 64: // $bb3_i9_i101
        $1=0; //@line 527 "xmltok.c"
        __label__ = 66; break; //@line 527 "xmltok.c"
      case 65: // $bb4_i10_i102
        $1=29; //@line 531 "xmltok.c"
        __label__ = 66; break; //@line 531 "xmltok.c"
      case 66: // $unicode_byte_type_exit12_i104
        var $220=$1; //@line 520 "xmltok.c"
        $retval_i3_i60=$220; //@line 520 "xmltok.c"
        var $retval6_i11_i103=$retval_i3_i60; //@line 520 "xmltok.c"
        $iftmp_465_i=$retval6_i11_i103; //@line 153 "xmltok_impl.c"
        __lastLabel__ = 66; __label__ = 67; break; //@line 153 "xmltok_impl.c"
      case 67: // $bb18_i105
        var $221=__lastLabel__ == 66 ? $retval6_i11_i103 : ($203);
        if ($221 == 9) {
          __label__ = 68; break;
        }
        else if ($221 == 10) {
          __label__ = 68; break;
        }
        else if ($221 == 21) {
          __label__ = 68; break;
        }
        else if ($221 == 30) {
          __label__ = 68; break;
        }
        else {
        __label__ = 69; break;
        }
        
      case 68: // $bb19_i106
        var $222=$nextTokPtr_addr_i67; //@line 155 "xmltok_impl.c"
        var $223=$ptr_addr_i65; //@line 155 "xmltok_impl.c"
        HEAP[$222]=$223; //@line 155 "xmltok_impl.c"
        $3=0; //@line 156 "xmltok_impl.c"
        __label__ = 74; break; //@line 156 "xmltok_impl.c"
      case 69: // $bb20_i107
        var $224=$nextTokPtr_addr_i67; //@line 160 "xmltok_impl.c"
        var $225=$ptr_addr_i65; //@line 160 "xmltok_impl.c"
        HEAP[$224]=$225; //@line 160 "xmltok_impl.c"
        $3=16; //@line 161 "xmltok_impl.c"
        __label__ = 74; break; //@line 161 "xmltok_impl.c"
      case 70: // $bb21_i108
        var $226=$ptr_addr_i65; //@line 164 "xmltok_impl.c"
        var $227=$226+2; //@line 164 "xmltok_impl.c"
        $ptr_addr_i65=$227; //@line 164 "xmltok_impl.c"
        __label__ = 72; break; //@line 164 "xmltok_impl.c"
      case 71: // $bb22_i109
        var $228=$nextTokPtr_addr_i67; //@line 167 "xmltok_impl.c"
        var $229=$ptr_addr_i65; //@line 167 "xmltok_impl.c"
        HEAP[$228]=$229; //@line 167 "xmltok_impl.c"
        $3=0; //@line 168 "xmltok_impl.c"
        __label__ = 74; break; //@line 168 "xmltok_impl.c"
      case 72: // $bb23_i110
        var $230=$ptr_addr_i65; //@line 147 "xmltok_impl.c"
        var $231=$end_addr_i66; //@line 147 "xmltok_impl.c"
        var $232=($230)!=($231); //@line 147 "xmltok_impl.c"
        if ($232) { __label__ = 46; break; } else { __label__ = 73; break; } //@line 147 "xmltok_impl.c"
      case 73: // $bb24_i111
        $3=-1; //@line 171 "xmltok_impl.c"
        __label__ = 74; break; //@line 171 "xmltok_impl.c"
      case 74: // $little2_scanDecl_exit
        var $233=$3; //@line 132 "xmltok_impl.c"
        $retval_i68=$233; //@line 132 "xmltok_impl.c"
        var $retval26_i=$retval_i68; //@line 132 "xmltok_impl.c"
        $12=$retval26_i; //@line 996 "xmltok_impl.c"
        __label__ = 230; break; //@line 996 "xmltok_impl.c"
      case 75: // $bb18
        var $234=$ptr_addr; //@line 998 "xmltok_impl.c"
        var $235=$234+2; //@line 998 "xmltok_impl.c"
        var $236=$enc_addr; //@line 998 "xmltok_impl.c"
        var $237=$end_addr; //@line 998 "xmltok_impl.c"
        var $238=$nextTokPtr_addr; //@line 998 "xmltok_impl.c"
        var $239=_little2_scanPi($236, $235, $237, $238); //@line 998 "xmltok_impl.c"
        $12=$239; //@line 998 "xmltok_impl.c"
        __label__ = 230; break; //@line 998 "xmltok_impl.c"
      case 76: // $bb19
        var $240=$ptr_addr; //@line 1005 "xmltok_impl.c"
        var $241=$240+-2; //@line 1005 "xmltok_impl.c"
        var $242=$nextTokPtr_addr; //@line 1005 "xmltok_impl.c"
        HEAP[$242]=$241; //@line 1005 "xmltok_impl.c"
        $12=29; //@line 1006 "xmltok_impl.c"
        __label__ = 230; break; //@line 1006 "xmltok_impl.c"
      case 77: // $bb20
        var $243=$nextTokPtr_addr; //@line 1008 "xmltok_impl.c"
        var $244=$ptr_addr; //@line 1008 "xmltok_impl.c"
        HEAP[$243]=$244; //@line 1008 "xmltok_impl.c"
        $12=0; //@line 1009 "xmltok_impl.c"
        __label__ = 230; break; //@line 1009 "xmltok_impl.c"
      case 78: // $bb21
        var $245=$ptr_addr; //@line 1012 "xmltok_impl.c"
        var $246=$245+2; //@line 1012 "xmltok_impl.c"
        var $247=$end_addr; //@line 1012 "xmltok_impl.c"
        var $248=($246)==($247); //@line 1012 "xmltok_impl.c"
        if ($248) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 1012 "xmltok_impl.c"
      case 79: // $bb22
        var $249=$nextTokPtr_addr; //@line 1013 "xmltok_impl.c"
        var $250=$end_addr; //@line 1013 "xmltok_impl.c"
        HEAP[$249]=$250; //@line 1013 "xmltok_impl.c"
        $12=-15; //@line 1015 "xmltok_impl.c"
        __label__ = 230; break; //@line 1015 "xmltok_impl.c"
      case 80: // $bb23
        var $251=$ptr_addr; //@line 1020 "xmltok_impl.c"
        var $252=$251+2; //@line 1020 "xmltok_impl.c"
        $ptr_addr=$252; //@line 1020 "xmltok_impl.c"
        var $253=$ptr_addr; //@line 1021 "xmltok_impl.c"
        var $254=$end_addr; //@line 1021 "xmltok_impl.c"
        var $255=($253)==($254); //@line 1021 "xmltok_impl.c"
        if ($255) { __label__ = 93; break; } else { __label__ = 81; break; } //@line 1021 "xmltok_impl.c"
      case 81: // $bb24
        var $256=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $257=$256+1; //@line 1023 "xmltok_impl.c"
        var $258=HEAP[$257]; //@line 1023 "xmltok_impl.c"
        var $259=($258)==0; //@line 1023 "xmltok_impl.c"
        if ($259) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 1023 "xmltok_impl.c"
      case 82: // $bb25
        var $260=$enc_addr; //@line 1023 "xmltok_impl.c"
        var $261=$260; //@line 1023 "xmltok_impl.c"
        var $262=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $263=HEAP[$262]; //@line 1023 "xmltok_impl.c"
        var $264=($263); //@line 1023 "xmltok_impl.c"
        var $265=$261+72; //@line 1023 "xmltok_impl.c"
        var $266=$265+$264; //@line 1023 "xmltok_impl.c"
        var $267=HEAP[$266]; //@line 1023 "xmltok_impl.c"
        var $268=($267); //@line 1023 "xmltok_impl.c"
        $iftmp_777=$268; //@line 1023 "xmltok_impl.c"
        __lastLabel__ = 82; __label__ = 90; break; //@line 1023 "xmltok_impl.c"
      case 83: // $bb26
        var $269=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $270=$269; //@line 1023 "xmltok_impl.c"
        var $271=HEAP[$270]; //@line 1023 "xmltok_impl.c"
        var $272=($271); //@line 1023 "xmltok_impl.c"
        var $273=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $274=$273+1; //@line 1023 "xmltok_impl.c"
        var $275=HEAP[$274]; //@line 1023 "xmltok_impl.c"
        var $276=($275); //@line 1023 "xmltok_impl.c"
        var $277=((($276)) & 255); //@line 1023 "xmltok_impl.c"
        var $278=((($272)) & 255); //@line 1023 "xmltok_impl.c"
        $hi_addr_i45=$277;
        $lo_addr_i46=$278;
        var $279=$hi_addr_i45; //@line 518 "xmltok.c"
        var $280=($279); //@line 518 "xmltok.c"
        if ($280 == 216) {
          __label__ = 84; break;
        }
        else if ($280 == 217) {
          __label__ = 84; break;
        }
        else if ($280 == 218) {
          __label__ = 84; break;
        }
        else if ($280 == 219) {
          __label__ = 84; break;
        }
        else if ($280 == 220) {
          __label__ = 85; break;
        }
        else if ($280 == 221) {
          __label__ = 85; break;
        }
        else if ($280 == 222) {
          __label__ = 85; break;
        }
        else if ($280 == 223) {
          __label__ = 85; break;
        }
        else if ($280 == 255) {
          __label__ = 86; break;
        }
        else {
        __label__ = 88; break;
        }
        
      case 84: // $bb_i48
        $4=7; //@line 520 "xmltok.c"
        __label__ = 89; break; //@line 520 "xmltok.c"
      case 85: // $bb1_i49
        $4=8; //@line 522 "xmltok.c"
        __label__ = 89; break; //@line 522 "xmltok.c"
      case 86: // $bb2_i52
        var $281=$lo_addr_i46; //@line 524 "xmltok.c"
        var $282=($281); //@line 524 "xmltok.c"
        var $_off_i50=($282) + -254;
        var $switch_i51=($_off_i50) < 2;
        if ($switch_i51) { __label__ = 87; break; } else { __label__ = 88; break; }
      case 87: // $bb3_i53
        $4=0; //@line 527 "xmltok.c"
        __label__ = 89; break; //@line 527 "xmltok.c"
      case 88: // $bb4_i54
        $4=29; //@line 531 "xmltok.c"
        __label__ = 89; break; //@line 531 "xmltok.c"
      case 89: // $unicode_byte_type_exit57
        var $283=$4; //@line 520 "xmltok.c"
        $retval_i47=$283; //@line 520 "xmltok.c"
        var $retval6_i55=$retval_i47; //@line 520 "xmltok.c"
        $iftmp_777=$retval6_i55; //@line 1023 "xmltok_impl.c"
        __lastLabel__ = 89; __label__ = 90; break; //@line 1023 "xmltok_impl.c"
      case 90: // $bb27
        var $284=__lastLabel__ == 89 ? $retval6_i55 : ($268);
        if ($284 == 9) {
          __label__ = 91; break;
        }
        else if ($284 == 10) {
          __label__ = 80; break;
        }
        else if ($284 == 21) {
          __label__ = 80; break;
        }
        else {
        __label__ = 92; break;
        }
        
      case 91: // $bb29
        var $285=$ptr_addr; //@line 1028 "xmltok_impl.c"
        var $286=$285+2; //@line 1028 "xmltok_impl.c"
        var $287=$end_addr; //@line 1028 "xmltok_impl.c"
        var $288=($286)!=($287); //@line 1028 "xmltok_impl.c"
        if ($288) { __label__ = 80; break; } else { __label__ = 92; break; } //@line 1028 "xmltok_impl.c"
      case 92: // $bb30
        var $289=$nextTokPtr_addr; //@line 1032 "xmltok_impl.c"
        var $290=$ptr_addr; //@line 1032 "xmltok_impl.c"
        HEAP[$289]=$290; //@line 1032 "xmltok_impl.c"
        $12=15; //@line 1033 "xmltok_impl.c"
        __label__ = 230; break; //@line 1033 "xmltok_impl.c"
      case 93: // $bb32
        var $291=$nextTokPtr_addr; //@line 1036 "xmltok_impl.c"
        var $292=$ptr_addr; //@line 1036 "xmltok_impl.c"
        HEAP[$291]=$292; //@line 1036 "xmltok_impl.c"
        $12=15; //@line 1037 "xmltok_impl.c"
        __label__ = 230; break; //@line 1037 "xmltok_impl.c"
      case 94: // $bb33
        var $293=$ptr_addr; //@line 1039 "xmltok_impl.c"
        var $294=$293+2; //@line 1039 "xmltok_impl.c"
        var $295=$enc_addr; //@line 1039 "xmltok_impl.c"
        var $296=$end_addr; //@line 1039 "xmltok_impl.c"
        var $297=$nextTokPtr_addr; //@line 1039 "xmltok_impl.c"
        var $298=_little2_scanPercent($295, $294, $296, $297); //@line 1039 "xmltok_impl.c"
        $12=$298; //@line 1039 "xmltok_impl.c"
        __label__ = 230; break; //@line 1039 "xmltok_impl.c"
      case 95: // $bb34
        var $299=$ptr_addr; //@line 1041 "xmltok_impl.c"
        var $300=$299+2; //@line 1041 "xmltok_impl.c"
        var $301=$nextTokPtr_addr; //@line 1041 "xmltok_impl.c"
        HEAP[$301]=$300; //@line 1041 "xmltok_impl.c"
        $12=38; //@line 1042 "xmltok_impl.c"
        __label__ = 230; break; //@line 1042 "xmltok_impl.c"
      case 96: // $bb35
        var $302=$ptr_addr; //@line 1044 "xmltok_impl.c"
        var $303=$302+2; //@line 1044 "xmltok_impl.c"
        var $304=$nextTokPtr_addr; //@line 1044 "xmltok_impl.c"
        HEAP[$304]=$303; //@line 1044 "xmltok_impl.c"
        $12=25; //@line 1045 "xmltok_impl.c"
        __label__ = 230; break; //@line 1045 "xmltok_impl.c"
      case 97: // $bb36
        var $305=$ptr_addr; //@line 1047 "xmltok_impl.c"
        var $306=$305+2; //@line 1047 "xmltok_impl.c"
        $ptr_addr=$306; //@line 1047 "xmltok_impl.c"
        var $307=$ptr_addr; //@line 1048 "xmltok_impl.c"
        var $308=$end_addr; //@line 1048 "xmltok_impl.c"
        var $309=($307)==($308); //@line 1048 "xmltok_impl.c"
        if ($309) { __label__ = 98; break; } else { __label__ = 99; break; } //@line 1048 "xmltok_impl.c"
      case 98: // $bb37
        $12=-26; //@line 1049 "xmltok_impl.c"
        __label__ = 230; break; //@line 1049 "xmltok_impl.c"
      case 99: // $bb38
        var $310=$ptr_addr; //@line 1050 "xmltok_impl.c"
        var $311=$310+1; //@line 1050 "xmltok_impl.c"
        var $312=HEAP[$311]; //@line 1050 "xmltok_impl.c"
        var $313=($312)==0; //@line 1050 "xmltok_impl.c"
        if ($313) { __label__ = 100; break; } else { __label__ = 106; break; } //@line 1050 "xmltok_impl.c"
      case 100: // $bb39
        var $314=$ptr_addr; //@line 1050 "xmltok_impl.c"
        var $315=$314; //@line 1050 "xmltok_impl.c"
        var $316=HEAP[$315]; //@line 1050 "xmltok_impl.c"
        var $317=($316)==93; //@line 1050 "xmltok_impl.c"
        if ($317) { __label__ = 101; break; } else { __label__ = 106; break; } //@line 1050 "xmltok_impl.c"
      case 101: // $bb40
        var $318=$ptr_addr; //@line 1051 "xmltok_impl.c"
        var $319=$318+2; //@line 1051 "xmltok_impl.c"
        var $320=$end_addr; //@line 1051 "xmltok_impl.c"
        var $321=($319)==($320); //@line 1051 "xmltok_impl.c"
        if ($321) { __label__ = 102; break; } else { __label__ = 103; break; } //@line 1051 "xmltok_impl.c"
      case 102: // $bb41
        $12=-1; //@line 1052 "xmltok_impl.c"
        __label__ = 230; break; //@line 1052 "xmltok_impl.c"
      case 103: // $bb42
        var $322=$ptr_addr; //@line 1053 "xmltok_impl.c"
        var $323=$322+2; //@line 1053 "xmltok_impl.c"
        var $324=$323+1; //@line 1053 "xmltok_impl.c"
        var $325=HEAP[$324]; //@line 1053 "xmltok_impl.c"
        var $326=($325)==0; //@line 1053 "xmltok_impl.c"
        if ($326) { __label__ = 104; break; } else { __label__ = 106; break; } //@line 1053 "xmltok_impl.c"
      case 104: // $bb43
        var $327=$ptr_addr; //@line 1053 "xmltok_impl.c"
        var $328=$327+2; //@line 1053 "xmltok_impl.c"
        var $329=$328; //@line 1053 "xmltok_impl.c"
        var $330=HEAP[$329]; //@line 1053 "xmltok_impl.c"
        var $331=($330)==62; //@line 1053 "xmltok_impl.c"
        if ($331) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 1053 "xmltok_impl.c"
      case 105: // $bb44
        var $332=$ptr_addr; //@line 1054 "xmltok_impl.c"
        var $333=$332+4; //@line 1054 "xmltok_impl.c"
        var $334=$nextTokPtr_addr; //@line 1054 "xmltok_impl.c"
        HEAP[$334]=$333; //@line 1054 "xmltok_impl.c"
        $12=34; //@line 1055 "xmltok_impl.c"
        __label__ = 230; break; //@line 1055 "xmltok_impl.c"
      case 106: // $bb45
        var $335=$nextTokPtr_addr; //@line 1058 "xmltok_impl.c"
        var $336=$ptr_addr; //@line 1058 "xmltok_impl.c"
        HEAP[$335]=$336; //@line 1058 "xmltok_impl.c"
        $12=26; //@line 1059 "xmltok_impl.c"
        __label__ = 230; break; //@line 1059 "xmltok_impl.c"
      case 107: // $bb46
        var $337=$ptr_addr; //@line 1061 "xmltok_impl.c"
        var $338=$337+2; //@line 1061 "xmltok_impl.c"
        var $339=$nextTokPtr_addr; //@line 1061 "xmltok_impl.c"
        HEAP[$339]=$338; //@line 1061 "xmltok_impl.c"
        $12=23; //@line 1062 "xmltok_impl.c"
        __label__ = 230; break; //@line 1062 "xmltok_impl.c"
      case 108: // $bb47
        var $340=$ptr_addr; //@line 1064 "xmltok_impl.c"
        var $341=$340+2; //@line 1064 "xmltok_impl.c"
        $ptr_addr=$341; //@line 1064 "xmltok_impl.c"
        var $342=$ptr_addr; //@line 1065 "xmltok_impl.c"
        var $343=$end_addr; //@line 1065 "xmltok_impl.c"
        var $344=($342)==($343); //@line 1065 "xmltok_impl.c"
        if ($344) { __label__ = 109; break; } else { __label__ = 110; break; } //@line 1065 "xmltok_impl.c"
      case 109: // $bb48
        $12=-24; //@line 1066 "xmltok_impl.c"
        __label__ = 230; break; //@line 1066 "xmltok_impl.c"
      case 110: // $bb49
        var $345=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $346=$345+1; //@line 1067 "xmltok_impl.c"
        var $347=HEAP[$346]; //@line 1067 "xmltok_impl.c"
        var $348=($347)==0; //@line 1067 "xmltok_impl.c"
        if ($348) { __label__ = 111; break; } else { __label__ = 112; break; } //@line 1067 "xmltok_impl.c"
      case 111: // $bb50
        var $349=$enc_addr; //@line 1067 "xmltok_impl.c"
        var $350=$349; //@line 1067 "xmltok_impl.c"
        var $351=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $352=HEAP[$351]; //@line 1067 "xmltok_impl.c"
        var $353=($352); //@line 1067 "xmltok_impl.c"
        var $354=$350+72; //@line 1067 "xmltok_impl.c"
        var $355=$354+$353; //@line 1067 "xmltok_impl.c"
        var $356=HEAP[$355]; //@line 1067 "xmltok_impl.c"
        var $357=($356); //@line 1067 "xmltok_impl.c"
        $iftmp_779=$357; //@line 1067 "xmltok_impl.c"
        __lastLabel__ = 111; __label__ = 119; break; //@line 1067 "xmltok_impl.c"
      case 112: // $bb51
        var $358=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $359=$358; //@line 1067 "xmltok_impl.c"
        var $360=HEAP[$359]; //@line 1067 "xmltok_impl.c"
        var $361=($360); //@line 1067 "xmltok_impl.c"
        var $362=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $363=$362+1; //@line 1067 "xmltok_impl.c"
        var $364=HEAP[$363]; //@line 1067 "xmltok_impl.c"
        var $365=($364); //@line 1067 "xmltok_impl.c"
        var $366=((($365)) & 255); //@line 1067 "xmltok_impl.c"
        var $367=((($361)) & 255); //@line 1067 "xmltok_impl.c"
        $hi_addr_i19=$366;
        $lo_addr_i20=$367;
        var $368=$hi_addr_i19; //@line 518 "xmltok.c"
        var $369=($368); //@line 518 "xmltok.c"
        if ($369 == 216) {
          __label__ = 113; break;
        }
        else if ($369 == 217) {
          __label__ = 113; break;
        }
        else if ($369 == 218) {
          __label__ = 113; break;
        }
        else if ($369 == 219) {
          __label__ = 113; break;
        }
        else if ($369 == 220) {
          __label__ = 114; break;
        }
        else if ($369 == 221) {
          __label__ = 114; break;
        }
        else if ($369 == 222) {
          __label__ = 114; break;
        }
        else if ($369 == 223) {
          __label__ = 114; break;
        }
        else if ($369 == 255) {
          __label__ = 115; break;
        }
        else {
        __label__ = 117; break;
        }
        
      case 113: // $bb_i22
        $6=7; //@line 520 "xmltok.c"
        __label__ = 118; break; //@line 520 "xmltok.c"
      case 114: // $bb1_i23
        $6=8; //@line 522 "xmltok.c"
        __label__ = 118; break; //@line 522 "xmltok.c"
      case 115: // $bb2_i26
        var $370=$lo_addr_i20; //@line 524 "xmltok.c"
        var $371=($370); //@line 524 "xmltok.c"
        var $_off_i24=($371) + -254;
        var $switch_i25=($_off_i24) < 2;
        if ($switch_i25) { __label__ = 116; break; } else { __label__ = 117; break; }
      case 116: // $bb3_i27
        $6=0; //@line 527 "xmltok.c"
        __label__ = 118; break; //@line 527 "xmltok.c"
      case 117: // $bb4_i28
        $6=29; //@line 531 "xmltok.c"
        __label__ = 118; break; //@line 531 "xmltok.c"
      case 118: // $unicode_byte_type_exit31
        var $372=$6; //@line 520 "xmltok.c"
        $retval_i21=$372; //@line 520 "xmltok.c"
        var $retval6_i29=$retval_i21; //@line 520 "xmltok.c"
        $iftmp_779=$retval6_i29; //@line 1067 "xmltok_impl.c"
        __lastLabel__ = 118; __label__ = 119; break; //@line 1067 "xmltok_impl.c"
      case 119: // $bb52
        var $373=__lastLabel__ == 118 ? $retval6_i29 : ($357);
        if ($373 == 9) {
          __label__ = 123; break;
        }
        else if ($373 == 10) {
          __label__ = 123; break;
        }
        else if ($373 == 11) {
          __label__ = 123; break;
        }
        else if ($373 == 15) {
          __label__ = 121; break;
        }
        else if ($373 == 21) {
          __label__ = 123; break;
        }
        else if ($373 == 32) {
          __label__ = 123; break;
        }
        else if ($373 == 33) {
          __label__ = 120; break;
        }
        else if ($373 == 34) {
          __label__ = 122; break;
        }
        else if ($373 == 35) {
          __label__ = 123; break;
        }
        else if ($373 == 36) {
          __label__ = 123; break;
        }
        else {
        __label__ = 124; break;
        }
        
      case 120: // $bb53
        var $374=$ptr_addr; //@line 1069 "xmltok_impl.c"
        var $375=$374+2; //@line 1069 "xmltok_impl.c"
        var $376=$nextTokPtr_addr; //@line 1069 "xmltok_impl.c"
        HEAP[$376]=$375; //@line 1069 "xmltok_impl.c"
        $12=36; //@line 1070 "xmltok_impl.c"
        __label__ = 230; break; //@line 1070 "xmltok_impl.c"
      case 121: // $bb54
        var $377=$ptr_addr; //@line 1072 "xmltok_impl.c"
        var $378=$377+2; //@line 1072 "xmltok_impl.c"
        var $379=$nextTokPtr_addr; //@line 1072 "xmltok_impl.c"
        HEAP[$379]=$378; //@line 1072 "xmltok_impl.c"
        $12=35; //@line 1073 "xmltok_impl.c"
        __label__ = 230; break; //@line 1073 "xmltok_impl.c"
      case 122: // $bb55
        var $380=$ptr_addr; //@line 1075 "xmltok_impl.c"
        var $381=$380+2; //@line 1075 "xmltok_impl.c"
        var $382=$nextTokPtr_addr; //@line 1075 "xmltok_impl.c"
        HEAP[$382]=$381; //@line 1075 "xmltok_impl.c"
        $12=37; //@line 1076 "xmltok_impl.c"
        __label__ = 230; break; //@line 1076 "xmltok_impl.c"
      case 123: // $bb56
        var $383=$nextTokPtr_addr; //@line 1080 "xmltok_impl.c"
        var $384=$ptr_addr; //@line 1080 "xmltok_impl.c"
        HEAP[$383]=$384; //@line 1080 "xmltok_impl.c"
        $12=24; //@line 1081 "xmltok_impl.c"
        __label__ = 230; break; //@line 1081 "xmltok_impl.c"
      case 124: // $bb57
        var $385=$nextTokPtr_addr; //@line 1083 "xmltok_impl.c"
        var $386=$ptr_addr; //@line 1083 "xmltok_impl.c"
        HEAP[$385]=$386; //@line 1083 "xmltok_impl.c"
        $12=0; //@line 1084 "xmltok_impl.c"
        __label__ = 230; break; //@line 1084 "xmltok_impl.c"
      case 125: // $bb58
        var $387=$ptr_addr; //@line 1086 "xmltok_impl.c"
        var $388=$387+2; //@line 1086 "xmltok_impl.c"
        var $389=$nextTokPtr_addr; //@line 1086 "xmltok_impl.c"
        HEAP[$389]=$388; //@line 1086 "xmltok_impl.c"
        $12=21; //@line 1087 "xmltok_impl.c"
        __label__ = 230; break; //@line 1087 "xmltok_impl.c"
      case 126: // $bb59
        var $390=$ptr_addr; //@line 1089 "xmltok_impl.c"
        var $391=$390+2; //@line 1089 "xmltok_impl.c"
        var $392=$nextTokPtr_addr; //@line 1089 "xmltok_impl.c"
        HEAP[$392]=$391; //@line 1089 "xmltok_impl.c"
        $12=17; //@line 1090 "xmltok_impl.c"
        __label__ = 230; break; //@line 1090 "xmltok_impl.c"
      case 127: // $bb60
        var $393=$ptr_addr; //@line 1092 "xmltok_impl.c"
        var $394=$393+2; //@line 1092 "xmltok_impl.c"
        var $395=$enc_addr; //@line 1092 "xmltok_impl.c"
        var $396=$end_addr; //@line 1092 "xmltok_impl.c"
        var $397=$nextTokPtr_addr; //@line 1092 "xmltok_impl.c"
        $enc_addr_i=$395;
        $ptr_addr_i=$394;
        $end_addr_i=$396;
        $nextTokPtr_addr_i=$397;
        var $398=$ptr_addr_i; //@line 913 "xmltok_impl.c"
        var $399=$end_addr_i; //@line 913 "xmltok_impl.c"
        var $400=($398)==($399); //@line 913 "xmltok_impl.c"
        if ($400) { __label__ = 128; break; } else { __label__ = 129; break; } //@line 913 "xmltok_impl.c"
      case 128: // $bb_i14
        $9=-1; //@line 914 "xmltok_impl.c"
        __label__ = 178; break; //@line 914 "xmltok_impl.c"
      case 129: // $bb1_i15
        var $401=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $402=$401+1; //@line 915 "xmltok_impl.c"
        var $403=HEAP[$402]; //@line 915 "xmltok_impl.c"
        var $404=($403)==0; //@line 915 "xmltok_impl.c"
        if ($404) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 915 "xmltok_impl.c"
      case 130: // $bb2_i16
        var $405=$enc_addr_i; //@line 915 "xmltok_impl.c"
        var $406=$405; //@line 915 "xmltok_impl.c"
        var $407=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $408=HEAP[$407]; //@line 915 "xmltok_impl.c"
        var $409=($408); //@line 915 "xmltok_impl.c"
        var $410=$406+72; //@line 915 "xmltok_impl.c"
        var $411=$410+$409; //@line 915 "xmltok_impl.c"
        var $412=HEAP[$411]; //@line 915 "xmltok_impl.c"
        var $413=($412); //@line 915 "xmltok_impl.c"
        $iftmp_744_i=$413; //@line 915 "xmltok_impl.c"
        __lastLabel__ = 130; __label__ = 138; break; //@line 915 "xmltok_impl.c"
      case 131: // $bb3_i17
        var $414=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $415=$414; //@line 915 "xmltok_impl.c"
        var $416=HEAP[$415]; //@line 915 "xmltok_impl.c"
        var $417=($416); //@line 915 "xmltok_impl.c"
        var $418=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $419=$418+1; //@line 915 "xmltok_impl.c"
        var $420=HEAP[$419]; //@line 915 "xmltok_impl.c"
        var $421=($420); //@line 915 "xmltok_impl.c"
        var $422=((($421)) & 255); //@line 915 "xmltok_impl.c"
        var $423=((($417)) & 255); //@line 915 "xmltok_impl.c"
        $hi_addr_i_i=$422;
        $lo_addr_i_i=$423;
        var $424=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $425=($424); //@line 518 "xmltok.c"
        if ($425 == 216) {
          __label__ = 132; break;
        }
        else if ($425 == 217) {
          __label__ = 132; break;
        }
        else if ($425 == 218) {
          __label__ = 132; break;
        }
        else if ($425 == 219) {
          __label__ = 132; break;
        }
        else if ($425 == 220) {
          __label__ = 133; break;
        }
        else if ($425 == 221) {
          __label__ = 133; break;
        }
        else if ($425 == 222) {
          __label__ = 133; break;
        }
        else if ($425 == 223) {
          __label__ = 133; break;
        }
        else if ($425 == 255) {
          __label__ = 134; break;
        }
        else {
        __label__ = 136; break;
        }
        
      case 132: // $bb_i_i
        $8=7; //@line 520 "xmltok.c"
        __label__ = 137; break; //@line 520 "xmltok.c"
      case 133: // $bb1_i_i
        $8=8; //@line 522 "xmltok.c"
        __label__ = 137; break; //@line 522 "xmltok.c"
      case 134: // $bb2_i_i
        var $426=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $427=($426); //@line 524 "xmltok.c"
        var $_off_i_i=($427) + -254;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 135; break; } else { __label__ = 136; break; }
      case 135: // $bb3_i_i
        $8=0; //@line 527 "xmltok.c"
        __label__ = 137; break; //@line 527 "xmltok.c"
      case 136: // $bb4_i_i
        $8=29; //@line 531 "xmltok.c"
        __label__ = 137; break; //@line 531 "xmltok.c"
      case 137: // $unicode_byte_type_exit_i
        var $428=$8; //@line 520 "xmltok.c"
        $retval_i_i=$428; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i_i; //@line 520 "xmltok.c"
        $iftmp_744_i=$retval6_i_i; //@line 915 "xmltok_impl.c"
        __lastLabel__ = 137; __label__ = 138; break; //@line 915 "xmltok_impl.c"
      case 138: // $bb4_i18
        var $429=__lastLabel__ == 137 ? $retval6_i_i : ($413);
        if ($429 == 5) {
          __label__ = 142; break;
        }
        else if ($429 == 6) {
          __label__ = 145; break;
        }
        else if ($429 == 7) {
          __label__ = 148; break;
        }
        else if ($429 == 22) {
          __label__ = 141; break;
        }
        else if ($429 == 24) {
          __label__ = 141; break;
        }
        else if ($429 == 29) {
          __label__ = 139; break;
        }
        else {
        __label__ = 151; break;
        }
        
      case 139: // $bb5_i
        var $430=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $431=$430+1; //@line 916 "xmltok_impl.c"
        var $432=HEAP[$431]; //@line 916 "xmltok_impl.c"
        var $433=($432); //@line 916 "xmltok_impl.c"
        var $434=_nmstrtPages+$433; //@line 916 "xmltok_impl.c"
        var $435=HEAP[$434]; //@line 916 "xmltok_impl.c"
        var $436=($435); //@line 916 "xmltok_impl.c"
        var $437=($436) * 8;
        var $438=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $439=$438; //@line 916 "xmltok_impl.c"
        var $440=HEAP[$439]; //@line 916 "xmltok_impl.c"
        var $441=($440) >>> 5; //@line 916 "xmltok_impl.c"
        var $442=($441); //@line 916 "xmltok_impl.c"
        var $443=($442) + ($437); //@line 916 "xmltok_impl.c"
        var $444=_namingBitmap+$443*4; //@line 916 "xmltok_impl.c"
        var $445=HEAP[$444]; //@line 916 "xmltok_impl.c"
        var $446=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $447=$446; //@line 916 "xmltok_impl.c"
        var $448=HEAP[$447]; //@line 916 "xmltok_impl.c"
        var $449=($448); //@line 916 "xmltok_impl.c"
        var $450=($449) & 31; //@line 916 "xmltok_impl.c"
        var $451=1 << ($450); //@line 916 "xmltok_impl.c"
        var $452=($451) & ($445); //@line 916 "xmltok_impl.c"
        var $453=($452)==0; //@line 916 "xmltok_impl.c"
        if ($453) { __label__ = 140; break; } else { __label__ = 141; break; } //@line 916 "xmltok_impl.c"
      case 140: // $bb6_i
        var $454=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $455=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$454]=$455; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 141: // $bb7_i
        var $456=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $457=$456+2; //@line 916 "xmltok_impl.c"
        $ptr_addr_i=$457; //@line 916 "xmltok_impl.c"
        __label__ = 176; break; //@line 916 "xmltok_impl.c"
      case 142: // $bb8_i
        var $458=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $459=($458); //@line 916 "xmltok_impl.c"
        var $460=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $461=($460); //@line 916 "xmltok_impl.c"
        var $462=($459) - ($461); //@line 916 "xmltok_impl.c"
        var $463=($462) <= 1; //@line 916 "xmltok_impl.c"
        if ($463) { __label__ = 143; break; } else { __label__ = 144; break; } //@line 916 "xmltok_impl.c"
      case 143: // $bb9_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 144: // $bb10_i
        var $464=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $465=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$464]=$465; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 145: // $bb11_i
        var $466=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $467=($466); //@line 916 "xmltok_impl.c"
        var $468=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $469=($468); //@line 916 "xmltok_impl.c"
        var $470=($467) - ($469); //@line 916 "xmltok_impl.c"
        var $471=($470) <= 2; //@line 916 "xmltok_impl.c"
        if ($471) { __label__ = 146; break; } else { __label__ = 147; break; } //@line 916 "xmltok_impl.c"
      case 146: // $bb12_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 147: // $bb13_i
        var $472=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $473=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$472]=$473; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 148: // $bb14_i
        var $474=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $475=($474); //@line 916 "xmltok_impl.c"
        var $476=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $477=($476); //@line 916 "xmltok_impl.c"
        var $478=($475) - ($477); //@line 916 "xmltok_impl.c"
        var $479=($478) <= 3; //@line 916 "xmltok_impl.c"
        if ($479) { __label__ = 149; break; } else { __label__ = 150; break; } //@line 916 "xmltok_impl.c"
      case 149: // $bb15_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 150: // $bb16_i
        var $480=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $481=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$480]=$481; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 151: // $bb17_i
        var $482=$nextTokPtr_addr_i; //@line 918 "xmltok_impl.c"
        var $483=$ptr_addr_i; //@line 918 "xmltok_impl.c"
        HEAP[$482]=$483; //@line 918 "xmltok_impl.c"
        $9=0; //@line 919 "xmltok_impl.c"
        __label__ = 178; break; //@line 919 "xmltok_impl.c"
      case 152: // $bb18_i
        var $484=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $485=$484+1; //@line 922 "xmltok_impl.c"
        var $486=HEAP[$485]; //@line 922 "xmltok_impl.c"
        var $487=($486)==0; //@line 922 "xmltok_impl.c"
        if ($487) { __label__ = 153; break; } else { __label__ = 154; break; } //@line 922 "xmltok_impl.c"
      case 153: // $bb19_i
        var $488=$enc_addr_i; //@line 922 "xmltok_impl.c"
        var $489=$488; //@line 922 "xmltok_impl.c"
        var $490=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $491=HEAP[$490]; //@line 922 "xmltok_impl.c"
        var $492=($491); //@line 922 "xmltok_impl.c"
        var $493=$489+72; //@line 922 "xmltok_impl.c"
        var $494=$493+$492; //@line 922 "xmltok_impl.c"
        var $495=HEAP[$494]; //@line 922 "xmltok_impl.c"
        var $496=($495); //@line 922 "xmltok_impl.c"
        $iftmp_752_i=$496; //@line 922 "xmltok_impl.c"
        __lastLabel__ = 153; __label__ = 161; break; //@line 922 "xmltok_impl.c"
      case 154: // $bb20_i
        var $497=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $498=$497; //@line 922 "xmltok_impl.c"
        var $499=HEAP[$498]; //@line 922 "xmltok_impl.c"
        var $500=($499); //@line 922 "xmltok_impl.c"
        var $501=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $502=$501+1; //@line 922 "xmltok_impl.c"
        var $503=HEAP[$502]; //@line 922 "xmltok_impl.c"
        var $504=($503); //@line 922 "xmltok_impl.c"
        var $505=((($504)) & 255); //@line 922 "xmltok_impl.c"
        var $506=((($500)) & 255); //@line 922 "xmltok_impl.c"
        $hi_addr_i1_i=$505;
        $lo_addr_i2_i=$506;
        var $507=$hi_addr_i1_i; //@line 518 "xmltok.c"
        var $508=($507); //@line 518 "xmltok.c"
        if ($508 == 216) {
          __label__ = 155; break;
        }
        else if ($508 == 217) {
          __label__ = 155; break;
        }
        else if ($508 == 218) {
          __label__ = 155; break;
        }
        else if ($508 == 219) {
          __label__ = 155; break;
        }
        else if ($508 == 220) {
          __label__ = 156; break;
        }
        else if ($508 == 221) {
          __label__ = 156; break;
        }
        else if ($508 == 222) {
          __label__ = 156; break;
        }
        else if ($508 == 223) {
          __label__ = 156; break;
        }
        else if ($508 == 255) {
          __label__ = 157; break;
        }
        else {
        __label__ = 159; break;
        }
        
      case 155: // $bb_i4_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 160; break; //@line 520 "xmltok.c"
      case 156: // $bb1_i5_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 160; break; //@line 522 "xmltok.c"
      case 157: // $bb2_i8_i
        var $509=$lo_addr_i2_i; //@line 524 "xmltok.c"
        var $510=($509); //@line 524 "xmltok.c"
        var $_off_i6_i=($510) + -254;
        var $switch_i7_i=($_off_i6_i) < 2;
        if ($switch_i7_i) { __label__ = 158; break; } else { __label__ = 159; break; }
      case 158: // $bb3_i9_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 160; break; //@line 527 "xmltok.c"
      case 159: // $bb4_i10_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 160; break; //@line 531 "xmltok.c"
      case 160: // $unicode_byte_type_exit12_i
        var $511=$7; //@line 520 "xmltok.c"
        $retval_i3_i=$511; //@line 520 "xmltok.c"
        var $retval6_i11_i=$retval_i3_i; //@line 520 "xmltok.c"
        $iftmp_752_i=$retval6_i11_i; //@line 922 "xmltok_impl.c"
        __lastLabel__ = 160; __label__ = 161; break; //@line 922 "xmltok_impl.c"
      case 161: // $bb21_i
        var $512=__lastLabel__ == 160 ? $retval6_i11_i : ($496);
        if ($512 == 5) {
          __label__ = 165; break;
        }
        else if ($512 == 6) {
          __label__ = 168; break;
        }
        else if ($512 == 7) {
          __label__ = 171; break;
        }
        else if ($512 == 9) {
          __label__ = 174; break;
        }
        else if ($512 == 10) {
          __label__ = 174; break;
        }
        else if ($512 == 11) {
          __label__ = 174; break;
        }
        else if ($512 == 21) {
          __label__ = 174; break;
        }
        else if ($512 == 22) {
          __label__ = 164; break;
        }
        else if ($512 == 24) {
          __label__ = 164; break;
        }
        else if ($512 == 25) {
          __label__ = 164; break;
        }
        else if ($512 == 26) {
          __label__ = 164; break;
        }
        else if ($512 == 27) {
          __label__ = 164; break;
        }
        else if ($512 == 29) {
          __label__ = 162; break;
        }
        else if ($512 == 30) {
          __label__ = 174; break;
        }
        else if ($512 == 32) {
          __label__ = 174; break;
        }
        else if ($512 == 36) {
          __label__ = 174; break;
        }
        else {
        __label__ = 175; break;
        }
        
      case 162: // $bb22_i
        var $513=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $514=$513+1; //@line 923 "xmltok_impl.c"
        var $515=HEAP[$514]; //@line 923 "xmltok_impl.c"
        var $516=($515); //@line 923 "xmltok_impl.c"
        var $517=_namePages+$516; //@line 923 "xmltok_impl.c"
        var $518=HEAP[$517]; //@line 923 "xmltok_impl.c"
        var $519=($518); //@line 923 "xmltok_impl.c"
        var $520=($519) * 8;
        var $521=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $522=$521; //@line 923 "xmltok_impl.c"
        var $523=HEAP[$522]; //@line 923 "xmltok_impl.c"
        var $524=($523) >>> 5; //@line 923 "xmltok_impl.c"
        var $525=($524); //@line 923 "xmltok_impl.c"
        var $526=($525) + ($520); //@line 923 "xmltok_impl.c"
        var $527=_namingBitmap+$526*4; //@line 923 "xmltok_impl.c"
        var $528=HEAP[$527]; //@line 923 "xmltok_impl.c"
        var $529=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $530=$529; //@line 923 "xmltok_impl.c"
        var $531=HEAP[$530]; //@line 923 "xmltok_impl.c"
        var $532=($531); //@line 923 "xmltok_impl.c"
        var $533=($532) & 31; //@line 923 "xmltok_impl.c"
        var $534=1 << ($533); //@line 923 "xmltok_impl.c"
        var $535=($534) & ($528); //@line 923 "xmltok_impl.c"
        var $536=($535)==0; //@line 923 "xmltok_impl.c"
        if ($536) { __label__ = 163; break; } else { __label__ = 164; break; } //@line 923 "xmltok_impl.c"
      case 163: // $bb23_i
        var $537=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $538=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$537]=$538; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 164: // $bb24_i
        var $539=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $540=$539+2; //@line 923 "xmltok_impl.c"
        $ptr_addr_i=$540; //@line 923 "xmltok_impl.c"
        __label__ = 176; break; //@line 923 "xmltok_impl.c"
      case 165: // $bb25_i
        var $541=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $542=($541); //@line 923 "xmltok_impl.c"
        var $543=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $544=($543); //@line 923 "xmltok_impl.c"
        var $545=($542) - ($544); //@line 923 "xmltok_impl.c"
        var $546=($545) <= 1; //@line 923 "xmltok_impl.c"
        if ($546) { __label__ = 166; break; } else { __label__ = 167; break; } //@line 923 "xmltok_impl.c"
      case 166: // $bb26_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 167: // $bb27_i
        var $547=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $548=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$547]=$548; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 168: // $bb28_i
        var $549=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $550=($549); //@line 923 "xmltok_impl.c"
        var $551=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $552=($551); //@line 923 "xmltok_impl.c"
        var $553=($550) - ($552); //@line 923 "xmltok_impl.c"
        var $554=($553) <= 2; //@line 923 "xmltok_impl.c"
        if ($554) { __label__ = 169; break; } else { __label__ = 170; break; } //@line 923 "xmltok_impl.c"
      case 169: // $bb29_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 170: // $bb30_i
        var $555=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $556=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$555]=$556; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 171: // $bb31_i
        var $557=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $558=($557); //@line 923 "xmltok_impl.c"
        var $559=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $560=($559); //@line 923 "xmltok_impl.c"
        var $561=($558) - ($560); //@line 923 "xmltok_impl.c"
        var $562=($561) <= 3; //@line 923 "xmltok_impl.c"
        if ($562) { __label__ = 172; break; } else { __label__ = 173; break; } //@line 923 "xmltok_impl.c"
      case 172: // $bb32_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 173: // $bb33_i
        var $563=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $564=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$563]=$564; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 174: // $bb34_i
        var $565=$nextTokPtr_addr_i; //@line 926 "xmltok_impl.c"
        var $566=$ptr_addr_i; //@line 926 "xmltok_impl.c"
        HEAP[$565]=$566; //@line 926 "xmltok_impl.c"
        $9=20; //@line 927 "xmltok_impl.c"
        __label__ = 178; break; //@line 927 "xmltok_impl.c"
      case 175: // $bb35_i
        var $567=$nextTokPtr_addr_i; //@line 929 "xmltok_impl.c"
        var $568=$ptr_addr_i; //@line 929 "xmltok_impl.c"
        HEAP[$567]=$568; //@line 929 "xmltok_impl.c"
        $9=0; //@line 930 "xmltok_impl.c"
        __label__ = 178; break; //@line 930 "xmltok_impl.c"
      case 176: // $bb36_i
        var $569=$ptr_addr_i; //@line 921 "xmltok_impl.c"
        var $570=$end_addr_i; //@line 921 "xmltok_impl.c"
        var $571=($569)!=($570); //@line 921 "xmltok_impl.c"
        if ($571) { __label__ = 152; break; } else { __label__ = 177; break; } //@line 921 "xmltok_impl.c"
      case 177: // $bb37_i
        $9=-20; //@line 933 "xmltok_impl.c"
        __label__ = 178; break; //@line 933 "xmltok_impl.c"
      case 178: // $little2_scanPoundName_exit
        var $572=$9; //@line 914 "xmltok_impl.c"
        $retval_i13=$572; //@line 914 "xmltok_impl.c"
        var $retval39_i=$retval_i13; //@line 914 "xmltok_impl.c"
        $12=$retval39_i; //@line 1092 "xmltok_impl.c"
        __label__ = 230; break; //@line 1092 "xmltok_impl.c"
      case 179: // $bb61
        var $573=$end_addr; //@line 1109 "xmltok_impl.c"
        var $574=($573); //@line 1109 "xmltok_impl.c"
        var $575=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $576=($575); //@line 1109 "xmltok_impl.c"
        var $577=($574) - ($576); //@line 1109 "xmltok_impl.c"
        var $578=($577) <= 1; //@line 1109 "xmltok_impl.c"
        if ($578) { __label__ = 180; break; } else { __label__ = 181; break; } //@line 1109 "xmltok_impl.c"
      case 180: // $bb62
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 181: // $bb63
        var $579=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $580=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$579]=$580; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 182: // $bb64
        var $581=$end_addr; //@line 1109 "xmltok_impl.c"
        var $582=($581); //@line 1109 "xmltok_impl.c"
        var $583=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $584=($583); //@line 1109 "xmltok_impl.c"
        var $585=($582) - ($584); //@line 1109 "xmltok_impl.c"
        var $586=($585) <= 2; //@line 1109 "xmltok_impl.c"
        if ($586) { __label__ = 183; break; } else { __label__ = 184; break; } //@line 1109 "xmltok_impl.c"
      case 183: // $bb65
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 184: // $bb66
        var $587=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $588=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$587]=$588; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 185: // $bb67
        var $589=$end_addr; //@line 1109 "xmltok_impl.c"
        var $590=($589); //@line 1109 "xmltok_impl.c"
        var $591=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $592=($591); //@line 1109 "xmltok_impl.c"
        var $593=($590) - ($592); //@line 1109 "xmltok_impl.c"
        var $594=($593) <= 3; //@line 1109 "xmltok_impl.c"
        if ($594) { __label__ = 186; break; } else { __label__ = 187; break; } //@line 1109 "xmltok_impl.c"
      case 186: // $bb68
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 187: // $bb69
        var $595=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $596=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$595]=$596; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 188: // $bb70
        $tok=18; //@line 1113 "xmltok_impl.c"
        var $597=$ptr_addr; //@line 1114 "xmltok_impl.c"
        var $598=$597+2; //@line 1114 "xmltok_impl.c"
        $ptr_addr=$598; //@line 1114 "xmltok_impl.c"
        __label__ = 228; break; //@line 1114 "xmltok_impl.c"
      case 189: // $bb71
        $tok=19; //@line 1122 "xmltok_impl.c"
        var $599=$ptr_addr; //@line 1123 "xmltok_impl.c"
        var $600=$599+2; //@line 1123 "xmltok_impl.c"
        $ptr_addr=$600; //@line 1123 "xmltok_impl.c"
        __label__ = 228; break; //@line 1123 "xmltok_impl.c"
      case 190: // $bb72
        var $601=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $602=$601+1; //@line 1126 "xmltok_impl.c"
        var $603=HEAP[$602]; //@line 1126 "xmltok_impl.c"
        var $604=($603); //@line 1126 "xmltok_impl.c"
        var $605=_nmstrtPages+$604; //@line 1126 "xmltok_impl.c"
        var $606=HEAP[$605]; //@line 1126 "xmltok_impl.c"
        var $607=($606); //@line 1126 "xmltok_impl.c"
        var $608=($607) * 8;
        var $609=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $610=$609; //@line 1126 "xmltok_impl.c"
        var $611=HEAP[$610]; //@line 1126 "xmltok_impl.c"
        var $612=($611) >>> 5; //@line 1126 "xmltok_impl.c"
        var $613=($612); //@line 1126 "xmltok_impl.c"
        var $614=($613) + ($608); //@line 1126 "xmltok_impl.c"
        var $615=_namingBitmap+$614*4; //@line 1126 "xmltok_impl.c"
        var $616=HEAP[$615]; //@line 1126 "xmltok_impl.c"
        var $617=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $618=$617; //@line 1126 "xmltok_impl.c"
        var $619=HEAP[$618]; //@line 1126 "xmltok_impl.c"
        var $620=($619); //@line 1126 "xmltok_impl.c"
        var $621=($620) & 31; //@line 1126 "xmltok_impl.c"
        var $622=1 << ($621); //@line 1126 "xmltok_impl.c"
        var $623=($622) & ($616); //@line 1126 "xmltok_impl.c"
        var $624=($623)!=0; //@line 1126 "xmltok_impl.c"
        var $625=$ptr_addr; //@line 1127 "xmltok_impl.c"
        if ($624) { __label__ = 191; break; } else { __label__ = 192; break; } //@line 1126 "xmltok_impl.c"
      case 191: // $bb73
        var $626=$625+2; //@line 1127 "xmltok_impl.c"
        $ptr_addr=$626; //@line 1127 "xmltok_impl.c"
        $tok=18; //@line 1128 "xmltok_impl.c"
        __label__ = 228; break; //@line 1128 "xmltok_impl.c"
      case 192: // $bb74
        var $627=$625+1; //@line 1131 "xmltok_impl.c"
        var $628=HEAP[$627]; //@line 1131 "xmltok_impl.c"
        var $629=($628); //@line 1131 "xmltok_impl.c"
        var $630=_namePages+$629; //@line 1131 "xmltok_impl.c"
        var $631=HEAP[$630]; //@line 1131 "xmltok_impl.c"
        var $632=($631); //@line 1131 "xmltok_impl.c"
        var $633=($632) * 8;
        var $634=$ptr_addr; //@line 1131 "xmltok_impl.c"
        var $635=$634; //@line 1131 "xmltok_impl.c"
        var $636=HEAP[$635]; //@line 1131 "xmltok_impl.c"
        var $637=($636) >>> 5; //@line 1131 "xmltok_impl.c"
        var $638=($637); //@line 1131 "xmltok_impl.c"
        var $639=($638) + ($633); //@line 1131 "xmltok_impl.c"
        var $640=_namingBitmap+$639*4; //@line 1131 "xmltok_impl.c"
        var $641=HEAP[$640]; //@line 1131 "xmltok_impl.c"
        var $642=$ptr_addr; //@line 1131 "xmltok_impl.c"
        var $643=$642; //@line 1131 "xmltok_impl.c"
        var $644=HEAP[$643]; //@line 1131 "xmltok_impl.c"
        var $645=($644); //@line 1131 "xmltok_impl.c"
        var $646=($645) & 31; //@line 1131 "xmltok_impl.c"
        var $647=1 << ($646); //@line 1131 "xmltok_impl.c"
        var $648=($647) & ($641); //@line 1131 "xmltok_impl.c"
        var $649=($648)!=0; //@line 1131 "xmltok_impl.c"
        if ($649) { __label__ = 193; break; } else { __label__ = 194; break; } //@line 1131 "xmltok_impl.c"
      case 193: // $bb75
        var $650=$ptr_addr; //@line 1132 "xmltok_impl.c"
        var $651=$650+2; //@line 1132 "xmltok_impl.c"
        $ptr_addr=$651; //@line 1132 "xmltok_impl.c"
        $tok=19; //@line 1133 "xmltok_impl.c"
        __label__ = 228; break; //@line 1133 "xmltok_impl.c"
      case 194: // $bb76
        var $652=$nextTokPtr_addr; //@line 1138 "xmltok_impl.c"
        var $653=$ptr_addr; //@line 1138 "xmltok_impl.c"
        HEAP[$652]=$653; //@line 1138 "xmltok_impl.c"
        $12=0; //@line 1139 "xmltok_impl.c"
        __label__ = 230; break; //@line 1139 "xmltok_impl.c"
      case 195: // $bb78
        var $654=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $655=$654+1; //@line 1142 "xmltok_impl.c"
        var $656=HEAP[$655]; //@line 1142 "xmltok_impl.c"
        var $657=($656)==0; //@line 1142 "xmltok_impl.c"
        if ($657) { __label__ = 196; break; } else { __label__ = 197; break; } //@line 1142 "xmltok_impl.c"
      case 196: // $bb79
        var $658=$enc_addr; //@line 1142 "xmltok_impl.c"
        var $659=$658; //@line 1142 "xmltok_impl.c"
        var $660=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $661=HEAP[$660]; //@line 1142 "xmltok_impl.c"
        var $662=($661); //@line 1142 "xmltok_impl.c"
        var $663=$659+72; //@line 1142 "xmltok_impl.c"
        var $664=$663+$662; //@line 1142 "xmltok_impl.c"
        var $665=HEAP[$664]; //@line 1142 "xmltok_impl.c"
        var $666=($665); //@line 1142 "xmltok_impl.c"
        $iftmp_787=$666; //@line 1142 "xmltok_impl.c"
        __lastLabel__ = 196; __label__ = 204; break; //@line 1142 "xmltok_impl.c"
      case 197: // $bb80
        var $667=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $668=$667; //@line 1142 "xmltok_impl.c"
        var $669=HEAP[$668]; //@line 1142 "xmltok_impl.c"
        var $670=($669); //@line 1142 "xmltok_impl.c"
        var $671=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $672=$671+1; //@line 1142 "xmltok_impl.c"
        var $673=HEAP[$672]; //@line 1142 "xmltok_impl.c"
        var $674=($673); //@line 1142 "xmltok_impl.c"
        var $675=((($674)) & 255); //@line 1142 "xmltok_impl.c"
        var $676=((($670)) & 255); //@line 1142 "xmltok_impl.c"
        $hi_addr_i1=$675;
        $lo_addr_i2=$676;
        var $677=$hi_addr_i1; //@line 518 "xmltok.c"
        var $678=($677); //@line 518 "xmltok.c"
        if ($678 == 216) {
          __label__ = 198; break;
        }
        else if ($678 == 217) {
          __label__ = 198; break;
        }
        else if ($678 == 218) {
          __label__ = 198; break;
        }
        else if ($678 == 219) {
          __label__ = 198; break;
        }
        else if ($678 == 220) {
          __label__ = 199; break;
        }
        else if ($678 == 221) {
          __label__ = 199; break;
        }
        else if ($678 == 222) {
          __label__ = 199; break;
        }
        else if ($678 == 223) {
          __label__ = 199; break;
        }
        else if ($678 == 255) {
          __label__ = 200; break;
        }
        else {
        __label__ = 202; break;
        }
        
      case 198: // $bb_i4
        $10=7; //@line 520 "xmltok.c"
        __label__ = 203; break; //@line 520 "xmltok.c"
      case 199: // $bb1_i5
        $10=8; //@line 522 "xmltok.c"
        __label__ = 203; break; //@line 522 "xmltok.c"
      case 200: // $bb2_i8
        var $679=$lo_addr_i2; //@line 524 "xmltok.c"
        var $680=($679); //@line 524 "xmltok.c"
        var $_off_i6=($680) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 201; break; } else { __label__ = 202; break; }
      case 201: // $bb3_i9
        $10=0; //@line 527 "xmltok.c"
        __label__ = 203; break; //@line 527 "xmltok.c"
      case 202: // $bb4_i10
        $10=29; //@line 531 "xmltok.c"
        __label__ = 203; break; //@line 531 "xmltok.c"
      case 203: // $unicode_byte_type_exit12
        var $681=$10; //@line 520 "xmltok.c"
        $retval_i3=$681; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_787=$retval6_i11; //@line 1142 "xmltok_impl.c"
        __lastLabel__ = 203; __label__ = 204; break; //@line 1142 "xmltok_impl.c"
      case 204: // $bb81
        var $682=__lastLabel__ == 203 ? $retval6_i11 : ($666);
        if ($682 == 5) {
          __label__ = 208; break;
        }
        else if ($682 == 6) {
          __label__ = 211; break;
        }
        else if ($682 == 7) {
          __label__ = 214; break;
        }
        else if ($682 == 9) {
          __label__ = 217; break;
        }
        else if ($682 == 10) {
          __label__ = 217; break;
        }
        else if ($682 == 11) {
          __label__ = 217; break;
        }
        else if ($682 == 15) {
          __label__ = 224; break;
        }
        else if ($682 == 20) {
          __label__ = 217; break;
        }
        else if ($682 == 21) {
          __label__ = 217; break;
        }
        else if ($682 == 22) {
          __label__ = 207; break;
        }
        else if ($682 == 24) {
          __label__ = 207; break;
        }
        else if ($682 == 25) {
          __label__ = 207; break;
        }
        else if ($682 == 26) {
          __label__ = 207; break;
        }
        else if ($682 == 27) {
          __label__ = 207; break;
        }
        else if ($682 == 29) {
          __label__ = 205; break;
        }
        else if ($682 == 30) {
          __label__ = 217; break;
        }
        else if ($682 == 32) {
          __label__ = 217; break;
        }
        else if ($682 == 33) {
          __label__ = 221; break;
        }
        else if ($682 == 34) {
          __label__ = 218; break;
        }
        else if ($682 == 35) {
          __label__ = 217; break;
        }
        else if ($682 == 36) {
          __label__ = 217; break;
        }
        else {
        __label__ = 227; break;
        }
        
      case 205: // $bb82
        var $683=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $684=$683+1; //@line 1143 "xmltok_impl.c"
        var $685=HEAP[$684]; //@line 1143 "xmltok_impl.c"
        var $686=($685); //@line 1143 "xmltok_impl.c"
        var $687=_namePages+$686; //@line 1143 "xmltok_impl.c"
        var $688=HEAP[$687]; //@line 1143 "xmltok_impl.c"
        var $689=($688); //@line 1143 "xmltok_impl.c"
        var $690=($689) * 8;
        var $691=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $692=$691; //@line 1143 "xmltok_impl.c"
        var $693=HEAP[$692]; //@line 1143 "xmltok_impl.c"
        var $694=($693) >>> 5; //@line 1143 "xmltok_impl.c"
        var $695=($694); //@line 1143 "xmltok_impl.c"
        var $696=($695) + ($690); //@line 1143 "xmltok_impl.c"
        var $697=_namingBitmap+$696*4; //@line 1143 "xmltok_impl.c"
        var $698=HEAP[$697]; //@line 1143 "xmltok_impl.c"
        var $699=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $700=$699; //@line 1143 "xmltok_impl.c"
        var $701=HEAP[$700]; //@line 1143 "xmltok_impl.c"
        var $702=($701); //@line 1143 "xmltok_impl.c"
        var $703=($702) & 31; //@line 1143 "xmltok_impl.c"
        var $704=1 << ($703); //@line 1143 "xmltok_impl.c"
        var $705=($704) & ($698); //@line 1143 "xmltok_impl.c"
        var $706=($705)==0; //@line 1143 "xmltok_impl.c"
        if ($706) { __label__ = 206; break; } else { __label__ = 207; break; } //@line 1143 "xmltok_impl.c"
      case 206: // $bb83
        var $707=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $708=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$707]=$708; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 207: // $bb84
        var $709=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $710=$709+2; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$710; //@line 1143 "xmltok_impl.c"
        __label__ = 228; break; //@line 1143 "xmltok_impl.c"
      case 208: // $bb85
        var $711=$end_addr; //@line 1143 "xmltok_impl.c"
        var $712=($711); //@line 1143 "xmltok_impl.c"
        var $713=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $714=($713); //@line 1143 "xmltok_impl.c"
        var $715=($712) - ($714); //@line 1143 "xmltok_impl.c"
        var $716=($715) <= 1; //@line 1143 "xmltok_impl.c"
        if ($716) { __label__ = 209; break; } else { __label__ = 210; break; } //@line 1143 "xmltok_impl.c"
      case 209: // $bb86
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 210: // $bb87
        var $717=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $718=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$717]=$718; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 211: // $bb88
        var $719=$end_addr; //@line 1143 "xmltok_impl.c"
        var $720=($719); //@line 1143 "xmltok_impl.c"
        var $721=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $722=($721); //@line 1143 "xmltok_impl.c"
        var $723=($720) - ($722); //@line 1143 "xmltok_impl.c"
        var $724=($723) <= 2; //@line 1143 "xmltok_impl.c"
        if ($724) { __label__ = 212; break; } else { __label__ = 213; break; } //@line 1143 "xmltok_impl.c"
      case 212: // $bb89
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 213: // $bb90
        var $725=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $726=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$725]=$726; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 214: // $bb91
        var $727=$end_addr; //@line 1143 "xmltok_impl.c"
        var $728=($727); //@line 1143 "xmltok_impl.c"
        var $729=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $730=($729); //@line 1143 "xmltok_impl.c"
        var $731=($728) - ($730); //@line 1143 "xmltok_impl.c"
        var $732=($731) <= 3; //@line 1143 "xmltok_impl.c"
        if ($732) { __label__ = 215; break; } else { __label__ = 216; break; } //@line 1143 "xmltok_impl.c"
      case 215: // $bb92
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 216: // $bb93
        var $733=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $734=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$733]=$734; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 217: // $bb94
        var $735=$nextTokPtr_addr; //@line 1147 "xmltok_impl.c"
        var $736=$ptr_addr; //@line 1147 "xmltok_impl.c"
        HEAP[$735]=$736; //@line 1147 "xmltok_impl.c"
        var $737=$tok; //@line 1148 "xmltok_impl.c"
        $12=$737; //@line 1148 "xmltok_impl.c"
        __label__ = 230; break; //@line 1148 "xmltok_impl.c"
      case 218: // $bb95
        var $738=$tok; //@line 1171 "xmltok_impl.c"
        var $739=($738)==19; //@line 1171 "xmltok_impl.c"
        if ($739) { __label__ = 219; break; } else { __label__ = 220; break; } //@line 1171 "xmltok_impl.c"
      case 219: // $bb96
        var $740=$nextTokPtr_addr; //@line 1172 "xmltok_impl.c"
        var $741=$ptr_addr; //@line 1172 "xmltok_impl.c"
        HEAP[$740]=$741; //@line 1172 "xmltok_impl.c"
        $12=0; //@line 1173 "xmltok_impl.c"
        __label__ = 230; break; //@line 1173 "xmltok_impl.c"
      case 220: // $bb97
        var $742=$ptr_addr; //@line 1175 "xmltok_impl.c"
        var $743=$742+2; //@line 1175 "xmltok_impl.c"
        var $744=$nextTokPtr_addr; //@line 1175 "xmltok_impl.c"
        HEAP[$744]=$743; //@line 1175 "xmltok_impl.c"
        $12=32; //@line 1176 "xmltok_impl.c"
        __label__ = 230; break; //@line 1176 "xmltok_impl.c"
      case 221: // $bb98
        var $745=$tok; //@line 1178 "xmltok_impl.c"
        var $746=($745)==19; //@line 1178 "xmltok_impl.c"
        if ($746) { __label__ = 222; break; } else { __label__ = 223; break; } //@line 1178 "xmltok_impl.c"
      case 222: // $bb99
        var $747=$nextTokPtr_addr; //@line 1179 "xmltok_impl.c"
        var $748=$ptr_addr; //@line 1179 "xmltok_impl.c"
        HEAP[$747]=$748; //@line 1179 "xmltok_impl.c"
        $12=0; //@line 1180 "xmltok_impl.c"
        __label__ = 230; break; //@line 1180 "xmltok_impl.c"
      case 223: // $bb100
        var $749=$ptr_addr; //@line 1182 "xmltok_impl.c"
        var $750=$749+2; //@line 1182 "xmltok_impl.c"
        var $751=$nextTokPtr_addr; //@line 1182 "xmltok_impl.c"
        HEAP[$751]=$750; //@line 1182 "xmltok_impl.c"
        $12=31; //@line 1183 "xmltok_impl.c"
        __label__ = 230; break; //@line 1183 "xmltok_impl.c"
      case 224: // $bb101
        var $752=$tok; //@line 1185 "xmltok_impl.c"
        var $753=($752)==19; //@line 1185 "xmltok_impl.c"
        if ($753) { __label__ = 225; break; } else { __label__ = 226; break; } //@line 1185 "xmltok_impl.c"
      case 225: // $bb102
        var $754=$nextTokPtr_addr; //@line 1186 "xmltok_impl.c"
        var $755=$ptr_addr; //@line 1186 "xmltok_impl.c"
        HEAP[$754]=$755; //@line 1186 "xmltok_impl.c"
        $12=0; //@line 1187 "xmltok_impl.c"
        __label__ = 230; break; //@line 1187 "xmltok_impl.c"
      case 226: // $bb103
        var $756=$ptr_addr; //@line 1189 "xmltok_impl.c"
        var $757=$756+2; //@line 1189 "xmltok_impl.c"
        var $758=$nextTokPtr_addr; //@line 1189 "xmltok_impl.c"
        HEAP[$758]=$757; //@line 1189 "xmltok_impl.c"
        $12=30; //@line 1190 "xmltok_impl.c"
        __label__ = 230; break; //@line 1190 "xmltok_impl.c"
      case 227: // $bb104
        var $759=$nextTokPtr_addr; //@line 1192 "xmltok_impl.c"
        var $760=$ptr_addr; //@line 1192 "xmltok_impl.c"
        HEAP[$759]=$760; //@line 1192 "xmltok_impl.c"
        $12=0; //@line 1193 "xmltok_impl.c"
        __label__ = 230; break; //@line 1193 "xmltok_impl.c"
      case 228: // $bb105
        var $761=$ptr_addr; //@line 1141 "xmltok_impl.c"
        var $762=$end_addr; //@line 1141 "xmltok_impl.c"
        var $763=($761)!=($762); //@line 1141 "xmltok_impl.c"
        if ($763) { __label__ = 195; break; } else { __label__ = 229; break; } //@line 1141 "xmltok_impl.c"
      case 229: // $bb106
        var $764=$tok; //@line 1196 "xmltok_impl.c"
        var $765=0 - ($764); //@line 1196 "xmltok_impl.c"
        $12=$765; //@line 1196 "xmltok_impl.c"
        __label__ = 230; break; //@line 1196 "xmltok_impl.c"
      case 230: // $bb107
        var $766=$12; //@line 974 "xmltok_impl.c"
        $retval=$766; //@line 974 "xmltok_impl.c"
        var $retval108=$retval; //@line 974 "xmltok_impl.c"
        ;
        return $retval108; //@line 974 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_attributeValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_797;
        var $iftmp_795;
        var $2;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 1204 "xmltok_impl.c"
        var $4=$end_addr; //@line 1204 "xmltok_impl.c"
        var $5=($3)==($4); //@line 1204 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1204 "xmltok_impl.c"
      case 1: // $bb
        $2=-4; //@line 1205 "xmltok_impl.c"
        __label__ = 45; break; //@line 1205 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 1206 "xmltok_impl.c"
        $start=$6; //@line 1206 "xmltok_impl.c"
        __label__ = 43; break; //@line 1206 "xmltok_impl.c"
      case 3: // $bb2
        var $7=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $8=$7+1; //@line 1208 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1208 "xmltok_impl.c"
        var $10=($9)==0; //@line 1208 "xmltok_impl.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1208 "xmltok_impl.c"
      case 4: // $bb3
        var $11=$enc_addr; //@line 1208 "xmltok_impl.c"
        var $12=$11; //@line 1208 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1208 "xmltok_impl.c"
        var $15=($14); //@line 1208 "xmltok_impl.c"
        var $16=$12+72; //@line 1208 "xmltok_impl.c"
        var $17=$16+$15; //@line 1208 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1208 "xmltok_impl.c"
        var $19=($18); //@line 1208 "xmltok_impl.c"
        $iftmp_795=$19; //@line 1208 "xmltok_impl.c"
        __lastLabel__ = 4; __label__ = 12; break; //@line 1208 "xmltok_impl.c"
      case 5: // $bb4
        var $20=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $21=$20; //@line 1208 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1208 "xmltok_impl.c"
        var $23=($22); //@line 1208 "xmltok_impl.c"
        var $24=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $25=$24+1; //@line 1208 "xmltok_impl.c"
        var $26=HEAP[$25]; //@line 1208 "xmltok_impl.c"
        var $27=($26); //@line 1208 "xmltok_impl.c"
        var $28=((($27)) & 255); //@line 1208 "xmltok_impl.c"
        var $29=((($23)) & 255); //@line 1208 "xmltok_impl.c"
        $hi_addr_i=$28;
        $lo_addr_i=$29;
        var $30=$hi_addr_i; //@line 518 "xmltok.c"
        var $31=($30); //@line 518 "xmltok.c"
        if ($31 == 216) {
          __label__ = 6; break;
        }
        else if ($31 == 217) {
          __label__ = 6; break;
        }
        else if ($31 == 218) {
          __label__ = 6; break;
        }
        else if ($31 == 219) {
          __label__ = 6; break;
        }
        else if ($31 == 220) {
          __label__ = 7; break;
        }
        else if ($31 == 221) {
          __label__ = 7; break;
        }
        else if ($31 == 222) {
          __label__ = 7; break;
        }
        else if ($31 == 223) {
          __label__ = 7; break;
        }
        else if ($31 == 255) {
          __label__ = 8; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 6: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 11; break; //@line 520 "xmltok.c"
      case 7: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 11; break; //@line 522 "xmltok.c"
      case 8: // $bb2_i
        var $32=$lo_addr_i; //@line 524 "xmltok.c"
        var $33=($32); //@line 524 "xmltok.c"
        var $_off_i=($33) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 9; break; } else { __label__ = 10; break; }
      case 9: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 11; break; //@line 527 "xmltok.c"
      case 10: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 11; break; //@line 531 "xmltok.c"
      case 11: // $unicode_byte_type_exit
        var $34=$1; //@line 520 "xmltok.c"
        $retval_i=$34; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_795=$retval6_i; //@line 1208 "xmltok_impl.c"
        __lastLabel__ = 11; __label__ = 12; break; //@line 1208 "xmltok_impl.c"
      case 12: // $bb5
        var $35=__lastLabel__ == 11 ? $retval6_i : ($19);
        if ($35 == 2) {
          __label__ = 19; break;
        }
        else if ($35 == 3) {
          __label__ = 16; break;
        }
        else if ($35 == 5) {
          __label__ = 13; break;
        }
        else if ($35 == 6) {
          __label__ = 14; break;
        }
        else if ($35 == 7) {
          __label__ = 15; break;
        }
        else if ($35 == 9) {
          __label__ = 23; break;
        }
        else if ($35 == 10) {
          __label__ = 20; break;
        }
        else if ($35 == 21) {
          __label__ = 39; break;
        }
        else {
        __label__ = 42; break;
        }
        
      case 13: // $bb6
        var $36=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $37=$36+2; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$37; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 14: // $bb7
        var $38=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $39=$38+3; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$39; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 15: // $bb8
        var $40=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $41=$40+4; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$41; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 16: // $bb9
        var $42=$ptr_addr; //@line 1214 "xmltok_impl.c"
        var $43=$start; //@line 1214 "xmltok_impl.c"
        var $44=($42)==($43); //@line 1214 "xmltok_impl.c"
        if ($44) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1214 "xmltok_impl.c"
      case 17: // $bb10
        var $45=$ptr_addr; //@line 1215 "xmltok_impl.c"
        var $46=$45+2; //@line 1215 "xmltok_impl.c"
        var $47=$enc_addr; //@line 1215 "xmltok_impl.c"
        var $48=$end_addr; //@line 1215 "xmltok_impl.c"
        var $49=$nextTokPtr_addr; //@line 1215 "xmltok_impl.c"
        var $50=_little2_scanRef($47, $46, $48, $49); //@line 1215 "xmltok_impl.c"
        $2=$50; //@line 1215 "xmltok_impl.c"
        __label__ = 45; break; //@line 1215 "xmltok_impl.c"
      case 18: // $bb11
        var $51=$nextTokPtr_addr; //@line 1216 "xmltok_impl.c"
        var $52=$ptr_addr; //@line 1216 "xmltok_impl.c"
        HEAP[$51]=$52; //@line 1216 "xmltok_impl.c"
        $2=6; //@line 1217 "xmltok_impl.c"
        __label__ = 45; break; //@line 1217 "xmltok_impl.c"
      case 19: // $bb12
        var $53=$nextTokPtr_addr; //@line 1220 "xmltok_impl.c"
        var $54=$ptr_addr; //@line 1220 "xmltok_impl.c"
        HEAP[$53]=$54; //@line 1220 "xmltok_impl.c"
        $2=0; //@line 1221 "xmltok_impl.c"
        __label__ = 45; break; //@line 1221 "xmltok_impl.c"
      case 20: // $bb13
        var $55=$ptr_addr; //@line 1223 "xmltok_impl.c"
        var $56=$start; //@line 1223 "xmltok_impl.c"
        var $57=($55)==($56); //@line 1223 "xmltok_impl.c"
        if ($57) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1223 "xmltok_impl.c"
      case 21: // $bb14
        var $58=$ptr_addr; //@line 1224 "xmltok_impl.c"
        var $59=$58+2; //@line 1224 "xmltok_impl.c"
        var $60=$nextTokPtr_addr; //@line 1224 "xmltok_impl.c"
        HEAP[$60]=$59; //@line 1224 "xmltok_impl.c"
        $2=7; //@line 1225 "xmltok_impl.c"
        __label__ = 45; break; //@line 1225 "xmltok_impl.c"
      case 22: // $bb15
        var $61=$nextTokPtr_addr; //@line 1227 "xmltok_impl.c"
        var $62=$ptr_addr; //@line 1227 "xmltok_impl.c"
        HEAP[$61]=$62; //@line 1227 "xmltok_impl.c"
        $2=6; //@line 1228 "xmltok_impl.c"
        __label__ = 45; break; //@line 1228 "xmltok_impl.c"
      case 23: // $bb16
        var $63=$ptr_addr; //@line 1230 "xmltok_impl.c"
        var $64=$start; //@line 1230 "xmltok_impl.c"
        var $65=($63)==($64); //@line 1230 "xmltok_impl.c"
        if ($65) { __label__ = 24; break; } else { __label__ = 38; break; } //@line 1230 "xmltok_impl.c"
      case 24: // $bb17
        var $66=$ptr_addr; //@line 1231 "xmltok_impl.c"
        var $67=$66+2; //@line 1231 "xmltok_impl.c"
        $ptr_addr=$67; //@line 1231 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 1232 "xmltok_impl.c"
        var $69=$end_addr; //@line 1232 "xmltok_impl.c"
        var $70=($68)==($69); //@line 1232 "xmltok_impl.c"
        if ($70) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1232 "xmltok_impl.c"
      case 25: // $bb18
        $2=-3; //@line 1233 "xmltok_impl.c"
        __label__ = 45; break; //@line 1233 "xmltok_impl.c"
      case 26: // $bb19
        var $71=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $72=$71+1; //@line 1234 "xmltok_impl.c"
        var $73=HEAP[$72]; //@line 1234 "xmltok_impl.c"
        var $74=($73)==0; //@line 1234 "xmltok_impl.c"
        if ($74) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1234 "xmltok_impl.c"
      case 27: // $bb20
        var $75=$enc_addr; //@line 1234 "xmltok_impl.c"
        var $76=$75; //@line 1234 "xmltok_impl.c"
        var $77=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $78=HEAP[$77]; //@line 1234 "xmltok_impl.c"
        var $79=($78); //@line 1234 "xmltok_impl.c"
        var $80=$76+72; //@line 1234 "xmltok_impl.c"
        var $81=$80+$79; //@line 1234 "xmltok_impl.c"
        var $82=HEAP[$81]; //@line 1234 "xmltok_impl.c"
        var $83=($82)==10; //@line 1234 "xmltok_impl.c"
        var $84=($83); //@line 1234 "xmltok_impl.c"
        $iftmp_797=$84; //@line 1234 "xmltok_impl.c"
        __lastLabel__ = 27; __label__ = 35; break; //@line 1234 "xmltok_impl.c"
      case 28: // $bb21
        var $85=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $86=$85; //@line 1234 "xmltok_impl.c"
        var $87=HEAP[$86]; //@line 1234 "xmltok_impl.c"
        var $88=($87); //@line 1234 "xmltok_impl.c"
        var $89=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $90=$89+1; //@line 1234 "xmltok_impl.c"
        var $91=HEAP[$90]; //@line 1234 "xmltok_impl.c"
        var $92=($91); //@line 1234 "xmltok_impl.c"
        var $93=((($92)) & 255); //@line 1234 "xmltok_impl.c"
        var $94=((($88)) & 255); //@line 1234 "xmltok_impl.c"
        $hi_addr_i1=$93;
        $lo_addr_i2=$94;
        var $95=$hi_addr_i1; //@line 518 "xmltok.c"
        var $96=($95); //@line 518 "xmltok.c"
        if ($96 == 216) {
          __label__ = 29; break;
        }
        else if ($96 == 217) {
          __label__ = 29; break;
        }
        else if ($96 == 218) {
          __label__ = 29; break;
        }
        else if ($96 == 219) {
          __label__ = 29; break;
        }
        else if ($96 == 220) {
          __label__ = 30; break;
        }
        else if ($96 == 221) {
          __label__ = 30; break;
        }
        else if ($96 == 222) {
          __label__ = 30; break;
        }
        else if ($96 == 223) {
          __label__ = 30; break;
        }
        else if ($96 == 255) {
          __label__ = 31; break;
        }
        else {
        __label__ = 33; break;
        }
        
      case 29: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 34; break; //@line 520 "xmltok.c"
      case 30: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 34; break; //@line 522 "xmltok.c"
      case 31: // $bb2_i8
        var $97=$lo_addr_i2; //@line 524 "xmltok.c"
        var $98=($97); //@line 524 "xmltok.c"
        var $_off_i6=($98) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 32; break; } else { __label__ = 33; break; }
      case 32: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 34; break; //@line 527 "xmltok.c"
      case 33: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 34; break; //@line 531 "xmltok.c"
      case 34: // $unicode_byte_type_exit12
        var $99=$0; //@line 520 "xmltok.c"
        $retval_i3=$99; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $100=($retval6_i11)==10; //@line 1234 "xmltok_impl.c"
        var $101=($100); //@line 1234 "xmltok_impl.c"
        $iftmp_797=$101; //@line 1234 "xmltok_impl.c"
        __lastLabel__ = 34; __label__ = 35; break; //@line 1234 "xmltok_impl.c"
      case 35: // $bb22
        var $102=__lastLabel__ == 34 ? $101 : ($84);
        var $toBool=($102)!=0; //@line 1234 "xmltok_impl.c"
        if ($toBool) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 1234 "xmltok_impl.c"
      case 36: // $bb23
        var $103=$ptr_addr; //@line 1235 "xmltok_impl.c"
        var $104=$103+2; //@line 1235 "xmltok_impl.c"
        $ptr_addr=$104; //@line 1235 "xmltok_impl.c"
        __label__ = 37; break; //@line 1235 "xmltok_impl.c"
      case 37: // $bb24
        var $105=$nextTokPtr_addr; //@line 1236 "xmltok_impl.c"
        var $106=$ptr_addr; //@line 1236 "xmltok_impl.c"
        HEAP[$105]=$106; //@line 1236 "xmltok_impl.c"
        $2=7; //@line 1237 "xmltok_impl.c"
        __label__ = 45; break; //@line 1237 "xmltok_impl.c"
      case 38: // $bb25
        var $107=$nextTokPtr_addr; //@line 1239 "xmltok_impl.c"
        var $108=$ptr_addr; //@line 1239 "xmltok_impl.c"
        HEAP[$107]=$108; //@line 1239 "xmltok_impl.c"
        $2=6; //@line 1240 "xmltok_impl.c"
        __label__ = 45; break; //@line 1240 "xmltok_impl.c"
      case 39: // $bb26
        var $109=$ptr_addr; //@line 1242 "xmltok_impl.c"
        var $110=$start; //@line 1242 "xmltok_impl.c"
        var $111=($109)==($110); //@line 1242 "xmltok_impl.c"
        if ($111) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1242 "xmltok_impl.c"
      case 40: // $bb27
        var $112=$ptr_addr; //@line 1243 "xmltok_impl.c"
        var $113=$112+2; //@line 1243 "xmltok_impl.c"
        var $114=$nextTokPtr_addr; //@line 1243 "xmltok_impl.c"
        HEAP[$114]=$113; //@line 1243 "xmltok_impl.c"
        $2=39; //@line 1244 "xmltok_impl.c"
        __label__ = 45; break; //@line 1244 "xmltok_impl.c"
      case 41: // $bb28
        var $115=$nextTokPtr_addr; //@line 1246 "xmltok_impl.c"
        var $116=$ptr_addr; //@line 1246 "xmltok_impl.c"
        HEAP[$115]=$116; //@line 1246 "xmltok_impl.c"
        $2=6; //@line 1247 "xmltok_impl.c"
        __label__ = 45; break; //@line 1247 "xmltok_impl.c"
      case 42: // $bb29
        var $117=$ptr_addr; //@line 1249 "xmltok_impl.c"
        var $118=$117+2; //@line 1249 "xmltok_impl.c"
        $ptr_addr=$118; //@line 1249 "xmltok_impl.c"
        __label__ = 43; break; //@line 1249 "xmltok_impl.c"
      case 43: // $bb30
        var $119=$ptr_addr; //@line 1207 "xmltok_impl.c"
        var $120=$end_addr; //@line 1207 "xmltok_impl.c"
        var $121=($119)!=($120); //@line 1207 "xmltok_impl.c"
        if ($121) { __label__ = 3; break; } else { __label__ = 44; break; } //@line 1207 "xmltok_impl.c"
      case 44: // $bb31
        var $122=$nextTokPtr_addr; //@line 1253 "xmltok_impl.c"
        var $123=$ptr_addr; //@line 1253 "xmltok_impl.c"
        HEAP[$122]=$123; //@line 1253 "xmltok_impl.c"
        $2=6; //@line 1254 "xmltok_impl.c"
        __label__ = 45; break; //@line 1254 "xmltok_impl.c"
      case 45: // $bb32
        var $124=$2; //@line 1205 "xmltok_impl.c"
        $retval=$124; //@line 1205 "xmltok_impl.c"
        var $retval33=$retval; //@line 1205 "xmltok_impl.c"
        ;
        return $retval33; //@line 1205 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_entityValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_802;
        var $iftmp_801;
        var $iftmp_799;
        var $2;
        var $start;
        var $tok;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 1262 "xmltok_impl.c"
        var $4=$end_addr; //@line 1262 "xmltok_impl.c"
        var $5=($3)==($4); //@line 1262 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1262 "xmltok_impl.c"
      case 1: // $bb
        $2=-4; //@line 1263 "xmltok_impl.c"
        __label__ = 47; break; //@line 1263 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 1264 "xmltok_impl.c"
        $start=$6; //@line 1264 "xmltok_impl.c"
        __label__ = 45; break; //@line 1264 "xmltok_impl.c"
      case 3: // $bb2
        var $7=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $8=$7+1; //@line 1266 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1266 "xmltok_impl.c"
        var $10=($9)==0; //@line 1266 "xmltok_impl.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1266 "xmltok_impl.c"
      case 4: // $bb3
        var $11=$enc_addr; //@line 1266 "xmltok_impl.c"
        var $12=$11; //@line 1266 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1266 "xmltok_impl.c"
        var $15=($14); //@line 1266 "xmltok_impl.c"
        var $16=$12+72; //@line 1266 "xmltok_impl.c"
        var $17=$16+$15; //@line 1266 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1266 "xmltok_impl.c"
        var $19=($18); //@line 1266 "xmltok_impl.c"
        $iftmp_799=$19; //@line 1266 "xmltok_impl.c"
        __lastLabel__ = 4; __label__ = 12; break; //@line 1266 "xmltok_impl.c"
      case 5: // $bb4
        var $20=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $21=$20; //@line 1266 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1266 "xmltok_impl.c"
        var $23=($22); //@line 1266 "xmltok_impl.c"
        var $24=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $25=$24+1; //@line 1266 "xmltok_impl.c"
        var $26=HEAP[$25]; //@line 1266 "xmltok_impl.c"
        var $27=($26); //@line 1266 "xmltok_impl.c"
        var $28=((($27)) & 255); //@line 1266 "xmltok_impl.c"
        var $29=((($23)) & 255); //@line 1266 "xmltok_impl.c"
        $hi_addr_i=$28;
        $lo_addr_i=$29;
        var $30=$hi_addr_i; //@line 518 "xmltok.c"
        var $31=($30); //@line 518 "xmltok.c"
        if ($31 == 216) {
          __label__ = 6; break;
        }
        else if ($31 == 217) {
          __label__ = 6; break;
        }
        else if ($31 == 218) {
          __label__ = 6; break;
        }
        else if ($31 == 219) {
          __label__ = 6; break;
        }
        else if ($31 == 220) {
          __label__ = 7; break;
        }
        else if ($31 == 221) {
          __label__ = 7; break;
        }
        else if ($31 == 222) {
          __label__ = 7; break;
        }
        else if ($31 == 223) {
          __label__ = 7; break;
        }
        else if ($31 == 255) {
          __label__ = 8; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 6: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 11; break; //@line 520 "xmltok.c"
      case 7: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 11; break; //@line 522 "xmltok.c"
      case 8: // $bb2_i
        var $32=$lo_addr_i; //@line 524 "xmltok.c"
        var $33=($32); //@line 524 "xmltok.c"
        var $_off_i=($33) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 9; break; } else { __label__ = 10; break; }
      case 9: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 11; break; //@line 527 "xmltok.c"
      case 10: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 11; break; //@line 531 "xmltok.c"
      case 11: // $unicode_byte_type_exit
        var $34=$1; //@line 520 "xmltok.c"
        $retval_i=$34; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_799=$retval6_i; //@line 1266 "xmltok_impl.c"
        __lastLabel__ = 11; __label__ = 12; break; //@line 1266 "xmltok_impl.c"
      case 12: // $bb5
        var $35=__lastLabel__ == 11 ? $retval6_i : ($19);
        if ($35 == 3) {
          __label__ = 16; break;
        }
        else if ($35 == 5) {
          __label__ = 13; break;
        }
        else if ($35 == 6) {
          __label__ = 14; break;
        }
        else if ($35 == 7) {
          __label__ = 15; break;
        }
        else if ($35 == 9) {
          __label__ = 28; break;
        }
        else if ($35 == 10) {
          __label__ = 25; break;
        }
        else if ($35 == 30) {
          __label__ = 19; break;
        }
        else {
        __label__ = 44; break;
        }
        
      case 13: // $bb6
        var $36=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $37=$36+2; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$37; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 14: // $bb7
        var $38=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $39=$38+3; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$39; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 15: // $bb8
        var $40=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $41=$40+4; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$41; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 16: // $bb9
        var $42=$ptr_addr; //@line 1272 "xmltok_impl.c"
        var $43=$start; //@line 1272 "xmltok_impl.c"
        var $44=($42)==($43); //@line 1272 "xmltok_impl.c"
        if ($44) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1272 "xmltok_impl.c"
      case 17: // $bb10
        var $45=$ptr_addr; //@line 1273 "xmltok_impl.c"
        var $46=$45+2; //@line 1273 "xmltok_impl.c"
        var $47=$enc_addr; //@line 1273 "xmltok_impl.c"
        var $48=$end_addr; //@line 1273 "xmltok_impl.c"
        var $49=$nextTokPtr_addr; //@line 1273 "xmltok_impl.c"
        var $50=_little2_scanRef($47, $46, $48, $49); //@line 1273 "xmltok_impl.c"
        $2=$50; //@line 1273 "xmltok_impl.c"
        __label__ = 47; break; //@line 1273 "xmltok_impl.c"
      case 18: // $bb11
        var $51=$nextTokPtr_addr; //@line 1274 "xmltok_impl.c"
        var $52=$ptr_addr; //@line 1274 "xmltok_impl.c"
        HEAP[$51]=$52; //@line 1274 "xmltok_impl.c"
        $2=6; //@line 1275 "xmltok_impl.c"
        __label__ = 47; break; //@line 1275 "xmltok_impl.c"
      case 19: // $bb12
        var $53=$ptr_addr; //@line 1277 "xmltok_impl.c"
        var $54=$start; //@line 1277 "xmltok_impl.c"
        var $55=($53)==($54); //@line 1277 "xmltok_impl.c"
        if ($55) { __label__ = 20; break; } else { __label__ = 24; break; } //@line 1277 "xmltok_impl.c"
      case 20: // $bb13
        var $56=$ptr_addr; //@line 1279 "xmltok_impl.c"
        var $57=$56+2; //@line 1279 "xmltok_impl.c"
        var $58=$enc_addr; //@line 1279 "xmltok_impl.c"
        var $59=$end_addr; //@line 1279 "xmltok_impl.c"
        var $60=$nextTokPtr_addr; //@line 1279 "xmltok_impl.c"
        var $61=_little2_scanPercent($58, $57, $59, $60); //@line 1279 "xmltok_impl.c"
        $tok=$61; //@line 1279 "xmltok_impl.c"
        var $62=$tok; //@line 1280 "xmltok_impl.c"
        var $63=($62)!=22; //@line 1280 "xmltok_impl.c"
        if ($63) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1280 "xmltok_impl.c"
      case 21: // $bb14
        var $64=$tok; //@line 1280 "xmltok_impl.c"
        $iftmp_801=$64; //@line 1280 "xmltok_impl.c"
        __label__ = 23; break; //@line 1280 "xmltok_impl.c"
      case 22: // $bb15
        $iftmp_801=0; //@line 1280 "xmltok_impl.c"
        __label__ = 23; break; //@line 1280 "xmltok_impl.c"
      case 23: // $bb16
        var $65=$iftmp_801; //@line 1280 "xmltok_impl.c"
        $2=$65; //@line 1280 "xmltok_impl.c"
        __label__ = 47; break; //@line 1280 "xmltok_impl.c"
      case 24: // $bb17
        var $66=$nextTokPtr_addr; //@line 1282 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 1282 "xmltok_impl.c"
        HEAP[$66]=$67; //@line 1282 "xmltok_impl.c"
        $2=6; //@line 1283 "xmltok_impl.c"
        __label__ = 47; break; //@line 1283 "xmltok_impl.c"
      case 25: // $bb18
        var $68=$ptr_addr; //@line 1285 "xmltok_impl.c"
        var $69=$start; //@line 1285 "xmltok_impl.c"
        var $70=($68)==($69); //@line 1285 "xmltok_impl.c"
        if ($70) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1285 "xmltok_impl.c"
      case 26: // $bb19
        var $71=$ptr_addr; //@line 1286 "xmltok_impl.c"
        var $72=$71+2; //@line 1286 "xmltok_impl.c"
        var $73=$nextTokPtr_addr; //@line 1286 "xmltok_impl.c"
        HEAP[$73]=$72; //@line 1286 "xmltok_impl.c"
        $2=7; //@line 1287 "xmltok_impl.c"
        __label__ = 47; break; //@line 1287 "xmltok_impl.c"
      case 27: // $bb20
        var $74=$nextTokPtr_addr; //@line 1289 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 1289 "xmltok_impl.c"
        HEAP[$74]=$75; //@line 1289 "xmltok_impl.c"
        $2=6; //@line 1290 "xmltok_impl.c"
        __label__ = 47; break; //@line 1290 "xmltok_impl.c"
      case 28: // $bb21
        var $76=$ptr_addr; //@line 1292 "xmltok_impl.c"
        var $77=$start; //@line 1292 "xmltok_impl.c"
        var $78=($76)==($77); //@line 1292 "xmltok_impl.c"
        if ($78) { __label__ = 29; break; } else { __label__ = 43; break; } //@line 1292 "xmltok_impl.c"
      case 29: // $bb22
        var $79=$ptr_addr; //@line 1293 "xmltok_impl.c"
        var $80=$79+2; //@line 1293 "xmltok_impl.c"
        $ptr_addr=$80; //@line 1293 "xmltok_impl.c"
        var $81=$ptr_addr; //@line 1294 "xmltok_impl.c"
        var $82=$end_addr; //@line 1294 "xmltok_impl.c"
        var $83=($81)==($82); //@line 1294 "xmltok_impl.c"
        if ($83) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1294 "xmltok_impl.c"
      case 30: // $bb23
        $2=-3; //@line 1295 "xmltok_impl.c"
        __label__ = 47; break; //@line 1295 "xmltok_impl.c"
      case 31: // $bb24
        var $84=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $85=$84+1; //@line 1296 "xmltok_impl.c"
        var $86=HEAP[$85]; //@line 1296 "xmltok_impl.c"
        var $87=($86)==0; //@line 1296 "xmltok_impl.c"
        if ($87) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1296 "xmltok_impl.c"
      case 32: // $bb25
        var $88=$enc_addr; //@line 1296 "xmltok_impl.c"
        var $89=$88; //@line 1296 "xmltok_impl.c"
        var $90=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $91=HEAP[$90]; //@line 1296 "xmltok_impl.c"
        var $92=($91); //@line 1296 "xmltok_impl.c"
        var $93=$89+72; //@line 1296 "xmltok_impl.c"
        var $94=$93+$92; //@line 1296 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 1296 "xmltok_impl.c"
        var $96=($95)==10; //@line 1296 "xmltok_impl.c"
        var $97=($96); //@line 1296 "xmltok_impl.c"
        $iftmp_802=$97; //@line 1296 "xmltok_impl.c"
        __lastLabel__ = 32; __label__ = 40; break; //@line 1296 "xmltok_impl.c"
      case 33: // $bb26
        var $98=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $99=$98; //@line 1296 "xmltok_impl.c"
        var $100=HEAP[$99]; //@line 1296 "xmltok_impl.c"
        var $101=($100); //@line 1296 "xmltok_impl.c"
        var $102=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $103=$102+1; //@line 1296 "xmltok_impl.c"
        var $104=HEAP[$103]; //@line 1296 "xmltok_impl.c"
        var $105=($104); //@line 1296 "xmltok_impl.c"
        var $106=((($105)) & 255); //@line 1296 "xmltok_impl.c"
        var $107=((($101)) & 255); //@line 1296 "xmltok_impl.c"
        $hi_addr_i1=$106;
        $lo_addr_i2=$107;
        var $108=$hi_addr_i1; //@line 518 "xmltok.c"
        var $109=($108); //@line 518 "xmltok.c"
        if ($109 == 216) {
          __label__ = 34; break;
        }
        else if ($109 == 217) {
          __label__ = 34; break;
        }
        else if ($109 == 218) {
          __label__ = 34; break;
        }
        else if ($109 == 219) {
          __label__ = 34; break;
        }
        else if ($109 == 220) {
          __label__ = 35; break;
        }
        else if ($109 == 221) {
          __label__ = 35; break;
        }
        else if ($109 == 222) {
          __label__ = 35; break;
        }
        else if ($109 == 223) {
          __label__ = 35; break;
        }
        else if ($109 == 255) {
          __label__ = 36; break;
        }
        else {
        __label__ = 38; break;
        }
        
      case 34: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 39; break; //@line 520 "xmltok.c"
      case 35: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 39; break; //@line 522 "xmltok.c"
      case 36: // $bb2_i8
        var $110=$lo_addr_i2; //@line 524 "xmltok.c"
        var $111=($110); //@line 524 "xmltok.c"
        var $_off_i6=($111) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 37; break; } else { __label__ = 38; break; }
      case 37: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 39; break; //@line 527 "xmltok.c"
      case 38: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 39; break; //@line 531 "xmltok.c"
      case 39: // $unicode_byte_type_exit12
        var $112=$0; //@line 520 "xmltok.c"
        $retval_i3=$112; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $113=($retval6_i11)==10; //@line 1296 "xmltok_impl.c"
        var $114=($113); //@line 1296 "xmltok_impl.c"
        $iftmp_802=$114; //@line 1296 "xmltok_impl.c"
        __lastLabel__ = 39; __label__ = 40; break; //@line 1296 "xmltok_impl.c"
      case 40: // $bb27
        var $115=__lastLabel__ == 39 ? $114 : ($97);
        var $toBool=($115)!=0; //@line 1296 "xmltok_impl.c"
        if ($toBool) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 1296 "xmltok_impl.c"
      case 41: // $bb28
        var $116=$ptr_addr; //@line 1297 "xmltok_impl.c"
        var $117=$116+2; //@line 1297 "xmltok_impl.c"
        $ptr_addr=$117; //@line 1297 "xmltok_impl.c"
        __label__ = 42; break; //@line 1297 "xmltok_impl.c"
      case 42: // $bb29
        var $118=$nextTokPtr_addr; //@line 1298 "xmltok_impl.c"
        var $119=$ptr_addr; //@line 1298 "xmltok_impl.c"
        HEAP[$118]=$119; //@line 1298 "xmltok_impl.c"
        $2=7; //@line 1299 "xmltok_impl.c"
        __label__ = 47; break; //@line 1299 "xmltok_impl.c"
      case 43: // $bb30
        var $120=$nextTokPtr_addr; //@line 1301 "xmltok_impl.c"
        var $121=$ptr_addr; //@line 1301 "xmltok_impl.c"
        HEAP[$120]=$121; //@line 1301 "xmltok_impl.c"
        $2=6; //@line 1302 "xmltok_impl.c"
        __label__ = 47; break; //@line 1302 "xmltok_impl.c"
      case 44: // $bb31
        var $122=$ptr_addr; //@line 1304 "xmltok_impl.c"
        var $123=$122+2; //@line 1304 "xmltok_impl.c"
        $ptr_addr=$123; //@line 1304 "xmltok_impl.c"
        __label__ = 45; break; //@line 1304 "xmltok_impl.c"
      case 45: // $bb32
        var $124=$ptr_addr; //@line 1265 "xmltok_impl.c"
        var $125=$end_addr; //@line 1265 "xmltok_impl.c"
        var $126=($124)!=($125); //@line 1265 "xmltok_impl.c"
        if ($126) { __label__ = 3; break; } else { __label__ = 46; break; } //@line 1265 "xmltok_impl.c"
      case 46: // $bb33
        var $127=$nextTokPtr_addr; //@line 1308 "xmltok_impl.c"
        var $128=$ptr_addr; //@line 1308 "xmltok_impl.c"
        HEAP[$127]=$128; //@line 1308 "xmltok_impl.c"
        $2=6; //@line 1309 "xmltok_impl.c"
        __label__ = 47; break; //@line 1309 "xmltok_impl.c"
      case 47: // $bb34
        var $129=$2; //@line 1263 "xmltok_impl.c"
        $retval=$129; //@line 1263 "xmltok_impl.c"
        var $retval35=$retval; //@line 1263 "xmltok_impl.c"
        ;
        return $retval35; //@line 1263 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_isPublicId($enc, $ptr, $end, $badPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $badPtr_addr;
        var $retval;
        var $iftmp_806;
        var $1;
        var $iftmp_804;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $badPtr_addr=$badPtr;
        var $2=$ptr_addr; //@line 1371 "xmltok_impl.c"
        var $3=$2+2; //@line 1371 "xmltok_impl.c"
        $ptr_addr=$3; //@line 1371 "xmltok_impl.c"
        var $4=$end_addr; //@line 1372 "xmltok_impl.c"
        var $5=$4+-2; //@line 1372 "xmltok_impl.c"
        $end_addr=$5; //@line 1372 "xmltok_impl.c"
        __label__ = 21; break; //@line 1372 "xmltok_impl.c"
      case 1: // $bb
        var $6=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $7=$6+1; //@line 1374 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1374 "xmltok_impl.c"
        var $9=($8)==0; //@line 1374 "xmltok_impl.c"
        if ($9) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1374 "xmltok_impl.c"
      case 2: // $bb1
        var $10=$enc_addr; //@line 1374 "xmltok_impl.c"
        var $11=$10; //@line 1374 "xmltok_impl.c"
        var $12=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 1374 "xmltok_impl.c"
        var $14=($13); //@line 1374 "xmltok_impl.c"
        var $15=$11+72; //@line 1374 "xmltok_impl.c"
        var $16=$15+$14; //@line 1374 "xmltok_impl.c"
        var $17=HEAP[$16]; //@line 1374 "xmltok_impl.c"
        var $18=($17); //@line 1374 "xmltok_impl.c"
        $iftmp_804=$18; //@line 1374 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1374 "xmltok_impl.c"
      case 3: // $bb2
        var $19=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $20=$19; //@line 1374 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 1374 "xmltok_impl.c"
        var $22=($21); //@line 1374 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $24=$23+1; //@line 1374 "xmltok_impl.c"
        var $25=HEAP[$24]; //@line 1374 "xmltok_impl.c"
        var $26=($25); //@line 1374 "xmltok_impl.c"
        var $27=((($26)) & 255); //@line 1374 "xmltok_impl.c"
        var $28=((($22)) & 255); //@line 1374 "xmltok_impl.c"
        $hi_addr_i=$27;
        $lo_addr_i=$28;
        var $29=$hi_addr_i; //@line 518 "xmltok.c"
        var $30=($29); //@line 518 "xmltok.c"
        if ($30 == 216) {
          __label__ = 4; break;
        }
        else if ($30 == 217) {
          __label__ = 4; break;
        }
        else if ($30 == 218) {
          __label__ = 4; break;
        }
        else if ($30 == 219) {
          __label__ = 4; break;
        }
        else if ($30 == 220) {
          __label__ = 5; break;
        }
        else if ($30 == 221) {
          __label__ = 5; break;
        }
        else if ($30 == 222) {
          __label__ = 5; break;
        }
        else if ($30 == 223) {
          __label__ = 5; break;
        }
        else if ($30 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $31=$lo_addr_i; //@line 524 "xmltok.c"
        var $32=($31); //@line 524 "xmltok.c"
        var $_off_i=($32) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $33=$0; //@line 520 "xmltok.c"
        $retval_i=$33; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_804=$retval6_i; //@line 1374 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1374 "xmltok_impl.c"
      case 10: // $bb3
        var $34=__lastLabel__ == 9 ? $retval6_i : ($18);
        if ($34 == 9) {
          __label__ = 20; break;
        }
        else if ($34 == 10) {
          __label__ = 20; break;
        }
        else if ($34 == 13) {
          __label__ = 20; break;
        }
        else if ($34 == 14) {
          __label__ = 20; break;
        }
        else if ($34 == 15) {
          __label__ = 20; break;
        }
        else if ($34 == 16) {
          __label__ = 20; break;
        }
        else if ($34 == 17) {
          __label__ = 20; break;
        }
        else if ($34 == 18) {
          __label__ = 20; break;
        }
        else if ($34 == 19) {
          __label__ = 20; break;
        }
        else if ($34 == 21) {
          __label__ = 11; break;
        }
        else if ($34 == 22) {
          __label__ = 14; break;
        }
        else if ($34 == 24) {
          __label__ = 20; break;
        }
        else if ($34 == 25) {
          __label__ = 20; break;
        }
        else if ($34 == 26) {
          __label__ = 14; break;
        }
        else if ($34 == 27) {
          __label__ = 20; break;
        }
        else if ($34 == 30) {
          __label__ = 20; break;
        }
        else if ($34 == 31) {
          __label__ = 20; break;
        }
        else if ($34 == 32) {
          __label__ = 20; break;
        }
        else if ($34 == 33) {
          __label__ = 20; break;
        }
        else if ($34 == 34) {
          __label__ = 20; break;
        }
        else if ($34 == 35) {
          __label__ = 20; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 11: // $bb5
        var $35=$ptr_addr; //@line 1398 "xmltok_impl.c"
        var $36=$35+1; //@line 1398 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 1398 "xmltok_impl.c"
        var $38=($37)==0; //@line 1398 "xmltok_impl.c"
        if ($38) { __label__ = 12; break; } else { __label__ = 20; break; } //@line 1398 "xmltok_impl.c"
      case 12: // $bb6
        var $39=$ptr_addr; //@line 1398 "xmltok_impl.c"
        var $40=$39; //@line 1398 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 1398 "xmltok_impl.c"
        var $42=($41)==9; //@line 1398 "xmltok_impl.c"
        if ($42) { __label__ = 13; break; } else { __label__ = 20; break; } //@line 1398 "xmltok_impl.c"
      case 13: // $bb7
        var $43=$badPtr_addr; //@line 1399 "xmltok_impl.c"
        var $44=$ptr_addr; //@line 1399 "xmltok_impl.c"
        HEAP[$43]=$44; //@line 1399 "xmltok_impl.c"
        $1=0; //@line 1400 "xmltok_impl.c"
        __label__ = 23; break; //@line 1400 "xmltok_impl.c"
      case 14: // $bb9
        var $45=$ptr_addr; //@line 1405 "xmltok_impl.c"
        var $46=$45+1; //@line 1405 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 1405 "xmltok_impl.c"
        var $48=($47)==0; //@line 1405 "xmltok_impl.c"
        if ($48) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 1405 "xmltok_impl.c"
      case 15: // $bb10
        var $49=$ptr_addr; //@line 1405 "xmltok_impl.c"
        var $50=$49; //@line 1405 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 1405 "xmltok_impl.c"
        var $52=($51); //@line 1405 "xmltok_impl.c"
        var $53=($52) & -128; //@line 1405 "xmltok_impl.c"
        var $54=($53)==0; //@line 1405 "xmltok_impl.c"
        if ($54) { __label__ = 20; break; } else { __label__ = 16; break; } //@line 1405 "xmltok_impl.c"
      case 16: // $bb11
        var $55=$ptr_addr; //@line 1408 "xmltok_impl.c"
        var $56=$55+1; //@line 1408 "xmltok_impl.c"
        var $57=HEAP[$56]; //@line 1408 "xmltok_impl.c"
        var $58=($57)==0; //@line 1408 "xmltok_impl.c"
        if ($58) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 1408 "xmltok_impl.c"
      case 17: // $bb14_thread
        $iftmp_806=-1; //@line 1408 "xmltok_impl.c"
        __label__ = 19; break;
      case 18: // $bb14
        var $59=$ptr_addr; //@line 1408 "xmltok_impl.c"
        var $60=$59; //@line 1408 "xmltok_impl.c"
        var $61=HEAP[$60]; //@line 1408 "xmltok_impl.c"
        var $62=($61); //@line 1408 "xmltok_impl.c"
        $iftmp_806=$62; //@line 1408 "xmltok_impl.c"
        if ($62 == 36) {
          __label__ = 20; break;
        }
        else if ($62 == 64) {
          __label__ = 20; break;
        }
        else {
        __label__ = 19; break;
        }
        
      case 19: // $bb16
        var $63=$badPtr_addr; //@line 1413 "xmltok_impl.c"
        var $64=$ptr_addr; //@line 1413 "xmltok_impl.c"
        HEAP[$63]=$64; //@line 1413 "xmltok_impl.c"
        $1=0; //@line 1414 "xmltok_impl.c"
        __label__ = 23; break; //@line 1414 "xmltok_impl.c"
      case 20: // $bb17
        var $65=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $66=$65+2; //@line 1373 "xmltok_impl.c"
        $ptr_addr=$66; //@line 1373 "xmltok_impl.c"
        __label__ = 21; break; //@line 1373 "xmltok_impl.c"
      case 21: // $bb18
        var $67=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $68=$end_addr; //@line 1373 "xmltok_impl.c"
        var $69=($67)!=($68); //@line 1373 "xmltok_impl.c"
        if ($69) { __label__ = 1; break; } else { __label__ = 22; break; } //@line 1373 "xmltok_impl.c"
      case 22: // $bb19
        $1=1; //@line 1419 "xmltok_impl.c"
        __label__ = 23; break; //@line 1419 "xmltok_impl.c"
      case 23: // $bb20
        var $70=$1; //@line 1400 "xmltok_impl.c"
        $retval=$70; //@line 1400 "xmltok_impl.c"
        var $retval21=$retval; //@line 1400 "xmltok_impl.c"
        ;
        return $retval21; //@line 1400 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_getAtts($enc, $ptr, $attsMax, $atts) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $attsMax_addr;
        var $atts_addr;
        var $retval;
        var $2;
        var $iftmp_809;
        var $iftmp_807;
        var $state;
        var $nAtts;
        var $open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $attsMax_addr=$attsMax;
        $atts_addr=$atts;
        $state=1; //@line 1431 "xmltok_impl.c"
        $nAtts=0; //@line 1432 "xmltok_impl.c"
        $open=0; //@line 1433 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $4=$3+2; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$4; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $6=$5+1; //@line 1437 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1437 "xmltok_impl.c"
        var $8=($7)==0; //@line 1437 "xmltok_impl.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1437 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$enc_addr; //@line 1437 "xmltok_impl.c"
        var $10=$9; //@line 1437 "xmltok_impl.c"
        var $11=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 1437 "xmltok_impl.c"
        var $13=($12); //@line 1437 "xmltok_impl.c"
        var $14=$10+72; //@line 1437 "xmltok_impl.c"
        var $15=$14+$13; //@line 1437 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1437 "xmltok_impl.c"
        var $17=($16); //@line 1437 "xmltok_impl.c"
        $iftmp_807=$17; //@line 1437 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1437 "xmltok_impl.c"
      case 3: // $bb2
        var $18=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $19=$18; //@line 1437 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 1437 "xmltok_impl.c"
        var $21=($20); //@line 1437 "xmltok_impl.c"
        var $22=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $23=$22+1; //@line 1437 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 1437 "xmltok_impl.c"
        var $25=($24); //@line 1437 "xmltok_impl.c"
        var $26=((($25)) & 255); //@line 1437 "xmltok_impl.c"
        var $27=((($21)) & 255); //@line 1437 "xmltok_impl.c"
        $hi_addr_i=$26;
        $lo_addr_i=$27;
        var $28=$hi_addr_i; //@line 518 "xmltok.c"
        var $29=($28); //@line 518 "xmltok.c"
        if ($29 == 216) {
          __label__ = 4; break;
        }
        else if ($29 == 217) {
          __label__ = 4; break;
        }
        else if ($29 == 218) {
          __label__ = 4; break;
        }
        else if ($29 == 219) {
          __label__ = 4; break;
        }
        else if ($29 == 220) {
          __label__ = 5; break;
        }
        else if ($29 == 221) {
          __label__ = 5; break;
        }
        else if ($29 == 222) {
          __label__ = 5; break;
        }
        else if ($29 == 223) {
          __label__ = 5; break;
        }
        else if ($29 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $30=$lo_addr_i; //@line 524 "xmltok.c"
        var $31=($30); //@line 524 "xmltok.c"
        var $_off_i=($31) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $32=$1; //@line 520 "xmltok.c"
        $retval_i=$32; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_807=$retval6_i; //@line 1437 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1437 "xmltok_impl.c"
      case 10: // $bb3
        var $33=__lastLabel__ == 9 ? $retval6_i : ($17);
        if ($33 == 3) {
          __label__ = 46; break;
        }
        else if ($33 == 5) {
          __label__ = 11; break;
        }
        else if ($33 == 6) {
          __label__ = 16; break;
        }
        else if ($33 == 7) {
          __label__ = 21; break;
        }
        else if ($33 == 9) {
          __label__ = 69; break;
        }
        else if ($33 == 10) {
          __label__ = 69; break;
        }
        else if ($33 == 11) {
          __label__ = 74; break;
        }
        else if ($33 == 12) {
          __label__ = 30; break;
        }
        else if ($33 == 13) {
          __label__ = 38; break;
        }
        else if ($33 == 17) {
          __label__ = 74; break;
        }
        else if ($33 == 21) {
          __label__ = 48; break;
        }
        else if ($33 == 22) {
          __label__ = 26; break;
        }
        else if ($33 == 24) {
          __label__ = 26; break;
        }
        else if ($33 == 29) {
          __label__ = 26; break;
        }
        else {
        __label__ = 76; break;
        }
        
      case 11: // $bb4
        var $34=$state; //@line 1448 "xmltok_impl.c"
        var $35=($34)==0; //@line 1448 "xmltok_impl.c"
        if ($35) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 1448 "xmltok_impl.c"
      case 12: // $bb5
        var $36=$nAtts; //@line 1448 "xmltok_impl.c"
        var $37=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $38=($36) < ($37); //@line 1448 "xmltok_impl.c"
        if ($38) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1448 "xmltok_impl.c"
      case 13: // $bb6
        var $39=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $40=$nAtts; //@line 1448 "xmltok_impl.c"
        var $41=$39+16*$40; //@line 1448 "xmltok_impl.c"
        var $42=$41; //@line 1448 "xmltok_impl.c"
        var $43=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$42]=$43; //@line 1448 "xmltok_impl.c"
        var $44=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $45=$nAtts; //@line 1448 "xmltok_impl.c"
        var $46=$44+16*$45; //@line 1448 "xmltok_impl.c"
        var $47=$46+12; //@line 1448 "xmltok_impl.c"
        HEAP[$47]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 14; break; //@line 1448 "xmltok_impl.c"
      case 14: // $bb7
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 15; break; //@line 1448 "xmltok_impl.c"
      case 15: // $bb8
        var $48=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $49=$48; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$49; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 16: // $bb9
        var $50=$state; //@line 1448 "xmltok_impl.c"
        var $51=($50)==0; //@line 1448 "xmltok_impl.c"
        if ($51) { __label__ = 17; break; } else { __label__ = 20; break; } //@line 1448 "xmltok_impl.c"
      case 17: // $bb10
        var $52=$nAtts; //@line 1448 "xmltok_impl.c"
        var $53=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $54=($52) < ($53); //@line 1448 "xmltok_impl.c"
        if ($54) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1448 "xmltok_impl.c"
      case 18: // $bb11
        var $55=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $56=$nAtts; //@line 1448 "xmltok_impl.c"
        var $57=$55+16*$56; //@line 1448 "xmltok_impl.c"
        var $58=$57; //@line 1448 "xmltok_impl.c"
        var $59=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$58]=$59; //@line 1448 "xmltok_impl.c"
        var $60=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $61=$nAtts; //@line 1448 "xmltok_impl.c"
        var $62=$60+16*$61; //@line 1448 "xmltok_impl.c"
        var $63=$62+12; //@line 1448 "xmltok_impl.c"
        HEAP[$63]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 19; break; //@line 1448 "xmltok_impl.c"
      case 19: // $bb12
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 20; break; //@line 1448 "xmltok_impl.c"
      case 20: // $bb13
        var $64=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $65=$64+1; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$65; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 21: // $bb14
        var $66=$state; //@line 1448 "xmltok_impl.c"
        var $67=($66)==0; //@line 1448 "xmltok_impl.c"
        if ($67) { __label__ = 22; break; } else { __label__ = 25; break; } //@line 1448 "xmltok_impl.c"
      case 22: // $bb15
        var $68=$nAtts; //@line 1448 "xmltok_impl.c"
        var $69=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $70=($68) < ($69); //@line 1448 "xmltok_impl.c"
        if ($70) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1448 "xmltok_impl.c"
      case 23: // $bb16
        var $71=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $72=$nAtts; //@line 1448 "xmltok_impl.c"
        var $73=$71+16*$72; //@line 1448 "xmltok_impl.c"
        var $74=$73; //@line 1448 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$74]=$75; //@line 1448 "xmltok_impl.c"
        var $76=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $77=$nAtts; //@line 1448 "xmltok_impl.c"
        var $78=$76+16*$77; //@line 1448 "xmltok_impl.c"
        var $79=$78+12; //@line 1448 "xmltok_impl.c"
        HEAP[$79]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 24; break; //@line 1448 "xmltok_impl.c"
      case 24: // $bb17
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 25; break; //@line 1448 "xmltok_impl.c"
      case 25: // $bb18
        var $80=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $81=$80+2; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$81; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 26: // $bb19
        var $82=$state; //@line 1453 "xmltok_impl.c"
        var $83=($82)==0; //@line 1453 "xmltok_impl.c"
        if ($83) { __label__ = 27; break; } else { __label__ = 76; break; } //@line 1453 "xmltok_impl.c"
      case 27: // $bb20
        var $84=$nAtts; //@line 1453 "xmltok_impl.c"
        var $85=$attsMax_addr; //@line 1453 "xmltok_impl.c"
        var $86=($84) < ($85); //@line 1453 "xmltok_impl.c"
        if ($86) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1453 "xmltok_impl.c"
      case 28: // $bb21
        var $87=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $88=$nAtts; //@line 1453 "xmltok_impl.c"
        var $89=$87+16*$88; //@line 1453 "xmltok_impl.c"
        var $90=$89; //@line 1453 "xmltok_impl.c"
        var $91=$ptr_addr; //@line 1453 "xmltok_impl.c"
        HEAP[$90]=$91; //@line 1453 "xmltok_impl.c"
        var $92=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $93=$nAtts; //@line 1453 "xmltok_impl.c"
        var $94=$92+16*$93; //@line 1453 "xmltok_impl.c"
        var $95=$94+12; //@line 1453 "xmltok_impl.c"
        HEAP[$95]=1; //@line 1453 "xmltok_impl.c"
        __label__ = 29; break; //@line 1453 "xmltok_impl.c"
      case 29: // $bb22
        $state=1; //@line 1453 "xmltok_impl.c"
        __label__ = 76; break; //@line 1453 "xmltok_impl.c"
      case 30: // $bb24
        var $96=$state; //@line 1457 "xmltok_impl.c"
        var $97=($96)!=2; //@line 1457 "xmltok_impl.c"
        if ($97) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 1457 "xmltok_impl.c"
      case 31: // $bb25
        var $98=$nAtts; //@line 1458 "xmltok_impl.c"
        var $99=$attsMax_addr; //@line 1458 "xmltok_impl.c"
        var $100=($98) < ($99); //@line 1458 "xmltok_impl.c"
        if ($100) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1458 "xmltok_impl.c"
      case 32: // $bb26
        var $101=$atts_addr; //@line 1459 "xmltok_impl.c"
        var $102=$nAtts; //@line 1459 "xmltok_impl.c"
        var $103=$101+16*$102; //@line 1459 "xmltok_impl.c"
        var $104=$ptr_addr; //@line 1459 "xmltok_impl.c"
        var $105=$104+2; //@line 1459 "xmltok_impl.c"
        var $106=$103+4; //@line 1459 "xmltok_impl.c"
        HEAP[$106]=$105; //@line 1459 "xmltok_impl.c"
        __label__ = 33; break; //@line 1459 "xmltok_impl.c"
      case 33: // $bb27
        $state=2; //@line 1460 "xmltok_impl.c"
        $open=12; //@line 1461 "xmltok_impl.c"
        __label__ = 76; break; //@line 1461 "xmltok_impl.c"
      case 34: // $bb28
        var $107=$open; //@line 1463 "xmltok_impl.c"
        var $108=($107)==12; //@line 1463 "xmltok_impl.c"
        if ($108) { __label__ = 35; break; } else { __label__ = 76; break; } //@line 1463 "xmltok_impl.c"
      case 35: // $bb29
        $state=0; //@line 1464 "xmltok_impl.c"
        var $109=$nAtts; //@line 1465 "xmltok_impl.c"
        var $110=$attsMax_addr; //@line 1465 "xmltok_impl.c"
        var $111=($109) < ($110); //@line 1465 "xmltok_impl.c"
        if ($111) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 1465 "xmltok_impl.c"
      case 36: // $bb30
        var $112=$atts_addr; //@line 1466 "xmltok_impl.c"
        var $113=$nAtts; //@line 1466 "xmltok_impl.c"
        var $114=$112+16*$113; //@line 1466 "xmltok_impl.c"
        var $115=$114+8; //@line 1466 "xmltok_impl.c"
        var $116=$ptr_addr; //@line 1466 "xmltok_impl.c"
        HEAP[$115]=$116; //@line 1466 "xmltok_impl.c"
        __label__ = 37; break; //@line 1466 "xmltok_impl.c"
      case 37: // $bb31
        var $117=$nAtts; //@line 1467 "xmltok_impl.c"
        var $118=($117) + 1; //@line 1467 "xmltok_impl.c"
        $nAtts=$118; //@line 1467 "xmltok_impl.c"
        __label__ = 76; break; //@line 1467 "xmltok_impl.c"
      case 38: // $bb33
        var $119=$state; //@line 1471 "xmltok_impl.c"
        var $120=($119)!=2; //@line 1471 "xmltok_impl.c"
        if ($120) { __label__ = 39; break; } else { __label__ = 42; break; } //@line 1471 "xmltok_impl.c"
      case 39: // $bb34
        var $121=$nAtts; //@line 1472 "xmltok_impl.c"
        var $122=$attsMax_addr; //@line 1472 "xmltok_impl.c"
        var $123=($121) < ($122); //@line 1472 "xmltok_impl.c"
        if ($123) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1472 "xmltok_impl.c"
      case 40: // $bb35
        var $124=$atts_addr; //@line 1473 "xmltok_impl.c"
        var $125=$nAtts; //@line 1473 "xmltok_impl.c"
        var $126=$124+16*$125; //@line 1473 "xmltok_impl.c"
        var $127=$ptr_addr; //@line 1473 "xmltok_impl.c"
        var $128=$127+2; //@line 1473 "xmltok_impl.c"
        var $129=$126+4; //@line 1473 "xmltok_impl.c"
        HEAP[$129]=$128; //@line 1473 "xmltok_impl.c"
        __label__ = 41; break; //@line 1473 "xmltok_impl.c"
      case 41: // $bb36
        $state=2; //@line 1474 "xmltok_impl.c"
        $open=13; //@line 1475 "xmltok_impl.c"
        __label__ = 76; break; //@line 1475 "xmltok_impl.c"
      case 42: // $bb37
        var $130=$open; //@line 1477 "xmltok_impl.c"
        var $131=($130)==13; //@line 1477 "xmltok_impl.c"
        if ($131) { __label__ = 43; break; } else { __label__ = 76; break; } //@line 1477 "xmltok_impl.c"
      case 43: // $bb38
        $state=0; //@line 1478 "xmltok_impl.c"
        var $132=$nAtts; //@line 1479 "xmltok_impl.c"
        var $133=$attsMax_addr; //@line 1479 "xmltok_impl.c"
        var $134=($132) < ($133); //@line 1479 "xmltok_impl.c"
        if ($134) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 1479 "xmltok_impl.c"
      case 44: // $bb39
        var $135=$atts_addr; //@line 1480 "xmltok_impl.c"
        var $136=$nAtts; //@line 1480 "xmltok_impl.c"
        var $137=$135+16*$136; //@line 1480 "xmltok_impl.c"
        var $138=$137+8; //@line 1480 "xmltok_impl.c"
        var $139=$ptr_addr; //@line 1480 "xmltok_impl.c"
        HEAP[$138]=$139; //@line 1480 "xmltok_impl.c"
        __label__ = 45; break; //@line 1480 "xmltok_impl.c"
      case 45: // $bb40
        var $140=$nAtts; //@line 1481 "xmltok_impl.c"
        var $141=($140) + 1; //@line 1481 "xmltok_impl.c"
        $nAtts=$141; //@line 1481 "xmltok_impl.c"
        __label__ = 76; break; //@line 1481 "xmltok_impl.c"
      case 46: // $bb42
        var $142=$nAtts; //@line 1485 "xmltok_impl.c"
        var $143=$attsMax_addr; //@line 1485 "xmltok_impl.c"
        var $144=($142) < ($143); //@line 1485 "xmltok_impl.c"
        if ($144) { __label__ = 47; break; } else { __label__ = 76; break; } //@line 1485 "xmltok_impl.c"
      case 47: // $bb43
        var $145=$atts_addr; //@line 1486 "xmltok_impl.c"
        var $146=$nAtts; //@line 1486 "xmltok_impl.c"
        var $147=$145+16*$146; //@line 1486 "xmltok_impl.c"
        var $148=$147+12; //@line 1486 "xmltok_impl.c"
        HEAP[$148]=0; //@line 1486 "xmltok_impl.c"
        __label__ = 76; break; //@line 1486 "xmltok_impl.c"
      case 48: // $bb45
        var $149=$state; //@line 1489 "xmltok_impl.c"
        var $150=($149)==1; //@line 1489 "xmltok_impl.c"
        if ($150) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 1489 "xmltok_impl.c"
      case 49: // $bb46
        $state=0; //@line 1490 "xmltok_impl.c"
        __label__ = 76; break; //@line 1490 "xmltok_impl.c"
      case 50: // $bb47
        var $151=$state; //@line 1491 "xmltok_impl.c"
        var $152=($151)==2; //@line 1491 "xmltok_impl.c"
        if ($152) { __label__ = 51; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 51: // $bb48
        var $153=$nAtts; //@line 1491 "xmltok_impl.c"
        var $154=$attsMax_addr; //@line 1491 "xmltok_impl.c"
        var $155=($153) < ($154); //@line 1491 "xmltok_impl.c"
        if ($155) { __label__ = 52; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 52: // $bb49
        var $156=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $157=$nAtts; //@line 1491 "xmltok_impl.c"
        var $158=$156+16*$157; //@line 1491 "xmltok_impl.c"
        var $159=$158+12; //@line 1491 "xmltok_impl.c"
        var $160=HEAP[$159]; //@line 1491 "xmltok_impl.c"
        var $161=($160)!=0; //@line 1491 "xmltok_impl.c"
        if ($161) { __label__ = 53; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 53: // $bb50
        var $162=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $163=$nAtts; //@line 1491 "xmltok_impl.c"
        var $164=$162+16*$163; //@line 1491 "xmltok_impl.c"
        var $165=$164+4; //@line 1491 "xmltok_impl.c"
        var $166=HEAP[$165]; //@line 1491 "xmltok_impl.c"
        var $167=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $168=($166)==($167); //@line 1491 "xmltok_impl.c"
        if ($168) { __label__ = 68; break; } else { __label__ = 54; break; } //@line 1491 "xmltok_impl.c"
      case 54: // $bb51
        var $169=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $170=$169+1; //@line 1491 "xmltok_impl.c"
        var $171=HEAP[$170]; //@line 1491 "xmltok_impl.c"
        var $172=($171)!=0; //@line 1491 "xmltok_impl.c"
        if ($172) { __label__ = 68; break; } else { __label__ = 55; break; } //@line 1491 "xmltok_impl.c"
      case 55: // $bb52
        var $173=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $174=$173; //@line 1491 "xmltok_impl.c"
        var $175=HEAP[$174]; //@line 1491 "xmltok_impl.c"
        var $176=($175)!=32; //@line 1491 "xmltok_impl.c"
        if ($176) { __label__ = 68; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 56: // $bb53
        var $177=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $178=$177+2; //@line 1491 "xmltok_impl.c"
        var $179=$178+1; //@line 1491 "xmltok_impl.c"
        var $180=HEAP[$179]; //@line 1491 "xmltok_impl.c"
        var $181=($180)!=0; //@line 1491 "xmltok_impl.c"
        if ($181) { __label__ = 58; break; } else { __label__ = 57; break; } //@line 1491 "xmltok_impl.c"
      case 57: // $bb54
        var $182=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $183=$182+2; //@line 1491 "xmltok_impl.c"
        var $184=$183; //@line 1491 "xmltok_impl.c"
        var $185=HEAP[$184]; //@line 1491 "xmltok_impl.c"
        var $186=($185)==32; //@line 1491 "xmltok_impl.c"
        if ($186) { __label__ = 68; break; } else { __label__ = 58; break; } //@line 1491 "xmltok_impl.c"
      case 58: // $bb55
        var $187=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $188=$187+2; //@line 1491 "xmltok_impl.c"
        var $189=$188+1; //@line 1491 "xmltok_impl.c"
        var $190=HEAP[$189]; //@line 1491 "xmltok_impl.c"
        var $191=($190)==0; //@line 1491 "xmltok_impl.c"
        if ($191) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 1491 "xmltok_impl.c"
      case 59: // $bb56
        var $192=$enc_addr; //@line 1491 "xmltok_impl.c"
        var $193=$192; //@line 1491 "xmltok_impl.c"
        var $194=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $195=$194+2; //@line 1491 "xmltok_impl.c"
        var $196=HEAP[$195]; //@line 1491 "xmltok_impl.c"
        var $197=($196); //@line 1491 "xmltok_impl.c"
        var $198=$193+72; //@line 1491 "xmltok_impl.c"
        var $199=$198+$197; //@line 1491 "xmltok_impl.c"
        var $200=HEAP[$199]; //@line 1491 "xmltok_impl.c"
        var $201=($200); //@line 1491 "xmltok_impl.c"
        $iftmp_809=$201; //@line 1491 "xmltok_impl.c"
        __label__ = 67; break; //@line 1491 "xmltok_impl.c"
      case 60: // $bb57
        var $202=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $203=$202+2; //@line 1491 "xmltok_impl.c"
        var $204=$203; //@line 1491 "xmltok_impl.c"
        var $205=HEAP[$204]; //@line 1491 "xmltok_impl.c"
        var $206=($205); //@line 1491 "xmltok_impl.c"
        var $207=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $208=$207+2; //@line 1491 "xmltok_impl.c"
        var $209=$208+1; //@line 1491 "xmltok_impl.c"
        var $210=HEAP[$209]; //@line 1491 "xmltok_impl.c"
        var $211=($210); //@line 1491 "xmltok_impl.c"
        var $212=((($211)) & 255); //@line 1491 "xmltok_impl.c"
        var $213=((($206)) & 255); //@line 1491 "xmltok_impl.c"
        $hi_addr_i1=$212;
        $lo_addr_i2=$213;
        var $214=$hi_addr_i1; //@line 518 "xmltok.c"
        var $215=($214); //@line 518 "xmltok.c"
        if ($215 == 216) {
          __label__ = 61; break;
        }
        else if ($215 == 217) {
          __label__ = 61; break;
        }
        else if ($215 == 218) {
          __label__ = 61; break;
        }
        else if ($215 == 219) {
          __label__ = 61; break;
        }
        else if ($215 == 220) {
          __label__ = 62; break;
        }
        else if ($215 == 221) {
          __label__ = 62; break;
        }
        else if ($215 == 222) {
          __label__ = 62; break;
        }
        else if ($215 == 223) {
          __label__ = 62; break;
        }
        else if ($215 == 255) {
          __label__ = 63; break;
        }
        else {
        __label__ = 65; break;
        }
        
      case 61: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 66; break; //@line 520 "xmltok.c"
      case 62: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 66; break; //@line 522 "xmltok.c"
      case 63: // $bb2_i8
        var $216=$lo_addr_i2; //@line 524 "xmltok.c"
        var $217=($216); //@line 524 "xmltok.c"
        var $_off_i6=($217) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 64; break; } else { __label__ = 65; break; }
      case 64: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 66; break; //@line 527 "xmltok.c"
      case 65: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 66; break; //@line 531 "xmltok.c"
      case 66: // $unicode_byte_type_exit12
        var $218=$0; //@line 520 "xmltok.c"
        $retval_i3=$218; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_809=$retval6_i11; //@line 1491 "xmltok_impl.c"
        __label__ = 67; break; //@line 1491 "xmltok_impl.c"
      case 67: // $bb58
        var $219=$iftmp_809; //@line 1491 "xmltok_impl.c"
        var $220=$open; //@line 1491 "xmltok_impl.c"
        var $221=($219)==($220); //@line 1491 "xmltok_impl.c"
        if ($221) { __label__ = 68; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 68: // $bb59
        var $222=$atts_addr; //@line 1498 "xmltok_impl.c"
        var $223=$nAtts; //@line 1498 "xmltok_impl.c"
        var $224=$222+16*$223; //@line 1498 "xmltok_impl.c"
        var $225=$224+12; //@line 1498 "xmltok_impl.c"
        HEAP[$225]=0; //@line 1498 "xmltok_impl.c"
        __label__ = 76; break; //@line 1498 "xmltok_impl.c"
      case 69: // $bb61
        var $226=$state; //@line 1503 "xmltok_impl.c"
        var $227=($226)==1; //@line 1503 "xmltok_impl.c"
        if ($227) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 1503 "xmltok_impl.c"
      case 70: // $bb62
        $state=0; //@line 1504 "xmltok_impl.c"
        __label__ = 76; break; //@line 1504 "xmltok_impl.c"
      case 71: // $bb63
        var $228=$state; //@line 1505 "xmltok_impl.c"
        var $229=($228)==2; //@line 1505 "xmltok_impl.c"
        if ($229) { __label__ = 72; break; } else { __label__ = 76; break; } //@line 1505 "xmltok_impl.c"
      case 72: // $bb64
        var $230=$nAtts; //@line 1505 "xmltok_impl.c"
        var $231=$attsMax_addr; //@line 1505 "xmltok_impl.c"
        var $232=($230) < ($231); //@line 1505 "xmltok_impl.c"
        if ($232) { __label__ = 73; break; } else { __label__ = 76; break; } //@line 1505 "xmltok_impl.c"
      case 73: // $bb65
        var $233=$atts_addr; //@line 1506 "xmltok_impl.c"
        var $234=$nAtts; //@line 1506 "xmltok_impl.c"
        var $235=$233+16*$234; //@line 1506 "xmltok_impl.c"
        var $236=$235+12; //@line 1506 "xmltok_impl.c"
        HEAP[$236]=0; //@line 1506 "xmltok_impl.c"
        __label__ = 76; break; //@line 1506 "xmltok_impl.c"
      case 74: // $bb67
        var $237=$state; //@line 1510 "xmltok_impl.c"
        var $238=($237)!=2; //@line 1510 "xmltok_impl.c"
        if ($238) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 1510 "xmltok_impl.c"
      case 75: // $bb68
        var $239=$nAtts; //@line 1511 "xmltok_impl.c"
        $2=$239; //@line 1511 "xmltok_impl.c"
        var $240=$2; //@line 1511 "xmltok_impl.c"
        $retval=$240; //@line 1511 "xmltok_impl.c"
        var $retval70=$retval; //@line 1436 "xmltok_impl.c"
        ;
        return $retval70; //@line 1436 "xmltok_impl.c"
      case 76: // $bb69
        var $241=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $242=$241+2; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$242; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_charRefNumber($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $result_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $iftmp_812;
        var $1;
        var $iftmp_811;
        var $result;
        var $c;
        var $c17;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $result=0; //@line 1523 "xmltok_impl.c"
        var $2=$ptr_addr; //@line 1525 "xmltok_impl.c"
        var $3=$2+4; //@line 1525 "xmltok_impl.c"
        $ptr_addr=$3; //@line 1525 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 1526 "xmltok_impl.c"
        var $5=$4+1; //@line 1526 "xmltok_impl.c"
        var $6=HEAP[$5]; //@line 1526 "xmltok_impl.c"
        var $7=($6)!=0; //@line 1526 "xmltok_impl.c"
        if ($7) { __label__ = 21; break; } else { __label__ = 1; break; } //@line 1526 "xmltok_impl.c"
      case 1: // $bb
        var $8=$ptr_addr; //@line 1526 "xmltok_impl.c"
        var $9=$8; //@line 1526 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1526 "xmltok_impl.c"
        var $11=($10)!=120; //@line 1526 "xmltok_impl.c"
        if ($11) { __label__ = 21; break; } else { __label__ = 2; break; } //@line 1526 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 1527 "xmltok_impl.c"
        var $13=$12+2; //@line 1527 "xmltok_impl.c"
        $ptr_addr=$13; //@line 1527 "xmltok_impl.c"
        __label__ = 13; break; //@line 1527 "xmltok_impl.c"
      case 3: // $bb2
        var $14=$ptr_addr; //@line 1530 "xmltok_impl.c"
        var $15=$14+1; //@line 1530 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1530 "xmltok_impl.c"
        var $17=($16)==0; //@line 1530 "xmltok_impl.c"
        if ($17) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1530 "xmltok_impl.c"
      case 4: // $bb5_thread
        $iftmp_811=-1; //@line 1530 "xmltok_impl.c"
        $c=-1; //@line 1530 "xmltok_impl.c"
        __label__ = 9; break;
      case 5: // $bb5
        var $18=$ptr_addr; //@line 1530 "xmltok_impl.c"
        var $19=$18; //@line 1530 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 1530 "xmltok_impl.c"
        var $21=($20); //@line 1530 "xmltok_impl.c"
        $iftmp_811=$21; //@line 1530 "xmltok_impl.c"
        $c=$21; //@line 1530 "xmltok_impl.c"
        if ($21 == 48) {
          __label__ = 6; break;
        }
        else if ($21 == 49) {
          __label__ = 6; break;
        }
        else if ($21 == 50) {
          __label__ = 6; break;
        }
        else if ($21 == 51) {
          __label__ = 6; break;
        }
        else if ($21 == 52) {
          __label__ = 6; break;
        }
        else if ($21 == 53) {
          __label__ = 6; break;
        }
        else if ($21 == 54) {
          __label__ = 6; break;
        }
        else if ($21 == 55) {
          __label__ = 6; break;
        }
        else if ($21 == 56) {
          __label__ = 6; break;
        }
        else if ($21 == 57) {
          __label__ = 6; break;
        }
        else if ($21 == 65) {
          __label__ = 7; break;
        }
        else if ($21 == 66) {
          __label__ = 7; break;
        }
        else if ($21 == 67) {
          __label__ = 7; break;
        }
        else if ($21 == 68) {
          __label__ = 7; break;
        }
        else if ($21 == 69) {
          __label__ = 7; break;
        }
        else if ($21 == 70) {
          __label__ = 7; break;
        }
        else if ($21 == 97) {
          __label__ = 8; break;
        }
        else if ($21 == 98) {
          __label__ = 8; break;
        }
        else if ($21 == 99) {
          __label__ = 8; break;
        }
        else if ($21 == 100) {
          __label__ = 8; break;
        }
        else if ($21 == 101) {
          __label__ = 8; break;
        }
        else if ($21 == 102) {
          __label__ = 8; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 6: // $bb6
        var $22=$result; //@line 1534 "xmltok_impl.c"
        var $23=($22) << 4; //@line 1534 "xmltok_impl.c"
        $result=$23; //@line 1534 "xmltok_impl.c"
        var $24=$c; //@line 1535 "xmltok_impl.c"
        var $25=($24) - 48; //@line 1535 "xmltok_impl.c"
        var $26=$result; //@line 1535 "xmltok_impl.c"
        var $27=($25) | ($26); //@line 1535 "xmltok_impl.c"
        $result=$27; //@line 1535 "xmltok_impl.c"
        __lastLabel__ = 6; __label__ = 10; break; //@line 1535 "xmltok_impl.c"
      case 7: // $bb7
        var $28=$result; //@line 1539 "xmltok_impl.c"
        var $29=($28) << 4; //@line 1539 "xmltok_impl.c"
        $result=$29; //@line 1539 "xmltok_impl.c"
        var $30=$c; //@line 1540 "xmltok_impl.c"
        var $31=($30) - 55; //@line 1540 "xmltok_impl.c"
        var $32=$result; //@line 1540 "xmltok_impl.c"
        var $33=($31) + ($32); //@line 1540 "xmltok_impl.c"
        $result=$33; //@line 1540 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 10; break; //@line 1540 "xmltok_impl.c"
      case 8: // $bb8
        var $34=$result; //@line 1544 "xmltok_impl.c"
        var $35=($34) << 4; //@line 1544 "xmltok_impl.c"
        $result=$35; //@line 1544 "xmltok_impl.c"
        var $36=$c; //@line 1545 "xmltok_impl.c"
        var $37=($36) - 87; //@line 1545 "xmltok_impl.c"
        var $38=$result; //@line 1545 "xmltok_impl.c"
        var $39=($37) + ($38); //@line 1545 "xmltok_impl.c"
        $result=$39; //@line 1545 "xmltok_impl.c"
        __lastLabel__ = 8; __label__ = 10; break; //@line 1545 "xmltok_impl.c"
      case 9: // $bb9thread_pre_split
        var $_pr=$result;
        __lastLabel__ = 9; __label__ = 10; break;
      case 10: // $bb9
        var $40=__lastLabel__ == 9 ? $_pr : (__lastLabel__ == 8 ? $39 : (__lastLabel__ == 7 ? $33 : ($27)));
        var $41=($40) > 1114111; //@line 1548 "xmltok_impl.c"
        if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1548 "xmltok_impl.c"
      case 11: // $bb10
        $1=-1; //@line 1549 "xmltok_impl.c"
        __label__ = 31; break; //@line 1549 "xmltok_impl.c"
      case 12: // $bb11
        var $42=$ptr_addr; //@line 1529 "xmltok_impl.c"
        var $43=$42+2; //@line 1529 "xmltok_impl.c"
        $ptr_addr=$43; //@line 1529 "xmltok_impl.c"
        __label__ = 13; break; //@line 1529 "xmltok_impl.c"
      case 13: // $bb12
        var $44=$ptr_addr; //@line 1528 "xmltok_impl.c"
        var $45=$44+1; //@line 1528 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 1528 "xmltok_impl.c"
        var $47=($46)!=0; //@line 1528 "xmltok_impl.c"
        if ($47) { __label__ = 3; break; } else { __label__ = 14; break; } //@line 1528 "xmltok_impl.c"
      case 14: // $bb13
        var $48=$ptr_addr; //@line 1528 "xmltok_impl.c"
        var $49=$48; //@line 1528 "xmltok_impl.c"
        var $50=HEAP[$49]; //@line 1528 "xmltok_impl.c"
        var $51=($50)!=59; //@line 1528 "xmltok_impl.c"
        if ($51) { __label__ = 3; break; } else { __label__ = 23; break; } //@line 1528 "xmltok_impl.c"
      case 15: // $bb16
        var $52=$ptr_addr; //@line 1554 "xmltok_impl.c"
        var $53=$52+1; //@line 1554 "xmltok_impl.c"
        var $54=HEAP[$53]; //@line 1554 "xmltok_impl.c"
        var $55=($54)==0; //@line 1554 "xmltok_impl.c"
        if ($55) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1554 "xmltok_impl.c"
      case 16: // $bb18
        var $56=$ptr_addr; //@line 1554 "xmltok_impl.c"
        var $57=$56; //@line 1554 "xmltok_impl.c"
        var $58=HEAP[$57]; //@line 1554 "xmltok_impl.c"
        var $59=($58); //@line 1554 "xmltok_impl.c"
        $iftmp_812=$59; //@line 1554 "xmltok_impl.c"
        __label__ = 18; break; //@line 1554 "xmltok_impl.c"
      case 17: // $bb19
        $iftmp_812=-1; //@line 1554 "xmltok_impl.c"
        __label__ = 18; break; //@line 1554 "xmltok_impl.c"
      case 18: // $bb20
        var $60=$iftmp_812; //@line 1554 "xmltok_impl.c"
        $c17=$60; //@line 1554 "xmltok_impl.c"
        var $61=$result; //@line 1555 "xmltok_impl.c"
        var $62=($61) * 10; //@line 1555 "xmltok_impl.c"
        $result=$62; //@line 1555 "xmltok_impl.c"
        var $63=$c17; //@line 1556 "xmltok_impl.c"
        var $64=($63) - 48; //@line 1556 "xmltok_impl.c"
        var $65=$result; //@line 1556 "xmltok_impl.c"
        var $66=($64) + ($65); //@line 1556 "xmltok_impl.c"
        $result=$66; //@line 1556 "xmltok_impl.c"
        var $67=($66) > 1114111; //@line 1557 "xmltok_impl.c"
        if ($67) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1557 "xmltok_impl.c"
      case 19: // $bb21
        $1=-1; //@line 1558 "xmltok_impl.c"
        __label__ = 31; break; //@line 1558 "xmltok_impl.c"
      case 20: // $bb22
        var $68=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $69=$68+2; //@line 1553 "xmltok_impl.c"
        $ptr_addr=$69; //@line 1553 "xmltok_impl.c"
        __label__ = 21; break; //@line 1553 "xmltok_impl.c"
      case 21: // $bb23
        var $70=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $71=$70+1; //@line 1553 "xmltok_impl.c"
        var $72=HEAP[$71]; //@line 1553 "xmltok_impl.c"
        var $73=($72)!=0; //@line 1553 "xmltok_impl.c"
        if ($73) { __label__ = 15; break; } else { __label__ = 22; break; } //@line 1553 "xmltok_impl.c"
      case 22: // $bb24
        var $74=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $75=$74; //@line 1553 "xmltok_impl.c"
        var $76=HEAP[$75]; //@line 1553 "xmltok_impl.c"
        var $77=($76)!=59; //@line 1553 "xmltok_impl.c"
        if ($77) { __label__ = 15; break; } else { __label__ = 23; break; } //@line 1553 "xmltok_impl.c"
      case 23: // $bb25
        var $78=$result; //@line 1561 "xmltok_impl.c"
        $result_addr_i=$78;
        var $79=$result_addr_i; //@line 1168 "xmltok.c"
        var $80=($79) >> 8; //@line 1168 "xmltok.c"
        if ($80 == 0) {
          __label__ = 25; break;
        }
        else if ($80 == 216) {
          __label__ = 24; break;
        }
        else if ($80 == 217) {
          __label__ = 24; break;
        }
        else if ($80 == 218) {
          __label__ = 24; break;
        }
        else if ($80 == 219) {
          __label__ = 24; break;
        }
        else if ($80 == 220) {
          __label__ = 24; break;
        }
        else if ($80 == 221) {
          __label__ = 24; break;
        }
        else if ($80 == 222) {
          __label__ = 24; break;
        }
        else if ($80 == 223) {
          __label__ = 24; break;
        }
        else if ($80 == 255) {
          __label__ = 27; break;
        }
        else {
        __label__ = 29; break;
        }
        
      case 24: // $bb_i
        $0=-1; //@line 1171 "xmltok.c"
        __label__ = 30; break; //@line 1171 "xmltok.c"
      case 25: // $bb1_i
        var $81=$result_addr_i; //@line 1173 "xmltok.c"
        var $82=_latin1_encoding+72+$81; //@line 1173 "xmltok.c"
        var $83=HEAP[$82]; //@line 1173 "xmltok.c"
        var $84=($83)==0; //@line 1173 "xmltok.c"
        if ($84) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 1173 "xmltok.c"
      case 26: // $bb2_i
        $0=-1; //@line 1174 "xmltok.c"
        __label__ = 30; break; //@line 1174 "xmltok.c"
      case 27: // $bb4_i
        var $85=$result_addr_i; //@line 1177 "xmltok.c"
        var $86=($85)==65534; //@line 1177 "xmltok.c"
        var $87=$result_addr_i; //@line 1177 "xmltok.c"
        var $88=($87)==65535; //@line 1177 "xmltok.c"
        var $or_cond_i=($86) | ($88);
        if ($or_cond_i) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1177 "xmltok.c"
      case 28: // $bb6_i
        $0=-1; //@line 1178 "xmltok.c"
        __label__ = 30; break; //@line 1178 "xmltok.c"
      case 29: // $bb7_i
        var $89=$result_addr_i; //@line 1181 "xmltok.c"
        $0=$89; //@line 1181 "xmltok.c"
        __label__ = 30; break; //@line 1181 "xmltok.c"
      case 30: // $checkCharRefNumber_exit
        var $90=$0; //@line 1171 "xmltok.c"
        $retval_i=$90; //@line 1171 "xmltok.c"
        var $retval9_i=$retval_i; //@line 1171 "xmltok.c"
        $1=$retval9_i; //@line 1561 "xmltok_impl.c"
        __label__ = 31; break; //@line 1561 "xmltok_impl.c"
      case 31: // $bb26
        var $91=$1; //@line 1549 "xmltok_impl.c"
        $retval=$91; //@line 1549 "xmltok_impl.c"
        var $retval27=$retval; //@line 1549 "xmltok_impl.c"
        ;
        return $retval27; //@line 1549 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_predefinedEntityName($enc, $ptr, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $retval;
        var $iftmp_816;
        var $0;
        var $iftmp_815;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        var $1=$end_addr; //@line 1568 "xmltok_impl.c"
        var $2=($1); //@line 1568 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1568 "xmltok_impl.c"
        var $4=($3); //@line 1568 "xmltok_impl.c"
        var $5=($2) - ($4); //@line 1568 "xmltok_impl.c"
        var $6=((($5)/2)|0); //@line 1568 "xmltok_impl.c"
        if ($6 == 2) {
          __label__ = 1; break;
        }
        else if ($6 == 3) {
          __label__ = 8; break;
        }
        else if ($6 == 4) {
          __label__ = 15; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 1: // $bb
        var $7=$ptr_addr; //@line 1570 "xmltok_impl.c"
        var $8=$7+2; //@line 1570 "xmltok_impl.c"
        var $9=$8+1; //@line 1570 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1570 "xmltok_impl.c"
        var $11=($10)==0; //@line 1570 "xmltok_impl.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 32; break; } //@line 1570 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 1570 "xmltok_impl.c"
        var $13=$12+2; //@line 1570 "xmltok_impl.c"
        var $14=$13; //@line 1570 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1570 "xmltok_impl.c"
        var $16=($15)==116; //@line 1570 "xmltok_impl.c"
        if ($16) { __label__ = 3; break; } else { __label__ = 32; break; } //@line 1570 "xmltok_impl.c"
      case 3: // $bb2
        var $17=$ptr_addr; //@line 1571 "xmltok_impl.c"
        var $18=$17+1; //@line 1571 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1571 "xmltok_impl.c"
        var $20=($19)==0; //@line 1571 "xmltok_impl.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1571 "xmltok_impl.c"
      case 4: // $bb5_thread
        $iftmp_815=-1; //@line 1571 "xmltok_impl.c"
        __label__ = 32; break;
      case 5: // $bb5
        var $21=$ptr_addr; //@line 1571 "xmltok_impl.c"
        var $22=$21; //@line 1571 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1571 "xmltok_impl.c"
        var $24=($23); //@line 1571 "xmltok_impl.c"
        $iftmp_815=$24; //@line 1571 "xmltok_impl.c"
        if ($24 == 103) {
          __label__ = 7; break;
        }
        else if ($24 == 108) {
          __label__ = 6; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 6: // $bb6
        $0=60; //@line 1573 "xmltok_impl.c"
        __label__ = 33; break; //@line 1573 "xmltok_impl.c"
      case 7: // $bb7
        $0=62; //@line 1575 "xmltok_impl.c"
        __label__ = 33; break; //@line 1575 "xmltok_impl.c"
      case 8: // $bb9
        var $25=$ptr_addr; //@line 1580 "xmltok_impl.c"
        var $26=$25+1; //@line 1580 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 1580 "xmltok_impl.c"
        var $28=($27)==0; //@line 1580 "xmltok_impl.c"
        if ($28) { __label__ = 9; break; } else { __label__ = 32; break; } //@line 1580 "xmltok_impl.c"
      case 9: // $bb10
        var $29=$ptr_addr; //@line 1580 "xmltok_impl.c"
        var $30=$29; //@line 1580 "xmltok_impl.c"
        var $31=HEAP[$30]; //@line 1580 "xmltok_impl.c"
        var $32=($31)==97; //@line 1580 "xmltok_impl.c"
        if ($32) { __label__ = 10; break; } else { __label__ = 32; break; } //@line 1580 "xmltok_impl.c"
      case 10: // $bb11
        var $33=$ptr_addr; //@line 1581 "xmltok_impl.c"
        var $34=$33+2; //@line 1581 "xmltok_impl.c"
        $ptr_addr=$34; //@line 1581 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 1582 "xmltok_impl.c"
        var $36=$35+1; //@line 1582 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 1582 "xmltok_impl.c"
        var $38=($37)==0; //@line 1582 "xmltok_impl.c"
        if ($38) { __label__ = 11; break; } else { __label__ = 32; break; } //@line 1582 "xmltok_impl.c"
      case 11: // $bb12
        var $39=$ptr_addr; //@line 1582 "xmltok_impl.c"
        var $40=$39; //@line 1582 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 1582 "xmltok_impl.c"
        var $42=($41)==109; //@line 1582 "xmltok_impl.c"
        if ($42) { __label__ = 12; break; } else { __label__ = 32; break; } //@line 1582 "xmltok_impl.c"
      case 12: // $bb13
        var $43=$ptr_addr; //@line 1583 "xmltok_impl.c"
        var $44=$43+2; //@line 1583 "xmltok_impl.c"
        $ptr_addr=$44; //@line 1583 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 1584 "xmltok_impl.c"
        var $46=$45+1; //@line 1584 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 1584 "xmltok_impl.c"
        var $48=($47)==0; //@line 1584 "xmltok_impl.c"
        if ($48) { __label__ = 13; break; } else { __label__ = 32; break; } //@line 1584 "xmltok_impl.c"
      case 13: // $bb14
        var $49=$ptr_addr; //@line 1584 "xmltok_impl.c"
        var $50=$49; //@line 1584 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 1584 "xmltok_impl.c"
        var $52=($51)==112; //@line 1584 "xmltok_impl.c"
        if ($52) { __label__ = 14; break; } else { __label__ = 32; break; } //@line 1584 "xmltok_impl.c"
      case 14: // $bb15
        $0=38; //@line 1585 "xmltok_impl.c"
        __label__ = 33; break; //@line 1585 "xmltok_impl.c"
      case 15: // $bb17
        var $53=$ptr_addr; //@line 1590 "xmltok_impl.c"
        var $54=$53+1; //@line 1590 "xmltok_impl.c"
        var $55=HEAP[$54]; //@line 1590 "xmltok_impl.c"
        var $56=($55)==0; //@line 1590 "xmltok_impl.c"
        if ($56) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1590 "xmltok_impl.c"
      case 16: // $bb20_thread
        $iftmp_816=-1; //@line 1590 "xmltok_impl.c"
        __label__ = 32; break;
      case 17: // $bb20
        var $57=$ptr_addr; //@line 1590 "xmltok_impl.c"
        var $58=$57; //@line 1590 "xmltok_impl.c"
        var $59=HEAP[$58]; //@line 1590 "xmltok_impl.c"
        var $60=($59); //@line 1590 "xmltok_impl.c"
        $iftmp_816=$60; //@line 1590 "xmltok_impl.c"
        if ($60 == 97) {
          __label__ = 25; break;
        }
        else if ($60 == 113) {
          __label__ = 18; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 18: // $bb21
        var $61=$ptr_addr; //@line 1592 "xmltok_impl.c"
        var $62=$61+2; //@line 1592 "xmltok_impl.c"
        $ptr_addr=$62; //@line 1592 "xmltok_impl.c"
        var $63=$ptr_addr; //@line 1593 "xmltok_impl.c"
        var $64=$63+1; //@line 1593 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 1593 "xmltok_impl.c"
        var $66=($65)==0; //@line 1593 "xmltok_impl.c"
        if ($66) { __label__ = 19; break; } else { __label__ = 32; break; } //@line 1593 "xmltok_impl.c"
      case 19: // $bb22
        var $67=$ptr_addr; //@line 1593 "xmltok_impl.c"
        var $68=$67; //@line 1593 "xmltok_impl.c"
        var $69=HEAP[$68]; //@line 1593 "xmltok_impl.c"
        var $70=($69)==117; //@line 1593 "xmltok_impl.c"
        if ($70) { __label__ = 20; break; } else { __label__ = 32; break; } //@line 1593 "xmltok_impl.c"
      case 20: // $bb23
        var $71=$ptr_addr; //@line 1594 "xmltok_impl.c"
        var $72=$71+2; //@line 1594 "xmltok_impl.c"
        $ptr_addr=$72; //@line 1594 "xmltok_impl.c"
        var $73=$ptr_addr; //@line 1595 "xmltok_impl.c"
        var $74=$73+1; //@line 1595 "xmltok_impl.c"
        var $75=HEAP[$74]; //@line 1595 "xmltok_impl.c"
        var $76=($75)==0; //@line 1595 "xmltok_impl.c"
        if ($76) { __label__ = 21; break; } else { __label__ = 32; break; } //@line 1595 "xmltok_impl.c"
      case 21: // $bb24
        var $77=$ptr_addr; //@line 1595 "xmltok_impl.c"
        var $78=$77; //@line 1595 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 1595 "xmltok_impl.c"
        var $80=($79)==111; //@line 1595 "xmltok_impl.c"
        if ($80) { __label__ = 22; break; } else { __label__ = 32; break; } //@line 1595 "xmltok_impl.c"
      case 22: // $bb25
        var $81=$ptr_addr; //@line 1596 "xmltok_impl.c"
        var $82=$81+2; //@line 1596 "xmltok_impl.c"
        $ptr_addr=$82; //@line 1596 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 1597 "xmltok_impl.c"
        var $84=$83+1; //@line 1597 "xmltok_impl.c"
        var $85=HEAP[$84]; //@line 1597 "xmltok_impl.c"
        var $86=($85)==0; //@line 1597 "xmltok_impl.c"
        if ($86) { __label__ = 23; break; } else { __label__ = 32; break; } //@line 1597 "xmltok_impl.c"
      case 23: // $bb26
        var $87=$ptr_addr; //@line 1597 "xmltok_impl.c"
        var $88=$87; //@line 1597 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 1597 "xmltok_impl.c"
        var $90=($89)==116; //@line 1597 "xmltok_impl.c"
        if ($90) { __label__ = 24; break; } else { __label__ = 32; break; } //@line 1597 "xmltok_impl.c"
      case 24: // $bb27
        $0=34; //@line 1598 "xmltok_impl.c"
        __label__ = 33; break; //@line 1598 "xmltok_impl.c"
      case 25: // $bb29
        var $91=$ptr_addr; //@line 1603 "xmltok_impl.c"
        var $92=$91+2; //@line 1603 "xmltok_impl.c"
        $ptr_addr=$92; //@line 1603 "xmltok_impl.c"
        var $93=$ptr_addr; //@line 1604 "xmltok_impl.c"
        var $94=$93+1; //@line 1604 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 1604 "xmltok_impl.c"
        var $96=($95)==0; //@line 1604 "xmltok_impl.c"
        if ($96) { __label__ = 26; break; } else { __label__ = 32; break; } //@line 1604 "xmltok_impl.c"
      case 26: // $bb30
        var $97=$ptr_addr; //@line 1604 "xmltok_impl.c"
        var $98=$97; //@line 1604 "xmltok_impl.c"
        var $99=HEAP[$98]; //@line 1604 "xmltok_impl.c"
        var $100=($99)==112; //@line 1604 "xmltok_impl.c"
        if ($100) { __label__ = 27; break; } else { __label__ = 32; break; } //@line 1604 "xmltok_impl.c"
      case 27: // $bb31
        var $101=$ptr_addr; //@line 1605 "xmltok_impl.c"
        var $102=$101+2; //@line 1605 "xmltok_impl.c"
        $ptr_addr=$102; //@line 1605 "xmltok_impl.c"
        var $103=$ptr_addr; //@line 1606 "xmltok_impl.c"
        var $104=$103+1; //@line 1606 "xmltok_impl.c"
        var $105=HEAP[$104]; //@line 1606 "xmltok_impl.c"
        var $106=($105)==0; //@line 1606 "xmltok_impl.c"
        if ($106) { __label__ = 28; break; } else { __label__ = 32; break; } //@line 1606 "xmltok_impl.c"
      case 28: // $bb32
        var $107=$ptr_addr; //@line 1606 "xmltok_impl.c"
        var $108=$107; //@line 1606 "xmltok_impl.c"
        var $109=HEAP[$108]; //@line 1606 "xmltok_impl.c"
        var $110=($109)==111; //@line 1606 "xmltok_impl.c"
        if ($110) { __label__ = 29; break; } else { __label__ = 32; break; } //@line 1606 "xmltok_impl.c"
      case 29: // $bb33
        var $111=$ptr_addr; //@line 1607 "xmltok_impl.c"
        var $112=$111+2; //@line 1607 "xmltok_impl.c"
        $ptr_addr=$112; //@line 1607 "xmltok_impl.c"
        var $113=$ptr_addr; //@line 1608 "xmltok_impl.c"
        var $114=$113+1; //@line 1608 "xmltok_impl.c"
        var $115=HEAP[$114]; //@line 1608 "xmltok_impl.c"
        var $116=($115)==0; //@line 1608 "xmltok_impl.c"
        if ($116) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 1608 "xmltok_impl.c"
      case 30: // $bb34
        var $117=$ptr_addr; //@line 1608 "xmltok_impl.c"
        var $118=$117; //@line 1608 "xmltok_impl.c"
        var $119=HEAP[$118]; //@line 1608 "xmltok_impl.c"
        var $120=($119)==115; //@line 1608 "xmltok_impl.c"
        if ($120) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 1608 "xmltok_impl.c"
      case 31: // $bb35
        $0=39; //@line 1609 "xmltok_impl.c"
        __label__ = 33; break; //@line 1609 "xmltok_impl.c"
      case 32: // $bb36
        $0=0; //@line 1615 "xmltok_impl.c"
        __label__ = 33; break; //@line 1615 "xmltok_impl.c"
      case 33: // $bb37
        var $121=$0; //@line 1573 "xmltok_impl.c"
        $retval=$121; //@line 1573 "xmltok_impl.c"
        var $retval38=$retval; //@line 1573 "xmltok_impl.c"
        ;
        return $retval38; //@line 1573 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_sameName($enc, $ptr1, $ptr2) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr1_addr;
        var $ptr2_addr;
        var $retval;
        var $iftmp_819;
        var $2;
        var $iftmp_817;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $ptr2_addr=$ptr2;
        __label__ = 1; break; //@line 1620 "xmltok.c"
      case 1: // $bb
        var $3=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $4=$3+1; //@line 1622 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1622 "xmltok_impl.c"
        var $6=($5)==0; //@line 1622 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1622 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 1622 "xmltok_impl.c"
        var $8=$7; //@line 1622 "xmltok_impl.c"
        var $9=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1622 "xmltok_impl.c"
        var $11=($10); //@line 1622 "xmltok_impl.c"
        var $12=$8+72; //@line 1622 "xmltok_impl.c"
        var $13=$12+$11; //@line 1622 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1622 "xmltok_impl.c"
        var $15=($14); //@line 1622 "xmltok_impl.c"
        $iftmp_817=$15; //@line 1622 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1622 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $17=$16; //@line 1622 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1622 "xmltok_impl.c"
        var $19=($18); //@line 1622 "xmltok_impl.c"
        var $20=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $21=$20+1; //@line 1622 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1622 "xmltok_impl.c"
        var $23=($22); //@line 1622 "xmltok_impl.c"
        var $24=((($23)) & 255); //@line 1622 "xmltok_impl.c"
        var $25=((($19)) & 255); //@line 1622 "xmltok_impl.c"
        $hi_addr_i=$24;
        $lo_addr_i=$25;
        var $26=$hi_addr_i; //@line 518 "xmltok.c"
        var $27=($26); //@line 518 "xmltok.c"
        if ($27 == 216) {
          __label__ = 4; break;
        }
        else if ($27 == 217) {
          __label__ = 4; break;
        }
        else if ($27 == 218) {
          __label__ = 4; break;
        }
        else if ($27 == 219) {
          __label__ = 4; break;
        }
        else if ($27 == 220) {
          __label__ = 5; break;
        }
        else if ($27 == 221) {
          __label__ = 5; break;
        }
        else if ($27 == 222) {
          __label__ = 5; break;
        }
        else if ($27 == 223) {
          __label__ = 5; break;
        }
        else if ($27 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $28=$lo_addr_i; //@line 524 "xmltok.c"
        var $29=($28); //@line 524 "xmltok.c"
        var $_off_i=($29) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $30=$1; //@line 520 "xmltok.c"
        $retval_i=$30; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_817=$retval6_i; //@line 1622 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1622 "xmltok_impl.c"
      case 10: // $bb3
        var $31=__lastLabel__ == 9 ? $retval6_i : ($15);
        if ($31 == 5) {
          __label__ = 15; break;
        }
        else if ($31 == 6) {
          __label__ = 13; break;
        }
        else if ($31 == 7) {
          __label__ = 11; break;
        }
        else if ($31 == 22) {
          __label__ = 19; break;
        }
        else if ($31 == 24) {
          __label__ = 19; break;
        }
        else if ($31 == 25) {
          __label__ = 19; break;
        }
        else if ($31 == 26) {
          __label__ = 19; break;
        }
        else if ($31 == 27) {
          __label__ = 19; break;
        }
        else if ($31 == 29) {
          __label__ = 19; break;
        }
        else {
        __label__ = 23; break;
        }
        
      case 11: // $bb4
        var $32=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 1627 "xmltok_impl.c"
        var $34=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $35=HEAP[$34]; //@line 1627 "xmltok_impl.c"
        var $36=($33)!=($35); //@line 1627 "xmltok_impl.c"
        var $37=($36); //@line 1627 "xmltok_impl.c"
        var $38=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $39=$38+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$39; //@line 1627 "xmltok_impl.c"
        var $40=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $41=$40+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$41; //@line 1627 "xmltok_impl.c"
        var $toBool=($37)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1627 "xmltok_impl.c"
      case 12: // $bb5
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 13: // $bb6
        var $42=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $43=HEAP[$42]; //@line 1627 "xmltok_impl.c"
        var $44=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $45=HEAP[$44]; //@line 1627 "xmltok_impl.c"
        var $46=($43)!=($45); //@line 1627 "xmltok_impl.c"
        var $47=($46); //@line 1627 "xmltok_impl.c"
        var $48=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $49=$48+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$49; //@line 1627 "xmltok_impl.c"
        var $50=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $51=$50+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$51; //@line 1627 "xmltok_impl.c"
        var $toBool7=($47)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool7) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1627 "xmltok_impl.c"
      case 14: // $bb8
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 15: // $bb9
        var $52=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $53=HEAP[$52]; //@line 1627 "xmltok_impl.c"
        var $54=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $55=HEAP[$54]; //@line 1627 "xmltok_impl.c"
        var $56=($53)!=($55); //@line 1627 "xmltok_impl.c"
        var $57=($56); //@line 1627 "xmltok_impl.c"
        var $58=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $59=$58+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$59; //@line 1627 "xmltok_impl.c"
        var $60=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $61=$60+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$61; //@line 1627 "xmltok_impl.c"
        var $toBool10=($57)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool10) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1627 "xmltok_impl.c"
      case 16: // $bb11
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 17: // $bb12
        var $62=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 1630 "xmltok_impl.c"
        var $64=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 1630 "xmltok_impl.c"
        var $66=($63)!=($65); //@line 1630 "xmltok_impl.c"
        var $67=($66); //@line 1630 "xmltok_impl.c"
        var $68=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $69=$68+1; //@line 1630 "xmltok_impl.c"
        $ptr1_addr=$69; //@line 1630 "xmltok_impl.c"
        var $70=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $71=$70+1; //@line 1630 "xmltok_impl.c"
        $ptr2_addr=$71; //@line 1630 "xmltok_impl.c"
        var $toBool13=($67)!=0; //@line 1630 "xmltok_impl.c"
        if ($toBool13) { __label__ = 18; break; } else { __label__ = 1; break; } //@line 1630 "xmltok_impl.c"
      case 18: // $bb14
        $2=0; //@line 1631 "xmltok_impl.c"
        __label__ = 35; break; //@line 1631 "xmltok_impl.c"
      case 19: // $bb16
        var $72=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $73=HEAP[$72]; //@line 1642 "xmltok_impl.c"
        var $74=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $75=HEAP[$74]; //@line 1642 "xmltok_impl.c"
        var $76=($73)!=($75); //@line 1642 "xmltok_impl.c"
        var $77=($76); //@line 1642 "xmltok_impl.c"
        var $78=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $79=$78+1; //@line 1642 "xmltok_impl.c"
        $ptr2_addr=$79; //@line 1642 "xmltok_impl.c"
        var $80=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $81=$80+1; //@line 1642 "xmltok_impl.c"
        $ptr1_addr=$81; //@line 1642 "xmltok_impl.c"
        var $toBool17=($77)!=0; //@line 1642 "xmltok_impl.c"
        if ($toBool17) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1642 "xmltok_impl.c"
      case 20: // $bb18
        $2=0; //@line 1643 "xmltok_impl.c"
        __label__ = 35; break; //@line 1643 "xmltok_impl.c"
      case 21: // $bb19
        var $82=$ptr2_addr; //@line 1645 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 1645 "xmltok_impl.c"
        var $84=$ptr1_addr; //@line 1645 "xmltok_impl.c"
        var $85=HEAP[$84]; //@line 1645 "xmltok_impl.c"
        var $86=($83)!=($85); //@line 1645 "xmltok_impl.c"
        var $87=($86); //@line 1645 "xmltok_impl.c"
        var $88=$ptr2_addr; //@line 1645 "xmltok_impl.c"
        var $89=$88+1; //@line 1645 "xmltok_impl.c"
        $ptr2_addr=$89; //@line 1645 "xmltok_impl.c"
        var $90=$ptr1_addr; //@line 1645 "xmltok_impl.c"
        var $91=$90+1; //@line 1645 "xmltok_impl.c"
        $ptr1_addr=$91; //@line 1645 "xmltok_impl.c"
        var $toBool20=($87)!=0; //@line 1645 "xmltok_impl.c"
        if ($toBool20) { __label__ = 22; break; } else { __label__ = 1; break; } //@line 1645 "xmltok_impl.c"
      case 22: // $bb21
        $2=0; //@line 1646 "xmltok_impl.c"
        __label__ = 35; break; //@line 1646 "xmltok_impl.c"
      case 23: // $bb23
        var $92=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $93=$92+1; //@line 1660 "xmltok_impl.c"
        var $94=HEAP[$93]; //@line 1660 "xmltok_impl.c"
        var $95=($94)==0; //@line 1660 "xmltok_impl.c"
        if ($95) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 1660 "xmltok_impl.c"
      case 24: // $bb24
        var $96=$enc_addr; //@line 1660 "xmltok_impl.c"
        var $97=$96; //@line 1660 "xmltok_impl.c"
        var $98=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $99=HEAP[$98]; //@line 1660 "xmltok_impl.c"
        var $100=($99); //@line 1660 "xmltok_impl.c"
        var $101=$97+72; //@line 1660 "xmltok_impl.c"
        var $102=$101+$100; //@line 1660 "xmltok_impl.c"
        var $103=HEAP[$102]; //@line 1660 "xmltok_impl.c"
        var $104=($103); //@line 1660 "xmltok_impl.c"
        $iftmp_819=$104; //@line 1660 "xmltok_impl.c"
        __lastLabel__ = 24; __label__ = 32; break; //@line 1660 "xmltok_impl.c"
      case 25: // $bb25
        var $105=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $106=$105; //@line 1660 "xmltok_impl.c"
        var $107=HEAP[$106]; //@line 1660 "xmltok_impl.c"
        var $108=($107); //@line 1660 "xmltok_impl.c"
        var $109=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $110=$109+1; //@line 1660 "xmltok_impl.c"
        var $111=HEAP[$110]; //@line 1660 "xmltok_impl.c"
        var $112=($111); //@line 1660 "xmltok_impl.c"
        var $113=((($112)) & 255); //@line 1660 "xmltok_impl.c"
        var $114=((($108)) & 255); //@line 1660 "xmltok_impl.c"
        $hi_addr_i1=$113;
        $lo_addr_i2=$114;
        var $115=$hi_addr_i1; //@line 518 "xmltok.c"
        var $116=($115); //@line 518 "xmltok.c"
        if ($116 == 216) {
          __label__ = 26; break;
        }
        else if ($116 == 217) {
          __label__ = 26; break;
        }
        else if ($116 == 218) {
          __label__ = 26; break;
        }
        else if ($116 == 219) {
          __label__ = 26; break;
        }
        else if ($116 == 220) {
          __label__ = 27; break;
        }
        else if ($116 == 221) {
          __label__ = 27; break;
        }
        else if ($116 == 222) {
          __label__ = 27; break;
        }
        else if ($116 == 223) {
          __label__ = 27; break;
        }
        else if ($116 == 255) {
          __label__ = 28; break;
        }
        else {
        __label__ = 30; break;
        }
        
      case 26: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 31; break; //@line 520 "xmltok.c"
      case 27: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 31; break; //@line 522 "xmltok.c"
      case 28: // $bb2_i8
        var $117=$lo_addr_i2; //@line 524 "xmltok.c"
        var $118=($117); //@line 524 "xmltok.c"
        var $_off_i6=($118) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 29; break; } else { __label__ = 30; break; }
      case 29: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 31; break; //@line 527 "xmltok.c"
      case 30: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 31; break; //@line 531 "xmltok.c"
      case 31: // $unicode_byte_type_exit12
        var $119=$0; //@line 520 "xmltok.c"
        $retval_i3=$119; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_819=$retval6_i11; //@line 1660 "xmltok_impl.c"
        __lastLabel__ = 31; __label__ = 32; break; //@line 1660 "xmltok_impl.c"
      case 32: // $bb26
        var $120=__lastLabel__ == 31 ? $retval6_i11 : ($104);
        if ($120 == 5) {
          __label__ = 33; break;
        }
        else if ($120 == 6) {
          __label__ = 33; break;
        }
        else if ($120 == 7) {
          __label__ = 33; break;
        }
        else if ($120 == 22) {
          __label__ = 33; break;
        }
        else if ($120 == 24) {
          __label__ = 33; break;
        }
        else if ($120 == 25) {
          __label__ = 33; break;
        }
        else if ($120 == 26) {
          __label__ = 33; break;
        }
        else if ($120 == 27) {
          __label__ = 33; break;
        }
        else if ($120 == 29) {
          __label__ = 33; break;
        }
        else {
        __label__ = 34; break;
        }
        
      case 33: // $bb27
        $2=0; //@line 1673 "xmltok_impl.c"
        __label__ = 35; break; //@line 1673 "xmltok_impl.c"
      case 34: // $bb28
        $2=1; //@line 1675 "xmltok_impl.c"
        __label__ = 35; break; //@line 1675 "xmltok_impl.c"
      case 35: // $bb30
        var $121=$2; //@line 1627 "xmltok_impl.c"
        $retval=$121; //@line 1627 "xmltok_impl.c"
        var $retval31=$retval; //@line 1627 "xmltok_impl.c"
        ;
        return $retval31; //@line 1627 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_nameMatchesAscii($enc, $ptr1, $end1, $ptr2) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr1_addr;
        var $end1_addr;
        var $ptr2_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $end1_addr=$end1;
        $ptr2_addr=$ptr2;
        __label__ = 7; break; //@line 1686 "xmltok_impl.c"
      case 1: // $bb
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1687 "xmltok_impl.c"
      case 2: // $bb1
        $0=0; //@line 1688 "xmltok_impl.c"
        __label__ = 9; break; //@line 1688 "xmltok_impl.c"
      case 3: // $bb2
        var $1=$ptr1_addr; //@line 1689 "xmltok_impl.c"
        var $2=$1+1; //@line 1689 "xmltok_impl.c"
        var $3=HEAP[$2]; //@line 1689 "xmltok_impl.c"
        var $4=($3)!=0; //@line 1689 "xmltok_impl.c"
        if ($4) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1689 "xmltok_impl.c"
      case 4: // $bb3
        var $5=$ptr1_addr; //@line 1689 "xmltok_impl.c"
        var $6=$5; //@line 1689 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1689 "xmltok_impl.c"
        var $8=$ptr2_addr; //@line 1689 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1689 "xmltok_impl.c"
        var $10=($7)!=($9); //@line 1689 "xmltok_impl.c"
        if ($10) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1689 "xmltok_impl.c"
      case 5: // $bb4
        $0=0; //@line 1690 "xmltok_impl.c"
        __label__ = 9; break; //@line 1690 "xmltok_impl.c"
      case 6: // $bb5
        var $11=$ptr1_addr; //@line 1686 "xmltok_impl.c"
        var $12=$11+2; //@line 1686 "xmltok_impl.c"
        $ptr1_addr=$12; //@line 1686 "xmltok_impl.c"
        var $13=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $14=$13+1; //@line 1686 "xmltok_impl.c"
        $ptr2_addr=$14; //@line 1686 "xmltok_impl.c"
        __label__ = 7; break; //@line 1686 "xmltok_impl.c"
      case 7: // $bb6
        var $15=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1686 "xmltok_impl.c"
        var $17=($16)!=0; //@line 1686 "xmltok_impl.c"
        var $18=$ptr1_addr; //@line 1687 "xmltok_impl.c"
        var $19=$end1_addr; //@line 1687 "xmltok_impl.c"
        var $20=($18)==($19); //@line 1687 "xmltok_impl.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 1686 "xmltok_impl.c"
      case 8: // $bb7
        var $21=($20); //@line 1692 "xmltok_impl.c"
        $0=$21; //@line 1692 "xmltok_impl.c"
        __label__ = 9; break; //@line 1692 "xmltok_impl.c"
      case 9: // $bb8
        var $22=$0; //@line 1688 "xmltok_impl.c"
        $retval=$22; //@line 1688 "xmltok_impl.c"
        var $retval9=$retval; //@line 1688 "xmltok_impl.c"
        ;
        return $retval9; //@line 1688 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_nameLength($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $1;
        var $iftmp_821;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        var $2=$ptr_addr; //@line 1698 "xmltok_impl.c"
        $start=$2; //@line 1698 "xmltok_impl.c"
        __label__ = 1; break; //@line 1698 "xmltok_impl.c"
      case 1: // $bb
        var $3=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $4=$3+1; //@line 1700 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1700 "xmltok_impl.c"
        var $6=($5)==0; //@line 1700 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1700 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 1700 "xmltok_impl.c"
        var $8=$7; //@line 1700 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1700 "xmltok_impl.c"
        var $11=($10); //@line 1700 "xmltok_impl.c"
        var $12=$8+72; //@line 1700 "xmltok_impl.c"
        var $13=$12+$11; //@line 1700 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1700 "xmltok_impl.c"
        var $15=($14); //@line 1700 "xmltok_impl.c"
        $iftmp_821=$15; //@line 1700 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1700 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $17=$16; //@line 1700 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1700 "xmltok_impl.c"
        var $19=($18); //@line 1700 "xmltok_impl.c"
        var $20=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $21=$20+1; //@line 1700 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1700 "xmltok_impl.c"
        var $23=($22); //@line 1700 "xmltok_impl.c"
        var $24=((($23)) & 255); //@line 1700 "xmltok_impl.c"
        var $25=((($19)) & 255); //@line 1700 "xmltok_impl.c"
        $hi_addr_i=$24;
        $lo_addr_i=$25;
        var $26=$hi_addr_i; //@line 518 "xmltok.c"
        var $27=($26); //@line 518 "xmltok.c"
        if ($27 == 216) {
          __label__ = 4; break;
        }
        else if ($27 == 217) {
          __label__ = 4; break;
        }
        else if ($27 == 218) {
          __label__ = 4; break;
        }
        else if ($27 == 219) {
          __label__ = 4; break;
        }
        else if ($27 == 220) {
          __label__ = 5; break;
        }
        else if ($27 == 221) {
          __label__ = 5; break;
        }
        else if ($27 == 222) {
          __label__ = 5; break;
        }
        else if ($27 == 223) {
          __label__ = 5; break;
        }
        else if ($27 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $28=$lo_addr_i; //@line 524 "xmltok.c"
        var $29=($28); //@line 524 "xmltok.c"
        var $_off_i=($29) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $30=$0; //@line 520 "xmltok.c"
        $retval_i=$30; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_821=$retval6_i; //@line 1700 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1700 "xmltok_impl.c"
      case 10: // $bb3
        var $31=__lastLabel__ == 9 ? $retval6_i : ($15);
        if ($31 == 5) {
          __label__ = 11; break;
        }
        else if ($31 == 6) {
          __label__ = 12; break;
        }
        else if ($31 == 7) {
          __label__ = 13; break;
        }
        else if ($31 == 22) {
          __label__ = 14; break;
        }
        else if ($31 == 24) {
          __label__ = 14; break;
        }
        else if ($31 == 25) {
          __label__ = 14; break;
        }
        else if ($31 == 26) {
          __label__ = 14; break;
        }
        else if ($31 == 27) {
          __label__ = 14; break;
        }
        else if ($31 == 29) {
          __label__ = 14; break;
        }
        else {
        __label__ = 15; break;
        }
        
      case 11: // $bb4
        var $32=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $33=$32+2; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$33; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 12: // $bb5
        var $34=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $35=$34+3; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$35; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 13: // $bb6
        var $36=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $37=$36+4; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$37; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 14: // $bb7
        var $38=$ptr_addr; //@line 1714 "xmltok_impl.c"
        var $39=$38+2; //@line 1714 "xmltok_impl.c"
        $ptr_addr=$39; //@line 1714 "xmltok_impl.c"
        __label__ = 1; break; //@line 1714 "xmltok_impl.c"
      case 15: // $bb8
        var $40=$ptr_addr; //@line 1717 "xmltok_impl.c"
        var $41=($40); //@line 1717 "xmltok_impl.c"
        var $42=$start; //@line 1717 "xmltok_impl.c"
        var $43=($42); //@line 1717 "xmltok_impl.c"
        var $44=($41) - ($43); //@line 1717 "xmltok_impl.c"
        $1=$44; //@line 1717 "xmltok_impl.c"
        var $45=$1; //@line 1717 "xmltok_impl.c"
        $retval=$45; //@line 1717 "xmltok_impl.c"
        var $retval10=$retval; //@line 1717 "xmltok_impl.c"
        ;
        return $retval10; //@line 1717 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_skipS($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $1;
        var $iftmp_825;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        __label__ = 1; break; //@line 1724 "xmltok.c"
      case 1: // $bb
        var $2=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $3=$2+1; //@line 1726 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 1726 "xmltok_impl.c"
        var $5=($4)==0; //@line 1726 "xmltok_impl.c"
        if ($5) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1726 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$enc_addr; //@line 1726 "xmltok_impl.c"
        var $7=$6; //@line 1726 "xmltok_impl.c"
        var $8=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1726 "xmltok_impl.c"
        var $10=($9); //@line 1726 "xmltok_impl.c"
        var $11=$7+72; //@line 1726 "xmltok_impl.c"
        var $12=$11+$10; //@line 1726 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 1726 "xmltok_impl.c"
        var $14=($13); //@line 1726 "xmltok_impl.c"
        $iftmp_825=$14; //@line 1726 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1726 "xmltok_impl.c"
      case 3: // $bb2
        var $15=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $16=$15; //@line 1726 "xmltok_impl.c"
        var $17=HEAP[$16]; //@line 1726 "xmltok_impl.c"
        var $18=($17); //@line 1726 "xmltok_impl.c"
        var $19=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $20=$19+1; //@line 1726 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 1726 "xmltok_impl.c"
        var $22=($21); //@line 1726 "xmltok_impl.c"
        var $23=((($22)) & 255); //@line 1726 "xmltok_impl.c"
        var $24=((($18)) & 255); //@line 1726 "xmltok_impl.c"
        $hi_addr_i=$23;
        $lo_addr_i=$24;
        var $25=$hi_addr_i; //@line 518 "xmltok.c"
        var $26=($25); //@line 518 "xmltok.c"
        if ($26 == 216) {
          __label__ = 4; break;
        }
        else if ($26 == 217) {
          __label__ = 4; break;
        }
        else if ($26 == 218) {
          __label__ = 4; break;
        }
        else if ($26 == 219) {
          __label__ = 4; break;
        }
        else if ($26 == 220) {
          __label__ = 5; break;
        }
        else if ($26 == 221) {
          __label__ = 5; break;
        }
        else if ($26 == 222) {
          __label__ = 5; break;
        }
        else if ($26 == 223) {
          __label__ = 5; break;
        }
        else if ($26 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $27=$lo_addr_i; //@line 524 "xmltok.c"
        var $28=($27); //@line 524 "xmltok.c"
        var $_off_i=($28) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $29=$0; //@line 520 "xmltok.c"
        $retval_i=$29; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_825=$retval6_i; //@line 1726 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1726 "xmltok_impl.c"
      case 10: // $bb3
        var $30=__lastLabel__ == 9 ? $retval6_i : ($14);
        if ($30 == 9) {
          __label__ = 11; break;
        }
        else if ($30 == 10) {
          __label__ = 11; break;
        }
        else if ($30 == 21) {
          __label__ = 11; break;
        }
        else {
        __label__ = 12; break;
        }
        
      case 11: // $bb4
        var $31=$ptr_addr; //@line 1730 "xmltok_impl.c"
        var $32=$31+2; //@line 1730 "xmltok_impl.c"
        $ptr_addr=$32; //@line 1730 "xmltok_impl.c"
        __label__ = 1; break; //@line 1730 "xmltok_impl.c"
      case 12: // $bb5
        var $33=$ptr_addr; //@line 1733 "xmltok_impl.c"
        $1=$33; //@line 1733 "xmltok_impl.c"
        var $34=$1; //@line 1733 "xmltok_impl.c"
        $retval=$34; //@line 1733 "xmltok_impl.c"
        var $retval6=$retval; //@line 1733 "xmltok_impl.c"
        ;
        return $retval6; //@line 1733 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _little2_updatePosition($enc, $ptr, $end, $pos) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $pos_addr;
        var $iftmp_829;
        var $iftmp_827;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $pos_addr=$pos;
        var $2=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $3=$end_addr; //@line 1744 "xmltok_impl.c"
        var $4=($2) < ($3); //@line 1744 "xmltok_impl.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 30; break; } //@line 1744 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $6=$5+1; //@line 1745 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1745 "xmltok_impl.c"
        var $8=($7)==0; //@line 1745 "xmltok_impl.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1745 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$enc_addr; //@line 1745 "xmltok_impl.c"
        var $10=$9; //@line 1745 "xmltok_impl.c"
        var $11=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $12=HEAP[$11]; //@line 1745 "xmltok_impl.c"
        var $13=($12); //@line 1745 "xmltok_impl.c"
        var $14=$10+72; //@line 1745 "xmltok_impl.c"
        var $15=$14+$13; //@line 1745 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1745 "xmltok_impl.c"
        var $17=($16); //@line 1745 "xmltok_impl.c"
        $iftmp_827=$17; //@line 1745 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1745 "xmltok_impl.c"
      case 3: // $bb2
        var $18=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $19=$18; //@line 1745 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 1745 "xmltok_impl.c"
        var $21=($20); //@line 1745 "xmltok_impl.c"
        var $22=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $23=$22+1; //@line 1745 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 1745 "xmltok_impl.c"
        var $25=($24); //@line 1745 "xmltok_impl.c"
        var $26=((($25)) & 255); //@line 1745 "xmltok_impl.c"
        var $27=((($21)) & 255); //@line 1745 "xmltok_impl.c"
        $hi_addr_i=$26;
        $lo_addr_i=$27;
        var $28=$hi_addr_i; //@line 518 "xmltok.c"
        var $29=($28); //@line 518 "xmltok.c"
        if ($29 == 216) {
          __label__ = 4; break;
        }
        else if ($29 == 217) {
          __label__ = 4; break;
        }
        else if ($29 == 218) {
          __label__ = 4; break;
        }
        else if ($29 == 219) {
          __label__ = 4; break;
        }
        else if ($29 == 220) {
          __label__ = 5; break;
        }
        else if ($29 == 221) {
          __label__ = 5; break;
        }
        else if ($29 == 222) {
          __label__ = 5; break;
        }
        else if ($29 == 223) {
          __label__ = 5; break;
        }
        else if ($29 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $30=$lo_addr_i; //@line 524 "xmltok.c"
        var $31=($30); //@line 524 "xmltok.c"
        var $_off_i=($31) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $32=$1; //@line 520 "xmltok.c"
        $retval_i=$32; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_827=$retval6_i; //@line 1745 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1745 "xmltok_impl.c"
      case 10: // $bb3
        var $33=__lastLabel__ == 9 ? $retval6_i : ($17);
        if ($33 == 5) {
          __label__ = 11; break;
        }
        else if ($33 == 6) {
          __label__ = 12; break;
        }
        else if ($33 == 7) {
          __label__ = 13; break;
        }
        else if ($33 == 9) {
          __label__ = 15; break;
        }
        else if ($33 == 10) {
          __label__ = 14; break;
        }
        else {
        __label__ = 28; break;
        }
        
      case 11: // $bb4
        var $34=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $35=$34+2; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$35; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 12: // $bb5
        var $36=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $37=$36+3; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$37; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 13: // $bb6
        var $38=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $39=$38+4; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$39; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 14: // $bb7
        var $40=$pos_addr; //@line 1753 "xmltok_impl.c"
        var $41=$40+4; //@line 1753 "xmltok_impl.c"
        HEAP[$41]=-1; //@line 1753 "xmltok_impl.c"
        var $42=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $43=$42; //@line 1754 "xmltok_impl.c"
        var $44=HEAP[$43]; //@line 1754 "xmltok_impl.c"
        var $45=($44) + 1; //@line 1754 "xmltok_impl.c"
        var $46=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $47=$46; //@line 1754 "xmltok_impl.c"
        HEAP[$47]=$45; //@line 1754 "xmltok_impl.c"
        var $48=$ptr_addr; //@line 1755 "xmltok_impl.c"
        var $49=$48+2; //@line 1755 "xmltok_impl.c"
        $ptr_addr=$49; //@line 1755 "xmltok_impl.c"
        __label__ = 29; break; //@line 1755 "xmltok_impl.c"
      case 15: // $bb8
        var $50=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $51=$50; //@line 1758 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 1758 "xmltok_impl.c"
        var $53=($52) + 1; //@line 1758 "xmltok_impl.c"
        var $54=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $55=$54; //@line 1758 "xmltok_impl.c"
        HEAP[$55]=$53; //@line 1758 "xmltok_impl.c"
        var $56=$ptr_addr; //@line 1759 "xmltok_impl.c"
        var $57=$56+2; //@line 1759 "xmltok_impl.c"
        $ptr_addr=$57; //@line 1759 "xmltok_impl.c"
        var $58=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $59=$end_addr; //@line 1760 "xmltok_impl.c"
        var $60=($58)!=($59); //@line 1760 "xmltok_impl.c"
        if ($60) { __label__ = 16; break; } else { __label__ = 27; break; } //@line 1760 "xmltok_impl.c"
      case 16: // $bb9
        var $61=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $62=$61+1; //@line 1760 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 1760 "xmltok_impl.c"
        var $64=($63)==0; //@line 1760 "xmltok_impl.c"
        if ($64) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1760 "xmltok_impl.c"
      case 17: // $bb10
        var $65=$enc_addr; //@line 1760 "xmltok_impl.c"
        var $66=$65; //@line 1760 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $68=HEAP[$67]; //@line 1760 "xmltok_impl.c"
        var $69=($68); //@line 1760 "xmltok_impl.c"
        var $70=$66+72; //@line 1760 "xmltok_impl.c"
        var $71=$70+$69; //@line 1760 "xmltok_impl.c"
        var $72=HEAP[$71]; //@line 1760 "xmltok_impl.c"
        var $73=($72)==10; //@line 1760 "xmltok_impl.c"
        var $74=($73); //@line 1760 "xmltok_impl.c"
        $iftmp_829=$74; //@line 1760 "xmltok_impl.c"
        __lastLabel__ = 17; __label__ = 25; break; //@line 1760 "xmltok_impl.c"
      case 18: // $bb11
        var $75=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $76=$75; //@line 1760 "xmltok_impl.c"
        var $77=HEAP[$76]; //@line 1760 "xmltok_impl.c"
        var $78=($77); //@line 1760 "xmltok_impl.c"
        var $79=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $80=$79+1; //@line 1760 "xmltok_impl.c"
        var $81=HEAP[$80]; //@line 1760 "xmltok_impl.c"
        var $82=($81); //@line 1760 "xmltok_impl.c"
        var $83=((($82)) & 255); //@line 1760 "xmltok_impl.c"
        var $84=((($78)) & 255); //@line 1760 "xmltok_impl.c"
        $hi_addr_i1=$83;
        $lo_addr_i2=$84;
        var $85=$hi_addr_i1; //@line 518 "xmltok.c"
        var $86=($85); //@line 518 "xmltok.c"
        if ($86 == 216) {
          __label__ = 19; break;
        }
        else if ($86 == 217) {
          __label__ = 19; break;
        }
        else if ($86 == 218) {
          __label__ = 19; break;
        }
        else if ($86 == 219) {
          __label__ = 19; break;
        }
        else if ($86 == 220) {
          __label__ = 20; break;
        }
        else if ($86 == 221) {
          __label__ = 20; break;
        }
        else if ($86 == 222) {
          __label__ = 20; break;
        }
        else if ($86 == 223) {
          __label__ = 20; break;
        }
        else if ($86 == 255) {
          __label__ = 21; break;
        }
        else {
        __label__ = 23; break;
        }
        
      case 19: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 24; break; //@line 520 "xmltok.c"
      case 20: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 24; break; //@line 522 "xmltok.c"
      case 21: // $bb2_i8
        var $87=$lo_addr_i2; //@line 524 "xmltok.c"
        var $88=($87); //@line 524 "xmltok.c"
        var $_off_i6=($88) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 22; break; } else { __label__ = 23; break; }
      case 22: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 24; break; //@line 527 "xmltok.c"
      case 23: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 24; break; //@line 531 "xmltok.c"
      case 24: // $unicode_byte_type_exit12
        var $89=$0; //@line 520 "xmltok.c"
        $retval_i3=$89; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $90=($retval6_i11)==10; //@line 1760 "xmltok_impl.c"
        var $91=($90); //@line 1760 "xmltok_impl.c"
        $iftmp_829=$91; //@line 1760 "xmltok_impl.c"
        __lastLabel__ = 24; __label__ = 25; break; //@line 1760 "xmltok_impl.c"
      case 25: // $bb12
        var $92=__lastLabel__ == 24 ? $91 : ($74);
        var $toBool=($92)!=0; //@line 1760 "xmltok_impl.c"
        if ($toBool) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1760 "xmltok_impl.c"
      case 26: // $bb13
        var $93=$ptr_addr; //@line 1761 "xmltok_impl.c"
        var $94=$93+2; //@line 1761 "xmltok_impl.c"
        $ptr_addr=$94; //@line 1761 "xmltok_impl.c"
        __label__ = 27; break; //@line 1761 "xmltok_impl.c"
      case 27: // $bb14
        var $95=$pos_addr; //@line 1762 "xmltok_impl.c"
        var $96=$95+4; //@line 1762 "xmltok_impl.c"
        HEAP[$96]=-1; //@line 1762 "xmltok_impl.c"
        __label__ = 29; break; //@line 1762 "xmltok_impl.c"
      case 28: // $bb15
        var $97=$ptr_addr; //@line 1765 "xmltok_impl.c"
        var $98=$97+2; //@line 1765 "xmltok_impl.c"
        $ptr_addr=$98; //@line 1765 "xmltok_impl.c"
        __label__ = 29; break; //@line 1765 "xmltok_impl.c"
      case 29: // $bb16
        var $99=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $100=$99+4; //@line 1768 "xmltok_impl.c"
        var $101=HEAP[$100]; //@line 1768 "xmltok_impl.c"
        var $102=($101) + 1; //@line 1768 "xmltok_impl.c"
        var $103=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $104=$103+4; //@line 1768 "xmltok_impl.c"
        HEAP[$104]=$102; //@line 1768 "xmltok_impl.c"
        var $105=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $106=$end_addr; //@line 1744 "xmltok_impl.c"
        var $107=($105) < ($106); //@line 1744 "xmltok_impl.c"
        if ($107) { __label__ = 1; break; } else { __label__ = 30; break; } //@line 1744 "xmltok_impl.c"
      case 30: // $return
        ;
        return; //@line 1770 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_scanComment($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_831;
        var $1;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $2=$ptr_addr; //@line 93 "xmltok_impl.c"
        var $3=$end_addr; //@line 93 "xmltok_impl.c"
        var $4=($2)!=($3); //@line 93 "xmltok_impl.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 37; break; } //@line 93 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 94 "xmltok_impl.c"
        var $6=$5; //@line 94 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 94 "xmltok_impl.c"
        var $8=($7)!=0; //@line 94 "xmltok_impl.c"
        if ($8) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 94 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$ptr_addr; //@line 94 "xmltok_impl.c"
        var $10=$9+1; //@line 94 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 94 "xmltok_impl.c"
        var $12=($11)!=45; //@line 94 "xmltok_impl.c"
        if ($12) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 94 "xmltok_impl.c"
      case 3: // $bb2
        var $13=$nextTokPtr_addr; //@line 95 "xmltok_impl.c"
        var $14=$ptr_addr; //@line 95 "xmltok_impl.c"
        HEAP[$13]=$14; //@line 95 "xmltok_impl.c"
        $1=0; //@line 96 "xmltok_impl.c"
        __label__ = 38; break; //@line 96 "xmltok_impl.c"
      case 4: // $bb3
        var $15=$ptr_addr; //@line 98 "xmltok_impl.c"
        var $16=$15+2; //@line 98 "xmltok_impl.c"
        $ptr_addr=$16; //@line 98 "xmltok_impl.c"
        __label__ = 36; break; //@line 98 "xmltok_impl.c"
      case 5: // $bb4
        var $17=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $18=$17; //@line 100 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 100 "xmltok_impl.c"
        var $20=($19)==0; //@line 100 "xmltok_impl.c"
        if ($20) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 100 "xmltok_impl.c"
      case 6: // $bb5
        var $21=$enc_addr; //@line 100 "xmltok_impl.c"
        var $22=$21; //@line 100 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $24=$23+1; //@line 100 "xmltok_impl.c"
        var $25=HEAP[$24]; //@line 100 "xmltok_impl.c"
        var $26=($25); //@line 100 "xmltok_impl.c"
        var $27=$22+72; //@line 100 "xmltok_impl.c"
        var $28=$27+$26; //@line 100 "xmltok_impl.c"
        var $29=HEAP[$28]; //@line 100 "xmltok_impl.c"
        var $30=($29); //@line 100 "xmltok_impl.c"
        $iftmp_831=$30; //@line 100 "xmltok_impl.c"
        __lastLabel__ = 6; __label__ = 14; break; //@line 100 "xmltok_impl.c"
      case 7: // $bb6
        var $31=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $32=$31+1; //@line 100 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 100 "xmltok_impl.c"
        var $34=($33); //@line 100 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 100 "xmltok_impl.c"
        var $36=$35; //@line 100 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 100 "xmltok_impl.c"
        var $38=($37); //@line 100 "xmltok_impl.c"
        var $39=((($38)) & 255); //@line 100 "xmltok_impl.c"
        var $40=((($34)) & 255); //@line 100 "xmltok_impl.c"
        $hi_addr_i=$39;
        $lo_addr_i=$40;
        var $41=$hi_addr_i; //@line 518 "xmltok.c"
        var $42=($41); //@line 518 "xmltok.c"
        if ($42 == 216) {
          __label__ = 8; break;
        }
        else if ($42 == 217) {
          __label__ = 8; break;
        }
        else if ($42 == 218) {
          __label__ = 8; break;
        }
        else if ($42 == 219) {
          __label__ = 8; break;
        }
        else if ($42 == 220) {
          __label__ = 9; break;
        }
        else if ($42 == 221) {
          __label__ = 9; break;
        }
        else if ($42 == 222) {
          __label__ = 9; break;
        }
        else if ($42 == 223) {
          __label__ = 9; break;
        }
        else if ($42 == 255) {
          __label__ = 10; break;
        }
        else {
        __label__ = 12; break;
        }
        
      case 8: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 13; break; //@line 520 "xmltok.c"
      case 9: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 13; break; //@line 522 "xmltok.c"
      case 10: // $bb2_i
        var $43=$lo_addr_i; //@line 524 "xmltok.c"
        var $44=($43); //@line 524 "xmltok.c"
        var $_off_i=($44) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 11; break; } else { __label__ = 12; break; }
      case 11: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 13; break; //@line 527 "xmltok.c"
      case 12: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 13; break; //@line 531 "xmltok.c"
      case 13: // $unicode_byte_type_exit
        var $45=$0; //@line 520 "xmltok.c"
        $retval_i=$45; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_831=$retval6_i; //@line 100 "xmltok_impl.c"
        __lastLabel__ = 13; __label__ = 14; break; //@line 100 "xmltok_impl.c"
      case 14: // $bb7
        var $46=__lastLabel__ == 13 ? $retval6_i : ($30);
        if ($46 == 0) {
          __label__ = 24; break;
        }
        else if ($46 == 1) {
          __label__ = 24; break;
        }
        else if ($46 == 5) {
          __label__ = 15; break;
        }
        else if ($46 == 6) {
          __label__ = 18; break;
        }
        else if ($46 == 7) {
          __label__ = 21; break;
        }
        else if ($46 == 8) {
          __label__ = 24; break;
        }
        else if ($46 == 27) {
          __label__ = 25; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 15: // $bb8
        var $47=$end_addr; //@line 101 "xmltok_impl.c"
        var $48=($47); //@line 101 "xmltok_impl.c"
        var $49=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $50=($49); //@line 101 "xmltok_impl.c"
        var $51=($48) - ($50); //@line 101 "xmltok_impl.c"
        var $52=($51) <= 1; //@line 101 "xmltok_impl.c"
        if ($52) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 101 "xmltok_impl.c"
      case 16: // $bb9
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 17: // $bb10
        var $53=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $54=$53+2; //@line 101 "xmltok_impl.c"
        $ptr_addr=$54; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 18: // $bb11
        var $55=$end_addr; //@line 101 "xmltok_impl.c"
        var $56=($55); //@line 101 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $58=($57); //@line 101 "xmltok_impl.c"
        var $59=($56) - ($58); //@line 101 "xmltok_impl.c"
        var $60=($59) <= 2; //@line 101 "xmltok_impl.c"
        if ($60) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 101 "xmltok_impl.c"
      case 19: // $bb12
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 20: // $bb13
        var $61=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $62=$61+3; //@line 101 "xmltok_impl.c"
        $ptr_addr=$62; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 21: // $bb14
        var $63=$end_addr; //@line 101 "xmltok_impl.c"
        var $64=($63); //@line 101 "xmltok_impl.c"
        var $65=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $66=($65); //@line 101 "xmltok_impl.c"
        var $67=($64) - ($66); //@line 101 "xmltok_impl.c"
        var $68=($67) <= 3; //@line 101 "xmltok_impl.c"
        if ($68) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 101 "xmltok_impl.c"
      case 22: // $bb15
        $1=-2; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 23: // $bb16
        var $69=$ptr_addr; //@line 101 "xmltok_impl.c"
        var $70=$69+4; //@line 101 "xmltok_impl.c"
        $ptr_addr=$70; //@line 101 "xmltok_impl.c"
        __label__ = 36; break; //@line 101 "xmltok_impl.c"
      case 24: // $bb17
        var $71=$nextTokPtr_addr; //@line 101 "xmltok_impl.c"
        var $72=$ptr_addr; //@line 101 "xmltok_impl.c"
        HEAP[$71]=$72; //@line 101 "xmltok_impl.c"
        $1=0; //@line 101 "xmltok_impl.c"
        __label__ = 38; break; //@line 101 "xmltok_impl.c"
      case 25: // $bb18
        var $73=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $74=$73+2; //@line 103 "xmltok_impl.c"
        $ptr_addr=$74; //@line 103 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 103 "xmltok_impl.c"
        var $76=$end_addr; //@line 103 "xmltok_impl.c"
        var $77=($75)==($76); //@line 103 "xmltok_impl.c"
        if ($77) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 103 "xmltok_impl.c"
      case 26: // $bb19
        $1=-1; //@line 104 "xmltok_impl.c"
        __label__ = 38; break; //@line 104 "xmltok_impl.c"
      case 27: // $bb20
        var $78=$ptr_addr; //@line 105 "xmltok_impl.c"
        var $79=$78; //@line 105 "xmltok_impl.c"
        var $80=HEAP[$79]; //@line 105 "xmltok_impl.c"
        var $81=($80)==0; //@line 105 "xmltok_impl.c"
        if ($81) { __label__ = 28; break; } else { __label__ = 36; break; } //@line 105 "xmltok_impl.c"
      case 28: // $bb21
        var $82=$ptr_addr; //@line 105 "xmltok_impl.c"
        var $83=$82+1; //@line 105 "xmltok_impl.c"
        var $84=HEAP[$83]; //@line 105 "xmltok_impl.c"
        var $85=($84)==45; //@line 105 "xmltok_impl.c"
        if ($85) { __label__ = 29; break; } else { __label__ = 36; break; } //@line 105 "xmltok_impl.c"
      case 29: // $bb22
        var $86=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $87=$86+2; //@line 106 "xmltok_impl.c"
        $ptr_addr=$87; //@line 106 "xmltok_impl.c"
        var $88=$ptr_addr; //@line 106 "xmltok_impl.c"
        var $89=$end_addr; //@line 106 "xmltok_impl.c"
        var $90=($88)==($89); //@line 106 "xmltok_impl.c"
        if ($90) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 106 "xmltok_impl.c"
      case 30: // $bb23
        $1=-1; //@line 107 "xmltok_impl.c"
        __label__ = 38; break; //@line 107 "xmltok_impl.c"
      case 31: // $bb24
        var $91=$ptr_addr; //@line 108 "xmltok_impl.c"
        var $92=$91; //@line 108 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 108 "xmltok_impl.c"
        var $94=($93)!=0; //@line 108 "xmltok_impl.c"
        if ($94) { __label__ = 33; break; } else { __label__ = 32; break; } //@line 108 "xmltok_impl.c"
      case 32: // $bb25
        var $95=$ptr_addr; //@line 108 "xmltok_impl.c"
        var $96=$95+1; //@line 108 "xmltok_impl.c"
        var $97=HEAP[$96]; //@line 108 "xmltok_impl.c"
        var $98=($97)!=62; //@line 108 "xmltok_impl.c"
        if ($98) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 108 "xmltok_impl.c"
      case 33: // $bb26
        var $99=$nextTokPtr_addr; //@line 109 "xmltok_impl.c"
        var $100=$ptr_addr; //@line 109 "xmltok_impl.c"
        HEAP[$99]=$100; //@line 109 "xmltok_impl.c"
        $1=0; //@line 110 "xmltok_impl.c"
        __label__ = 38; break; //@line 110 "xmltok_impl.c"
      case 34: // $bb27
        var $101=$ptr_addr; //@line 112 "xmltok_impl.c"
        var $102=$101+2; //@line 112 "xmltok_impl.c"
        var $103=$nextTokPtr_addr; //@line 112 "xmltok_impl.c"
        HEAP[$103]=$102; //@line 112 "xmltok_impl.c"
        $1=13; //@line 113 "xmltok_impl.c"
        __label__ = 38; break; //@line 113 "xmltok_impl.c"
      case 35: // $bb29
        var $104=$ptr_addr; //@line 117 "xmltok_impl.c"
        var $105=$104+2; //@line 117 "xmltok_impl.c"
        $ptr_addr=$105; //@line 117 "xmltok_impl.c"
        __label__ = 36; break; //@line 117 "xmltok_impl.c"
      case 36: // $bb30
        var $106=$ptr_addr; //@line 99 "xmltok_impl.c"
        var $107=$end_addr; //@line 99 "xmltok_impl.c"
        var $108=($106)!=($107); //@line 99 "xmltok_impl.c"
        if ($108) { __label__ = 5; break; } else { __label__ = 37; break; } //@line 99 "xmltok_impl.c"
      case 37: // $bb31
        $1=-1; //@line 122 "xmltok_impl.c"
        __label__ = 38; break; //@line 122 "xmltok_impl.c"
      case 38: // $bb32
        var $109=$1; //@line 96 "xmltok_impl.c"
        $retval=$109; //@line 96 "xmltok_impl.c"
        var $retval33=$retval; //@line 96 "xmltok_impl.c"
        ;
        return $retval33; //@line 96 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_checkPiTarget($enc, $ptr, $end, $tokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $tokPtr_addr;
        var $retval;
        var $iftmp_849;
        var $iftmp_848;
        var $iftmp_847;
        var $0;
        var $upper;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $tokPtr_addr=$tokPtr;
        $upper=0; //@line 178 "xmltok_impl.c"
        var $1=$tokPtr_addr; //@line 179 "xmltok_impl.c"
        HEAP[$1]=11; //@line 179 "xmltok_impl.c"
        var $2=$end_addr; //@line 180 "xmltok_impl.c"
        var $3=($2); //@line 180 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 180 "xmltok_impl.c"
        var $5=($4); //@line 180 "xmltok_impl.c"
        var $6=($3) - ($5); //@line 180 "xmltok_impl.c"
        var $7=($6)!=6; //@line 180 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 180 "xmltok_impl.c"
      case 1: // $bb
        $0=1; //@line 181 "xmltok_impl.c"
        __label__ = 20; break; //@line 181 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$ptr_addr; //@line 182 "xmltok_impl.c"
        var $9=$8; //@line 182 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 182 "xmltok_impl.c"
        var $11=($10)==0; //@line 182 "xmltok_impl.c"
        if ($11) { __label__ = 4; break; } else { __label__ = 3; break; } //@line 182 "xmltok_impl.c"
      case 3: // $bb4_thread
        $iftmp_847=-1; //@line 182 "xmltok_impl.c"
        __label__ = 6; break;
      case 4: // $bb4
        var $12=$ptr_addr; //@line 182 "xmltok_impl.c"
        var $13=$12+1; //@line 182 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 182 "xmltok_impl.c"
        var $15=($14); //@line 182 "xmltok_impl.c"
        $iftmp_847=$15; //@line 182 "xmltok_impl.c"
        if ($15 == 88) {
          __label__ = 5; break;
        }
        else if ($15 == 120) {
          __label__ = 7; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 5: // $bb6
        $upper=1; //@line 186 "xmltok_impl.c"
        __label__ = 7; break; //@line 186 "xmltok_impl.c"
      case 6: // $bb7
        $0=1; //@line 189 "xmltok_impl.c"
        __label__ = 20; break; //@line 189 "xmltok_impl.c"
      case 7: // $bb8
        var $16=$ptr_addr; //@line 191 "xmltok_impl.c"
        var $17=$16+2; //@line 191 "xmltok_impl.c"
        $ptr_addr=$17; //@line 191 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 192 "xmltok_impl.c"
        var $19=$18; //@line 192 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 192 "xmltok_impl.c"
        var $21=($20)==0; //@line 192 "xmltok_impl.c"
        if ($21) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 192 "xmltok_impl.c"
      case 8: // $bb11_thread
        $iftmp_848=-1; //@line 192 "xmltok_impl.c"
        __label__ = 11; break;
      case 9: // $bb11
        var $22=$ptr_addr; //@line 192 "xmltok_impl.c"
        var $23=$22+1; //@line 192 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 192 "xmltok_impl.c"
        var $25=($24); //@line 192 "xmltok_impl.c"
        $iftmp_848=$25; //@line 192 "xmltok_impl.c"
        if ($25 == 77) {
          __label__ = 10; break;
        }
        else if ($25 == 109) {
          __label__ = 12; break;
        }
        else {
        __label__ = 11; break;
        }
        
      case 10: // $bb13
        $upper=1; //@line 196 "xmltok_impl.c"
        __label__ = 12; break; //@line 196 "xmltok_impl.c"
      case 11: // $bb14
        $0=1; //@line 199 "xmltok_impl.c"
        __label__ = 20; break; //@line 199 "xmltok_impl.c"
      case 12: // $bb15
        var $26=$ptr_addr; //@line 201 "xmltok_impl.c"
        var $27=$26+2; //@line 201 "xmltok_impl.c"
        $ptr_addr=$27; //@line 201 "xmltok_impl.c"
        var $28=$ptr_addr; //@line 202 "xmltok_impl.c"
        var $29=$28; //@line 202 "xmltok_impl.c"
        var $30=HEAP[$29]; //@line 202 "xmltok_impl.c"
        var $31=($30)==0; //@line 202 "xmltok_impl.c"
        if ($31) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 202 "xmltok_impl.c"
      case 13: // $bb18_thread
        $iftmp_849=-1; //@line 202 "xmltok_impl.c"
        __label__ = 16; break;
      case 14: // $bb18
        var $32=$ptr_addr; //@line 202 "xmltok_impl.c"
        var $33=$32+1; //@line 202 "xmltok_impl.c"
        var $34=HEAP[$33]; //@line 202 "xmltok_impl.c"
        var $35=($34); //@line 202 "xmltok_impl.c"
        $iftmp_849=$35; //@line 202 "xmltok_impl.c"
        if ($35 == 76) {
          __label__ = 15; break;
        }
        else if ($35 == 108) {
          __label__ = 17; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 15: // $bb22_thread
        $upper=1; //@line 206 "xmltok_impl.c"
        __label__ = 18; break;
      case 16: // $bb21
        $0=1; //@line 209 "xmltok_impl.c"
        __label__ = 20; break; //@line 209 "xmltok_impl.c"
      case 17: // $bb22
        var $_pr=$upper;
        var $36=($_pr)!=0; //@line 211 "xmltok_impl.c"
        if ($36) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 211 "xmltok_impl.c"
      case 18: // $bb23
        $0=0; //@line 212 "xmltok_impl.c"
        __label__ = 20; break; //@line 212 "xmltok_impl.c"
      case 19: // $bb24
        var $37=$tokPtr_addr; //@line 213 "xmltok_impl.c"
        HEAP[$37]=12; //@line 213 "xmltok_impl.c"
        $0=1; //@line 214 "xmltok_impl.c"
        __label__ = 20; break; //@line 214 "xmltok_impl.c"
      case 20: // $bb25
        var $38=$0; //@line 181 "xmltok_impl.c"
        $retval=$38; //@line 181 "xmltok_impl.c"
        var $retval26=$retval; //@line 181 "xmltok_impl.c"
        ;
        return $retval26; //@line 181 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_scanPi($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $0;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $1;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $2;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_866;
        var $iftmp_858;
        var $iftmp_850;
        var $3;
        var $tok=__stackBase__;
        var $target;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $4=$ptr_addr; //@line 224 "xmltok_impl.c"
        $target=$4; //@line 224 "xmltok_impl.c"
        var $5=$ptr_addr; //@line 225 "xmltok_impl.c"
        var $6=$end_addr; //@line 225 "xmltok_impl.c"
        var $7=($5)==($6); //@line 225 "xmltok_impl.c"
        if ($7) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 225 "xmltok_impl.c"
      case 1: // $bb
        $3=-1; //@line 226 "xmltok_impl.c"
        __label__ = 88; break; //@line 226 "xmltok_impl.c"
      case 2: // $bb1
        var $8=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $9=$8; //@line 227 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 227 "xmltok_impl.c"
        var $11=($10)==0; //@line 227 "xmltok_impl.c"
        if ($11) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 227 "xmltok_impl.c"
      case 3: // $bb2
        var $12=$enc_addr; //@line 227 "xmltok_impl.c"
        var $13=$12; //@line 227 "xmltok_impl.c"
        var $14=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $15=$14+1; //@line 227 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 227 "xmltok_impl.c"
        var $17=($16); //@line 227 "xmltok_impl.c"
        var $18=$13+72; //@line 227 "xmltok_impl.c"
        var $19=$18+$17; //@line 227 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 227 "xmltok_impl.c"
        var $21=($20); //@line 227 "xmltok_impl.c"
        $iftmp_850=$21; //@line 227 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 227 "xmltok_impl.c"
      case 4: // $bb3
        var $22=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $23=$22+1; //@line 227 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 227 "xmltok_impl.c"
        var $25=($24); //@line 227 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 227 "xmltok_impl.c"
        var $27=$26; //@line 227 "xmltok_impl.c"
        var $28=HEAP[$27]; //@line 227 "xmltok_impl.c"
        var $29=($28); //@line 227 "xmltok_impl.c"
        var $30=((($29)) & 255); //@line 227 "xmltok_impl.c"
        var $31=((($25)) & 255); //@line 227 "xmltok_impl.c"
        $hi_addr_i=$30;
        $lo_addr_i=$31;
        var $32=$hi_addr_i; //@line 518 "xmltok.c"
        var $33=($32); //@line 518 "xmltok.c"
        if ($33 == 216) {
          __label__ = 5; break;
        }
        else if ($33 == 217) {
          __label__ = 5; break;
        }
        else if ($33 == 218) {
          __label__ = 5; break;
        }
        else if ($33 == 219) {
          __label__ = 5; break;
        }
        else if ($33 == 220) {
          __label__ = 6; break;
        }
        else if ($33 == 221) {
          __label__ = 6; break;
        }
        else if ($33 == 222) {
          __label__ = 6; break;
        }
        else if ($33 == 223) {
          __label__ = 6; break;
        }
        else if ($33 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $34=$lo_addr_i; //@line 524 "xmltok.c"
        var $35=($34); //@line 524 "xmltok.c"
        var $_off_i=($35) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $36=$2; //@line 520 "xmltok.c"
        $retval_i=$36; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_850=$retval6_i; //@line 227 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 227 "xmltok_impl.c"
      case 11: // $bb4
        var $37=__lastLabel__ == 10 ? $retval6_i : ($21);
        if ($37 == 5) {
          __label__ = 15; break;
        }
        else if ($37 == 6) {
          __label__ = 18; break;
        }
        else if ($37 == 7) {
          __label__ = 21; break;
        }
        else if ($37 == 22) {
          __label__ = 14; break;
        }
        else if ($37 == 24) {
          __label__ = 14; break;
        }
        else if ($37 == 29) {
          __label__ = 12; break;
        }
        else {
        __label__ = 24; break;
        }
        
      case 12: // $bb5
        var $38=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $39=$38; //@line 228 "xmltok_impl.c"
        var $40=HEAP[$39]; //@line 228 "xmltok_impl.c"
        var $41=($40); //@line 228 "xmltok_impl.c"
        var $42=_nmstrtPages+$41; //@line 228 "xmltok_impl.c"
        var $43=HEAP[$42]; //@line 228 "xmltok_impl.c"
        var $44=($43); //@line 228 "xmltok_impl.c"
        var $45=($44) * 8;
        var $46=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $47=$46+1; //@line 228 "xmltok_impl.c"
        var $48=HEAP[$47]; //@line 228 "xmltok_impl.c"
        var $49=($48) >>> 5; //@line 228 "xmltok_impl.c"
        var $50=($49); //@line 228 "xmltok_impl.c"
        var $51=($50) + ($45); //@line 228 "xmltok_impl.c"
        var $52=_namingBitmap+$51*4; //@line 228 "xmltok_impl.c"
        var $53=HEAP[$52]; //@line 228 "xmltok_impl.c"
        var $54=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $55=$54+1; //@line 228 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 228 "xmltok_impl.c"
        var $57=($56); //@line 228 "xmltok_impl.c"
        var $58=($57) & 31; //@line 228 "xmltok_impl.c"
        var $59=1 << ($58); //@line 228 "xmltok_impl.c"
        var $60=($59) & ($53); //@line 228 "xmltok_impl.c"
        var $61=($60)==0; //@line 228 "xmltok_impl.c"
        if ($61) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 228 "xmltok_impl.c"
      case 13: // $bb6
        var $62=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $63=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$62]=$63; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 14: // $bb7
        var $64=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $65=$64+2; //@line 228 "xmltok_impl.c"
        $ptr_addr=$65; //@line 228 "xmltok_impl.c"
        __label__ = 86; break; //@line 228 "xmltok_impl.c"
      case 15: // $bb8
        var $66=$end_addr; //@line 228 "xmltok_impl.c"
        var $67=($66); //@line 228 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $69=($68); //@line 228 "xmltok_impl.c"
        var $70=($67) - ($69); //@line 228 "xmltok_impl.c"
        var $71=($70) <= 1; //@line 228 "xmltok_impl.c"
        if ($71) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 228 "xmltok_impl.c"
      case 16: // $bb9
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 17: // $bb10
        var $72=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $73=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$72]=$73; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 18: // $bb11
        var $74=$end_addr; //@line 228 "xmltok_impl.c"
        var $75=($74); //@line 228 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $77=($76); //@line 228 "xmltok_impl.c"
        var $78=($75) - ($77); //@line 228 "xmltok_impl.c"
        var $79=($78) <= 2; //@line 228 "xmltok_impl.c"
        if ($79) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 228 "xmltok_impl.c"
      case 19: // $bb12
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 20: // $bb13
        var $80=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $81=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$80]=$81; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 21: // $bb14
        var $82=$end_addr; //@line 228 "xmltok_impl.c"
        var $83=($82); //@line 228 "xmltok_impl.c"
        var $84=$ptr_addr; //@line 228 "xmltok_impl.c"
        var $85=($84); //@line 228 "xmltok_impl.c"
        var $86=($83) - ($85); //@line 228 "xmltok_impl.c"
        var $87=($86) <= 3; //@line 228 "xmltok_impl.c"
        if ($87) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 228 "xmltok_impl.c"
      case 22: // $bb15
        $3=-2; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 23: // $bb16
        var $88=$nextTokPtr_addr; //@line 228 "xmltok_impl.c"
        var $89=$ptr_addr; //@line 228 "xmltok_impl.c"
        HEAP[$88]=$89; //@line 228 "xmltok_impl.c"
        $3=0; //@line 228 "xmltok_impl.c"
        __label__ = 88; break; //@line 228 "xmltok_impl.c"
      case 24: // $bb17
        var $90=$nextTokPtr_addr; //@line 230 "xmltok_impl.c"
        var $91=$ptr_addr; //@line 230 "xmltok_impl.c"
        HEAP[$90]=$91; //@line 230 "xmltok_impl.c"
        $3=0; //@line 231 "xmltok_impl.c"
        __label__ = 88; break; //@line 231 "xmltok_impl.c"
      case 25: // $bb18
        var $92=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $93=$92; //@line 234 "xmltok_impl.c"
        var $94=HEAP[$93]; //@line 234 "xmltok_impl.c"
        var $95=($94)==0; //@line 234 "xmltok_impl.c"
        if ($95) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 234 "xmltok_impl.c"
      case 26: // $bb19
        var $96=$enc_addr; //@line 234 "xmltok_impl.c"
        var $97=$96; //@line 234 "xmltok_impl.c"
        var $98=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $99=$98+1; //@line 234 "xmltok_impl.c"
        var $100=HEAP[$99]; //@line 234 "xmltok_impl.c"
        var $101=($100); //@line 234 "xmltok_impl.c"
        var $102=$97+72; //@line 234 "xmltok_impl.c"
        var $103=$102+$101; //@line 234 "xmltok_impl.c"
        var $104=HEAP[$103]; //@line 234 "xmltok_impl.c"
        var $105=($104); //@line 234 "xmltok_impl.c"
        $iftmp_858=$105; //@line 234 "xmltok_impl.c"
        __lastLabel__ = 26; __label__ = 34; break; //@line 234 "xmltok_impl.c"
      case 27: // $bb20
        var $106=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $107=$106+1; //@line 234 "xmltok_impl.c"
        var $108=HEAP[$107]; //@line 234 "xmltok_impl.c"
        var $109=($108); //@line 234 "xmltok_impl.c"
        var $110=$ptr_addr; //@line 234 "xmltok_impl.c"
        var $111=$110; //@line 234 "xmltok_impl.c"
        var $112=HEAP[$111]; //@line 234 "xmltok_impl.c"
        var $113=($112); //@line 234 "xmltok_impl.c"
        var $114=((($113)) & 255); //@line 234 "xmltok_impl.c"
        var $115=((($109)) & 255); //@line 234 "xmltok_impl.c"
        $hi_addr_i1=$114;
        $lo_addr_i2=$115;
        var $116=$hi_addr_i1; //@line 518 "xmltok.c"
        var $117=($116); //@line 518 "xmltok.c"
        if ($117 == 216) {
          __label__ = 28; break;
        }
        else if ($117 == 217) {
          __label__ = 28; break;
        }
        else if ($117 == 218) {
          __label__ = 28; break;
        }
        else if ($117 == 219) {
          __label__ = 28; break;
        }
        else if ($117 == 220) {
          __label__ = 29; break;
        }
        else if ($117 == 221) {
          __label__ = 29; break;
        }
        else if ($117 == 222) {
          __label__ = 29; break;
        }
        else if ($117 == 223) {
          __label__ = 29; break;
        }
        else if ($117 == 255) {
          __label__ = 30; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 28: // $bb_i4
        $1=7; //@line 520 "xmltok.c"
        __label__ = 33; break; //@line 520 "xmltok.c"
      case 29: // $bb1_i5
        $1=8; //@line 522 "xmltok.c"
        __label__ = 33; break; //@line 522 "xmltok.c"
      case 30: // $bb2_i8
        var $118=$lo_addr_i2; //@line 524 "xmltok.c"
        var $119=($118); //@line 524 "xmltok.c"
        var $_off_i6=($119) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 31; break; } else { __label__ = 32; break; }
      case 31: // $bb3_i9
        $1=0; //@line 527 "xmltok.c"
        __label__ = 33; break; //@line 527 "xmltok.c"
      case 32: // $bb4_i10
        $1=29; //@line 531 "xmltok.c"
        __label__ = 33; break; //@line 531 "xmltok.c"
      case 33: // $unicode_byte_type_exit12
        var $120=$1; //@line 520 "xmltok.c"
        $retval_i3=$120; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_858=$retval6_i11; //@line 234 "xmltok_impl.c"
        __lastLabel__ = 33; __label__ = 34; break; //@line 234 "xmltok_impl.c"
      case 34: // $bb21
        var $121=__lastLabel__ == 33 ? $retval6_i11 : ($105);
        if ($121 == 5) {
          __label__ = 38; break;
        }
        else if ($121 == 6) {
          __label__ = 41; break;
        }
        else if ($121 == 7) {
          __label__ = 44; break;
        }
        else if ($121 == 9) {
          __label__ = 47; break;
        }
        else if ($121 == 10) {
          __label__ = 47; break;
        }
        else if ($121 == 15) {
          __label__ = 78; break;
        }
        else if ($121 == 21) {
          __label__ = 47; break;
        }
        else if ($121 == 22) {
          __label__ = 37; break;
        }
        else if ($121 == 24) {
          __label__ = 37; break;
        }
        else if ($121 == 25) {
          __label__ = 37; break;
        }
        else if ($121 == 26) {
          __label__ = 37; break;
        }
        else if ($121 == 27) {
          __label__ = 37; break;
        }
        else if ($121 == 29) {
          __label__ = 35; break;
        }
        else {
        __label__ = 85; break;
        }
        
      case 35: // $bb22
        var $122=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $123=$122; //@line 235 "xmltok_impl.c"
        var $124=HEAP[$123]; //@line 235 "xmltok_impl.c"
        var $125=($124); //@line 235 "xmltok_impl.c"
        var $126=_namePages+$125; //@line 235 "xmltok_impl.c"
        var $127=HEAP[$126]; //@line 235 "xmltok_impl.c"
        var $128=($127); //@line 235 "xmltok_impl.c"
        var $129=($128) * 8;
        var $130=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $131=$130+1; //@line 235 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 235 "xmltok_impl.c"
        var $133=($132) >>> 5; //@line 235 "xmltok_impl.c"
        var $134=($133); //@line 235 "xmltok_impl.c"
        var $135=($134) + ($129); //@line 235 "xmltok_impl.c"
        var $136=_namingBitmap+$135*4; //@line 235 "xmltok_impl.c"
        var $137=HEAP[$136]; //@line 235 "xmltok_impl.c"
        var $138=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $139=$138+1; //@line 235 "xmltok_impl.c"
        var $140=HEAP[$139]; //@line 235 "xmltok_impl.c"
        var $141=($140); //@line 235 "xmltok_impl.c"
        var $142=($141) & 31; //@line 235 "xmltok_impl.c"
        var $143=1 << ($142); //@line 235 "xmltok_impl.c"
        var $144=($143) & ($137); //@line 235 "xmltok_impl.c"
        var $145=($144)==0; //@line 235 "xmltok_impl.c"
        if ($145) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 235 "xmltok_impl.c"
      case 36: // $bb23
        var $146=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $147=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$146]=$147; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 37: // $bb24
        var $148=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $149=$148+2; //@line 235 "xmltok_impl.c"
        $ptr_addr=$149; //@line 235 "xmltok_impl.c"
        __label__ = 86; break; //@line 235 "xmltok_impl.c"
      case 38: // $bb25
        var $150=$end_addr; //@line 235 "xmltok_impl.c"
        var $151=($150); //@line 235 "xmltok_impl.c"
        var $152=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $153=($152); //@line 235 "xmltok_impl.c"
        var $154=($151) - ($153); //@line 235 "xmltok_impl.c"
        var $155=($154) <= 1; //@line 235 "xmltok_impl.c"
        if ($155) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 235 "xmltok_impl.c"
      case 39: // $bb26
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 40: // $bb27
        var $156=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $157=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$156]=$157; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 41: // $bb28
        var $158=$end_addr; //@line 235 "xmltok_impl.c"
        var $159=($158); //@line 235 "xmltok_impl.c"
        var $160=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $161=($160); //@line 235 "xmltok_impl.c"
        var $162=($159) - ($161); //@line 235 "xmltok_impl.c"
        var $163=($162) <= 2; //@line 235 "xmltok_impl.c"
        if ($163) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 235 "xmltok_impl.c"
      case 42: // $bb29
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 43: // $bb30
        var $164=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $165=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$164]=$165; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 44: // $bb31
        var $166=$end_addr; //@line 235 "xmltok_impl.c"
        var $167=($166); //@line 235 "xmltok_impl.c"
        var $168=$ptr_addr; //@line 235 "xmltok_impl.c"
        var $169=($168); //@line 235 "xmltok_impl.c"
        var $170=($167) - ($169); //@line 235 "xmltok_impl.c"
        var $171=($170) <= 3; //@line 235 "xmltok_impl.c"
        if ($171) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 235 "xmltok_impl.c"
      case 45: // $bb32
        $3=-2; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 46: // $bb33
        var $172=$nextTokPtr_addr; //@line 235 "xmltok_impl.c"
        var $173=$ptr_addr; //@line 235 "xmltok_impl.c"
        HEAP[$172]=$173; //@line 235 "xmltok_impl.c"
        $3=0; //@line 235 "xmltok_impl.c"
        __label__ = 88; break; //@line 235 "xmltok_impl.c"
      case 47: // $bb34
        var $174=$enc_addr; //@line 237 "xmltok_impl.c"
        var $175=$target; //@line 237 "xmltok_impl.c"
        var $176=$ptr_addr; //@line 237 "xmltok_impl.c"
        var $177=_big2_checkPiTarget($174, $175, $176, $tok); //@line 237 "xmltok_impl.c"
        var $178=($177)==0; //@line 237 "xmltok_impl.c"
        if ($178) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 237 "xmltok_impl.c"
      case 48: // $bb35
        var $179=$nextTokPtr_addr; //@line 238 "xmltok_impl.c"
        var $180=$ptr_addr; //@line 238 "xmltok_impl.c"
        HEAP[$179]=$180; //@line 238 "xmltok_impl.c"
        $3=0; //@line 239 "xmltok_impl.c"
        __label__ = 88; break; //@line 239 "xmltok_impl.c"
      case 49: // $bb36
        var $181=$ptr_addr; //@line 241 "xmltok_impl.c"
        var $182=$181+2; //@line 241 "xmltok_impl.c"
        $ptr_addr=$182; //@line 241 "xmltok_impl.c"
        __label__ = 76; break; //@line 241 "xmltok_impl.c"
      case 50: // $bb37
        var $183=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $184=$183; //@line 243 "xmltok_impl.c"
        var $185=HEAP[$184]; //@line 243 "xmltok_impl.c"
        var $186=($185)==0; //@line 243 "xmltok_impl.c"
        if ($186) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 243 "xmltok_impl.c"
      case 51: // $bb38
        var $187=$enc_addr; //@line 243 "xmltok_impl.c"
        var $188=$187; //@line 243 "xmltok_impl.c"
        var $189=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $190=$189+1; //@line 243 "xmltok_impl.c"
        var $191=HEAP[$190]; //@line 243 "xmltok_impl.c"
        var $192=($191); //@line 243 "xmltok_impl.c"
        var $193=$188+72; //@line 243 "xmltok_impl.c"
        var $194=$193+$192; //@line 243 "xmltok_impl.c"
        var $195=HEAP[$194]; //@line 243 "xmltok_impl.c"
        var $196=($195); //@line 243 "xmltok_impl.c"
        $iftmp_866=$196; //@line 243 "xmltok_impl.c"
        __lastLabel__ = 51; __label__ = 59; break; //@line 243 "xmltok_impl.c"
      case 52: // $bb39
        var $197=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $198=$197+1; //@line 243 "xmltok_impl.c"
        var $199=HEAP[$198]; //@line 243 "xmltok_impl.c"
        var $200=($199); //@line 243 "xmltok_impl.c"
        var $201=$ptr_addr; //@line 243 "xmltok_impl.c"
        var $202=$201; //@line 243 "xmltok_impl.c"
        var $203=HEAP[$202]; //@line 243 "xmltok_impl.c"
        var $204=($203); //@line 243 "xmltok_impl.c"
        var $205=((($204)) & 255); //@line 243 "xmltok_impl.c"
        var $206=((($200)) & 255); //@line 243 "xmltok_impl.c"
        $hi_addr_i13=$205;
        $lo_addr_i14=$206;
        var $207=$hi_addr_i13; //@line 518 "xmltok.c"
        var $208=($207); //@line 518 "xmltok.c"
        if ($208 == 216) {
          __label__ = 53; break;
        }
        else if ($208 == 217) {
          __label__ = 53; break;
        }
        else if ($208 == 218) {
          __label__ = 53; break;
        }
        else if ($208 == 219) {
          __label__ = 53; break;
        }
        else if ($208 == 220) {
          __label__ = 54; break;
        }
        else if ($208 == 221) {
          __label__ = 54; break;
        }
        else if ($208 == 222) {
          __label__ = 54; break;
        }
        else if ($208 == 223) {
          __label__ = 54; break;
        }
        else if ($208 == 255) {
          __label__ = 55; break;
        }
        else {
        __label__ = 57; break;
        }
        
      case 53: // $bb_i16
        $0=7; //@line 520 "xmltok.c"
        __label__ = 58; break; //@line 520 "xmltok.c"
      case 54: // $bb1_i17
        $0=8; //@line 522 "xmltok.c"
        __label__ = 58; break; //@line 522 "xmltok.c"
      case 55: // $bb2_i20
        var $209=$lo_addr_i14; //@line 524 "xmltok.c"
        var $210=($209); //@line 524 "xmltok.c"
        var $_off_i18=($210) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 56; break; } else { __label__ = 57; break; }
      case 56: // $bb3_i21
        $0=0; //@line 527 "xmltok.c"
        __label__ = 58; break; //@line 527 "xmltok.c"
      case 57: // $bb4_i22
        $0=29; //@line 531 "xmltok.c"
        __label__ = 58; break; //@line 531 "xmltok.c"
      case 58: // $unicode_byte_type_exit24
        var $211=$0; //@line 520 "xmltok.c"
        $retval_i15=$211; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        $iftmp_866=$retval6_i23; //@line 243 "xmltok_impl.c"
        __lastLabel__ = 58; __label__ = 59; break; //@line 243 "xmltok_impl.c"
      case 59: // $bb40
        var $212=__lastLabel__ == 58 ? $retval6_i23 : ($196);
        if ($212 == 0) {
          __label__ = 69; break;
        }
        else if ($212 == 1) {
          __label__ = 69; break;
        }
        else if ($212 == 5) {
          __label__ = 60; break;
        }
        else if ($212 == 6) {
          __label__ = 63; break;
        }
        else if ($212 == 7) {
          __label__ = 66; break;
        }
        else if ($212 == 8) {
          __label__ = 69; break;
        }
        else if ($212 == 15) {
          __label__ = 70; break;
        }
        else {
        __label__ = 75; break;
        }
        
      case 60: // $bb41
        var $213=$end_addr; //@line 244 "xmltok_impl.c"
        var $214=($213); //@line 244 "xmltok_impl.c"
        var $215=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $216=($215); //@line 244 "xmltok_impl.c"
        var $217=($214) - ($216); //@line 244 "xmltok_impl.c"
        var $218=($217) <= 1; //@line 244 "xmltok_impl.c"
        if ($218) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 244 "xmltok_impl.c"
      case 61: // $bb42
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 62: // $bb43
        var $219=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $220=$219+2; //@line 244 "xmltok_impl.c"
        $ptr_addr=$220; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 63: // $bb44
        var $221=$end_addr; //@line 244 "xmltok_impl.c"
        var $222=($221); //@line 244 "xmltok_impl.c"
        var $223=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $224=($223); //@line 244 "xmltok_impl.c"
        var $225=($222) - ($224); //@line 244 "xmltok_impl.c"
        var $226=($225) <= 2; //@line 244 "xmltok_impl.c"
        if ($226) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 244 "xmltok_impl.c"
      case 64: // $bb45
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 65: // $bb46
        var $227=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $228=$227+3; //@line 244 "xmltok_impl.c"
        $ptr_addr=$228; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 66: // $bb47
        var $229=$end_addr; //@line 244 "xmltok_impl.c"
        var $230=($229); //@line 244 "xmltok_impl.c"
        var $231=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $232=($231); //@line 244 "xmltok_impl.c"
        var $233=($230) - ($232); //@line 244 "xmltok_impl.c"
        var $234=($233) <= 3; //@line 244 "xmltok_impl.c"
        if ($234) { __label__ = 67; break; } else { __label__ = 68; break; } //@line 244 "xmltok_impl.c"
      case 67: // $bb48
        $3=-2; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 68: // $bb49
        var $235=$ptr_addr; //@line 244 "xmltok_impl.c"
        var $236=$235+4; //@line 244 "xmltok_impl.c"
        $ptr_addr=$236; //@line 244 "xmltok_impl.c"
        __label__ = 76; break; //@line 244 "xmltok_impl.c"
      case 69: // $bb50
        var $237=$nextTokPtr_addr; //@line 244 "xmltok_impl.c"
        var $238=$ptr_addr; //@line 244 "xmltok_impl.c"
        HEAP[$237]=$238; //@line 244 "xmltok_impl.c"
        $3=0; //@line 244 "xmltok_impl.c"
        __label__ = 88; break; //@line 244 "xmltok_impl.c"
      case 70: // $bb51
        var $239=$ptr_addr; //@line 246 "xmltok_impl.c"
        var $240=$239+2; //@line 246 "xmltok_impl.c"
        $ptr_addr=$240; //@line 246 "xmltok_impl.c"
        var $241=$ptr_addr; //@line 247 "xmltok_impl.c"
        var $242=$end_addr; //@line 247 "xmltok_impl.c"
        var $243=($241)==($242); //@line 247 "xmltok_impl.c"
        if ($243) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 247 "xmltok_impl.c"
      case 71: // $bb52
        $3=-1; //@line 248 "xmltok_impl.c"
        __label__ = 88; break; //@line 248 "xmltok_impl.c"
      case 72: // $bb53
        var $244=$ptr_addr; //@line 249 "xmltok_impl.c"
        var $245=$244; //@line 249 "xmltok_impl.c"
        var $246=HEAP[$245]; //@line 249 "xmltok_impl.c"
        var $247=($246)==0; //@line 249 "xmltok_impl.c"
        if ($247) { __label__ = 73; break; } else { __label__ = 76; break; } //@line 249 "xmltok_impl.c"
      case 73: // $bb54
        var $248=$ptr_addr; //@line 249 "xmltok_impl.c"
        var $249=$248+1; //@line 249 "xmltok_impl.c"
        var $250=HEAP[$249]; //@line 249 "xmltok_impl.c"
        var $251=($250)==62; //@line 249 "xmltok_impl.c"
        if ($251) { __label__ = 74; break; } else { __label__ = 76; break; } //@line 249 "xmltok_impl.c"
      case 74: // $bb55
        var $252=$ptr_addr; //@line 250 "xmltok_impl.c"
        var $253=$252+2; //@line 250 "xmltok_impl.c"
        var $254=$nextTokPtr_addr; //@line 250 "xmltok_impl.c"
        HEAP[$254]=$253; //@line 250 "xmltok_impl.c"
        var $255=HEAP[$tok]; //@line 251 "xmltok_impl.c"
        $3=$255; //@line 251 "xmltok_impl.c"
        __label__ = 88; break; //@line 251 "xmltok_impl.c"
      case 75: // $bb57
        var $256=$ptr_addr; //@line 255 "xmltok_impl.c"
        var $257=$256+2; //@line 255 "xmltok_impl.c"
        $ptr_addr=$257; //@line 255 "xmltok_impl.c"
        __label__ = 76; break; //@line 255 "xmltok_impl.c"
      case 76: // $bb58
        var $258=$ptr_addr; //@line 242 "xmltok_impl.c"
        var $259=$end_addr; //@line 242 "xmltok_impl.c"
        var $260=($258)!=($259); //@line 242 "xmltok_impl.c"
        if ($260) { __label__ = 50; break; } else { __label__ = 77; break; } //@line 242 "xmltok_impl.c"
      case 77: // $bb59
        $3=-1; //@line 259 "xmltok_impl.c"
        __label__ = 88; break; //@line 259 "xmltok_impl.c"
      case 78: // $bb60
        var $261=$enc_addr; //@line 261 "xmltok_impl.c"
        var $262=$target; //@line 261 "xmltok_impl.c"
        var $263=$ptr_addr; //@line 261 "xmltok_impl.c"
        var $264=_big2_checkPiTarget($261, $262, $263, $tok); //@line 261 "xmltok_impl.c"
        var $265=($264)==0; //@line 261 "xmltok_impl.c"
        if ($265) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 261 "xmltok_impl.c"
      case 79: // $bb61
        var $266=$nextTokPtr_addr; //@line 262 "xmltok_impl.c"
        var $267=$ptr_addr; //@line 262 "xmltok_impl.c"
        HEAP[$266]=$267; //@line 262 "xmltok_impl.c"
        $3=0; //@line 263 "xmltok_impl.c"
        __label__ = 88; break; //@line 263 "xmltok_impl.c"
      case 80: // $bb62
        var $268=$ptr_addr; //@line 265 "xmltok_impl.c"
        var $269=$268+2; //@line 265 "xmltok_impl.c"
        $ptr_addr=$269; //@line 265 "xmltok_impl.c"
        var $270=$ptr_addr; //@line 266 "xmltok_impl.c"
        var $271=$end_addr; //@line 266 "xmltok_impl.c"
        var $272=($270)==($271); //@line 266 "xmltok_impl.c"
        if ($272) { __label__ = 81; break; } else { __label__ = 82; break; } //@line 266 "xmltok_impl.c"
      case 81: // $bb63
        $3=-1; //@line 267 "xmltok_impl.c"
        __label__ = 88; break; //@line 267 "xmltok_impl.c"
      case 82: // $bb64
        var $273=$ptr_addr; //@line 268 "xmltok_impl.c"
        var $274=$273; //@line 268 "xmltok_impl.c"
        var $275=HEAP[$274]; //@line 268 "xmltok_impl.c"
        var $276=($275)==0; //@line 268 "xmltok_impl.c"
        if ($276) { __label__ = 83; break; } else { __label__ = 85; break; } //@line 268 "xmltok_impl.c"
      case 83: // $bb65
        var $277=$ptr_addr; //@line 268 "xmltok_impl.c"
        var $278=$277+1; //@line 268 "xmltok_impl.c"
        var $279=HEAP[$278]; //@line 268 "xmltok_impl.c"
        var $280=($279)==62; //@line 268 "xmltok_impl.c"
        if ($280) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 268 "xmltok_impl.c"
      case 84: // $bb66
        var $281=$ptr_addr; //@line 269 "xmltok_impl.c"
        var $282=$281+2; //@line 269 "xmltok_impl.c"
        var $283=$nextTokPtr_addr; //@line 269 "xmltok_impl.c"
        HEAP[$283]=$282; //@line 269 "xmltok_impl.c"
        var $284=HEAP[$tok]; //@line 270 "xmltok_impl.c"
        $3=$284; //@line 270 "xmltok_impl.c"
        __label__ = 88; break; //@line 270 "xmltok_impl.c"
      case 85: // $bb67
        var $285=$nextTokPtr_addr; //@line 274 "xmltok_impl.c"
        var $286=$ptr_addr; //@line 274 "xmltok_impl.c"
        HEAP[$285]=$286; //@line 274 "xmltok_impl.c"
        $3=0; //@line 275 "xmltok_impl.c"
        __label__ = 88; break; //@line 275 "xmltok_impl.c"
      case 86: // $bb68
        var $287=$ptr_addr; //@line 233 "xmltok_impl.c"
        var $288=$end_addr; //@line 233 "xmltok_impl.c"
        var $289=($287)!=($288); //@line 233 "xmltok_impl.c"
        if ($289) { __label__ = 25; break; } else { __label__ = 87; break; } //@line 233 "xmltok_impl.c"
      case 87: // $bb69
        $3=-1; //@line 278 "xmltok_impl.c"
        __label__ = 88; break; //@line 278 "xmltok_impl.c"
      case 88: // $bb70
        var $290=$3; //@line 226 "xmltok_impl.c"
        $retval=$290; //@line 226 "xmltok_impl.c"
        var $retval71=$retval; //@line 226 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval71; //@line 226 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_cdataSectionTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $0;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $1;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $2;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_890;
        var $iftmp_882;
        var $iftmp_880;
        var $3;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $4=$ptr_addr; //@line 305 "xmltok_impl.c"
        var $5=$end_addr; //@line 305 "xmltok_impl.c"
        var $6=($4)==($5); //@line 305 "xmltok_impl.c"
        if ($6) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 305 "xmltok_impl.c"
      case 1: // $bb
        $3=-4; //@line 306 "xmltok_impl.c"
        __label__ = 75; break; //@line 306 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$end_addr; //@line 308 "xmltok_impl.c"
        var $8=($7); //@line 308 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 308 "xmltok_impl.c"
        var $10=($9); //@line 308 "xmltok_impl.c"
        var $11=($8) - ($10); //@line 308 "xmltok_impl.c"
        $n=$11; //@line 308 "xmltok_impl.c"
        var $12=$n; //@line 309 "xmltok_impl.c"
        var $13=($12) & 1; //@line 309 "xmltok_impl.c"
        var $14=((($13)) & 255); //@line 309 "xmltok_impl.c"
        var $toBool=($14)!=0; //@line 309 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 309 "xmltok_impl.c"
      case 3: // $bb2
        var $15=$n; //@line 310 "xmltok_impl.c"
        var $16=($15) & -2; //@line 310 "xmltok_impl.c"
        $n=$16; //@line 310 "xmltok_impl.c"
        var $17=$n; //@line 311 "xmltok_impl.c"
        var $18=($17)==0; //@line 311 "xmltok_impl.c"
        if ($18) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 311 "xmltok_impl.c"
      case 4: // $bb3
        $3=-1; //@line 312 "xmltok_impl.c"
        __label__ = 75; break; //@line 312 "xmltok_impl.c"
      case 5: // $bb4
        var $19=$ptr_addr; //@line 313 "xmltok_impl.c"
        var $20=$n; //@line 313 "xmltok_impl.c"
        var $21=$19+$20; //@line 313 "xmltok_impl.c"
        $end_addr=$21; //@line 313 "xmltok_impl.c"
        __label__ = 6; break; //@line 313 "xmltok_impl.c"
      case 6: // $bb5
        var $22=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $23=$22; //@line 316 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 316 "xmltok_impl.c"
        var $25=($24)==0; //@line 316 "xmltok_impl.c"
        if ($25) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 316 "xmltok_impl.c"
      case 7: // $bb6
        var $26=$enc_addr; //@line 316 "xmltok_impl.c"
        var $27=$26; //@line 316 "xmltok_impl.c"
        var $28=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $29=$28+1; //@line 316 "xmltok_impl.c"
        var $30=HEAP[$29]; //@line 316 "xmltok_impl.c"
        var $31=($30); //@line 316 "xmltok_impl.c"
        var $32=$27+72; //@line 316 "xmltok_impl.c"
        var $33=$32+$31; //@line 316 "xmltok_impl.c"
        var $34=HEAP[$33]; //@line 316 "xmltok_impl.c"
        var $35=($34); //@line 316 "xmltok_impl.c"
        $iftmp_880=$35; //@line 316 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 316 "xmltok_impl.c"
      case 8: // $bb7
        var $36=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $37=$36+1; //@line 316 "xmltok_impl.c"
        var $38=HEAP[$37]; //@line 316 "xmltok_impl.c"
        var $39=($38); //@line 316 "xmltok_impl.c"
        var $40=$ptr_addr; //@line 316 "xmltok_impl.c"
        var $41=$40; //@line 316 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 316 "xmltok_impl.c"
        var $43=($42); //@line 316 "xmltok_impl.c"
        var $44=((($43)) & 255); //@line 316 "xmltok_impl.c"
        var $45=((($39)) & 255); //@line 316 "xmltok_impl.c"
        $hi_addr_i=$44;
        $lo_addr_i=$45;
        var $46=$hi_addr_i; //@line 518 "xmltok.c"
        var $47=($46); //@line 518 "xmltok.c"
        if ($47 == 216) {
          __label__ = 9; break;
        }
        else if ($47 == 217) {
          __label__ = 9; break;
        }
        else if ($47 == 218) {
          __label__ = 9; break;
        }
        else if ($47 == 219) {
          __label__ = 9; break;
        }
        else if ($47 == 220) {
          __label__ = 10; break;
        }
        else if ($47 == 221) {
          __label__ = 10; break;
        }
        else if ($47 == 222) {
          __label__ = 10; break;
        }
        else if ($47 == 223) {
          __label__ = 10; break;
        }
        else if ($47 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $48=$lo_addr_i; //@line 524 "xmltok.c"
        var $49=($48); //@line 524 "xmltok.c"
        var $_off_i=($49) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $50=$2; //@line 520 "xmltok.c"
        $retval_i=$50; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_880=$retval6_i; //@line 316 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 316 "xmltok_impl.c"
      case 15: // $bb8
        var $51=__lastLabel__ == 14 ? $retval6_i : ($35);
        if ($51 == 0) {
          __label__ = 50; break;
        }
        else if ($51 == 1) {
          __label__ = 50; break;
        }
        else if ($51 == 4) {
          __label__ = 16; break;
        }
        else if ($51 == 5) {
          __label__ = 41; break;
        }
        else if ($51 == 6) {
          __label__ = 44; break;
        }
        else if ($51 == 7) {
          __label__ = 47; break;
        }
        else if ($51 == 8) {
          __label__ = 50; break;
        }
        else if ($51 == 9) {
          __label__ = 26; break;
        }
        else if ($51 == 10) {
          __label__ = 40; break;
        }
        else {
        __label__ = 51; break;
        }
        
      case 16: // $bb9
        var $52=$ptr_addr; //@line 318 "xmltok_impl.c"
        var $53=$52+2; //@line 318 "xmltok_impl.c"
        $ptr_addr=$53; //@line 318 "xmltok_impl.c"
        var $54=$ptr_addr; //@line 319 "xmltok_impl.c"
        var $55=$end_addr; //@line 319 "xmltok_impl.c"
        var $56=($54)==($55); //@line 319 "xmltok_impl.c"
        if ($56) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 319 "xmltok_impl.c"
      case 17: // $bb10
        $3=-1; //@line 320 "xmltok_impl.c"
        __label__ = 75; break; //@line 320 "xmltok_impl.c"
      case 18: // $bb11
        var $57=$ptr_addr; //@line 321 "xmltok_impl.c"
        var $58=$57; //@line 321 "xmltok_impl.c"
        var $59=HEAP[$58]; //@line 321 "xmltok_impl.c"
        var $60=($59)!=0; //@line 321 "xmltok_impl.c"
        if ($60) { __label__ = 73; break; } else { __label__ = 19; break; } //@line 321 "xmltok_impl.c"
      case 19: // $bb12
        var $61=$ptr_addr; //@line 321 "xmltok_impl.c"
        var $62=$61+1; //@line 321 "xmltok_impl.c"
        var $63=HEAP[$62]; //@line 321 "xmltok_impl.c"
        var $64=($63)!=93; //@line 321 "xmltok_impl.c"
        if ($64) { __label__ = 73; break; } else { __label__ = 20; break; } //@line 321 "xmltok_impl.c"
      case 20: // $bb13
        var $65=$ptr_addr; //@line 323 "xmltok_impl.c"
        var $66=$65+2; //@line 323 "xmltok_impl.c"
        $ptr_addr=$66; //@line 323 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 324 "xmltok_impl.c"
        var $68=$end_addr; //@line 324 "xmltok_impl.c"
        var $69=($67)==($68); //@line 324 "xmltok_impl.c"
        if ($69) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 324 "xmltok_impl.c"
      case 21: // $bb14
        $3=-1; //@line 325 "xmltok_impl.c"
        __label__ = 75; break; //@line 325 "xmltok_impl.c"
      case 22: // $bb15
        var $70=$ptr_addr; //@line 326 "xmltok_impl.c"
        var $71=$70; //@line 326 "xmltok_impl.c"
        var $72=HEAP[$71]; //@line 326 "xmltok_impl.c"
        var $73=($72)!=0; //@line 326 "xmltok_impl.c"
        if ($73) { __label__ = 24; break; } else { __label__ = 23; break; } //@line 326 "xmltok_impl.c"
      case 23: // $bb16
        var $74=$ptr_addr; //@line 326 "xmltok_impl.c"
        var $75=$74+1; //@line 326 "xmltok_impl.c"
        var $76=HEAP[$75]; //@line 326 "xmltok_impl.c"
        var $77=($76)!=62; //@line 326 "xmltok_impl.c"
        if ($77) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 326 "xmltok_impl.c"
      case 24: // $bb17
        var $78=$ptr_addr; //@line 327 "xmltok_impl.c"
        var $79=$78+-2; //@line 327 "xmltok_impl.c"
        $ptr_addr=$79; //@line 327 "xmltok_impl.c"
        __label__ = 73; break; //@line 327 "xmltok_impl.c"
      case 25: // $bb18
        var $80=$ptr_addr; //@line 330 "xmltok_impl.c"
        var $81=$80+2; //@line 330 "xmltok_impl.c"
        var $82=$nextTokPtr_addr; //@line 330 "xmltok_impl.c"
        HEAP[$82]=$81; //@line 330 "xmltok_impl.c"
        $3=40; //@line 331 "xmltok_impl.c"
        __label__ = 75; break; //@line 331 "xmltok_impl.c"
      case 26: // $bb19
        var $83=$ptr_addr; //@line 333 "xmltok_impl.c"
        var $84=$83+2; //@line 333 "xmltok_impl.c"
        $ptr_addr=$84; //@line 333 "xmltok_impl.c"
        var $85=$ptr_addr; //@line 334 "xmltok_impl.c"
        var $86=$end_addr; //@line 334 "xmltok_impl.c"
        var $87=($85)==($86); //@line 334 "xmltok_impl.c"
        if ($87) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 334 "xmltok_impl.c"
      case 27: // $bb20
        $3=-1; //@line 335 "xmltok_impl.c"
        __label__ = 75; break; //@line 335 "xmltok_impl.c"
      case 28: // $bb21
        var $88=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $89=$88; //@line 336 "xmltok_impl.c"
        var $90=HEAP[$89]; //@line 336 "xmltok_impl.c"
        var $91=($90)==0; //@line 336 "xmltok_impl.c"
        if ($91) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 336 "xmltok_impl.c"
      case 29: // $bb22
        var $92=$enc_addr; //@line 336 "xmltok_impl.c"
        var $93=$92; //@line 336 "xmltok_impl.c"
        var $94=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $95=$94+1; //@line 336 "xmltok_impl.c"
        var $96=HEAP[$95]; //@line 336 "xmltok_impl.c"
        var $97=($96); //@line 336 "xmltok_impl.c"
        var $98=$93+72; //@line 336 "xmltok_impl.c"
        var $99=$98+$97; //@line 336 "xmltok_impl.c"
        var $100=HEAP[$99]; //@line 336 "xmltok_impl.c"
        var $101=($100)==10; //@line 336 "xmltok_impl.c"
        var $102=($101); //@line 336 "xmltok_impl.c"
        $iftmp_882=$102; //@line 336 "xmltok_impl.c"
        __lastLabel__ = 29; __label__ = 37; break; //@line 336 "xmltok_impl.c"
      case 30: // $bb23
        var $103=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $104=$103+1; //@line 336 "xmltok_impl.c"
        var $105=HEAP[$104]; //@line 336 "xmltok_impl.c"
        var $106=($105); //@line 336 "xmltok_impl.c"
        var $107=$ptr_addr; //@line 336 "xmltok_impl.c"
        var $108=$107; //@line 336 "xmltok_impl.c"
        var $109=HEAP[$108]; //@line 336 "xmltok_impl.c"
        var $110=($109); //@line 336 "xmltok_impl.c"
        var $111=((($110)) & 255); //@line 336 "xmltok_impl.c"
        var $112=((($106)) & 255); //@line 336 "xmltok_impl.c"
        $hi_addr_i13=$111;
        $lo_addr_i14=$112;
        var $113=$hi_addr_i13; //@line 518 "xmltok.c"
        var $114=($113); //@line 518 "xmltok.c"
        if ($114 == 216) {
          __label__ = 31; break;
        }
        else if ($114 == 217) {
          __label__ = 31; break;
        }
        else if ($114 == 218) {
          __label__ = 31; break;
        }
        else if ($114 == 219) {
          __label__ = 31; break;
        }
        else if ($114 == 220) {
          __label__ = 32; break;
        }
        else if ($114 == 221) {
          __label__ = 32; break;
        }
        else if ($114 == 222) {
          __label__ = 32; break;
        }
        else if ($114 == 223) {
          __label__ = 32; break;
        }
        else if ($114 == 255) {
          __label__ = 33; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 31: // $bb_i16
        $0=7; //@line 520 "xmltok.c"
        __label__ = 36; break; //@line 520 "xmltok.c"
      case 32: // $bb1_i17
        $0=8; //@line 522 "xmltok.c"
        __label__ = 36; break; //@line 522 "xmltok.c"
      case 33: // $bb2_i20
        var $115=$lo_addr_i14; //@line 524 "xmltok.c"
        var $116=($115); //@line 524 "xmltok.c"
        var $_off_i18=($116) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 34; break; } else { __label__ = 35; break; }
      case 34: // $bb3_i21
        $0=0; //@line 527 "xmltok.c"
        __label__ = 36; break; //@line 527 "xmltok.c"
      case 35: // $bb4_i22
        $0=29; //@line 531 "xmltok.c"
        __label__ = 36; break; //@line 531 "xmltok.c"
      case 36: // $unicode_byte_type_exit24
        var $117=$0; //@line 520 "xmltok.c"
        $retval_i15=$117; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        var $118=($retval6_i23)==10; //@line 336 "xmltok_impl.c"
        var $119=($118); //@line 336 "xmltok_impl.c"
        $iftmp_882=$119; //@line 336 "xmltok_impl.c"
        __lastLabel__ = 36; __label__ = 37; break; //@line 336 "xmltok_impl.c"
      case 37: // $bb24
        var $120=__lastLabel__ == 36 ? $119 : ($102);
        var $toBool25=($120)!=0; //@line 336 "xmltok_impl.c"
        if ($toBool25) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 336 "xmltok_impl.c"
      case 38: // $bb26
        var $121=$ptr_addr; //@line 337 "xmltok_impl.c"
        var $122=$121+2; //@line 337 "xmltok_impl.c"
        $ptr_addr=$122; //@line 337 "xmltok_impl.c"
        __label__ = 39; break; //@line 337 "xmltok_impl.c"
      case 39: // $bb27
        var $123=$nextTokPtr_addr; //@line 338 "xmltok_impl.c"
        var $124=$ptr_addr; //@line 338 "xmltok_impl.c"
        HEAP[$123]=$124; //@line 338 "xmltok_impl.c"
        $3=7; //@line 339 "xmltok_impl.c"
        __label__ = 75; break; //@line 339 "xmltok_impl.c"
      case 40: // $bb28
        var $125=$ptr_addr; //@line 341 "xmltok_impl.c"
        var $126=$125+2; //@line 341 "xmltok_impl.c"
        var $127=$nextTokPtr_addr; //@line 341 "xmltok_impl.c"
        HEAP[$127]=$126; //@line 341 "xmltok_impl.c"
        $3=7; //@line 342 "xmltok_impl.c"
        __label__ = 75; break; //@line 342 "xmltok_impl.c"
      case 41: // $bb29
        var $128=$end_addr; //@line 343 "xmltok_impl.c"
        var $129=($128); //@line 343 "xmltok_impl.c"
        var $130=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $131=($130); //@line 343 "xmltok_impl.c"
        var $132=($129) - ($131); //@line 343 "xmltok_impl.c"
        var $133=($132) <= 1; //@line 343 "xmltok_impl.c"
        if ($133) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 343 "xmltok_impl.c"
      case 42: // $bb30
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 43: // $bb31
        var $134=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $135=$134+2; //@line 343 "xmltok_impl.c"
        $ptr_addr=$135; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 44: // $bb32
        var $136=$end_addr; //@line 343 "xmltok_impl.c"
        var $137=($136); //@line 343 "xmltok_impl.c"
        var $138=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $139=($138); //@line 343 "xmltok_impl.c"
        var $140=($137) - ($139); //@line 343 "xmltok_impl.c"
        var $141=($140) <= 2; //@line 343 "xmltok_impl.c"
        if ($141) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 343 "xmltok_impl.c"
      case 45: // $bb33
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 46: // $bb34
        var $142=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $143=$142+3; //@line 343 "xmltok_impl.c"
        $ptr_addr=$143; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 47: // $bb35
        var $144=$end_addr; //@line 343 "xmltok_impl.c"
        var $145=($144); //@line 343 "xmltok_impl.c"
        var $146=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $147=($146); //@line 343 "xmltok_impl.c"
        var $148=($145) - ($147); //@line 343 "xmltok_impl.c"
        var $149=($148) <= 3; //@line 343 "xmltok_impl.c"
        if ($149) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 343 "xmltok_impl.c"
      case 48: // $bb36
        $3=-2; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 49: // $bb37
        var $150=$ptr_addr; //@line 343 "xmltok_impl.c"
        var $151=$150+4; //@line 343 "xmltok_impl.c"
        $ptr_addr=$151; //@line 343 "xmltok_impl.c"
        __label__ = 73; break; //@line 343 "xmltok_impl.c"
      case 50: // $bb38
        var $152=$nextTokPtr_addr; //@line 343 "xmltok_impl.c"
        var $153=$ptr_addr; //@line 343 "xmltok_impl.c"
        HEAP[$152]=$153; //@line 343 "xmltok_impl.c"
        $3=0; //@line 343 "xmltok_impl.c"
        __label__ = 75; break; //@line 343 "xmltok_impl.c"
      case 51: // $bb39
        var $154=$ptr_addr; //@line 345 "xmltok_impl.c"
        var $155=$154+2; //@line 345 "xmltok_impl.c"
        $ptr_addr=$155; //@line 345 "xmltok_impl.c"
        __label__ = 73; break; //@line 345 "xmltok_impl.c"
      case 52: // $bb41
        var $156=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $157=$156; //@line 349 "xmltok_impl.c"
        var $158=HEAP[$157]; //@line 349 "xmltok_impl.c"
        var $159=($158)==0; //@line 349 "xmltok_impl.c"
        if ($159) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 349 "xmltok_impl.c"
      case 53: // $bb42
        var $160=$enc_addr; //@line 349 "xmltok_impl.c"
        var $161=$160; //@line 349 "xmltok_impl.c"
        var $162=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $163=$162+1; //@line 349 "xmltok_impl.c"
        var $164=HEAP[$163]; //@line 349 "xmltok_impl.c"
        var $165=($164); //@line 349 "xmltok_impl.c"
        var $166=$161+72; //@line 349 "xmltok_impl.c"
        var $167=$166+$165; //@line 349 "xmltok_impl.c"
        var $168=HEAP[$167]; //@line 349 "xmltok_impl.c"
        var $169=($168); //@line 349 "xmltok_impl.c"
        $iftmp_890=$169; //@line 349 "xmltok_impl.c"
        __lastLabel__ = 53; __label__ = 61; break; //@line 349 "xmltok_impl.c"
      case 54: // $bb43
        var $170=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $171=$170+1; //@line 349 "xmltok_impl.c"
        var $172=HEAP[$171]; //@line 349 "xmltok_impl.c"
        var $173=($172); //@line 349 "xmltok_impl.c"
        var $174=$ptr_addr; //@line 349 "xmltok_impl.c"
        var $175=$174; //@line 349 "xmltok_impl.c"
        var $176=HEAP[$175]; //@line 349 "xmltok_impl.c"
        var $177=($176); //@line 349 "xmltok_impl.c"
        var $178=((($177)) & 255); //@line 349 "xmltok_impl.c"
        var $179=((($173)) & 255); //@line 349 "xmltok_impl.c"
        $hi_addr_i1=$178;
        $lo_addr_i2=$179;
        var $180=$hi_addr_i1; //@line 518 "xmltok.c"
        var $181=($180); //@line 518 "xmltok.c"
        if ($181 == 216) {
          __label__ = 55; break;
        }
        else if ($181 == 217) {
          __label__ = 55; break;
        }
        else if ($181 == 218) {
          __label__ = 55; break;
        }
        else if ($181 == 219) {
          __label__ = 55; break;
        }
        else if ($181 == 220) {
          __label__ = 56; break;
        }
        else if ($181 == 221) {
          __label__ = 56; break;
        }
        else if ($181 == 222) {
          __label__ = 56; break;
        }
        else if ($181 == 223) {
          __label__ = 56; break;
        }
        else if ($181 == 255) {
          __label__ = 57; break;
        }
        else {
        __label__ = 59; break;
        }
        
      case 55: // $bb_i4
        $1=7; //@line 520 "xmltok.c"
        __label__ = 60; break; //@line 520 "xmltok.c"
      case 56: // $bb1_i5
        $1=8; //@line 522 "xmltok.c"
        __label__ = 60; break; //@line 522 "xmltok.c"
      case 57: // $bb2_i8
        var $182=$lo_addr_i2; //@line 524 "xmltok.c"
        var $183=($182); //@line 524 "xmltok.c"
        var $_off_i6=($183) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 58; break; } else { __label__ = 59; break; }
      case 58: // $bb3_i9
        $1=0; //@line 527 "xmltok.c"
        __label__ = 60; break; //@line 527 "xmltok.c"
      case 59: // $bb4_i10
        $1=29; //@line 531 "xmltok.c"
        __label__ = 60; break; //@line 531 "xmltok.c"
      case 60: // $unicode_byte_type_exit12
        var $184=$1; //@line 520 "xmltok.c"
        $retval_i3=$184; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_890=$retval6_i11; //@line 349 "xmltok_impl.c"
        __lastLabel__ = 60; __label__ = 61; break; //@line 349 "xmltok_impl.c"
      case 61: // $bb44
        var $185=__lastLabel__ == 60 ? $retval6_i11 : ($169);
        if ($185 == 0) {
          __label__ = 71; break;
        }
        else if ($185 == 1) {
          __label__ = 71; break;
        }
        else if ($185 == 4) {
          __label__ = 71; break;
        }
        else if ($185 == 5) {
          __label__ = 62; break;
        }
        else if ($185 == 6) {
          __label__ = 65; break;
        }
        else if ($185 == 7) {
          __label__ = 68; break;
        }
        else if ($185 == 8) {
          __label__ = 71; break;
        }
        else if ($185 == 9) {
          __label__ = 71; break;
        }
        else if ($185 == 10) {
          __label__ = 71; break;
        }
        else {
        __label__ = 72; break;
        }
        
      case 62: // $bb45
        var $186=$end_addr; //@line 358 "xmltok_impl.c"
        var $187=($186); //@line 358 "xmltok_impl.c"
        var $188=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $189=($188); //@line 358 "xmltok_impl.c"
        var $190=($187) - ($189); //@line 358 "xmltok_impl.c"
        var $191=($190) <= 1; //@line 358 "xmltok_impl.c"
        if ($191) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 358 "xmltok_impl.c"
      case 63: // $bb46
        var $192=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $193=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$192]=$193; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 64: // $bb47
        var $194=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $195=$194+2; //@line 358 "xmltok_impl.c"
        $ptr_addr=$195; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 65: // $bb48
        var $196=$end_addr; //@line 358 "xmltok_impl.c"
        var $197=($196); //@line 358 "xmltok_impl.c"
        var $198=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $199=($198); //@line 358 "xmltok_impl.c"
        var $200=($197) - ($199); //@line 358 "xmltok_impl.c"
        var $201=($200) <= 2; //@line 358 "xmltok_impl.c"
        if ($201) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 358 "xmltok_impl.c"
      case 66: // $bb49
        var $202=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $203=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$202]=$203; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 67: // $bb50
        var $204=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $205=$204+3; //@line 358 "xmltok_impl.c"
        $ptr_addr=$205; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 68: // $bb51
        var $206=$end_addr; //@line 358 "xmltok_impl.c"
        var $207=($206); //@line 358 "xmltok_impl.c"
        var $208=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $209=($208); //@line 358 "xmltok_impl.c"
        var $210=($207) - ($209); //@line 358 "xmltok_impl.c"
        var $211=($210) <= 3; //@line 358 "xmltok_impl.c"
        if ($211) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 358 "xmltok_impl.c"
      case 69: // $bb52
        var $212=$nextTokPtr_addr; //@line 358 "xmltok_impl.c"
        var $213=$ptr_addr; //@line 358 "xmltok_impl.c"
        HEAP[$212]=$213; //@line 358 "xmltok_impl.c"
        $3=6; //@line 358 "xmltok_impl.c"
        __label__ = 75; break; //@line 358 "xmltok_impl.c"
      case 70: // $bb53
        var $214=$ptr_addr; //@line 358 "xmltok_impl.c"
        var $215=$214+4; //@line 358 "xmltok_impl.c"
        $ptr_addr=$215; //@line 358 "xmltok_impl.c"
        __label__ = 73; break; //@line 358 "xmltok_impl.c"
      case 71: // $bb54
        var $216=$nextTokPtr_addr; //@line 366 "xmltok_impl.c"
        var $217=$ptr_addr; //@line 366 "xmltok_impl.c"
        HEAP[$216]=$217; //@line 366 "xmltok_impl.c"
        $3=6; //@line 367 "xmltok_impl.c"
        __label__ = 75; break; //@line 367 "xmltok_impl.c"
      case 72: // $bb55
        var $218=$ptr_addr; //@line 369 "xmltok_impl.c"
        var $219=$218+2; //@line 369 "xmltok_impl.c"
        $ptr_addr=$219; //@line 369 "xmltok_impl.c"
        __label__ = 73; break; //@line 369 "xmltok_impl.c"
      case 73: // $bb56
        var $220=$ptr_addr; //@line 348 "xmltok_impl.c"
        var $221=$end_addr; //@line 348 "xmltok_impl.c"
        var $222=($220)!=($221); //@line 348 "xmltok_impl.c"
        if ($222) { __label__ = 52; break; } else { __label__ = 74; break; } //@line 348 "xmltok_impl.c"
      case 74: // $bb57
        var $223=$nextTokPtr_addr; //@line 373 "xmltok_impl.c"
        var $224=$ptr_addr; //@line 373 "xmltok_impl.c"
        HEAP[$223]=$224; //@line 373 "xmltok_impl.c"
        $3=6; //@line 374 "xmltok_impl.c"
        __label__ = 75; break; //@line 374 "xmltok_impl.c"
      case 75: // $bb58
        var $225=$3; //@line 306 "xmltok_impl.c"
        $retval=$225; //@line 306 "xmltok_impl.c"
        var $retval59=$retval; //@line 306 "xmltok_impl.c"
        ;
        return $retval59; //@line 306 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_scanRef($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i10_i;
        var $lo_addr_i11_i;
        var $retval_i12_i;
        var $0;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i1_i;
        var $1;
        var $hi_addr_i1_i_i;
        var $lo_addr_i2_i_i;
        var $retval_i3_i_i;
        var $2;
        var $hi_addr_i_i_i;
        var $lo_addr_i_i_i;
        var $retval_i_i_i;
        var $3;
        var $enc_addr_i_i;
        var $ptr_addr_i_i;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i_i;
        var $iftmp_918_i_i;
        var $4;
        var $iftmp_916_i_i;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i13;
        var $iftmp_922_i;
        var $iftmp_920_i;
        var $5;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $6;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $7;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_932;
        var $iftmp_924;
        var $8;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $9=$ptr_addr; //@line 496 "xmltok_impl.c"
        var $10=$end_addr; //@line 496 "xmltok_impl.c"
        var $11=($9)==($10); //@line 496 "xmltok_impl.c"
        if ($11) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 496 "xmltok_impl.c"
      case 1: // $bb
        $8=-1; //@line 497 "xmltok_impl.c"
        __label__ = 111; break; //@line 497 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $13=$12; //@line 498 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 498 "xmltok_impl.c"
        var $15=($14)==0; //@line 498 "xmltok_impl.c"
        if ($15) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 498 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$enc_addr; //@line 498 "xmltok_impl.c"
        var $17=$16; //@line 498 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $19=$18+1; //@line 498 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 498 "xmltok_impl.c"
        var $21=($20); //@line 498 "xmltok_impl.c"
        var $22=$17+72; //@line 498 "xmltok_impl.c"
        var $23=$22+$21; //@line 498 "xmltok_impl.c"
        var $24=HEAP[$23]; //@line 498 "xmltok_impl.c"
        var $25=($24); //@line 498 "xmltok_impl.c"
        $iftmp_924=$25; //@line 498 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 498 "xmltok_impl.c"
      case 4: // $bb3
        var $26=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $27=$26+1; //@line 498 "xmltok_impl.c"
        var $28=HEAP[$27]; //@line 498 "xmltok_impl.c"
        var $29=($28); //@line 498 "xmltok_impl.c"
        var $30=$ptr_addr; //@line 498 "xmltok_impl.c"
        var $31=$30; //@line 498 "xmltok_impl.c"
        var $32=HEAP[$31]; //@line 498 "xmltok_impl.c"
        var $33=($32); //@line 498 "xmltok_impl.c"
        var $34=((($33)) & 255); //@line 498 "xmltok_impl.c"
        var $35=((($29)) & 255); //@line 498 "xmltok_impl.c"
        $hi_addr_i=$34;
        $lo_addr_i=$35;
        var $36=$hi_addr_i; //@line 518 "xmltok.c"
        var $37=($36); //@line 518 "xmltok.c"
        if ($37 == 216) {
          __label__ = 5; break;
        }
        else if ($37 == 217) {
          __label__ = 5; break;
        }
        else if ($37 == 218) {
          __label__ = 5; break;
        }
        else if ($37 == 219) {
          __label__ = 5; break;
        }
        else if ($37 == 220) {
          __label__ = 6; break;
        }
        else if ($37 == 221) {
          __label__ = 6; break;
        }
        else if ($37 == 222) {
          __label__ = 6; break;
        }
        else if ($37 == 223) {
          __label__ = 6; break;
        }
        else if ($37 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $38=$lo_addr_i; //@line 524 "xmltok.c"
        var $39=($38); //@line 524 "xmltok.c"
        var $_off_i=($39) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $40=$7; //@line 520 "xmltok.c"
        $retval_i=$40; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_924=$retval6_i; //@line 498 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 498 "xmltok_impl.c"
      case 11: // $bb4
        var $41=__lastLabel__ == 10 ? $retval6_i : ($25);
        if ($41 == 5) {
          __label__ = 15; break;
        }
        else if ($41 == 6) {
          __label__ = 18; break;
        }
        else if ($41 == 7) {
          __label__ = 21; break;
        }
        else if ($41 == 19) {
          __label__ = 24; break;
        }
        else if ($41 == 22) {
          __label__ = 14; break;
        }
        else if ($41 == 24) {
          __label__ = 14; break;
        }
        else if ($41 == 29) {
          __label__ = 12; break;
        }
        else {
        __label__ = 84; break;
        }
        
      case 12: // $bb5
        var $42=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $43=$42; //@line 499 "xmltok_impl.c"
        var $44=HEAP[$43]; //@line 499 "xmltok_impl.c"
        var $45=($44); //@line 499 "xmltok_impl.c"
        var $46=_nmstrtPages+$45; //@line 499 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 499 "xmltok_impl.c"
        var $48=($47); //@line 499 "xmltok_impl.c"
        var $49=($48) * 8;
        var $50=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $51=$50+1; //@line 499 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 499 "xmltok_impl.c"
        var $53=($52) >>> 5; //@line 499 "xmltok_impl.c"
        var $54=($53); //@line 499 "xmltok_impl.c"
        var $55=($54) + ($49); //@line 499 "xmltok_impl.c"
        var $56=_namingBitmap+$55*4; //@line 499 "xmltok_impl.c"
        var $57=HEAP[$56]; //@line 499 "xmltok_impl.c"
        var $58=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $59=$58+1; //@line 499 "xmltok_impl.c"
        var $60=HEAP[$59]; //@line 499 "xmltok_impl.c"
        var $61=($60); //@line 499 "xmltok_impl.c"
        var $62=($61) & 31; //@line 499 "xmltok_impl.c"
        var $63=1 << ($62); //@line 499 "xmltok_impl.c"
        var $64=($63) & ($57); //@line 499 "xmltok_impl.c"
        var $65=($64)==0; //@line 499 "xmltok_impl.c"
        if ($65) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 499 "xmltok_impl.c"
      case 13: // $bb6
        var $66=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $67=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$66]=$67; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 14: // $bb7
        var $68=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $69=$68+2; //@line 499 "xmltok_impl.c"
        $ptr_addr=$69; //@line 499 "xmltok_impl.c"
        __label__ = 109; break; //@line 499 "xmltok_impl.c"
      case 15: // $bb8
        var $70=$end_addr; //@line 499 "xmltok_impl.c"
        var $71=($70); //@line 499 "xmltok_impl.c"
        var $72=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $73=($72); //@line 499 "xmltok_impl.c"
        var $74=($71) - ($73); //@line 499 "xmltok_impl.c"
        var $75=($74) <= 1; //@line 499 "xmltok_impl.c"
        if ($75) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 499 "xmltok_impl.c"
      case 16: // $bb9
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 17: // $bb10
        var $76=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $77=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$76]=$77; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 18: // $bb11
        var $78=$end_addr; //@line 499 "xmltok_impl.c"
        var $79=($78); //@line 499 "xmltok_impl.c"
        var $80=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $81=($80); //@line 499 "xmltok_impl.c"
        var $82=($79) - ($81); //@line 499 "xmltok_impl.c"
        var $83=($82) <= 2; //@line 499 "xmltok_impl.c"
        if ($83) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 499 "xmltok_impl.c"
      case 19: // $bb12
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 20: // $bb13
        var $84=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $85=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$84]=$85; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 21: // $bb14
        var $86=$end_addr; //@line 499 "xmltok_impl.c"
        var $87=($86); //@line 499 "xmltok_impl.c"
        var $88=$ptr_addr; //@line 499 "xmltok_impl.c"
        var $89=($88); //@line 499 "xmltok_impl.c"
        var $90=($87) - ($89); //@line 499 "xmltok_impl.c"
        var $91=($90) <= 3; //@line 499 "xmltok_impl.c"
        if ($91) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 499 "xmltok_impl.c"
      case 22: // $bb15
        $8=-2; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 23: // $bb16
        var $92=$nextTokPtr_addr; //@line 499 "xmltok_impl.c"
        var $93=$ptr_addr; //@line 499 "xmltok_impl.c"
        HEAP[$92]=$93; //@line 499 "xmltok_impl.c"
        $8=0; //@line 499 "xmltok_impl.c"
        __label__ = 111; break; //@line 499 "xmltok_impl.c"
      case 24: // $bb17
        var $94=$ptr_addr; //@line 501 "xmltok_impl.c"
        var $95=$94+2; //@line 501 "xmltok_impl.c"
        var $96=$enc_addr; //@line 501 "xmltok_impl.c"
        var $97=$end_addr; //@line 501 "xmltok_impl.c"
        var $98=$nextTokPtr_addr; //@line 501 "xmltok_impl.c"
        $enc_addr_i=$96;
        $ptr_addr_i=$95;
        $end_addr_i=$97;
        $nextTokPtr_addr_i=$98;
        var $99=$ptr_addr_i; //@line 464 "xmltok_impl.c"
        var $100=$end_addr_i; //@line 464 "xmltok_impl.c"
        var $101=($99)!=($100); //@line 464 "xmltok_impl.c"
        if ($101) { __label__ = 25; break; } else { __label__ = 82; break; } //@line 464 "xmltok_impl.c"
      case 25: // $bb_i14
        var $102=$ptr_addr_i; //@line 465 "xmltok_impl.c"
        var $103=$102; //@line 465 "xmltok_impl.c"
        var $104=HEAP[$103]; //@line 465 "xmltok_impl.c"
        var $105=($104)==0; //@line 465 "xmltok_impl.c"
        if ($105) { __label__ = 26; break; } else { __label__ = 56; break; } //@line 465 "xmltok_impl.c"
      case 26: // $bb1_i15
        var $106=$ptr_addr_i; //@line 465 "xmltok_impl.c"
        var $107=$106+1; //@line 465 "xmltok_impl.c"
        var $108=HEAP[$107]; //@line 465 "xmltok_impl.c"
        var $109=($108)==120; //@line 465 "xmltok_impl.c"
        if ($109) { __label__ = 27; break; } else { __label__ = 56; break; } //@line 465 "xmltok_impl.c"
      case 27: // $bb2_i16
        var $110=$ptr_addr_i; //@line 466 "xmltok_impl.c"
        var $111=$110+2; //@line 466 "xmltok_impl.c"
        var $112=$enc_addr_i; //@line 466 "xmltok_impl.c"
        var $113=$end_addr_i; //@line 466 "xmltok_impl.c"
        var $114=$nextTokPtr_addr_i; //@line 466 "xmltok_impl.c"
        $enc_addr_i_i=$112;
        $ptr_addr_i_i=$111;
        $end_addr_i_i=$113;
        $nextTokPtr_addr_i_i=$114;
        var $115=$ptr_addr_i_i; //@line 432 "xmltok_impl.c"
        var $116=$end_addr_i_i; //@line 432 "xmltok_impl.c"
        var $117=($115)!=($116); //@line 432 "xmltok_impl.c"
        if ($117) { __label__ = 28; break; } else { __label__ = 54; break; } //@line 432 "xmltok_impl.c"
      case 28: // $bb_i_i
        var $118=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $119=$118; //@line 433 "xmltok_impl.c"
        var $120=HEAP[$119]; //@line 433 "xmltok_impl.c"
        var $121=($120)==0; //@line 433 "xmltok_impl.c"
        if ($121) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 433 "xmltok_impl.c"
      case 29: // $bb1_i_i
        var $122=$enc_addr_i_i; //@line 433 "xmltok_impl.c"
        var $123=$122; //@line 433 "xmltok_impl.c"
        var $124=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $125=$124+1; //@line 433 "xmltok_impl.c"
        var $126=HEAP[$125]; //@line 433 "xmltok_impl.c"
        var $127=($126); //@line 433 "xmltok_impl.c"
        var $128=$123+72; //@line 433 "xmltok_impl.c"
        var $129=$128+$127; //@line 433 "xmltok_impl.c"
        var $130=HEAP[$129]; //@line 433 "xmltok_impl.c"
        var $131=($130); //@line 433 "xmltok_impl.c"
        $iftmp_916_i_i=$131; //@line 433 "xmltok_impl.c"
        __label__ = 37; break; //@line 433 "xmltok_impl.c"
      case 30: // $bb2_i_i
        var $132=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $133=$132+1; //@line 433 "xmltok_impl.c"
        var $134=HEAP[$133]; //@line 433 "xmltok_impl.c"
        var $135=($134); //@line 433 "xmltok_impl.c"
        var $136=$ptr_addr_i_i; //@line 433 "xmltok_impl.c"
        var $137=$136; //@line 433 "xmltok_impl.c"
        var $138=HEAP[$137]; //@line 433 "xmltok_impl.c"
        var $139=($138); //@line 433 "xmltok_impl.c"
        var $140=((($139)) & 255); //@line 433 "xmltok_impl.c"
        var $141=((($135)) & 255); //@line 433 "xmltok_impl.c"
        $hi_addr_i_i_i=$140;
        $lo_addr_i_i_i=$141;
        var $142=$hi_addr_i_i_i; //@line 518 "xmltok.c"
        var $143=($142); //@line 518 "xmltok.c"
        if ($143 == 216) {
          __label__ = 31; break;
        }
        else if ($143 == 217) {
          __label__ = 31; break;
        }
        else if ($143 == 218) {
          __label__ = 31; break;
        }
        else if ($143 == 219) {
          __label__ = 31; break;
        }
        else if ($143 == 220) {
          __label__ = 32; break;
        }
        else if ($143 == 221) {
          __label__ = 32; break;
        }
        else if ($143 == 222) {
          __label__ = 32; break;
        }
        else if ($143 == 223) {
          __label__ = 32; break;
        }
        else if ($143 == 255) {
          __label__ = 33; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 31: // $bb_i_i_i
        $3=7; //@line 520 "xmltok.c"
        __label__ = 36; break; //@line 520 "xmltok.c"
      case 32: // $bb1_i_i_i
        $3=8; //@line 522 "xmltok.c"
        __label__ = 36; break; //@line 522 "xmltok.c"
      case 33: // $bb2_i_i_i
        var $144=$lo_addr_i_i_i; //@line 524 "xmltok.c"
        var $145=($144); //@line 524 "xmltok.c"
        var $_off_i_i_i=($145) + -254;
        var $switch_i_i_i=($_off_i_i_i) < 2;
        if ($switch_i_i_i) { __label__ = 34; break; } else { __label__ = 35; break; }
      case 34: // $bb3_i_i_i
        $3=0; //@line 527 "xmltok.c"
        __label__ = 36; break; //@line 527 "xmltok.c"
      case 35: // $bb4_i_i_i
        $3=29; //@line 531 "xmltok.c"
        __label__ = 36; break; //@line 531 "xmltok.c"
      case 36: // $unicode_byte_type_exit_i_i
        var $146=$3; //@line 520 "xmltok.c"
        $retval_i_i_i=$146; //@line 520 "xmltok.c"
        var $retval6_i_i_i=$retval_i_i_i; //@line 520 "xmltok.c"
        $iftmp_916_i_i=$retval6_i_i_i; //@line 433 "xmltok_impl.c"
        __label__ = 37; break; //@line 433 "xmltok_impl.c"
      case 37: // $bb3_i_i
        var $147=$iftmp_916_i_i; //@line 433 "xmltok_impl.c"
        var $_off_i_i=($147) + -24;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 38; break; } else { __label__ = 39; break; }
      case 38: // $bb4_i_i
        var $148=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $149=$148+2; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$149; //@line 441 "xmltok_impl.c"
        __label__ = 53; break; //@line 441 "xmltok_impl.c"
      case 39: // $bb5_i_i
        var $150=$nextTokPtr_addr_i_i; //@line 438 "xmltok_impl.c"
        var $151=$ptr_addr_i_i; //@line 438 "xmltok_impl.c"
        HEAP[$150]=$151; //@line 438 "xmltok_impl.c"
        $4=0; //@line 439 "xmltok_impl.c"
        __label__ = 55; break; //@line 439 "xmltok_impl.c"
      case 40: // $bb6_i_i
        var $152=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $153=$152; //@line 442 "xmltok_impl.c"
        var $154=HEAP[$153]; //@line 442 "xmltok_impl.c"
        var $155=($154)==0; //@line 442 "xmltok_impl.c"
        if ($155) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 442 "xmltok_impl.c"
      case 41: // $bb7_i_i
        var $156=$enc_addr_i_i; //@line 442 "xmltok_impl.c"
        var $157=$156; //@line 442 "xmltok_impl.c"
        var $158=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $159=$158+1; //@line 442 "xmltok_impl.c"
        var $160=HEAP[$159]; //@line 442 "xmltok_impl.c"
        var $161=($160); //@line 442 "xmltok_impl.c"
        var $162=$157+72; //@line 442 "xmltok_impl.c"
        var $163=$162+$161; //@line 442 "xmltok_impl.c"
        var $164=HEAP[$163]; //@line 442 "xmltok_impl.c"
        var $165=($164); //@line 442 "xmltok_impl.c"
        $iftmp_918_i_i=$165; //@line 442 "xmltok_impl.c"
        __lastLabel__ = 41; __label__ = 49; break; //@line 442 "xmltok_impl.c"
      case 42: // $bb8_i_i
        var $166=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $167=$166+1; //@line 442 "xmltok_impl.c"
        var $168=HEAP[$167]; //@line 442 "xmltok_impl.c"
        var $169=($168); //@line 442 "xmltok_impl.c"
        var $170=$ptr_addr_i_i; //@line 442 "xmltok_impl.c"
        var $171=$170; //@line 442 "xmltok_impl.c"
        var $172=HEAP[$171]; //@line 442 "xmltok_impl.c"
        var $173=($172); //@line 442 "xmltok_impl.c"
        var $174=((($173)) & 255); //@line 442 "xmltok_impl.c"
        var $175=((($169)) & 255); //@line 442 "xmltok_impl.c"
        $hi_addr_i1_i_i=$174;
        $lo_addr_i2_i_i=$175;
        var $176=$hi_addr_i1_i_i; //@line 518 "xmltok.c"
        var $177=($176); //@line 518 "xmltok.c"
        if ($177 == 216) {
          __label__ = 43; break;
        }
        else if ($177 == 217) {
          __label__ = 43; break;
        }
        else if ($177 == 218) {
          __label__ = 43; break;
        }
        else if ($177 == 219) {
          __label__ = 43; break;
        }
        else if ($177 == 220) {
          __label__ = 44; break;
        }
        else if ($177 == 221) {
          __label__ = 44; break;
        }
        else if ($177 == 222) {
          __label__ = 44; break;
        }
        else if ($177 == 223) {
          __label__ = 44; break;
        }
        else if ($177 == 255) {
          __label__ = 45; break;
        }
        else {
        __label__ = 47; break;
        }
        
      case 43: // $bb_i4_i_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 48; break; //@line 520 "xmltok.c"
      case 44: // $bb1_i5_i_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 48; break; //@line 522 "xmltok.c"
      case 45: // $bb2_i8_i_i
        var $178=$lo_addr_i2_i_i; //@line 524 "xmltok.c"
        var $179=($178); //@line 524 "xmltok.c"
        var $_off_i6_i_i=($179) + -254;
        var $switch_i7_i_i=($_off_i6_i_i) < 2;
        if ($switch_i7_i_i) { __label__ = 46; break; } else { __label__ = 47; break; }
      case 46: // $bb3_i9_i_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 48; break; //@line 527 "xmltok.c"
      case 47: // $bb4_i10_i_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 48; break; //@line 531 "xmltok.c"
      case 48: // $unicode_byte_type_exit12_i_i
        var $180=$2; //@line 520 "xmltok.c"
        $retval_i3_i_i=$180; //@line 520 "xmltok.c"
        var $retval6_i11_i_i=$retval_i3_i_i; //@line 520 "xmltok.c"
        $iftmp_918_i_i=$retval6_i11_i_i; //@line 442 "xmltok_impl.c"
        __lastLabel__ = 48; __label__ = 49; break; //@line 442 "xmltok_impl.c"
      case 49: // $bb9_i_i
        var $181=__lastLabel__ == 48 ? $retval6_i11_i_i : ($165);
        if ($181 == 18) {
          __label__ = 51; break;
        }
        else if ($181 == 24) {
          __label__ = 50; break;
        }
        else if ($181 == 25) {
          __label__ = 50; break;
        }
        else {
        __label__ = 52; break;
        }
        
      case 50: // $bb10_i_i
        var $182=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $183=$182+2; //@line 441 "xmltok_impl.c"
        $ptr_addr_i_i=$183; //@line 441 "xmltok_impl.c"
        __label__ = 53; break; //@line 441 "xmltok_impl.c"
      case 51: // $bb11_i_i
        var $184=$ptr_addr_i_i; //@line 447 "xmltok_impl.c"
        var $185=$184+2; //@line 447 "xmltok_impl.c"
        var $186=$nextTokPtr_addr_i_i; //@line 447 "xmltok_impl.c"
        HEAP[$186]=$185; //@line 447 "xmltok_impl.c"
        $4=10; //@line 448 "xmltok_impl.c"
        __label__ = 55; break; //@line 448 "xmltok_impl.c"
      case 52: // $bb12_i_i
        var $187=$nextTokPtr_addr_i_i; //@line 450 "xmltok_impl.c"
        var $188=$ptr_addr_i_i; //@line 450 "xmltok_impl.c"
        HEAP[$187]=$188; //@line 450 "xmltok_impl.c"
        $4=0; //@line 451 "xmltok_impl.c"
        __label__ = 55; break; //@line 451 "xmltok_impl.c"
      case 53: // $bb13_i_i
        var $189=$ptr_addr_i_i; //@line 441 "xmltok_impl.c"
        var $190=$end_addr_i_i; //@line 441 "xmltok_impl.c"
        var $191=($189)!=($190); //@line 441 "xmltok_impl.c"
        if ($191) { __label__ = 40; break; } else { __label__ = 54; break; } //@line 441 "xmltok_impl.c"
      case 54: // $bb14_i_i
        $4=-1; //@line 455 "xmltok_impl.c"
        __label__ = 55; break; //@line 455 "xmltok_impl.c"
      case 55: // $big2_scanHexCharRef_exit_i
        var $192=$4; //@line 439 "xmltok_impl.c"
        $retval_i_i=$192; //@line 439 "xmltok_impl.c"
        var $retval16_i_i=$retval_i_i; //@line 439 "xmltok_impl.c"
        $5=$retval16_i_i; //@line 466 "xmltok_impl.c"
        __label__ = 83; break; //@line 466 "xmltok_impl.c"
      case 56: // $bb3_i17
        var $193=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $194=$193; //@line 467 "xmltok_impl.c"
        var $195=HEAP[$194]; //@line 467 "xmltok_impl.c"
        var $196=($195)==0; //@line 467 "xmltok_impl.c"
        if ($196) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 467 "xmltok_impl.c"
      case 57: // $bb4_i18
        var $197=$enc_addr_i; //@line 467 "xmltok_impl.c"
        var $198=$197; //@line 467 "xmltok_impl.c"
        var $199=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $200=$199+1; //@line 467 "xmltok_impl.c"
        var $201=HEAP[$200]; //@line 467 "xmltok_impl.c"
        var $202=($201); //@line 467 "xmltok_impl.c"
        var $203=$198+72; //@line 467 "xmltok_impl.c"
        var $204=$203+$202; //@line 467 "xmltok_impl.c"
        var $205=HEAP[$204]; //@line 467 "xmltok_impl.c"
        var $206=($205); //@line 467 "xmltok_impl.c"
        $iftmp_920_i=$206; //@line 467 "xmltok_impl.c"
        __lastLabel__ = 57; __label__ = 65; break; //@line 467 "xmltok_impl.c"
      case 58: // $bb5_i
        var $207=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $208=$207+1; //@line 467 "xmltok_impl.c"
        var $209=HEAP[$208]; //@line 467 "xmltok_impl.c"
        var $210=($209); //@line 467 "xmltok_impl.c"
        var $211=$ptr_addr_i; //@line 467 "xmltok_impl.c"
        var $212=$211; //@line 467 "xmltok_impl.c"
        var $213=HEAP[$212]; //@line 467 "xmltok_impl.c"
        var $214=($213); //@line 467 "xmltok_impl.c"
        var $215=((($214)) & 255); //@line 467 "xmltok_impl.c"
        var $216=((($210)) & 255); //@line 467 "xmltok_impl.c"
        $hi_addr_i10_i=$215;
        $lo_addr_i11_i=$216;
        var $217=$hi_addr_i10_i; //@line 518 "xmltok.c"
        var $218=($217); //@line 518 "xmltok.c"
        if ($218 == 216) {
          __label__ = 59; break;
        }
        else if ($218 == 217) {
          __label__ = 59; break;
        }
        else if ($218 == 218) {
          __label__ = 59; break;
        }
        else if ($218 == 219) {
          __label__ = 59; break;
        }
        else if ($218 == 220) {
          __label__ = 60; break;
        }
        else if ($218 == 221) {
          __label__ = 60; break;
        }
        else if ($218 == 222) {
          __label__ = 60; break;
        }
        else if ($218 == 223) {
          __label__ = 60; break;
        }
        else if ($218 == 255) {
          __label__ = 61; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 59: // $bb_i13_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 64; break; //@line 520 "xmltok.c"
      case 60: // $bb1_i14_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 64; break; //@line 522 "xmltok.c"
      case 61: // $bb2_i17_i
        var $219=$lo_addr_i11_i; //@line 524 "xmltok.c"
        var $220=($219); //@line 524 "xmltok.c"
        var $_off_i15_i=($220) + -254;
        var $switch_i16_i=($_off_i15_i) < 2;
        if ($switch_i16_i) { __label__ = 62; break; } else { __label__ = 63; break; }
      case 62: // $bb3_i18_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 64; break; //@line 527 "xmltok.c"
      case 63: // $bb4_i19_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 64; break; //@line 531 "xmltok.c"
      case 64: // $unicode_byte_type_exit22_i
        var $221=$0; //@line 520 "xmltok.c"
        $retval_i12_i=$221; //@line 520 "xmltok.c"
        var $retval6_i20_i=$retval_i12_i; //@line 520 "xmltok.c"
        $iftmp_920_i=$retval6_i20_i; //@line 467 "xmltok_impl.c"
        __lastLabel__ = 64; __label__ = 65; break; //@line 467 "xmltok_impl.c"
      case 65: // $bb6_i
        var $222=__lastLabel__ == 64 ? $retval6_i20_i : ($206);
        var $cond_i=($222)==25;
        if ($cond_i) { __label__ = 66; break; } else { __label__ = 67; break; }
      case 66: // $bb7_i
        var $223=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $224=$223+2; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$224; //@line 474 "xmltok_impl.c"
        __label__ = 81; break; //@line 474 "xmltok_impl.c"
      case 67: // $bb8_i
        var $225=$nextTokPtr_addr_i; //@line 471 "xmltok_impl.c"
        var $226=$ptr_addr_i; //@line 471 "xmltok_impl.c"
        HEAP[$225]=$226; //@line 471 "xmltok_impl.c"
        $5=0; //@line 472 "xmltok_impl.c"
        __label__ = 83; break; //@line 472 "xmltok_impl.c"
      case 68: // $bb9_i
        var $227=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $228=$227; //@line 475 "xmltok_impl.c"
        var $229=HEAP[$228]; //@line 475 "xmltok_impl.c"
        var $230=($229)==0; //@line 475 "xmltok_impl.c"
        if ($230) { __label__ = 69; break; } else { __label__ = 70; break; } //@line 475 "xmltok_impl.c"
      case 69: // $bb10_i
        var $231=$enc_addr_i; //@line 475 "xmltok_impl.c"
        var $232=$231; //@line 475 "xmltok_impl.c"
        var $233=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $234=$233+1; //@line 475 "xmltok_impl.c"
        var $235=HEAP[$234]; //@line 475 "xmltok_impl.c"
        var $236=($235); //@line 475 "xmltok_impl.c"
        var $237=$232+72; //@line 475 "xmltok_impl.c"
        var $238=$237+$236; //@line 475 "xmltok_impl.c"
        var $239=HEAP[$238]; //@line 475 "xmltok_impl.c"
        var $240=($239); //@line 475 "xmltok_impl.c"
        $iftmp_922_i=$240; //@line 475 "xmltok_impl.c"
        __lastLabel__ = 69; __label__ = 77; break; //@line 475 "xmltok_impl.c"
      case 70: // $bb11_i
        var $241=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $242=$241+1; //@line 475 "xmltok_impl.c"
        var $243=HEAP[$242]; //@line 475 "xmltok_impl.c"
        var $244=($243); //@line 475 "xmltok_impl.c"
        var $245=$ptr_addr_i; //@line 475 "xmltok_impl.c"
        var $246=$245; //@line 475 "xmltok_impl.c"
        var $247=HEAP[$246]; //@line 475 "xmltok_impl.c"
        var $248=($247); //@line 475 "xmltok_impl.c"
        var $249=((($248)) & 255); //@line 475 "xmltok_impl.c"
        var $250=((($244)) & 255); //@line 475 "xmltok_impl.c"
        $hi_addr_i_i=$249;
        $lo_addr_i_i=$250;
        var $251=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $252=($251); //@line 518 "xmltok.c"
        if ($252 == 216) {
          __label__ = 71; break;
        }
        else if ($252 == 217) {
          __label__ = 71; break;
        }
        else if ($252 == 218) {
          __label__ = 71; break;
        }
        else if ($252 == 219) {
          __label__ = 71; break;
        }
        else if ($252 == 220) {
          __label__ = 72; break;
        }
        else if ($252 == 221) {
          __label__ = 72; break;
        }
        else if ($252 == 222) {
          __label__ = 72; break;
        }
        else if ($252 == 223) {
          __label__ = 72; break;
        }
        else if ($252 == 255) {
          __label__ = 73; break;
        }
        else {
        __label__ = 75; break;
        }
        
      case 71: // $bb_i2_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 76; break; //@line 520 "xmltok.c"
      case 72: // $bb1_i3_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 76; break; //@line 522 "xmltok.c"
      case 73: // $bb2_i6_i
        var $253=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $254=($253); //@line 524 "xmltok.c"
        var $_off_i4_i=($254) + -254;
        var $switch_i5_i=($_off_i4_i) < 2;
        if ($switch_i5_i) { __label__ = 74; break; } else { __label__ = 75; break; }
      case 74: // $bb3_i7_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 76; break; //@line 527 "xmltok.c"
      case 75: // $bb4_i8_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 76; break; //@line 531 "xmltok.c"
      case 76: // $unicode_byte_type_exit_i
        var $255=$1; //@line 520 "xmltok.c"
        $retval_i1_i=$255; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i1_i; //@line 520 "xmltok.c"
        $iftmp_922_i=$retval6_i_i; //@line 475 "xmltok_impl.c"
        __lastLabel__ = 76; __label__ = 77; break; //@line 475 "xmltok_impl.c"
      case 77: // $bb12_i
        var $256=__lastLabel__ == 76 ? $retval6_i_i : ($240);
        if ($256 == 18) {
          __label__ = 79; break;
        }
        else if ($256 == 25) {
          __label__ = 78; break;
        }
        else {
        __label__ = 80; break;
        }
        
      case 78: // $bb13_i
        var $257=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $258=$257+2; //@line 474 "xmltok_impl.c"
        $ptr_addr_i=$258; //@line 474 "xmltok_impl.c"
        __label__ = 81; break; //@line 474 "xmltok_impl.c"
      case 79: // $bb14_i
        var $259=$ptr_addr_i; //@line 479 "xmltok_impl.c"
        var $260=$259+2; //@line 479 "xmltok_impl.c"
        var $261=$nextTokPtr_addr_i; //@line 479 "xmltok_impl.c"
        HEAP[$261]=$260; //@line 479 "xmltok_impl.c"
        $5=10; //@line 480 "xmltok_impl.c"
        __label__ = 83; break; //@line 480 "xmltok_impl.c"
      case 80: // $bb15_i
        var $262=$nextTokPtr_addr_i; //@line 482 "xmltok_impl.c"
        var $263=$ptr_addr_i; //@line 482 "xmltok_impl.c"
        HEAP[$262]=$263; //@line 482 "xmltok_impl.c"
        $5=0; //@line 483 "xmltok_impl.c"
        __label__ = 83; break; //@line 483 "xmltok_impl.c"
      case 81: // $bb16_i
        var $264=$ptr_addr_i; //@line 474 "xmltok_impl.c"
        var $265=$end_addr_i; //@line 474 "xmltok_impl.c"
        var $266=($264)!=($265); //@line 474 "xmltok_impl.c"
        if ($266) { __label__ = 68; break; } else { __label__ = 82; break; } //@line 474 "xmltok_impl.c"
      case 82: // $bb17_i
        $5=-1; //@line 487 "xmltok_impl.c"
        __label__ = 83; break; //@line 487 "xmltok_impl.c"
      case 83: // $big2_scanCharRef_exit
        var $267=$5; //@line 466 "xmltok_impl.c"
        $retval_i13=$267; //@line 466 "xmltok_impl.c"
        var $retval19_i=$retval_i13; //@line 466 "xmltok_impl.c"
        $8=$retval19_i; //@line 501 "xmltok_impl.c"
        __label__ = 111; break; //@line 501 "xmltok_impl.c"
      case 84: // $bb18
        var $268=$nextTokPtr_addr; //@line 503 "xmltok_impl.c"
        var $269=$ptr_addr; //@line 503 "xmltok_impl.c"
        HEAP[$268]=$269; //@line 503 "xmltok_impl.c"
        $8=0; //@line 504 "xmltok_impl.c"
        __label__ = 111; break; //@line 504 "xmltok_impl.c"
      case 85: // $bb19
        var $270=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $271=$270; //@line 507 "xmltok_impl.c"
        var $272=HEAP[$271]; //@line 507 "xmltok_impl.c"
        var $273=($272)==0; //@line 507 "xmltok_impl.c"
        if ($273) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 507 "xmltok_impl.c"
      case 86: // $bb20
        var $274=$enc_addr; //@line 507 "xmltok_impl.c"
        var $275=$274; //@line 507 "xmltok_impl.c"
        var $276=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $277=$276+1; //@line 507 "xmltok_impl.c"
        var $278=HEAP[$277]; //@line 507 "xmltok_impl.c"
        var $279=($278); //@line 507 "xmltok_impl.c"
        var $280=$275+72; //@line 507 "xmltok_impl.c"
        var $281=$280+$279; //@line 507 "xmltok_impl.c"
        var $282=HEAP[$281]; //@line 507 "xmltok_impl.c"
        var $283=($282); //@line 507 "xmltok_impl.c"
        $iftmp_932=$283; //@line 507 "xmltok_impl.c"
        __lastLabel__ = 86; __label__ = 94; break; //@line 507 "xmltok_impl.c"
      case 87: // $bb21
        var $284=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $285=$284+1; //@line 507 "xmltok_impl.c"
        var $286=HEAP[$285]; //@line 507 "xmltok_impl.c"
        var $287=($286); //@line 507 "xmltok_impl.c"
        var $288=$ptr_addr; //@line 507 "xmltok_impl.c"
        var $289=$288; //@line 507 "xmltok_impl.c"
        var $290=HEAP[$289]; //@line 507 "xmltok_impl.c"
        var $291=($290); //@line 507 "xmltok_impl.c"
        var $292=((($291)) & 255); //@line 507 "xmltok_impl.c"
        var $293=((($287)) & 255); //@line 507 "xmltok_impl.c"
        $hi_addr_i1=$292;
        $lo_addr_i2=$293;
        var $294=$hi_addr_i1; //@line 518 "xmltok.c"
        var $295=($294); //@line 518 "xmltok.c"
        if ($295 == 216) {
          __label__ = 88; break;
        }
        else if ($295 == 217) {
          __label__ = 88; break;
        }
        else if ($295 == 218) {
          __label__ = 88; break;
        }
        else if ($295 == 219) {
          __label__ = 88; break;
        }
        else if ($295 == 220) {
          __label__ = 89; break;
        }
        else if ($295 == 221) {
          __label__ = 89; break;
        }
        else if ($295 == 222) {
          __label__ = 89; break;
        }
        else if ($295 == 223) {
          __label__ = 89; break;
        }
        else if ($295 == 255) {
          __label__ = 90; break;
        }
        else {
        __label__ = 92; break;
        }
        
      case 88: // $bb_i4
        $6=7; //@line 520 "xmltok.c"
        __label__ = 93; break; //@line 520 "xmltok.c"
      case 89: // $bb1_i5
        $6=8; //@line 522 "xmltok.c"
        __label__ = 93; break; //@line 522 "xmltok.c"
      case 90: // $bb2_i8
        var $296=$lo_addr_i2; //@line 524 "xmltok.c"
        var $297=($296); //@line 524 "xmltok.c"
        var $_off_i6=($297) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 91; break; } else { __label__ = 92; break; }
      case 91: // $bb3_i9
        $6=0; //@line 527 "xmltok.c"
        __label__ = 93; break; //@line 527 "xmltok.c"
      case 92: // $bb4_i10
        $6=29; //@line 531 "xmltok.c"
        __label__ = 93; break; //@line 531 "xmltok.c"
      case 93: // $unicode_byte_type_exit12
        var $298=$6; //@line 520 "xmltok.c"
        $retval_i3=$298; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_932=$retval6_i11; //@line 507 "xmltok_impl.c"
        __lastLabel__ = 93; __label__ = 94; break; //@line 507 "xmltok_impl.c"
      case 94: // $bb22
        var $299=__lastLabel__ == 93 ? $retval6_i11 : ($283);
        if ($299 == 5) {
          __label__ = 98; break;
        }
        else if ($299 == 6) {
          __label__ = 101; break;
        }
        else if ($299 == 7) {
          __label__ = 104; break;
        }
        else if ($299 == 18) {
          __label__ = 107; break;
        }
        else if ($299 == 22) {
          __label__ = 97; break;
        }
        else if ($299 == 24) {
          __label__ = 97; break;
        }
        else if ($299 == 25) {
          __label__ = 97; break;
        }
        else if ($299 == 26) {
          __label__ = 97; break;
        }
        else if ($299 == 27) {
          __label__ = 97; break;
        }
        else if ($299 == 29) {
          __label__ = 95; break;
        }
        else {
        __label__ = 108; break;
        }
        
      case 95: // $bb23
        var $300=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $301=$300; //@line 508 "xmltok_impl.c"
        var $302=HEAP[$301]; //@line 508 "xmltok_impl.c"
        var $303=($302); //@line 508 "xmltok_impl.c"
        var $304=_namePages+$303; //@line 508 "xmltok_impl.c"
        var $305=HEAP[$304]; //@line 508 "xmltok_impl.c"
        var $306=($305); //@line 508 "xmltok_impl.c"
        var $307=($306) * 8;
        var $308=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $309=$308+1; //@line 508 "xmltok_impl.c"
        var $310=HEAP[$309]; //@line 508 "xmltok_impl.c"
        var $311=($310) >>> 5; //@line 508 "xmltok_impl.c"
        var $312=($311); //@line 508 "xmltok_impl.c"
        var $313=($312) + ($307); //@line 508 "xmltok_impl.c"
        var $314=_namingBitmap+$313*4; //@line 508 "xmltok_impl.c"
        var $315=HEAP[$314]; //@line 508 "xmltok_impl.c"
        var $316=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $317=$316+1; //@line 508 "xmltok_impl.c"
        var $318=HEAP[$317]; //@line 508 "xmltok_impl.c"
        var $319=($318); //@line 508 "xmltok_impl.c"
        var $320=($319) & 31; //@line 508 "xmltok_impl.c"
        var $321=1 << ($320); //@line 508 "xmltok_impl.c"
        var $322=($321) & ($315); //@line 508 "xmltok_impl.c"
        var $323=($322)==0; //@line 508 "xmltok_impl.c"
        if ($323) { __label__ = 96; break; } else { __label__ = 97; break; } //@line 508 "xmltok_impl.c"
      case 96: // $bb24
        var $324=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $325=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$324]=$325; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 97: // $bb25
        var $326=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $327=$326+2; //@line 508 "xmltok_impl.c"
        $ptr_addr=$327; //@line 508 "xmltok_impl.c"
        __label__ = 109; break; //@line 508 "xmltok_impl.c"
      case 98: // $bb26
        var $328=$end_addr; //@line 508 "xmltok_impl.c"
        var $329=($328); //@line 508 "xmltok_impl.c"
        var $330=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $331=($330); //@line 508 "xmltok_impl.c"
        var $332=($329) - ($331); //@line 508 "xmltok_impl.c"
        var $333=($332) <= 1; //@line 508 "xmltok_impl.c"
        if ($333) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 508 "xmltok_impl.c"
      case 99: // $bb27
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 100: // $bb28
        var $334=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $335=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$334]=$335; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 101: // $bb29
        var $336=$end_addr; //@line 508 "xmltok_impl.c"
        var $337=($336); //@line 508 "xmltok_impl.c"
        var $338=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $339=($338); //@line 508 "xmltok_impl.c"
        var $340=($337) - ($339); //@line 508 "xmltok_impl.c"
        var $341=($340) <= 2; //@line 508 "xmltok_impl.c"
        if ($341) { __label__ = 102; break; } else { __label__ = 103; break; } //@line 508 "xmltok_impl.c"
      case 102: // $bb30
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 103: // $bb31
        var $342=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $343=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$342]=$343; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 104: // $bb32
        var $344=$end_addr; //@line 508 "xmltok_impl.c"
        var $345=($344); //@line 508 "xmltok_impl.c"
        var $346=$ptr_addr; //@line 508 "xmltok_impl.c"
        var $347=($346); //@line 508 "xmltok_impl.c"
        var $348=($345) - ($347); //@line 508 "xmltok_impl.c"
        var $349=($348) <= 3; //@line 508 "xmltok_impl.c"
        if ($349) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 508 "xmltok_impl.c"
      case 105: // $bb33
        $8=-2; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 106: // $bb34
        var $350=$nextTokPtr_addr; //@line 508 "xmltok_impl.c"
        var $351=$ptr_addr; //@line 508 "xmltok_impl.c"
        HEAP[$350]=$351; //@line 508 "xmltok_impl.c"
        $8=0; //@line 508 "xmltok_impl.c"
        __label__ = 111; break; //@line 508 "xmltok_impl.c"
      case 107: // $bb35
        var $352=$ptr_addr; //@line 510 "xmltok_impl.c"
        var $353=$352+2; //@line 510 "xmltok_impl.c"
        var $354=$nextTokPtr_addr; //@line 510 "xmltok_impl.c"
        HEAP[$354]=$353; //@line 510 "xmltok_impl.c"
        $8=9; //@line 511 "xmltok_impl.c"
        __label__ = 111; break; //@line 511 "xmltok_impl.c"
      case 108: // $bb36
        var $355=$nextTokPtr_addr; //@line 513 "xmltok_impl.c"
        var $356=$ptr_addr; //@line 513 "xmltok_impl.c"
        HEAP[$355]=$356; //@line 513 "xmltok_impl.c"
        $8=0; //@line 514 "xmltok_impl.c"
        __label__ = 111; break; //@line 514 "xmltok_impl.c"
      case 109: // $bb37
        var $357=$ptr_addr; //@line 506 "xmltok_impl.c"
        var $358=$end_addr; //@line 506 "xmltok_impl.c"
        var $359=($357)!=($358); //@line 506 "xmltok_impl.c"
        if ($359) { __label__ = 85; break; } else { __label__ = 110; break; } //@line 506 "xmltok_impl.c"
      case 110: // $bb38
        $8=-1; //@line 517 "xmltok_impl.c"
        __label__ = 111; break; //@line 517 "xmltok_impl.c"
      case 111: // $bb39
        var $360=$8; //@line 497 "xmltok_impl.c"
        $retval=$360; //@line 497 "xmltok_impl.c"
        var $retval40=$retval; //@line 497 "xmltok_impl.c"
        ;
        return $retval40; //@line 497 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_contentTok($enc, $ptr, $end, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr_i108_i;
        var $ptr_addr_i109_i;
        var $end_addr_i110_i;
        var $nextTokPtr_addr_i111_i;
        var $retval_i112_i;
        var $0;
        var $i_i_i;
        var $hi_addr_i13_i_i;
        var $lo_addr_i14_i_i;
        var $retval_i15_i_i;
        var $1;
        var $hi_addr_i1_i_i;
        var $lo_addr_i2_i_i;
        var $retval_i3_i_i;
        var $2;
        var $hi_addr_i_i46_i;
        var $lo_addr_i_i47_i;
        var $retval_i_i48_i;
        var $3;
        var $enc_addr_i49_i;
        var $ptr_addr_i50_i;
        var $end_addr_i51_i;
        var $nextTokPtr_addr_i52_i;
        var $retval_i53_i;
        var $iftmp_914_i_i;
        var $iftmp_906_i_i;
        var $iftmp_898_i_i;
        var $4;
        var $hi_addr_i33_i;
        var $lo_addr_i34_i;
        var $retval_i35_i;
        var $5;
        var $hi_addr_i20_i;
        var $lo_addr_i21_i;
        var $retval_i22_i;
        var $6;
        var $hi_addr_i7_i;
        var $lo_addr_i8_i;
        var $retval_i9_i;
        var $7;
        var $hi_addr_i50_i_i;
        var $lo_addr_i51_i_i;
        var $retval_i52_i_i;
        var $8;
        var $hi_addr_i38_i_i;
        var $lo_addr_i39_i_i;
        var $retval_i40_i_i;
        var $9;
        var $hi_addr_i26_i_i;
        var $lo_addr_i27_i_i;
        var $retval_i28_i_i;
        var $10;
        var $hi_addr_i14_i_i;
        var $lo_addr_i15_i_i;
        var $retval_i16_i_i;
        var $11;
        var $hi_addr_i2_i_i;
        var $lo_addr_i3_i_i;
        var $retval_i4_i_i;
        var $12;
        var $hi_addr_i_i_i;
        var $lo_addr_i_i_i;
        var $retval_i_i_i;
        var $13;
        var $enc_addr_i_i;
        var $ptr_addr_i_i=__stackBase__;
        var $end_addr_i_i;
        var $nextTokPtr_addr_i_i;
        var $retval_i1_i;
        var $iftmp_1023_i_i;
        var $iftmp_1014_i_i;
        var $iftmp_986_i_i;
        var $iftmp_977_i_i;
        var $iftmp_968_i_i;
        var $14;
        var $iftmp_940_i_i;
        var $t_i_i;
        var $open_i_i;
        var $t37_i_i;
        var $tok_i_i;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i_i;
        var $15;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i25;
        var $iftmp_1077_i;
        var $iftmp_1069_i;
        var $iftmp_1067_i;
        var $iftmp_1059_i;
        var $16;
        var $hi_addr_i13;
        var $lo_addr_i14;
        var $retval_i15;
        var $17;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $18;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $19;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1098;
        var $iftmp_1090;
        var $iftmp_1088;
        var $20;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $21=$ptr_addr; //@line 785 "xmltok_impl.c"
        var $22=$end_addr; //@line 785 "xmltok_impl.c"
        var $23=($21)==($22); //@line 785 "xmltok_impl.c"
        if ($23) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 785 "xmltok_impl.c"
      case 1: // $bb
        $20=-4; //@line 786 "xmltok_impl.c"
        __label__ = 392; break; //@line 786 "xmltok_impl.c"
      case 2: // $bb1
        var $24=$end_addr; //@line 788 "xmltok_impl.c"
        var $25=($24); //@line 788 "xmltok_impl.c"
        var $26=$ptr_addr; //@line 788 "xmltok_impl.c"
        var $27=($26); //@line 788 "xmltok_impl.c"
        var $28=($25) - ($27); //@line 788 "xmltok_impl.c"
        $n=$28; //@line 788 "xmltok_impl.c"
        var $29=$n; //@line 789 "xmltok_impl.c"
        var $30=($29) & 1; //@line 789 "xmltok_impl.c"
        var $31=((($30)) & 255); //@line 789 "xmltok_impl.c"
        var $toBool=($31)!=0; //@line 789 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 789 "xmltok_impl.c"
      case 3: // $bb2
        var $32=$n; //@line 790 "xmltok_impl.c"
        var $33=($32) & -2; //@line 790 "xmltok_impl.c"
        $n=$33; //@line 790 "xmltok_impl.c"
        var $34=$n; //@line 791 "xmltok_impl.c"
        var $35=($34)==0; //@line 791 "xmltok_impl.c"
        if ($35) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 791 "xmltok_impl.c"
      case 4: // $bb3
        $20=-1; //@line 792 "xmltok_impl.c"
        __label__ = 392; break; //@line 792 "xmltok_impl.c"
      case 5: // $bb4
        var $36=$ptr_addr; //@line 793 "xmltok_impl.c"
        var $37=$n; //@line 793 "xmltok_impl.c"
        var $38=$36+$37; //@line 793 "xmltok_impl.c"
        $end_addr=$38; //@line 793 "xmltok_impl.c"
        __label__ = 6; break; //@line 793 "xmltok_impl.c"
      case 6: // $bb5
        var $39=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $40=$39; //@line 796 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 796 "xmltok_impl.c"
        var $42=($41)==0; //@line 796 "xmltok_impl.c"
        if ($42) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 796 "xmltok_impl.c"
      case 7: // $bb6
        var $43=$enc_addr; //@line 796 "xmltok_impl.c"
        var $44=$43; //@line 796 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $46=$45+1; //@line 796 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 796 "xmltok_impl.c"
        var $48=($47); //@line 796 "xmltok_impl.c"
        var $49=$44+72; //@line 796 "xmltok_impl.c"
        var $50=$49+$48; //@line 796 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 796 "xmltok_impl.c"
        var $52=($51); //@line 796 "xmltok_impl.c"
        $iftmp_1088=$52; //@line 796 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 796 "xmltok_impl.c"
      case 8: // $bb7
        var $53=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $54=$53+1; //@line 796 "xmltok_impl.c"
        var $55=HEAP[$54]; //@line 796 "xmltok_impl.c"
        var $56=($55); //@line 796 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 796 "xmltok_impl.c"
        var $58=$57; //@line 796 "xmltok_impl.c"
        var $59=HEAP[$58]; //@line 796 "xmltok_impl.c"
        var $60=($59); //@line 796 "xmltok_impl.c"
        var $61=((($60)) & 255); //@line 796 "xmltok_impl.c"
        var $62=((($56)) & 255); //@line 796 "xmltok_impl.c"
        $hi_addr_i=$61;
        $lo_addr_i=$62;
        var $63=$hi_addr_i; //@line 518 "xmltok.c"
        var $64=($63); //@line 518 "xmltok.c"
        if ($64 == 216) {
          __label__ = 9; break;
        }
        else if ($64 == 217) {
          __label__ = 9; break;
        }
        else if ($64 == 218) {
          __label__ = 9; break;
        }
        else if ($64 == 219) {
          __label__ = 9; break;
        }
        else if ($64 == 220) {
          __label__ = 10; break;
        }
        else if ($64 == 221) {
          __label__ = 10; break;
        }
        else if ($64 == 222) {
          __label__ = 10; break;
        }
        else if ($64 == 223) {
          __label__ = 10; break;
        }
        else if ($64 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $19=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $19=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $65=$lo_addr_i; //@line 524 "xmltok.c"
        var $66=($65); //@line 524 "xmltok.c"
        var $_off_i=($66) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $19=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $19=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $67=$19; //@line 520 "xmltok.c"
        $retval_i=$67; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1088=$retval6_i; //@line 796 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 796 "xmltok_impl.c"
      case 15: // $bb8
        var $68=__lastLabel__ == 14 ? $retval6_i : ($52);
        if ($68 == 0) {
          __label__ = 358; break;
        }
        else if ($68 == 1) {
          __label__ = 358; break;
        }
        else if ($68 == 2) {
          __label__ = 16; break;
        }
        else if ($68 == 3) {
          __label__ = 323; break;
        }
        else if ($68 == 4) {
          __label__ = 339; break;
        }
        else if ($68 == 5) {
          __label__ = 349; break;
        }
        else if ($68 == 6) {
          __label__ = 352; break;
        }
        else if ($68 == 7) {
          __label__ = 355; break;
        }
        else if ($68 == 8) {
          __label__ = 358; break;
        }
        else if ($68 == 9) {
          __label__ = 324; break;
        }
        else if ($68 == 10) {
          __label__ = 338; break;
        }
        else {
        __label__ = 359; break;
        }
        
      case 16: // $bb9
        var $69=$ptr_addr; //@line 798 "xmltok_impl.c"
        var $70=$69+2; //@line 798 "xmltok_impl.c"
        var $71=$enc_addr; //@line 798 "xmltok_impl.c"
        var $72=$end_addr; //@line 798 "xmltok_impl.c"
        var $73=$nextTokPtr_addr; //@line 798 "xmltok_impl.c"
        $enc_addr_i=$71;
        $ptr_addr_i=$70;
        $end_addr_i=$72;
        $nextTokPtr_addr_i=$73;
        var $74=$ptr_addr_i; //@line 688 "xmltok_impl.c"
        var $75=$end_addr_i; //@line 688 "xmltok_impl.c"
        var $76=($74)==($75); //@line 688 "xmltok_impl.c"
        if ($76) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 688 "xmltok_impl.c"
      case 17: // $bb_i26
        $16=-1; //@line 689 "xmltok_impl.c"
        __label__ = 322; break; //@line 689 "xmltok_impl.c"
      case 18: // $bb1_i27
        var $77=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $78=$77; //@line 690 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 690 "xmltok_impl.c"
        var $80=($79)==0; //@line 690 "xmltok_impl.c"
        if ($80) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 690 "xmltok_impl.c"
      case 19: // $bb2_i28
        var $81=$enc_addr_i; //@line 690 "xmltok_impl.c"
        var $82=$81; //@line 690 "xmltok_impl.c"
        var $83=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $84=$83+1; //@line 690 "xmltok_impl.c"
        var $85=HEAP[$84]; //@line 690 "xmltok_impl.c"
        var $86=($85); //@line 690 "xmltok_impl.c"
        var $87=$82+72; //@line 690 "xmltok_impl.c"
        var $88=$87+$86; //@line 690 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 690 "xmltok_impl.c"
        var $90=($89); //@line 690 "xmltok_impl.c"
        $iftmp_1059_i=$90; //@line 690 "xmltok_impl.c"
        __lastLabel__ = 19; __label__ = 27; break; //@line 690 "xmltok_impl.c"
      case 20: // $bb3_i29
        var $91=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $92=$91+1; //@line 690 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 690 "xmltok_impl.c"
        var $94=($93); //@line 690 "xmltok_impl.c"
        var $95=$ptr_addr_i; //@line 690 "xmltok_impl.c"
        var $96=$95; //@line 690 "xmltok_impl.c"
        var $97=HEAP[$96]; //@line 690 "xmltok_impl.c"
        var $98=($97); //@line 690 "xmltok_impl.c"
        var $99=((($98)) & 255); //@line 690 "xmltok_impl.c"
        var $100=((($94)) & 255); //@line 690 "xmltok_impl.c"
        $hi_addr_i_i=$99;
        $lo_addr_i_i=$100;
        var $101=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $102=($101); //@line 518 "xmltok.c"
        if ($102 == 216) {
          __label__ = 21; break;
        }
        else if ($102 == 217) {
          __label__ = 21; break;
        }
        else if ($102 == 218) {
          __label__ = 21; break;
        }
        else if ($102 == 219) {
          __label__ = 21; break;
        }
        else if ($102 == 220) {
          __label__ = 22; break;
        }
        else if ($102 == 221) {
          __label__ = 22; break;
        }
        else if ($102 == 222) {
          __label__ = 22; break;
        }
        else if ($102 == 223) {
          __label__ = 22; break;
        }
        else if ($102 == 255) {
          __label__ = 23; break;
        }
        else {
        __label__ = 25; break;
        }
        
      case 21: // $bb_i_i
        $15=7; //@line 520 "xmltok.c"
        __label__ = 26; break; //@line 520 "xmltok.c"
      case 22: // $bb1_i_i
        $15=8; //@line 522 "xmltok.c"
        __label__ = 26; break; //@line 522 "xmltok.c"
      case 23: // $bb2_i_i
        var $103=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $104=($103); //@line 524 "xmltok.c"
        var $_off_i_i=($104) + -254;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 24; break; } else { __label__ = 25; break; }
      case 24: // $bb3_i_i
        $15=0; //@line 527 "xmltok.c"
        __label__ = 26; break; //@line 527 "xmltok.c"
      case 25: // $bb4_i_i
        $15=29; //@line 531 "xmltok.c"
        __label__ = 26; break; //@line 531 "xmltok.c"
      case 26: // $unicode_byte_type_exit_i
        var $105=$15; //@line 520 "xmltok.c"
        $retval_i_i=$105; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i_i; //@line 520 "xmltok.c"
        $iftmp_1059_i=$retval6_i_i; //@line 690 "xmltok_impl.c"
        __lastLabel__ = 26; __label__ = 27; break; //@line 690 "xmltok_impl.c"
      case 27: // $bb4_i30
        var $106=__lastLabel__ == 26 ? $retval6_i_i : ($90);
        if ($106 == 5) {
          __label__ = 31; break;
        }
        else if ($106 == 6) {
          __label__ = 34; break;
        }
        else if ($106 == 7) {
          __label__ = 37; break;
        }
        else if ($106 == 15) {
          __label__ = 64; break;
        }
        else if ($106 == 16) {
          __label__ = 40; break;
        }
        else if ($106 == 17) {
          __label__ = 65; break;
        }
        else if ($106 == 22) {
          __label__ = 30; break;
        }
        else if ($106 == 24) {
          __label__ = 30; break;
        }
        else if ($106 == 29) {
          __label__ = 28; break;
        }
        else {
        __label__ = 133; break;
        }
        
      case 28: // $bb5_i
        var $107=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $108=$107; //@line 691 "xmltok_impl.c"
        var $109=HEAP[$108]; //@line 691 "xmltok_impl.c"
        var $110=($109); //@line 691 "xmltok_impl.c"
        var $111=_nmstrtPages+$110; //@line 691 "xmltok_impl.c"
        var $112=HEAP[$111]; //@line 691 "xmltok_impl.c"
        var $113=($112); //@line 691 "xmltok_impl.c"
        var $114=($113) * 8;
        var $115=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $116=$115+1; //@line 691 "xmltok_impl.c"
        var $117=HEAP[$116]; //@line 691 "xmltok_impl.c"
        var $118=($117) >>> 5; //@line 691 "xmltok_impl.c"
        var $119=($118); //@line 691 "xmltok_impl.c"
        var $120=($119) + ($114); //@line 691 "xmltok_impl.c"
        var $121=_namingBitmap+$120*4; //@line 691 "xmltok_impl.c"
        var $122=HEAP[$121]; //@line 691 "xmltok_impl.c"
        var $123=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $124=$123+1; //@line 691 "xmltok_impl.c"
        var $125=HEAP[$124]; //@line 691 "xmltok_impl.c"
        var $126=($125); //@line 691 "xmltok_impl.c"
        var $127=($126) & 31; //@line 691 "xmltok_impl.c"
        var $128=1 << ($127); //@line 691 "xmltok_impl.c"
        var $129=($128) & ($122); //@line 691 "xmltok_impl.c"
        var $130=($129)==0; //@line 691 "xmltok_impl.c"
        if ($130) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 691 "xmltok_impl.c"
      case 29: // $bb6_i
        var $131=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $132=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$131]=$132; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 30: // $bb7_i
        var $133=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $134=$133+2; //@line 691 "xmltok_impl.c"
        $ptr_addr_i=$134; //@line 691 "xmltok_impl.c"
        __label__ = 320; break; //@line 691 "xmltok_impl.c"
      case 31: // $bb8_i
        var $135=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $136=($135); //@line 691 "xmltok_impl.c"
        var $137=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $138=($137); //@line 691 "xmltok_impl.c"
        var $139=($136) - ($138); //@line 691 "xmltok_impl.c"
        var $140=($139) <= 1; //@line 691 "xmltok_impl.c"
        if ($140) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 691 "xmltok_impl.c"
      case 32: // $bb9_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 33: // $bb10_i
        var $141=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $142=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$141]=$142; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 34: // $bb11_i
        var $143=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $144=($143); //@line 691 "xmltok_impl.c"
        var $145=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $146=($145); //@line 691 "xmltok_impl.c"
        var $147=($144) - ($146); //@line 691 "xmltok_impl.c"
        var $148=($147) <= 2; //@line 691 "xmltok_impl.c"
        if ($148) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 691 "xmltok_impl.c"
      case 35: // $bb12_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 36: // $bb13_i
        var $149=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $150=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$149]=$150; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 37: // $bb14_i
        var $151=$end_addr_i; //@line 691 "xmltok_impl.c"
        var $152=($151); //@line 691 "xmltok_impl.c"
        var $153=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        var $154=($153); //@line 691 "xmltok_impl.c"
        var $155=($152) - ($154); //@line 691 "xmltok_impl.c"
        var $156=($155) <= 3; //@line 691 "xmltok_impl.c"
        if ($156) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 691 "xmltok_impl.c"
      case 38: // $bb15_i
        $16=-2; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 39: // $bb16_i
        var $157=$nextTokPtr_addr_i; //@line 691 "xmltok_impl.c"
        var $158=$ptr_addr_i; //@line 691 "xmltok_impl.c"
        HEAP[$157]=$158; //@line 691 "xmltok_impl.c"
        $16=0; //@line 691 "xmltok_impl.c"
        __label__ = 322; break; //@line 691 "xmltok_impl.c"
      case 40: // $bb17_i
        var $159=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $160=$159+2; //@line 693 "xmltok_impl.c"
        $ptr_addr_i=$160; //@line 693 "xmltok_impl.c"
        var $161=$ptr_addr_i; //@line 693 "xmltok_impl.c"
        var $162=$end_addr_i; //@line 693 "xmltok_impl.c"
        var $163=($161)==($162); //@line 693 "xmltok_impl.c"
        if ($163) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 693 "xmltok_impl.c"
      case 41: // $bb18_i
        $16=-1; //@line 694 "xmltok_impl.c"
        __label__ = 322; break; //@line 694 "xmltok_impl.c"
      case 42: // $bb19_i
        var $164=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $165=$164; //@line 695 "xmltok_impl.c"
        var $166=HEAP[$165]; //@line 695 "xmltok_impl.c"
        var $167=($166)==0; //@line 695 "xmltok_impl.c"
        if ($167) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 695 "xmltok_impl.c"
      case 43: // $bb20_i
        var $168=$enc_addr_i; //@line 695 "xmltok_impl.c"
        var $169=$168; //@line 695 "xmltok_impl.c"
        var $170=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $171=$170+1; //@line 695 "xmltok_impl.c"
        var $172=HEAP[$171]; //@line 695 "xmltok_impl.c"
        var $173=($172); //@line 695 "xmltok_impl.c"
        var $174=$169+72; //@line 695 "xmltok_impl.c"
        var $175=$174+$173; //@line 695 "xmltok_impl.c"
        var $176=HEAP[$175]; //@line 695 "xmltok_impl.c"
        var $177=($176); //@line 695 "xmltok_impl.c"
        $iftmp_1067_i=$177; //@line 695 "xmltok_impl.c"
        __lastLabel__ = 43; __label__ = 51; break; //@line 695 "xmltok_impl.c"
      case 44: // $bb21_i
        var $178=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $179=$178+1; //@line 695 "xmltok_impl.c"
        var $180=HEAP[$179]; //@line 695 "xmltok_impl.c"
        var $181=($180); //@line 695 "xmltok_impl.c"
        var $182=$ptr_addr_i; //@line 695 "xmltok_impl.c"
        var $183=$182; //@line 695 "xmltok_impl.c"
        var $184=HEAP[$183]; //@line 695 "xmltok_impl.c"
        var $185=($184); //@line 695 "xmltok_impl.c"
        var $186=((($185)) & 255); //@line 695 "xmltok_impl.c"
        var $187=((($181)) & 255); //@line 695 "xmltok_impl.c"
        $hi_addr_i7_i=$186;
        $lo_addr_i8_i=$187;
        var $188=$hi_addr_i7_i; //@line 518 "xmltok.c"
        var $189=($188); //@line 518 "xmltok.c"
        if ($189 == 216) {
          __label__ = 45; break;
        }
        else if ($189 == 217) {
          __label__ = 45; break;
        }
        else if ($189 == 218) {
          __label__ = 45; break;
        }
        else if ($189 == 219) {
          __label__ = 45; break;
        }
        else if ($189 == 220) {
          __label__ = 46; break;
        }
        else if ($189 == 221) {
          __label__ = 46; break;
        }
        else if ($189 == 222) {
          __label__ = 46; break;
        }
        else if ($189 == 223) {
          __label__ = 46; break;
        }
        else if ($189 == 255) {
          __label__ = 47; break;
        }
        else {
        __label__ = 49; break;
        }
        
      case 45: // $bb_i10_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 50; break; //@line 520 "xmltok.c"
      case 46: // $bb1_i11_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 50; break; //@line 522 "xmltok.c"
      case 47: // $bb2_i14_i
        var $190=$lo_addr_i8_i; //@line 524 "xmltok.c"
        var $191=($190); //@line 524 "xmltok.c"
        var $_off_i12_i=($191) + -254;
        var $switch_i13_i=($_off_i12_i) < 2;
        if ($switch_i13_i) { __label__ = 48; break; } else { __label__ = 49; break; }
      case 48: // $bb3_i15_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 50; break; //@line 527 "xmltok.c"
      case 49: // $bb4_i16_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 50; break; //@line 531 "xmltok.c"
      case 50: // $unicode_byte_type_exit19_i
        var $192=$7; //@line 520 "xmltok.c"
        $retval_i9_i=$192; //@line 520 "xmltok.c"
        var $retval6_i17_i=$retval_i9_i; //@line 520 "xmltok.c"
        $iftmp_1067_i=$retval6_i17_i; //@line 695 "xmltok_impl.c"
        __lastLabel__ = 50; __label__ = 51; break; //@line 695 "xmltok_impl.c"
      case 51: // $bb22_i
        var $193=__lastLabel__ == 50 ? $retval6_i17_i : ($177);
        if ($193 == 20) {
          __label__ = 53; break;
        }
        else if ($193 == 27) {
          __label__ = 52; break;
        }
        else {
        __label__ = 63; break;
        }
        
      case 52: // $bb23_i
        var $194=$ptr_addr_i; //@line 697 "xmltok_impl.c"
        var $195=$194+2; //@line 697 "xmltok_impl.c"
        var $196=$enc_addr_i; //@line 697 "xmltok_impl.c"
        var $197=$end_addr_i; //@line 697 "xmltok_impl.c"
        var $198=$nextTokPtr_addr_i; //@line 697 "xmltok_impl.c"
        var $199=_big2_scanComment($196, $195, $197, $198); //@line 697 "xmltok_impl.c"
        $16=$199; //@line 697 "xmltok_impl.c"
        __label__ = 322; break; //@line 697 "xmltok_impl.c"
      case 53: // $bb24_i
        var $200=$ptr_addr_i; //@line 699 "xmltok_impl.c"
        var $201=$200+2; //@line 699 "xmltok_impl.c"
        var $202=$enc_addr_i; //@line 699 "xmltok_impl.c"
        var $203=$end_addr_i; //@line 699 "xmltok_impl.c"
        var $204=$nextTokPtr_addr_i; //@line 699 "xmltok_impl.c"
        $enc_addr_i108_i=$202;
        $ptr_addr_i109_i=$201;
        $end_addr_i110_i=$203;
        $nextTokPtr_addr_i111_i=$204;
        var $205=$end_addr_i110_i; //@line 289 "xmltok_impl.c"
        var $206=($205); //@line 289 "xmltok_impl.c"
        var $207=$ptr_addr_i109_i; //@line 289 "xmltok_impl.c"
        var $208=($207); //@line 289 "xmltok_impl.c"
        var $209=($206) - ($208); //@line 289 "xmltok_impl.c"
        var $210=($209) <= 11; //@line 289 "xmltok_impl.c"
        if ($210) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 289 "xmltok_impl.c"
      case 54: // $bb_i113_i
        $0=-1; //@line 290 "xmltok_impl.c"
        __label__ = 62; break; //@line 290 "xmltok_impl.c"
      case 55: // $bb1_i114_i
        $i_i_i=0; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 55; __label__ = 60; break; //@line 291 "xmltok_impl.c"
      case 56: // $bb2_i115_i
        var $211=$ptr_addr_i109_i; //@line 292 "xmltok_impl.c"
        var $212=$211; //@line 292 "xmltok_impl.c"
        var $213=HEAP[$212]; //@line 292 "xmltok_impl.c"
        var $214=($213)!=0; //@line 292 "xmltok_impl.c"
        if ($214) { __label__ = 58; break; } else { __label__ = 57; break; } //@line 292 "xmltok_impl.c"
      case 57: // $bb3_i116_i
        var $215=$ptr_addr_i109_i; //@line 292 "xmltok_impl.c"
        var $216=$215+1; //@line 292 "xmltok_impl.c"
        var $217=HEAP[$216]; //@line 292 "xmltok_impl.c"
        var $218=$i_i_i; //@line 292 "xmltok_impl.c"
        var $219=_CDATA_LSQB_8477+$218; //@line 292 "xmltok_impl.c"
        var $220=HEAP[$219]; //@line 292 "xmltok_impl.c"
        var $221=($217)!=($220); //@line 292 "xmltok_impl.c"
        if ($221) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 292 "xmltok_impl.c"
      case 58: // $bb4_i117_i
        var $222=$nextTokPtr_addr_i111_i; //@line 293 "xmltok_impl.c"
        var $223=$ptr_addr_i109_i; //@line 293 "xmltok_impl.c"
        HEAP[$222]=$223; //@line 293 "xmltok_impl.c"
        $0=0; //@line 294 "xmltok_impl.c"
        __label__ = 62; break; //@line 294 "xmltok_impl.c"
      case 59: // $bb5_i118_i
        var $224=$i_i_i; //@line 291 "xmltok_impl.c"
        var $225=($224) + 1; //@line 291 "xmltok_impl.c"
        $i_i_i=$225; //@line 291 "xmltok_impl.c"
        var $226=$ptr_addr_i109_i; //@line 291 "xmltok_impl.c"
        var $227=$226+2; //@line 291 "xmltok_impl.c"
        $ptr_addr_i109_i=$227; //@line 291 "xmltok_impl.c"
        __lastLabel__ = 59; __label__ = 60; break; //@line 291 "xmltok_impl.c"
      case 60: // $bb6_i119_i
        var $228=__lastLabel__ == 59 ? $225 : (0);
        var $229=($228) <= 5; //@line 291 "xmltok_impl.c"
        if ($229) { __label__ = 56; break; } else { __label__ = 61; break; } //@line 291 "xmltok_impl.c"
      case 61: // $bb7_i120_i
        var $230=$nextTokPtr_addr_i111_i; //@line 297 "xmltok_impl.c"
        var $231=$ptr_addr_i109_i; //@line 297 "xmltok_impl.c"
        HEAP[$230]=$231; //@line 297 "xmltok_impl.c"
        $0=8; //@line 298 "xmltok_impl.c"
        __label__ = 62; break; //@line 298 "xmltok_impl.c"
      case 62: // $big2_scanCdataSection_exit_i
        var $232=$0; //@line 290 "xmltok_impl.c"
        $retval_i112_i=$232; //@line 290 "xmltok_impl.c"
        var $retval9_i_i=$retval_i112_i; //@line 290 "xmltok_impl.c"
        $16=$retval9_i_i; //@line 699 "xmltok_impl.c"
        __label__ = 322; break; //@line 699 "xmltok_impl.c"
      case 63: // $bb25_i
        var $233=$nextTokPtr_addr_i; //@line 702 "xmltok_impl.c"
        var $234=$ptr_addr_i; //@line 702 "xmltok_impl.c"
        HEAP[$233]=$234; //@line 702 "xmltok_impl.c"
        $16=0; //@line 703 "xmltok_impl.c"
        __label__ = 322; break; //@line 703 "xmltok_impl.c"
      case 64: // $bb26_i
        var $235=$ptr_addr_i; //@line 705 "xmltok_impl.c"
        var $236=$235+2; //@line 705 "xmltok_impl.c"
        var $237=$enc_addr_i; //@line 705 "xmltok_impl.c"
        var $238=$end_addr_i; //@line 705 "xmltok_impl.c"
        var $239=$nextTokPtr_addr_i; //@line 705 "xmltok_impl.c"
        var $240=_big2_scanPi($237, $236, $238, $239); //@line 705 "xmltok_impl.c"
        $16=$240; //@line 705 "xmltok_impl.c"
        __label__ = 322; break; //@line 705 "xmltok_impl.c"
      case 65: // $bb27_i
        var $241=$ptr_addr_i; //@line 707 "xmltok_impl.c"
        var $242=$241+2; //@line 707 "xmltok_impl.c"
        var $243=$enc_addr_i; //@line 707 "xmltok_impl.c"
        var $244=$end_addr_i; //@line 707 "xmltok_impl.c"
        var $245=$nextTokPtr_addr_i; //@line 707 "xmltok_impl.c"
        $enc_addr_i49_i=$243;
        $ptr_addr_i50_i=$242;
        $end_addr_i51_i=$244;
        $nextTokPtr_addr_i52_i=$245;
        var $246=$ptr_addr_i50_i; //@line 383 "xmltok_impl.c"
        var $247=$end_addr_i51_i; //@line 383 "xmltok_impl.c"
        var $248=($246)==($247); //@line 383 "xmltok_impl.c"
        if ($248) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 383 "xmltok_impl.c"
      case 66: // $bb_i54_i
        $4=-1; //@line 384 "xmltok_impl.c"
        __label__ = 132; break; //@line 384 "xmltok_impl.c"
      case 67: // $bb1_i55_i
        var $249=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $250=$249; //@line 385 "xmltok_impl.c"
        var $251=HEAP[$250]; //@line 385 "xmltok_impl.c"
        var $252=($251)==0; //@line 385 "xmltok_impl.c"
        if ($252) { __label__ = 68; break; } else { __label__ = 69; break; } //@line 385 "xmltok_impl.c"
      case 68: // $bb2_i56_i
        var $253=$enc_addr_i49_i; //@line 385 "xmltok_impl.c"
        var $254=$253; //@line 385 "xmltok_impl.c"
        var $255=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $256=$255+1; //@line 385 "xmltok_impl.c"
        var $257=HEAP[$256]; //@line 385 "xmltok_impl.c"
        var $258=($257); //@line 385 "xmltok_impl.c"
        var $259=$254+72; //@line 385 "xmltok_impl.c"
        var $260=$259+$258; //@line 385 "xmltok_impl.c"
        var $261=HEAP[$260]; //@line 385 "xmltok_impl.c"
        var $262=($261); //@line 385 "xmltok_impl.c"
        $iftmp_898_i_i=$262; //@line 385 "xmltok_impl.c"
        __lastLabel__ = 68; __label__ = 76; break; //@line 385 "xmltok_impl.c"
      case 69: // $bb3_i57_i
        var $263=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $264=$263+1; //@line 385 "xmltok_impl.c"
        var $265=HEAP[$264]; //@line 385 "xmltok_impl.c"
        var $266=($265); //@line 385 "xmltok_impl.c"
        var $267=$ptr_addr_i50_i; //@line 385 "xmltok_impl.c"
        var $268=$267; //@line 385 "xmltok_impl.c"
        var $269=HEAP[$268]; //@line 385 "xmltok_impl.c"
        var $270=($269); //@line 385 "xmltok_impl.c"
        var $271=((($270)) & 255); //@line 385 "xmltok_impl.c"
        var $272=((($266)) & 255); //@line 385 "xmltok_impl.c"
        $hi_addr_i_i46_i=$271;
        $lo_addr_i_i47_i=$272;
        var $273=$hi_addr_i_i46_i; //@line 518 "xmltok.c"
        var $274=($273); //@line 518 "xmltok.c"
        if ($274 == 216) {
          __label__ = 70; break;
        }
        else if ($274 == 217) {
          __label__ = 70; break;
        }
        else if ($274 == 218) {
          __label__ = 70; break;
        }
        else if ($274 == 219) {
          __label__ = 70; break;
        }
        else if ($274 == 220) {
          __label__ = 71; break;
        }
        else if ($274 == 221) {
          __label__ = 71; break;
        }
        else if ($274 == 222) {
          __label__ = 71; break;
        }
        else if ($274 == 223) {
          __label__ = 71; break;
        }
        else if ($274 == 255) {
          __label__ = 72; break;
        }
        else {
        __label__ = 74; break;
        }
        
      case 70: // $bb_i_i58_i
        $3=7; //@line 520 "xmltok.c"
        __label__ = 75; break; //@line 520 "xmltok.c"
      case 71: // $bb1_i_i59_i
        $3=8; //@line 522 "xmltok.c"
        __label__ = 75; break; //@line 522 "xmltok.c"
      case 72: // $bb2_i_i62_i
        var $275=$lo_addr_i_i47_i; //@line 524 "xmltok.c"
        var $276=($275); //@line 524 "xmltok.c"
        var $_off_i_i60_i=($276) + -254;
        var $switch_i_i61_i=($_off_i_i60_i) < 2;
        if ($switch_i_i61_i) { __label__ = 73; break; } else { __label__ = 74; break; }
      case 73: // $bb3_i_i63_i
        $3=0; //@line 527 "xmltok.c"
        __label__ = 75; break; //@line 527 "xmltok.c"
      case 74: // $bb4_i_i64_i
        $3=29; //@line 531 "xmltok.c"
        __label__ = 75; break; //@line 531 "xmltok.c"
      case 75: // $unicode_byte_type_exit_i66_i
        var $277=$3; //@line 520 "xmltok.c"
        $retval_i_i48_i=$277; //@line 520 "xmltok.c"
        var $retval6_i_i65_i=$retval_i_i48_i; //@line 520 "xmltok.c"
        $iftmp_898_i_i=$retval6_i_i65_i; //@line 385 "xmltok_impl.c"
        __lastLabel__ = 75; __label__ = 76; break; //@line 385 "xmltok_impl.c"
      case 76: // $bb4_i67_i
        var $278=__lastLabel__ == 75 ? $retval6_i_i65_i : ($262);
        if ($278 == 5) {
          __label__ = 80; break;
        }
        else if ($278 == 6) {
          __label__ = 83; break;
        }
        else if ($278 == 7) {
          __label__ = 86; break;
        }
        else if ($278 == 22) {
          __label__ = 79; break;
        }
        else if ($278 == 24) {
          __label__ = 79; break;
        }
        else if ($278 == 29) {
          __label__ = 77; break;
        }
        else {
        __label__ = 89; break;
        }
        
      case 77: // $bb5_i68_i
        var $279=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $280=$279; //@line 386 "xmltok_impl.c"
        var $281=HEAP[$280]; //@line 386 "xmltok_impl.c"
        var $282=($281); //@line 386 "xmltok_impl.c"
        var $283=_nmstrtPages+$282; //@line 386 "xmltok_impl.c"
        var $284=HEAP[$283]; //@line 386 "xmltok_impl.c"
        var $285=($284); //@line 386 "xmltok_impl.c"
        var $286=($285) * 8;
        var $287=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $288=$287+1; //@line 386 "xmltok_impl.c"
        var $289=HEAP[$288]; //@line 386 "xmltok_impl.c"
        var $290=($289) >>> 5; //@line 386 "xmltok_impl.c"
        var $291=($290); //@line 386 "xmltok_impl.c"
        var $292=($291) + ($286); //@line 386 "xmltok_impl.c"
        var $293=_namingBitmap+$292*4; //@line 386 "xmltok_impl.c"
        var $294=HEAP[$293]; //@line 386 "xmltok_impl.c"
        var $295=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $296=$295+1; //@line 386 "xmltok_impl.c"
        var $297=HEAP[$296]; //@line 386 "xmltok_impl.c"
        var $298=($297); //@line 386 "xmltok_impl.c"
        var $299=($298) & 31; //@line 386 "xmltok_impl.c"
        var $300=1 << ($299); //@line 386 "xmltok_impl.c"
        var $301=($300) & ($294); //@line 386 "xmltok_impl.c"
        var $302=($301)==0; //@line 386 "xmltok_impl.c"
        if ($302) { __label__ = 78; break; } else { __label__ = 79; break; } //@line 386 "xmltok_impl.c"
      case 78: // $bb6_i69_i
        var $303=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $304=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$303]=$304; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 79: // $bb7_i70_i
        var $305=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $306=$305+2; //@line 386 "xmltok_impl.c"
        $ptr_addr_i50_i=$306; //@line 386 "xmltok_impl.c"
        __label__ = 130; break; //@line 386 "xmltok_impl.c"
      case 80: // $bb8_i71_i
        var $307=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $308=($307); //@line 386 "xmltok_impl.c"
        var $309=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $310=($309); //@line 386 "xmltok_impl.c"
        var $311=($308) - ($310); //@line 386 "xmltok_impl.c"
        var $312=($311) <= 1; //@line 386 "xmltok_impl.c"
        if ($312) { __label__ = 81; break; } else { __label__ = 82; break; } //@line 386 "xmltok_impl.c"
      case 81: // $bb9_i72_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 82: // $bb10_i73_i
        var $313=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $314=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$313]=$314; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 83: // $bb11_i74_i
        var $315=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $316=($315); //@line 386 "xmltok_impl.c"
        var $317=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $318=($317); //@line 386 "xmltok_impl.c"
        var $319=($316) - ($318); //@line 386 "xmltok_impl.c"
        var $320=($319) <= 2; //@line 386 "xmltok_impl.c"
        if ($320) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 386 "xmltok_impl.c"
      case 84: // $bb12_i75_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 85: // $bb13_i76_i
        var $321=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $322=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$321]=$322; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 86: // $bb14_i77_i
        var $323=$end_addr_i51_i; //@line 386 "xmltok_impl.c"
        var $324=($323); //@line 386 "xmltok_impl.c"
        var $325=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        var $326=($325); //@line 386 "xmltok_impl.c"
        var $327=($324) - ($326); //@line 386 "xmltok_impl.c"
        var $328=($327) <= 3; //@line 386 "xmltok_impl.c"
        if ($328) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 386 "xmltok_impl.c"
      case 87: // $bb15_i78_i
        $4=-2; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 88: // $bb16_i79_i
        var $329=$nextTokPtr_addr_i52_i; //@line 386 "xmltok_impl.c"
        var $330=$ptr_addr_i50_i; //@line 386 "xmltok_impl.c"
        HEAP[$329]=$330; //@line 386 "xmltok_impl.c"
        $4=0; //@line 386 "xmltok_impl.c"
        __label__ = 132; break; //@line 386 "xmltok_impl.c"
      case 89: // $bb17_i80_i
        var $331=$nextTokPtr_addr_i52_i; //@line 388 "xmltok_impl.c"
        var $332=$ptr_addr_i50_i; //@line 388 "xmltok_impl.c"
        HEAP[$331]=$332; //@line 388 "xmltok_impl.c"
        $4=0; //@line 389 "xmltok_impl.c"
        __label__ = 132; break; //@line 389 "xmltok_impl.c"
      case 90: // $bb18_i81_i
        var $333=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $334=$333; //@line 392 "xmltok_impl.c"
        var $335=HEAP[$334]; //@line 392 "xmltok_impl.c"
        var $336=($335)==0; //@line 392 "xmltok_impl.c"
        if ($336) { __label__ = 91; break; } else { __label__ = 92; break; } //@line 392 "xmltok_impl.c"
      case 91: // $bb19_i82_i
        var $337=$enc_addr_i49_i; //@line 392 "xmltok_impl.c"
        var $338=$337; //@line 392 "xmltok_impl.c"
        var $339=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $340=$339+1; //@line 392 "xmltok_impl.c"
        var $341=HEAP[$340]; //@line 392 "xmltok_impl.c"
        var $342=($341); //@line 392 "xmltok_impl.c"
        var $343=$338+72; //@line 392 "xmltok_impl.c"
        var $344=$343+$342; //@line 392 "xmltok_impl.c"
        var $345=HEAP[$344]; //@line 392 "xmltok_impl.c"
        var $346=($345); //@line 392 "xmltok_impl.c"
        $iftmp_906_i_i=$346; //@line 392 "xmltok_impl.c"
        __lastLabel__ = 91; __label__ = 99; break; //@line 392 "xmltok_impl.c"
      case 92: // $bb20_i83_i
        var $347=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $348=$347+1; //@line 392 "xmltok_impl.c"
        var $349=HEAP[$348]; //@line 392 "xmltok_impl.c"
        var $350=($349); //@line 392 "xmltok_impl.c"
        var $351=$ptr_addr_i50_i; //@line 392 "xmltok_impl.c"
        var $352=$351; //@line 392 "xmltok_impl.c"
        var $353=HEAP[$352]; //@line 392 "xmltok_impl.c"
        var $354=($353); //@line 392 "xmltok_impl.c"
        var $355=((($354)) & 255); //@line 392 "xmltok_impl.c"
        var $356=((($350)) & 255); //@line 392 "xmltok_impl.c"
        $hi_addr_i13_i_i=$355;
        $lo_addr_i14_i_i=$356;
        var $357=$hi_addr_i13_i_i; //@line 518 "xmltok.c"
        var $358=($357); //@line 518 "xmltok.c"
        if ($358 == 216) {
          __label__ = 93; break;
        }
        else if ($358 == 217) {
          __label__ = 93; break;
        }
        else if ($358 == 218) {
          __label__ = 93; break;
        }
        else if ($358 == 219) {
          __label__ = 93; break;
        }
        else if ($358 == 220) {
          __label__ = 94; break;
        }
        else if ($358 == 221) {
          __label__ = 94; break;
        }
        else if ($358 == 222) {
          __label__ = 94; break;
        }
        else if ($358 == 223) {
          __label__ = 94; break;
        }
        else if ($358 == 255) {
          __label__ = 95; break;
        }
        else {
        __label__ = 97; break;
        }
        
      case 93: // $bb_i16_i_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 98; break; //@line 520 "xmltok.c"
      case 94: // $bb1_i17_i_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 98; break; //@line 522 "xmltok.c"
      case 95: // $bb2_i20_i_i
        var $359=$lo_addr_i14_i_i; //@line 524 "xmltok.c"
        var $360=($359); //@line 524 "xmltok.c"
        var $_off_i18_i_i=($360) + -254;
        var $switch_i19_i_i=($_off_i18_i_i) < 2;
        if ($switch_i19_i_i) { __label__ = 96; break; } else { __label__ = 97; break; }
      case 96: // $bb3_i21_i_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 98; break; //@line 527 "xmltok.c"
      case 97: // $bb4_i22_i_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 98; break; //@line 531 "xmltok.c"
      case 98: // $unicode_byte_type_exit24_i_i
        var $361=$1; //@line 520 "xmltok.c"
        $retval_i15_i_i=$361; //@line 520 "xmltok.c"
        var $retval6_i23_i_i=$retval_i15_i_i; //@line 520 "xmltok.c"
        $iftmp_906_i_i=$retval6_i23_i_i; //@line 392 "xmltok_impl.c"
        __lastLabel__ = 98; __label__ = 99; break; //@line 392 "xmltok_impl.c"
      case 99: // $bb21_i84_i
        var $362=__lastLabel__ == 98 ? $retval6_i23_i_i : ($346);
        if ($362 == 5) {
          __label__ = 103; break;
        }
        else if ($362 == 6) {
          __label__ = 106; break;
        }
        else if ($362 == 7) {
          __label__ = 109; break;
        }
        else if ($362 == 9) {
          __label__ = 112; break;
        }
        else if ($362 == 10) {
          __label__ = 112; break;
        }
        else if ($362 == 11) {
          __label__ = 128; break;
        }
        else if ($362 == 21) {
          __label__ = 112; break;
        }
        else if ($362 == 22) {
          __label__ = 102; break;
        }
        else if ($362 == 24) {
          __label__ = 102; break;
        }
        else if ($362 == 25) {
          __label__ = 102; break;
        }
        else if ($362 == 26) {
          __label__ = 102; break;
        }
        else if ($362 == 27) {
          __label__ = 102; break;
        }
        else if ($362 == 29) {
          __label__ = 100; break;
        }
        else {
        __label__ = 129; break;
        }
        
      case 100: // $bb22_i85_i
        var $363=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $364=$363; //@line 393 "xmltok_impl.c"
        var $365=HEAP[$364]; //@line 393 "xmltok_impl.c"
        var $366=($365); //@line 393 "xmltok_impl.c"
        var $367=_namePages+$366; //@line 393 "xmltok_impl.c"
        var $368=HEAP[$367]; //@line 393 "xmltok_impl.c"
        var $369=($368); //@line 393 "xmltok_impl.c"
        var $370=($369) * 8;
        var $371=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $372=$371+1; //@line 393 "xmltok_impl.c"
        var $373=HEAP[$372]; //@line 393 "xmltok_impl.c"
        var $374=($373) >>> 5; //@line 393 "xmltok_impl.c"
        var $375=($374); //@line 393 "xmltok_impl.c"
        var $376=($375) + ($370); //@line 393 "xmltok_impl.c"
        var $377=_namingBitmap+$376*4; //@line 393 "xmltok_impl.c"
        var $378=HEAP[$377]; //@line 393 "xmltok_impl.c"
        var $379=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $380=$379+1; //@line 393 "xmltok_impl.c"
        var $381=HEAP[$380]; //@line 393 "xmltok_impl.c"
        var $382=($381); //@line 393 "xmltok_impl.c"
        var $383=($382) & 31; //@line 393 "xmltok_impl.c"
        var $384=1 << ($383); //@line 393 "xmltok_impl.c"
        var $385=($384) & ($378); //@line 393 "xmltok_impl.c"
        var $386=($385)==0; //@line 393 "xmltok_impl.c"
        if ($386) { __label__ = 101; break; } else { __label__ = 102; break; } //@line 393 "xmltok_impl.c"
      case 101: // $bb23_i_i
        var $387=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $388=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$387]=$388; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 102: // $bb24_i86_i
        var $389=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $390=$389+2; //@line 393 "xmltok_impl.c"
        $ptr_addr_i50_i=$390; //@line 393 "xmltok_impl.c"
        __label__ = 130; break; //@line 393 "xmltok_impl.c"
      case 103: // $bb25_i87_i
        var $391=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $392=($391); //@line 393 "xmltok_impl.c"
        var $393=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $394=($393); //@line 393 "xmltok_impl.c"
        var $395=($392) - ($394); //@line 393 "xmltok_impl.c"
        var $396=($395) <= 1; //@line 393 "xmltok_impl.c"
        if ($396) { __label__ = 104; break; } else { __label__ = 105; break; } //@line 393 "xmltok_impl.c"
      case 104: // $bb26_i88_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 105: // $bb27_i89_i
        var $397=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $398=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$397]=$398; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 106: // $bb28_i90_i
        var $399=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $400=($399); //@line 393 "xmltok_impl.c"
        var $401=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $402=($401); //@line 393 "xmltok_impl.c"
        var $403=($400) - ($402); //@line 393 "xmltok_impl.c"
        var $404=($403) <= 2; //@line 393 "xmltok_impl.c"
        if ($404) { __label__ = 107; break; } else { __label__ = 108; break; } //@line 393 "xmltok_impl.c"
      case 107: // $bb29_i91_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 108: // $bb30_i92_i
        var $405=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $406=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$405]=$406; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 109: // $bb31_i_i
        var $407=$end_addr_i51_i; //@line 393 "xmltok_impl.c"
        var $408=($407); //@line 393 "xmltok_impl.c"
        var $409=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        var $410=($409); //@line 393 "xmltok_impl.c"
        var $411=($408) - ($410); //@line 393 "xmltok_impl.c"
        var $412=($411) <= 3; //@line 393 "xmltok_impl.c"
        if ($412) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 393 "xmltok_impl.c"
      case 110: // $bb32_i93_i
        $4=-2; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 111: // $bb33_i_i
        var $413=$nextTokPtr_addr_i52_i; //@line 393 "xmltok_impl.c"
        var $414=$ptr_addr_i50_i; //@line 393 "xmltok_impl.c"
        HEAP[$413]=$414; //@line 393 "xmltok_impl.c"
        $4=0; //@line 393 "xmltok_impl.c"
        __label__ = 132; break; //@line 393 "xmltok_impl.c"
      case 112: // $bb34_i94_i
        var $415=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $416=$415+2; //@line 395 "xmltok_impl.c"
        $ptr_addr_i50_i=$416; //@line 395 "xmltok_impl.c"
        __label__ = 126; break; //@line 395 "xmltok_impl.c"
      case 113: // $bb35_i95_i
        var $417=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $418=$417; //@line 396 "xmltok_impl.c"
        var $419=HEAP[$418]; //@line 396 "xmltok_impl.c"
        var $420=($419)==0; //@line 396 "xmltok_impl.c"
        if ($420) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 396 "xmltok_impl.c"
      case 114: // $bb36_i96_i
        var $421=$enc_addr_i49_i; //@line 396 "xmltok_impl.c"
        var $422=$421; //@line 396 "xmltok_impl.c"
        var $423=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $424=$423+1; //@line 396 "xmltok_impl.c"
        var $425=HEAP[$424]; //@line 396 "xmltok_impl.c"
        var $426=($425); //@line 396 "xmltok_impl.c"
        var $427=$422+72; //@line 396 "xmltok_impl.c"
        var $428=$427+$426; //@line 396 "xmltok_impl.c"
        var $429=HEAP[$428]; //@line 396 "xmltok_impl.c"
        var $430=($429); //@line 396 "xmltok_impl.c"
        $iftmp_914_i_i=$430; //@line 396 "xmltok_impl.c"
        __lastLabel__ = 114; __label__ = 122; break; //@line 396 "xmltok_impl.c"
      case 115: // $bb37_i_i
        var $431=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $432=$431+1; //@line 396 "xmltok_impl.c"
        var $433=HEAP[$432]; //@line 396 "xmltok_impl.c"
        var $434=($433); //@line 396 "xmltok_impl.c"
        var $435=$ptr_addr_i50_i; //@line 396 "xmltok_impl.c"
        var $436=$435; //@line 396 "xmltok_impl.c"
        var $437=HEAP[$436]; //@line 396 "xmltok_impl.c"
        var $438=($437); //@line 396 "xmltok_impl.c"
        var $439=((($438)) & 255); //@line 396 "xmltok_impl.c"
        var $440=((($434)) & 255); //@line 396 "xmltok_impl.c"
        $hi_addr_i1_i_i=$439;
        $lo_addr_i2_i_i=$440;
        var $441=$hi_addr_i1_i_i; //@line 518 "xmltok.c"
        var $442=($441); //@line 518 "xmltok.c"
        if ($442 == 216) {
          __label__ = 116; break;
        }
        else if ($442 == 217) {
          __label__ = 116; break;
        }
        else if ($442 == 218) {
          __label__ = 116; break;
        }
        else if ($442 == 219) {
          __label__ = 116; break;
        }
        else if ($442 == 220) {
          __label__ = 117; break;
        }
        else if ($442 == 221) {
          __label__ = 117; break;
        }
        else if ($442 == 222) {
          __label__ = 117; break;
        }
        else if ($442 == 223) {
          __label__ = 117; break;
        }
        else if ($442 == 255) {
          __label__ = 118; break;
        }
        else {
        __label__ = 120; break;
        }
        
      case 116: // $bb_i4_i_i
        $2=7; //@line 520 "xmltok.c"
        __label__ = 121; break; //@line 520 "xmltok.c"
      case 117: // $bb1_i5_i_i
        $2=8; //@line 522 "xmltok.c"
        __label__ = 121; break; //@line 522 "xmltok.c"
      case 118: // $bb2_i8_i_i
        var $443=$lo_addr_i2_i_i; //@line 524 "xmltok.c"
        var $444=($443); //@line 524 "xmltok.c"
        var $_off_i6_i_i=($444) + -254;
        var $switch_i7_i_i=($_off_i6_i_i) < 2;
        if ($switch_i7_i_i) { __label__ = 119; break; } else { __label__ = 120; break; }
      case 119: // $bb3_i9_i_i
        $2=0; //@line 527 "xmltok.c"
        __label__ = 121; break; //@line 527 "xmltok.c"
      case 120: // $bb4_i10_i_i
        $2=29; //@line 531 "xmltok.c"
        __label__ = 121; break; //@line 531 "xmltok.c"
      case 121: // $unicode_byte_type_exit12_i_i
        var $445=$2; //@line 520 "xmltok.c"
        $retval_i3_i_i=$445; //@line 520 "xmltok.c"
        var $retval6_i11_i_i=$retval_i3_i_i; //@line 520 "xmltok.c"
        $iftmp_914_i_i=$retval6_i11_i_i; //@line 396 "xmltok_impl.c"
        __lastLabel__ = 121; __label__ = 122; break; //@line 396 "xmltok_impl.c"
      case 122: // $bb38_i97_i
        var $446=__lastLabel__ == 121 ? $retval6_i11_i_i : ($430);
        if ($446 == 9) {
          __label__ = 123; break;
        }
        else if ($446 == 10) {
          __label__ = 123; break;
        }
        else if ($446 == 11) {
          __label__ = 124; break;
        }
        else if ($446 == 21) {
          __label__ = 123; break;
        }
        else {
        __label__ = 125; break;
        }
        
      case 123: // $bb39_i98_i
        var $447=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $448=$447+2; //@line 395 "xmltok_impl.c"
        $ptr_addr_i50_i=$448; //@line 395 "xmltok_impl.c"
        __label__ = 126; break; //@line 395 "xmltok_impl.c"
      case 124: // $bb40_i99_i
        var $449=$ptr_addr_i50_i; //@line 400 "xmltok_impl.c"
        var $450=$449+2; //@line 400 "xmltok_impl.c"
        var $451=$nextTokPtr_addr_i52_i; //@line 400 "xmltok_impl.c"
        HEAP[$451]=$450; //@line 400 "xmltok_impl.c"
        $4=5; //@line 401 "xmltok_impl.c"
        __label__ = 132; break; //@line 401 "xmltok_impl.c"
      case 125: // $bb41_i100_i
        var $452=$nextTokPtr_addr_i52_i; //@line 403 "xmltok_impl.c"
        var $453=$ptr_addr_i50_i; //@line 403 "xmltok_impl.c"
        HEAP[$452]=$453; //@line 403 "xmltok_impl.c"
        $4=0; //@line 404 "xmltok_impl.c"
        __label__ = 132; break; //@line 404 "xmltok_impl.c"
      case 126: // $bb42_i101_i
        var $454=$ptr_addr_i50_i; //@line 395 "xmltok_impl.c"
        var $455=$end_addr_i51_i; //@line 395 "xmltok_impl.c"
        var $456=($454)!=($455); //@line 395 "xmltok_impl.c"
        if ($456) { __label__ = 113; break; } else { __label__ = 127; break; } //@line 395 "xmltok_impl.c"
      case 127: // $bb43_i102_i
        $4=-1; //@line 407 "xmltok_impl.c"
        __label__ = 132; break; //@line 407 "xmltok_impl.c"
      case 128: // $bb44_i103_i
        var $457=$ptr_addr_i50_i; //@line 416 "xmltok_impl.c"
        var $458=$457+2; //@line 416 "xmltok_impl.c"
        var $459=$nextTokPtr_addr_i52_i; //@line 416 "xmltok_impl.c"
        HEAP[$459]=$458; //@line 416 "xmltok_impl.c"
        $4=5; //@line 417 "xmltok_impl.c"
        __label__ = 132; break; //@line 417 "xmltok_impl.c"
      case 129: // $bb45_i104_i
        var $460=$nextTokPtr_addr_i52_i; //@line 419 "xmltok_impl.c"
        var $461=$ptr_addr_i50_i; //@line 419 "xmltok_impl.c"
        HEAP[$460]=$461; //@line 419 "xmltok_impl.c"
        $4=0; //@line 420 "xmltok_impl.c"
        __label__ = 132; break; //@line 420 "xmltok_impl.c"
      case 130: // $bb46_i105_i
        var $462=$ptr_addr_i50_i; //@line 391 "xmltok_impl.c"
        var $463=$end_addr_i51_i; //@line 391 "xmltok_impl.c"
        var $464=($462)!=($463); //@line 391 "xmltok_impl.c"
        if ($464) { __label__ = 90; break; } else { __label__ = 131; break; } //@line 391 "xmltok_impl.c"
      case 131: // $bb47_i106_i
        $4=-1; //@line 423 "xmltok_impl.c"
        __label__ = 132; break; //@line 423 "xmltok_impl.c"
      case 132: // $big2_scanEndTag_exit_i
        var $465=$4; //@line 384 "xmltok_impl.c"
        $retval_i53_i=$465; //@line 384 "xmltok_impl.c"
        var $retval49_i_i=$retval_i53_i; //@line 384 "xmltok_impl.c"
        $16=$retval49_i_i; //@line 707 "xmltok_impl.c"
        __label__ = 322; break; //@line 707 "xmltok_impl.c"
      case 133: // $bb28_i
        var $466=$nextTokPtr_addr_i; //@line 709 "xmltok_impl.c"
        var $467=$ptr_addr_i; //@line 709 "xmltok_impl.c"
        HEAP[$466]=$467; //@line 709 "xmltok_impl.c"
        $16=0; //@line 710 "xmltok_impl.c"
        __label__ = 322; break; //@line 710 "xmltok_impl.c"
      case 134: // $bb29_i
        var $468=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $469=$468; //@line 717 "xmltok_impl.c"
        var $470=HEAP[$469]; //@line 717 "xmltok_impl.c"
        var $471=($470)==0; //@line 717 "xmltok_impl.c"
        if ($471) { __label__ = 135; break; } else { __label__ = 136; break; } //@line 717 "xmltok_impl.c"
      case 135: // $bb30_i
        var $472=$enc_addr_i; //@line 717 "xmltok_impl.c"
        var $473=$472; //@line 717 "xmltok_impl.c"
        var $474=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $475=$474+1; //@line 717 "xmltok_impl.c"
        var $476=HEAP[$475]; //@line 717 "xmltok_impl.c"
        var $477=($476); //@line 717 "xmltok_impl.c"
        var $478=$473+72; //@line 717 "xmltok_impl.c"
        var $479=$478+$477; //@line 717 "xmltok_impl.c"
        var $480=HEAP[$479]; //@line 717 "xmltok_impl.c"
        var $481=($480); //@line 717 "xmltok_impl.c"
        $iftmp_1069_i=$481; //@line 717 "xmltok_impl.c"
        __lastLabel__ = 135; __label__ = 143; break; //@line 717 "xmltok_impl.c"
      case 136: // $bb31_i
        var $482=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $483=$482+1; //@line 717 "xmltok_impl.c"
        var $484=HEAP[$483]; //@line 717 "xmltok_impl.c"
        var $485=($484); //@line 717 "xmltok_impl.c"
        var $486=$ptr_addr_i; //@line 717 "xmltok_impl.c"
        var $487=$486; //@line 717 "xmltok_impl.c"
        var $488=HEAP[$487]; //@line 717 "xmltok_impl.c"
        var $489=($488); //@line 717 "xmltok_impl.c"
        var $490=((($489)) & 255); //@line 717 "xmltok_impl.c"
        var $491=((($485)) & 255); //@line 717 "xmltok_impl.c"
        $hi_addr_i33_i=$490;
        $lo_addr_i34_i=$491;
        var $492=$hi_addr_i33_i; //@line 518 "xmltok.c"
        var $493=($492); //@line 518 "xmltok.c"
        if ($493 == 216) {
          __label__ = 137; break;
        }
        else if ($493 == 217) {
          __label__ = 137; break;
        }
        else if ($493 == 218) {
          __label__ = 137; break;
        }
        else if ($493 == 219) {
          __label__ = 137; break;
        }
        else if ($493 == 220) {
          __label__ = 138; break;
        }
        else if ($493 == 221) {
          __label__ = 138; break;
        }
        else if ($493 == 222) {
          __label__ = 138; break;
        }
        else if ($493 == 223) {
          __label__ = 138; break;
        }
        else if ($493 == 255) {
          __label__ = 139; break;
        }
        else {
        __label__ = 141; break;
        }
        
      case 137: // $bb_i36_i
        $5=7; //@line 520 "xmltok.c"
        __label__ = 142; break; //@line 520 "xmltok.c"
      case 138: // $bb1_i37_i
        $5=8; //@line 522 "xmltok.c"
        __label__ = 142; break; //@line 522 "xmltok.c"
      case 139: // $bb2_i40_i
        var $494=$lo_addr_i34_i; //@line 524 "xmltok.c"
        var $495=($494); //@line 524 "xmltok.c"
        var $_off_i38_i=($495) + -254;
        var $switch_i39_i=($_off_i38_i) < 2;
        if ($switch_i39_i) { __label__ = 140; break; } else { __label__ = 141; break; }
      case 140: // $bb3_i41_i
        $5=0; //@line 527 "xmltok.c"
        __label__ = 142; break; //@line 527 "xmltok.c"
      case 141: // $bb4_i42_i
        $5=29; //@line 531 "xmltok.c"
        __label__ = 142; break; //@line 531 "xmltok.c"
      case 142: // $unicode_byte_type_exit45_i
        var $496=$5; //@line 520 "xmltok.c"
        $retval_i35_i=$496; //@line 520 "xmltok.c"
        var $retval6_i43_i=$retval_i35_i; //@line 520 "xmltok.c"
        $iftmp_1069_i=$retval6_i43_i; //@line 717 "xmltok_impl.c"
        __lastLabel__ = 142; __label__ = 143; break; //@line 717 "xmltok_impl.c"
      case 143: // $bb32_i
        var $497=__lastLabel__ == 142 ? $retval6_i43_i : ($481);
        if ($497 == 5) {
          __label__ = 147; break;
        }
        else if ($497 == 6) {
          __label__ = 150; break;
        }
        else if ($497 == 7) {
          __label__ = 153; break;
        }
        else if ($497 == 9) {
          __label__ = 156; break;
        }
        else if ($497 == 10) {
          __label__ = 156; break;
        }
        else if ($497 == 11) {
          __label__ = 312; break;
        }
        else if ($497 == 17) {
          __label__ = 313; break;
        }
        else if ($497 == 21) {
          __label__ = 156; break;
        }
        else if ($497 == 22) {
          __label__ = 146; break;
        }
        else if ($497 == 24) {
          __label__ = 146; break;
        }
        else if ($497 == 25) {
          __label__ = 146; break;
        }
        else if ($497 == 26) {
          __label__ = 146; break;
        }
        else if ($497 == 27) {
          __label__ = 146; break;
        }
        else if ($497 == 29) {
          __label__ = 144; break;
        }
        else {
        __label__ = 319; break;
        }
        
      case 144: // $bb33_i
        var $498=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $499=$498; //@line 718 "xmltok_impl.c"
        var $500=HEAP[$499]; //@line 718 "xmltok_impl.c"
        var $501=($500); //@line 718 "xmltok_impl.c"
        var $502=_namePages+$501; //@line 718 "xmltok_impl.c"
        var $503=HEAP[$502]; //@line 718 "xmltok_impl.c"
        var $504=($503); //@line 718 "xmltok_impl.c"
        var $505=($504) * 8;
        var $506=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $507=$506+1; //@line 718 "xmltok_impl.c"
        var $508=HEAP[$507]; //@line 718 "xmltok_impl.c"
        var $509=($508) >>> 5; //@line 718 "xmltok_impl.c"
        var $510=($509); //@line 718 "xmltok_impl.c"
        var $511=($510) + ($505); //@line 718 "xmltok_impl.c"
        var $512=_namingBitmap+$511*4; //@line 718 "xmltok_impl.c"
        var $513=HEAP[$512]; //@line 718 "xmltok_impl.c"
        var $514=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $515=$514+1; //@line 718 "xmltok_impl.c"
        var $516=HEAP[$515]; //@line 718 "xmltok_impl.c"
        var $517=($516); //@line 718 "xmltok_impl.c"
        var $518=($517) & 31; //@line 718 "xmltok_impl.c"
        var $519=1 << ($518); //@line 718 "xmltok_impl.c"
        var $520=($519) & ($513); //@line 718 "xmltok_impl.c"
        var $521=($520)==0; //@line 718 "xmltok_impl.c"
        if ($521) { __label__ = 145; break; } else { __label__ = 146; break; } //@line 718 "xmltok_impl.c"
      case 145: // $bb34_i
        var $522=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $523=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$522]=$523; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 146: // $bb35_i
        var $524=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $525=$524+2; //@line 718 "xmltok_impl.c"
        $ptr_addr_i=$525; //@line 718 "xmltok_impl.c"
        __label__ = 320; break; //@line 718 "xmltok_impl.c"
      case 147: // $bb36_i
        var $526=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $527=($526); //@line 718 "xmltok_impl.c"
        var $528=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $529=($528); //@line 718 "xmltok_impl.c"
        var $530=($527) - ($529); //@line 718 "xmltok_impl.c"
        var $531=($530) <= 1; //@line 718 "xmltok_impl.c"
        if ($531) { __label__ = 148; break; } else { __label__ = 149; break; } //@line 718 "xmltok_impl.c"
      case 148: // $bb37_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 149: // $bb38_i
        var $532=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $533=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$532]=$533; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 150: // $bb39_i
        var $534=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $535=($534); //@line 718 "xmltok_impl.c"
        var $536=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $537=($536); //@line 718 "xmltok_impl.c"
        var $538=($535) - ($537); //@line 718 "xmltok_impl.c"
        var $539=($538) <= 2; //@line 718 "xmltok_impl.c"
        if ($539) { __label__ = 151; break; } else { __label__ = 152; break; } //@line 718 "xmltok_impl.c"
      case 151: // $bb40_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 152: // $bb41_i
        var $540=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $541=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$540]=$541; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 153: // $bb42_i
        var $542=$end_addr_i; //@line 718 "xmltok_impl.c"
        var $543=($542); //@line 718 "xmltok_impl.c"
        var $544=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        var $545=($544); //@line 718 "xmltok_impl.c"
        var $546=($543) - ($545); //@line 718 "xmltok_impl.c"
        var $547=($546) <= 3; //@line 718 "xmltok_impl.c"
        if ($547) { __label__ = 154; break; } else { __label__ = 155; break; } //@line 718 "xmltok_impl.c"
      case 154: // $bb43_i
        $16=-2; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 155: // $bb44_i
        var $548=$nextTokPtr_addr_i; //@line 718 "xmltok_impl.c"
        var $549=$ptr_addr_i; //@line 718 "xmltok_impl.c"
        HEAP[$548]=$549; //@line 718 "xmltok_impl.c"
        $16=0; //@line 718 "xmltok_impl.c"
        __label__ = 322; break; //@line 718 "xmltok_impl.c"
      case 156: // $bb45_i
        var $550=$ptr_addr_i; //@line 739 "xmltok_impl.c"
        var $551=$550+2; //@line 739 "xmltok_impl.c"
        $ptr_addr_i=$551; //@line 739 "xmltok_impl.c"
        __label__ = 310; break; //@line 739 "xmltok_impl.c"
      case 157: // $bb46_i
        var $552=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $553=$552; //@line 741 "xmltok_impl.c"
        var $554=HEAP[$553]; //@line 741 "xmltok_impl.c"
        var $555=($554)==0; //@line 741 "xmltok_impl.c"
        if ($555) { __label__ = 158; break; } else { __label__ = 159; break; } //@line 741 "xmltok_impl.c"
      case 158: // $bb47_i
        var $556=$enc_addr_i; //@line 741 "xmltok_impl.c"
        var $557=$556; //@line 741 "xmltok_impl.c"
        var $558=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $559=$558+1; //@line 741 "xmltok_impl.c"
        var $560=HEAP[$559]; //@line 741 "xmltok_impl.c"
        var $561=($560); //@line 741 "xmltok_impl.c"
        var $562=$557+72; //@line 741 "xmltok_impl.c"
        var $563=$562+$561; //@line 741 "xmltok_impl.c"
        var $564=HEAP[$563]; //@line 741 "xmltok_impl.c"
        var $565=($564); //@line 741 "xmltok_impl.c"
        $iftmp_1077_i=$565; //@line 741 "xmltok_impl.c"
        __lastLabel__ = 158; __label__ = 166; break; //@line 741 "xmltok_impl.c"
      case 159: // $bb48_i
        var $566=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $567=$566+1; //@line 741 "xmltok_impl.c"
        var $568=HEAP[$567]; //@line 741 "xmltok_impl.c"
        var $569=($568); //@line 741 "xmltok_impl.c"
        var $570=$ptr_addr_i; //@line 741 "xmltok_impl.c"
        var $571=$570; //@line 741 "xmltok_impl.c"
        var $572=HEAP[$571]; //@line 741 "xmltok_impl.c"
        var $573=($572); //@line 741 "xmltok_impl.c"
        var $574=((($573)) & 255); //@line 741 "xmltok_impl.c"
        var $575=((($569)) & 255); //@line 741 "xmltok_impl.c"
        $hi_addr_i20_i=$574;
        $lo_addr_i21_i=$575;
        var $576=$hi_addr_i20_i; //@line 518 "xmltok.c"
        var $577=($576); //@line 518 "xmltok.c"
        if ($577 == 216) {
          __label__ = 160; break;
        }
        else if ($577 == 217) {
          __label__ = 160; break;
        }
        else if ($577 == 218) {
          __label__ = 160; break;
        }
        else if ($577 == 219) {
          __label__ = 160; break;
        }
        else if ($577 == 220) {
          __label__ = 161; break;
        }
        else if ($577 == 221) {
          __label__ = 161; break;
        }
        else if ($577 == 222) {
          __label__ = 161; break;
        }
        else if ($577 == 223) {
          __label__ = 161; break;
        }
        else if ($577 == 255) {
          __label__ = 162; break;
        }
        else {
        __label__ = 164; break;
        }
        
      case 160: // $bb_i23_i
        $6=7; //@line 520 "xmltok.c"
        __label__ = 165; break; //@line 520 "xmltok.c"
      case 161: // $bb1_i24_i
        $6=8; //@line 522 "xmltok.c"
        __label__ = 165; break; //@line 522 "xmltok.c"
      case 162: // $bb2_i27_i
        var $578=$lo_addr_i21_i; //@line 524 "xmltok.c"
        var $579=($578); //@line 524 "xmltok.c"
        var $_off_i25_i=($579) + -254;
        var $switch_i26_i=($_off_i25_i) < 2;
        if ($switch_i26_i) { __label__ = 163; break; } else { __label__ = 164; break; }
      case 163: // $bb3_i28_i
        $6=0; //@line 527 "xmltok.c"
        __label__ = 165; break; //@line 527 "xmltok.c"
      case 164: // $bb4_i29_i
        $6=29; //@line 531 "xmltok.c"
        __label__ = 165; break; //@line 531 "xmltok.c"
      case 165: // $unicode_byte_type_exit32_i
        var $580=$6; //@line 520 "xmltok.c"
        $retval_i22_i=$580; //@line 520 "xmltok.c"
        var $retval6_i30_i=$retval_i22_i; //@line 520 "xmltok.c"
        $iftmp_1077_i=$retval6_i30_i; //@line 741 "xmltok_impl.c"
        __lastLabel__ = 165; __label__ = 166; break; //@line 741 "xmltok_impl.c"
      case 166: // $bb49_i
        var $581=__lastLabel__ == 165 ? $retval6_i30_i : ($565);
        if ($581 == 5) {
          __label__ = 299; break;
        }
        else if ($581 == 6) {
          __label__ = 302; break;
        }
        else if ($581 == 7) {
          __label__ = 305; break;
        }
        else if ($581 == 9) {
          __label__ = 308; break;
        }
        else if ($581 == 10) {
          __label__ = 308; break;
        }
        else if ($581 == 11) {
          __label__ = 312; break;
        }
        else if ($581 == 17) {
          __label__ = 313; break;
        }
        else if ($581 == 21) {
          __label__ = 308; break;
        }
        else if ($581 == 22) {
          __label__ = 169; break;
        }
        else if ($581 == 24) {
          __label__ = 169; break;
        }
        else if ($581 == 29) {
          __label__ = 167; break;
        }
        else {
        __label__ = 309; break;
        }
        
      case 167: // $bb50_i
        var $582=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $583=$582; //@line 742 "xmltok_impl.c"
        var $584=HEAP[$583]; //@line 742 "xmltok_impl.c"
        var $585=($584); //@line 742 "xmltok_impl.c"
        var $586=_nmstrtPages+$585; //@line 742 "xmltok_impl.c"
        var $587=HEAP[$586]; //@line 742 "xmltok_impl.c"
        var $588=($587); //@line 742 "xmltok_impl.c"
        var $589=($588) * 8;
        var $590=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $591=$590+1; //@line 742 "xmltok_impl.c"
        var $592=HEAP[$591]; //@line 742 "xmltok_impl.c"
        var $593=($592) >>> 5; //@line 742 "xmltok_impl.c"
        var $594=($593); //@line 742 "xmltok_impl.c"
        var $595=($594) + ($589); //@line 742 "xmltok_impl.c"
        var $596=_namingBitmap+$595*4; //@line 742 "xmltok_impl.c"
        var $597=HEAP[$596]; //@line 742 "xmltok_impl.c"
        var $598=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $599=$598+1; //@line 742 "xmltok_impl.c"
        var $600=HEAP[$599]; //@line 742 "xmltok_impl.c"
        var $601=($600); //@line 742 "xmltok_impl.c"
        var $602=($601) & 31; //@line 742 "xmltok_impl.c"
        var $603=1 << ($602); //@line 742 "xmltok_impl.c"
        var $604=($603) & ($597); //@line 742 "xmltok_impl.c"
        var $605=($604)==0; //@line 742 "xmltok_impl.c"
        if ($605) { __label__ = 168; break; } else { __label__ = 169; break; } //@line 742 "xmltok_impl.c"
      case 168: // $bb51_i
        var $606=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $607=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$606]=$607; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 169: // $bb52_i
        var $608=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $609=$608+2; //@line 742 "xmltok_impl.c"
        $ptr_addr_i=$609; //@line 742 "xmltok_impl.c"
        var $610=$enc_addr_i; //@line 754 "xmltok_impl.c"
        var $611=$ptr_addr_i; //@line 754 "xmltok_impl.c"
        var $612=$end_addr_i; //@line 754 "xmltok_impl.c"
        var $613=$nextTokPtr_addr_i; //@line 754 "xmltok_impl.c"
        $enc_addr_i_i=$610;
        HEAP[$ptr_addr_i_i]=$611;
        $end_addr_i_i=$612;
        $nextTokPtr_addr_i_i=$613;
        __label__ = 296; break; //@line 529 "xmltok_impl.c"
      case 170: // $bb_i2_i
        var $614=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $615=$614; //@line 530 "xmltok_impl.c"
        var $616=HEAP[$615]; //@line 530 "xmltok_impl.c"
        var $617=($616)==0; //@line 530 "xmltok_impl.c"
        if ($617) { __label__ = 171; break; } else { __label__ = 172; break; } //@line 530 "xmltok_impl.c"
      case 171: // $bb1_i3_i
        var $618=$enc_addr_i_i; //@line 530 "xmltok_impl.c"
        var $619=$618; //@line 530 "xmltok_impl.c"
        var $620=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $621=$620+1; //@line 530 "xmltok_impl.c"
        var $622=HEAP[$621]; //@line 530 "xmltok_impl.c"
        var $623=($622); //@line 530 "xmltok_impl.c"
        var $624=$619+72; //@line 530 "xmltok_impl.c"
        var $625=$624+$623; //@line 530 "xmltok_impl.c"
        var $626=HEAP[$625]; //@line 530 "xmltok_impl.c"
        var $627=($626); //@line 530 "xmltok_impl.c"
        $iftmp_940_i_i=$627; //@line 530 "xmltok_impl.c"
        __lastLabel__ = 171; __label__ = 179; break; //@line 530 "xmltok_impl.c"
      case 172: // $bb2_i4_i
        var $628=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $629=$628+1; //@line 530 "xmltok_impl.c"
        var $630=HEAP[$629]; //@line 530 "xmltok_impl.c"
        var $631=($630); //@line 530 "xmltok_impl.c"
        var $632=HEAP[$ptr_addr_i_i]; //@line 530 "xmltok_impl.c"
        var $633=$632; //@line 530 "xmltok_impl.c"
        var $634=HEAP[$633]; //@line 530 "xmltok_impl.c"
        var $635=($634); //@line 530 "xmltok_impl.c"
        var $636=((($635)) & 255); //@line 530 "xmltok_impl.c"
        var $637=((($631)) & 255); //@line 530 "xmltok_impl.c"
        $hi_addr_i_i_i=$636;
        $lo_addr_i_i_i=$637;
        var $638=$hi_addr_i_i_i; //@line 518 "xmltok.c"
        var $639=($638); //@line 518 "xmltok.c"
        if ($639 == 216) {
          __label__ = 173; break;
        }
        else if ($639 == 217) {
          __label__ = 173; break;
        }
        else if ($639 == 218) {
          __label__ = 173; break;
        }
        else if ($639 == 219) {
          __label__ = 173; break;
        }
        else if ($639 == 220) {
          __label__ = 174; break;
        }
        else if ($639 == 221) {
          __label__ = 174; break;
        }
        else if ($639 == 222) {
          __label__ = 174; break;
        }
        else if ($639 == 223) {
          __label__ = 174; break;
        }
        else if ($639 == 255) {
          __label__ = 175; break;
        }
        else {
        __label__ = 177; break;
        }
        
      case 173: // $bb_i_i_i
        $13=7; //@line 520 "xmltok.c"
        __label__ = 178; break; //@line 520 "xmltok.c"
      case 174: // $bb1_i_i_i
        $13=8; //@line 522 "xmltok.c"
        __label__ = 178; break; //@line 522 "xmltok.c"
      case 175: // $bb2_i_i_i
        var $640=$lo_addr_i_i_i; //@line 524 "xmltok.c"
        var $641=($640); //@line 524 "xmltok.c"
        var $_off_i_i_i=($641) + -254;
        var $switch_i_i_i=($_off_i_i_i) < 2;
        if ($switch_i_i_i) { __label__ = 176; break; } else { __label__ = 177; break; }
      case 176: // $bb3_i_i_i
        $13=0; //@line 527 "xmltok.c"
        __label__ = 178; break; //@line 527 "xmltok.c"
      case 177: // $bb4_i_i_i
        $13=29; //@line 531 "xmltok.c"
        __label__ = 178; break; //@line 531 "xmltok.c"
      case 178: // $unicode_byte_type_exit_i_i
        var $642=$13; //@line 520 "xmltok.c"
        $retval_i_i_i=$642; //@line 520 "xmltok.c"
        var $retval6_i_i_i=$retval_i_i_i; //@line 520 "xmltok.c"
        $iftmp_940_i_i=$retval6_i_i_i; //@line 530 "xmltok_impl.c"
        __lastLabel__ = 178; __label__ = 179; break; //@line 530 "xmltok_impl.c"
      case 179: // $bb3_i5_i
        var $643=__lastLabel__ == 178 ? $retval6_i_i_i : ($627);
        if ($643 == 5) {
          __label__ = 183; break;
        }
        else if ($643 == 6) {
          __label__ = 186; break;
        }
        else if ($643 == 7) {
          __label__ = 189; break;
        }
        else if ($643 == 9) {
          __label__ = 192; break;
        }
        else if ($643 == 10) {
          __label__ = 192; break;
        }
        else if ($643 == 14) {
          __label__ = 206; break;
        }
        else if ($643 == 21) {
          __label__ = 192; break;
        }
        else if ($643 == 22) {
          __label__ = 182; break;
        }
        else if ($643 == 24) {
          __label__ = 182; break;
        }
        else if ($643 == 25) {
          __label__ = 182; break;
        }
        else if ($643 == 26) {
          __label__ = 182; break;
        }
        else if ($643 == 27) {
          __label__ = 182; break;
        }
        else if ($643 == 29) {
          __label__ = 180; break;
        }
        else {
        __label__ = 295; break;
        }
        
      case 180: // $bb4_i6_i
        var $644=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $645=$644; //@line 531 "xmltok_impl.c"
        var $646=HEAP[$645]; //@line 531 "xmltok_impl.c"
        var $647=($646); //@line 531 "xmltok_impl.c"
        var $648=_namePages+$647; //@line 531 "xmltok_impl.c"
        var $649=HEAP[$648]; //@line 531 "xmltok_impl.c"
        var $650=($649); //@line 531 "xmltok_impl.c"
        var $651=($650) * 8;
        var $652=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $653=$652+1; //@line 531 "xmltok_impl.c"
        var $654=HEAP[$653]; //@line 531 "xmltok_impl.c"
        var $655=($654) >>> 5; //@line 531 "xmltok_impl.c"
        var $656=($655); //@line 531 "xmltok_impl.c"
        var $657=($656) + ($651); //@line 531 "xmltok_impl.c"
        var $658=_namingBitmap+$657*4; //@line 531 "xmltok_impl.c"
        var $659=HEAP[$658]; //@line 531 "xmltok_impl.c"
        var $660=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $661=$660+1; //@line 531 "xmltok_impl.c"
        var $662=HEAP[$661]; //@line 531 "xmltok_impl.c"
        var $663=($662); //@line 531 "xmltok_impl.c"
        var $664=($663) & 31; //@line 531 "xmltok_impl.c"
        var $665=1 << ($664); //@line 531 "xmltok_impl.c"
        var $666=($665) & ($659); //@line 531 "xmltok_impl.c"
        var $667=($666)==0; //@line 531 "xmltok_impl.c"
        if ($667) { __label__ = 181; break; } else { __label__ = 182; break; } //@line 531 "xmltok_impl.c"
      case 181: // $bb5_i_i
        var $668=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $669=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$669]=$668; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 182: // $bb6_i_i
        var $670=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $671=$670+2; //@line 531 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$671; //@line 531 "xmltok_impl.c"
        __label__ = 296; break; //@line 531 "xmltok_impl.c"
      case 183: // $bb7_i_i
        var $672=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $673=($672); //@line 531 "xmltok_impl.c"
        var $674=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $675=($674); //@line 531 "xmltok_impl.c"
        var $676=($673) - ($675); //@line 531 "xmltok_impl.c"
        var $677=($676) <= 1; //@line 531 "xmltok_impl.c"
        if ($677) { __label__ = 184; break; } else { __label__ = 185; break; } //@line 531 "xmltok_impl.c"
      case 184: // $bb8_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 185: // $bb9_i_i
        var $678=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $679=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$679]=$678; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 186: // $bb10_i_i
        var $680=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $681=($680); //@line 531 "xmltok_impl.c"
        var $682=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $683=($682); //@line 531 "xmltok_impl.c"
        var $684=($681) - ($683); //@line 531 "xmltok_impl.c"
        var $685=($684) <= 2; //@line 531 "xmltok_impl.c"
        if ($685) { __label__ = 187; break; } else { __label__ = 188; break; } //@line 531 "xmltok_impl.c"
      case 187: // $bb11_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 188: // $bb12_i_i
        var $686=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $687=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$687]=$686; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 189: // $bb13_i_i
        var $688=$end_addr_i_i; //@line 531 "xmltok_impl.c"
        var $689=($688); //@line 531 "xmltok_impl.c"
        var $690=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $691=($690); //@line 531 "xmltok_impl.c"
        var $692=($689) - ($691); //@line 531 "xmltok_impl.c"
        var $693=($692) <= 3; //@line 531 "xmltok_impl.c"
        if ($693) { __label__ = 190; break; } else { __label__ = 191; break; } //@line 531 "xmltok_impl.c"
      case 190: // $bb14_i_i
        $14=-2; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 191: // $bb15_i_i
        var $694=HEAP[$ptr_addr_i_i]; //@line 531 "xmltok_impl.c"
        var $695=$nextTokPtr_addr_i_i; //@line 531 "xmltok_impl.c"
        HEAP[$695]=$694; //@line 531 "xmltok_impl.c"
        $14=0; //@line 531 "xmltok_impl.c"
        __label__ = 298; break; //@line 531 "xmltok_impl.c"
      case 192: // $bb16_i_i
        var $696=HEAP[$ptr_addr_i_i]; //@line 554 "xmltok_impl.c"
        var $697=$696+2; //@line 554 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$697; //@line 554 "xmltok_impl.c"
        var $698=HEAP[$ptr_addr_i_i]; //@line 555 "xmltok_impl.c"
        var $699=$end_addr_i_i; //@line 555 "xmltok_impl.c"
        var $700=($698)==($699); //@line 555 "xmltok_impl.c"
        if ($700) { __label__ = 193; break; } else { __label__ = 194; break; } //@line 555 "xmltok_impl.c"
      case 193: // $bb17_i_i
        $14=-1; //@line 556 "xmltok_impl.c"
        __label__ = 298; break; //@line 556 "xmltok_impl.c"
      case 194: // $bb18_i_i
        var $701=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $702=$701; //@line 557 "xmltok_impl.c"
        var $703=HEAP[$702]; //@line 557 "xmltok_impl.c"
        var $704=($703)==0; //@line 557 "xmltok_impl.c"
        if ($704) { __label__ = 195; break; } else { __label__ = 196; break; } //@line 557 "xmltok_impl.c"
      case 195: // $bb19_i_i
        var $705=$enc_addr_i_i; //@line 557 "xmltok_impl.c"
        var $706=$705; //@line 557 "xmltok_impl.c"
        var $707=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $708=$707+1; //@line 557 "xmltok_impl.c"
        var $709=HEAP[$708]; //@line 557 "xmltok_impl.c"
        var $710=($709); //@line 557 "xmltok_impl.c"
        var $711=$706+72; //@line 557 "xmltok_impl.c"
        var $712=$711+$710; //@line 557 "xmltok_impl.c"
        var $713=HEAP[$712]; //@line 557 "xmltok_impl.c"
        var $714=($713); //@line 557 "xmltok_impl.c"
        $iftmp_968_i_i=$714; //@line 557 "xmltok_impl.c"
        __lastLabel__ = 195; __label__ = 203; break; //@line 557 "xmltok_impl.c"
      case 196: // $bb20_i_i
        var $715=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $716=$715+1; //@line 557 "xmltok_impl.c"
        var $717=HEAP[$716]; //@line 557 "xmltok_impl.c"
        var $718=($717); //@line 557 "xmltok_impl.c"
        var $719=HEAP[$ptr_addr_i_i]; //@line 557 "xmltok_impl.c"
        var $720=$719; //@line 557 "xmltok_impl.c"
        var $721=HEAP[$720]; //@line 557 "xmltok_impl.c"
        var $722=($721); //@line 557 "xmltok_impl.c"
        var $723=((($722)) & 255); //@line 557 "xmltok_impl.c"
        var $724=((($718)) & 255); //@line 557 "xmltok_impl.c"
        $hi_addr_i26_i_i=$723;
        $lo_addr_i27_i_i=$724;
        var $725=$hi_addr_i26_i_i; //@line 518 "xmltok.c"
        var $726=($725); //@line 518 "xmltok.c"
        if ($726 == 216) {
          __label__ = 197; break;
        }
        else if ($726 == 217) {
          __label__ = 197; break;
        }
        else if ($726 == 218) {
          __label__ = 197; break;
        }
        else if ($726 == 219) {
          __label__ = 197; break;
        }
        else if ($726 == 220) {
          __label__ = 198; break;
        }
        else if ($726 == 221) {
          __label__ = 198; break;
        }
        else if ($726 == 222) {
          __label__ = 198; break;
        }
        else if ($726 == 223) {
          __label__ = 198; break;
        }
        else if ($726 == 255) {
          __label__ = 199; break;
        }
        else {
        __label__ = 201; break;
        }
        
      case 197: // $bb_i29_i_i
        $10=7; //@line 520 "xmltok.c"
        __label__ = 202; break; //@line 520 "xmltok.c"
      case 198: // $bb1_i30_i_i
        $10=8; //@line 522 "xmltok.c"
        __label__ = 202; break; //@line 522 "xmltok.c"
      case 199: // $bb2_i33_i_i
        var $727=$lo_addr_i27_i_i; //@line 524 "xmltok.c"
        var $728=($727); //@line 524 "xmltok.c"
        var $_off_i31_i_i=($728) + -254;
        var $switch_i32_i_i=($_off_i31_i_i) < 2;
        if ($switch_i32_i_i) { __label__ = 200; break; } else { __label__ = 201; break; }
      case 200: // $bb3_i34_i_i
        $10=0; //@line 527 "xmltok.c"
        __label__ = 202; break; //@line 527 "xmltok.c"
      case 201: // $bb4_i35_i_i
        $10=29; //@line 531 "xmltok.c"
        __label__ = 202; break; //@line 531 "xmltok.c"
      case 202: // $unicode_byte_type_exit37_i_i
        var $729=$10; //@line 520 "xmltok.c"
        $retval_i28_i_i=$729; //@line 520 "xmltok.c"
        var $retval6_i36_i_i=$retval_i28_i_i; //@line 520 "xmltok.c"
        $iftmp_968_i_i=$retval6_i36_i_i; //@line 557 "xmltok_impl.c"
        __lastLabel__ = 202; __label__ = 203; break; //@line 557 "xmltok_impl.c"
      case 203: // $bb21_i_i
        var $730=__lastLabel__ == 202 ? $retval6_i36_i_i : ($714);
        $t_i_i=$730; //@line 557 "xmltok_impl.c"
        var $731=($730)==14; //@line 558 "xmltok_impl.c"
        if ($731) { __label__ = 206; break; } else { __label__ = 204; break; } //@line 558 "xmltok_impl.c"
      case 204: // $bb22_i_i
        var $732=$t_i_i; //@line 560 "xmltok_impl.c"
        if ($732 == 9) {
          __label__ = 192; break;
        }
        else if ($732 == 10) {
          __label__ = 192; break;
        }
        else if ($732 == 21) {
          __label__ = 192; break;
        }
        else {
        __label__ = 205; break;
        }
        
      case 205: // $bb24_i_i
        var $733=HEAP[$ptr_addr_i_i]; //@line 566 "xmltok_impl.c"
        var $734=$nextTokPtr_addr_i_i; //@line 566 "xmltok_impl.c"
        HEAP[$734]=$733; //@line 566 "xmltok_impl.c"
        $14=0; //@line 567 "xmltok_impl.c"
        __label__ = 298; break; //@line 567 "xmltok_impl.c"
      case 206: // $bb25_i_i
        var $735=HEAP[$ptr_addr_i_i]; //@line 578 "xmltok_impl.c"
        var $736=$735+2; //@line 578 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$736; //@line 578 "xmltok_impl.c"
        var $737=HEAP[$ptr_addr_i_i]; //@line 579 "xmltok_impl.c"
        var $738=$end_addr_i_i; //@line 579 "xmltok_impl.c"
        var $739=($737)==($738); //@line 579 "xmltok_impl.c"
        if ($739) { __label__ = 207; break; } else { __label__ = 208; break; } //@line 579 "xmltok_impl.c"
      case 207: // $bb26_i_i
        $14=-1; //@line 580 "xmltok_impl.c"
        __label__ = 298; break; //@line 580 "xmltok_impl.c"
      case 208: // $bb27_i_i
        var $740=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $741=$740; //@line 581 "xmltok_impl.c"
        var $742=HEAP[$741]; //@line 581 "xmltok_impl.c"
        var $743=($742)==0; //@line 581 "xmltok_impl.c"
        if ($743) { __label__ = 209; break; } else { __label__ = 210; break; } //@line 581 "xmltok_impl.c"
      case 209: // $bb28_i_i
        var $744=$enc_addr_i_i; //@line 581 "xmltok_impl.c"
        var $745=$744; //@line 581 "xmltok_impl.c"
        var $746=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $747=$746+1; //@line 581 "xmltok_impl.c"
        var $748=HEAP[$747]; //@line 581 "xmltok_impl.c"
        var $749=($748); //@line 581 "xmltok_impl.c"
        var $750=$745+72; //@line 581 "xmltok_impl.c"
        var $751=$750+$749; //@line 581 "xmltok_impl.c"
        var $752=HEAP[$751]; //@line 581 "xmltok_impl.c"
        var $753=($752); //@line 581 "xmltok_impl.c"
        $iftmp_977_i_i=$753; //@line 581 "xmltok_impl.c"
        __label__ = 217; break; //@line 581 "xmltok_impl.c"
      case 210: // $bb29_i_i
        var $754=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $755=$754+1; //@line 581 "xmltok_impl.c"
        var $756=HEAP[$755]; //@line 581 "xmltok_impl.c"
        var $757=($756); //@line 581 "xmltok_impl.c"
        var $758=HEAP[$ptr_addr_i_i]; //@line 581 "xmltok_impl.c"
        var $759=$758; //@line 581 "xmltok_impl.c"
        var $760=HEAP[$759]; //@line 581 "xmltok_impl.c"
        var $761=($760); //@line 581 "xmltok_impl.c"
        var $762=((($761)) & 255); //@line 581 "xmltok_impl.c"
        var $763=((($757)) & 255); //@line 581 "xmltok_impl.c"
        $hi_addr_i50_i_i=$762;
        $lo_addr_i51_i_i=$763;
        var $764=$hi_addr_i50_i_i; //@line 518 "xmltok.c"
        var $765=($764); //@line 518 "xmltok.c"
        if ($765 == 216) {
          __label__ = 211; break;
        }
        else if ($765 == 217) {
          __label__ = 211; break;
        }
        else if ($765 == 218) {
          __label__ = 211; break;
        }
        else if ($765 == 219) {
          __label__ = 211; break;
        }
        else if ($765 == 220) {
          __label__ = 212; break;
        }
        else if ($765 == 221) {
          __label__ = 212; break;
        }
        else if ($765 == 222) {
          __label__ = 212; break;
        }
        else if ($765 == 223) {
          __label__ = 212; break;
        }
        else if ($765 == 255) {
          __label__ = 213; break;
        }
        else {
        __label__ = 215; break;
        }
        
      case 211: // $bb_i53_i_i
        $8=7; //@line 520 "xmltok.c"
        __label__ = 216; break; //@line 520 "xmltok.c"
      case 212: // $bb1_i54_i_i
        $8=8; //@line 522 "xmltok.c"
        __label__ = 216; break; //@line 522 "xmltok.c"
      case 213: // $bb2_i57_i_i
        var $766=$lo_addr_i51_i_i; //@line 524 "xmltok.c"
        var $767=($766); //@line 524 "xmltok.c"
        var $_off_i55_i_i=($767) + -254;
        var $switch_i56_i_i=($_off_i55_i_i) < 2;
        if ($switch_i56_i_i) { __label__ = 214; break; } else { __label__ = 215; break; }
      case 214: // $bb3_i58_i_i
        $8=0; //@line 527 "xmltok.c"
        __label__ = 216; break; //@line 527 "xmltok.c"
      case 215: // $bb4_i59_i_i
        $8=29; //@line 531 "xmltok.c"
        __label__ = 216; break; //@line 531 "xmltok.c"
      case 216: // $unicode_byte_type_exit61_i_i
        var $768=$8; //@line 520 "xmltok.c"
        $retval_i52_i_i=$768; //@line 520 "xmltok.c"
        var $retval6_i60_i_i=$retval_i52_i_i; //@line 520 "xmltok.c"
        $iftmp_977_i_i=$retval6_i60_i_i; //@line 581 "xmltok_impl.c"
        __label__ = 217; break; //@line 581 "xmltok_impl.c"
      case 217: // $bb30_i_i
        var $769=$iftmp_977_i_i; //@line 581 "xmltok_impl.c"
        $open_i_i=$769; //@line 581 "xmltok_impl.c"
        var $770=$open_i_i; //@line 582 "xmltok_impl.c"
        var $771=($770)==12; //@line 582 "xmltok_impl.c"
        var $772=$open_i_i; //@line 582 "xmltok_impl.c"
        var $773=($772)==13; //@line 582 "xmltok_impl.c"
        var $or_cond_i_i=($771) | ($773);
        if ($or_cond_i_i) { __label__ = 220; break; } else { __label__ = 218; break; } //@line 582 "xmltok_impl.c"
      case 218: // $bb32_i_i
        var $774=$open_i_i; //@line 584 "xmltok_impl.c"
        if ($774 == 9) {
          __label__ = 206; break;
        }
        else if ($774 == 10) {
          __label__ = 206; break;
        }
        else if ($774 == 21) {
          __label__ = 206; break;
        }
        else {
        __label__ = 219; break;
        }
        
      case 219: // $bb34_i_i
        var $775=HEAP[$ptr_addr_i_i]; //@line 590 "xmltok_impl.c"
        var $776=$nextTokPtr_addr_i_i; //@line 590 "xmltok_impl.c"
        HEAP[$776]=$775; //@line 590 "xmltok_impl.c"
        $14=0; //@line 591 "xmltok_impl.c"
        __label__ = 298; break; //@line 591 "xmltok_impl.c"
      case 220: // $bb35_i_i
        var $777=HEAP[$ptr_addr_i_i]; //@line 594 "xmltok_impl.c"
        var $778=$777+2; //@line 594 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$778; //@line 594 "xmltok_impl.c"
        __label__ = 221; break; //@line 594 "xmltok_impl.c"
      case 221: // $bb36_i_i
        var $779=HEAP[$ptr_addr_i_i]; //@line 598 "xmltok_impl.c"
        var $780=$end_addr_i_i; //@line 598 "xmltok_impl.c"
        var $781=($779)==($780); //@line 598 "xmltok_impl.c"
        if ($781) { __label__ = 222; break; } else { __label__ = 223; break; } //@line 598 "xmltok_impl.c"
      case 222: // $bb38_i_i
        $14=-1; //@line 599 "xmltok_impl.c"
        __label__ = 298; break; //@line 599 "xmltok_impl.c"
      case 223: // $bb39_i_i
        var $782=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $783=$782; //@line 600 "xmltok_impl.c"
        var $784=HEAP[$783]; //@line 600 "xmltok_impl.c"
        var $785=($784)==0; //@line 600 "xmltok_impl.c"
        if ($785) { __label__ = 224; break; } else { __label__ = 225; break; } //@line 600 "xmltok_impl.c"
      case 224: // $bb40_i_i
        var $786=$enc_addr_i_i; //@line 600 "xmltok_impl.c"
        var $787=$786; //@line 600 "xmltok_impl.c"
        var $788=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $789=$788+1; //@line 600 "xmltok_impl.c"
        var $790=HEAP[$789]; //@line 600 "xmltok_impl.c"
        var $791=($790); //@line 600 "xmltok_impl.c"
        var $792=$787+72; //@line 600 "xmltok_impl.c"
        var $793=$792+$791; //@line 600 "xmltok_impl.c"
        var $794=HEAP[$793]; //@line 600 "xmltok_impl.c"
        var $795=($794); //@line 600 "xmltok_impl.c"
        $iftmp_986_i_i=$795; //@line 600 "xmltok_impl.c"
        __label__ = 232; break; //@line 600 "xmltok_impl.c"
      case 225: // $bb41_i_i
        var $796=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $797=$796+1; //@line 600 "xmltok_impl.c"
        var $798=HEAP[$797]; //@line 600 "xmltok_impl.c"
        var $799=($798); //@line 600 "xmltok_impl.c"
        var $800=HEAP[$ptr_addr_i_i]; //@line 600 "xmltok_impl.c"
        var $801=$800; //@line 600 "xmltok_impl.c"
        var $802=HEAP[$801]; //@line 600 "xmltok_impl.c"
        var $803=($802); //@line 600 "xmltok_impl.c"
        var $804=((($803)) & 255); //@line 600 "xmltok_impl.c"
        var $805=((($799)) & 255); //@line 600 "xmltok_impl.c"
        $hi_addr_i38_i_i=$804;
        $lo_addr_i39_i_i=$805;
        var $806=$hi_addr_i38_i_i; //@line 518 "xmltok.c"
        var $807=($806); //@line 518 "xmltok.c"
        if ($807 == 216) {
          __label__ = 226; break;
        }
        else if ($807 == 217) {
          __label__ = 226; break;
        }
        else if ($807 == 218) {
          __label__ = 226; break;
        }
        else if ($807 == 219) {
          __label__ = 226; break;
        }
        else if ($807 == 220) {
          __label__ = 227; break;
        }
        else if ($807 == 221) {
          __label__ = 227; break;
        }
        else if ($807 == 222) {
          __label__ = 227; break;
        }
        else if ($807 == 223) {
          __label__ = 227; break;
        }
        else if ($807 == 255) {
          __label__ = 228; break;
        }
        else {
        __label__ = 230; break;
        }
        
      case 226: // $bb_i41_i_i
        $9=7; //@line 520 "xmltok.c"
        __label__ = 231; break; //@line 520 "xmltok.c"
      case 227: // $bb1_i42_i_i
        $9=8; //@line 522 "xmltok.c"
        __label__ = 231; break; //@line 522 "xmltok.c"
      case 228: // $bb2_i45_i_i
        var $808=$lo_addr_i39_i_i; //@line 524 "xmltok.c"
        var $809=($808); //@line 524 "xmltok.c"
        var $_off_i43_i_i=($809) + -254;
        var $switch_i44_i_i=($_off_i43_i_i) < 2;
        if ($switch_i44_i_i) { __label__ = 229; break; } else { __label__ = 230; break; }
      case 229: // $bb3_i46_i_i
        $9=0; //@line 527 "xmltok.c"
        __label__ = 231; break; //@line 527 "xmltok.c"
      case 230: // $bb4_i47_i_i
        $9=29; //@line 531 "xmltok.c"
        __label__ = 231; break; //@line 531 "xmltok.c"
      case 231: // $unicode_byte_type_exit49_i_i
        var $810=$9; //@line 520 "xmltok.c"
        $retval_i40_i_i=$810; //@line 520 "xmltok.c"
        var $retval6_i48_i_i=$retval_i40_i_i; //@line 520 "xmltok.c"
        $iftmp_986_i_i=$retval6_i48_i_i; //@line 600 "xmltok_impl.c"
        __label__ = 232; break; //@line 600 "xmltok_impl.c"
      case 232: // $bb42_i_i
        var $811=$iftmp_986_i_i; //@line 600 "xmltok_impl.c"
        $t37_i_i=$811; //@line 600 "xmltok_impl.c"
        var $812=$t37_i_i; //@line 601 "xmltok_impl.c"
        var $813=$open_i_i; //@line 601 "xmltok_impl.c"
        var $814=($812)==($813); //@line 601 "xmltok_impl.c"
        if ($814) { __label__ = 250; break; } else { __label__ = 233; break; } //@line 601 "xmltok_impl.c"
      case 233: // $bb43_i_i
        var $815=$t37_i_i; //@line 603 "xmltok_impl.c"
        if ($815 == 0) {
          __label__ = 243; break;
        }
        else if ($815 == 1) {
          __label__ = 243; break;
        }
        else if ($815 == 2) {
          __label__ = 248; break;
        }
        else if ($815 == 3) {
          __label__ = 244; break;
        }
        else if ($815 == 5) {
          __label__ = 234; break;
        }
        else if ($815 == 6) {
          __label__ = 237; break;
        }
        else if ($815 == 7) {
          __label__ = 240; break;
        }
        else if ($815 == 8) {
          __label__ = 243; break;
        }
        else {
        __label__ = 249; break;
        }
        
      case 234: // $bb44_i_i
        var $816=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $817=($816); //@line 604 "xmltok_impl.c"
        var $818=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $819=($818); //@line 604 "xmltok_impl.c"
        var $820=($817) - ($819); //@line 604 "xmltok_impl.c"
        var $821=($820) <= 1; //@line 604 "xmltok_impl.c"
        if ($821) { __label__ = 235; break; } else { __label__ = 236; break; } //@line 604 "xmltok_impl.c"
      case 235: // $bb45_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 236: // $bb46_i_i
        var $822=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $823=$822+2; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$823; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 237: // $bb47_i_i
        var $824=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $825=($824); //@line 604 "xmltok_impl.c"
        var $826=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $827=($826); //@line 604 "xmltok_impl.c"
        var $828=($825) - ($827); //@line 604 "xmltok_impl.c"
        var $829=($828) <= 2; //@line 604 "xmltok_impl.c"
        if ($829) { __label__ = 238; break; } else { __label__ = 239; break; } //@line 604 "xmltok_impl.c"
      case 238: // $bb48_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 239: // $bb49_i_i
        var $830=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $831=$830+3; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$831; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 240: // $bb50_i_i
        var $832=$end_addr_i_i; //@line 604 "xmltok_impl.c"
        var $833=($832); //@line 604 "xmltok_impl.c"
        var $834=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $835=($834); //@line 604 "xmltok_impl.c"
        var $836=($833) - ($835); //@line 604 "xmltok_impl.c"
        var $837=($836) <= 3; //@line 604 "xmltok_impl.c"
        if ($837) { __label__ = 241; break; } else { __label__ = 242; break; } //@line 604 "xmltok_impl.c"
      case 241: // $bb51_i_i
        $14=-2; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 242: // $bb52_i_i
        var $838=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $839=$838+4; //@line 604 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$839; //@line 604 "xmltok_impl.c"
        __label__ = 221; break; //@line 604 "xmltok_impl.c"
      case 243: // $bb53_i_i
        var $840=HEAP[$ptr_addr_i_i]; //@line 604 "xmltok_impl.c"
        var $841=$nextTokPtr_addr_i_i; //@line 604 "xmltok_impl.c"
        HEAP[$841]=$840; //@line 604 "xmltok_impl.c"
        $14=0; //@line 604 "xmltok_impl.c"
        __label__ = 298; break; //@line 604 "xmltok_impl.c"
      case 244: // $bb54_i_i
        var $842=HEAP[$ptr_addr_i_i]; //@line 607 "xmltok_impl.c"
        var $843=$842+2; //@line 607 "xmltok_impl.c"
        var $844=$enc_addr_i_i; //@line 607 "xmltok_impl.c"
        var $845=$end_addr_i_i; //@line 607 "xmltok_impl.c"
        var $846=_big2_scanRef($844, $843, $845, $ptr_addr_i_i); //@line 607 "xmltok_impl.c"
        $tok_i_i=$846; //@line 607 "xmltok_impl.c"
        var $847=$tok_i_i; //@line 608 "xmltok_impl.c"
        var $848=($847) <= 0; //@line 608 "xmltok_impl.c"
        if ($848) { __label__ = 245; break; } else { __label__ = 221; break; } //@line 608 "xmltok_impl.c"
      case 245: // $bb55_i_i
        var $849=$tok_i_i; //@line 609 "xmltok_impl.c"
        var $850=($849)==0; //@line 609 "xmltok_impl.c"
        if ($850) { __label__ = 246; break; } else { __label__ = 247; break; } //@line 609 "xmltok_impl.c"
      case 246: // $bb56_i_i
        var $851=HEAP[$ptr_addr_i_i]; //@line 610 "xmltok_impl.c"
        var $852=$nextTokPtr_addr_i_i; //@line 610 "xmltok_impl.c"
        HEAP[$852]=$851; //@line 610 "xmltok_impl.c"
        __label__ = 247; break; //@line 610 "xmltok_impl.c"
      case 247: // $bb57_i_i
        var $853=$tok_i_i; //@line 611 "xmltok_impl.c"
        $14=$853; //@line 611 "xmltok_impl.c"
        __label__ = 298; break; //@line 611 "xmltok_impl.c"
      case 248: // $bb59_i_i
        var $854=HEAP[$ptr_addr_i_i]; //@line 616 "xmltok_impl.c"
        var $855=$nextTokPtr_addr_i_i; //@line 616 "xmltok_impl.c"
        HEAP[$855]=$854; //@line 616 "xmltok_impl.c"
        $14=0; //@line 617 "xmltok_impl.c"
        __label__ = 298; break; //@line 617 "xmltok_impl.c"
      case 249: // $bb60_i_i
        var $856=HEAP[$ptr_addr_i_i]; //@line 619 "xmltok_impl.c"
        var $857=$856+2; //@line 619 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$857; //@line 619 "xmltok_impl.c"
        __label__ = 221; break; //@line 619 "xmltok_impl.c"
      case 250: // $bb62_i_i
        var $858=HEAP[$ptr_addr_i_i]; //@line 623 "xmltok_impl.c"
        var $859=$858+2; //@line 623 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$859; //@line 623 "xmltok_impl.c"
        var $860=HEAP[$ptr_addr_i_i]; //@line 624 "xmltok_impl.c"
        var $861=$end_addr_i_i; //@line 624 "xmltok_impl.c"
        var $862=($860)==($861); //@line 624 "xmltok_impl.c"
        if ($862) { __label__ = 251; break; } else { __label__ = 252; break; } //@line 624 "xmltok_impl.c"
      case 251: // $bb63_i_i
        $14=-1; //@line 625 "xmltok_impl.c"
        __label__ = 298; break; //@line 625 "xmltok_impl.c"
      case 252: // $bb64_i_i
        var $863=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $864=$863; //@line 626 "xmltok_impl.c"
        var $865=HEAP[$864]; //@line 626 "xmltok_impl.c"
        var $866=($865)==0; //@line 626 "xmltok_impl.c"
        if ($866) { __label__ = 253; break; } else { __label__ = 254; break; } //@line 626 "xmltok_impl.c"
      case 253: // $bb65_i_i
        var $867=$enc_addr_i_i; //@line 626 "xmltok_impl.c"
        var $868=$867; //@line 626 "xmltok_impl.c"
        var $869=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $870=$869+1; //@line 626 "xmltok_impl.c"
        var $871=HEAP[$870]; //@line 626 "xmltok_impl.c"
        var $872=($871); //@line 626 "xmltok_impl.c"
        var $873=$868+72; //@line 626 "xmltok_impl.c"
        var $874=$873+$872; //@line 626 "xmltok_impl.c"
        var $875=HEAP[$874]; //@line 626 "xmltok_impl.c"
        var $876=($875); //@line 626 "xmltok_impl.c"
        $iftmp_1014_i_i=$876; //@line 626 "xmltok_impl.c"
        __lastLabel__ = 253; __label__ = 261; break; //@line 626 "xmltok_impl.c"
      case 254: // $bb66_i_i
        var $877=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $878=$877+1; //@line 626 "xmltok_impl.c"
        var $879=HEAP[$878]; //@line 626 "xmltok_impl.c"
        var $880=($879); //@line 626 "xmltok_impl.c"
        var $881=HEAP[$ptr_addr_i_i]; //@line 626 "xmltok_impl.c"
        var $882=$881; //@line 626 "xmltok_impl.c"
        var $883=HEAP[$882]; //@line 626 "xmltok_impl.c"
        var $884=($883); //@line 626 "xmltok_impl.c"
        var $885=((($884)) & 255); //@line 626 "xmltok_impl.c"
        var $886=((($880)) & 255); //@line 626 "xmltok_impl.c"
        $hi_addr_i14_i_i=$885;
        $lo_addr_i15_i_i=$886;
        var $887=$hi_addr_i14_i_i; //@line 518 "xmltok.c"
        var $888=($887); //@line 518 "xmltok.c"
        if ($888 == 216) {
          __label__ = 255; break;
        }
        else if ($888 == 217) {
          __label__ = 255; break;
        }
        else if ($888 == 218) {
          __label__ = 255; break;
        }
        else if ($888 == 219) {
          __label__ = 255; break;
        }
        else if ($888 == 220) {
          __label__ = 256; break;
        }
        else if ($888 == 221) {
          __label__ = 256; break;
        }
        else if ($888 == 222) {
          __label__ = 256; break;
        }
        else if ($888 == 223) {
          __label__ = 256; break;
        }
        else if ($888 == 255) {
          __label__ = 257; break;
        }
        else {
        __label__ = 259; break;
        }
        
      case 255: // $bb_i17_i_i
        $11=7; //@line 520 "xmltok.c"
        __label__ = 260; break; //@line 520 "xmltok.c"
      case 256: // $bb1_i18_i_i
        $11=8; //@line 522 "xmltok.c"
        __label__ = 260; break; //@line 522 "xmltok.c"
      case 257: // $bb2_i21_i_i
        var $889=$lo_addr_i15_i_i; //@line 524 "xmltok.c"
        var $890=($889); //@line 524 "xmltok.c"
        var $_off_i19_i_i=($890) + -254;
        var $switch_i20_i_i=($_off_i19_i_i) < 2;
        if ($switch_i20_i_i) { __label__ = 258; break; } else { __label__ = 259; break; }
      case 258: // $bb3_i22_i_i
        $11=0; //@line 527 "xmltok.c"
        __label__ = 260; break; //@line 527 "xmltok.c"
      case 259: // $bb4_i23_i_i
        $11=29; //@line 531 "xmltok.c"
        __label__ = 260; break; //@line 531 "xmltok.c"
      case 260: // $unicode_byte_type_exit25_i_i
        var $891=$11; //@line 520 "xmltok.c"
        $retval_i16_i_i=$891; //@line 520 "xmltok.c"
        var $retval6_i24_i_i=$retval_i16_i_i; //@line 520 "xmltok.c"
        $iftmp_1014_i_i=$retval6_i24_i_i; //@line 626 "xmltok_impl.c"
        __lastLabel__ = 260; __label__ = 261; break; //@line 626 "xmltok_impl.c"
      case 261: // $bb67_i_i
        var $892=__lastLabel__ == 260 ? $retval6_i24_i_i : ($876);
        if ($892 == 9) {
          __label__ = 263; break;
        }
        else if ($892 == 10) {
          __label__ = 263; break;
        }
        else if ($892 == 11) {
          __label__ = 287; break;
        }
        else if ($892 == 17) {
          __label__ = 288; break;
        }
        else if ($892 == 21) {
          __label__ = 263; break;
        }
        else {
        __label__ = 262; break;
        }
        
      case 262: // $bb71_i_i
        var $893=HEAP[$ptr_addr_i_i]; //@line 636 "xmltok_impl.c"
        var $894=$nextTokPtr_addr_i_i; //@line 636 "xmltok_impl.c"
        HEAP[$894]=$893; //@line 636 "xmltok_impl.c"
        $14=0; //@line 637 "xmltok_impl.c"
        __label__ = 298; break; //@line 637 "xmltok_impl.c"
      case 263: // $bb72_i_i
        var $895=HEAP[$ptr_addr_i_i]; //@line 641 "xmltok_impl.c"
        var $896=$895+2; //@line 641 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$896; //@line 641 "xmltok_impl.c"
        var $897=HEAP[$ptr_addr_i_i]; //@line 642 "xmltok_impl.c"
        var $898=$end_addr_i_i; //@line 642 "xmltok_impl.c"
        var $899=($897)==($898); //@line 642 "xmltok_impl.c"
        if ($899) { __label__ = 264; break; } else { __label__ = 265; break; } //@line 642 "xmltok_impl.c"
      case 264: // $bb73_i_i
        $14=-1; //@line 643 "xmltok_impl.c"
        __label__ = 298; break; //@line 643 "xmltok_impl.c"
      case 265: // $bb74_i_i
        var $900=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $901=$900; //@line 644 "xmltok_impl.c"
        var $902=HEAP[$901]; //@line 644 "xmltok_impl.c"
        var $903=($902)==0; //@line 644 "xmltok_impl.c"
        if ($903) { __label__ = 266; break; } else { __label__ = 267; break; } //@line 644 "xmltok_impl.c"
      case 266: // $bb75_i_i
        var $904=$enc_addr_i_i; //@line 644 "xmltok_impl.c"
        var $905=$904; //@line 644 "xmltok_impl.c"
        var $906=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $907=$906+1; //@line 644 "xmltok_impl.c"
        var $908=HEAP[$907]; //@line 644 "xmltok_impl.c"
        var $909=($908); //@line 644 "xmltok_impl.c"
        var $910=$905+72; //@line 644 "xmltok_impl.c"
        var $911=$910+$909; //@line 644 "xmltok_impl.c"
        var $912=HEAP[$911]; //@line 644 "xmltok_impl.c"
        var $913=($912); //@line 644 "xmltok_impl.c"
        $iftmp_1023_i_i=$913; //@line 644 "xmltok_impl.c"
        __lastLabel__ = 266; __label__ = 274; break; //@line 644 "xmltok_impl.c"
      case 267: // $bb76_i_i
        var $914=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $915=$914+1; //@line 644 "xmltok_impl.c"
        var $916=HEAP[$915]; //@line 644 "xmltok_impl.c"
        var $917=($916); //@line 644 "xmltok_impl.c"
        var $918=HEAP[$ptr_addr_i_i]; //@line 644 "xmltok_impl.c"
        var $919=$918; //@line 644 "xmltok_impl.c"
        var $920=HEAP[$919]; //@line 644 "xmltok_impl.c"
        var $921=($920); //@line 644 "xmltok_impl.c"
        var $922=((($921)) & 255); //@line 644 "xmltok_impl.c"
        var $923=((($917)) & 255); //@line 644 "xmltok_impl.c"
        $hi_addr_i2_i_i=$922;
        $lo_addr_i3_i_i=$923;
        var $924=$hi_addr_i2_i_i; //@line 518 "xmltok.c"
        var $925=($924); //@line 518 "xmltok.c"
        if ($925 == 216) {
          __label__ = 268; break;
        }
        else if ($925 == 217) {
          __label__ = 268; break;
        }
        else if ($925 == 218) {
          __label__ = 268; break;
        }
        else if ($925 == 219) {
          __label__ = 268; break;
        }
        else if ($925 == 220) {
          __label__ = 269; break;
        }
        else if ($925 == 221) {
          __label__ = 269; break;
        }
        else if ($925 == 222) {
          __label__ = 269; break;
        }
        else if ($925 == 223) {
          __label__ = 269; break;
        }
        else if ($925 == 255) {
          __label__ = 270; break;
        }
        else {
        __label__ = 272; break;
        }
        
      case 268: // $bb_i5_i_i
        $12=7; //@line 520 "xmltok.c"
        __label__ = 273; break; //@line 520 "xmltok.c"
      case 269: // $bb1_i6_i_i
        $12=8; //@line 522 "xmltok.c"
        __label__ = 273; break; //@line 522 "xmltok.c"
      case 270: // $bb2_i9_i_i
        var $926=$lo_addr_i3_i_i; //@line 524 "xmltok.c"
        var $927=($926); //@line 524 "xmltok.c"
        var $_off_i7_i_i=($927) + -254;
        var $switch_i8_i_i=($_off_i7_i_i) < 2;
        if ($switch_i8_i_i) { __label__ = 271; break; } else { __label__ = 272; break; }
      case 271: // $bb3_i10_i_i
        $12=0; //@line 527 "xmltok.c"
        __label__ = 273; break; //@line 527 "xmltok.c"
      case 272: // $bb4_i11_i_i
        $12=29; //@line 531 "xmltok.c"
        __label__ = 273; break; //@line 531 "xmltok.c"
      case 273: // $unicode_byte_type_exit13_i_i
        var $928=$12; //@line 520 "xmltok.c"
        $retval_i4_i_i=$928; //@line 520 "xmltok.c"
        var $retval6_i12_i_i=$retval_i4_i_i; //@line 520 "xmltok.c"
        $iftmp_1023_i_i=$retval6_i12_i_i; //@line 644 "xmltok_impl.c"
        __lastLabel__ = 273; __label__ = 274; break; //@line 644 "xmltok_impl.c"
      case 274: // $bb77_i_i
        var $929=__lastLabel__ == 273 ? $retval6_i12_i_i : ($913);
        if ($929 == 5) {
          __label__ = 278; break;
        }
        else if ($929 == 6) {
          __label__ = 281; break;
        }
        else if ($929 == 7) {
          __label__ = 284; break;
        }
        else if ($929 == 9) {
          __label__ = 263; break;
        }
        else if ($929 == 10) {
          __label__ = 263; break;
        }
        else if ($929 == 11) {
          __label__ = 287; break;
        }
        else if ($929 == 17) {
          __label__ = 288; break;
        }
        else if ($929 == 21) {
          __label__ = 263; break;
        }
        else if ($929 == 22) {
          __label__ = 277; break;
        }
        else if ($929 == 24) {
          __label__ = 277; break;
        }
        else if ($929 == 29) {
          __label__ = 275; break;
        }
        else {
        __label__ = 294; break;
        }
        
      case 275: // $bb78_i_i
        var $930=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $931=$930; //@line 645 "xmltok_impl.c"
        var $932=HEAP[$931]; //@line 645 "xmltok_impl.c"
        var $933=($932); //@line 645 "xmltok_impl.c"
        var $934=_nmstrtPages+$933; //@line 645 "xmltok_impl.c"
        var $935=HEAP[$934]; //@line 645 "xmltok_impl.c"
        var $936=($935); //@line 645 "xmltok_impl.c"
        var $937=($936) * 8;
        var $938=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $939=$938+1; //@line 645 "xmltok_impl.c"
        var $940=HEAP[$939]; //@line 645 "xmltok_impl.c"
        var $941=($940) >>> 5; //@line 645 "xmltok_impl.c"
        var $942=($941); //@line 645 "xmltok_impl.c"
        var $943=($942) + ($937); //@line 645 "xmltok_impl.c"
        var $944=_namingBitmap+$943*4; //@line 645 "xmltok_impl.c"
        var $945=HEAP[$944]; //@line 645 "xmltok_impl.c"
        var $946=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $947=$946+1; //@line 645 "xmltok_impl.c"
        var $948=HEAP[$947]; //@line 645 "xmltok_impl.c"
        var $949=($948); //@line 645 "xmltok_impl.c"
        var $950=($949) & 31; //@line 645 "xmltok_impl.c"
        var $951=1 << ($950); //@line 645 "xmltok_impl.c"
        var $952=($951) & ($945); //@line 645 "xmltok_impl.c"
        var $953=($952)==0; //@line 645 "xmltok_impl.c"
        if ($953) { __label__ = 276; break; } else { __label__ = 277; break; } //@line 645 "xmltok_impl.c"
      case 276: // $bb79_i_i
        var $954=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $955=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$955]=$954; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 277: // $bb80_i_i
        var $956=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $957=$956+2; //@line 645 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$957; //@line 645 "xmltok_impl.c"
        __label__ = 296; break; //@line 645 "xmltok_impl.c"
      case 278: // $bb81_i_i
        var $958=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $959=($958); //@line 645 "xmltok_impl.c"
        var $960=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $961=($960); //@line 645 "xmltok_impl.c"
        var $962=($959) - ($961); //@line 645 "xmltok_impl.c"
        var $963=($962) <= 1; //@line 645 "xmltok_impl.c"
        if ($963) { __label__ = 279; break; } else { __label__ = 280; break; } //@line 645 "xmltok_impl.c"
      case 279: // $bb82_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 280: // $bb83_i_i
        var $964=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $965=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$965]=$964; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 281: // $bb84_i_i
        var $966=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $967=($966); //@line 645 "xmltok_impl.c"
        var $968=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $969=($968); //@line 645 "xmltok_impl.c"
        var $970=($967) - ($969); //@line 645 "xmltok_impl.c"
        var $971=($970) <= 2; //@line 645 "xmltok_impl.c"
        if ($971) { __label__ = 282; break; } else { __label__ = 283; break; } //@line 645 "xmltok_impl.c"
      case 282: // $bb85_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 283: // $bb86_i_i
        var $972=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $973=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$973]=$972; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 284: // $bb87_i_i
        var $974=$end_addr_i_i; //@line 645 "xmltok_impl.c"
        var $975=($974); //@line 645 "xmltok_impl.c"
        var $976=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $977=($976); //@line 645 "xmltok_impl.c"
        var $978=($975) - ($977); //@line 645 "xmltok_impl.c"
        var $979=($978) <= 3; //@line 645 "xmltok_impl.c"
        if ($979) { __label__ = 285; break; } else { __label__ = 286; break; } //@line 645 "xmltok_impl.c"
      case 285: // $bb88_i_i
        $14=-2; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 286: // $bb89_i_i
        var $980=HEAP[$ptr_addr_i_i]; //@line 645 "xmltok_impl.c"
        var $981=$nextTokPtr_addr_i_i; //@line 645 "xmltok_impl.c"
        HEAP[$981]=$980; //@line 645 "xmltok_impl.c"
        $14=0; //@line 645 "xmltok_impl.c"
        __label__ = 298; break; //@line 645 "xmltok_impl.c"
      case 287: // $gt_i_i
        var $982=HEAP[$ptr_addr_i_i]; //@line 650 "xmltok_impl.c"
        var $983=$982+2; //@line 650 "xmltok_impl.c"
        var $984=$nextTokPtr_addr_i_i; //@line 650 "xmltok_impl.c"
        HEAP[$984]=$983; //@line 650 "xmltok_impl.c"
        $14=1; //@line 651 "xmltok_impl.c"
        __label__ = 298; break; //@line 651 "xmltok_impl.c"
      case 288: // $sol_i_i
        var $985=HEAP[$ptr_addr_i_i]; //@line 654 "xmltok_impl.c"
        var $986=$985+2; //@line 654 "xmltok_impl.c"
        HEAP[$ptr_addr_i_i]=$986; //@line 654 "xmltok_impl.c"
        var $987=HEAP[$ptr_addr_i_i]; //@line 655 "xmltok_impl.c"
        var $988=$end_addr_i_i; //@line 655 "xmltok_impl.c"
        var $989=($987)==($988); //@line 655 "xmltok_impl.c"
        if ($989) { __label__ = 289; break; } else { __label__ = 290; break; } //@line 655 "xmltok_impl.c"
      case 289: // $bb91_i_i
        $14=-1; //@line 656 "xmltok_impl.c"
        __label__ = 298; break; //@line 656 "xmltok_impl.c"
      case 290: // $bb92_i_i
        var $990=HEAP[$ptr_addr_i_i]; //@line 657 "xmltok_impl.c"
        var $991=$990; //@line 657 "xmltok_impl.c"
        var $992=HEAP[$991]; //@line 657 "xmltok_impl.c"
        var $993=($992)!=0; //@line 657 "xmltok_impl.c"
        if ($993) { __label__ = 292; break; } else { __label__ = 291; break; } //@line 657 "xmltok_impl.c"
      case 291: // $bb93_i_i
        var $994=HEAP[$ptr_addr_i_i]; //@line 657 "xmltok_impl.c"
        var $995=$994+1; //@line 657 "xmltok_impl.c"
        var $996=HEAP[$995]; //@line 657 "xmltok_impl.c"
        var $997=($996)!=62; //@line 657 "xmltok_impl.c"
        if ($997) { __label__ = 292; break; } else { __label__ = 293; break; } //@line 657 "xmltok_impl.c"
      case 292: // $bb94_i_i
        var $998=HEAP[$ptr_addr_i_i]; //@line 658 "xmltok_impl.c"
        var $999=$nextTokPtr_addr_i_i; //@line 658 "xmltok_impl.c"
        HEAP[$999]=$998; //@line 658 "xmltok_impl.c"
        $14=0; //@line 659 "xmltok_impl.c"
        __label__ = 298; break; //@line 659 "xmltok_impl.c"
      case 293: // $bb95_i_i
        var $1000=HEAP[$ptr_addr_i_i]; //@line 661 "xmltok_impl.c"
        var $1001=$1000+2; //@line 661 "xmltok_impl.c"
        var $1002=$nextTokPtr_addr_i_i; //@line 661 "xmltok_impl.c"
        HEAP[$1002]=$1001; //@line 661 "xmltok_impl.c"
        $14=3; //@line 662 "xmltok_impl.c"
        __label__ = 298; break; //@line 662 "xmltok_impl.c"
      case 294: // $bb96_i_i
        var $1003=HEAP[$ptr_addr_i_i]; //@line 664 "xmltok_impl.c"
        var $1004=$nextTokPtr_addr_i_i; //@line 664 "xmltok_impl.c"
        HEAP[$1004]=$1003; //@line 664 "xmltok_impl.c"
        $14=0; //@line 665 "xmltok_impl.c"
        __label__ = 298; break; //@line 665 "xmltok_impl.c"
      case 295: // $bb97_i_i
        var $1005=HEAP[$ptr_addr_i_i]; //@line 672 "xmltok_impl.c"
        var $1006=$nextTokPtr_addr_i_i; //@line 672 "xmltok_impl.c"
        HEAP[$1006]=$1005; //@line 672 "xmltok_impl.c"
        $14=0; //@line 673 "xmltok_impl.c"
        __label__ = 298; break; //@line 673 "xmltok_impl.c"
      case 296: // $bb98_i_i
        var $1007=HEAP[$ptr_addr_i_i]; //@line 529 "xmltok_impl.c"
        var $1008=$end_addr_i_i; //@line 529 "xmltok_impl.c"
        var $1009=($1007)!=($1008); //@line 529 "xmltok_impl.c"
        if ($1009) { __label__ = 170; break; } else { __label__ = 297; break; } //@line 529 "xmltok_impl.c"
      case 297: // $bb99_i_i
        $14=-1; //@line 676 "xmltok_impl.c"
        __label__ = 298; break; //@line 676 "xmltok_impl.c"
      case 298: // $big2_scanAtts_exit_i
        var $1010=$14; //@line 531 "xmltok_impl.c"
        $retval_i1_i=$1010; //@line 531 "xmltok_impl.c"
        var $retval101_i_i=$retval_i1_i; //@line 531 "xmltok_impl.c"
        $16=$retval101_i_i; //@line 754 "xmltok_impl.c"
        __label__ = 322; break; //@line 754 "xmltok_impl.c"
      case 299: // $bb53_i
        var $1011=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $1012=($1011); //@line 742 "xmltok_impl.c"
        var $1013=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1014=($1013); //@line 742 "xmltok_impl.c"
        var $1015=($1012) - ($1014); //@line 742 "xmltok_impl.c"
        var $1016=($1015) <= 1; //@line 742 "xmltok_impl.c"
        if ($1016) { __label__ = 300; break; } else { __label__ = 301; break; } //@line 742 "xmltok_impl.c"
      case 300: // $bb54_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 301: // $bb55_i
        var $1017=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1018=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1017]=$1018; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 302: // $bb56_i
        var $1019=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $1020=($1019); //@line 742 "xmltok_impl.c"
        var $1021=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1022=($1021); //@line 742 "xmltok_impl.c"
        var $1023=($1020) - ($1022); //@line 742 "xmltok_impl.c"
        var $1024=($1023) <= 2; //@line 742 "xmltok_impl.c"
        if ($1024) { __label__ = 303; break; } else { __label__ = 304; break; } //@line 742 "xmltok_impl.c"
      case 303: // $bb57_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 304: // $bb58_i
        var $1025=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1026=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1025]=$1026; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 305: // $bb59_i
        var $1027=$end_addr_i; //@line 742 "xmltok_impl.c"
        var $1028=($1027); //@line 742 "xmltok_impl.c"
        var $1029=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        var $1030=($1029); //@line 742 "xmltok_impl.c"
        var $1031=($1028) - ($1030); //@line 742 "xmltok_impl.c"
        var $1032=($1031) <= 3; //@line 742 "xmltok_impl.c"
        if ($1032) { __label__ = 306; break; } else { __label__ = 307; break; } //@line 742 "xmltok_impl.c"
      case 306: // $bb60_i
        $16=-2; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 307: // $bb61_i
        var $1033=$nextTokPtr_addr_i; //@line 742 "xmltok_impl.c"
        var $1034=$ptr_addr_i; //@line 742 "xmltok_impl.c"
        HEAP[$1033]=$1034; //@line 742 "xmltok_impl.c"
        $16=0; //@line 742 "xmltok_impl.c"
        __label__ = 322; break; //@line 742 "xmltok_impl.c"
      case 308: // $bb64_i
        var $1035=$ptr_addr_i; //@line 748 "xmltok_impl.c"
        var $1036=$1035+2; //@line 748 "xmltok_impl.c"
        $ptr_addr_i=$1036; //@line 748 "xmltok_impl.c"
        __label__ = 310; break; //@line 748 "xmltok_impl.c"
      case 309: // $bb65_i
        var $1037=$nextTokPtr_addr_i; //@line 751 "xmltok_impl.c"
        var $1038=$ptr_addr_i; //@line 751 "xmltok_impl.c"
        HEAP[$1037]=$1038; //@line 751 "xmltok_impl.c"
        $16=0; //@line 752 "xmltok_impl.c"
        __label__ = 322; break; //@line 752 "xmltok_impl.c"
      case 310: // $bb66_i
        var $1039=$ptr_addr_i; //@line 740 "xmltok_impl.c"
        var $1040=$end_addr_i; //@line 740 "xmltok_impl.c"
        var $1041=($1039)!=($1040); //@line 740 "xmltok_impl.c"
        if ($1041) { __label__ = 157; break; } else { __label__ = 311; break; } //@line 740 "xmltok_impl.c"
      case 311: // $bb67_i
        $16=-1; //@line 756 "xmltok_impl.c"
        __label__ = 322; break; //@line 756 "xmltok_impl.c"
      case 312: // $gt_i
        var $1042=$ptr_addr_i; //@line 760 "xmltok_impl.c"
        var $1043=$1042+2; //@line 760 "xmltok_impl.c"
        var $1044=$nextTokPtr_addr_i; //@line 760 "xmltok_impl.c"
        HEAP[$1044]=$1043; //@line 760 "xmltok_impl.c"
        $16=2; //@line 761 "xmltok_impl.c"
        __label__ = 322; break; //@line 761 "xmltok_impl.c"
      case 313: // $sol_i
        var $1045=$ptr_addr_i; //@line 764 "xmltok_impl.c"
        var $1046=$1045+2; //@line 764 "xmltok_impl.c"
        $ptr_addr_i=$1046; //@line 764 "xmltok_impl.c"
        var $1047=$ptr_addr_i; //@line 765 "xmltok_impl.c"
        var $1048=$end_addr_i; //@line 765 "xmltok_impl.c"
        var $1049=($1047)==($1048); //@line 765 "xmltok_impl.c"
        if ($1049) { __label__ = 314; break; } else { __label__ = 315; break; } //@line 765 "xmltok_impl.c"
      case 314: // $bb68_i
        $16=-1; //@line 766 "xmltok_impl.c"
        __label__ = 322; break; //@line 766 "xmltok_impl.c"
      case 315: // $bb69_i
        var $1050=$ptr_addr_i; //@line 767 "xmltok_impl.c"
        var $1051=$1050; //@line 767 "xmltok_impl.c"
        var $1052=HEAP[$1051]; //@line 767 "xmltok_impl.c"
        var $1053=($1052)!=0; //@line 767 "xmltok_impl.c"
        if ($1053) { __label__ = 317; break; } else { __label__ = 316; break; } //@line 767 "xmltok_impl.c"
      case 316: // $bb70_i
        var $1054=$ptr_addr_i; //@line 767 "xmltok_impl.c"
        var $1055=$1054+1; //@line 767 "xmltok_impl.c"
        var $1056=HEAP[$1055]; //@line 767 "xmltok_impl.c"
        var $1057=($1056)!=62; //@line 767 "xmltok_impl.c"
        if ($1057) { __label__ = 317; break; } else { __label__ = 318; break; } //@line 767 "xmltok_impl.c"
      case 317: // $bb71_i
        var $1058=$nextTokPtr_addr_i; //@line 768 "xmltok_impl.c"
        var $1059=$ptr_addr_i; //@line 768 "xmltok_impl.c"
        HEAP[$1058]=$1059; //@line 768 "xmltok_impl.c"
        $16=0; //@line 769 "xmltok_impl.c"
        __label__ = 322; break; //@line 769 "xmltok_impl.c"
      case 318: // $bb72_i
        var $1060=$ptr_addr_i; //@line 771 "xmltok_impl.c"
        var $1061=$1060+2; //@line 771 "xmltok_impl.c"
        var $1062=$nextTokPtr_addr_i; //@line 771 "xmltok_impl.c"
        HEAP[$1062]=$1061; //@line 771 "xmltok_impl.c"
        $16=4; //@line 772 "xmltok_impl.c"
        __label__ = 322; break; //@line 772 "xmltok_impl.c"
      case 319: // $bb73_i
        var $1063=$nextTokPtr_addr_i; //@line 774 "xmltok_impl.c"
        var $1064=$ptr_addr_i; //@line 774 "xmltok_impl.c"
        HEAP[$1063]=$1064; //@line 774 "xmltok_impl.c"
        $16=0; //@line 775 "xmltok_impl.c"
        __label__ = 322; break; //@line 775 "xmltok_impl.c"
      case 320: // $bb74_i
        var $1065=$ptr_addr_i; //@line 716 "xmltok_impl.c"
        var $1066=$end_addr_i; //@line 716 "xmltok_impl.c"
        var $1067=($1065)!=($1066); //@line 716 "xmltok_impl.c"
        if ($1067) { __label__ = 134; break; } else { __label__ = 321; break; } //@line 716 "xmltok_impl.c"
      case 321: // $bb75_i
        $16=-1; //@line 778 "xmltok_impl.c"
        __label__ = 322; break; //@line 778 "xmltok_impl.c"
      case 322: // $big2_scanLt_exit
        var $1068=$16; //@line 689 "xmltok_impl.c"
        $retval_i25=$1068; //@line 689 "xmltok_impl.c"
        var $retval77_i=$retval_i25; //@line 689 "xmltok_impl.c"
        $20=$retval77_i; //@line 798 "xmltok_impl.c"
        __label__ = 392; break; //@line 798 "xmltok_impl.c"
      case 323: // $bb10
        var $1069=$ptr_addr; //@line 800 "xmltok_impl.c"
        var $1070=$1069+2; //@line 800 "xmltok_impl.c"
        var $1071=$enc_addr; //@line 800 "xmltok_impl.c"
        var $1072=$end_addr; //@line 800 "xmltok_impl.c"
        var $1073=$nextTokPtr_addr; //@line 800 "xmltok_impl.c"
        var $1074=_big2_scanRef($1071, $1070, $1072, $1073); //@line 800 "xmltok_impl.c"
        $20=$1074; //@line 800 "xmltok_impl.c"
        __label__ = 392; break; //@line 800 "xmltok_impl.c"
      case 324: // $bb11
        var $1075=$ptr_addr; //@line 802 "xmltok_impl.c"
        var $1076=$1075+2; //@line 802 "xmltok_impl.c"
        $ptr_addr=$1076; //@line 802 "xmltok_impl.c"
        var $1077=$ptr_addr; //@line 803 "xmltok_impl.c"
        var $1078=$end_addr; //@line 803 "xmltok_impl.c"
        var $1079=($1077)==($1078); //@line 803 "xmltok_impl.c"
        if ($1079) { __label__ = 325; break; } else { __label__ = 326; break; } //@line 803 "xmltok_impl.c"
      case 325: // $bb12
        $20=-3; //@line 804 "xmltok_impl.c"
        __label__ = 392; break; //@line 804 "xmltok_impl.c"
      case 326: // $bb13
        var $1080=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1081=$1080; //@line 805 "xmltok_impl.c"
        var $1082=HEAP[$1081]; //@line 805 "xmltok_impl.c"
        var $1083=($1082)==0; //@line 805 "xmltok_impl.c"
        if ($1083) { __label__ = 327; break; } else { __label__ = 328; break; } //@line 805 "xmltok_impl.c"
      case 327: // $bb14
        var $1084=$enc_addr; //@line 805 "xmltok_impl.c"
        var $1085=$1084; //@line 805 "xmltok_impl.c"
        var $1086=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1087=$1086+1; //@line 805 "xmltok_impl.c"
        var $1088=HEAP[$1087]; //@line 805 "xmltok_impl.c"
        var $1089=($1088); //@line 805 "xmltok_impl.c"
        var $1090=$1085+72; //@line 805 "xmltok_impl.c"
        var $1091=$1090+$1089; //@line 805 "xmltok_impl.c"
        var $1092=HEAP[$1091]; //@line 805 "xmltok_impl.c"
        var $1093=($1092)==10; //@line 805 "xmltok_impl.c"
        var $1094=($1093); //@line 805 "xmltok_impl.c"
        $iftmp_1090=$1094; //@line 805 "xmltok_impl.c"
        __lastLabel__ = 327; __label__ = 335; break; //@line 805 "xmltok_impl.c"
      case 328: // $bb15
        var $1095=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1096=$1095+1; //@line 805 "xmltok_impl.c"
        var $1097=HEAP[$1096]; //@line 805 "xmltok_impl.c"
        var $1098=($1097); //@line 805 "xmltok_impl.c"
        var $1099=$ptr_addr; //@line 805 "xmltok_impl.c"
        var $1100=$1099; //@line 805 "xmltok_impl.c"
        var $1101=HEAP[$1100]; //@line 805 "xmltok_impl.c"
        var $1102=($1101); //@line 805 "xmltok_impl.c"
        var $1103=((($1102)) & 255); //@line 805 "xmltok_impl.c"
        var $1104=((($1098)) & 255); //@line 805 "xmltok_impl.c"
        $hi_addr_i13=$1103;
        $lo_addr_i14=$1104;
        var $1105=$hi_addr_i13; //@line 518 "xmltok.c"
        var $1106=($1105); //@line 518 "xmltok.c"
        if ($1106 == 216) {
          __label__ = 329; break;
        }
        else if ($1106 == 217) {
          __label__ = 329; break;
        }
        else if ($1106 == 218) {
          __label__ = 329; break;
        }
        else if ($1106 == 219) {
          __label__ = 329; break;
        }
        else if ($1106 == 220) {
          __label__ = 330; break;
        }
        else if ($1106 == 221) {
          __label__ = 330; break;
        }
        else if ($1106 == 222) {
          __label__ = 330; break;
        }
        else if ($1106 == 223) {
          __label__ = 330; break;
        }
        else if ($1106 == 255) {
          __label__ = 331; break;
        }
        else {
        __label__ = 333; break;
        }
        
      case 329: // $bb_i16
        $17=7; //@line 520 "xmltok.c"
        __label__ = 334; break; //@line 520 "xmltok.c"
      case 330: // $bb1_i17
        $17=8; //@line 522 "xmltok.c"
        __label__ = 334; break; //@line 522 "xmltok.c"
      case 331: // $bb2_i20
        var $1107=$lo_addr_i14; //@line 524 "xmltok.c"
        var $1108=($1107); //@line 524 "xmltok.c"
        var $_off_i18=($1108) + -254;
        var $switch_i19=($_off_i18) < 2;
        if ($switch_i19) { __label__ = 332; break; } else { __label__ = 333; break; }
      case 332: // $bb3_i21
        $17=0; //@line 527 "xmltok.c"
        __label__ = 334; break; //@line 527 "xmltok.c"
      case 333: // $bb4_i22
        $17=29; //@line 531 "xmltok.c"
        __label__ = 334; break; //@line 531 "xmltok.c"
      case 334: // $unicode_byte_type_exit24
        var $1109=$17; //@line 520 "xmltok.c"
        $retval_i15=$1109; //@line 520 "xmltok.c"
        var $retval6_i23=$retval_i15; //@line 520 "xmltok.c"
        var $1110=($retval6_i23)==10; //@line 805 "xmltok_impl.c"
        var $1111=($1110); //@line 805 "xmltok_impl.c"
        $iftmp_1090=$1111; //@line 805 "xmltok_impl.c"
        __lastLabel__ = 334; __label__ = 335; break; //@line 805 "xmltok_impl.c"
      case 335: // $bb16
        var $1112=__lastLabel__ == 334 ? $1111 : ($1094);
        var $toBool17=($1112)!=0; //@line 805 "xmltok_impl.c"
        if ($toBool17) { __label__ = 336; break; } else { __label__ = 337; break; } //@line 805 "xmltok_impl.c"
      case 336: // $bb18
        var $1113=$ptr_addr; //@line 806 "xmltok_impl.c"
        var $1114=$1113+2; //@line 806 "xmltok_impl.c"
        $ptr_addr=$1114; //@line 806 "xmltok_impl.c"
        __label__ = 337; break; //@line 806 "xmltok_impl.c"
      case 337: // $bb19
        var $1115=$nextTokPtr_addr; //@line 807 "xmltok_impl.c"
        var $1116=$ptr_addr; //@line 807 "xmltok_impl.c"
        HEAP[$1115]=$1116; //@line 807 "xmltok_impl.c"
        $20=7; //@line 808 "xmltok_impl.c"
        __label__ = 392; break; //@line 808 "xmltok_impl.c"
      case 338: // $bb20
        var $1117=$ptr_addr; //@line 810 "xmltok_impl.c"
        var $1118=$1117+2; //@line 810 "xmltok_impl.c"
        var $1119=$nextTokPtr_addr; //@line 810 "xmltok_impl.c"
        HEAP[$1119]=$1118; //@line 810 "xmltok_impl.c"
        $20=7; //@line 811 "xmltok_impl.c"
        __label__ = 392; break; //@line 811 "xmltok_impl.c"
      case 339: // $bb21
        var $1120=$ptr_addr; //@line 813 "xmltok_impl.c"
        var $1121=$1120+2; //@line 813 "xmltok_impl.c"
        $ptr_addr=$1121; //@line 813 "xmltok_impl.c"
        var $1122=$ptr_addr; //@line 814 "xmltok_impl.c"
        var $1123=$end_addr; //@line 814 "xmltok_impl.c"
        var $1124=($1122)==($1123); //@line 814 "xmltok_impl.c"
        if ($1124) { __label__ = 340; break; } else { __label__ = 341; break; } //@line 814 "xmltok_impl.c"
      case 340: // $bb22
        $20=-5; //@line 815 "xmltok_impl.c"
        __label__ = 392; break; //@line 815 "xmltok_impl.c"
      case 341: // $bb23
        var $1125=$ptr_addr; //@line 816 "xmltok_impl.c"
        var $1126=$1125; //@line 816 "xmltok_impl.c"
        var $1127=HEAP[$1126]; //@line 816 "xmltok_impl.c"
        var $1128=($1127)!=0; //@line 816 "xmltok_impl.c"
        if ($1128) { __label__ = 390; break; } else { __label__ = 342; break; } //@line 816 "xmltok_impl.c"
      case 342: // $bb24
        var $1129=$ptr_addr; //@line 816 "xmltok_impl.c"
        var $1130=$1129+1; //@line 816 "xmltok_impl.c"
        var $1131=HEAP[$1130]; //@line 816 "xmltok_impl.c"
        var $1132=($1131)!=93; //@line 816 "xmltok_impl.c"
        if ($1132) { __label__ = 390; break; } else { __label__ = 343; break; } //@line 816 "xmltok_impl.c"
      case 343: // $bb25
        var $1133=$ptr_addr; //@line 818 "xmltok_impl.c"
        var $1134=$1133+2; //@line 818 "xmltok_impl.c"
        $ptr_addr=$1134; //@line 818 "xmltok_impl.c"
        var $1135=$ptr_addr; //@line 819 "xmltok_impl.c"
        var $1136=$end_addr; //@line 819 "xmltok_impl.c"
        var $1137=($1135)==($1136); //@line 819 "xmltok_impl.c"
        if ($1137) { __label__ = 344; break; } else { __label__ = 345; break; } //@line 819 "xmltok_impl.c"
      case 344: // $bb26
        $20=-5; //@line 820 "xmltok_impl.c"
        __label__ = 392; break; //@line 820 "xmltok_impl.c"
      case 345: // $bb27
        var $1138=$ptr_addr; //@line 821 "xmltok_impl.c"
        var $1139=$1138; //@line 821 "xmltok_impl.c"
        var $1140=HEAP[$1139]; //@line 821 "xmltok_impl.c"
        var $1141=($1140)!=0; //@line 821 "xmltok_impl.c"
        if ($1141) { __label__ = 347; break; } else { __label__ = 346; break; } //@line 821 "xmltok_impl.c"
      case 346: // $bb28
        var $1142=$ptr_addr; //@line 821 "xmltok_impl.c"
        var $1143=$1142+1; //@line 821 "xmltok_impl.c"
        var $1144=HEAP[$1143]; //@line 821 "xmltok_impl.c"
        var $1145=($1144)!=62; //@line 821 "xmltok_impl.c"
        if ($1145) { __label__ = 347; break; } else { __label__ = 348; break; } //@line 821 "xmltok_impl.c"
      case 347: // $bb29
        var $1146=$ptr_addr; //@line 822 "xmltok_impl.c"
        var $1147=$1146+-2; //@line 822 "xmltok_impl.c"
        $ptr_addr=$1147; //@line 822 "xmltok_impl.c"
        __label__ = 390; break; //@line 822 "xmltok_impl.c"
      case 348: // $bb30
        var $1148=$nextTokPtr_addr; //@line 825 "xmltok_impl.c"
        var $1149=$ptr_addr; //@line 825 "xmltok_impl.c"
        HEAP[$1148]=$1149; //@line 825 "xmltok_impl.c"
        $20=0; //@line 826 "xmltok_impl.c"
        __label__ = 392; break; //@line 826 "xmltok_impl.c"
      case 349: // $bb31
        var $1150=$end_addr; //@line 827 "xmltok_impl.c"
        var $1151=($1150); //@line 827 "xmltok_impl.c"
        var $1152=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1153=($1152); //@line 827 "xmltok_impl.c"
        var $1154=($1151) - ($1153); //@line 827 "xmltok_impl.c"
        var $1155=($1154) <= 1; //@line 827 "xmltok_impl.c"
        if ($1155) { __label__ = 350; break; } else { __label__ = 351; break; } //@line 827 "xmltok_impl.c"
      case 350: // $bb32
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 351: // $bb33
        var $1156=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1157=$1156+2; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1157; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 352: // $bb34
        var $1158=$end_addr; //@line 827 "xmltok_impl.c"
        var $1159=($1158); //@line 827 "xmltok_impl.c"
        var $1160=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1161=($1160); //@line 827 "xmltok_impl.c"
        var $1162=($1159) - ($1161); //@line 827 "xmltok_impl.c"
        var $1163=($1162) <= 2; //@line 827 "xmltok_impl.c"
        if ($1163) { __label__ = 353; break; } else { __label__ = 354; break; } //@line 827 "xmltok_impl.c"
      case 353: // $bb35
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 354: // $bb36
        var $1164=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1165=$1164+3; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1165; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 355: // $bb37
        var $1166=$end_addr; //@line 827 "xmltok_impl.c"
        var $1167=($1166); //@line 827 "xmltok_impl.c"
        var $1168=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1169=($1168); //@line 827 "xmltok_impl.c"
        var $1170=($1167) - ($1169); //@line 827 "xmltok_impl.c"
        var $1171=($1170) <= 3; //@line 827 "xmltok_impl.c"
        if ($1171) { __label__ = 356; break; } else { __label__ = 357; break; } //@line 827 "xmltok_impl.c"
      case 356: // $bb38
        $20=-2; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 357: // $bb39
        var $1172=$ptr_addr; //@line 827 "xmltok_impl.c"
        var $1173=$1172+4; //@line 827 "xmltok_impl.c"
        $ptr_addr=$1173; //@line 827 "xmltok_impl.c"
        __label__ = 390; break; //@line 827 "xmltok_impl.c"
      case 358: // $bb40
        var $1174=$nextTokPtr_addr; //@line 827 "xmltok_impl.c"
        var $1175=$ptr_addr; //@line 827 "xmltok_impl.c"
        HEAP[$1174]=$1175; //@line 827 "xmltok_impl.c"
        $20=0; //@line 827 "xmltok_impl.c"
        __label__ = 392; break; //@line 827 "xmltok_impl.c"
      case 359: // $bb41
        var $1176=$ptr_addr; //@line 829 "xmltok_impl.c"
        var $1177=$1176+2; //@line 829 "xmltok_impl.c"
        $ptr_addr=$1177; //@line 829 "xmltok_impl.c"
        __label__ = 390; break; //@line 829 "xmltok_impl.c"
      case 360: // $bb43
        var $1178=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1179=$1178; //@line 833 "xmltok_impl.c"
        var $1180=HEAP[$1179]; //@line 833 "xmltok_impl.c"
        var $1181=($1180)==0; //@line 833 "xmltok_impl.c"
        if ($1181) { __label__ = 361; break; } else { __label__ = 362; break; } //@line 833 "xmltok_impl.c"
      case 361: // $bb44
        var $1182=$enc_addr; //@line 833 "xmltok_impl.c"
        var $1183=$1182; //@line 833 "xmltok_impl.c"
        var $1184=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1185=$1184+1; //@line 833 "xmltok_impl.c"
        var $1186=HEAP[$1185]; //@line 833 "xmltok_impl.c"
        var $1187=($1186); //@line 833 "xmltok_impl.c"
        var $1188=$1183+72; //@line 833 "xmltok_impl.c"
        var $1189=$1188+$1187; //@line 833 "xmltok_impl.c"
        var $1190=HEAP[$1189]; //@line 833 "xmltok_impl.c"
        var $1191=($1190); //@line 833 "xmltok_impl.c"
        $iftmp_1098=$1191; //@line 833 "xmltok_impl.c"
        __lastLabel__ = 361; __label__ = 369; break; //@line 833 "xmltok_impl.c"
      case 362: // $bb45
        var $1192=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1193=$1192+1; //@line 833 "xmltok_impl.c"
        var $1194=HEAP[$1193]; //@line 833 "xmltok_impl.c"
        var $1195=($1194); //@line 833 "xmltok_impl.c"
        var $1196=$ptr_addr; //@line 833 "xmltok_impl.c"
        var $1197=$1196; //@line 833 "xmltok_impl.c"
        var $1198=HEAP[$1197]; //@line 833 "xmltok_impl.c"
        var $1199=($1198); //@line 833 "xmltok_impl.c"
        var $1200=((($1199)) & 255); //@line 833 "xmltok_impl.c"
        var $1201=((($1195)) & 255); //@line 833 "xmltok_impl.c"
        $hi_addr_i1=$1200;
        $lo_addr_i2=$1201;
        var $1202=$hi_addr_i1; //@line 518 "xmltok.c"
        var $1203=($1202); //@line 518 "xmltok.c"
        if ($1203 == 216) {
          __label__ = 363; break;
        }
        else if ($1203 == 217) {
          __label__ = 363; break;
        }
        else if ($1203 == 218) {
          __label__ = 363; break;
        }
        else if ($1203 == 219) {
          __label__ = 363; break;
        }
        else if ($1203 == 220) {
          __label__ = 364; break;
        }
        else if ($1203 == 221) {
          __label__ = 364; break;
        }
        else if ($1203 == 222) {
          __label__ = 364; break;
        }
        else if ($1203 == 223) {
          __label__ = 364; break;
        }
        else if ($1203 == 255) {
          __label__ = 365; break;
        }
        else {
        __label__ = 367; break;
        }
        
      case 363: // $bb_i4
        $18=7; //@line 520 "xmltok.c"
        __label__ = 368; break; //@line 520 "xmltok.c"
      case 364: // $bb1_i5
        $18=8; //@line 522 "xmltok.c"
        __label__ = 368; break; //@line 522 "xmltok.c"
      case 365: // $bb2_i8
        var $1204=$lo_addr_i2; //@line 524 "xmltok.c"
        var $1205=($1204); //@line 524 "xmltok.c"
        var $_off_i6=($1205) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 366; break; } else { __label__ = 367; break; }
      case 366: // $bb3_i9
        $18=0; //@line 527 "xmltok.c"
        __label__ = 368; break; //@line 527 "xmltok.c"
      case 367: // $bb4_i10
        $18=29; //@line 531 "xmltok.c"
        __label__ = 368; break; //@line 531 "xmltok.c"
      case 368: // $unicode_byte_type_exit12
        var $1206=$18; //@line 520 "xmltok.c"
        $retval_i3=$1206; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1098=$retval6_i11; //@line 833 "xmltok_impl.c"
        __lastLabel__ = 368; __label__ = 369; break; //@line 833 "xmltok_impl.c"
      case 369: // $bb46
        var $1207=__lastLabel__ == 368 ? $retval6_i11 : ($1191);
        if ($1207 == 0) {
          __label__ = 388; break;
        }
        else if ($1207 == 1) {
          __label__ = 388; break;
        }
        else if ($1207 == 2) {
          __label__ = 388; break;
        }
        else if ($1207 == 3) {
          __label__ = 388; break;
        }
        else if ($1207 == 4) {
          __label__ = 379; break;
        }
        else if ($1207 == 5) {
          __label__ = 370; break;
        }
        else if ($1207 == 6) {
          __label__ = 373; break;
        }
        else if ($1207 == 7) {
          __label__ = 376; break;
        }
        else if ($1207 == 8) {
          __label__ = 388; break;
        }
        else if ($1207 == 9) {
          __label__ = 388; break;
        }
        else if ($1207 == 10) {
          __label__ = 388; break;
        }
        else {
        __label__ = 389; break;
        }
        
      case 370: // $bb47
        var $1208=$end_addr; //@line 842 "xmltok_impl.c"
        var $1209=($1208); //@line 842 "xmltok_impl.c"
        var $1210=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1211=($1210); //@line 842 "xmltok_impl.c"
        var $1212=($1209) - ($1211); //@line 842 "xmltok_impl.c"
        var $1213=($1212) <= 1; //@line 842 "xmltok_impl.c"
        if ($1213) { __label__ = 371; break; } else { __label__ = 372; break; } //@line 842 "xmltok_impl.c"
      case 371: // $bb48
        var $1214=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1215=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1214]=$1215; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 372: // $bb49
        var $1216=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1217=$1216+2; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1217; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 373: // $bb50
        var $1218=$end_addr; //@line 842 "xmltok_impl.c"
        var $1219=($1218); //@line 842 "xmltok_impl.c"
        var $1220=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1221=($1220); //@line 842 "xmltok_impl.c"
        var $1222=($1219) - ($1221); //@line 842 "xmltok_impl.c"
        var $1223=($1222) <= 2; //@line 842 "xmltok_impl.c"
        if ($1223) { __label__ = 374; break; } else { __label__ = 375; break; } //@line 842 "xmltok_impl.c"
      case 374: // $bb51
        var $1224=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1225=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1224]=$1225; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 375: // $bb52
        var $1226=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1227=$1226+3; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1227; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 376: // $bb53
        var $1228=$end_addr; //@line 842 "xmltok_impl.c"
        var $1229=($1228); //@line 842 "xmltok_impl.c"
        var $1230=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1231=($1230); //@line 842 "xmltok_impl.c"
        var $1232=($1229) - ($1231); //@line 842 "xmltok_impl.c"
        var $1233=($1232) <= 3; //@line 842 "xmltok_impl.c"
        if ($1233) { __label__ = 377; break; } else { __label__ = 378; break; } //@line 842 "xmltok_impl.c"
      case 377: // $bb54
        var $1234=$nextTokPtr_addr; //@line 842 "xmltok_impl.c"
        var $1235=$ptr_addr; //@line 842 "xmltok_impl.c"
        HEAP[$1234]=$1235; //@line 842 "xmltok_impl.c"
        $20=6; //@line 842 "xmltok_impl.c"
        __label__ = 392; break; //@line 842 "xmltok_impl.c"
      case 378: // $bb55
        var $1236=$ptr_addr; //@line 842 "xmltok_impl.c"
        var $1237=$1236+4; //@line 842 "xmltok_impl.c"
        $ptr_addr=$1237; //@line 842 "xmltok_impl.c"
        __label__ = 390; break; //@line 842 "xmltok_impl.c"
      case 379: // $bb56
        var $1238=$ptr_addr; //@line 845 "xmltok_impl.c"
        var $1239=$1238+2; //@line 845 "xmltok_impl.c"
        var $1240=$end_addr; //@line 845 "xmltok_impl.c"
        var $1241=($1239)!=($1240); //@line 845 "xmltok_impl.c"
        if ($1241) { __label__ = 380; break; } else { __label__ = 388; break; } //@line 845 "xmltok_impl.c"
      case 380: // $bb57
        var $1242=$ptr_addr; //@line 846 "xmltok_impl.c"
        var $1243=$1242+2; //@line 846 "xmltok_impl.c"
        var $1244=$1243; //@line 846 "xmltok_impl.c"
        var $1245=HEAP[$1244]; //@line 846 "xmltok_impl.c"
        var $1246=($1245)!=0; //@line 846 "xmltok_impl.c"
        if ($1246) { __label__ = 382; break; } else { __label__ = 381; break; } //@line 846 "xmltok_impl.c"
      case 381: // $bb58
        var $1247=$ptr_addr; //@line 846 "xmltok_impl.c"
        var $1248=$1247+2; //@line 846 "xmltok_impl.c"
        var $1249=$1248+1; //@line 846 "xmltok_impl.c"
        var $1250=HEAP[$1249]; //@line 846 "xmltok_impl.c"
        var $1251=($1250)!=93; //@line 846 "xmltok_impl.c"
        if ($1251) { __label__ = 382; break; } else { __label__ = 383; break; } //@line 846 "xmltok_impl.c"
      case 382: // $bb59
        var $1252=$ptr_addr; //@line 847 "xmltok_impl.c"
        var $1253=$1252+2; //@line 847 "xmltok_impl.c"
        $ptr_addr=$1253; //@line 847 "xmltok_impl.c"
        __label__ = 390; break; //@line 847 "xmltok_impl.c"
      case 383: // $bb60
        var $1254=$ptr_addr; //@line 850 "xmltok_impl.c"
        var $1255=$1254+4; //@line 850 "xmltok_impl.c"
        var $1256=$end_addr; //@line 850 "xmltok_impl.c"
        var $1257=($1255)!=($1256); //@line 850 "xmltok_impl.c"
        if ($1257) { __label__ = 384; break; } else { __label__ = 388; break; } //@line 850 "xmltok_impl.c"
      case 384: // $bb61
        var $1258=$ptr_addr; //@line 851 "xmltok_impl.c"
        var $1259=$1258+4; //@line 851 "xmltok_impl.c"
        var $1260=$1259; //@line 851 "xmltok_impl.c"
        var $1261=HEAP[$1260]; //@line 851 "xmltok_impl.c"
        var $1262=($1261)!=0; //@line 851 "xmltok_impl.c"
        if ($1262) { __label__ = 386; break; } else { __label__ = 385; break; } //@line 851 "xmltok_impl.c"
      case 385: // $bb62
        var $1263=$ptr_addr; //@line 851 "xmltok_impl.c"
        var $1264=$1263+4; //@line 851 "xmltok_impl.c"
        var $1265=$1264+1; //@line 851 "xmltok_impl.c"
        var $1266=HEAP[$1265]; //@line 851 "xmltok_impl.c"
        var $1267=($1266)!=62; //@line 851 "xmltok_impl.c"
        if ($1267) { __label__ = 386; break; } else { __label__ = 387; break; } //@line 851 "xmltok_impl.c"
      case 386: // $bb63
        var $1268=$ptr_addr; //@line 852 "xmltok_impl.c"
        var $1269=$1268+2; //@line 852 "xmltok_impl.c"
        $ptr_addr=$1269; //@line 852 "xmltok_impl.c"
        __label__ = 390; break; //@line 852 "xmltok_impl.c"
      case 387: // $bb64
        var $1270=$ptr_addr; //@line 855 "xmltok_impl.c"
        var $1271=$1270+4; //@line 855 "xmltok_impl.c"
        var $1272=$nextTokPtr_addr; //@line 855 "xmltok_impl.c"
        HEAP[$1272]=$1271; //@line 855 "xmltok_impl.c"
        $20=0; //@line 856 "xmltok_impl.c"
        __label__ = 392; break; //@line 856 "xmltok_impl.c"
      case 388: // $bb65
        var $1273=$nextTokPtr_addr; //@line 867 "xmltok_impl.c"
        var $1274=$ptr_addr; //@line 867 "xmltok_impl.c"
        HEAP[$1273]=$1274; //@line 867 "xmltok_impl.c"
        $20=6; //@line 868 "xmltok_impl.c"
        __label__ = 392; break; //@line 868 "xmltok_impl.c"
      case 389: // $bb66
        var $1275=$ptr_addr; //@line 870 "xmltok_impl.c"
        var $1276=$1275+2; //@line 870 "xmltok_impl.c"
        $ptr_addr=$1276; //@line 870 "xmltok_impl.c"
        __label__ = 390; break; //@line 870 "xmltok_impl.c"
      case 390: // $bb67
        var $1277=$ptr_addr; //@line 832 "xmltok_impl.c"
        var $1278=$end_addr; //@line 832 "xmltok_impl.c"
        var $1279=($1277)!=($1278); //@line 832 "xmltok_impl.c"
        if ($1279) { __label__ = 360; break; } else { __label__ = 391; break; } //@line 832 "xmltok_impl.c"
      case 391: // $bb68
        var $1280=$nextTokPtr_addr; //@line 874 "xmltok_impl.c"
        var $1281=$ptr_addr; //@line 874 "xmltok_impl.c"
        HEAP[$1280]=$1281; //@line 874 "xmltok_impl.c"
        $20=6; //@line 875 "xmltok_impl.c"
        __label__ = 392; break; //@line 875 "xmltok_impl.c"
      case 392: // $bb69
        var $1282=$20; //@line 786 "xmltok_impl.c"
        $retval=$1282; //@line 786 "xmltok_impl.c"
        var $retval70=$retval; //@line 786 "xmltok_impl.c"
        STACKTOP = __stackBase__;
        return $retval70; //@line 786 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_scanPercent($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1114;
        var $iftmp_1106;
        var $2;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 884 "xmltok_impl.c"
        var $4=$end_addr; //@line 884 "xmltok_impl.c"
        var $5=($3)==($4); //@line 884 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 884 "xmltok_impl.c"
      case 1: // $bb
        $2=-22; //@line 885 "xmltok_impl.c"
        __label__ = 52; break; //@line 885 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $7=$6; //@line 886 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 886 "xmltok_impl.c"
        var $9=($8)==0; //@line 886 "xmltok_impl.c"
        if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 886 "xmltok_impl.c"
      case 3: // $bb2
        var $10=$enc_addr; //@line 886 "xmltok_impl.c"
        var $11=$10; //@line 886 "xmltok_impl.c"
        var $12=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $13=$12+1; //@line 886 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 886 "xmltok_impl.c"
        var $15=($14); //@line 886 "xmltok_impl.c"
        var $16=$11+72; //@line 886 "xmltok_impl.c"
        var $17=$16+$15; //@line 886 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 886 "xmltok_impl.c"
        var $19=($18); //@line 886 "xmltok_impl.c"
        $iftmp_1106=$19; //@line 886 "xmltok_impl.c"
        __lastLabel__ = 3; __label__ = 11; break; //@line 886 "xmltok_impl.c"
      case 4: // $bb3
        var $20=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $21=$20+1; //@line 886 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 886 "xmltok_impl.c"
        var $23=($22); //@line 886 "xmltok_impl.c"
        var $24=$ptr_addr; //@line 886 "xmltok_impl.c"
        var $25=$24; //@line 886 "xmltok_impl.c"
        var $26=HEAP[$25]; //@line 886 "xmltok_impl.c"
        var $27=($26); //@line 886 "xmltok_impl.c"
        var $28=((($27)) & 255); //@line 886 "xmltok_impl.c"
        var $29=((($23)) & 255); //@line 886 "xmltok_impl.c"
        $hi_addr_i=$28;
        $lo_addr_i=$29;
        var $30=$hi_addr_i; //@line 518 "xmltok.c"
        var $31=($30); //@line 518 "xmltok.c"
        if ($31 == 216) {
          __label__ = 5; break;
        }
        else if ($31 == 217) {
          __label__ = 5; break;
        }
        else if ($31 == 218) {
          __label__ = 5; break;
        }
        else if ($31 == 219) {
          __label__ = 5; break;
        }
        else if ($31 == 220) {
          __label__ = 6; break;
        }
        else if ($31 == 221) {
          __label__ = 6; break;
        }
        else if ($31 == 222) {
          __label__ = 6; break;
        }
        else if ($31 == 223) {
          __label__ = 6; break;
        }
        else if ($31 == 255) {
          __label__ = 7; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 5: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 10; break; //@line 520 "xmltok.c"
      case 6: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 10; break; //@line 522 "xmltok.c"
      case 7: // $bb2_i
        var $32=$lo_addr_i; //@line 524 "xmltok.c"
        var $33=($32); //@line 524 "xmltok.c"
        var $_off_i=($33) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 8; break; } else { __label__ = 9; break; }
      case 8: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 10; break; //@line 527 "xmltok.c"
      case 9: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 10; break; //@line 531 "xmltok.c"
      case 10: // $unicode_byte_type_exit
        var $34=$1; //@line 520 "xmltok.c"
        $retval_i=$34; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1106=$retval6_i; //@line 886 "xmltok_impl.c"
        __lastLabel__ = 10; __label__ = 11; break; //@line 886 "xmltok_impl.c"
      case 11: // $bb4
        var $35=__lastLabel__ == 10 ? $retval6_i : ($19);
        if ($35 == 5) {
          __label__ = 15; break;
        }
        else if ($35 == 6) {
          __label__ = 18; break;
        }
        else if ($35 == 7) {
          __label__ = 21; break;
        }
        else if ($35 == 9) {
          __label__ = 24; break;
        }
        else if ($35 == 10) {
          __label__ = 24; break;
        }
        else if ($35 == 21) {
          __label__ = 24; break;
        }
        else if ($35 == 22) {
          __label__ = 14; break;
        }
        else if ($35 == 24) {
          __label__ = 14; break;
        }
        else if ($35 == 29) {
          __label__ = 12; break;
        }
        else if ($35 == 30) {
          __label__ = 24; break;
        }
        else {
        __label__ = 25; break;
        }
        
      case 12: // $bb5
        var $36=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $37=$36; //@line 887 "xmltok_impl.c"
        var $38=HEAP[$37]; //@line 887 "xmltok_impl.c"
        var $39=($38); //@line 887 "xmltok_impl.c"
        var $40=_nmstrtPages+$39; //@line 887 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 887 "xmltok_impl.c"
        var $42=($41); //@line 887 "xmltok_impl.c"
        var $43=($42) * 8;
        var $44=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $45=$44+1; //@line 887 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 887 "xmltok_impl.c"
        var $47=($46) >>> 5; //@line 887 "xmltok_impl.c"
        var $48=($47); //@line 887 "xmltok_impl.c"
        var $49=($48) + ($43); //@line 887 "xmltok_impl.c"
        var $50=_namingBitmap+$49*4; //@line 887 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 887 "xmltok_impl.c"
        var $52=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $53=$52+1; //@line 887 "xmltok_impl.c"
        var $54=HEAP[$53]; //@line 887 "xmltok_impl.c"
        var $55=($54); //@line 887 "xmltok_impl.c"
        var $56=($55) & 31; //@line 887 "xmltok_impl.c"
        var $57=1 << ($56); //@line 887 "xmltok_impl.c"
        var $58=($57) & ($51); //@line 887 "xmltok_impl.c"
        var $59=($58)==0; //@line 887 "xmltok_impl.c"
        if ($59) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 887 "xmltok_impl.c"
      case 13: // $bb6
        var $60=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $61=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$60]=$61; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 14: // $bb7
        var $62=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $63=$62+2; //@line 887 "xmltok_impl.c"
        $ptr_addr=$63; //@line 887 "xmltok_impl.c"
        __label__ = 50; break; //@line 887 "xmltok_impl.c"
      case 15: // $bb8
        var $64=$end_addr; //@line 887 "xmltok_impl.c"
        var $65=($64); //@line 887 "xmltok_impl.c"
        var $66=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $67=($66); //@line 887 "xmltok_impl.c"
        var $68=($65) - ($67); //@line 887 "xmltok_impl.c"
        var $69=($68) <= 1; //@line 887 "xmltok_impl.c"
        if ($69) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 887 "xmltok_impl.c"
      case 16: // $bb9
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 17: // $bb10
        var $70=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $71=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$70]=$71; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 18: // $bb11
        var $72=$end_addr; //@line 887 "xmltok_impl.c"
        var $73=($72); //@line 887 "xmltok_impl.c"
        var $74=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $75=($74); //@line 887 "xmltok_impl.c"
        var $76=($73) - ($75); //@line 887 "xmltok_impl.c"
        var $77=($76) <= 2; //@line 887 "xmltok_impl.c"
        if ($77) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 887 "xmltok_impl.c"
      case 19: // $bb12
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 20: // $bb13
        var $78=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $79=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$78]=$79; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 21: // $bb14
        var $80=$end_addr; //@line 887 "xmltok_impl.c"
        var $81=($80); //@line 887 "xmltok_impl.c"
        var $82=$ptr_addr; //@line 887 "xmltok_impl.c"
        var $83=($82); //@line 887 "xmltok_impl.c"
        var $84=($81) - ($83); //@line 887 "xmltok_impl.c"
        var $85=($84) <= 3; //@line 887 "xmltok_impl.c"
        if ($85) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 887 "xmltok_impl.c"
      case 22: // $bb15
        $2=-2; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 23: // $bb16
        var $86=$nextTokPtr_addr; //@line 887 "xmltok_impl.c"
        var $87=$ptr_addr; //@line 887 "xmltok_impl.c"
        HEAP[$86]=$87; //@line 887 "xmltok_impl.c"
        $2=0; //@line 887 "xmltok_impl.c"
        __label__ = 52; break; //@line 887 "xmltok_impl.c"
      case 24: // $bb17
        var $88=$nextTokPtr_addr; //@line 889 "xmltok_impl.c"
        var $89=$ptr_addr; //@line 889 "xmltok_impl.c"
        HEAP[$88]=$89; //@line 889 "xmltok_impl.c"
        $2=22; //@line 890 "xmltok_impl.c"
        __label__ = 52; break; //@line 890 "xmltok_impl.c"
      case 25: // $bb18
        var $90=$nextTokPtr_addr; //@line 892 "xmltok_impl.c"
        var $91=$ptr_addr; //@line 892 "xmltok_impl.c"
        HEAP[$90]=$91; //@line 892 "xmltok_impl.c"
        $2=0; //@line 893 "xmltok_impl.c"
        __label__ = 52; break; //@line 893 "xmltok_impl.c"
      case 26: // $bb19
        var $92=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $93=$92; //@line 896 "xmltok_impl.c"
        var $94=HEAP[$93]; //@line 896 "xmltok_impl.c"
        var $95=($94)==0; //@line 896 "xmltok_impl.c"
        if ($95) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 896 "xmltok_impl.c"
      case 27: // $bb20
        var $96=$enc_addr; //@line 896 "xmltok_impl.c"
        var $97=$96; //@line 896 "xmltok_impl.c"
        var $98=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $99=$98+1; //@line 896 "xmltok_impl.c"
        var $100=HEAP[$99]; //@line 896 "xmltok_impl.c"
        var $101=($100); //@line 896 "xmltok_impl.c"
        var $102=$97+72; //@line 896 "xmltok_impl.c"
        var $103=$102+$101; //@line 896 "xmltok_impl.c"
        var $104=HEAP[$103]; //@line 896 "xmltok_impl.c"
        var $105=($104); //@line 896 "xmltok_impl.c"
        $iftmp_1114=$105; //@line 896 "xmltok_impl.c"
        __lastLabel__ = 27; __label__ = 35; break; //@line 896 "xmltok_impl.c"
      case 28: // $bb21
        var $106=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $107=$106+1; //@line 896 "xmltok_impl.c"
        var $108=HEAP[$107]; //@line 896 "xmltok_impl.c"
        var $109=($108); //@line 896 "xmltok_impl.c"
        var $110=$ptr_addr; //@line 896 "xmltok_impl.c"
        var $111=$110; //@line 896 "xmltok_impl.c"
        var $112=HEAP[$111]; //@line 896 "xmltok_impl.c"
        var $113=($112); //@line 896 "xmltok_impl.c"
        var $114=((($113)) & 255); //@line 896 "xmltok_impl.c"
        var $115=((($109)) & 255); //@line 896 "xmltok_impl.c"
        $hi_addr_i1=$114;
        $lo_addr_i2=$115;
        var $116=$hi_addr_i1; //@line 518 "xmltok.c"
        var $117=($116); //@line 518 "xmltok.c"
        if ($117 == 216) {
          __label__ = 29; break;
        }
        else if ($117 == 217) {
          __label__ = 29; break;
        }
        else if ($117 == 218) {
          __label__ = 29; break;
        }
        else if ($117 == 219) {
          __label__ = 29; break;
        }
        else if ($117 == 220) {
          __label__ = 30; break;
        }
        else if ($117 == 221) {
          __label__ = 30; break;
        }
        else if ($117 == 222) {
          __label__ = 30; break;
        }
        else if ($117 == 223) {
          __label__ = 30; break;
        }
        else if ($117 == 255) {
          __label__ = 31; break;
        }
        else {
        __label__ = 33; break;
        }
        
      case 29: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 34; break; //@line 520 "xmltok.c"
      case 30: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 34; break; //@line 522 "xmltok.c"
      case 31: // $bb2_i8
        var $118=$lo_addr_i2; //@line 524 "xmltok.c"
        var $119=($118); //@line 524 "xmltok.c"
        var $_off_i6=($119) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 32; break; } else { __label__ = 33; break; }
      case 32: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 34; break; //@line 527 "xmltok.c"
      case 33: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 34; break; //@line 531 "xmltok.c"
      case 34: // $unicode_byte_type_exit12
        var $120=$0; //@line 520 "xmltok.c"
        $retval_i3=$120; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1114=$retval6_i11; //@line 896 "xmltok_impl.c"
        __lastLabel__ = 34; __label__ = 35; break; //@line 896 "xmltok_impl.c"
      case 35: // $bb22
        var $121=__lastLabel__ == 34 ? $retval6_i11 : ($105);
        if ($121 == 5) {
          __label__ = 39; break;
        }
        else if ($121 == 6) {
          __label__ = 42; break;
        }
        else if ($121 == 7) {
          __label__ = 45; break;
        }
        else if ($121 == 18) {
          __label__ = 48; break;
        }
        else if ($121 == 22) {
          __label__ = 38; break;
        }
        else if ($121 == 24) {
          __label__ = 38; break;
        }
        else if ($121 == 25) {
          __label__ = 38; break;
        }
        else if ($121 == 26) {
          __label__ = 38; break;
        }
        else if ($121 == 27) {
          __label__ = 38; break;
        }
        else if ($121 == 29) {
          __label__ = 36; break;
        }
        else {
        __label__ = 49; break;
        }
        
      case 36: // $bb23
        var $122=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $123=$122; //@line 897 "xmltok_impl.c"
        var $124=HEAP[$123]; //@line 897 "xmltok_impl.c"
        var $125=($124); //@line 897 "xmltok_impl.c"
        var $126=_namePages+$125; //@line 897 "xmltok_impl.c"
        var $127=HEAP[$126]; //@line 897 "xmltok_impl.c"
        var $128=($127); //@line 897 "xmltok_impl.c"
        var $129=($128) * 8;
        var $130=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $131=$130+1; //@line 897 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 897 "xmltok_impl.c"
        var $133=($132) >>> 5; //@line 897 "xmltok_impl.c"
        var $134=($133); //@line 897 "xmltok_impl.c"
        var $135=($134) + ($129); //@line 897 "xmltok_impl.c"
        var $136=_namingBitmap+$135*4; //@line 897 "xmltok_impl.c"
        var $137=HEAP[$136]; //@line 897 "xmltok_impl.c"
        var $138=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $139=$138+1; //@line 897 "xmltok_impl.c"
        var $140=HEAP[$139]; //@line 897 "xmltok_impl.c"
        var $141=($140); //@line 897 "xmltok_impl.c"
        var $142=($141) & 31; //@line 897 "xmltok_impl.c"
        var $143=1 << ($142); //@line 897 "xmltok_impl.c"
        var $144=($143) & ($137); //@line 897 "xmltok_impl.c"
        var $145=($144)==0; //@line 897 "xmltok_impl.c"
        if ($145) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 897 "xmltok_impl.c"
      case 37: // $bb24
        var $146=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $147=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$146]=$147; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 38: // $bb25
        var $148=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $149=$148+2; //@line 897 "xmltok_impl.c"
        $ptr_addr=$149; //@line 897 "xmltok_impl.c"
        __label__ = 50; break; //@line 897 "xmltok_impl.c"
      case 39: // $bb26
        var $150=$end_addr; //@line 897 "xmltok_impl.c"
        var $151=($150); //@line 897 "xmltok_impl.c"
        var $152=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $153=($152); //@line 897 "xmltok_impl.c"
        var $154=($151) - ($153); //@line 897 "xmltok_impl.c"
        var $155=($154) <= 1; //@line 897 "xmltok_impl.c"
        if ($155) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 897 "xmltok_impl.c"
      case 40: // $bb27
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 41: // $bb28
        var $156=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $157=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$156]=$157; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 42: // $bb29
        var $158=$end_addr; //@line 897 "xmltok_impl.c"
        var $159=($158); //@line 897 "xmltok_impl.c"
        var $160=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $161=($160); //@line 897 "xmltok_impl.c"
        var $162=($159) - ($161); //@line 897 "xmltok_impl.c"
        var $163=($162) <= 2; //@line 897 "xmltok_impl.c"
        if ($163) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 897 "xmltok_impl.c"
      case 43: // $bb30
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 44: // $bb31
        var $164=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $165=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$164]=$165; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 45: // $bb32
        var $166=$end_addr; //@line 897 "xmltok_impl.c"
        var $167=($166); //@line 897 "xmltok_impl.c"
        var $168=$ptr_addr; //@line 897 "xmltok_impl.c"
        var $169=($168); //@line 897 "xmltok_impl.c"
        var $170=($167) - ($169); //@line 897 "xmltok_impl.c"
        var $171=($170) <= 3; //@line 897 "xmltok_impl.c"
        if ($171) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 897 "xmltok_impl.c"
      case 46: // $bb33
        $2=-2; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 47: // $bb34
        var $172=$nextTokPtr_addr; //@line 897 "xmltok_impl.c"
        var $173=$ptr_addr; //@line 897 "xmltok_impl.c"
        HEAP[$172]=$173; //@line 897 "xmltok_impl.c"
        $2=0; //@line 897 "xmltok_impl.c"
        __label__ = 52; break; //@line 897 "xmltok_impl.c"
      case 48: // $bb35
        var $174=$ptr_addr; //@line 899 "xmltok_impl.c"
        var $175=$174+2; //@line 899 "xmltok_impl.c"
        var $176=$nextTokPtr_addr; //@line 899 "xmltok_impl.c"
        HEAP[$176]=$175; //@line 899 "xmltok_impl.c"
        $2=28; //@line 900 "xmltok_impl.c"
        __label__ = 52; break; //@line 900 "xmltok_impl.c"
      case 49: // $bb36
        var $177=$nextTokPtr_addr; //@line 902 "xmltok_impl.c"
        var $178=$ptr_addr; //@line 902 "xmltok_impl.c"
        HEAP[$177]=$178; //@line 902 "xmltok_impl.c"
        $2=0; //@line 903 "xmltok_impl.c"
        __label__ = 52; break; //@line 903 "xmltok_impl.c"
      case 50: // $bb37
        var $179=$ptr_addr; //@line 895 "xmltok_impl.c"
        var $180=$end_addr; //@line 895 "xmltok_impl.c"
        var $181=($179)!=($180); //@line 895 "xmltok_impl.c"
        if ($181) { __label__ = 26; break; } else { __label__ = 51; break; } //@line 895 "xmltok_impl.c"
      case 51: // $bb38
        $2=-1; //@line 906 "xmltok_impl.c"
        __label__ = 52; break; //@line 906 "xmltok_impl.c"
      case 52: // $bb39
        var $182=$2; //@line 885 "xmltok_impl.c"
        $retval=$182; //@line 885 "xmltok_impl.c"
        var $retval40=$retval; //@line 885 "xmltok_impl.c"
        ;
        return $retval40; //@line 885 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_scanLit($open, $enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $open_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1146;
        var $2;
        var $iftmp_1138;
        var $t;
        $open_addr=$open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        __label__ = 37; break; //@line 941 "xmltok_impl.c"
      case 1: // $bb
        var $3=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $4=$3; //@line 942 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 942 "xmltok_impl.c"
        var $6=($5)==0; //@line 942 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 942 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 942 "xmltok_impl.c"
        var $8=$7; //@line 942 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $10=$9+1; //@line 942 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 942 "xmltok_impl.c"
        var $12=($11); //@line 942 "xmltok_impl.c"
        var $13=$8+72; //@line 942 "xmltok_impl.c"
        var $14=$13+$12; //@line 942 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 942 "xmltok_impl.c"
        var $16=($15); //@line 942 "xmltok_impl.c"
        $iftmp_1138=$16; //@line 942 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 942 "xmltok_impl.c"
      case 3: // $bb2
        var $17=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $18=$17+1; //@line 942 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 942 "xmltok_impl.c"
        var $20=($19); //@line 942 "xmltok_impl.c"
        var $21=$ptr_addr; //@line 942 "xmltok_impl.c"
        var $22=$21; //@line 942 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 942 "xmltok_impl.c"
        var $24=($23); //@line 942 "xmltok_impl.c"
        var $25=((($24)) & 255); //@line 942 "xmltok_impl.c"
        var $26=((($20)) & 255); //@line 942 "xmltok_impl.c"
        $hi_addr_i=$25;
        $lo_addr_i=$26;
        var $27=$hi_addr_i; //@line 518 "xmltok.c"
        var $28=($27); //@line 518 "xmltok.c"
        if ($28 == 216) {
          __label__ = 4; break;
        }
        else if ($28 == 217) {
          __label__ = 4; break;
        }
        else if ($28 == 218) {
          __label__ = 4; break;
        }
        else if ($28 == 219) {
          __label__ = 4; break;
        }
        else if ($28 == 220) {
          __label__ = 5; break;
        }
        else if ($28 == 221) {
          __label__ = 5; break;
        }
        else if ($28 == 222) {
          __label__ = 5; break;
        }
        else if ($28 == 223) {
          __label__ = 5; break;
        }
        else if ($28 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $29=$lo_addr_i; //@line 524 "xmltok.c"
        var $30=($29); //@line 524 "xmltok.c"
        var $_off_i=($30) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $31=$1; //@line 520 "xmltok.c"
        $retval_i=$31; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1138=$retval6_i; //@line 942 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 942 "xmltok_impl.c"
      case 10: // $bb3
        var $32=__lastLabel__ == 9 ? $retval6_i : ($16);
        $t=$32; //@line 942 "xmltok_impl.c"
        if ($32 == 0) {
          __label__ = 20; break;
        }
        else if ($32 == 1) {
          __label__ = 20; break;
        }
        else if ($32 == 5) {
          __label__ = 11; break;
        }
        else if ($32 == 6) {
          __label__ = 14; break;
        }
        else if ($32 == 7) {
          __label__ = 17; break;
        }
        else if ($32 == 8) {
          __label__ = 20; break;
        }
        else if ($32 == 12) {
          __label__ = 21; break;
        }
        else if ($32 == 13) {
          __label__ = 21; break;
        }
        else {
        __label__ = 36; break;
        }
        
      case 11: // $bb4
        var $33=$end_addr; //@line 944 "xmltok_impl.c"
        var $34=($33); //@line 944 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $36=($35); //@line 944 "xmltok_impl.c"
        var $37=($34) - ($36); //@line 944 "xmltok_impl.c"
        var $38=($37) <= 1; //@line 944 "xmltok_impl.c"
        if ($38) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 944 "xmltok_impl.c"
      case 12: // $bb5
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 13: // $bb6
        var $39=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $40=$39+2; //@line 944 "xmltok_impl.c"
        $ptr_addr=$40; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 14: // $bb7
        var $41=$end_addr; //@line 944 "xmltok_impl.c"
        var $42=($41); //@line 944 "xmltok_impl.c"
        var $43=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $44=($43); //@line 944 "xmltok_impl.c"
        var $45=($42) - ($44); //@line 944 "xmltok_impl.c"
        var $46=($45) <= 2; //@line 944 "xmltok_impl.c"
        if ($46) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 944 "xmltok_impl.c"
      case 15: // $bb8
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 16: // $bb9
        var $47=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $48=$47+3; //@line 944 "xmltok_impl.c"
        $ptr_addr=$48; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 17: // $bb10
        var $49=$end_addr; //@line 944 "xmltok_impl.c"
        var $50=($49); //@line 944 "xmltok_impl.c"
        var $51=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $52=($51); //@line 944 "xmltok_impl.c"
        var $53=($50) - ($52); //@line 944 "xmltok_impl.c"
        var $54=($53) <= 3; //@line 944 "xmltok_impl.c"
        if ($54) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 944 "xmltok_impl.c"
      case 18: // $bb11
        $2=-2; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 19: // $bb12
        var $55=$ptr_addr; //@line 944 "xmltok_impl.c"
        var $56=$55+4; //@line 944 "xmltok_impl.c"
        $ptr_addr=$56; //@line 944 "xmltok_impl.c"
        __label__ = 37; break; //@line 944 "xmltok_impl.c"
      case 20: // $bb13
        var $57=$nextTokPtr_addr; //@line 944 "xmltok_impl.c"
        var $58=$ptr_addr; //@line 944 "xmltok_impl.c"
        HEAP[$57]=$58; //@line 944 "xmltok_impl.c"
        $2=0; //@line 944 "xmltok_impl.c"
        __label__ = 39; break; //@line 944 "xmltok_impl.c"
      case 21: // $bb14
        var $59=$ptr_addr; //@line 947 "xmltok_impl.c"
        var $60=$59+2; //@line 947 "xmltok_impl.c"
        $ptr_addr=$60; //@line 947 "xmltok_impl.c"
        var $61=$t; //@line 948 "xmltok_impl.c"
        var $62=$open_addr; //@line 948 "xmltok_impl.c"
        var $63=($61)!=($62); //@line 948 "xmltok_impl.c"
        if ($63) { __label__ = 37; break; } else { __label__ = 22; break; } //@line 948 "xmltok_impl.c"
      case 22: // $bb15
        var $64=$ptr_addr; //@line 950 "xmltok_impl.c"
        var $65=$end_addr; //@line 950 "xmltok_impl.c"
        var $66=($64)==($65); //@line 950 "xmltok_impl.c"
        if ($66) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 950 "xmltok_impl.c"
      case 23: // $bb16
        $2=-27; //@line 951 "xmltok_impl.c"
        __label__ = 39; break; //@line 951 "xmltok_impl.c"
      case 24: // $bb17
        var $67=$nextTokPtr_addr; //@line 952 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 952 "xmltok_impl.c"
        HEAP[$67]=$68; //@line 952 "xmltok_impl.c"
        var $69=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $70=$69; //@line 953 "xmltok_impl.c"
        var $71=HEAP[$70]; //@line 953 "xmltok_impl.c"
        var $72=($71)==0; //@line 953 "xmltok_impl.c"
        if ($72) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 953 "xmltok_impl.c"
      case 25: // $bb18
        var $73=$enc_addr; //@line 953 "xmltok_impl.c"
        var $74=$73; //@line 953 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $76=$75+1; //@line 953 "xmltok_impl.c"
        var $77=HEAP[$76]; //@line 953 "xmltok_impl.c"
        var $78=($77); //@line 953 "xmltok_impl.c"
        var $79=$74+72; //@line 953 "xmltok_impl.c"
        var $80=$79+$78; //@line 953 "xmltok_impl.c"
        var $81=HEAP[$80]; //@line 953 "xmltok_impl.c"
        var $82=($81); //@line 953 "xmltok_impl.c"
        $iftmp_1146=$82; //@line 953 "xmltok_impl.c"
        __lastLabel__ = 25; __label__ = 33; break; //@line 953 "xmltok_impl.c"
      case 26: // $bb19
        var $83=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $84=$83+1; //@line 953 "xmltok_impl.c"
        var $85=HEAP[$84]; //@line 953 "xmltok_impl.c"
        var $86=($85); //@line 953 "xmltok_impl.c"
        var $87=$ptr_addr; //@line 953 "xmltok_impl.c"
        var $88=$87; //@line 953 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 953 "xmltok_impl.c"
        var $90=($89); //@line 953 "xmltok_impl.c"
        var $91=((($90)) & 255); //@line 953 "xmltok_impl.c"
        var $92=((($86)) & 255); //@line 953 "xmltok_impl.c"
        $hi_addr_i1=$91;
        $lo_addr_i2=$92;
        var $93=$hi_addr_i1; //@line 518 "xmltok.c"
        var $94=($93); //@line 518 "xmltok.c"
        if ($94 == 216) {
          __label__ = 27; break;
        }
        else if ($94 == 217) {
          __label__ = 27; break;
        }
        else if ($94 == 218) {
          __label__ = 27; break;
        }
        else if ($94 == 219) {
          __label__ = 27; break;
        }
        else if ($94 == 220) {
          __label__ = 28; break;
        }
        else if ($94 == 221) {
          __label__ = 28; break;
        }
        else if ($94 == 222) {
          __label__ = 28; break;
        }
        else if ($94 == 223) {
          __label__ = 28; break;
        }
        else if ($94 == 255) {
          __label__ = 29; break;
        }
        else {
        __label__ = 31; break;
        }
        
      case 27: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 32; break; //@line 520 "xmltok.c"
      case 28: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 32; break; //@line 522 "xmltok.c"
      case 29: // $bb2_i8
        var $95=$lo_addr_i2; //@line 524 "xmltok.c"
        var $96=($95); //@line 524 "xmltok.c"
        var $_off_i6=($96) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 30; break; } else { __label__ = 31; break; }
      case 30: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 32; break; //@line 527 "xmltok.c"
      case 31: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 32; break; //@line 531 "xmltok.c"
      case 32: // $unicode_byte_type_exit12
        var $97=$0; //@line 520 "xmltok.c"
        $retval_i3=$97; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1146=$retval6_i11; //@line 953 "xmltok_impl.c"
        __lastLabel__ = 32; __label__ = 33; break; //@line 953 "xmltok_impl.c"
      case 33: // $bb20
        var $98=__lastLabel__ == 32 ? $retval6_i11 : ($82);
        if ($98 == 9) {
          __label__ = 34; break;
        }
        else if ($98 == 10) {
          __label__ = 34; break;
        }
        else if ($98 == 11) {
          __label__ = 34; break;
        }
        else if ($98 == 20) {
          __label__ = 34; break;
        }
        else if ($98 == 21) {
          __label__ = 34; break;
        }
        else if ($98 == 30) {
          __label__ = 34; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 34: // $bb21
        $2=27; //@line 956 "xmltok_impl.c"
        __label__ = 39; break; //@line 956 "xmltok_impl.c"
      case 35: // $bb22
        $2=0; //@line 958 "xmltok_impl.c"
        __label__ = 39; break; //@line 958 "xmltok_impl.c"
      case 36: // $bb23
        var $99=$ptr_addr; //@line 961 "xmltok_impl.c"
        var $100=$99+2; //@line 961 "xmltok_impl.c"
        $ptr_addr=$100; //@line 961 "xmltok_impl.c"
        __label__ = 37; break; //@line 961 "xmltok_impl.c"
      case 37: // $bb24
        var $101=$ptr_addr; //@line 941 "xmltok_impl.c"
        var $102=$end_addr; //@line 941 "xmltok_impl.c"
        var $103=($101)!=($102); //@line 941 "xmltok_impl.c"
        if ($103) { __label__ = 1; break; } else { __label__ = 38; break; } //@line 941 "xmltok_impl.c"
      case 38: // $bb25
        $2=-1; //@line 965 "xmltok_impl.c"
        __label__ = 39; break; //@line 965 "xmltok_impl.c"
      case 39: // $bb26
        var $104=$2; //@line 944 "xmltok_impl.c"
        $retval=$104; //@line 944 "xmltok_impl.c"
        var $retval27=$retval; //@line 944 "xmltok_impl.c"
        ;
        return $retval27; //@line 944 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_prologTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i13_i;
        var $lo_addr_i14_i;
        var $retval_i15_i;
        var $0;
        var $hi_addr_i1_i58;
        var $lo_addr_i2_i59;
        var $retval_i3_i60;
        var $1;
        var $hi_addr_i_i61;
        var $lo_addr_i_i62;
        var $retval_i_i63;
        var $2;
        var $enc_addr_i64;
        var $ptr_addr_i65;
        var $end_addr_i66;
        var $nextTokPtr_addr_i67;
        var $retval_i68;
        var $iftmp_843_i;
        var $iftmp_841_i;
        var $iftmp_839_i;
        var $3;
        var $hi_addr_i45;
        var $lo_addr_i46;
        var $retval_i47;
        var $4;
        var $hi_addr_i32;
        var $lo_addr_i33;
        var $retval_i34;
        var $5;
        var $hi_addr_i19;
        var $lo_addr_i20;
        var $retval_i21;
        var $6;
        var $hi_addr_i1_i;
        var $lo_addr_i2_i;
        var $retval_i3_i;
        var $7;
        var $hi_addr_i_i;
        var $lo_addr_i_i;
        var $retval_i_i;
        var $8;
        var $enc_addr_i;
        var $ptr_addr_i;
        var $end_addr_i;
        var $nextTokPtr_addr_i;
        var $retval_i13;
        var $iftmp_1130_i;
        var $iftmp_1122_i;
        var $9;
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $10;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $11;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1165;
        var $iftmp_1157;
        var $iftmp_1155;
        var $iftmp_1153;
        var $iftmp_1151;
        var $12;
        var $tok;
        var $n;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $13=$ptr_addr; //@line 973 "xmltok_impl.c"
        var $14=$end_addr; //@line 973 "xmltok_impl.c"
        var $15=($13)==($14); //@line 973 "xmltok_impl.c"
        if ($15) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 973 "xmltok_impl.c"
      case 1: // $bb
        $12=-4; //@line 974 "xmltok_impl.c"
        __label__ = 230; break; //@line 974 "xmltok_impl.c"
      case 2: // $bb1
        var $16=$end_addr; //@line 976 "xmltok_impl.c"
        var $17=($16); //@line 976 "xmltok_impl.c"
        var $18=$ptr_addr; //@line 976 "xmltok_impl.c"
        var $19=($18); //@line 976 "xmltok_impl.c"
        var $20=($17) - ($19); //@line 976 "xmltok_impl.c"
        $n=$20; //@line 976 "xmltok_impl.c"
        var $21=$n; //@line 977 "xmltok_impl.c"
        var $22=($21) & 1; //@line 977 "xmltok_impl.c"
        var $23=((($22)) & 255); //@line 977 "xmltok_impl.c"
        var $toBool=($23)!=0; //@line 977 "xmltok_impl.c"
        if ($toBool) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 977 "xmltok_impl.c"
      case 3: // $bb2
        var $24=$n; //@line 978 "xmltok_impl.c"
        var $25=($24) & -2; //@line 978 "xmltok_impl.c"
        $n=$25; //@line 978 "xmltok_impl.c"
        var $26=$n; //@line 979 "xmltok_impl.c"
        var $27=($26)==0; //@line 979 "xmltok_impl.c"
        if ($27) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 979 "xmltok_impl.c"
      case 4: // $bb3
        $12=-1; //@line 980 "xmltok_impl.c"
        __label__ = 230; break; //@line 980 "xmltok_impl.c"
      case 5: // $bb4
        var $28=$ptr_addr; //@line 981 "xmltok_impl.c"
        var $29=$n; //@line 981 "xmltok_impl.c"
        var $30=$28+$29; //@line 981 "xmltok_impl.c"
        $end_addr=$30; //@line 981 "xmltok_impl.c"
        __label__ = 6; break; //@line 981 "xmltok_impl.c"
      case 6: // $bb5
        var $31=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $32=$31; //@line 984 "xmltok_impl.c"
        var $33=HEAP[$32]; //@line 984 "xmltok_impl.c"
        var $34=($33)==0; //@line 984 "xmltok_impl.c"
        if ($34) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 984 "xmltok_impl.c"
      case 7: // $bb6
        var $35=$enc_addr; //@line 984 "xmltok_impl.c"
        var $36=$35; //@line 984 "xmltok_impl.c"
        var $37=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $38=$37+1; //@line 984 "xmltok_impl.c"
        var $39=HEAP[$38]; //@line 984 "xmltok_impl.c"
        var $40=($39); //@line 984 "xmltok_impl.c"
        var $41=$36+72; //@line 984 "xmltok_impl.c"
        var $42=$41+$40; //@line 984 "xmltok_impl.c"
        var $43=HEAP[$42]; //@line 984 "xmltok_impl.c"
        var $44=($43); //@line 984 "xmltok_impl.c"
        $iftmp_1151=$44; //@line 984 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 15; break; //@line 984 "xmltok_impl.c"
      case 8: // $bb7
        var $45=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $46=$45+1; //@line 984 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 984 "xmltok_impl.c"
        var $48=($47); //@line 984 "xmltok_impl.c"
        var $49=$ptr_addr; //@line 984 "xmltok_impl.c"
        var $50=$49; //@line 984 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 984 "xmltok_impl.c"
        var $52=($51); //@line 984 "xmltok_impl.c"
        var $53=((($52)) & 255); //@line 984 "xmltok_impl.c"
        var $54=((($48)) & 255); //@line 984 "xmltok_impl.c"
        $hi_addr_i=$53;
        $lo_addr_i=$54;
        var $55=$hi_addr_i; //@line 518 "xmltok.c"
        var $56=($55); //@line 518 "xmltok.c"
        if ($56 == 216) {
          __label__ = 9; break;
        }
        else if ($56 == 217) {
          __label__ = 9; break;
        }
        else if ($56 == 218) {
          __label__ = 9; break;
        }
        else if ($56 == 219) {
          __label__ = 9; break;
        }
        else if ($56 == 220) {
          __label__ = 10; break;
        }
        else if ($56 == 221) {
          __label__ = 10; break;
        }
        else if ($56 == 222) {
          __label__ = 10; break;
        }
        else if ($56 == 223) {
          __label__ = 10; break;
        }
        else if ($56 == 255) {
          __label__ = 11; break;
        }
        else {
        __label__ = 13; break;
        }
        
      case 9: // $bb_i
        $11=7; //@line 520 "xmltok.c"
        __label__ = 14; break; //@line 520 "xmltok.c"
      case 10: // $bb1_i
        $11=8; //@line 522 "xmltok.c"
        __label__ = 14; break; //@line 522 "xmltok.c"
      case 11: // $bb2_i
        var $57=$lo_addr_i; //@line 524 "xmltok.c"
        var $58=($57); //@line 524 "xmltok.c"
        var $_off_i=($58) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 12; break; } else { __label__ = 13; break; }
      case 12: // $bb3_i
        $11=0; //@line 527 "xmltok.c"
        __label__ = 14; break; //@line 527 "xmltok.c"
      case 13: // $bb4_i
        $11=29; //@line 531 "xmltok.c"
        __label__ = 14; break; //@line 531 "xmltok.c"
      case 14: // $unicode_byte_type_exit
        var $59=$11; //@line 520 "xmltok.c"
        $retval_i=$59; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1151=$retval6_i; //@line 984 "xmltok_impl.c"
        __lastLabel__ = 14; __label__ = 15; break; //@line 984 "xmltok_impl.c"
      case 15: // $bb8
        var $60=__lastLabel__ == 14 ? $retval6_i : ($44);
        if ($60 == 2) {
          __label__ = 18; break;
        }
        else if ($60 == 4) {
          __label__ = 97; break;
        }
        else if ($60 == 5) {
          __label__ = 179; break;
        }
        else if ($60 == 6) {
          __label__ = 182; break;
        }
        else if ($60 == 7) {
          __label__ = 185; break;
        }
        else if ($60 == 9) {
          __label__ = 78; break;
        }
        else if ($60 == 10) {
          __label__ = 80; break;
        }
        else if ($60 == 11) {
          __label__ = 126; break;
        }
        else if ($60 == 12) {
          __label__ = 16; break;
        }
        else if ($60 == 13) {
          __label__ = 17; break;
        }
        else if ($60 == 19) {
          __label__ = 127; break;
        }
        else if ($60 == 20) {
          __label__ = 96; break;
        }
        else if ($60 == 21) {
          __label__ = 80; break;
        }
        else if ($60 == 22) {
          __label__ = 188; break;
        }
        else if ($60 == 24) {
          __label__ = 188; break;
        }
        else if ($60 == 25) {
          __label__ = 189; break;
        }
        else if ($60 == 26) {
          __label__ = 189; break;
        }
        else if ($60 == 27) {
          __label__ = 189; break;
        }
        else if ($60 == 29) {
          __label__ = 190; break;
        }
        else if ($60 == 30) {
          __label__ = 94; break;
        }
        else if ($60 == 31) {
          __label__ = 107; break;
        }
        else if ($60 == 32) {
          __label__ = 108; break;
        }
        else if ($60 == 35) {
          __label__ = 95; break;
        }
        else if ($60 == 36) {
          __label__ = 125; break;
        }
        else {
        __label__ = 194; break;
        }
        
      case 16: // $bb9
        var $61=$ptr_addr; //@line 986 "xmltok_impl.c"
        var $62=$61+2; //@line 986 "xmltok_impl.c"
        var $63=$enc_addr; //@line 986 "xmltok_impl.c"
        var $64=$end_addr; //@line 986 "xmltok_impl.c"
        var $65=$nextTokPtr_addr; //@line 986 "xmltok_impl.c"
        var $66=_big2_scanLit(12, $63, $62, $64, $65); //@line 986 "xmltok_impl.c"
        $12=$66; //@line 986 "xmltok_impl.c"
        __label__ = 230; break; //@line 986 "xmltok_impl.c"
      case 17: // $bb10
        var $67=$ptr_addr; //@line 988 "xmltok_impl.c"
        var $68=$67+2; //@line 988 "xmltok_impl.c"
        var $69=$enc_addr; //@line 988 "xmltok_impl.c"
        var $70=$end_addr; //@line 988 "xmltok_impl.c"
        var $71=$nextTokPtr_addr; //@line 988 "xmltok_impl.c"
        var $72=_big2_scanLit(13, $69, $68, $70, $71); //@line 988 "xmltok_impl.c"
        $12=$72; //@line 988 "xmltok_impl.c"
        __label__ = 230; break; //@line 988 "xmltok_impl.c"
      case 18: // $bb11
        var $73=$ptr_addr; //@line 991 "xmltok_impl.c"
        var $74=$73+2; //@line 991 "xmltok_impl.c"
        $ptr_addr=$74; //@line 991 "xmltok_impl.c"
        var $75=$ptr_addr; //@line 992 "xmltok_impl.c"
        var $76=$end_addr; //@line 992 "xmltok_impl.c"
        var $77=($75)==($76); //@line 992 "xmltok_impl.c"
        if ($77) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 992 "xmltok_impl.c"
      case 19: // $bb12
        $12=-1; //@line 993 "xmltok_impl.c"
        __label__ = 230; break; //@line 993 "xmltok_impl.c"
      case 20: // $bb13
        var $78=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $79=$78; //@line 994 "xmltok_impl.c"
        var $80=HEAP[$79]; //@line 994 "xmltok_impl.c"
        var $81=($80)==0; //@line 994 "xmltok_impl.c"
        if ($81) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 994 "xmltok_impl.c"
      case 21: // $bb14
        var $82=$enc_addr; //@line 994 "xmltok_impl.c"
        var $83=$82; //@line 994 "xmltok_impl.c"
        var $84=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $85=$84+1; //@line 994 "xmltok_impl.c"
        var $86=HEAP[$85]; //@line 994 "xmltok_impl.c"
        var $87=($86); //@line 994 "xmltok_impl.c"
        var $88=$83+72; //@line 994 "xmltok_impl.c"
        var $89=$88+$87; //@line 994 "xmltok_impl.c"
        var $90=HEAP[$89]; //@line 994 "xmltok_impl.c"
        var $91=($90); //@line 994 "xmltok_impl.c"
        $iftmp_1153=$91; //@line 994 "xmltok_impl.c"
        __lastLabel__ = 21; __label__ = 29; break; //@line 994 "xmltok_impl.c"
      case 22: // $bb15
        var $92=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $93=$92+1; //@line 994 "xmltok_impl.c"
        var $94=HEAP[$93]; //@line 994 "xmltok_impl.c"
        var $95=($94); //@line 994 "xmltok_impl.c"
        var $96=$ptr_addr; //@line 994 "xmltok_impl.c"
        var $97=$96; //@line 994 "xmltok_impl.c"
        var $98=HEAP[$97]; //@line 994 "xmltok_impl.c"
        var $99=($98); //@line 994 "xmltok_impl.c"
        var $100=((($99)) & 255); //@line 994 "xmltok_impl.c"
        var $101=((($95)) & 255); //@line 994 "xmltok_impl.c"
        $hi_addr_i32=$100;
        $lo_addr_i33=$101;
        var $102=$hi_addr_i32; //@line 518 "xmltok.c"
        var $103=($102); //@line 518 "xmltok.c"
        if ($103 == 216) {
          __label__ = 23; break;
        }
        else if ($103 == 217) {
          __label__ = 23; break;
        }
        else if ($103 == 218) {
          __label__ = 23; break;
        }
        else if ($103 == 219) {
          __label__ = 23; break;
        }
        else if ($103 == 220) {
          __label__ = 24; break;
        }
        else if ($103 == 221) {
          __label__ = 24; break;
        }
        else if ($103 == 222) {
          __label__ = 24; break;
        }
        else if ($103 == 223) {
          __label__ = 24; break;
        }
        else if ($103 == 255) {
          __label__ = 25; break;
        }
        else {
        __label__ = 27; break;
        }
        
      case 23: // $bb_i35
        $5=7; //@line 520 "xmltok.c"
        __label__ = 28; break; //@line 520 "xmltok.c"
      case 24: // $bb1_i36
        $5=8; //@line 522 "xmltok.c"
        __label__ = 28; break; //@line 522 "xmltok.c"
      case 25: // $bb2_i39
        var $104=$lo_addr_i33; //@line 524 "xmltok.c"
        var $105=($104); //@line 524 "xmltok.c"
        var $_off_i37=($105) + -254;
        var $switch_i38=($_off_i37) < 2;
        if ($switch_i38) { __label__ = 26; break; } else { __label__ = 27; break; }
      case 26: // $bb3_i40
        $5=0; //@line 527 "xmltok.c"
        __label__ = 28; break; //@line 527 "xmltok.c"
      case 27: // $bb4_i41
        $5=29; //@line 531 "xmltok.c"
        __label__ = 28; break; //@line 531 "xmltok.c"
      case 28: // $unicode_byte_type_exit44
        var $106=$5; //@line 520 "xmltok.c"
        $retval_i34=$106; //@line 520 "xmltok.c"
        var $retval6_i42=$retval_i34; //@line 520 "xmltok.c"
        $iftmp_1153=$retval6_i42; //@line 994 "xmltok_impl.c"
        __lastLabel__ = 28; __label__ = 29; break; //@line 994 "xmltok_impl.c"
      case 29: // $bb16
        var $107=__lastLabel__ == 28 ? $retval6_i42 : ($91);
        if ($107 == 5) {
          __label__ = 76; break;
        }
        else if ($107 == 6) {
          __label__ = 76; break;
        }
        else if ($107 == 7) {
          __label__ = 76; break;
        }
        else if ($107 == 15) {
          __label__ = 75; break;
        }
        else if ($107 == 16) {
          __label__ = 30; break;
        }
        else if ($107 == 22) {
          __label__ = 76; break;
        }
        else if ($107 == 24) {
          __label__ = 76; break;
        }
        else if ($107 == 29) {
          __label__ = 76; break;
        }
        else {
        __label__ = 77; break;
        }
        
      case 30: // $bb17
        var $108=$ptr_addr; //@line 996 "xmltok_impl.c"
        var $109=$108+2; //@line 996 "xmltok_impl.c"
        var $110=$enc_addr; //@line 996 "xmltok_impl.c"
        var $111=$end_addr; //@line 996 "xmltok_impl.c"
        var $112=$nextTokPtr_addr; //@line 996 "xmltok_impl.c"
        $enc_addr_i64=$110;
        $ptr_addr_i65=$109;
        $end_addr_i66=$111;
        $nextTokPtr_addr_i67=$112;
        var $113=$ptr_addr_i65; //@line 131 "xmltok_impl.c"
        var $114=$end_addr_i66; //@line 131 "xmltok_impl.c"
        var $115=($113)==($114); //@line 131 "xmltok_impl.c"
        if ($115) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 131 "xmltok_impl.c"
      case 31: // $bb_i69
        $3=-1; //@line 132 "xmltok_impl.c"
        __label__ = 74; break; //@line 132 "xmltok_impl.c"
      case 32: // $bb1_i70
        var $116=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $117=$116; //@line 133 "xmltok_impl.c"
        var $118=HEAP[$117]; //@line 133 "xmltok_impl.c"
        var $119=($118)==0; //@line 133 "xmltok_impl.c"
        if ($119) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 133 "xmltok_impl.c"
      case 33: // $bb2_i71
        var $120=$enc_addr_i64; //@line 133 "xmltok_impl.c"
        var $121=$120; //@line 133 "xmltok_impl.c"
        var $122=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $123=$122+1; //@line 133 "xmltok_impl.c"
        var $124=HEAP[$123]; //@line 133 "xmltok_impl.c"
        var $125=($124); //@line 133 "xmltok_impl.c"
        var $126=$121+72; //@line 133 "xmltok_impl.c"
        var $127=$126+$125; //@line 133 "xmltok_impl.c"
        var $128=HEAP[$127]; //@line 133 "xmltok_impl.c"
        var $129=($128); //@line 133 "xmltok_impl.c"
        $iftmp_839_i=$129; //@line 133 "xmltok_impl.c"
        __lastLabel__ = 33; __label__ = 41; break; //@line 133 "xmltok_impl.c"
      case 34: // $bb3_i72
        var $130=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $131=$130+1; //@line 133 "xmltok_impl.c"
        var $132=HEAP[$131]; //@line 133 "xmltok_impl.c"
        var $133=($132); //@line 133 "xmltok_impl.c"
        var $134=$ptr_addr_i65; //@line 133 "xmltok_impl.c"
        var $135=$134; //@line 133 "xmltok_impl.c"
        var $136=HEAP[$135]; //@line 133 "xmltok_impl.c"
        var $137=($136); //@line 133 "xmltok_impl.c"
        var $138=((($137)) & 255); //@line 133 "xmltok_impl.c"
        var $139=((($133)) & 255); //@line 133 "xmltok_impl.c"
        $hi_addr_i_i61=$138;
        $lo_addr_i_i62=$139;
        var $140=$hi_addr_i_i61; //@line 518 "xmltok.c"
        var $141=($140); //@line 518 "xmltok.c"
        if ($141 == 216) {
          __label__ = 35; break;
        }
        else if ($141 == 217) {
          __label__ = 35; break;
        }
        else if ($141 == 218) {
          __label__ = 35; break;
        }
        else if ($141 == 219) {
          __label__ = 35; break;
        }
        else if ($141 == 220) {
          __label__ = 36; break;
        }
        else if ($141 == 221) {
          __label__ = 36; break;
        }
        else if ($141 == 222) {
          __label__ = 36; break;
        }
        else if ($141 == 223) {
          __label__ = 36; break;
        }
        else if ($141 == 255) {
          __label__ = 37; break;
        }
        else {
        __label__ = 39; break;
        }
        
      case 35: // $bb_i_i73
        $2=7; //@line 520 "xmltok.c"
        __label__ = 40; break; //@line 520 "xmltok.c"
      case 36: // $bb1_i_i74
        $2=8; //@line 522 "xmltok.c"
        __label__ = 40; break; //@line 522 "xmltok.c"
      case 37: // $bb2_i_i77
        var $142=$lo_addr_i_i62; //@line 524 "xmltok.c"
        var $143=($142); //@line 524 "xmltok.c"
        var $_off_i_i75=($143) + -254;
        var $switch_i_i76=($_off_i_i75) < 2;
        if ($switch_i_i76) { __label__ = 38; break; } else { __label__ = 39; break; }
      case 38: // $bb3_i_i78
        $2=0; //@line 527 "xmltok.c"
        __label__ = 40; break; //@line 527 "xmltok.c"
      case 39: // $bb4_i_i79
        $2=29; //@line 531 "xmltok.c"
        __label__ = 40; break; //@line 531 "xmltok.c"
      case 40: // $unicode_byte_type_exit_i81
        var $144=$2; //@line 520 "xmltok.c"
        $retval_i_i63=$144; //@line 520 "xmltok.c"
        var $retval6_i_i80=$retval_i_i63; //@line 520 "xmltok.c"
        $iftmp_839_i=$retval6_i_i80; //@line 133 "xmltok_impl.c"
        __lastLabel__ = 40; __label__ = 41; break; //@line 133 "xmltok_impl.c"
      case 41: // $bb4_i82
        var $145=__lastLabel__ == 40 ? $retval6_i_i80 : ($129);
        if ($145 == 20) {
          __label__ = 43; break;
        }
        else if ($145 == 22) {
          __label__ = 44; break;
        }
        else if ($145 == 24) {
          __label__ = 44; break;
        }
        else if ($145 == 27) {
          __label__ = 42; break;
        }
        else {
        __label__ = 45; break;
        }
        
      case 42: // $bb5_i83
        var $146=$ptr_addr_i65; //@line 135 "xmltok_impl.c"
        var $147=$146+2; //@line 135 "xmltok_impl.c"
        var $148=$enc_addr_i64; //@line 135 "xmltok_impl.c"
        var $149=$end_addr_i66; //@line 135 "xmltok_impl.c"
        var $150=$nextTokPtr_addr_i67; //@line 135 "xmltok_impl.c"
        var $151=_big2_scanComment($148, $147, $149, $150); //@line 135 "xmltok_impl.c"
        $3=$151; //@line 135 "xmltok_impl.c"
        __label__ = 74; break; //@line 135 "xmltok_impl.c"
      case 43: // $bb6_i84
        var $152=$ptr_addr_i65; //@line 137 "xmltok_impl.c"
        var $153=$152+2; //@line 137 "xmltok_impl.c"
        var $154=$nextTokPtr_addr_i67; //@line 137 "xmltok_impl.c"
        HEAP[$154]=$153; //@line 137 "xmltok_impl.c"
        $3=33; //@line 138 "xmltok_impl.c"
        __label__ = 74; break; //@line 138 "xmltok_impl.c"
      case 44: // $bb7_i85
        var $155=$ptr_addr_i65; //@line 141 "xmltok_impl.c"
        var $156=$155+2; //@line 141 "xmltok_impl.c"
        $ptr_addr_i65=$156; //@line 141 "xmltok_impl.c"
        __label__ = 72; break; //@line 141 "xmltok_impl.c"
      case 45: // $bb8_i86
        var $157=$nextTokPtr_addr_i67; //@line 144 "xmltok_impl.c"
        var $158=$ptr_addr_i65; //@line 144 "xmltok_impl.c"
        HEAP[$157]=$158; //@line 144 "xmltok_impl.c"
        $3=0; //@line 145 "xmltok_impl.c"
        __label__ = 74; break; //@line 145 "xmltok_impl.c"
      case 46: // $bb9_i87
        var $159=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $160=$159; //@line 148 "xmltok_impl.c"
        var $161=HEAP[$160]; //@line 148 "xmltok_impl.c"
        var $162=($161)==0; //@line 148 "xmltok_impl.c"
        if ($162) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 148 "xmltok_impl.c"
      case 47: // $bb10_i88
        var $163=$enc_addr_i64; //@line 148 "xmltok_impl.c"
        var $164=$163; //@line 148 "xmltok_impl.c"
        var $165=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $166=$165+1; //@line 148 "xmltok_impl.c"
        var $167=HEAP[$166]; //@line 148 "xmltok_impl.c"
        var $168=($167); //@line 148 "xmltok_impl.c"
        var $169=$164+72; //@line 148 "xmltok_impl.c"
        var $170=$169+$168; //@line 148 "xmltok_impl.c"
        var $171=HEAP[$170]; //@line 148 "xmltok_impl.c"
        var $172=($171); //@line 148 "xmltok_impl.c"
        $iftmp_841_i=$172; //@line 148 "xmltok_impl.c"
        __lastLabel__ = 47; __label__ = 55; break; //@line 148 "xmltok_impl.c"
      case 48: // $bb11_i89
        var $173=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $174=$173+1; //@line 148 "xmltok_impl.c"
        var $175=HEAP[$174]; //@line 148 "xmltok_impl.c"
        var $176=($175); //@line 148 "xmltok_impl.c"
        var $177=$ptr_addr_i65; //@line 148 "xmltok_impl.c"
        var $178=$177; //@line 148 "xmltok_impl.c"
        var $179=HEAP[$178]; //@line 148 "xmltok_impl.c"
        var $180=($179); //@line 148 "xmltok_impl.c"
        var $181=((($180)) & 255); //@line 148 "xmltok_impl.c"
        var $182=((($176)) & 255); //@line 148 "xmltok_impl.c"
        $hi_addr_i13_i=$181;
        $lo_addr_i14_i=$182;
        var $183=$hi_addr_i13_i; //@line 518 "xmltok.c"
        var $184=($183); //@line 518 "xmltok.c"
        if ($184 == 216) {
          __label__ = 49; break;
        }
        else if ($184 == 217) {
          __label__ = 49; break;
        }
        else if ($184 == 218) {
          __label__ = 49; break;
        }
        else if ($184 == 219) {
          __label__ = 49; break;
        }
        else if ($184 == 220) {
          __label__ = 50; break;
        }
        else if ($184 == 221) {
          __label__ = 50; break;
        }
        else if ($184 == 222) {
          __label__ = 50; break;
        }
        else if ($184 == 223) {
          __label__ = 50; break;
        }
        else if ($184 == 255) {
          __label__ = 51; break;
        }
        else {
        __label__ = 53; break;
        }
        
      case 49: // $bb_i16_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 54; break; //@line 520 "xmltok.c"
      case 50: // $bb1_i17_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 54; break; //@line 522 "xmltok.c"
      case 51: // $bb2_i20_i
        var $185=$lo_addr_i14_i; //@line 524 "xmltok.c"
        var $186=($185); //@line 524 "xmltok.c"
        var $_off_i18_i=($186) + -254;
        var $switch_i19_i=($_off_i18_i) < 2;
        if ($switch_i19_i) { __label__ = 52; break; } else { __label__ = 53; break; }
      case 52: // $bb3_i21_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 54; break; //@line 527 "xmltok.c"
      case 53: // $bb4_i22_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 54; break; //@line 531 "xmltok.c"
      case 54: // $unicode_byte_type_exit24_i
        var $187=$0; //@line 520 "xmltok.c"
        $retval_i15_i=$187; //@line 520 "xmltok.c"
        var $retval6_i23_i=$retval_i15_i; //@line 520 "xmltok.c"
        $iftmp_841_i=$retval6_i23_i; //@line 148 "xmltok_impl.c"
        __lastLabel__ = 54; __label__ = 55; break; //@line 148 "xmltok_impl.c"
      case 55: // $bb12_i90
        var $188=__lastLabel__ == 54 ? $retval6_i23_i : ($172);
        if ($188 == 9) {
          __label__ = 69; break;
        }
        else if ($188 == 10) {
          __label__ = 69; break;
        }
        else if ($188 == 21) {
          __label__ = 69; break;
        }
        else if ($188 == 22) {
          __label__ = 70; break;
        }
        else if ($188 == 24) {
          __label__ = 70; break;
        }
        else if ($188 == 30) {
          __label__ = 56; break;
        }
        else {
        __label__ = 71; break;
        }
        
      case 56: // $bb13_i91
        var $189=$ptr_addr_i65; //@line 150 "xmltok_impl.c"
        var $190=$189+2; //@line 150 "xmltok_impl.c"
        var $191=$end_addr_i66; //@line 150 "xmltok_impl.c"
        var $192=($190)==($191); //@line 150 "xmltok_impl.c"
        if ($192) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 150 "xmltok_impl.c"
      case 57: // $bb14_i92
        $3=-1; //@line 151 "xmltok_impl.c"
        __label__ = 74; break; //@line 151 "xmltok_impl.c"
      case 58: // $bb15_i93
        var $193=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $194=$193+2; //@line 153 "xmltok_impl.c"
        var $195=$194; //@line 153 "xmltok_impl.c"
        var $196=HEAP[$195]; //@line 153 "xmltok_impl.c"
        var $197=($196)==0; //@line 153 "xmltok_impl.c"
        if ($197) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 153 "xmltok_impl.c"
      case 59: // $bb16_i94
        var $198=$enc_addr_i64; //@line 153 "xmltok_impl.c"
        var $199=$198; //@line 153 "xmltok_impl.c"
        var $200=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $201=$200+2; //@line 153 "xmltok_impl.c"
        var $202=$201+1; //@line 153 "xmltok_impl.c"
        var $203=HEAP[$202]; //@line 153 "xmltok_impl.c"
        var $204=($203); //@line 153 "xmltok_impl.c"
        var $205=$199+72; //@line 153 "xmltok_impl.c"
        var $206=$205+$204; //@line 153 "xmltok_impl.c"
        var $207=HEAP[$206]; //@line 153 "xmltok_impl.c"
        var $208=($207); //@line 153 "xmltok_impl.c"
        $iftmp_843_i=$208; //@line 153 "xmltok_impl.c"
        __lastLabel__ = 59; __label__ = 67; break; //@line 153 "xmltok_impl.c"
      case 60: // $bb17_i95
        var $209=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $210=$209+2; //@line 153 "xmltok_impl.c"
        var $211=$210+1; //@line 153 "xmltok_impl.c"
        var $212=HEAP[$211]; //@line 153 "xmltok_impl.c"
        var $213=($212); //@line 153 "xmltok_impl.c"
        var $214=$ptr_addr_i65; //@line 153 "xmltok_impl.c"
        var $215=$214+2; //@line 153 "xmltok_impl.c"
        var $216=$215; //@line 153 "xmltok_impl.c"
        var $217=HEAP[$216]; //@line 153 "xmltok_impl.c"
        var $218=($217); //@line 153 "xmltok_impl.c"
        var $219=((($218)) & 255); //@line 153 "xmltok_impl.c"
        var $220=((($213)) & 255); //@line 153 "xmltok_impl.c"
        $hi_addr_i1_i58=$219;
        $lo_addr_i2_i59=$220;
        var $221=$hi_addr_i1_i58; //@line 518 "xmltok.c"
        var $222=($221); //@line 518 "xmltok.c"
        if ($222 == 216) {
          __label__ = 61; break;
        }
        else if ($222 == 217) {
          __label__ = 61; break;
        }
        else if ($222 == 218) {
          __label__ = 61; break;
        }
        else if ($222 == 219) {
          __label__ = 61; break;
        }
        else if ($222 == 220) {
          __label__ = 62; break;
        }
        else if ($222 == 221) {
          __label__ = 62; break;
        }
        else if ($222 == 222) {
          __label__ = 62; break;
        }
        else if ($222 == 223) {
          __label__ = 62; break;
        }
        else if ($222 == 255) {
          __label__ = 63; break;
        }
        else {
        __label__ = 65; break;
        }
        
      case 61: // $bb_i4_i96
        $1=7; //@line 520 "xmltok.c"
        __label__ = 66; break; //@line 520 "xmltok.c"
      case 62: // $bb1_i5_i97
        $1=8; //@line 522 "xmltok.c"
        __label__ = 66; break; //@line 522 "xmltok.c"
      case 63: // $bb2_i8_i100
        var $223=$lo_addr_i2_i59; //@line 524 "xmltok.c"
        var $224=($223); //@line 524 "xmltok.c"
        var $_off_i6_i98=($224) + -254;
        var $switch_i7_i99=($_off_i6_i98) < 2;
        if ($switch_i7_i99) { __label__ = 64; break; } else { __label__ = 65; break; }
      case 64: // $bb3_i9_i101
        $1=0; //@line 527 "xmltok.c"
        __label__ = 66; break; //@line 527 "xmltok.c"
      case 65: // $bb4_i10_i102
        $1=29; //@line 531 "xmltok.c"
        __label__ = 66; break; //@line 531 "xmltok.c"
      case 66: // $unicode_byte_type_exit12_i104
        var $225=$1; //@line 520 "xmltok.c"
        $retval_i3_i60=$225; //@line 520 "xmltok.c"
        var $retval6_i11_i103=$retval_i3_i60; //@line 520 "xmltok.c"
        $iftmp_843_i=$retval6_i11_i103; //@line 153 "xmltok_impl.c"
        __lastLabel__ = 66; __label__ = 67; break; //@line 153 "xmltok_impl.c"
      case 67: // $bb18_i105
        var $226=__lastLabel__ == 66 ? $retval6_i11_i103 : ($208);
        if ($226 == 9) {
          __label__ = 68; break;
        }
        else if ($226 == 10) {
          __label__ = 68; break;
        }
        else if ($226 == 21) {
          __label__ = 68; break;
        }
        else if ($226 == 30) {
          __label__ = 68; break;
        }
        else {
        __label__ = 69; break;
        }
        
      case 68: // $bb19_i106
        var $227=$nextTokPtr_addr_i67; //@line 155 "xmltok_impl.c"
        var $228=$ptr_addr_i65; //@line 155 "xmltok_impl.c"
        HEAP[$227]=$228; //@line 155 "xmltok_impl.c"
        $3=0; //@line 156 "xmltok_impl.c"
        __label__ = 74; break; //@line 156 "xmltok_impl.c"
      case 69: // $bb20_i107
        var $229=$nextTokPtr_addr_i67; //@line 160 "xmltok_impl.c"
        var $230=$ptr_addr_i65; //@line 160 "xmltok_impl.c"
        HEAP[$229]=$230; //@line 160 "xmltok_impl.c"
        $3=16; //@line 161 "xmltok_impl.c"
        __label__ = 74; break; //@line 161 "xmltok_impl.c"
      case 70: // $bb21_i108
        var $231=$ptr_addr_i65; //@line 164 "xmltok_impl.c"
        var $232=$231+2; //@line 164 "xmltok_impl.c"
        $ptr_addr_i65=$232; //@line 164 "xmltok_impl.c"
        __label__ = 72; break; //@line 164 "xmltok_impl.c"
      case 71: // $bb22_i109
        var $233=$nextTokPtr_addr_i67; //@line 167 "xmltok_impl.c"
        var $234=$ptr_addr_i65; //@line 167 "xmltok_impl.c"
        HEAP[$233]=$234; //@line 167 "xmltok_impl.c"
        $3=0; //@line 168 "xmltok_impl.c"
        __label__ = 74; break; //@line 168 "xmltok_impl.c"
      case 72: // $bb23_i110
        var $235=$ptr_addr_i65; //@line 147 "xmltok_impl.c"
        var $236=$end_addr_i66; //@line 147 "xmltok_impl.c"
        var $237=($235)!=($236); //@line 147 "xmltok_impl.c"
        if ($237) { __label__ = 46; break; } else { __label__ = 73; break; } //@line 147 "xmltok_impl.c"
      case 73: // $bb24_i111
        $3=-1; //@line 171 "xmltok_impl.c"
        __label__ = 74; break; //@line 171 "xmltok_impl.c"
      case 74: // $big2_scanDecl_exit
        var $238=$3; //@line 132 "xmltok_impl.c"
        $retval_i68=$238; //@line 132 "xmltok_impl.c"
        var $retval26_i=$retval_i68; //@line 132 "xmltok_impl.c"
        $12=$retval26_i; //@line 996 "xmltok_impl.c"
        __label__ = 230; break; //@line 996 "xmltok_impl.c"
      case 75: // $bb18
        var $239=$ptr_addr; //@line 998 "xmltok_impl.c"
        var $240=$239+2; //@line 998 "xmltok_impl.c"
        var $241=$enc_addr; //@line 998 "xmltok_impl.c"
        var $242=$end_addr; //@line 998 "xmltok_impl.c"
        var $243=$nextTokPtr_addr; //@line 998 "xmltok_impl.c"
        var $244=_big2_scanPi($241, $240, $242, $243); //@line 998 "xmltok_impl.c"
        $12=$244; //@line 998 "xmltok_impl.c"
        __label__ = 230; break; //@line 998 "xmltok_impl.c"
      case 76: // $bb19
        var $245=$ptr_addr; //@line 1005 "xmltok_impl.c"
        var $246=$245+-2; //@line 1005 "xmltok_impl.c"
        var $247=$nextTokPtr_addr; //@line 1005 "xmltok_impl.c"
        HEAP[$247]=$246; //@line 1005 "xmltok_impl.c"
        $12=29; //@line 1006 "xmltok_impl.c"
        __label__ = 230; break; //@line 1006 "xmltok_impl.c"
      case 77: // $bb20
        var $248=$nextTokPtr_addr; //@line 1008 "xmltok_impl.c"
        var $249=$ptr_addr; //@line 1008 "xmltok_impl.c"
        HEAP[$248]=$249; //@line 1008 "xmltok_impl.c"
        $12=0; //@line 1009 "xmltok_impl.c"
        __label__ = 230; break; //@line 1009 "xmltok_impl.c"
      case 78: // $bb21
        var $250=$ptr_addr; //@line 1012 "xmltok_impl.c"
        var $251=$250+2; //@line 1012 "xmltok_impl.c"
        var $252=$end_addr; //@line 1012 "xmltok_impl.c"
        var $253=($251)==($252); //@line 1012 "xmltok_impl.c"
        if ($253) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 1012 "xmltok_impl.c"
      case 79: // $bb22
        var $254=$nextTokPtr_addr; //@line 1013 "xmltok_impl.c"
        var $255=$end_addr; //@line 1013 "xmltok_impl.c"
        HEAP[$254]=$255; //@line 1013 "xmltok_impl.c"
        $12=-15; //@line 1015 "xmltok_impl.c"
        __label__ = 230; break; //@line 1015 "xmltok_impl.c"
      case 80: // $bb23
        var $256=$ptr_addr; //@line 1020 "xmltok_impl.c"
        var $257=$256+2; //@line 1020 "xmltok_impl.c"
        $ptr_addr=$257; //@line 1020 "xmltok_impl.c"
        var $258=$ptr_addr; //@line 1021 "xmltok_impl.c"
        var $259=$end_addr; //@line 1021 "xmltok_impl.c"
        var $260=($258)==($259); //@line 1021 "xmltok_impl.c"
        if ($260) { __label__ = 93; break; } else { __label__ = 81; break; } //@line 1021 "xmltok_impl.c"
      case 81: // $bb24
        var $261=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $262=$261; //@line 1023 "xmltok_impl.c"
        var $263=HEAP[$262]; //@line 1023 "xmltok_impl.c"
        var $264=($263)==0; //@line 1023 "xmltok_impl.c"
        if ($264) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 1023 "xmltok_impl.c"
      case 82: // $bb25
        var $265=$enc_addr; //@line 1023 "xmltok_impl.c"
        var $266=$265; //@line 1023 "xmltok_impl.c"
        var $267=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $268=$267+1; //@line 1023 "xmltok_impl.c"
        var $269=HEAP[$268]; //@line 1023 "xmltok_impl.c"
        var $270=($269); //@line 1023 "xmltok_impl.c"
        var $271=$266+72; //@line 1023 "xmltok_impl.c"
        var $272=$271+$270; //@line 1023 "xmltok_impl.c"
        var $273=HEAP[$272]; //@line 1023 "xmltok_impl.c"
        var $274=($273); //@line 1023 "xmltok_impl.c"
        $iftmp_1155=$274; //@line 1023 "xmltok_impl.c"
        __lastLabel__ = 82; __label__ = 90; break; //@line 1023 "xmltok_impl.c"
      case 83: // $bb26
        var $275=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $276=$275+1; //@line 1023 "xmltok_impl.c"
        var $277=HEAP[$276]; //@line 1023 "xmltok_impl.c"
        var $278=($277); //@line 1023 "xmltok_impl.c"
        var $279=$ptr_addr; //@line 1023 "xmltok_impl.c"
        var $280=$279; //@line 1023 "xmltok_impl.c"
        var $281=HEAP[$280]; //@line 1023 "xmltok_impl.c"
        var $282=($281); //@line 1023 "xmltok_impl.c"
        var $283=((($282)) & 255); //@line 1023 "xmltok_impl.c"
        var $284=((($278)) & 255); //@line 1023 "xmltok_impl.c"
        $hi_addr_i45=$283;
        $lo_addr_i46=$284;
        var $285=$hi_addr_i45; //@line 518 "xmltok.c"
        var $286=($285); //@line 518 "xmltok.c"
        if ($286 == 216) {
          __label__ = 84; break;
        }
        else if ($286 == 217) {
          __label__ = 84; break;
        }
        else if ($286 == 218) {
          __label__ = 84; break;
        }
        else if ($286 == 219) {
          __label__ = 84; break;
        }
        else if ($286 == 220) {
          __label__ = 85; break;
        }
        else if ($286 == 221) {
          __label__ = 85; break;
        }
        else if ($286 == 222) {
          __label__ = 85; break;
        }
        else if ($286 == 223) {
          __label__ = 85; break;
        }
        else if ($286 == 255) {
          __label__ = 86; break;
        }
        else {
        __label__ = 88; break;
        }
        
      case 84: // $bb_i48
        $4=7; //@line 520 "xmltok.c"
        __label__ = 89; break; //@line 520 "xmltok.c"
      case 85: // $bb1_i49
        $4=8; //@line 522 "xmltok.c"
        __label__ = 89; break; //@line 522 "xmltok.c"
      case 86: // $bb2_i52
        var $287=$lo_addr_i46; //@line 524 "xmltok.c"
        var $288=($287); //@line 524 "xmltok.c"
        var $_off_i50=($288) + -254;
        var $switch_i51=($_off_i50) < 2;
        if ($switch_i51) { __label__ = 87; break; } else { __label__ = 88; break; }
      case 87: // $bb3_i53
        $4=0; //@line 527 "xmltok.c"
        __label__ = 89; break; //@line 527 "xmltok.c"
      case 88: // $bb4_i54
        $4=29; //@line 531 "xmltok.c"
        __label__ = 89; break; //@line 531 "xmltok.c"
      case 89: // $unicode_byte_type_exit57
        var $289=$4; //@line 520 "xmltok.c"
        $retval_i47=$289; //@line 520 "xmltok.c"
        var $retval6_i55=$retval_i47; //@line 520 "xmltok.c"
        $iftmp_1155=$retval6_i55; //@line 1023 "xmltok_impl.c"
        __lastLabel__ = 89; __label__ = 90; break; //@line 1023 "xmltok_impl.c"
      case 90: // $bb27
        var $290=__lastLabel__ == 89 ? $retval6_i55 : ($274);
        if ($290 == 9) {
          __label__ = 91; break;
        }
        else if ($290 == 10) {
          __label__ = 80; break;
        }
        else if ($290 == 21) {
          __label__ = 80; break;
        }
        else {
        __label__ = 92; break;
        }
        
      case 91: // $bb29
        var $291=$ptr_addr; //@line 1028 "xmltok_impl.c"
        var $292=$291+2; //@line 1028 "xmltok_impl.c"
        var $293=$end_addr; //@line 1028 "xmltok_impl.c"
        var $294=($292)!=($293); //@line 1028 "xmltok_impl.c"
        if ($294) { __label__ = 80; break; } else { __label__ = 92; break; } //@line 1028 "xmltok_impl.c"
      case 92: // $bb30
        var $295=$nextTokPtr_addr; //@line 1032 "xmltok_impl.c"
        var $296=$ptr_addr; //@line 1032 "xmltok_impl.c"
        HEAP[$295]=$296; //@line 1032 "xmltok_impl.c"
        $12=15; //@line 1033 "xmltok_impl.c"
        __label__ = 230; break; //@line 1033 "xmltok_impl.c"
      case 93: // $bb32
        var $297=$nextTokPtr_addr; //@line 1036 "xmltok_impl.c"
        var $298=$ptr_addr; //@line 1036 "xmltok_impl.c"
        HEAP[$297]=$298; //@line 1036 "xmltok_impl.c"
        $12=15; //@line 1037 "xmltok_impl.c"
        __label__ = 230; break; //@line 1037 "xmltok_impl.c"
      case 94: // $bb33
        var $299=$ptr_addr; //@line 1039 "xmltok_impl.c"
        var $300=$299+2; //@line 1039 "xmltok_impl.c"
        var $301=$enc_addr; //@line 1039 "xmltok_impl.c"
        var $302=$end_addr; //@line 1039 "xmltok_impl.c"
        var $303=$nextTokPtr_addr; //@line 1039 "xmltok_impl.c"
        var $304=_big2_scanPercent($301, $300, $302, $303); //@line 1039 "xmltok_impl.c"
        $12=$304; //@line 1039 "xmltok_impl.c"
        __label__ = 230; break; //@line 1039 "xmltok_impl.c"
      case 95: // $bb34
        var $305=$ptr_addr; //@line 1041 "xmltok_impl.c"
        var $306=$305+2; //@line 1041 "xmltok_impl.c"
        var $307=$nextTokPtr_addr; //@line 1041 "xmltok_impl.c"
        HEAP[$307]=$306; //@line 1041 "xmltok_impl.c"
        $12=38; //@line 1042 "xmltok_impl.c"
        __label__ = 230; break; //@line 1042 "xmltok_impl.c"
      case 96: // $bb35
        var $308=$ptr_addr; //@line 1044 "xmltok_impl.c"
        var $309=$308+2; //@line 1044 "xmltok_impl.c"
        var $310=$nextTokPtr_addr; //@line 1044 "xmltok_impl.c"
        HEAP[$310]=$309; //@line 1044 "xmltok_impl.c"
        $12=25; //@line 1045 "xmltok_impl.c"
        __label__ = 230; break; //@line 1045 "xmltok_impl.c"
      case 97: // $bb36
        var $311=$ptr_addr; //@line 1047 "xmltok_impl.c"
        var $312=$311+2; //@line 1047 "xmltok_impl.c"
        $ptr_addr=$312; //@line 1047 "xmltok_impl.c"
        var $313=$ptr_addr; //@line 1048 "xmltok_impl.c"
        var $314=$end_addr; //@line 1048 "xmltok_impl.c"
        var $315=($313)==($314); //@line 1048 "xmltok_impl.c"
        if ($315) { __label__ = 98; break; } else { __label__ = 99; break; } //@line 1048 "xmltok_impl.c"
      case 98: // $bb37
        $12=-26; //@line 1049 "xmltok_impl.c"
        __label__ = 230; break; //@line 1049 "xmltok_impl.c"
      case 99: // $bb38
        var $316=$ptr_addr; //@line 1050 "xmltok_impl.c"
        var $317=$316; //@line 1050 "xmltok_impl.c"
        var $318=HEAP[$317]; //@line 1050 "xmltok_impl.c"
        var $319=($318)==0; //@line 1050 "xmltok_impl.c"
        if ($319) { __label__ = 100; break; } else { __label__ = 106; break; } //@line 1050 "xmltok_impl.c"
      case 100: // $bb39
        var $320=$ptr_addr; //@line 1050 "xmltok_impl.c"
        var $321=$320+1; //@line 1050 "xmltok_impl.c"
        var $322=HEAP[$321]; //@line 1050 "xmltok_impl.c"
        var $323=($322)==93; //@line 1050 "xmltok_impl.c"
        if ($323) { __label__ = 101; break; } else { __label__ = 106; break; } //@line 1050 "xmltok_impl.c"
      case 101: // $bb40
        var $324=$ptr_addr; //@line 1051 "xmltok_impl.c"
        var $325=$324+2; //@line 1051 "xmltok_impl.c"
        var $326=$end_addr; //@line 1051 "xmltok_impl.c"
        var $327=($325)==($326); //@line 1051 "xmltok_impl.c"
        if ($327) { __label__ = 102; break; } else { __label__ = 103; break; } //@line 1051 "xmltok_impl.c"
      case 102: // $bb41
        $12=-1; //@line 1052 "xmltok_impl.c"
        __label__ = 230; break; //@line 1052 "xmltok_impl.c"
      case 103: // $bb42
        var $328=$ptr_addr; //@line 1053 "xmltok_impl.c"
        var $329=$328+2; //@line 1053 "xmltok_impl.c"
        var $330=$329; //@line 1053 "xmltok_impl.c"
        var $331=HEAP[$330]; //@line 1053 "xmltok_impl.c"
        var $332=($331)==0; //@line 1053 "xmltok_impl.c"
        if ($332) { __label__ = 104; break; } else { __label__ = 106; break; } //@line 1053 "xmltok_impl.c"
      case 104: // $bb43
        var $333=$ptr_addr; //@line 1053 "xmltok_impl.c"
        var $334=$333+2; //@line 1053 "xmltok_impl.c"
        var $335=$334+1; //@line 1053 "xmltok_impl.c"
        var $336=HEAP[$335]; //@line 1053 "xmltok_impl.c"
        var $337=($336)==62; //@line 1053 "xmltok_impl.c"
        if ($337) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 1053 "xmltok_impl.c"
      case 105: // $bb44
        var $338=$ptr_addr; //@line 1054 "xmltok_impl.c"
        var $339=$338+4; //@line 1054 "xmltok_impl.c"
        var $340=$nextTokPtr_addr; //@line 1054 "xmltok_impl.c"
        HEAP[$340]=$339; //@line 1054 "xmltok_impl.c"
        $12=34; //@line 1055 "xmltok_impl.c"
        __label__ = 230; break; //@line 1055 "xmltok_impl.c"
      case 106: // $bb45
        var $341=$nextTokPtr_addr; //@line 1058 "xmltok_impl.c"
        var $342=$ptr_addr; //@line 1058 "xmltok_impl.c"
        HEAP[$341]=$342; //@line 1058 "xmltok_impl.c"
        $12=26; //@line 1059 "xmltok_impl.c"
        __label__ = 230; break; //@line 1059 "xmltok_impl.c"
      case 107: // $bb46
        var $343=$ptr_addr; //@line 1061 "xmltok_impl.c"
        var $344=$343+2; //@line 1061 "xmltok_impl.c"
        var $345=$nextTokPtr_addr; //@line 1061 "xmltok_impl.c"
        HEAP[$345]=$344; //@line 1061 "xmltok_impl.c"
        $12=23; //@line 1062 "xmltok_impl.c"
        __label__ = 230; break; //@line 1062 "xmltok_impl.c"
      case 108: // $bb47
        var $346=$ptr_addr; //@line 1064 "xmltok_impl.c"
        var $347=$346+2; //@line 1064 "xmltok_impl.c"
        $ptr_addr=$347; //@line 1064 "xmltok_impl.c"
        var $348=$ptr_addr; //@line 1065 "xmltok_impl.c"
        var $349=$end_addr; //@line 1065 "xmltok_impl.c"
        var $350=($348)==($349); //@line 1065 "xmltok_impl.c"
        if ($350) { __label__ = 109; break; } else { __label__ = 110; break; } //@line 1065 "xmltok_impl.c"
      case 109: // $bb48
        $12=-24; //@line 1066 "xmltok_impl.c"
        __label__ = 230; break; //@line 1066 "xmltok_impl.c"
      case 110: // $bb49
        var $351=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $352=$351; //@line 1067 "xmltok_impl.c"
        var $353=HEAP[$352]; //@line 1067 "xmltok_impl.c"
        var $354=($353)==0; //@line 1067 "xmltok_impl.c"
        if ($354) { __label__ = 111; break; } else { __label__ = 112; break; } //@line 1067 "xmltok_impl.c"
      case 111: // $bb50
        var $355=$enc_addr; //@line 1067 "xmltok_impl.c"
        var $356=$355; //@line 1067 "xmltok_impl.c"
        var $357=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $358=$357+1; //@line 1067 "xmltok_impl.c"
        var $359=HEAP[$358]; //@line 1067 "xmltok_impl.c"
        var $360=($359); //@line 1067 "xmltok_impl.c"
        var $361=$356+72; //@line 1067 "xmltok_impl.c"
        var $362=$361+$360; //@line 1067 "xmltok_impl.c"
        var $363=HEAP[$362]; //@line 1067 "xmltok_impl.c"
        var $364=($363); //@line 1067 "xmltok_impl.c"
        $iftmp_1157=$364; //@line 1067 "xmltok_impl.c"
        __lastLabel__ = 111; __label__ = 119; break; //@line 1067 "xmltok_impl.c"
      case 112: // $bb51
        var $365=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $366=$365+1; //@line 1067 "xmltok_impl.c"
        var $367=HEAP[$366]; //@line 1067 "xmltok_impl.c"
        var $368=($367); //@line 1067 "xmltok_impl.c"
        var $369=$ptr_addr; //@line 1067 "xmltok_impl.c"
        var $370=$369; //@line 1067 "xmltok_impl.c"
        var $371=HEAP[$370]; //@line 1067 "xmltok_impl.c"
        var $372=($371); //@line 1067 "xmltok_impl.c"
        var $373=((($372)) & 255); //@line 1067 "xmltok_impl.c"
        var $374=((($368)) & 255); //@line 1067 "xmltok_impl.c"
        $hi_addr_i19=$373;
        $lo_addr_i20=$374;
        var $375=$hi_addr_i19; //@line 518 "xmltok.c"
        var $376=($375); //@line 518 "xmltok.c"
        if ($376 == 216) {
          __label__ = 113; break;
        }
        else if ($376 == 217) {
          __label__ = 113; break;
        }
        else if ($376 == 218) {
          __label__ = 113; break;
        }
        else if ($376 == 219) {
          __label__ = 113; break;
        }
        else if ($376 == 220) {
          __label__ = 114; break;
        }
        else if ($376 == 221) {
          __label__ = 114; break;
        }
        else if ($376 == 222) {
          __label__ = 114; break;
        }
        else if ($376 == 223) {
          __label__ = 114; break;
        }
        else if ($376 == 255) {
          __label__ = 115; break;
        }
        else {
        __label__ = 117; break;
        }
        
      case 113: // $bb_i22
        $6=7; //@line 520 "xmltok.c"
        __label__ = 118; break; //@line 520 "xmltok.c"
      case 114: // $bb1_i23
        $6=8; //@line 522 "xmltok.c"
        __label__ = 118; break; //@line 522 "xmltok.c"
      case 115: // $bb2_i26
        var $377=$lo_addr_i20; //@line 524 "xmltok.c"
        var $378=($377); //@line 524 "xmltok.c"
        var $_off_i24=($378) + -254;
        var $switch_i25=($_off_i24) < 2;
        if ($switch_i25) { __label__ = 116; break; } else { __label__ = 117; break; }
      case 116: // $bb3_i27
        $6=0; //@line 527 "xmltok.c"
        __label__ = 118; break; //@line 527 "xmltok.c"
      case 117: // $bb4_i28
        $6=29; //@line 531 "xmltok.c"
        __label__ = 118; break; //@line 531 "xmltok.c"
      case 118: // $unicode_byte_type_exit31
        var $379=$6; //@line 520 "xmltok.c"
        $retval_i21=$379; //@line 520 "xmltok.c"
        var $retval6_i29=$retval_i21; //@line 520 "xmltok.c"
        $iftmp_1157=$retval6_i29; //@line 1067 "xmltok_impl.c"
        __lastLabel__ = 118; __label__ = 119; break; //@line 1067 "xmltok_impl.c"
      case 119: // $bb52
        var $380=__lastLabel__ == 118 ? $retval6_i29 : ($364);
        if ($380 == 9) {
          __label__ = 123; break;
        }
        else if ($380 == 10) {
          __label__ = 123; break;
        }
        else if ($380 == 11) {
          __label__ = 123; break;
        }
        else if ($380 == 15) {
          __label__ = 121; break;
        }
        else if ($380 == 21) {
          __label__ = 123; break;
        }
        else if ($380 == 32) {
          __label__ = 123; break;
        }
        else if ($380 == 33) {
          __label__ = 120; break;
        }
        else if ($380 == 34) {
          __label__ = 122; break;
        }
        else if ($380 == 35) {
          __label__ = 123; break;
        }
        else if ($380 == 36) {
          __label__ = 123; break;
        }
        else {
        __label__ = 124; break;
        }
        
      case 120: // $bb53
        var $381=$ptr_addr; //@line 1069 "xmltok_impl.c"
        var $382=$381+2; //@line 1069 "xmltok_impl.c"
        var $383=$nextTokPtr_addr; //@line 1069 "xmltok_impl.c"
        HEAP[$383]=$382; //@line 1069 "xmltok_impl.c"
        $12=36; //@line 1070 "xmltok_impl.c"
        __label__ = 230; break; //@line 1070 "xmltok_impl.c"
      case 121: // $bb54
        var $384=$ptr_addr; //@line 1072 "xmltok_impl.c"
        var $385=$384+2; //@line 1072 "xmltok_impl.c"
        var $386=$nextTokPtr_addr; //@line 1072 "xmltok_impl.c"
        HEAP[$386]=$385; //@line 1072 "xmltok_impl.c"
        $12=35; //@line 1073 "xmltok_impl.c"
        __label__ = 230; break; //@line 1073 "xmltok_impl.c"
      case 122: // $bb55
        var $387=$ptr_addr; //@line 1075 "xmltok_impl.c"
        var $388=$387+2; //@line 1075 "xmltok_impl.c"
        var $389=$nextTokPtr_addr; //@line 1075 "xmltok_impl.c"
        HEAP[$389]=$388; //@line 1075 "xmltok_impl.c"
        $12=37; //@line 1076 "xmltok_impl.c"
        __label__ = 230; break; //@line 1076 "xmltok_impl.c"
      case 123: // $bb56
        var $390=$nextTokPtr_addr; //@line 1080 "xmltok_impl.c"
        var $391=$ptr_addr; //@line 1080 "xmltok_impl.c"
        HEAP[$390]=$391; //@line 1080 "xmltok_impl.c"
        $12=24; //@line 1081 "xmltok_impl.c"
        __label__ = 230; break; //@line 1081 "xmltok_impl.c"
      case 124: // $bb57
        var $392=$nextTokPtr_addr; //@line 1083 "xmltok_impl.c"
        var $393=$ptr_addr; //@line 1083 "xmltok_impl.c"
        HEAP[$392]=$393; //@line 1083 "xmltok_impl.c"
        $12=0; //@line 1084 "xmltok_impl.c"
        __label__ = 230; break; //@line 1084 "xmltok_impl.c"
      case 125: // $bb58
        var $394=$ptr_addr; //@line 1086 "xmltok_impl.c"
        var $395=$394+2; //@line 1086 "xmltok_impl.c"
        var $396=$nextTokPtr_addr; //@line 1086 "xmltok_impl.c"
        HEAP[$396]=$395; //@line 1086 "xmltok_impl.c"
        $12=21; //@line 1087 "xmltok_impl.c"
        __label__ = 230; break; //@line 1087 "xmltok_impl.c"
      case 126: // $bb59
        var $397=$ptr_addr; //@line 1089 "xmltok_impl.c"
        var $398=$397+2; //@line 1089 "xmltok_impl.c"
        var $399=$nextTokPtr_addr; //@line 1089 "xmltok_impl.c"
        HEAP[$399]=$398; //@line 1089 "xmltok_impl.c"
        $12=17; //@line 1090 "xmltok_impl.c"
        __label__ = 230; break; //@line 1090 "xmltok_impl.c"
      case 127: // $bb60
        var $400=$ptr_addr; //@line 1092 "xmltok_impl.c"
        var $401=$400+2; //@line 1092 "xmltok_impl.c"
        var $402=$enc_addr; //@line 1092 "xmltok_impl.c"
        var $403=$end_addr; //@line 1092 "xmltok_impl.c"
        var $404=$nextTokPtr_addr; //@line 1092 "xmltok_impl.c"
        $enc_addr_i=$402;
        $ptr_addr_i=$401;
        $end_addr_i=$403;
        $nextTokPtr_addr_i=$404;
        var $405=$ptr_addr_i; //@line 913 "xmltok_impl.c"
        var $406=$end_addr_i; //@line 913 "xmltok_impl.c"
        var $407=($405)==($406); //@line 913 "xmltok_impl.c"
        if ($407) { __label__ = 128; break; } else { __label__ = 129; break; } //@line 913 "xmltok_impl.c"
      case 128: // $bb_i14
        $9=-1; //@line 914 "xmltok_impl.c"
        __label__ = 178; break; //@line 914 "xmltok_impl.c"
      case 129: // $bb1_i15
        var $408=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $409=$408; //@line 915 "xmltok_impl.c"
        var $410=HEAP[$409]; //@line 915 "xmltok_impl.c"
        var $411=($410)==0; //@line 915 "xmltok_impl.c"
        if ($411) { __label__ = 130; break; } else { __label__ = 131; break; } //@line 915 "xmltok_impl.c"
      case 130: // $bb2_i16
        var $412=$enc_addr_i; //@line 915 "xmltok_impl.c"
        var $413=$412; //@line 915 "xmltok_impl.c"
        var $414=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $415=$414+1; //@line 915 "xmltok_impl.c"
        var $416=HEAP[$415]; //@line 915 "xmltok_impl.c"
        var $417=($416); //@line 915 "xmltok_impl.c"
        var $418=$413+72; //@line 915 "xmltok_impl.c"
        var $419=$418+$417; //@line 915 "xmltok_impl.c"
        var $420=HEAP[$419]; //@line 915 "xmltok_impl.c"
        var $421=($420); //@line 915 "xmltok_impl.c"
        $iftmp_1122_i=$421; //@line 915 "xmltok_impl.c"
        __lastLabel__ = 130; __label__ = 138; break; //@line 915 "xmltok_impl.c"
      case 131: // $bb3_i17
        var $422=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $423=$422+1; //@line 915 "xmltok_impl.c"
        var $424=HEAP[$423]; //@line 915 "xmltok_impl.c"
        var $425=($424); //@line 915 "xmltok_impl.c"
        var $426=$ptr_addr_i; //@line 915 "xmltok_impl.c"
        var $427=$426; //@line 915 "xmltok_impl.c"
        var $428=HEAP[$427]; //@line 915 "xmltok_impl.c"
        var $429=($428); //@line 915 "xmltok_impl.c"
        var $430=((($429)) & 255); //@line 915 "xmltok_impl.c"
        var $431=((($425)) & 255); //@line 915 "xmltok_impl.c"
        $hi_addr_i_i=$430;
        $lo_addr_i_i=$431;
        var $432=$hi_addr_i_i; //@line 518 "xmltok.c"
        var $433=($432); //@line 518 "xmltok.c"
        if ($433 == 216) {
          __label__ = 132; break;
        }
        else if ($433 == 217) {
          __label__ = 132; break;
        }
        else if ($433 == 218) {
          __label__ = 132; break;
        }
        else if ($433 == 219) {
          __label__ = 132; break;
        }
        else if ($433 == 220) {
          __label__ = 133; break;
        }
        else if ($433 == 221) {
          __label__ = 133; break;
        }
        else if ($433 == 222) {
          __label__ = 133; break;
        }
        else if ($433 == 223) {
          __label__ = 133; break;
        }
        else if ($433 == 255) {
          __label__ = 134; break;
        }
        else {
        __label__ = 136; break;
        }
        
      case 132: // $bb_i_i
        $8=7; //@line 520 "xmltok.c"
        __label__ = 137; break; //@line 520 "xmltok.c"
      case 133: // $bb1_i_i
        $8=8; //@line 522 "xmltok.c"
        __label__ = 137; break; //@line 522 "xmltok.c"
      case 134: // $bb2_i_i
        var $434=$lo_addr_i_i; //@line 524 "xmltok.c"
        var $435=($434); //@line 524 "xmltok.c"
        var $_off_i_i=($435) + -254;
        var $switch_i_i=($_off_i_i) < 2;
        if ($switch_i_i) { __label__ = 135; break; } else { __label__ = 136; break; }
      case 135: // $bb3_i_i
        $8=0; //@line 527 "xmltok.c"
        __label__ = 137; break; //@line 527 "xmltok.c"
      case 136: // $bb4_i_i
        $8=29; //@line 531 "xmltok.c"
        __label__ = 137; break; //@line 531 "xmltok.c"
      case 137: // $unicode_byte_type_exit_i
        var $436=$8; //@line 520 "xmltok.c"
        $retval_i_i=$436; //@line 520 "xmltok.c"
        var $retval6_i_i=$retval_i_i; //@line 520 "xmltok.c"
        $iftmp_1122_i=$retval6_i_i; //@line 915 "xmltok_impl.c"
        __lastLabel__ = 137; __label__ = 138; break; //@line 915 "xmltok_impl.c"
      case 138: // $bb4_i18
        var $437=__lastLabel__ == 137 ? $retval6_i_i : ($421);
        if ($437 == 5) {
          __label__ = 142; break;
        }
        else if ($437 == 6) {
          __label__ = 145; break;
        }
        else if ($437 == 7) {
          __label__ = 148; break;
        }
        else if ($437 == 22) {
          __label__ = 141; break;
        }
        else if ($437 == 24) {
          __label__ = 141; break;
        }
        else if ($437 == 29) {
          __label__ = 139; break;
        }
        else {
        __label__ = 151; break;
        }
        
      case 139: // $bb5_i
        var $438=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $439=$438; //@line 916 "xmltok_impl.c"
        var $440=HEAP[$439]; //@line 916 "xmltok_impl.c"
        var $441=($440); //@line 916 "xmltok_impl.c"
        var $442=_nmstrtPages+$441; //@line 916 "xmltok_impl.c"
        var $443=HEAP[$442]; //@line 916 "xmltok_impl.c"
        var $444=($443); //@line 916 "xmltok_impl.c"
        var $445=($444) * 8;
        var $446=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $447=$446+1; //@line 916 "xmltok_impl.c"
        var $448=HEAP[$447]; //@line 916 "xmltok_impl.c"
        var $449=($448) >>> 5; //@line 916 "xmltok_impl.c"
        var $450=($449); //@line 916 "xmltok_impl.c"
        var $451=($450) + ($445); //@line 916 "xmltok_impl.c"
        var $452=_namingBitmap+$451*4; //@line 916 "xmltok_impl.c"
        var $453=HEAP[$452]; //@line 916 "xmltok_impl.c"
        var $454=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $455=$454+1; //@line 916 "xmltok_impl.c"
        var $456=HEAP[$455]; //@line 916 "xmltok_impl.c"
        var $457=($456); //@line 916 "xmltok_impl.c"
        var $458=($457) & 31; //@line 916 "xmltok_impl.c"
        var $459=1 << ($458); //@line 916 "xmltok_impl.c"
        var $460=($459) & ($453); //@line 916 "xmltok_impl.c"
        var $461=($460)==0; //@line 916 "xmltok_impl.c"
        if ($461) { __label__ = 140; break; } else { __label__ = 141; break; } //@line 916 "xmltok_impl.c"
      case 140: // $bb6_i
        var $462=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $463=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$462]=$463; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 141: // $bb7_i
        var $464=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $465=$464+2; //@line 916 "xmltok_impl.c"
        $ptr_addr_i=$465; //@line 916 "xmltok_impl.c"
        __label__ = 176; break; //@line 916 "xmltok_impl.c"
      case 142: // $bb8_i
        var $466=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $467=($466); //@line 916 "xmltok_impl.c"
        var $468=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $469=($468); //@line 916 "xmltok_impl.c"
        var $470=($467) - ($469); //@line 916 "xmltok_impl.c"
        var $471=($470) <= 1; //@line 916 "xmltok_impl.c"
        if ($471) { __label__ = 143; break; } else { __label__ = 144; break; } //@line 916 "xmltok_impl.c"
      case 143: // $bb9_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 144: // $bb10_i
        var $472=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $473=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$472]=$473; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 145: // $bb11_i
        var $474=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $475=($474); //@line 916 "xmltok_impl.c"
        var $476=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $477=($476); //@line 916 "xmltok_impl.c"
        var $478=($475) - ($477); //@line 916 "xmltok_impl.c"
        var $479=($478) <= 2; //@line 916 "xmltok_impl.c"
        if ($479) { __label__ = 146; break; } else { __label__ = 147; break; } //@line 916 "xmltok_impl.c"
      case 146: // $bb12_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 147: // $bb13_i
        var $480=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $481=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$480]=$481; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 148: // $bb14_i
        var $482=$end_addr_i; //@line 916 "xmltok_impl.c"
        var $483=($482); //@line 916 "xmltok_impl.c"
        var $484=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        var $485=($484); //@line 916 "xmltok_impl.c"
        var $486=($483) - ($485); //@line 916 "xmltok_impl.c"
        var $487=($486) <= 3; //@line 916 "xmltok_impl.c"
        if ($487) { __label__ = 149; break; } else { __label__ = 150; break; } //@line 916 "xmltok_impl.c"
      case 149: // $bb15_i
        $9=-2; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 150: // $bb16_i
        var $488=$nextTokPtr_addr_i; //@line 916 "xmltok_impl.c"
        var $489=$ptr_addr_i; //@line 916 "xmltok_impl.c"
        HEAP[$488]=$489; //@line 916 "xmltok_impl.c"
        $9=0; //@line 916 "xmltok_impl.c"
        __label__ = 178; break; //@line 916 "xmltok_impl.c"
      case 151: // $bb17_i
        var $490=$nextTokPtr_addr_i; //@line 918 "xmltok_impl.c"
        var $491=$ptr_addr_i; //@line 918 "xmltok_impl.c"
        HEAP[$490]=$491; //@line 918 "xmltok_impl.c"
        $9=0; //@line 919 "xmltok_impl.c"
        __label__ = 178; break; //@line 919 "xmltok_impl.c"
      case 152: // $bb18_i
        var $492=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $493=$492; //@line 922 "xmltok_impl.c"
        var $494=HEAP[$493]; //@line 922 "xmltok_impl.c"
        var $495=($494)==0; //@line 922 "xmltok_impl.c"
        if ($495) { __label__ = 153; break; } else { __label__ = 154; break; } //@line 922 "xmltok_impl.c"
      case 153: // $bb19_i
        var $496=$enc_addr_i; //@line 922 "xmltok_impl.c"
        var $497=$496; //@line 922 "xmltok_impl.c"
        var $498=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $499=$498+1; //@line 922 "xmltok_impl.c"
        var $500=HEAP[$499]; //@line 922 "xmltok_impl.c"
        var $501=($500); //@line 922 "xmltok_impl.c"
        var $502=$497+72; //@line 922 "xmltok_impl.c"
        var $503=$502+$501; //@line 922 "xmltok_impl.c"
        var $504=HEAP[$503]; //@line 922 "xmltok_impl.c"
        var $505=($504); //@line 922 "xmltok_impl.c"
        $iftmp_1130_i=$505; //@line 922 "xmltok_impl.c"
        __lastLabel__ = 153; __label__ = 161; break; //@line 922 "xmltok_impl.c"
      case 154: // $bb20_i
        var $506=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $507=$506+1; //@line 922 "xmltok_impl.c"
        var $508=HEAP[$507]; //@line 922 "xmltok_impl.c"
        var $509=($508); //@line 922 "xmltok_impl.c"
        var $510=$ptr_addr_i; //@line 922 "xmltok_impl.c"
        var $511=$510; //@line 922 "xmltok_impl.c"
        var $512=HEAP[$511]; //@line 922 "xmltok_impl.c"
        var $513=($512); //@line 922 "xmltok_impl.c"
        var $514=((($513)) & 255); //@line 922 "xmltok_impl.c"
        var $515=((($509)) & 255); //@line 922 "xmltok_impl.c"
        $hi_addr_i1_i=$514;
        $lo_addr_i2_i=$515;
        var $516=$hi_addr_i1_i; //@line 518 "xmltok.c"
        var $517=($516); //@line 518 "xmltok.c"
        if ($517 == 216) {
          __label__ = 155; break;
        }
        else if ($517 == 217) {
          __label__ = 155; break;
        }
        else if ($517 == 218) {
          __label__ = 155; break;
        }
        else if ($517 == 219) {
          __label__ = 155; break;
        }
        else if ($517 == 220) {
          __label__ = 156; break;
        }
        else if ($517 == 221) {
          __label__ = 156; break;
        }
        else if ($517 == 222) {
          __label__ = 156; break;
        }
        else if ($517 == 223) {
          __label__ = 156; break;
        }
        else if ($517 == 255) {
          __label__ = 157; break;
        }
        else {
        __label__ = 159; break;
        }
        
      case 155: // $bb_i4_i
        $7=7; //@line 520 "xmltok.c"
        __label__ = 160; break; //@line 520 "xmltok.c"
      case 156: // $bb1_i5_i
        $7=8; //@line 522 "xmltok.c"
        __label__ = 160; break; //@line 522 "xmltok.c"
      case 157: // $bb2_i8_i
        var $518=$lo_addr_i2_i; //@line 524 "xmltok.c"
        var $519=($518); //@line 524 "xmltok.c"
        var $_off_i6_i=($519) + -254;
        var $switch_i7_i=($_off_i6_i) < 2;
        if ($switch_i7_i) { __label__ = 158; break; } else { __label__ = 159; break; }
      case 158: // $bb3_i9_i
        $7=0; //@line 527 "xmltok.c"
        __label__ = 160; break; //@line 527 "xmltok.c"
      case 159: // $bb4_i10_i
        $7=29; //@line 531 "xmltok.c"
        __label__ = 160; break; //@line 531 "xmltok.c"
      case 160: // $unicode_byte_type_exit12_i
        var $520=$7; //@line 520 "xmltok.c"
        $retval_i3_i=$520; //@line 520 "xmltok.c"
        var $retval6_i11_i=$retval_i3_i; //@line 520 "xmltok.c"
        $iftmp_1130_i=$retval6_i11_i; //@line 922 "xmltok_impl.c"
        __lastLabel__ = 160; __label__ = 161; break; //@line 922 "xmltok_impl.c"
      case 161: // $bb21_i
        var $521=__lastLabel__ == 160 ? $retval6_i11_i : ($505);
        if ($521 == 5) {
          __label__ = 165; break;
        }
        else if ($521 == 6) {
          __label__ = 168; break;
        }
        else if ($521 == 7) {
          __label__ = 171; break;
        }
        else if ($521 == 9) {
          __label__ = 174; break;
        }
        else if ($521 == 10) {
          __label__ = 174; break;
        }
        else if ($521 == 11) {
          __label__ = 174; break;
        }
        else if ($521 == 21) {
          __label__ = 174; break;
        }
        else if ($521 == 22) {
          __label__ = 164; break;
        }
        else if ($521 == 24) {
          __label__ = 164; break;
        }
        else if ($521 == 25) {
          __label__ = 164; break;
        }
        else if ($521 == 26) {
          __label__ = 164; break;
        }
        else if ($521 == 27) {
          __label__ = 164; break;
        }
        else if ($521 == 29) {
          __label__ = 162; break;
        }
        else if ($521 == 30) {
          __label__ = 174; break;
        }
        else if ($521 == 32) {
          __label__ = 174; break;
        }
        else if ($521 == 36) {
          __label__ = 174; break;
        }
        else {
        __label__ = 175; break;
        }
        
      case 162: // $bb22_i
        var $522=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $523=$522; //@line 923 "xmltok_impl.c"
        var $524=HEAP[$523]; //@line 923 "xmltok_impl.c"
        var $525=($524); //@line 923 "xmltok_impl.c"
        var $526=_namePages+$525; //@line 923 "xmltok_impl.c"
        var $527=HEAP[$526]; //@line 923 "xmltok_impl.c"
        var $528=($527); //@line 923 "xmltok_impl.c"
        var $529=($528) * 8;
        var $530=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $531=$530+1; //@line 923 "xmltok_impl.c"
        var $532=HEAP[$531]; //@line 923 "xmltok_impl.c"
        var $533=($532) >>> 5; //@line 923 "xmltok_impl.c"
        var $534=($533); //@line 923 "xmltok_impl.c"
        var $535=($534) + ($529); //@line 923 "xmltok_impl.c"
        var $536=_namingBitmap+$535*4; //@line 923 "xmltok_impl.c"
        var $537=HEAP[$536]; //@line 923 "xmltok_impl.c"
        var $538=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $539=$538+1; //@line 923 "xmltok_impl.c"
        var $540=HEAP[$539]; //@line 923 "xmltok_impl.c"
        var $541=($540); //@line 923 "xmltok_impl.c"
        var $542=($541) & 31; //@line 923 "xmltok_impl.c"
        var $543=1 << ($542); //@line 923 "xmltok_impl.c"
        var $544=($543) & ($537); //@line 923 "xmltok_impl.c"
        var $545=($544)==0; //@line 923 "xmltok_impl.c"
        if ($545) { __label__ = 163; break; } else { __label__ = 164; break; } //@line 923 "xmltok_impl.c"
      case 163: // $bb23_i
        var $546=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $547=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$546]=$547; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 164: // $bb24_i
        var $548=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $549=$548+2; //@line 923 "xmltok_impl.c"
        $ptr_addr_i=$549; //@line 923 "xmltok_impl.c"
        __label__ = 176; break; //@line 923 "xmltok_impl.c"
      case 165: // $bb25_i
        var $550=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $551=($550); //@line 923 "xmltok_impl.c"
        var $552=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $553=($552); //@line 923 "xmltok_impl.c"
        var $554=($551) - ($553); //@line 923 "xmltok_impl.c"
        var $555=($554) <= 1; //@line 923 "xmltok_impl.c"
        if ($555) { __label__ = 166; break; } else { __label__ = 167; break; } //@line 923 "xmltok_impl.c"
      case 166: // $bb26_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 167: // $bb27_i
        var $556=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $557=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$556]=$557; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 168: // $bb28_i
        var $558=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $559=($558); //@line 923 "xmltok_impl.c"
        var $560=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $561=($560); //@line 923 "xmltok_impl.c"
        var $562=($559) - ($561); //@line 923 "xmltok_impl.c"
        var $563=($562) <= 2; //@line 923 "xmltok_impl.c"
        if ($563) { __label__ = 169; break; } else { __label__ = 170; break; } //@line 923 "xmltok_impl.c"
      case 169: // $bb29_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 170: // $bb30_i
        var $564=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $565=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$564]=$565; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 171: // $bb31_i
        var $566=$end_addr_i; //@line 923 "xmltok_impl.c"
        var $567=($566); //@line 923 "xmltok_impl.c"
        var $568=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        var $569=($568); //@line 923 "xmltok_impl.c"
        var $570=($567) - ($569); //@line 923 "xmltok_impl.c"
        var $571=($570) <= 3; //@line 923 "xmltok_impl.c"
        if ($571) { __label__ = 172; break; } else { __label__ = 173; break; } //@line 923 "xmltok_impl.c"
      case 172: // $bb32_i
        $9=-2; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 173: // $bb33_i
        var $572=$nextTokPtr_addr_i; //@line 923 "xmltok_impl.c"
        var $573=$ptr_addr_i; //@line 923 "xmltok_impl.c"
        HEAP[$572]=$573; //@line 923 "xmltok_impl.c"
        $9=0; //@line 923 "xmltok_impl.c"
        __label__ = 178; break; //@line 923 "xmltok_impl.c"
      case 174: // $bb34_i
        var $574=$nextTokPtr_addr_i; //@line 926 "xmltok_impl.c"
        var $575=$ptr_addr_i; //@line 926 "xmltok_impl.c"
        HEAP[$574]=$575; //@line 926 "xmltok_impl.c"
        $9=20; //@line 927 "xmltok_impl.c"
        __label__ = 178; break; //@line 927 "xmltok_impl.c"
      case 175: // $bb35_i
        var $576=$nextTokPtr_addr_i; //@line 929 "xmltok_impl.c"
        var $577=$ptr_addr_i; //@line 929 "xmltok_impl.c"
        HEAP[$576]=$577; //@line 929 "xmltok_impl.c"
        $9=0; //@line 930 "xmltok_impl.c"
        __label__ = 178; break; //@line 930 "xmltok_impl.c"
      case 176: // $bb36_i
        var $578=$ptr_addr_i; //@line 921 "xmltok_impl.c"
        var $579=$end_addr_i; //@line 921 "xmltok_impl.c"
        var $580=($578)!=($579); //@line 921 "xmltok_impl.c"
        if ($580) { __label__ = 152; break; } else { __label__ = 177; break; } //@line 921 "xmltok_impl.c"
      case 177: // $bb37_i
        $9=-20; //@line 933 "xmltok_impl.c"
        __label__ = 178; break; //@line 933 "xmltok_impl.c"
      case 178: // $big2_scanPoundName_exit
        var $581=$9; //@line 914 "xmltok_impl.c"
        $retval_i13=$581; //@line 914 "xmltok_impl.c"
        var $retval39_i=$retval_i13; //@line 914 "xmltok_impl.c"
        $12=$retval39_i; //@line 1092 "xmltok_impl.c"
        __label__ = 230; break; //@line 1092 "xmltok_impl.c"
      case 179: // $bb61
        var $582=$end_addr; //@line 1109 "xmltok_impl.c"
        var $583=($582); //@line 1109 "xmltok_impl.c"
        var $584=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $585=($584); //@line 1109 "xmltok_impl.c"
        var $586=($583) - ($585); //@line 1109 "xmltok_impl.c"
        var $587=($586) <= 1; //@line 1109 "xmltok_impl.c"
        if ($587) { __label__ = 180; break; } else { __label__ = 181; break; } //@line 1109 "xmltok_impl.c"
      case 180: // $bb62
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 181: // $bb63
        var $588=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $589=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$588]=$589; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 182: // $bb64
        var $590=$end_addr; //@line 1109 "xmltok_impl.c"
        var $591=($590); //@line 1109 "xmltok_impl.c"
        var $592=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $593=($592); //@line 1109 "xmltok_impl.c"
        var $594=($591) - ($593); //@line 1109 "xmltok_impl.c"
        var $595=($594) <= 2; //@line 1109 "xmltok_impl.c"
        if ($595) { __label__ = 183; break; } else { __label__ = 184; break; } //@line 1109 "xmltok_impl.c"
      case 183: // $bb65
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 184: // $bb66
        var $596=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $597=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$596]=$597; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 185: // $bb67
        var $598=$end_addr; //@line 1109 "xmltok_impl.c"
        var $599=($598); //@line 1109 "xmltok_impl.c"
        var $600=$ptr_addr; //@line 1109 "xmltok_impl.c"
        var $601=($600); //@line 1109 "xmltok_impl.c"
        var $602=($599) - ($601); //@line 1109 "xmltok_impl.c"
        var $603=($602) <= 3; //@line 1109 "xmltok_impl.c"
        if ($603) { __label__ = 186; break; } else { __label__ = 187; break; } //@line 1109 "xmltok_impl.c"
      case 186: // $bb68
        $12=-2; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 187: // $bb69
        var $604=$nextTokPtr_addr; //@line 1109 "xmltok_impl.c"
        var $605=$ptr_addr; //@line 1109 "xmltok_impl.c"
        HEAP[$604]=$605; //@line 1109 "xmltok_impl.c"
        $12=0; //@line 1109 "xmltok_impl.c"
        __label__ = 230; break; //@line 1109 "xmltok_impl.c"
      case 188: // $bb70
        $tok=18; //@line 1113 "xmltok_impl.c"
        var $606=$ptr_addr; //@line 1114 "xmltok_impl.c"
        var $607=$606+2; //@line 1114 "xmltok_impl.c"
        $ptr_addr=$607; //@line 1114 "xmltok_impl.c"
        __label__ = 228; break; //@line 1114 "xmltok_impl.c"
      case 189: // $bb71
        $tok=19; //@line 1122 "xmltok_impl.c"
        var $608=$ptr_addr; //@line 1123 "xmltok_impl.c"
        var $609=$608+2; //@line 1123 "xmltok_impl.c"
        $ptr_addr=$609; //@line 1123 "xmltok_impl.c"
        __label__ = 228; break; //@line 1123 "xmltok_impl.c"
      case 190: // $bb72
        var $610=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $611=$610; //@line 1126 "xmltok_impl.c"
        var $612=HEAP[$611]; //@line 1126 "xmltok_impl.c"
        var $613=($612); //@line 1126 "xmltok_impl.c"
        var $614=_nmstrtPages+$613; //@line 1126 "xmltok_impl.c"
        var $615=HEAP[$614]; //@line 1126 "xmltok_impl.c"
        var $616=($615); //@line 1126 "xmltok_impl.c"
        var $617=($616) * 8;
        var $618=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $619=$618+1; //@line 1126 "xmltok_impl.c"
        var $620=HEAP[$619]; //@line 1126 "xmltok_impl.c"
        var $621=($620) >>> 5; //@line 1126 "xmltok_impl.c"
        var $622=($621); //@line 1126 "xmltok_impl.c"
        var $623=($622) + ($617); //@line 1126 "xmltok_impl.c"
        var $624=_namingBitmap+$623*4; //@line 1126 "xmltok_impl.c"
        var $625=HEAP[$624]; //@line 1126 "xmltok_impl.c"
        var $626=$ptr_addr; //@line 1126 "xmltok_impl.c"
        var $627=$626+1; //@line 1126 "xmltok_impl.c"
        var $628=HEAP[$627]; //@line 1126 "xmltok_impl.c"
        var $629=($628); //@line 1126 "xmltok_impl.c"
        var $630=($629) & 31; //@line 1126 "xmltok_impl.c"
        var $631=1 << ($630); //@line 1126 "xmltok_impl.c"
        var $632=($631) & ($625); //@line 1126 "xmltok_impl.c"
        var $633=($632)!=0; //@line 1126 "xmltok_impl.c"
        var $634=$ptr_addr; //@line 1127 "xmltok_impl.c"
        if ($633) { __label__ = 191; break; } else { __label__ = 192; break; } //@line 1126 "xmltok_impl.c"
      case 191: // $bb73
        var $635=$634+2; //@line 1127 "xmltok_impl.c"
        $ptr_addr=$635; //@line 1127 "xmltok_impl.c"
        $tok=18; //@line 1128 "xmltok_impl.c"
        __label__ = 228; break; //@line 1128 "xmltok_impl.c"
      case 192: // $bb74
        var $636=$634; //@line 1131 "xmltok_impl.c"
        var $637=HEAP[$636]; //@line 1131 "xmltok_impl.c"
        var $638=($637); //@line 1131 "xmltok_impl.c"
        var $639=_namePages+$638; //@line 1131 "xmltok_impl.c"
        var $640=HEAP[$639]; //@line 1131 "xmltok_impl.c"
        var $641=($640); //@line 1131 "xmltok_impl.c"
        var $642=($641) * 8;
        var $643=$ptr_addr; //@line 1131 "xmltok_impl.c"
        var $644=$643+1; //@line 1131 "xmltok_impl.c"
        var $645=HEAP[$644]; //@line 1131 "xmltok_impl.c"
        var $646=($645) >>> 5; //@line 1131 "xmltok_impl.c"
        var $647=($646); //@line 1131 "xmltok_impl.c"
        var $648=($647) + ($642); //@line 1131 "xmltok_impl.c"
        var $649=_namingBitmap+$648*4; //@line 1131 "xmltok_impl.c"
        var $650=HEAP[$649]; //@line 1131 "xmltok_impl.c"
        var $651=$ptr_addr; //@line 1131 "xmltok_impl.c"
        var $652=$651+1; //@line 1131 "xmltok_impl.c"
        var $653=HEAP[$652]; //@line 1131 "xmltok_impl.c"
        var $654=($653); //@line 1131 "xmltok_impl.c"
        var $655=($654) & 31; //@line 1131 "xmltok_impl.c"
        var $656=1 << ($655); //@line 1131 "xmltok_impl.c"
        var $657=($656) & ($650); //@line 1131 "xmltok_impl.c"
        var $658=($657)!=0; //@line 1131 "xmltok_impl.c"
        if ($658) { __label__ = 193; break; } else { __label__ = 194; break; } //@line 1131 "xmltok_impl.c"
      case 193: // $bb75
        var $659=$ptr_addr; //@line 1132 "xmltok_impl.c"
        var $660=$659+2; //@line 1132 "xmltok_impl.c"
        $ptr_addr=$660; //@line 1132 "xmltok_impl.c"
        $tok=19; //@line 1133 "xmltok_impl.c"
        __label__ = 228; break; //@line 1133 "xmltok_impl.c"
      case 194: // $bb76
        var $661=$nextTokPtr_addr; //@line 1138 "xmltok_impl.c"
        var $662=$ptr_addr; //@line 1138 "xmltok_impl.c"
        HEAP[$661]=$662; //@line 1138 "xmltok_impl.c"
        $12=0; //@line 1139 "xmltok_impl.c"
        __label__ = 230; break; //@line 1139 "xmltok_impl.c"
      case 195: // $bb78
        var $663=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $664=$663; //@line 1142 "xmltok_impl.c"
        var $665=HEAP[$664]; //@line 1142 "xmltok_impl.c"
        var $666=($665)==0; //@line 1142 "xmltok_impl.c"
        if ($666) { __label__ = 196; break; } else { __label__ = 197; break; } //@line 1142 "xmltok_impl.c"
      case 196: // $bb79
        var $667=$enc_addr; //@line 1142 "xmltok_impl.c"
        var $668=$667; //@line 1142 "xmltok_impl.c"
        var $669=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $670=$669+1; //@line 1142 "xmltok_impl.c"
        var $671=HEAP[$670]; //@line 1142 "xmltok_impl.c"
        var $672=($671); //@line 1142 "xmltok_impl.c"
        var $673=$668+72; //@line 1142 "xmltok_impl.c"
        var $674=$673+$672; //@line 1142 "xmltok_impl.c"
        var $675=HEAP[$674]; //@line 1142 "xmltok_impl.c"
        var $676=($675); //@line 1142 "xmltok_impl.c"
        $iftmp_1165=$676; //@line 1142 "xmltok_impl.c"
        __lastLabel__ = 196; __label__ = 204; break; //@line 1142 "xmltok_impl.c"
      case 197: // $bb80
        var $677=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $678=$677+1; //@line 1142 "xmltok_impl.c"
        var $679=HEAP[$678]; //@line 1142 "xmltok_impl.c"
        var $680=($679); //@line 1142 "xmltok_impl.c"
        var $681=$ptr_addr; //@line 1142 "xmltok_impl.c"
        var $682=$681; //@line 1142 "xmltok_impl.c"
        var $683=HEAP[$682]; //@line 1142 "xmltok_impl.c"
        var $684=($683); //@line 1142 "xmltok_impl.c"
        var $685=((($684)) & 255); //@line 1142 "xmltok_impl.c"
        var $686=((($680)) & 255); //@line 1142 "xmltok_impl.c"
        $hi_addr_i1=$685;
        $lo_addr_i2=$686;
        var $687=$hi_addr_i1; //@line 518 "xmltok.c"
        var $688=($687); //@line 518 "xmltok.c"
        if ($688 == 216) {
          __label__ = 198; break;
        }
        else if ($688 == 217) {
          __label__ = 198; break;
        }
        else if ($688 == 218) {
          __label__ = 198; break;
        }
        else if ($688 == 219) {
          __label__ = 198; break;
        }
        else if ($688 == 220) {
          __label__ = 199; break;
        }
        else if ($688 == 221) {
          __label__ = 199; break;
        }
        else if ($688 == 222) {
          __label__ = 199; break;
        }
        else if ($688 == 223) {
          __label__ = 199; break;
        }
        else if ($688 == 255) {
          __label__ = 200; break;
        }
        else {
        __label__ = 202; break;
        }
        
      case 198: // $bb_i4
        $10=7; //@line 520 "xmltok.c"
        __label__ = 203; break; //@line 520 "xmltok.c"
      case 199: // $bb1_i5
        $10=8; //@line 522 "xmltok.c"
        __label__ = 203; break; //@line 522 "xmltok.c"
      case 200: // $bb2_i8
        var $689=$lo_addr_i2; //@line 524 "xmltok.c"
        var $690=($689); //@line 524 "xmltok.c"
        var $_off_i6=($690) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 201; break; } else { __label__ = 202; break; }
      case 201: // $bb3_i9
        $10=0; //@line 527 "xmltok.c"
        __label__ = 203; break; //@line 527 "xmltok.c"
      case 202: // $bb4_i10
        $10=29; //@line 531 "xmltok.c"
        __label__ = 203; break; //@line 531 "xmltok.c"
      case 203: // $unicode_byte_type_exit12
        var $691=$10; //@line 520 "xmltok.c"
        $retval_i3=$691; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1165=$retval6_i11; //@line 1142 "xmltok_impl.c"
        __lastLabel__ = 203; __label__ = 204; break; //@line 1142 "xmltok_impl.c"
      case 204: // $bb81
        var $692=__lastLabel__ == 203 ? $retval6_i11 : ($676);
        if ($692 == 5) {
          __label__ = 208; break;
        }
        else if ($692 == 6) {
          __label__ = 211; break;
        }
        else if ($692 == 7) {
          __label__ = 214; break;
        }
        else if ($692 == 9) {
          __label__ = 217; break;
        }
        else if ($692 == 10) {
          __label__ = 217; break;
        }
        else if ($692 == 11) {
          __label__ = 217; break;
        }
        else if ($692 == 15) {
          __label__ = 224; break;
        }
        else if ($692 == 20) {
          __label__ = 217; break;
        }
        else if ($692 == 21) {
          __label__ = 217; break;
        }
        else if ($692 == 22) {
          __label__ = 207; break;
        }
        else if ($692 == 24) {
          __label__ = 207; break;
        }
        else if ($692 == 25) {
          __label__ = 207; break;
        }
        else if ($692 == 26) {
          __label__ = 207; break;
        }
        else if ($692 == 27) {
          __label__ = 207; break;
        }
        else if ($692 == 29) {
          __label__ = 205; break;
        }
        else if ($692 == 30) {
          __label__ = 217; break;
        }
        else if ($692 == 32) {
          __label__ = 217; break;
        }
        else if ($692 == 33) {
          __label__ = 221; break;
        }
        else if ($692 == 34) {
          __label__ = 218; break;
        }
        else if ($692 == 35) {
          __label__ = 217; break;
        }
        else if ($692 == 36) {
          __label__ = 217; break;
        }
        else {
        __label__ = 227; break;
        }
        
      case 205: // $bb82
        var $693=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $694=$693; //@line 1143 "xmltok_impl.c"
        var $695=HEAP[$694]; //@line 1143 "xmltok_impl.c"
        var $696=($695); //@line 1143 "xmltok_impl.c"
        var $697=_namePages+$696; //@line 1143 "xmltok_impl.c"
        var $698=HEAP[$697]; //@line 1143 "xmltok_impl.c"
        var $699=($698); //@line 1143 "xmltok_impl.c"
        var $700=($699) * 8;
        var $701=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $702=$701+1; //@line 1143 "xmltok_impl.c"
        var $703=HEAP[$702]; //@line 1143 "xmltok_impl.c"
        var $704=($703) >>> 5; //@line 1143 "xmltok_impl.c"
        var $705=($704); //@line 1143 "xmltok_impl.c"
        var $706=($705) + ($700); //@line 1143 "xmltok_impl.c"
        var $707=_namingBitmap+$706*4; //@line 1143 "xmltok_impl.c"
        var $708=HEAP[$707]; //@line 1143 "xmltok_impl.c"
        var $709=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $710=$709+1; //@line 1143 "xmltok_impl.c"
        var $711=HEAP[$710]; //@line 1143 "xmltok_impl.c"
        var $712=($711); //@line 1143 "xmltok_impl.c"
        var $713=($712) & 31; //@line 1143 "xmltok_impl.c"
        var $714=1 << ($713); //@line 1143 "xmltok_impl.c"
        var $715=($714) & ($708); //@line 1143 "xmltok_impl.c"
        var $716=($715)==0; //@line 1143 "xmltok_impl.c"
        if ($716) { __label__ = 206; break; } else { __label__ = 207; break; } //@line 1143 "xmltok_impl.c"
      case 206: // $bb83
        var $717=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $718=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$717]=$718; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 207: // $bb84
        var $719=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $720=$719+2; //@line 1143 "xmltok_impl.c"
        $ptr_addr=$720; //@line 1143 "xmltok_impl.c"
        __label__ = 228; break; //@line 1143 "xmltok_impl.c"
      case 208: // $bb85
        var $721=$end_addr; //@line 1143 "xmltok_impl.c"
        var $722=($721); //@line 1143 "xmltok_impl.c"
        var $723=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $724=($723); //@line 1143 "xmltok_impl.c"
        var $725=($722) - ($724); //@line 1143 "xmltok_impl.c"
        var $726=($725) <= 1; //@line 1143 "xmltok_impl.c"
        if ($726) { __label__ = 209; break; } else { __label__ = 210; break; } //@line 1143 "xmltok_impl.c"
      case 209: // $bb86
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 210: // $bb87
        var $727=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $728=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$727]=$728; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 211: // $bb88
        var $729=$end_addr; //@line 1143 "xmltok_impl.c"
        var $730=($729); //@line 1143 "xmltok_impl.c"
        var $731=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $732=($731); //@line 1143 "xmltok_impl.c"
        var $733=($730) - ($732); //@line 1143 "xmltok_impl.c"
        var $734=($733) <= 2; //@line 1143 "xmltok_impl.c"
        if ($734) { __label__ = 212; break; } else { __label__ = 213; break; } //@line 1143 "xmltok_impl.c"
      case 212: // $bb89
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 213: // $bb90
        var $735=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $736=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$735]=$736; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 214: // $bb91
        var $737=$end_addr; //@line 1143 "xmltok_impl.c"
        var $738=($737); //@line 1143 "xmltok_impl.c"
        var $739=$ptr_addr; //@line 1143 "xmltok_impl.c"
        var $740=($739); //@line 1143 "xmltok_impl.c"
        var $741=($738) - ($740); //@line 1143 "xmltok_impl.c"
        var $742=($741) <= 3; //@line 1143 "xmltok_impl.c"
        if ($742) { __label__ = 215; break; } else { __label__ = 216; break; } //@line 1143 "xmltok_impl.c"
      case 215: // $bb92
        $12=-2; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 216: // $bb93
        var $743=$nextTokPtr_addr; //@line 1143 "xmltok_impl.c"
        var $744=$ptr_addr; //@line 1143 "xmltok_impl.c"
        HEAP[$743]=$744; //@line 1143 "xmltok_impl.c"
        $12=0; //@line 1143 "xmltok_impl.c"
        __label__ = 230; break; //@line 1143 "xmltok_impl.c"
      case 217: // $bb94
        var $745=$nextTokPtr_addr; //@line 1147 "xmltok_impl.c"
        var $746=$ptr_addr; //@line 1147 "xmltok_impl.c"
        HEAP[$745]=$746; //@line 1147 "xmltok_impl.c"
        var $747=$tok; //@line 1148 "xmltok_impl.c"
        $12=$747; //@line 1148 "xmltok_impl.c"
        __label__ = 230; break; //@line 1148 "xmltok_impl.c"
      case 218: // $bb95
        var $748=$tok; //@line 1171 "xmltok_impl.c"
        var $749=($748)==19; //@line 1171 "xmltok_impl.c"
        if ($749) { __label__ = 219; break; } else { __label__ = 220; break; } //@line 1171 "xmltok_impl.c"
      case 219: // $bb96
        var $750=$nextTokPtr_addr; //@line 1172 "xmltok_impl.c"
        var $751=$ptr_addr; //@line 1172 "xmltok_impl.c"
        HEAP[$750]=$751; //@line 1172 "xmltok_impl.c"
        $12=0; //@line 1173 "xmltok_impl.c"
        __label__ = 230; break; //@line 1173 "xmltok_impl.c"
      case 220: // $bb97
        var $752=$ptr_addr; //@line 1175 "xmltok_impl.c"
        var $753=$752+2; //@line 1175 "xmltok_impl.c"
        var $754=$nextTokPtr_addr; //@line 1175 "xmltok_impl.c"
        HEAP[$754]=$753; //@line 1175 "xmltok_impl.c"
        $12=32; //@line 1176 "xmltok_impl.c"
        __label__ = 230; break; //@line 1176 "xmltok_impl.c"
      case 221: // $bb98
        var $755=$tok; //@line 1178 "xmltok_impl.c"
        var $756=($755)==19; //@line 1178 "xmltok_impl.c"
        if ($756) { __label__ = 222; break; } else { __label__ = 223; break; } //@line 1178 "xmltok_impl.c"
      case 222: // $bb99
        var $757=$nextTokPtr_addr; //@line 1179 "xmltok_impl.c"
        var $758=$ptr_addr; //@line 1179 "xmltok_impl.c"
        HEAP[$757]=$758; //@line 1179 "xmltok_impl.c"
        $12=0; //@line 1180 "xmltok_impl.c"
        __label__ = 230; break; //@line 1180 "xmltok_impl.c"
      case 223: // $bb100
        var $759=$ptr_addr; //@line 1182 "xmltok_impl.c"
        var $760=$759+2; //@line 1182 "xmltok_impl.c"
        var $761=$nextTokPtr_addr; //@line 1182 "xmltok_impl.c"
        HEAP[$761]=$760; //@line 1182 "xmltok_impl.c"
        $12=31; //@line 1183 "xmltok_impl.c"
        __label__ = 230; break; //@line 1183 "xmltok_impl.c"
      case 224: // $bb101
        var $762=$tok; //@line 1185 "xmltok_impl.c"
        var $763=($762)==19; //@line 1185 "xmltok_impl.c"
        if ($763) { __label__ = 225; break; } else { __label__ = 226; break; } //@line 1185 "xmltok_impl.c"
      case 225: // $bb102
        var $764=$nextTokPtr_addr; //@line 1186 "xmltok_impl.c"
        var $765=$ptr_addr; //@line 1186 "xmltok_impl.c"
        HEAP[$764]=$765; //@line 1186 "xmltok_impl.c"
        $12=0; //@line 1187 "xmltok_impl.c"
        __label__ = 230; break; //@line 1187 "xmltok_impl.c"
      case 226: // $bb103
        var $766=$ptr_addr; //@line 1189 "xmltok_impl.c"
        var $767=$766+2; //@line 1189 "xmltok_impl.c"
        var $768=$nextTokPtr_addr; //@line 1189 "xmltok_impl.c"
        HEAP[$768]=$767; //@line 1189 "xmltok_impl.c"
        $12=30; //@line 1190 "xmltok_impl.c"
        __label__ = 230; break; //@line 1190 "xmltok_impl.c"
      case 227: // $bb104
        var $769=$nextTokPtr_addr; //@line 1192 "xmltok_impl.c"
        var $770=$ptr_addr; //@line 1192 "xmltok_impl.c"
        HEAP[$769]=$770; //@line 1192 "xmltok_impl.c"
        $12=0; //@line 1193 "xmltok_impl.c"
        __label__ = 230; break; //@line 1193 "xmltok_impl.c"
      case 228: // $bb105
        var $771=$ptr_addr; //@line 1141 "xmltok_impl.c"
        var $772=$end_addr; //@line 1141 "xmltok_impl.c"
        var $773=($771)!=($772); //@line 1141 "xmltok_impl.c"
        if ($773) { __label__ = 195; break; } else { __label__ = 229; break; } //@line 1141 "xmltok_impl.c"
      case 229: // $bb106
        var $774=$tok; //@line 1196 "xmltok_impl.c"
        var $775=0 - ($774); //@line 1196 "xmltok_impl.c"
        $12=$775; //@line 1196 "xmltok_impl.c"
        __label__ = 230; break; //@line 1196 "xmltok_impl.c"
      case 230: // $bb107
        var $776=$12; //@line 974 "xmltok_impl.c"
        $retval=$776; //@line 974 "xmltok_impl.c"
        var $retval108=$retval; //@line 974 "xmltok_impl.c"
        ;
        return $retval108; //@line 974 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_attributeValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1175;
        var $iftmp_1173;
        var $2;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 1204 "xmltok_impl.c"
        var $4=$end_addr; //@line 1204 "xmltok_impl.c"
        var $5=($3)==($4); //@line 1204 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1204 "xmltok_impl.c"
      case 1: // $bb
        $2=-4; //@line 1205 "xmltok_impl.c"
        __label__ = 45; break; //@line 1205 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 1206 "xmltok_impl.c"
        $start=$6; //@line 1206 "xmltok_impl.c"
        __label__ = 43; break; //@line 1206 "xmltok_impl.c"
      case 3: // $bb2
        var $7=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $8=$7; //@line 1208 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1208 "xmltok_impl.c"
        var $10=($9)==0; //@line 1208 "xmltok_impl.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1208 "xmltok_impl.c"
      case 4: // $bb3
        var $11=$enc_addr; //@line 1208 "xmltok_impl.c"
        var $12=$11; //@line 1208 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $14=$13+1; //@line 1208 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1208 "xmltok_impl.c"
        var $16=($15); //@line 1208 "xmltok_impl.c"
        var $17=$12+72; //@line 1208 "xmltok_impl.c"
        var $18=$17+$16; //@line 1208 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1208 "xmltok_impl.c"
        var $20=($19); //@line 1208 "xmltok_impl.c"
        $iftmp_1173=$20; //@line 1208 "xmltok_impl.c"
        __lastLabel__ = 4; __label__ = 12; break; //@line 1208 "xmltok_impl.c"
      case 5: // $bb4
        var $21=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $22=$21+1; //@line 1208 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1208 "xmltok_impl.c"
        var $24=($23); //@line 1208 "xmltok_impl.c"
        var $25=$ptr_addr; //@line 1208 "xmltok_impl.c"
        var $26=$25; //@line 1208 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 1208 "xmltok_impl.c"
        var $28=($27); //@line 1208 "xmltok_impl.c"
        var $29=((($28)) & 255); //@line 1208 "xmltok_impl.c"
        var $30=((($24)) & 255); //@line 1208 "xmltok_impl.c"
        $hi_addr_i=$29;
        $lo_addr_i=$30;
        var $31=$hi_addr_i; //@line 518 "xmltok.c"
        var $32=($31); //@line 518 "xmltok.c"
        if ($32 == 216) {
          __label__ = 6; break;
        }
        else if ($32 == 217) {
          __label__ = 6; break;
        }
        else if ($32 == 218) {
          __label__ = 6; break;
        }
        else if ($32 == 219) {
          __label__ = 6; break;
        }
        else if ($32 == 220) {
          __label__ = 7; break;
        }
        else if ($32 == 221) {
          __label__ = 7; break;
        }
        else if ($32 == 222) {
          __label__ = 7; break;
        }
        else if ($32 == 223) {
          __label__ = 7; break;
        }
        else if ($32 == 255) {
          __label__ = 8; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 6: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 11; break; //@line 520 "xmltok.c"
      case 7: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 11; break; //@line 522 "xmltok.c"
      case 8: // $bb2_i
        var $33=$lo_addr_i; //@line 524 "xmltok.c"
        var $34=($33); //@line 524 "xmltok.c"
        var $_off_i=($34) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 9; break; } else { __label__ = 10; break; }
      case 9: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 11; break; //@line 527 "xmltok.c"
      case 10: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 11; break; //@line 531 "xmltok.c"
      case 11: // $unicode_byte_type_exit
        var $35=$1; //@line 520 "xmltok.c"
        $retval_i=$35; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1173=$retval6_i; //@line 1208 "xmltok_impl.c"
        __lastLabel__ = 11; __label__ = 12; break; //@line 1208 "xmltok_impl.c"
      case 12: // $bb5
        var $36=__lastLabel__ == 11 ? $retval6_i : ($20);
        if ($36 == 2) {
          __label__ = 19; break;
        }
        else if ($36 == 3) {
          __label__ = 16; break;
        }
        else if ($36 == 5) {
          __label__ = 13; break;
        }
        else if ($36 == 6) {
          __label__ = 14; break;
        }
        else if ($36 == 7) {
          __label__ = 15; break;
        }
        else if ($36 == 9) {
          __label__ = 23; break;
        }
        else if ($36 == 10) {
          __label__ = 20; break;
        }
        else if ($36 == 21) {
          __label__ = 39; break;
        }
        else {
        __label__ = 42; break;
        }
        
      case 13: // $bb6
        var $37=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $38=$37+2; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$38; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 14: // $bb7
        var $39=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $40=$39+3; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$40; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 15: // $bb8
        var $41=$ptr_addr; //@line 1211 "xmltok_impl.c"
        var $42=$41+4; //@line 1211 "xmltok_impl.c"
        $ptr_addr=$42; //@line 1211 "xmltok_impl.c"
        __label__ = 43; break; //@line 1211 "xmltok_impl.c"
      case 16: // $bb9
        var $43=$ptr_addr; //@line 1214 "xmltok_impl.c"
        var $44=$start; //@line 1214 "xmltok_impl.c"
        var $45=($43)==($44); //@line 1214 "xmltok_impl.c"
        if ($45) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1214 "xmltok_impl.c"
      case 17: // $bb10
        var $46=$ptr_addr; //@line 1215 "xmltok_impl.c"
        var $47=$46+2; //@line 1215 "xmltok_impl.c"
        var $48=$enc_addr; //@line 1215 "xmltok_impl.c"
        var $49=$end_addr; //@line 1215 "xmltok_impl.c"
        var $50=$nextTokPtr_addr; //@line 1215 "xmltok_impl.c"
        var $51=_big2_scanRef($48, $47, $49, $50); //@line 1215 "xmltok_impl.c"
        $2=$51; //@line 1215 "xmltok_impl.c"
        __label__ = 45; break; //@line 1215 "xmltok_impl.c"
      case 18: // $bb11
        var $52=$nextTokPtr_addr; //@line 1216 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 1216 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 1216 "xmltok_impl.c"
        $2=6; //@line 1217 "xmltok_impl.c"
        __label__ = 45; break; //@line 1217 "xmltok_impl.c"
      case 19: // $bb12
        var $54=$nextTokPtr_addr; //@line 1220 "xmltok_impl.c"
        var $55=$ptr_addr; //@line 1220 "xmltok_impl.c"
        HEAP[$54]=$55; //@line 1220 "xmltok_impl.c"
        $2=0; //@line 1221 "xmltok_impl.c"
        __label__ = 45; break; //@line 1221 "xmltok_impl.c"
      case 20: // $bb13
        var $56=$ptr_addr; //@line 1223 "xmltok_impl.c"
        var $57=$start; //@line 1223 "xmltok_impl.c"
        var $58=($56)==($57); //@line 1223 "xmltok_impl.c"
        if ($58) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1223 "xmltok_impl.c"
      case 21: // $bb14
        var $59=$ptr_addr; //@line 1224 "xmltok_impl.c"
        var $60=$59+2; //@line 1224 "xmltok_impl.c"
        var $61=$nextTokPtr_addr; //@line 1224 "xmltok_impl.c"
        HEAP[$61]=$60; //@line 1224 "xmltok_impl.c"
        $2=7; //@line 1225 "xmltok_impl.c"
        __label__ = 45; break; //@line 1225 "xmltok_impl.c"
      case 22: // $bb15
        var $62=$nextTokPtr_addr; //@line 1227 "xmltok_impl.c"
        var $63=$ptr_addr; //@line 1227 "xmltok_impl.c"
        HEAP[$62]=$63; //@line 1227 "xmltok_impl.c"
        $2=6; //@line 1228 "xmltok_impl.c"
        __label__ = 45; break; //@line 1228 "xmltok_impl.c"
      case 23: // $bb16
        var $64=$ptr_addr; //@line 1230 "xmltok_impl.c"
        var $65=$start; //@line 1230 "xmltok_impl.c"
        var $66=($64)==($65); //@line 1230 "xmltok_impl.c"
        if ($66) { __label__ = 24; break; } else { __label__ = 38; break; } //@line 1230 "xmltok_impl.c"
      case 24: // $bb17
        var $67=$ptr_addr; //@line 1231 "xmltok_impl.c"
        var $68=$67+2; //@line 1231 "xmltok_impl.c"
        $ptr_addr=$68; //@line 1231 "xmltok_impl.c"
        var $69=$ptr_addr; //@line 1232 "xmltok_impl.c"
        var $70=$end_addr; //@line 1232 "xmltok_impl.c"
        var $71=($69)==($70); //@line 1232 "xmltok_impl.c"
        if ($71) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1232 "xmltok_impl.c"
      case 25: // $bb18
        $2=-3; //@line 1233 "xmltok_impl.c"
        __label__ = 45; break; //@line 1233 "xmltok_impl.c"
      case 26: // $bb19
        var $72=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $73=$72; //@line 1234 "xmltok_impl.c"
        var $74=HEAP[$73]; //@line 1234 "xmltok_impl.c"
        var $75=($74)==0; //@line 1234 "xmltok_impl.c"
        if ($75) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1234 "xmltok_impl.c"
      case 27: // $bb20
        var $76=$enc_addr; //@line 1234 "xmltok_impl.c"
        var $77=$76; //@line 1234 "xmltok_impl.c"
        var $78=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $79=$78+1; //@line 1234 "xmltok_impl.c"
        var $80=HEAP[$79]; //@line 1234 "xmltok_impl.c"
        var $81=($80); //@line 1234 "xmltok_impl.c"
        var $82=$77+72; //@line 1234 "xmltok_impl.c"
        var $83=$82+$81; //@line 1234 "xmltok_impl.c"
        var $84=HEAP[$83]; //@line 1234 "xmltok_impl.c"
        var $85=($84)==10; //@line 1234 "xmltok_impl.c"
        var $86=($85); //@line 1234 "xmltok_impl.c"
        $iftmp_1175=$86; //@line 1234 "xmltok_impl.c"
        __lastLabel__ = 27; __label__ = 35; break; //@line 1234 "xmltok_impl.c"
      case 28: // $bb21
        var $87=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $88=$87+1; //@line 1234 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 1234 "xmltok_impl.c"
        var $90=($89); //@line 1234 "xmltok_impl.c"
        var $91=$ptr_addr; //@line 1234 "xmltok_impl.c"
        var $92=$91; //@line 1234 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 1234 "xmltok_impl.c"
        var $94=($93); //@line 1234 "xmltok_impl.c"
        var $95=((($94)) & 255); //@line 1234 "xmltok_impl.c"
        var $96=((($90)) & 255); //@line 1234 "xmltok_impl.c"
        $hi_addr_i1=$95;
        $lo_addr_i2=$96;
        var $97=$hi_addr_i1; //@line 518 "xmltok.c"
        var $98=($97); //@line 518 "xmltok.c"
        if ($98 == 216) {
          __label__ = 29; break;
        }
        else if ($98 == 217) {
          __label__ = 29; break;
        }
        else if ($98 == 218) {
          __label__ = 29; break;
        }
        else if ($98 == 219) {
          __label__ = 29; break;
        }
        else if ($98 == 220) {
          __label__ = 30; break;
        }
        else if ($98 == 221) {
          __label__ = 30; break;
        }
        else if ($98 == 222) {
          __label__ = 30; break;
        }
        else if ($98 == 223) {
          __label__ = 30; break;
        }
        else if ($98 == 255) {
          __label__ = 31; break;
        }
        else {
        __label__ = 33; break;
        }
        
      case 29: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 34; break; //@line 520 "xmltok.c"
      case 30: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 34; break; //@line 522 "xmltok.c"
      case 31: // $bb2_i8
        var $99=$lo_addr_i2; //@line 524 "xmltok.c"
        var $100=($99); //@line 524 "xmltok.c"
        var $_off_i6=($100) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 32; break; } else { __label__ = 33; break; }
      case 32: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 34; break; //@line 527 "xmltok.c"
      case 33: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 34; break; //@line 531 "xmltok.c"
      case 34: // $unicode_byte_type_exit12
        var $101=$0; //@line 520 "xmltok.c"
        $retval_i3=$101; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $102=($retval6_i11)==10; //@line 1234 "xmltok_impl.c"
        var $103=($102); //@line 1234 "xmltok_impl.c"
        $iftmp_1175=$103; //@line 1234 "xmltok_impl.c"
        __lastLabel__ = 34; __label__ = 35; break; //@line 1234 "xmltok_impl.c"
      case 35: // $bb22
        var $104=__lastLabel__ == 34 ? $103 : ($86);
        var $toBool=($104)!=0; //@line 1234 "xmltok_impl.c"
        if ($toBool) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 1234 "xmltok_impl.c"
      case 36: // $bb23
        var $105=$ptr_addr; //@line 1235 "xmltok_impl.c"
        var $106=$105+2; //@line 1235 "xmltok_impl.c"
        $ptr_addr=$106; //@line 1235 "xmltok_impl.c"
        __label__ = 37; break; //@line 1235 "xmltok_impl.c"
      case 37: // $bb24
        var $107=$nextTokPtr_addr; //@line 1236 "xmltok_impl.c"
        var $108=$ptr_addr; //@line 1236 "xmltok_impl.c"
        HEAP[$107]=$108; //@line 1236 "xmltok_impl.c"
        $2=7; //@line 1237 "xmltok_impl.c"
        __label__ = 45; break; //@line 1237 "xmltok_impl.c"
      case 38: // $bb25
        var $109=$nextTokPtr_addr; //@line 1239 "xmltok_impl.c"
        var $110=$ptr_addr; //@line 1239 "xmltok_impl.c"
        HEAP[$109]=$110; //@line 1239 "xmltok_impl.c"
        $2=6; //@line 1240 "xmltok_impl.c"
        __label__ = 45; break; //@line 1240 "xmltok_impl.c"
      case 39: // $bb26
        var $111=$ptr_addr; //@line 1242 "xmltok_impl.c"
        var $112=$start; //@line 1242 "xmltok_impl.c"
        var $113=($111)==($112); //@line 1242 "xmltok_impl.c"
        if ($113) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1242 "xmltok_impl.c"
      case 40: // $bb27
        var $114=$ptr_addr; //@line 1243 "xmltok_impl.c"
        var $115=$114+2; //@line 1243 "xmltok_impl.c"
        var $116=$nextTokPtr_addr; //@line 1243 "xmltok_impl.c"
        HEAP[$116]=$115; //@line 1243 "xmltok_impl.c"
        $2=39; //@line 1244 "xmltok_impl.c"
        __label__ = 45; break; //@line 1244 "xmltok_impl.c"
      case 41: // $bb28
        var $117=$nextTokPtr_addr; //@line 1246 "xmltok_impl.c"
        var $118=$ptr_addr; //@line 1246 "xmltok_impl.c"
        HEAP[$117]=$118; //@line 1246 "xmltok_impl.c"
        $2=6; //@line 1247 "xmltok_impl.c"
        __label__ = 45; break; //@line 1247 "xmltok_impl.c"
      case 42: // $bb29
        var $119=$ptr_addr; //@line 1249 "xmltok_impl.c"
        var $120=$119+2; //@line 1249 "xmltok_impl.c"
        $ptr_addr=$120; //@line 1249 "xmltok_impl.c"
        __label__ = 43; break; //@line 1249 "xmltok_impl.c"
      case 43: // $bb30
        var $121=$ptr_addr; //@line 1207 "xmltok_impl.c"
        var $122=$end_addr; //@line 1207 "xmltok_impl.c"
        var $123=($121)!=($122); //@line 1207 "xmltok_impl.c"
        if ($123) { __label__ = 3; break; } else { __label__ = 44; break; } //@line 1207 "xmltok_impl.c"
      case 44: // $bb31
        var $124=$nextTokPtr_addr; //@line 1253 "xmltok_impl.c"
        var $125=$ptr_addr; //@line 1253 "xmltok_impl.c"
        HEAP[$124]=$125; //@line 1253 "xmltok_impl.c"
        $2=6; //@line 1254 "xmltok_impl.c"
        __label__ = 45; break; //@line 1254 "xmltok_impl.c"
      case 45: // $bb32
        var $126=$2; //@line 1205 "xmltok_impl.c"
        $retval=$126; //@line 1205 "xmltok_impl.c"
        var $retval33=$retval; //@line 1205 "xmltok_impl.c"
        ;
        return $retval33; //@line 1205 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_entityValueTok($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $iftmp_1180;
        var $iftmp_1179;
        var $iftmp_1177;
        var $2;
        var $start;
        var $tok;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $3=$ptr_addr; //@line 1262 "xmltok_impl.c"
        var $4=$end_addr; //@line 1262 "xmltok_impl.c"
        var $5=($3)==($4); //@line 1262 "xmltok_impl.c"
        if ($5) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1262 "xmltok_impl.c"
      case 1: // $bb
        $2=-4; //@line 1263 "xmltok_impl.c"
        __label__ = 47; break; //@line 1263 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$ptr_addr; //@line 1264 "xmltok_impl.c"
        $start=$6; //@line 1264 "xmltok_impl.c"
        __label__ = 45; break; //@line 1264 "xmltok_impl.c"
      case 3: // $bb2
        var $7=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $8=$7; //@line 1266 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1266 "xmltok_impl.c"
        var $10=($9)==0; //@line 1266 "xmltok_impl.c"
        if ($10) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1266 "xmltok_impl.c"
      case 4: // $bb3
        var $11=$enc_addr; //@line 1266 "xmltok_impl.c"
        var $12=$11; //@line 1266 "xmltok_impl.c"
        var $13=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $14=$13+1; //@line 1266 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1266 "xmltok_impl.c"
        var $16=($15); //@line 1266 "xmltok_impl.c"
        var $17=$12+72; //@line 1266 "xmltok_impl.c"
        var $18=$17+$16; //@line 1266 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1266 "xmltok_impl.c"
        var $20=($19); //@line 1266 "xmltok_impl.c"
        $iftmp_1177=$20; //@line 1266 "xmltok_impl.c"
        __lastLabel__ = 4; __label__ = 12; break; //@line 1266 "xmltok_impl.c"
      case 5: // $bb4
        var $21=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $22=$21+1; //@line 1266 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1266 "xmltok_impl.c"
        var $24=($23); //@line 1266 "xmltok_impl.c"
        var $25=$ptr_addr; //@line 1266 "xmltok_impl.c"
        var $26=$25; //@line 1266 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 1266 "xmltok_impl.c"
        var $28=($27); //@line 1266 "xmltok_impl.c"
        var $29=((($28)) & 255); //@line 1266 "xmltok_impl.c"
        var $30=((($24)) & 255); //@line 1266 "xmltok_impl.c"
        $hi_addr_i=$29;
        $lo_addr_i=$30;
        var $31=$hi_addr_i; //@line 518 "xmltok.c"
        var $32=($31); //@line 518 "xmltok.c"
        if ($32 == 216) {
          __label__ = 6; break;
        }
        else if ($32 == 217) {
          __label__ = 6; break;
        }
        else if ($32 == 218) {
          __label__ = 6; break;
        }
        else if ($32 == 219) {
          __label__ = 6; break;
        }
        else if ($32 == 220) {
          __label__ = 7; break;
        }
        else if ($32 == 221) {
          __label__ = 7; break;
        }
        else if ($32 == 222) {
          __label__ = 7; break;
        }
        else if ($32 == 223) {
          __label__ = 7; break;
        }
        else if ($32 == 255) {
          __label__ = 8; break;
        }
        else {
        __label__ = 10; break;
        }
        
      case 6: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 11; break; //@line 520 "xmltok.c"
      case 7: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 11; break; //@line 522 "xmltok.c"
      case 8: // $bb2_i
        var $33=$lo_addr_i; //@line 524 "xmltok.c"
        var $34=($33); //@line 524 "xmltok.c"
        var $_off_i=($34) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 9; break; } else { __label__ = 10; break; }
      case 9: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 11; break; //@line 527 "xmltok.c"
      case 10: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 11; break; //@line 531 "xmltok.c"
      case 11: // $unicode_byte_type_exit
        var $35=$1; //@line 520 "xmltok.c"
        $retval_i=$35; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1177=$retval6_i; //@line 1266 "xmltok_impl.c"
        __lastLabel__ = 11; __label__ = 12; break; //@line 1266 "xmltok_impl.c"
      case 12: // $bb5
        var $36=__lastLabel__ == 11 ? $retval6_i : ($20);
        if ($36 == 3) {
          __label__ = 16; break;
        }
        else if ($36 == 5) {
          __label__ = 13; break;
        }
        else if ($36 == 6) {
          __label__ = 14; break;
        }
        else if ($36 == 7) {
          __label__ = 15; break;
        }
        else if ($36 == 9) {
          __label__ = 28; break;
        }
        else if ($36 == 10) {
          __label__ = 25; break;
        }
        else if ($36 == 30) {
          __label__ = 19; break;
        }
        else {
        __label__ = 44; break;
        }
        
      case 13: // $bb6
        var $37=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $38=$37+2; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$38; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 14: // $bb7
        var $39=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $40=$39+3; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$40; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 15: // $bb8
        var $41=$ptr_addr; //@line 1269 "xmltok_impl.c"
        var $42=$41+4; //@line 1269 "xmltok_impl.c"
        $ptr_addr=$42; //@line 1269 "xmltok_impl.c"
        __label__ = 45; break; //@line 1269 "xmltok_impl.c"
      case 16: // $bb9
        var $43=$ptr_addr; //@line 1272 "xmltok_impl.c"
        var $44=$start; //@line 1272 "xmltok_impl.c"
        var $45=($43)==($44); //@line 1272 "xmltok_impl.c"
        if ($45) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1272 "xmltok_impl.c"
      case 17: // $bb10
        var $46=$ptr_addr; //@line 1273 "xmltok_impl.c"
        var $47=$46+2; //@line 1273 "xmltok_impl.c"
        var $48=$enc_addr; //@line 1273 "xmltok_impl.c"
        var $49=$end_addr; //@line 1273 "xmltok_impl.c"
        var $50=$nextTokPtr_addr; //@line 1273 "xmltok_impl.c"
        var $51=_big2_scanRef($48, $47, $49, $50); //@line 1273 "xmltok_impl.c"
        $2=$51; //@line 1273 "xmltok_impl.c"
        __label__ = 47; break; //@line 1273 "xmltok_impl.c"
      case 18: // $bb11
        var $52=$nextTokPtr_addr; //@line 1274 "xmltok_impl.c"
        var $53=$ptr_addr; //@line 1274 "xmltok_impl.c"
        HEAP[$52]=$53; //@line 1274 "xmltok_impl.c"
        $2=6; //@line 1275 "xmltok_impl.c"
        __label__ = 47; break; //@line 1275 "xmltok_impl.c"
      case 19: // $bb12
        var $54=$ptr_addr; //@line 1277 "xmltok_impl.c"
        var $55=$start; //@line 1277 "xmltok_impl.c"
        var $56=($54)==($55); //@line 1277 "xmltok_impl.c"
        if ($56) { __label__ = 20; break; } else { __label__ = 24; break; } //@line 1277 "xmltok_impl.c"
      case 20: // $bb13
        var $57=$ptr_addr; //@line 1279 "xmltok_impl.c"
        var $58=$57+2; //@line 1279 "xmltok_impl.c"
        var $59=$enc_addr; //@line 1279 "xmltok_impl.c"
        var $60=$end_addr; //@line 1279 "xmltok_impl.c"
        var $61=$nextTokPtr_addr; //@line 1279 "xmltok_impl.c"
        var $62=_big2_scanPercent($59, $58, $60, $61); //@line 1279 "xmltok_impl.c"
        $tok=$62; //@line 1279 "xmltok_impl.c"
        var $63=$tok; //@line 1280 "xmltok_impl.c"
        var $64=($63)!=22; //@line 1280 "xmltok_impl.c"
        if ($64) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1280 "xmltok_impl.c"
      case 21: // $bb14
        var $65=$tok; //@line 1280 "xmltok_impl.c"
        $iftmp_1179=$65; //@line 1280 "xmltok_impl.c"
        __label__ = 23; break; //@line 1280 "xmltok_impl.c"
      case 22: // $bb15
        $iftmp_1179=0; //@line 1280 "xmltok_impl.c"
        __label__ = 23; break; //@line 1280 "xmltok_impl.c"
      case 23: // $bb16
        var $66=$iftmp_1179; //@line 1280 "xmltok_impl.c"
        $2=$66; //@line 1280 "xmltok_impl.c"
        __label__ = 47; break; //@line 1280 "xmltok_impl.c"
      case 24: // $bb17
        var $67=$nextTokPtr_addr; //@line 1282 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 1282 "xmltok_impl.c"
        HEAP[$67]=$68; //@line 1282 "xmltok_impl.c"
        $2=6; //@line 1283 "xmltok_impl.c"
        __label__ = 47; break; //@line 1283 "xmltok_impl.c"
      case 25: // $bb18
        var $69=$ptr_addr; //@line 1285 "xmltok_impl.c"
        var $70=$start; //@line 1285 "xmltok_impl.c"
        var $71=($69)==($70); //@line 1285 "xmltok_impl.c"
        if ($71) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1285 "xmltok_impl.c"
      case 26: // $bb19
        var $72=$ptr_addr; //@line 1286 "xmltok_impl.c"
        var $73=$72+2; //@line 1286 "xmltok_impl.c"
        var $74=$nextTokPtr_addr; //@line 1286 "xmltok_impl.c"
        HEAP[$74]=$73; //@line 1286 "xmltok_impl.c"
        $2=7; //@line 1287 "xmltok_impl.c"
        __label__ = 47; break; //@line 1287 "xmltok_impl.c"
      case 27: // $bb20
        var $75=$nextTokPtr_addr; //@line 1289 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 1289 "xmltok_impl.c"
        HEAP[$75]=$76; //@line 1289 "xmltok_impl.c"
        $2=6; //@line 1290 "xmltok_impl.c"
        __label__ = 47; break; //@line 1290 "xmltok_impl.c"
      case 28: // $bb21
        var $77=$ptr_addr; //@line 1292 "xmltok_impl.c"
        var $78=$start; //@line 1292 "xmltok_impl.c"
        var $79=($77)==($78); //@line 1292 "xmltok_impl.c"
        if ($79) { __label__ = 29; break; } else { __label__ = 43; break; } //@line 1292 "xmltok_impl.c"
      case 29: // $bb22
        var $80=$ptr_addr; //@line 1293 "xmltok_impl.c"
        var $81=$80+2; //@line 1293 "xmltok_impl.c"
        $ptr_addr=$81; //@line 1293 "xmltok_impl.c"
        var $82=$ptr_addr; //@line 1294 "xmltok_impl.c"
        var $83=$end_addr; //@line 1294 "xmltok_impl.c"
        var $84=($82)==($83); //@line 1294 "xmltok_impl.c"
        if ($84) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1294 "xmltok_impl.c"
      case 30: // $bb23
        $2=-3; //@line 1295 "xmltok_impl.c"
        __label__ = 47; break; //@line 1295 "xmltok_impl.c"
      case 31: // $bb24
        var $85=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $86=$85; //@line 1296 "xmltok_impl.c"
        var $87=HEAP[$86]; //@line 1296 "xmltok_impl.c"
        var $88=($87)==0; //@line 1296 "xmltok_impl.c"
        if ($88) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1296 "xmltok_impl.c"
      case 32: // $bb25
        var $89=$enc_addr; //@line 1296 "xmltok_impl.c"
        var $90=$89; //@line 1296 "xmltok_impl.c"
        var $91=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $92=$91+1; //@line 1296 "xmltok_impl.c"
        var $93=HEAP[$92]; //@line 1296 "xmltok_impl.c"
        var $94=($93); //@line 1296 "xmltok_impl.c"
        var $95=$90+72; //@line 1296 "xmltok_impl.c"
        var $96=$95+$94; //@line 1296 "xmltok_impl.c"
        var $97=HEAP[$96]; //@line 1296 "xmltok_impl.c"
        var $98=($97)==10; //@line 1296 "xmltok_impl.c"
        var $99=($98); //@line 1296 "xmltok_impl.c"
        $iftmp_1180=$99; //@line 1296 "xmltok_impl.c"
        __lastLabel__ = 32; __label__ = 40; break; //@line 1296 "xmltok_impl.c"
      case 33: // $bb26
        var $100=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $101=$100+1; //@line 1296 "xmltok_impl.c"
        var $102=HEAP[$101]; //@line 1296 "xmltok_impl.c"
        var $103=($102); //@line 1296 "xmltok_impl.c"
        var $104=$ptr_addr; //@line 1296 "xmltok_impl.c"
        var $105=$104; //@line 1296 "xmltok_impl.c"
        var $106=HEAP[$105]; //@line 1296 "xmltok_impl.c"
        var $107=($106); //@line 1296 "xmltok_impl.c"
        var $108=((($107)) & 255); //@line 1296 "xmltok_impl.c"
        var $109=((($103)) & 255); //@line 1296 "xmltok_impl.c"
        $hi_addr_i1=$108;
        $lo_addr_i2=$109;
        var $110=$hi_addr_i1; //@line 518 "xmltok.c"
        var $111=($110); //@line 518 "xmltok.c"
        if ($111 == 216) {
          __label__ = 34; break;
        }
        else if ($111 == 217) {
          __label__ = 34; break;
        }
        else if ($111 == 218) {
          __label__ = 34; break;
        }
        else if ($111 == 219) {
          __label__ = 34; break;
        }
        else if ($111 == 220) {
          __label__ = 35; break;
        }
        else if ($111 == 221) {
          __label__ = 35; break;
        }
        else if ($111 == 222) {
          __label__ = 35; break;
        }
        else if ($111 == 223) {
          __label__ = 35; break;
        }
        else if ($111 == 255) {
          __label__ = 36; break;
        }
        else {
        __label__ = 38; break;
        }
        
      case 34: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 39; break; //@line 520 "xmltok.c"
      case 35: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 39; break; //@line 522 "xmltok.c"
      case 36: // $bb2_i8
        var $112=$lo_addr_i2; //@line 524 "xmltok.c"
        var $113=($112); //@line 524 "xmltok.c"
        var $_off_i6=($113) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 37; break; } else { __label__ = 38; break; }
      case 37: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 39; break; //@line 527 "xmltok.c"
      case 38: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 39; break; //@line 531 "xmltok.c"
      case 39: // $unicode_byte_type_exit12
        var $114=$0; //@line 520 "xmltok.c"
        $retval_i3=$114; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $115=($retval6_i11)==10; //@line 1296 "xmltok_impl.c"
        var $116=($115); //@line 1296 "xmltok_impl.c"
        $iftmp_1180=$116; //@line 1296 "xmltok_impl.c"
        __lastLabel__ = 39; __label__ = 40; break; //@line 1296 "xmltok_impl.c"
      case 40: // $bb27
        var $117=__lastLabel__ == 39 ? $116 : ($99);
        var $toBool=($117)!=0; //@line 1296 "xmltok_impl.c"
        if ($toBool) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 1296 "xmltok_impl.c"
      case 41: // $bb28
        var $118=$ptr_addr; //@line 1297 "xmltok_impl.c"
        var $119=$118+2; //@line 1297 "xmltok_impl.c"
        $ptr_addr=$119; //@line 1297 "xmltok_impl.c"
        __label__ = 42; break; //@line 1297 "xmltok_impl.c"
      case 42: // $bb29
        var $120=$nextTokPtr_addr; //@line 1298 "xmltok_impl.c"
        var $121=$ptr_addr; //@line 1298 "xmltok_impl.c"
        HEAP[$120]=$121; //@line 1298 "xmltok_impl.c"
        $2=7; //@line 1299 "xmltok_impl.c"
        __label__ = 47; break; //@line 1299 "xmltok_impl.c"
      case 43: // $bb30
        var $122=$nextTokPtr_addr; //@line 1301 "xmltok_impl.c"
        var $123=$ptr_addr; //@line 1301 "xmltok_impl.c"
        HEAP[$122]=$123; //@line 1301 "xmltok_impl.c"
        $2=6; //@line 1302 "xmltok_impl.c"
        __label__ = 47; break; //@line 1302 "xmltok_impl.c"
      case 44: // $bb31
        var $124=$ptr_addr; //@line 1304 "xmltok_impl.c"
        var $125=$124+2; //@line 1304 "xmltok_impl.c"
        $ptr_addr=$125; //@line 1304 "xmltok_impl.c"
        __label__ = 45; break; //@line 1304 "xmltok_impl.c"
      case 45: // $bb32
        var $126=$ptr_addr; //@line 1265 "xmltok_impl.c"
        var $127=$end_addr; //@line 1265 "xmltok_impl.c"
        var $128=($126)!=($127); //@line 1265 "xmltok_impl.c"
        if ($128) { __label__ = 3; break; } else { __label__ = 46; break; } //@line 1265 "xmltok_impl.c"
      case 46: // $bb33
        var $129=$nextTokPtr_addr; //@line 1308 "xmltok_impl.c"
        var $130=$ptr_addr; //@line 1308 "xmltok_impl.c"
        HEAP[$129]=$130; //@line 1308 "xmltok_impl.c"
        $2=6; //@line 1309 "xmltok_impl.c"
        __label__ = 47; break; //@line 1309 "xmltok_impl.c"
      case 47: // $bb34
        var $131=$2; //@line 1263 "xmltok_impl.c"
        $retval=$131; //@line 1263 "xmltok_impl.c"
        var $retval35=$retval; //@line 1263 "xmltok_impl.c"
        ;
        return $retval35; //@line 1263 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_isPublicId($enc, $ptr, $end, $badPtr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $badPtr_addr;
        var $retval;
        var $iftmp_1184;
        var $1;
        var $iftmp_1182;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $badPtr_addr=$badPtr;
        var $2=$ptr_addr; //@line 1371 "xmltok_impl.c"
        var $3=$2+2; //@line 1371 "xmltok_impl.c"
        $ptr_addr=$3; //@line 1371 "xmltok_impl.c"
        var $4=$end_addr; //@line 1372 "xmltok_impl.c"
        var $5=$4+-2; //@line 1372 "xmltok_impl.c"
        $end_addr=$5; //@line 1372 "xmltok_impl.c"
        __label__ = 21; break; //@line 1372 "xmltok_impl.c"
      case 1: // $bb
        var $6=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $7=$6; //@line 1374 "xmltok_impl.c"
        var $8=HEAP[$7]; //@line 1374 "xmltok_impl.c"
        var $9=($8)==0; //@line 1374 "xmltok_impl.c"
        if ($9) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1374 "xmltok_impl.c"
      case 2: // $bb1
        var $10=$enc_addr; //@line 1374 "xmltok_impl.c"
        var $11=$10; //@line 1374 "xmltok_impl.c"
        var $12=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $13=$12+1; //@line 1374 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1374 "xmltok_impl.c"
        var $15=($14); //@line 1374 "xmltok_impl.c"
        var $16=$11+72; //@line 1374 "xmltok_impl.c"
        var $17=$16+$15; //@line 1374 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1374 "xmltok_impl.c"
        var $19=($18); //@line 1374 "xmltok_impl.c"
        $iftmp_1182=$19; //@line 1374 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1374 "xmltok_impl.c"
      case 3: // $bb2
        var $20=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $21=$20+1; //@line 1374 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1374 "xmltok_impl.c"
        var $23=($22); //@line 1374 "xmltok_impl.c"
        var $24=$ptr_addr; //@line 1374 "xmltok_impl.c"
        var $25=$24; //@line 1374 "xmltok_impl.c"
        var $26=HEAP[$25]; //@line 1374 "xmltok_impl.c"
        var $27=($26); //@line 1374 "xmltok_impl.c"
        var $28=((($27)) & 255); //@line 1374 "xmltok_impl.c"
        var $29=((($23)) & 255); //@line 1374 "xmltok_impl.c"
        $hi_addr_i=$28;
        $lo_addr_i=$29;
        var $30=$hi_addr_i; //@line 518 "xmltok.c"
        var $31=($30); //@line 518 "xmltok.c"
        if ($31 == 216) {
          __label__ = 4; break;
        }
        else if ($31 == 217) {
          __label__ = 4; break;
        }
        else if ($31 == 218) {
          __label__ = 4; break;
        }
        else if ($31 == 219) {
          __label__ = 4; break;
        }
        else if ($31 == 220) {
          __label__ = 5; break;
        }
        else if ($31 == 221) {
          __label__ = 5; break;
        }
        else if ($31 == 222) {
          __label__ = 5; break;
        }
        else if ($31 == 223) {
          __label__ = 5; break;
        }
        else if ($31 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $32=$lo_addr_i; //@line 524 "xmltok.c"
        var $33=($32); //@line 524 "xmltok.c"
        var $_off_i=($33) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $34=$0; //@line 520 "xmltok.c"
        $retval_i=$34; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1182=$retval6_i; //@line 1374 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1374 "xmltok_impl.c"
      case 10: // $bb3
        var $35=__lastLabel__ == 9 ? $retval6_i : ($19);
        if ($35 == 9) {
          __label__ = 20; break;
        }
        else if ($35 == 10) {
          __label__ = 20; break;
        }
        else if ($35 == 13) {
          __label__ = 20; break;
        }
        else if ($35 == 14) {
          __label__ = 20; break;
        }
        else if ($35 == 15) {
          __label__ = 20; break;
        }
        else if ($35 == 16) {
          __label__ = 20; break;
        }
        else if ($35 == 17) {
          __label__ = 20; break;
        }
        else if ($35 == 18) {
          __label__ = 20; break;
        }
        else if ($35 == 19) {
          __label__ = 20; break;
        }
        else if ($35 == 21) {
          __label__ = 11; break;
        }
        else if ($35 == 22) {
          __label__ = 14; break;
        }
        else if ($35 == 24) {
          __label__ = 20; break;
        }
        else if ($35 == 25) {
          __label__ = 20; break;
        }
        else if ($35 == 26) {
          __label__ = 14; break;
        }
        else if ($35 == 27) {
          __label__ = 20; break;
        }
        else if ($35 == 30) {
          __label__ = 20; break;
        }
        else if ($35 == 31) {
          __label__ = 20; break;
        }
        else if ($35 == 32) {
          __label__ = 20; break;
        }
        else if ($35 == 33) {
          __label__ = 20; break;
        }
        else if ($35 == 34) {
          __label__ = 20; break;
        }
        else if ($35 == 35) {
          __label__ = 20; break;
        }
        else {
        __label__ = 16; break;
        }
        
      case 11: // $bb5
        var $36=$ptr_addr; //@line 1398 "xmltok_impl.c"
        var $37=$36; //@line 1398 "xmltok_impl.c"
        var $38=HEAP[$37]; //@line 1398 "xmltok_impl.c"
        var $39=($38)==0; //@line 1398 "xmltok_impl.c"
        if ($39) { __label__ = 12; break; } else { __label__ = 20; break; } //@line 1398 "xmltok_impl.c"
      case 12: // $bb6
        var $40=$ptr_addr; //@line 1398 "xmltok_impl.c"
        var $41=$40+1; //@line 1398 "xmltok_impl.c"
        var $42=HEAP[$41]; //@line 1398 "xmltok_impl.c"
        var $43=($42)==9; //@line 1398 "xmltok_impl.c"
        if ($43) { __label__ = 13; break; } else { __label__ = 20; break; } //@line 1398 "xmltok_impl.c"
      case 13: // $bb7
        var $44=$badPtr_addr; //@line 1399 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 1399 "xmltok_impl.c"
        HEAP[$44]=$45; //@line 1399 "xmltok_impl.c"
        $1=0; //@line 1400 "xmltok_impl.c"
        __label__ = 23; break; //@line 1400 "xmltok_impl.c"
      case 14: // $bb9
        var $46=$ptr_addr; //@line 1405 "xmltok_impl.c"
        var $47=$46; //@line 1405 "xmltok_impl.c"
        var $48=HEAP[$47]; //@line 1405 "xmltok_impl.c"
        var $49=($48)==0; //@line 1405 "xmltok_impl.c"
        if ($49) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 1405 "xmltok_impl.c"
      case 15: // $bb10
        var $50=$ptr_addr; //@line 1405 "xmltok_impl.c"
        var $51=$50+1; //@line 1405 "xmltok_impl.c"
        var $52=HEAP[$51]; //@line 1405 "xmltok_impl.c"
        var $53=($52); //@line 1405 "xmltok_impl.c"
        var $54=($53) & -128; //@line 1405 "xmltok_impl.c"
        var $55=($54)==0; //@line 1405 "xmltok_impl.c"
        if ($55) { __label__ = 20; break; } else { __label__ = 16; break; } //@line 1405 "xmltok_impl.c"
      case 16: // $bb11
        var $56=$ptr_addr; //@line 1408 "xmltok_impl.c"
        var $57=$56; //@line 1408 "xmltok_impl.c"
        var $58=HEAP[$57]; //@line 1408 "xmltok_impl.c"
        var $59=($58)==0; //@line 1408 "xmltok_impl.c"
        if ($59) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 1408 "xmltok_impl.c"
      case 17: // $bb14_thread
        $iftmp_1184=-1; //@line 1408 "xmltok_impl.c"
        __label__ = 19; break;
      case 18: // $bb14
        var $60=$ptr_addr; //@line 1408 "xmltok_impl.c"
        var $61=$60+1; //@line 1408 "xmltok_impl.c"
        var $62=HEAP[$61]; //@line 1408 "xmltok_impl.c"
        var $63=($62); //@line 1408 "xmltok_impl.c"
        $iftmp_1184=$63; //@line 1408 "xmltok_impl.c"
        if ($63 == 36) {
          __label__ = 20; break;
        }
        else if ($63 == 64) {
          __label__ = 20; break;
        }
        else {
        __label__ = 19; break;
        }
        
      case 19: // $bb16
        var $64=$badPtr_addr; //@line 1413 "xmltok_impl.c"
        var $65=$ptr_addr; //@line 1413 "xmltok_impl.c"
        HEAP[$64]=$65; //@line 1413 "xmltok_impl.c"
        $1=0; //@line 1414 "xmltok_impl.c"
        __label__ = 23; break; //@line 1414 "xmltok_impl.c"
      case 20: // $bb17
        var $66=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $67=$66+2; //@line 1373 "xmltok_impl.c"
        $ptr_addr=$67; //@line 1373 "xmltok_impl.c"
        __label__ = 21; break; //@line 1373 "xmltok_impl.c"
      case 21: // $bb18
        var $68=$ptr_addr; //@line 1373 "xmltok_impl.c"
        var $69=$end_addr; //@line 1373 "xmltok_impl.c"
        var $70=($68)!=($69); //@line 1373 "xmltok_impl.c"
        if ($70) { __label__ = 1; break; } else { __label__ = 22; break; } //@line 1373 "xmltok_impl.c"
      case 22: // $bb19
        $1=1; //@line 1419 "xmltok_impl.c"
        __label__ = 23; break; //@line 1419 "xmltok_impl.c"
      case 23: // $bb20
        var $71=$1; //@line 1400 "xmltok_impl.c"
        $retval=$71; //@line 1400 "xmltok_impl.c"
        var $retval21=$retval; //@line 1400 "xmltok_impl.c"
        ;
        return $retval21; //@line 1400 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_getAtts($enc, $ptr, $attsMax, $atts) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $attsMax_addr;
        var $atts_addr;
        var $retval;
        var $2;
        var $iftmp_1187;
        var $iftmp_1185;
        var $state;
        var $nAtts;
        var $open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $attsMax_addr=$attsMax;
        $atts_addr=$atts;
        $state=1; //@line 1431 "xmltok_impl.c"
        $nAtts=0; //@line 1432 "xmltok_impl.c"
        $open=0; //@line 1433 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $4=$3+2; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$4; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $6=$5; //@line 1437 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1437 "xmltok_impl.c"
        var $8=($7)==0; //@line 1437 "xmltok_impl.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1437 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$enc_addr; //@line 1437 "xmltok_impl.c"
        var $10=$9; //@line 1437 "xmltok_impl.c"
        var $11=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $12=$11+1; //@line 1437 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 1437 "xmltok_impl.c"
        var $14=($13); //@line 1437 "xmltok_impl.c"
        var $15=$10+72; //@line 1437 "xmltok_impl.c"
        var $16=$15+$14; //@line 1437 "xmltok_impl.c"
        var $17=HEAP[$16]; //@line 1437 "xmltok_impl.c"
        var $18=($17); //@line 1437 "xmltok_impl.c"
        $iftmp_1185=$18; //@line 1437 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1437 "xmltok_impl.c"
      case 3: // $bb2
        var $19=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $20=$19+1; //@line 1437 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 1437 "xmltok_impl.c"
        var $22=($21); //@line 1437 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 1437 "xmltok_impl.c"
        var $24=$23; //@line 1437 "xmltok_impl.c"
        var $25=HEAP[$24]; //@line 1437 "xmltok_impl.c"
        var $26=($25); //@line 1437 "xmltok_impl.c"
        var $27=((($26)) & 255); //@line 1437 "xmltok_impl.c"
        var $28=((($22)) & 255); //@line 1437 "xmltok_impl.c"
        $hi_addr_i=$27;
        $lo_addr_i=$28;
        var $29=$hi_addr_i; //@line 518 "xmltok.c"
        var $30=($29); //@line 518 "xmltok.c"
        if ($30 == 216) {
          __label__ = 4; break;
        }
        else if ($30 == 217) {
          __label__ = 4; break;
        }
        else if ($30 == 218) {
          __label__ = 4; break;
        }
        else if ($30 == 219) {
          __label__ = 4; break;
        }
        else if ($30 == 220) {
          __label__ = 5; break;
        }
        else if ($30 == 221) {
          __label__ = 5; break;
        }
        else if ($30 == 222) {
          __label__ = 5; break;
        }
        else if ($30 == 223) {
          __label__ = 5; break;
        }
        else if ($30 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $31=$lo_addr_i; //@line 524 "xmltok.c"
        var $32=($31); //@line 524 "xmltok.c"
        var $_off_i=($32) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $33=$1; //@line 520 "xmltok.c"
        $retval_i=$33; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1185=$retval6_i; //@line 1437 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1437 "xmltok_impl.c"
      case 10: // $bb3
        var $34=__lastLabel__ == 9 ? $retval6_i : ($18);
        if ($34 == 3) {
          __label__ = 46; break;
        }
        else if ($34 == 5) {
          __label__ = 11; break;
        }
        else if ($34 == 6) {
          __label__ = 16; break;
        }
        else if ($34 == 7) {
          __label__ = 21; break;
        }
        else if ($34 == 9) {
          __label__ = 69; break;
        }
        else if ($34 == 10) {
          __label__ = 69; break;
        }
        else if ($34 == 11) {
          __label__ = 74; break;
        }
        else if ($34 == 12) {
          __label__ = 30; break;
        }
        else if ($34 == 13) {
          __label__ = 38; break;
        }
        else if ($34 == 17) {
          __label__ = 74; break;
        }
        else if ($34 == 21) {
          __label__ = 48; break;
        }
        else if ($34 == 22) {
          __label__ = 26; break;
        }
        else if ($34 == 24) {
          __label__ = 26; break;
        }
        else if ($34 == 29) {
          __label__ = 26; break;
        }
        else {
        __label__ = 76; break;
        }
        
      case 11: // $bb4
        var $35=$state; //@line 1448 "xmltok_impl.c"
        var $36=($35)==0; //@line 1448 "xmltok_impl.c"
        if ($36) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 1448 "xmltok_impl.c"
      case 12: // $bb5
        var $37=$nAtts; //@line 1448 "xmltok_impl.c"
        var $38=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $39=($37) < ($38); //@line 1448 "xmltok_impl.c"
        if ($39) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1448 "xmltok_impl.c"
      case 13: // $bb6
        var $40=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $41=$nAtts; //@line 1448 "xmltok_impl.c"
        var $42=$40+16*$41; //@line 1448 "xmltok_impl.c"
        var $43=$42; //@line 1448 "xmltok_impl.c"
        var $44=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$43]=$44; //@line 1448 "xmltok_impl.c"
        var $45=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $46=$nAtts; //@line 1448 "xmltok_impl.c"
        var $47=$45+16*$46; //@line 1448 "xmltok_impl.c"
        var $48=$47+12; //@line 1448 "xmltok_impl.c"
        HEAP[$48]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 14; break; //@line 1448 "xmltok_impl.c"
      case 14: // $bb7
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 15; break; //@line 1448 "xmltok_impl.c"
      case 15: // $bb8
        var $49=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $50=$49; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$50; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 16: // $bb9
        var $51=$state; //@line 1448 "xmltok_impl.c"
        var $52=($51)==0; //@line 1448 "xmltok_impl.c"
        if ($52) { __label__ = 17; break; } else { __label__ = 20; break; } //@line 1448 "xmltok_impl.c"
      case 17: // $bb10
        var $53=$nAtts; //@line 1448 "xmltok_impl.c"
        var $54=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $55=($53) < ($54); //@line 1448 "xmltok_impl.c"
        if ($55) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 1448 "xmltok_impl.c"
      case 18: // $bb11
        var $56=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $57=$nAtts; //@line 1448 "xmltok_impl.c"
        var $58=$56+16*$57; //@line 1448 "xmltok_impl.c"
        var $59=$58; //@line 1448 "xmltok_impl.c"
        var $60=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$59]=$60; //@line 1448 "xmltok_impl.c"
        var $61=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $62=$nAtts; //@line 1448 "xmltok_impl.c"
        var $63=$61+16*$62; //@line 1448 "xmltok_impl.c"
        var $64=$63+12; //@line 1448 "xmltok_impl.c"
        HEAP[$64]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 19; break; //@line 1448 "xmltok_impl.c"
      case 19: // $bb12
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 20; break; //@line 1448 "xmltok_impl.c"
      case 20: // $bb13
        var $65=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $66=$65+1; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$66; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 21: // $bb14
        var $67=$state; //@line 1448 "xmltok_impl.c"
        var $68=($67)==0; //@line 1448 "xmltok_impl.c"
        if ($68) { __label__ = 22; break; } else { __label__ = 25; break; } //@line 1448 "xmltok_impl.c"
      case 22: // $bb15
        var $69=$nAtts; //@line 1448 "xmltok_impl.c"
        var $70=$attsMax_addr; //@line 1448 "xmltok_impl.c"
        var $71=($69) < ($70); //@line 1448 "xmltok_impl.c"
        if ($71) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1448 "xmltok_impl.c"
      case 23: // $bb16
        var $72=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $73=$nAtts; //@line 1448 "xmltok_impl.c"
        var $74=$72+16*$73; //@line 1448 "xmltok_impl.c"
        var $75=$74; //@line 1448 "xmltok_impl.c"
        var $76=$ptr_addr; //@line 1448 "xmltok_impl.c"
        HEAP[$75]=$76; //@line 1448 "xmltok_impl.c"
        var $77=$atts_addr; //@line 1448 "xmltok_impl.c"
        var $78=$nAtts; //@line 1448 "xmltok_impl.c"
        var $79=$77+16*$78; //@line 1448 "xmltok_impl.c"
        var $80=$79+12; //@line 1448 "xmltok_impl.c"
        HEAP[$80]=1; //@line 1448 "xmltok_impl.c"
        __label__ = 24; break; //@line 1448 "xmltok_impl.c"
      case 24: // $bb17
        $state=1; //@line 1448 "xmltok_impl.c"
        __label__ = 25; break; //@line 1448 "xmltok_impl.c"
      case 25: // $bb18
        var $81=$ptr_addr; //@line 1448 "xmltok_impl.c"
        var $82=$81+2; //@line 1448 "xmltok_impl.c"
        $ptr_addr=$82; //@line 1448 "xmltok_impl.c"
        __label__ = 76; break; //@line 1448 "xmltok_impl.c"
      case 26: // $bb19
        var $83=$state; //@line 1453 "xmltok_impl.c"
        var $84=($83)==0; //@line 1453 "xmltok_impl.c"
        if ($84) { __label__ = 27; break; } else { __label__ = 76; break; } //@line 1453 "xmltok_impl.c"
      case 27: // $bb20
        var $85=$nAtts; //@line 1453 "xmltok_impl.c"
        var $86=$attsMax_addr; //@line 1453 "xmltok_impl.c"
        var $87=($85) < ($86); //@line 1453 "xmltok_impl.c"
        if ($87) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1453 "xmltok_impl.c"
      case 28: // $bb21
        var $88=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $89=$nAtts; //@line 1453 "xmltok_impl.c"
        var $90=$88+16*$89; //@line 1453 "xmltok_impl.c"
        var $91=$90; //@line 1453 "xmltok_impl.c"
        var $92=$ptr_addr; //@line 1453 "xmltok_impl.c"
        HEAP[$91]=$92; //@line 1453 "xmltok_impl.c"
        var $93=$atts_addr; //@line 1453 "xmltok_impl.c"
        var $94=$nAtts; //@line 1453 "xmltok_impl.c"
        var $95=$93+16*$94; //@line 1453 "xmltok_impl.c"
        var $96=$95+12; //@line 1453 "xmltok_impl.c"
        HEAP[$96]=1; //@line 1453 "xmltok_impl.c"
        __label__ = 29; break; //@line 1453 "xmltok_impl.c"
      case 29: // $bb22
        $state=1; //@line 1453 "xmltok_impl.c"
        __label__ = 76; break; //@line 1453 "xmltok_impl.c"
      case 30: // $bb24
        var $97=$state; //@line 1457 "xmltok_impl.c"
        var $98=($97)!=2; //@line 1457 "xmltok_impl.c"
        if ($98) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 1457 "xmltok_impl.c"
      case 31: // $bb25
        var $99=$nAtts; //@line 1458 "xmltok_impl.c"
        var $100=$attsMax_addr; //@line 1458 "xmltok_impl.c"
        var $101=($99) < ($100); //@line 1458 "xmltok_impl.c"
        if ($101) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1458 "xmltok_impl.c"
      case 32: // $bb26
        var $102=$atts_addr; //@line 1459 "xmltok_impl.c"
        var $103=$nAtts; //@line 1459 "xmltok_impl.c"
        var $104=$102+16*$103; //@line 1459 "xmltok_impl.c"
        var $105=$ptr_addr; //@line 1459 "xmltok_impl.c"
        var $106=$105+2; //@line 1459 "xmltok_impl.c"
        var $107=$104+4; //@line 1459 "xmltok_impl.c"
        HEAP[$107]=$106; //@line 1459 "xmltok_impl.c"
        __label__ = 33; break; //@line 1459 "xmltok_impl.c"
      case 33: // $bb27
        $state=2; //@line 1460 "xmltok_impl.c"
        $open=12; //@line 1461 "xmltok_impl.c"
        __label__ = 76; break; //@line 1461 "xmltok_impl.c"
      case 34: // $bb28
        var $108=$open; //@line 1463 "xmltok_impl.c"
        var $109=($108)==12; //@line 1463 "xmltok_impl.c"
        if ($109) { __label__ = 35; break; } else { __label__ = 76; break; } //@line 1463 "xmltok_impl.c"
      case 35: // $bb29
        $state=0; //@line 1464 "xmltok_impl.c"
        var $110=$nAtts; //@line 1465 "xmltok_impl.c"
        var $111=$attsMax_addr; //@line 1465 "xmltok_impl.c"
        var $112=($110) < ($111); //@line 1465 "xmltok_impl.c"
        if ($112) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 1465 "xmltok_impl.c"
      case 36: // $bb30
        var $113=$atts_addr; //@line 1466 "xmltok_impl.c"
        var $114=$nAtts; //@line 1466 "xmltok_impl.c"
        var $115=$113+16*$114; //@line 1466 "xmltok_impl.c"
        var $116=$115+8; //@line 1466 "xmltok_impl.c"
        var $117=$ptr_addr; //@line 1466 "xmltok_impl.c"
        HEAP[$116]=$117; //@line 1466 "xmltok_impl.c"
        __label__ = 37; break; //@line 1466 "xmltok_impl.c"
      case 37: // $bb31
        var $118=$nAtts; //@line 1467 "xmltok_impl.c"
        var $119=($118) + 1; //@line 1467 "xmltok_impl.c"
        $nAtts=$119; //@line 1467 "xmltok_impl.c"
        __label__ = 76; break; //@line 1467 "xmltok_impl.c"
      case 38: // $bb33
        var $120=$state; //@line 1471 "xmltok_impl.c"
        var $121=($120)!=2; //@line 1471 "xmltok_impl.c"
        if ($121) { __label__ = 39; break; } else { __label__ = 42; break; } //@line 1471 "xmltok_impl.c"
      case 39: // $bb34
        var $122=$nAtts; //@line 1472 "xmltok_impl.c"
        var $123=$attsMax_addr; //@line 1472 "xmltok_impl.c"
        var $124=($122) < ($123); //@line 1472 "xmltok_impl.c"
        if ($124) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 1472 "xmltok_impl.c"
      case 40: // $bb35
        var $125=$atts_addr; //@line 1473 "xmltok_impl.c"
        var $126=$nAtts; //@line 1473 "xmltok_impl.c"
        var $127=$125+16*$126; //@line 1473 "xmltok_impl.c"
        var $128=$ptr_addr; //@line 1473 "xmltok_impl.c"
        var $129=$128+2; //@line 1473 "xmltok_impl.c"
        var $130=$127+4; //@line 1473 "xmltok_impl.c"
        HEAP[$130]=$129; //@line 1473 "xmltok_impl.c"
        __label__ = 41; break; //@line 1473 "xmltok_impl.c"
      case 41: // $bb36
        $state=2; //@line 1474 "xmltok_impl.c"
        $open=13; //@line 1475 "xmltok_impl.c"
        __label__ = 76; break; //@line 1475 "xmltok_impl.c"
      case 42: // $bb37
        var $131=$open; //@line 1477 "xmltok_impl.c"
        var $132=($131)==13; //@line 1477 "xmltok_impl.c"
        if ($132) { __label__ = 43; break; } else { __label__ = 76; break; } //@line 1477 "xmltok_impl.c"
      case 43: // $bb38
        $state=0; //@line 1478 "xmltok_impl.c"
        var $133=$nAtts; //@line 1479 "xmltok_impl.c"
        var $134=$attsMax_addr; //@line 1479 "xmltok_impl.c"
        var $135=($133) < ($134); //@line 1479 "xmltok_impl.c"
        if ($135) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 1479 "xmltok_impl.c"
      case 44: // $bb39
        var $136=$atts_addr; //@line 1480 "xmltok_impl.c"
        var $137=$nAtts; //@line 1480 "xmltok_impl.c"
        var $138=$136+16*$137; //@line 1480 "xmltok_impl.c"
        var $139=$138+8; //@line 1480 "xmltok_impl.c"
        var $140=$ptr_addr; //@line 1480 "xmltok_impl.c"
        HEAP[$139]=$140; //@line 1480 "xmltok_impl.c"
        __label__ = 45; break; //@line 1480 "xmltok_impl.c"
      case 45: // $bb40
        var $141=$nAtts; //@line 1481 "xmltok_impl.c"
        var $142=($141) + 1; //@line 1481 "xmltok_impl.c"
        $nAtts=$142; //@line 1481 "xmltok_impl.c"
        __label__ = 76; break; //@line 1481 "xmltok_impl.c"
      case 46: // $bb42
        var $143=$nAtts; //@line 1485 "xmltok_impl.c"
        var $144=$attsMax_addr; //@line 1485 "xmltok_impl.c"
        var $145=($143) < ($144); //@line 1485 "xmltok_impl.c"
        if ($145) { __label__ = 47; break; } else { __label__ = 76; break; } //@line 1485 "xmltok_impl.c"
      case 47: // $bb43
        var $146=$atts_addr; //@line 1486 "xmltok_impl.c"
        var $147=$nAtts; //@line 1486 "xmltok_impl.c"
        var $148=$146+16*$147; //@line 1486 "xmltok_impl.c"
        var $149=$148+12; //@line 1486 "xmltok_impl.c"
        HEAP[$149]=0; //@line 1486 "xmltok_impl.c"
        __label__ = 76; break; //@line 1486 "xmltok_impl.c"
      case 48: // $bb45
        var $150=$state; //@line 1489 "xmltok_impl.c"
        var $151=($150)==1; //@line 1489 "xmltok_impl.c"
        if ($151) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 1489 "xmltok_impl.c"
      case 49: // $bb46
        $state=0; //@line 1490 "xmltok_impl.c"
        __label__ = 76; break; //@line 1490 "xmltok_impl.c"
      case 50: // $bb47
        var $152=$state; //@line 1491 "xmltok_impl.c"
        var $153=($152)==2; //@line 1491 "xmltok_impl.c"
        if ($153) { __label__ = 51; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 51: // $bb48
        var $154=$nAtts; //@line 1491 "xmltok_impl.c"
        var $155=$attsMax_addr; //@line 1491 "xmltok_impl.c"
        var $156=($154) < ($155); //@line 1491 "xmltok_impl.c"
        if ($156) { __label__ = 52; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 52: // $bb49
        var $157=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $158=$nAtts; //@line 1491 "xmltok_impl.c"
        var $159=$157+16*$158; //@line 1491 "xmltok_impl.c"
        var $160=$159+12; //@line 1491 "xmltok_impl.c"
        var $161=HEAP[$160]; //@line 1491 "xmltok_impl.c"
        var $162=($161)!=0; //@line 1491 "xmltok_impl.c"
        if ($162) { __label__ = 53; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 53: // $bb50
        var $163=$atts_addr; //@line 1491 "xmltok_impl.c"
        var $164=$nAtts; //@line 1491 "xmltok_impl.c"
        var $165=$163+16*$164; //@line 1491 "xmltok_impl.c"
        var $166=$165+4; //@line 1491 "xmltok_impl.c"
        var $167=HEAP[$166]; //@line 1491 "xmltok_impl.c"
        var $168=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $169=($167)==($168); //@line 1491 "xmltok_impl.c"
        if ($169) { __label__ = 68; break; } else { __label__ = 54; break; } //@line 1491 "xmltok_impl.c"
      case 54: // $bb51
        var $170=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $171=$170; //@line 1491 "xmltok_impl.c"
        var $172=HEAP[$171]; //@line 1491 "xmltok_impl.c"
        var $173=($172)!=0; //@line 1491 "xmltok_impl.c"
        if ($173) { __label__ = 68; break; } else { __label__ = 55; break; } //@line 1491 "xmltok_impl.c"
      case 55: // $bb52
        var $174=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $175=$174+1; //@line 1491 "xmltok_impl.c"
        var $176=HEAP[$175]; //@line 1491 "xmltok_impl.c"
        var $177=($176)!=32; //@line 1491 "xmltok_impl.c"
        if ($177) { __label__ = 68; break; } else { __label__ = 56; break; } //@line 1491 "xmltok_impl.c"
      case 56: // $bb53
        var $178=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $179=$178+2; //@line 1491 "xmltok_impl.c"
        var $180=$179; //@line 1491 "xmltok_impl.c"
        var $181=HEAP[$180]; //@line 1491 "xmltok_impl.c"
        var $182=($181)!=0; //@line 1491 "xmltok_impl.c"
        if ($182) { __label__ = 58; break; } else { __label__ = 57; break; } //@line 1491 "xmltok_impl.c"
      case 57: // $bb54
        var $183=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $184=$183+2; //@line 1491 "xmltok_impl.c"
        var $185=$184+1; //@line 1491 "xmltok_impl.c"
        var $186=HEAP[$185]; //@line 1491 "xmltok_impl.c"
        var $187=($186)==32; //@line 1491 "xmltok_impl.c"
        if ($187) { __label__ = 68; break; } else { __label__ = 58; break; } //@line 1491 "xmltok_impl.c"
      case 58: // $bb55
        var $188=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $189=$188+2; //@line 1491 "xmltok_impl.c"
        var $190=$189; //@line 1491 "xmltok_impl.c"
        var $191=HEAP[$190]; //@line 1491 "xmltok_impl.c"
        var $192=($191)==0; //@line 1491 "xmltok_impl.c"
        if ($192) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 1491 "xmltok_impl.c"
      case 59: // $bb56
        var $193=$enc_addr; //@line 1491 "xmltok_impl.c"
        var $194=$193; //@line 1491 "xmltok_impl.c"
        var $195=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $196=$195+2; //@line 1491 "xmltok_impl.c"
        var $197=$196+1; //@line 1491 "xmltok_impl.c"
        var $198=HEAP[$197]; //@line 1491 "xmltok_impl.c"
        var $199=($198); //@line 1491 "xmltok_impl.c"
        var $200=$194+72; //@line 1491 "xmltok_impl.c"
        var $201=$200+$199; //@line 1491 "xmltok_impl.c"
        var $202=HEAP[$201]; //@line 1491 "xmltok_impl.c"
        var $203=($202); //@line 1491 "xmltok_impl.c"
        $iftmp_1187=$203; //@line 1491 "xmltok_impl.c"
        __label__ = 67; break; //@line 1491 "xmltok_impl.c"
      case 60: // $bb57
        var $204=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $205=$204+2; //@line 1491 "xmltok_impl.c"
        var $206=$205+1; //@line 1491 "xmltok_impl.c"
        var $207=HEAP[$206]; //@line 1491 "xmltok_impl.c"
        var $208=($207); //@line 1491 "xmltok_impl.c"
        var $209=$ptr_addr; //@line 1491 "xmltok_impl.c"
        var $210=$209+2; //@line 1491 "xmltok_impl.c"
        var $211=$210; //@line 1491 "xmltok_impl.c"
        var $212=HEAP[$211]; //@line 1491 "xmltok_impl.c"
        var $213=($212); //@line 1491 "xmltok_impl.c"
        var $214=((($213)) & 255); //@line 1491 "xmltok_impl.c"
        var $215=((($208)) & 255); //@line 1491 "xmltok_impl.c"
        $hi_addr_i1=$214;
        $lo_addr_i2=$215;
        var $216=$hi_addr_i1; //@line 518 "xmltok.c"
        var $217=($216); //@line 518 "xmltok.c"
        if ($217 == 216) {
          __label__ = 61; break;
        }
        else if ($217 == 217) {
          __label__ = 61; break;
        }
        else if ($217 == 218) {
          __label__ = 61; break;
        }
        else if ($217 == 219) {
          __label__ = 61; break;
        }
        else if ($217 == 220) {
          __label__ = 62; break;
        }
        else if ($217 == 221) {
          __label__ = 62; break;
        }
        else if ($217 == 222) {
          __label__ = 62; break;
        }
        else if ($217 == 223) {
          __label__ = 62; break;
        }
        else if ($217 == 255) {
          __label__ = 63; break;
        }
        else {
        __label__ = 65; break;
        }
        
      case 61: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 66; break; //@line 520 "xmltok.c"
      case 62: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 66; break; //@line 522 "xmltok.c"
      case 63: // $bb2_i8
        var $218=$lo_addr_i2; //@line 524 "xmltok.c"
        var $219=($218); //@line 524 "xmltok.c"
        var $_off_i6=($219) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 64; break; } else { __label__ = 65; break; }
      case 64: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 66; break; //@line 527 "xmltok.c"
      case 65: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 66; break; //@line 531 "xmltok.c"
      case 66: // $unicode_byte_type_exit12
        var $220=$0; //@line 520 "xmltok.c"
        $retval_i3=$220; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1187=$retval6_i11; //@line 1491 "xmltok_impl.c"
        __label__ = 67; break; //@line 1491 "xmltok_impl.c"
      case 67: // $bb58
        var $221=$iftmp_1187; //@line 1491 "xmltok_impl.c"
        var $222=$open; //@line 1491 "xmltok_impl.c"
        var $223=($221)==($222); //@line 1491 "xmltok_impl.c"
        if ($223) { __label__ = 68; break; } else { __label__ = 76; break; } //@line 1491 "xmltok_impl.c"
      case 68: // $bb59
        var $224=$atts_addr; //@line 1498 "xmltok_impl.c"
        var $225=$nAtts; //@line 1498 "xmltok_impl.c"
        var $226=$224+16*$225; //@line 1498 "xmltok_impl.c"
        var $227=$226+12; //@line 1498 "xmltok_impl.c"
        HEAP[$227]=0; //@line 1498 "xmltok_impl.c"
        __label__ = 76; break; //@line 1498 "xmltok_impl.c"
      case 69: // $bb61
        var $228=$state; //@line 1503 "xmltok_impl.c"
        var $229=($228)==1; //@line 1503 "xmltok_impl.c"
        if ($229) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 1503 "xmltok_impl.c"
      case 70: // $bb62
        $state=0; //@line 1504 "xmltok_impl.c"
        __label__ = 76; break; //@line 1504 "xmltok_impl.c"
      case 71: // $bb63
        var $230=$state; //@line 1505 "xmltok_impl.c"
        var $231=($230)==2; //@line 1505 "xmltok_impl.c"
        if ($231) { __label__ = 72; break; } else { __label__ = 76; break; } //@line 1505 "xmltok_impl.c"
      case 72: // $bb64
        var $232=$nAtts; //@line 1505 "xmltok_impl.c"
        var $233=$attsMax_addr; //@line 1505 "xmltok_impl.c"
        var $234=($232) < ($233); //@line 1505 "xmltok_impl.c"
        if ($234) { __label__ = 73; break; } else { __label__ = 76; break; } //@line 1505 "xmltok_impl.c"
      case 73: // $bb65
        var $235=$atts_addr; //@line 1506 "xmltok_impl.c"
        var $236=$nAtts; //@line 1506 "xmltok_impl.c"
        var $237=$235+16*$236; //@line 1506 "xmltok_impl.c"
        var $238=$237+12; //@line 1506 "xmltok_impl.c"
        HEAP[$238]=0; //@line 1506 "xmltok_impl.c"
        __label__ = 76; break; //@line 1506 "xmltok_impl.c"
      case 74: // $bb67
        var $239=$state; //@line 1510 "xmltok_impl.c"
        var $240=($239)!=2; //@line 1510 "xmltok_impl.c"
        if ($240) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 1510 "xmltok_impl.c"
      case 75: // $bb68
        var $241=$nAtts; //@line 1511 "xmltok_impl.c"
        $2=$241; //@line 1511 "xmltok_impl.c"
        var $242=$2; //@line 1511 "xmltok_impl.c"
        $retval=$242; //@line 1511 "xmltok_impl.c"
        var $retval70=$retval; //@line 1436 "xmltok_impl.c"
        ;
        return $retval70; //@line 1436 "xmltok_impl.c"
      case 76: // $bb69
        var $243=$ptr_addr; //@line 1436 "xmltok_impl.c"
        var $244=$243+2; //@line 1436 "xmltok_impl.c"
        $ptr_addr=$244; //@line 1436 "xmltok_impl.c"
        __label__ = 1; break; //@line 1436 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_charRefNumber($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $result_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $iftmp_1190;
        var $1;
        var $iftmp_1189;
        var $result;
        var $c;
        var $c17;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $result=0; //@line 1523 "xmltok_impl.c"
        var $2=$ptr_addr; //@line 1525 "xmltok_impl.c"
        var $3=$2+4; //@line 1525 "xmltok_impl.c"
        $ptr_addr=$3; //@line 1525 "xmltok_impl.c"
        var $4=$ptr_addr; //@line 1526 "xmltok_impl.c"
        var $5=$4; //@line 1526 "xmltok_impl.c"
        var $6=HEAP[$5]; //@line 1526 "xmltok_impl.c"
        var $7=($6)!=0; //@line 1526 "xmltok_impl.c"
        if ($7) { __label__ = 21; break; } else { __label__ = 1; break; } //@line 1526 "xmltok_impl.c"
      case 1: // $bb
        var $8=$ptr_addr; //@line 1526 "xmltok_impl.c"
        var $9=$8+1; //@line 1526 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1526 "xmltok_impl.c"
        var $11=($10)!=120; //@line 1526 "xmltok_impl.c"
        if ($11) { __label__ = 21; break; } else { __label__ = 2; break; } //@line 1526 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 1527 "xmltok_impl.c"
        var $13=$12+2; //@line 1527 "xmltok_impl.c"
        $ptr_addr=$13; //@line 1527 "xmltok_impl.c"
        __label__ = 13; break; //@line 1527 "xmltok_impl.c"
      case 3: // $bb2
        var $14=$ptr_addr; //@line 1530 "xmltok_impl.c"
        var $15=$14; //@line 1530 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1530 "xmltok_impl.c"
        var $17=($16)==0; //@line 1530 "xmltok_impl.c"
        if ($17) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1530 "xmltok_impl.c"
      case 4: // $bb5_thread
        $iftmp_1189=-1; //@line 1530 "xmltok_impl.c"
        $c=-1; //@line 1530 "xmltok_impl.c"
        __label__ = 9; break;
      case 5: // $bb5
        var $18=$ptr_addr; //@line 1530 "xmltok_impl.c"
        var $19=$18+1; //@line 1530 "xmltok_impl.c"
        var $20=HEAP[$19]; //@line 1530 "xmltok_impl.c"
        var $21=($20); //@line 1530 "xmltok_impl.c"
        $iftmp_1189=$21; //@line 1530 "xmltok_impl.c"
        $c=$21; //@line 1530 "xmltok_impl.c"
        if ($21 == 48) {
          __label__ = 6; break;
        }
        else if ($21 == 49) {
          __label__ = 6; break;
        }
        else if ($21 == 50) {
          __label__ = 6; break;
        }
        else if ($21 == 51) {
          __label__ = 6; break;
        }
        else if ($21 == 52) {
          __label__ = 6; break;
        }
        else if ($21 == 53) {
          __label__ = 6; break;
        }
        else if ($21 == 54) {
          __label__ = 6; break;
        }
        else if ($21 == 55) {
          __label__ = 6; break;
        }
        else if ($21 == 56) {
          __label__ = 6; break;
        }
        else if ($21 == 57) {
          __label__ = 6; break;
        }
        else if ($21 == 65) {
          __label__ = 7; break;
        }
        else if ($21 == 66) {
          __label__ = 7; break;
        }
        else if ($21 == 67) {
          __label__ = 7; break;
        }
        else if ($21 == 68) {
          __label__ = 7; break;
        }
        else if ($21 == 69) {
          __label__ = 7; break;
        }
        else if ($21 == 70) {
          __label__ = 7; break;
        }
        else if ($21 == 97) {
          __label__ = 8; break;
        }
        else if ($21 == 98) {
          __label__ = 8; break;
        }
        else if ($21 == 99) {
          __label__ = 8; break;
        }
        else if ($21 == 100) {
          __label__ = 8; break;
        }
        else if ($21 == 101) {
          __label__ = 8; break;
        }
        else if ($21 == 102) {
          __label__ = 8; break;
        }
        else {
        __label__ = 9; break;
        }
        
      case 6: // $bb6
        var $22=$result; //@line 1534 "xmltok_impl.c"
        var $23=($22) << 4; //@line 1534 "xmltok_impl.c"
        $result=$23; //@line 1534 "xmltok_impl.c"
        var $24=$c; //@line 1535 "xmltok_impl.c"
        var $25=($24) - 48; //@line 1535 "xmltok_impl.c"
        var $26=$result; //@line 1535 "xmltok_impl.c"
        var $27=($25) | ($26); //@line 1535 "xmltok_impl.c"
        $result=$27; //@line 1535 "xmltok_impl.c"
        __lastLabel__ = 6; __label__ = 10; break; //@line 1535 "xmltok_impl.c"
      case 7: // $bb7
        var $28=$result; //@line 1539 "xmltok_impl.c"
        var $29=($28) << 4; //@line 1539 "xmltok_impl.c"
        $result=$29; //@line 1539 "xmltok_impl.c"
        var $30=$c; //@line 1540 "xmltok_impl.c"
        var $31=($30) - 55; //@line 1540 "xmltok_impl.c"
        var $32=$result; //@line 1540 "xmltok_impl.c"
        var $33=($31) + ($32); //@line 1540 "xmltok_impl.c"
        $result=$33; //@line 1540 "xmltok_impl.c"
        __lastLabel__ = 7; __label__ = 10; break; //@line 1540 "xmltok_impl.c"
      case 8: // $bb8
        var $34=$result; //@line 1544 "xmltok_impl.c"
        var $35=($34) << 4; //@line 1544 "xmltok_impl.c"
        $result=$35; //@line 1544 "xmltok_impl.c"
        var $36=$c; //@line 1545 "xmltok_impl.c"
        var $37=($36) - 87; //@line 1545 "xmltok_impl.c"
        var $38=$result; //@line 1545 "xmltok_impl.c"
        var $39=($37) + ($38); //@line 1545 "xmltok_impl.c"
        $result=$39; //@line 1545 "xmltok_impl.c"
        __lastLabel__ = 8; __label__ = 10; break; //@line 1545 "xmltok_impl.c"
      case 9: // $bb9thread_pre_split
        var $_pr=$result;
        __lastLabel__ = 9; __label__ = 10; break;
      case 10: // $bb9
        var $40=__lastLabel__ == 9 ? $_pr : (__lastLabel__ == 8 ? $39 : (__lastLabel__ == 7 ? $33 : ($27)));
        var $41=($40) > 1114111; //@line 1548 "xmltok_impl.c"
        if ($41) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1548 "xmltok_impl.c"
      case 11: // $bb10
        $1=-1; //@line 1549 "xmltok_impl.c"
        __label__ = 31; break; //@line 1549 "xmltok_impl.c"
      case 12: // $bb11
        var $42=$ptr_addr; //@line 1529 "xmltok_impl.c"
        var $43=$42+2; //@line 1529 "xmltok_impl.c"
        $ptr_addr=$43; //@line 1529 "xmltok_impl.c"
        __label__ = 13; break; //@line 1529 "xmltok_impl.c"
      case 13: // $bb12
        var $44=$ptr_addr; //@line 1528 "xmltok_impl.c"
        var $45=$44; //@line 1528 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 1528 "xmltok_impl.c"
        var $47=($46)!=0; //@line 1528 "xmltok_impl.c"
        if ($47) { __label__ = 3; break; } else { __label__ = 14; break; } //@line 1528 "xmltok_impl.c"
      case 14: // $bb13
        var $48=$ptr_addr; //@line 1528 "xmltok_impl.c"
        var $49=$48+1; //@line 1528 "xmltok_impl.c"
        var $50=HEAP[$49]; //@line 1528 "xmltok_impl.c"
        var $51=($50)!=59; //@line 1528 "xmltok_impl.c"
        if ($51) { __label__ = 3; break; } else { __label__ = 23; break; } //@line 1528 "xmltok_impl.c"
      case 15: // $bb16
        var $52=$ptr_addr; //@line 1554 "xmltok_impl.c"
        var $53=$52; //@line 1554 "xmltok_impl.c"
        var $54=HEAP[$53]; //@line 1554 "xmltok_impl.c"
        var $55=($54)==0; //@line 1554 "xmltok_impl.c"
        if ($55) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1554 "xmltok_impl.c"
      case 16: // $bb18
        var $56=$ptr_addr; //@line 1554 "xmltok_impl.c"
        var $57=$56+1; //@line 1554 "xmltok_impl.c"
        var $58=HEAP[$57]; //@line 1554 "xmltok_impl.c"
        var $59=($58); //@line 1554 "xmltok_impl.c"
        $iftmp_1190=$59; //@line 1554 "xmltok_impl.c"
        __label__ = 18; break; //@line 1554 "xmltok_impl.c"
      case 17: // $bb19
        $iftmp_1190=-1; //@line 1554 "xmltok_impl.c"
        __label__ = 18; break; //@line 1554 "xmltok_impl.c"
      case 18: // $bb20
        var $60=$iftmp_1190; //@line 1554 "xmltok_impl.c"
        $c17=$60; //@line 1554 "xmltok_impl.c"
        var $61=$result; //@line 1555 "xmltok_impl.c"
        var $62=($61) * 10; //@line 1555 "xmltok_impl.c"
        $result=$62; //@line 1555 "xmltok_impl.c"
        var $63=$c17; //@line 1556 "xmltok_impl.c"
        var $64=($63) - 48; //@line 1556 "xmltok_impl.c"
        var $65=$result; //@line 1556 "xmltok_impl.c"
        var $66=($64) + ($65); //@line 1556 "xmltok_impl.c"
        $result=$66; //@line 1556 "xmltok_impl.c"
        var $67=($66) > 1114111; //@line 1557 "xmltok_impl.c"
        if ($67) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1557 "xmltok_impl.c"
      case 19: // $bb21
        $1=-1; //@line 1558 "xmltok_impl.c"
        __label__ = 31; break; //@line 1558 "xmltok_impl.c"
      case 20: // $bb22
        var $68=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $69=$68+2; //@line 1553 "xmltok_impl.c"
        $ptr_addr=$69; //@line 1553 "xmltok_impl.c"
        __label__ = 21; break; //@line 1553 "xmltok_impl.c"
      case 21: // $bb23
        var $70=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $71=$70; //@line 1553 "xmltok_impl.c"
        var $72=HEAP[$71]; //@line 1553 "xmltok_impl.c"
        var $73=($72)!=0; //@line 1553 "xmltok_impl.c"
        if ($73) { __label__ = 15; break; } else { __label__ = 22; break; } //@line 1553 "xmltok_impl.c"
      case 22: // $bb24
        var $74=$ptr_addr; //@line 1553 "xmltok_impl.c"
        var $75=$74+1; //@line 1553 "xmltok_impl.c"
        var $76=HEAP[$75]; //@line 1553 "xmltok_impl.c"
        var $77=($76)!=59; //@line 1553 "xmltok_impl.c"
        if ($77) { __label__ = 15; break; } else { __label__ = 23; break; } //@line 1553 "xmltok_impl.c"
      case 23: // $bb25
        var $78=$result; //@line 1561 "xmltok_impl.c"
        $result_addr_i=$78;
        var $79=$result_addr_i; //@line 1168 "xmltok.c"
        var $80=($79) >> 8; //@line 1168 "xmltok.c"
        if ($80 == 0) {
          __label__ = 25; break;
        }
        else if ($80 == 216) {
          __label__ = 24; break;
        }
        else if ($80 == 217) {
          __label__ = 24; break;
        }
        else if ($80 == 218) {
          __label__ = 24; break;
        }
        else if ($80 == 219) {
          __label__ = 24; break;
        }
        else if ($80 == 220) {
          __label__ = 24; break;
        }
        else if ($80 == 221) {
          __label__ = 24; break;
        }
        else if ($80 == 222) {
          __label__ = 24; break;
        }
        else if ($80 == 223) {
          __label__ = 24; break;
        }
        else if ($80 == 255) {
          __label__ = 27; break;
        }
        else {
        __label__ = 29; break;
        }
        
      case 24: // $bb_i
        $0=-1; //@line 1171 "xmltok.c"
        __label__ = 30; break; //@line 1171 "xmltok.c"
      case 25: // $bb1_i
        var $81=$result_addr_i; //@line 1173 "xmltok.c"
        var $82=_latin1_encoding+72+$81; //@line 1173 "xmltok.c"
        var $83=HEAP[$82]; //@line 1173 "xmltok.c"
        var $84=($83)==0; //@line 1173 "xmltok.c"
        if ($84) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 1173 "xmltok.c"
      case 26: // $bb2_i
        $0=-1; //@line 1174 "xmltok.c"
        __label__ = 30; break; //@line 1174 "xmltok.c"
      case 27: // $bb4_i
        var $85=$result_addr_i; //@line 1177 "xmltok.c"
        var $86=($85)==65534; //@line 1177 "xmltok.c"
        var $87=$result_addr_i; //@line 1177 "xmltok.c"
        var $88=($87)==65535; //@line 1177 "xmltok.c"
        var $or_cond_i=($86) | ($88);
        if ($or_cond_i) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 1177 "xmltok.c"
      case 28: // $bb6_i
        $0=-1; //@line 1178 "xmltok.c"
        __label__ = 30; break; //@line 1178 "xmltok.c"
      case 29: // $bb7_i
        var $89=$result_addr_i; //@line 1181 "xmltok.c"
        $0=$89; //@line 1181 "xmltok.c"
        __label__ = 30; break; //@line 1181 "xmltok.c"
      case 30: // $checkCharRefNumber_exit
        var $90=$0; //@line 1171 "xmltok.c"
        $retval_i=$90; //@line 1171 "xmltok.c"
        var $retval9_i=$retval_i; //@line 1171 "xmltok.c"
        $1=$retval9_i; //@line 1561 "xmltok_impl.c"
        __label__ = 31; break; //@line 1561 "xmltok_impl.c"
      case 31: // $bb26
        var $91=$1; //@line 1549 "xmltok_impl.c"
        $retval=$91; //@line 1549 "xmltok_impl.c"
        var $retval27=$retval; //@line 1549 "xmltok_impl.c"
        ;
        return $retval27; //@line 1549 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_predefinedEntityName($enc, $ptr, $end) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $retval;
        var $iftmp_1194;
        var $0;
        var $iftmp_1193;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        var $1=$end_addr; //@line 1568 "xmltok_impl.c"
        var $2=($1); //@line 1568 "xmltok_impl.c"
        var $3=$ptr_addr; //@line 1568 "xmltok_impl.c"
        var $4=($3); //@line 1568 "xmltok_impl.c"
        var $5=($2) - ($4); //@line 1568 "xmltok_impl.c"
        var $6=((($5)/2)|0); //@line 1568 "xmltok_impl.c"
        if ($6 == 2) {
          __label__ = 1; break;
        }
        else if ($6 == 3) {
          __label__ = 8; break;
        }
        else if ($6 == 4) {
          __label__ = 15; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 1: // $bb
        var $7=$ptr_addr; //@line 1570 "xmltok_impl.c"
        var $8=$7+2; //@line 1570 "xmltok_impl.c"
        var $9=$8; //@line 1570 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1570 "xmltok_impl.c"
        var $11=($10)==0; //@line 1570 "xmltok_impl.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 32; break; } //@line 1570 "xmltok_impl.c"
      case 2: // $bb1
        var $12=$ptr_addr; //@line 1570 "xmltok_impl.c"
        var $13=$12+2; //@line 1570 "xmltok_impl.c"
        var $14=$13+1; //@line 1570 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1570 "xmltok_impl.c"
        var $16=($15)==116; //@line 1570 "xmltok_impl.c"
        if ($16) { __label__ = 3; break; } else { __label__ = 32; break; } //@line 1570 "xmltok_impl.c"
      case 3: // $bb2
        var $17=$ptr_addr; //@line 1571 "xmltok_impl.c"
        var $18=$17; //@line 1571 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1571 "xmltok_impl.c"
        var $20=($19)==0; //@line 1571 "xmltok_impl.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1571 "xmltok_impl.c"
      case 4: // $bb5_thread
        $iftmp_1193=-1; //@line 1571 "xmltok_impl.c"
        __label__ = 32; break;
      case 5: // $bb5
        var $21=$ptr_addr; //@line 1571 "xmltok_impl.c"
        var $22=$21+1; //@line 1571 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1571 "xmltok_impl.c"
        var $24=($23); //@line 1571 "xmltok_impl.c"
        $iftmp_1193=$24; //@line 1571 "xmltok_impl.c"
        if ($24 == 103) {
          __label__ = 7; break;
        }
        else if ($24 == 108) {
          __label__ = 6; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 6: // $bb6
        $0=60; //@line 1573 "xmltok_impl.c"
        __label__ = 33; break; //@line 1573 "xmltok_impl.c"
      case 7: // $bb7
        $0=62; //@line 1575 "xmltok_impl.c"
        __label__ = 33; break; //@line 1575 "xmltok_impl.c"
      case 8: // $bb9
        var $25=$ptr_addr; //@line 1580 "xmltok_impl.c"
        var $26=$25; //@line 1580 "xmltok_impl.c"
        var $27=HEAP[$26]; //@line 1580 "xmltok_impl.c"
        var $28=($27)==0; //@line 1580 "xmltok_impl.c"
        if ($28) { __label__ = 9; break; } else { __label__ = 32; break; } //@line 1580 "xmltok_impl.c"
      case 9: // $bb10
        var $29=$ptr_addr; //@line 1580 "xmltok_impl.c"
        var $30=$29+1; //@line 1580 "xmltok_impl.c"
        var $31=HEAP[$30]; //@line 1580 "xmltok_impl.c"
        var $32=($31)==97; //@line 1580 "xmltok_impl.c"
        if ($32) { __label__ = 10; break; } else { __label__ = 32; break; } //@line 1580 "xmltok_impl.c"
      case 10: // $bb11
        var $33=$ptr_addr; //@line 1581 "xmltok_impl.c"
        var $34=$33+2; //@line 1581 "xmltok_impl.c"
        $ptr_addr=$34; //@line 1581 "xmltok_impl.c"
        var $35=$ptr_addr; //@line 1582 "xmltok_impl.c"
        var $36=$35; //@line 1582 "xmltok_impl.c"
        var $37=HEAP[$36]; //@line 1582 "xmltok_impl.c"
        var $38=($37)==0; //@line 1582 "xmltok_impl.c"
        if ($38) { __label__ = 11; break; } else { __label__ = 32; break; } //@line 1582 "xmltok_impl.c"
      case 11: // $bb12
        var $39=$ptr_addr; //@line 1582 "xmltok_impl.c"
        var $40=$39+1; //@line 1582 "xmltok_impl.c"
        var $41=HEAP[$40]; //@line 1582 "xmltok_impl.c"
        var $42=($41)==109; //@line 1582 "xmltok_impl.c"
        if ($42) { __label__ = 12; break; } else { __label__ = 32; break; } //@line 1582 "xmltok_impl.c"
      case 12: // $bb13
        var $43=$ptr_addr; //@line 1583 "xmltok_impl.c"
        var $44=$43+2; //@line 1583 "xmltok_impl.c"
        $ptr_addr=$44; //@line 1583 "xmltok_impl.c"
        var $45=$ptr_addr; //@line 1584 "xmltok_impl.c"
        var $46=$45; //@line 1584 "xmltok_impl.c"
        var $47=HEAP[$46]; //@line 1584 "xmltok_impl.c"
        var $48=($47)==0; //@line 1584 "xmltok_impl.c"
        if ($48) { __label__ = 13; break; } else { __label__ = 32; break; } //@line 1584 "xmltok_impl.c"
      case 13: // $bb14
        var $49=$ptr_addr; //@line 1584 "xmltok_impl.c"
        var $50=$49+1; //@line 1584 "xmltok_impl.c"
        var $51=HEAP[$50]; //@line 1584 "xmltok_impl.c"
        var $52=($51)==112; //@line 1584 "xmltok_impl.c"
        if ($52) { __label__ = 14; break; } else { __label__ = 32; break; } //@line 1584 "xmltok_impl.c"
      case 14: // $bb15
        $0=38; //@line 1585 "xmltok_impl.c"
        __label__ = 33; break; //@line 1585 "xmltok_impl.c"
      case 15: // $bb17
        var $53=$ptr_addr; //@line 1590 "xmltok_impl.c"
        var $54=$53; //@line 1590 "xmltok_impl.c"
        var $55=HEAP[$54]; //@line 1590 "xmltok_impl.c"
        var $56=($55)==0; //@line 1590 "xmltok_impl.c"
        if ($56) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1590 "xmltok_impl.c"
      case 16: // $bb20_thread
        $iftmp_1194=-1; //@line 1590 "xmltok_impl.c"
        __label__ = 32; break;
      case 17: // $bb20
        var $57=$ptr_addr; //@line 1590 "xmltok_impl.c"
        var $58=$57+1; //@line 1590 "xmltok_impl.c"
        var $59=HEAP[$58]; //@line 1590 "xmltok_impl.c"
        var $60=($59); //@line 1590 "xmltok_impl.c"
        $iftmp_1194=$60; //@line 1590 "xmltok_impl.c"
        if ($60 == 97) {
          __label__ = 25; break;
        }
        else if ($60 == 113) {
          __label__ = 18; break;
        }
        else {
        __label__ = 32; break;
        }
        
      case 18: // $bb21
        var $61=$ptr_addr; //@line 1592 "xmltok_impl.c"
        var $62=$61+2; //@line 1592 "xmltok_impl.c"
        $ptr_addr=$62; //@line 1592 "xmltok_impl.c"
        var $63=$ptr_addr; //@line 1593 "xmltok_impl.c"
        var $64=$63; //@line 1593 "xmltok_impl.c"
        var $65=HEAP[$64]; //@line 1593 "xmltok_impl.c"
        var $66=($65)==0; //@line 1593 "xmltok_impl.c"
        if ($66) { __label__ = 19; break; } else { __label__ = 32; break; } //@line 1593 "xmltok_impl.c"
      case 19: // $bb22
        var $67=$ptr_addr; //@line 1593 "xmltok_impl.c"
        var $68=$67+1; //@line 1593 "xmltok_impl.c"
        var $69=HEAP[$68]; //@line 1593 "xmltok_impl.c"
        var $70=($69)==117; //@line 1593 "xmltok_impl.c"
        if ($70) { __label__ = 20; break; } else { __label__ = 32; break; } //@line 1593 "xmltok_impl.c"
      case 20: // $bb23
        var $71=$ptr_addr; //@line 1594 "xmltok_impl.c"
        var $72=$71+2; //@line 1594 "xmltok_impl.c"
        $ptr_addr=$72; //@line 1594 "xmltok_impl.c"
        var $73=$ptr_addr; //@line 1595 "xmltok_impl.c"
        var $74=$73; //@line 1595 "xmltok_impl.c"
        var $75=HEAP[$74]; //@line 1595 "xmltok_impl.c"
        var $76=($75)==0; //@line 1595 "xmltok_impl.c"
        if ($76) { __label__ = 21; break; } else { __label__ = 32; break; } //@line 1595 "xmltok_impl.c"
      case 21: // $bb24
        var $77=$ptr_addr; //@line 1595 "xmltok_impl.c"
        var $78=$77+1; //@line 1595 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 1595 "xmltok_impl.c"
        var $80=($79)==111; //@line 1595 "xmltok_impl.c"
        if ($80) { __label__ = 22; break; } else { __label__ = 32; break; } //@line 1595 "xmltok_impl.c"
      case 22: // $bb25
        var $81=$ptr_addr; //@line 1596 "xmltok_impl.c"
        var $82=$81+2; //@line 1596 "xmltok_impl.c"
        $ptr_addr=$82; //@line 1596 "xmltok_impl.c"
        var $83=$ptr_addr; //@line 1597 "xmltok_impl.c"
        var $84=$83; //@line 1597 "xmltok_impl.c"
        var $85=HEAP[$84]; //@line 1597 "xmltok_impl.c"
        var $86=($85)==0; //@line 1597 "xmltok_impl.c"
        if ($86) { __label__ = 23; break; } else { __label__ = 32; break; } //@line 1597 "xmltok_impl.c"
      case 23: // $bb26
        var $87=$ptr_addr; //@line 1597 "xmltok_impl.c"
        var $88=$87+1; //@line 1597 "xmltok_impl.c"
        var $89=HEAP[$88]; //@line 1597 "xmltok_impl.c"
        var $90=($89)==116; //@line 1597 "xmltok_impl.c"
        if ($90) { __label__ = 24; break; } else { __label__ = 32; break; } //@line 1597 "xmltok_impl.c"
      case 24: // $bb27
        $0=34; //@line 1598 "xmltok_impl.c"
        __label__ = 33; break; //@line 1598 "xmltok_impl.c"
      case 25: // $bb29
        var $91=$ptr_addr; //@line 1603 "xmltok_impl.c"
        var $92=$91+2; //@line 1603 "xmltok_impl.c"
        $ptr_addr=$92; //@line 1603 "xmltok_impl.c"
        var $93=$ptr_addr; //@line 1604 "xmltok_impl.c"
        var $94=$93; //@line 1604 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 1604 "xmltok_impl.c"
        var $96=($95)==0; //@line 1604 "xmltok_impl.c"
        if ($96) { __label__ = 26; break; } else { __label__ = 32; break; } //@line 1604 "xmltok_impl.c"
      case 26: // $bb30
        var $97=$ptr_addr; //@line 1604 "xmltok_impl.c"
        var $98=$97+1; //@line 1604 "xmltok_impl.c"
        var $99=HEAP[$98]; //@line 1604 "xmltok_impl.c"
        var $100=($99)==112; //@line 1604 "xmltok_impl.c"
        if ($100) { __label__ = 27; break; } else { __label__ = 32; break; } //@line 1604 "xmltok_impl.c"
      case 27: // $bb31
        var $101=$ptr_addr; //@line 1605 "xmltok_impl.c"
        var $102=$101+2; //@line 1605 "xmltok_impl.c"
        $ptr_addr=$102; //@line 1605 "xmltok_impl.c"
        var $103=$ptr_addr; //@line 1606 "xmltok_impl.c"
        var $104=$103; //@line 1606 "xmltok_impl.c"
        var $105=HEAP[$104]; //@line 1606 "xmltok_impl.c"
        var $106=($105)==0; //@line 1606 "xmltok_impl.c"
        if ($106) { __label__ = 28; break; } else { __label__ = 32; break; } //@line 1606 "xmltok_impl.c"
      case 28: // $bb32
        var $107=$ptr_addr; //@line 1606 "xmltok_impl.c"
        var $108=$107+1; //@line 1606 "xmltok_impl.c"
        var $109=HEAP[$108]; //@line 1606 "xmltok_impl.c"
        var $110=($109)==111; //@line 1606 "xmltok_impl.c"
        if ($110) { __label__ = 29; break; } else { __label__ = 32; break; } //@line 1606 "xmltok_impl.c"
      case 29: // $bb33
        var $111=$ptr_addr; //@line 1607 "xmltok_impl.c"
        var $112=$111+2; //@line 1607 "xmltok_impl.c"
        $ptr_addr=$112; //@line 1607 "xmltok_impl.c"
        var $113=$ptr_addr; //@line 1608 "xmltok_impl.c"
        var $114=$113; //@line 1608 "xmltok_impl.c"
        var $115=HEAP[$114]; //@line 1608 "xmltok_impl.c"
        var $116=($115)==0; //@line 1608 "xmltok_impl.c"
        if ($116) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 1608 "xmltok_impl.c"
      case 30: // $bb34
        var $117=$ptr_addr; //@line 1608 "xmltok_impl.c"
        var $118=$117+1; //@line 1608 "xmltok_impl.c"
        var $119=HEAP[$118]; //@line 1608 "xmltok_impl.c"
        var $120=($119)==115; //@line 1608 "xmltok_impl.c"
        if ($120) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 1608 "xmltok_impl.c"
      case 31: // $bb35
        $0=39; //@line 1609 "xmltok_impl.c"
        __label__ = 33; break; //@line 1609 "xmltok_impl.c"
      case 32: // $bb36
        $0=0; //@line 1615 "xmltok_impl.c"
        __label__ = 33; break; //@line 1615 "xmltok_impl.c"
      case 33: // $bb37
        var $121=$0; //@line 1573 "xmltok_impl.c"
        $retval=$121; //@line 1573 "xmltok_impl.c"
        var $retval38=$retval; //@line 1573 "xmltok_impl.c"
        ;
        return $retval38; //@line 1573 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_sameName($enc, $ptr1, $ptr2) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr1_addr;
        var $ptr2_addr;
        var $retval;
        var $iftmp_1197;
        var $2;
        var $iftmp_1195;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $ptr2_addr=$ptr2;
        __label__ = 1; break; //@line 1620 "xmltok.c"
      case 1: // $bb
        var $3=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $4=$3; //@line 1622 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1622 "xmltok_impl.c"
        var $6=($5)==0; //@line 1622 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1622 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 1622 "xmltok_impl.c"
        var $8=$7; //@line 1622 "xmltok_impl.c"
        var $9=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $10=$9+1; //@line 1622 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 1622 "xmltok_impl.c"
        var $12=($11); //@line 1622 "xmltok_impl.c"
        var $13=$8+72; //@line 1622 "xmltok_impl.c"
        var $14=$13+$12; //@line 1622 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1622 "xmltok_impl.c"
        var $16=($15); //@line 1622 "xmltok_impl.c"
        $iftmp_1195=$16; //@line 1622 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1622 "xmltok_impl.c"
      case 3: // $bb2
        var $17=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $18=$17+1; //@line 1622 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1622 "xmltok_impl.c"
        var $20=($19); //@line 1622 "xmltok_impl.c"
        var $21=$ptr1_addr; //@line 1622 "xmltok_impl.c"
        var $22=$21; //@line 1622 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1622 "xmltok_impl.c"
        var $24=($23); //@line 1622 "xmltok_impl.c"
        var $25=((($24)) & 255); //@line 1622 "xmltok_impl.c"
        var $26=((($20)) & 255); //@line 1622 "xmltok_impl.c"
        $hi_addr_i=$25;
        $lo_addr_i=$26;
        var $27=$hi_addr_i; //@line 518 "xmltok.c"
        var $28=($27); //@line 518 "xmltok.c"
        if ($28 == 216) {
          __label__ = 4; break;
        }
        else if ($28 == 217) {
          __label__ = 4; break;
        }
        else if ($28 == 218) {
          __label__ = 4; break;
        }
        else if ($28 == 219) {
          __label__ = 4; break;
        }
        else if ($28 == 220) {
          __label__ = 5; break;
        }
        else if ($28 == 221) {
          __label__ = 5; break;
        }
        else if ($28 == 222) {
          __label__ = 5; break;
        }
        else if ($28 == 223) {
          __label__ = 5; break;
        }
        else if ($28 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $29=$lo_addr_i; //@line 524 "xmltok.c"
        var $30=($29); //@line 524 "xmltok.c"
        var $_off_i=($30) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $31=$1; //@line 520 "xmltok.c"
        $retval_i=$31; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1195=$retval6_i; //@line 1622 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1622 "xmltok_impl.c"
      case 10: // $bb3
        var $32=__lastLabel__ == 9 ? $retval6_i : ($16);
        if ($32 == 5) {
          __label__ = 15; break;
        }
        else if ($32 == 6) {
          __label__ = 13; break;
        }
        else if ($32 == 7) {
          __label__ = 11; break;
        }
        else if ($32 == 22) {
          __label__ = 19; break;
        }
        else if ($32 == 24) {
          __label__ = 19; break;
        }
        else if ($32 == 25) {
          __label__ = 19; break;
        }
        else if ($32 == 26) {
          __label__ = 19; break;
        }
        else if ($32 == 27) {
          __label__ = 19; break;
        }
        else if ($32 == 29) {
          __label__ = 19; break;
        }
        else {
        __label__ = 23; break;
        }
        
      case 11: // $bb4
        var $33=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $34=HEAP[$33]; //@line 1627 "xmltok_impl.c"
        var $35=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $36=HEAP[$35]; //@line 1627 "xmltok_impl.c"
        var $37=($34)!=($36); //@line 1627 "xmltok_impl.c"
        var $38=($37); //@line 1627 "xmltok_impl.c"
        var $39=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $40=$39+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$40; //@line 1627 "xmltok_impl.c"
        var $41=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $42=$41+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$42; //@line 1627 "xmltok_impl.c"
        var $toBool=($38)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 1627 "xmltok_impl.c"
      case 12: // $bb5
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 13: // $bb6
        var $43=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $44=HEAP[$43]; //@line 1627 "xmltok_impl.c"
        var $45=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $46=HEAP[$45]; //@line 1627 "xmltok_impl.c"
        var $47=($44)!=($46); //@line 1627 "xmltok_impl.c"
        var $48=($47); //@line 1627 "xmltok_impl.c"
        var $49=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $50=$49+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$50; //@line 1627 "xmltok_impl.c"
        var $51=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $52=$51+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$52; //@line 1627 "xmltok_impl.c"
        var $toBool7=($48)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool7) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1627 "xmltok_impl.c"
      case 14: // $bb8
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 15: // $bb9
        var $53=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $54=HEAP[$53]; //@line 1627 "xmltok_impl.c"
        var $55=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $56=HEAP[$55]; //@line 1627 "xmltok_impl.c"
        var $57=($54)!=($56); //@line 1627 "xmltok_impl.c"
        var $58=($57); //@line 1627 "xmltok_impl.c"
        var $59=$ptr1_addr; //@line 1627 "xmltok_impl.c"
        var $60=$59+1; //@line 1627 "xmltok_impl.c"
        $ptr1_addr=$60; //@line 1627 "xmltok_impl.c"
        var $61=$ptr2_addr; //@line 1627 "xmltok_impl.c"
        var $62=$61+1; //@line 1627 "xmltok_impl.c"
        $ptr2_addr=$62; //@line 1627 "xmltok_impl.c"
        var $toBool10=($58)!=0; //@line 1627 "xmltok_impl.c"
        if ($toBool10) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 1627 "xmltok_impl.c"
      case 16: // $bb11
        $2=0; //@line 1627 "xmltok_impl.c"
        __label__ = 35; break; //@line 1627 "xmltok_impl.c"
      case 17: // $bb12
        var $63=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $64=HEAP[$63]; //@line 1630 "xmltok_impl.c"
        var $65=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $66=HEAP[$65]; //@line 1630 "xmltok_impl.c"
        var $67=($64)!=($66); //@line 1630 "xmltok_impl.c"
        var $68=($67); //@line 1630 "xmltok_impl.c"
        var $69=$ptr1_addr; //@line 1630 "xmltok_impl.c"
        var $70=$69+1; //@line 1630 "xmltok_impl.c"
        $ptr1_addr=$70; //@line 1630 "xmltok_impl.c"
        var $71=$ptr2_addr; //@line 1630 "xmltok_impl.c"
        var $72=$71+1; //@line 1630 "xmltok_impl.c"
        $ptr2_addr=$72; //@line 1630 "xmltok_impl.c"
        var $toBool13=($68)!=0; //@line 1630 "xmltok_impl.c"
        if ($toBool13) { __label__ = 18; break; } else { __label__ = 1; break; } //@line 1630 "xmltok_impl.c"
      case 18: // $bb14
        $2=0; //@line 1631 "xmltok_impl.c"
        __label__ = 35; break; //@line 1631 "xmltok_impl.c"
      case 19: // $bb16
        var $73=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $74=HEAP[$73]; //@line 1642 "xmltok_impl.c"
        var $75=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $76=HEAP[$75]; //@line 1642 "xmltok_impl.c"
        var $77=($74)!=($76); //@line 1642 "xmltok_impl.c"
        var $78=($77); //@line 1642 "xmltok_impl.c"
        var $79=$ptr2_addr; //@line 1642 "xmltok_impl.c"
        var $80=$79+1; //@line 1642 "xmltok_impl.c"
        $ptr2_addr=$80; //@line 1642 "xmltok_impl.c"
        var $81=$ptr1_addr; //@line 1642 "xmltok_impl.c"
        var $82=$81+1; //@line 1642 "xmltok_impl.c"
        $ptr1_addr=$82; //@line 1642 "xmltok_impl.c"
        var $toBool17=($78)!=0; //@line 1642 "xmltok_impl.c"
        if ($toBool17) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1642 "xmltok_impl.c"
      case 20: // $bb18
        $2=0; //@line 1643 "xmltok_impl.c"
        __label__ = 35; break; //@line 1643 "xmltok_impl.c"
      case 21: // $bb19
        var $83=$ptr2_addr; //@line 1645 "xmltok_impl.c"
        var $84=HEAP[$83]; //@line 1645 "xmltok_impl.c"
        var $85=$ptr1_addr; //@line 1645 "xmltok_impl.c"
        var $86=HEAP[$85]; //@line 1645 "xmltok_impl.c"
        var $87=($84)!=($86); //@line 1645 "xmltok_impl.c"
        var $88=($87); //@line 1645 "xmltok_impl.c"
        var $89=$ptr2_addr; //@line 1645 "xmltok_impl.c"
        var $90=$89+1; //@line 1645 "xmltok_impl.c"
        $ptr2_addr=$90; //@line 1645 "xmltok_impl.c"
        var $91=$ptr1_addr; //@line 1645 "xmltok_impl.c"
        var $92=$91+1; //@line 1645 "xmltok_impl.c"
        $ptr1_addr=$92; //@line 1645 "xmltok_impl.c"
        var $toBool20=($88)!=0; //@line 1645 "xmltok_impl.c"
        if ($toBool20) { __label__ = 22; break; } else { __label__ = 1; break; } //@line 1645 "xmltok_impl.c"
      case 22: // $bb21
        $2=0; //@line 1646 "xmltok_impl.c"
        __label__ = 35; break; //@line 1646 "xmltok_impl.c"
      case 23: // $bb23
        var $93=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $94=$93; //@line 1660 "xmltok_impl.c"
        var $95=HEAP[$94]; //@line 1660 "xmltok_impl.c"
        var $96=($95)==0; //@line 1660 "xmltok_impl.c"
        if ($96) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 1660 "xmltok_impl.c"
      case 24: // $bb24
        var $97=$enc_addr; //@line 1660 "xmltok_impl.c"
        var $98=$97; //@line 1660 "xmltok_impl.c"
        var $99=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $100=$99+1; //@line 1660 "xmltok_impl.c"
        var $101=HEAP[$100]; //@line 1660 "xmltok_impl.c"
        var $102=($101); //@line 1660 "xmltok_impl.c"
        var $103=$98+72; //@line 1660 "xmltok_impl.c"
        var $104=$103+$102; //@line 1660 "xmltok_impl.c"
        var $105=HEAP[$104]; //@line 1660 "xmltok_impl.c"
        var $106=($105); //@line 1660 "xmltok_impl.c"
        $iftmp_1197=$106; //@line 1660 "xmltok_impl.c"
        __lastLabel__ = 24; __label__ = 32; break; //@line 1660 "xmltok_impl.c"
      case 25: // $bb25
        var $107=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $108=$107+1; //@line 1660 "xmltok_impl.c"
        var $109=HEAP[$108]; //@line 1660 "xmltok_impl.c"
        var $110=($109); //@line 1660 "xmltok_impl.c"
        var $111=$ptr2_addr; //@line 1660 "xmltok_impl.c"
        var $112=$111; //@line 1660 "xmltok_impl.c"
        var $113=HEAP[$112]; //@line 1660 "xmltok_impl.c"
        var $114=($113); //@line 1660 "xmltok_impl.c"
        var $115=((($114)) & 255); //@line 1660 "xmltok_impl.c"
        var $116=((($110)) & 255); //@line 1660 "xmltok_impl.c"
        $hi_addr_i1=$115;
        $lo_addr_i2=$116;
        var $117=$hi_addr_i1; //@line 518 "xmltok.c"
        var $118=($117); //@line 518 "xmltok.c"
        if ($118 == 216) {
          __label__ = 26; break;
        }
        else if ($118 == 217) {
          __label__ = 26; break;
        }
        else if ($118 == 218) {
          __label__ = 26; break;
        }
        else if ($118 == 219) {
          __label__ = 26; break;
        }
        else if ($118 == 220) {
          __label__ = 27; break;
        }
        else if ($118 == 221) {
          __label__ = 27; break;
        }
        else if ($118 == 222) {
          __label__ = 27; break;
        }
        else if ($118 == 223) {
          __label__ = 27; break;
        }
        else if ($118 == 255) {
          __label__ = 28; break;
        }
        else {
        __label__ = 30; break;
        }
        
      case 26: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 31; break; //@line 520 "xmltok.c"
      case 27: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 31; break; //@line 522 "xmltok.c"
      case 28: // $bb2_i8
        var $119=$lo_addr_i2; //@line 524 "xmltok.c"
        var $120=($119); //@line 524 "xmltok.c"
        var $_off_i6=($120) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 29; break; } else { __label__ = 30; break; }
      case 29: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 31; break; //@line 527 "xmltok.c"
      case 30: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 31; break; //@line 531 "xmltok.c"
      case 31: // $unicode_byte_type_exit12
        var $121=$0; //@line 520 "xmltok.c"
        $retval_i3=$121; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        $iftmp_1197=$retval6_i11; //@line 1660 "xmltok_impl.c"
        __lastLabel__ = 31; __label__ = 32; break; //@line 1660 "xmltok_impl.c"
      case 32: // $bb26
        var $122=__lastLabel__ == 31 ? $retval6_i11 : ($106);
        if ($122 == 5) {
          __label__ = 33; break;
        }
        else if ($122 == 6) {
          __label__ = 33; break;
        }
        else if ($122 == 7) {
          __label__ = 33; break;
        }
        else if ($122 == 22) {
          __label__ = 33; break;
        }
        else if ($122 == 24) {
          __label__ = 33; break;
        }
        else if ($122 == 25) {
          __label__ = 33; break;
        }
        else if ($122 == 26) {
          __label__ = 33; break;
        }
        else if ($122 == 27) {
          __label__ = 33; break;
        }
        else if ($122 == 29) {
          __label__ = 33; break;
        }
        else {
        __label__ = 34; break;
        }
        
      case 33: // $bb27
        $2=0; //@line 1673 "xmltok_impl.c"
        __label__ = 35; break; //@line 1673 "xmltok_impl.c"
      case 34: // $bb28
        $2=1; //@line 1675 "xmltok_impl.c"
        __label__ = 35; break; //@line 1675 "xmltok_impl.c"
      case 35: // $bb30
        var $123=$2; //@line 1627 "xmltok_impl.c"
        $retval=$123; //@line 1627 "xmltok_impl.c"
        var $retval31=$retval; //@line 1627 "xmltok_impl.c"
        ;
        return $retval31; //@line 1627 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_nameMatchesAscii($enc, $ptr1, $end1, $ptr2) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $ptr1_addr;
        var $end1_addr;
        var $ptr2_addr;
        var $retval;
        var $0;
        $enc_addr=$enc;
        $ptr1_addr=$ptr1;
        $end1_addr=$end1;
        $ptr2_addr=$ptr2;
        __label__ = 7; break; //@line 1686 "xmltok_impl.c"
      case 1: // $bb
        if ($20) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1687 "xmltok_impl.c"
      case 2: // $bb1
        $0=0; //@line 1688 "xmltok_impl.c"
        __label__ = 9; break; //@line 1688 "xmltok_impl.c"
      case 3: // $bb2
        var $1=$ptr1_addr; //@line 1689 "xmltok_impl.c"
        var $2=$1; //@line 1689 "xmltok_impl.c"
        var $3=HEAP[$2]; //@line 1689 "xmltok_impl.c"
        var $4=($3)!=0; //@line 1689 "xmltok_impl.c"
        if ($4) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 1689 "xmltok_impl.c"
      case 4: // $bb3
        var $5=$ptr1_addr; //@line 1689 "xmltok_impl.c"
        var $6=$5+1; //@line 1689 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1689 "xmltok_impl.c"
        var $8=$ptr2_addr; //@line 1689 "xmltok_impl.c"
        var $9=HEAP[$8]; //@line 1689 "xmltok_impl.c"
        var $10=($7)!=($9); //@line 1689 "xmltok_impl.c"
        if ($10) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1689 "xmltok_impl.c"
      case 5: // $bb4
        $0=0; //@line 1690 "xmltok_impl.c"
        __label__ = 9; break; //@line 1690 "xmltok_impl.c"
      case 6: // $bb5
        var $11=$ptr1_addr; //@line 1686 "xmltok_impl.c"
        var $12=$11+2; //@line 1686 "xmltok_impl.c"
        $ptr1_addr=$12; //@line 1686 "xmltok_impl.c"
        var $13=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $14=$13+1; //@line 1686 "xmltok_impl.c"
        $ptr2_addr=$14; //@line 1686 "xmltok_impl.c"
        __label__ = 7; break; //@line 1686 "xmltok_impl.c"
      case 7: // $bb6
        var $15=$ptr2_addr; //@line 1686 "xmltok_impl.c"
        var $16=HEAP[$15]; //@line 1686 "xmltok_impl.c"
        var $17=($16)!=0; //@line 1686 "xmltok_impl.c"
        var $18=$ptr1_addr; //@line 1687 "xmltok_impl.c"
        var $19=$end1_addr; //@line 1687 "xmltok_impl.c"
        var $20=($18)==($19); //@line 1687 "xmltok_impl.c"
        if ($17) { __label__ = 1; break; } else { __label__ = 8; break; } //@line 1686 "xmltok_impl.c"
      case 8: // $bb7
        var $21=($20); //@line 1692 "xmltok_impl.c"
        $0=$21; //@line 1692 "xmltok_impl.c"
        __label__ = 9; break; //@line 1692 "xmltok_impl.c"
      case 9: // $bb8
        var $22=$0; //@line 1688 "xmltok_impl.c"
        $retval=$22; //@line 1688 "xmltok_impl.c"
        var $retval9=$retval; //@line 1688 "xmltok_impl.c"
        ;
        return $retval9; //@line 1688 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_nameLength($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $1;
        var $iftmp_1199;
        var $start;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        var $2=$ptr_addr; //@line 1698 "xmltok_impl.c"
        $start=$2; //@line 1698 "xmltok_impl.c"
        __label__ = 1; break; //@line 1698 "xmltok_impl.c"
      case 1: // $bb
        var $3=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $4=$3; //@line 1700 "xmltok_impl.c"
        var $5=HEAP[$4]; //@line 1700 "xmltok_impl.c"
        var $6=($5)==0; //@line 1700 "xmltok_impl.c"
        if ($6) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1700 "xmltok_impl.c"
      case 2: // $bb1
        var $7=$enc_addr; //@line 1700 "xmltok_impl.c"
        var $8=$7; //@line 1700 "xmltok_impl.c"
        var $9=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $10=$9+1; //@line 1700 "xmltok_impl.c"
        var $11=HEAP[$10]; //@line 1700 "xmltok_impl.c"
        var $12=($11); //@line 1700 "xmltok_impl.c"
        var $13=$8+72; //@line 1700 "xmltok_impl.c"
        var $14=$13+$12; //@line 1700 "xmltok_impl.c"
        var $15=HEAP[$14]; //@line 1700 "xmltok_impl.c"
        var $16=($15); //@line 1700 "xmltok_impl.c"
        $iftmp_1199=$16; //@line 1700 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1700 "xmltok_impl.c"
      case 3: // $bb2
        var $17=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $18=$17+1; //@line 1700 "xmltok_impl.c"
        var $19=HEAP[$18]; //@line 1700 "xmltok_impl.c"
        var $20=($19); //@line 1700 "xmltok_impl.c"
        var $21=$ptr_addr; //@line 1700 "xmltok_impl.c"
        var $22=$21; //@line 1700 "xmltok_impl.c"
        var $23=HEAP[$22]; //@line 1700 "xmltok_impl.c"
        var $24=($23); //@line 1700 "xmltok_impl.c"
        var $25=((($24)) & 255); //@line 1700 "xmltok_impl.c"
        var $26=((($20)) & 255); //@line 1700 "xmltok_impl.c"
        $hi_addr_i=$25;
        $lo_addr_i=$26;
        var $27=$hi_addr_i; //@line 518 "xmltok.c"
        var $28=($27); //@line 518 "xmltok.c"
        if ($28 == 216) {
          __label__ = 4; break;
        }
        else if ($28 == 217) {
          __label__ = 4; break;
        }
        else if ($28 == 218) {
          __label__ = 4; break;
        }
        else if ($28 == 219) {
          __label__ = 4; break;
        }
        else if ($28 == 220) {
          __label__ = 5; break;
        }
        else if ($28 == 221) {
          __label__ = 5; break;
        }
        else if ($28 == 222) {
          __label__ = 5; break;
        }
        else if ($28 == 223) {
          __label__ = 5; break;
        }
        else if ($28 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $29=$lo_addr_i; //@line 524 "xmltok.c"
        var $30=($29); //@line 524 "xmltok.c"
        var $_off_i=($30) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $31=$0; //@line 520 "xmltok.c"
        $retval_i=$31; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1199=$retval6_i; //@line 1700 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1700 "xmltok_impl.c"
      case 10: // $bb3
        var $32=__lastLabel__ == 9 ? $retval6_i : ($16);
        if ($32 == 5) {
          __label__ = 11; break;
        }
        else if ($32 == 6) {
          __label__ = 12; break;
        }
        else if ($32 == 7) {
          __label__ = 13; break;
        }
        else if ($32 == 22) {
          __label__ = 14; break;
        }
        else if ($32 == 24) {
          __label__ = 14; break;
        }
        else if ($32 == 25) {
          __label__ = 14; break;
        }
        else if ($32 == 26) {
          __label__ = 14; break;
        }
        else if ($32 == 27) {
          __label__ = 14; break;
        }
        else if ($32 == 29) {
          __label__ = 14; break;
        }
        else {
        __label__ = 15; break;
        }
        
      case 11: // $bb4
        var $33=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $34=$33+2; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$34; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 12: // $bb5
        var $35=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $36=$35+3; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$36; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 13: // $bb6
        var $37=$ptr_addr; //@line 1703 "xmltok_impl.c"
        var $38=$37+4; //@line 1703 "xmltok_impl.c"
        $ptr_addr=$38; //@line 1703 "xmltok_impl.c"
        __label__ = 1; break; //@line 1703 "xmltok_impl.c"
      case 14: // $bb7
        var $39=$ptr_addr; //@line 1714 "xmltok_impl.c"
        var $40=$39+2; //@line 1714 "xmltok_impl.c"
        $ptr_addr=$40; //@line 1714 "xmltok_impl.c"
        __label__ = 1; break; //@line 1714 "xmltok_impl.c"
      case 15: // $bb8
        var $41=$ptr_addr; //@line 1717 "xmltok_impl.c"
        var $42=($41); //@line 1717 "xmltok_impl.c"
        var $43=$start; //@line 1717 "xmltok_impl.c"
        var $44=($43); //@line 1717 "xmltok_impl.c"
        var $45=($42) - ($44); //@line 1717 "xmltok_impl.c"
        $1=$45; //@line 1717 "xmltok_impl.c"
        var $46=$1; //@line 1717 "xmltok_impl.c"
        $retval=$46; //@line 1717 "xmltok_impl.c"
        var $retval10=$retval; //@line 1717 "xmltok_impl.c"
        ;
        return $retval10; //@line 1717 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_skipS($enc, $ptr) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $ptr_addr;
        var $retval;
        var $1;
        var $iftmp_1203;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        __label__ = 1; break; //@line 1724 "xmltok.c"
      case 1: // $bb
        var $2=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $3=$2; //@line 1726 "xmltok_impl.c"
        var $4=HEAP[$3]; //@line 1726 "xmltok_impl.c"
        var $5=($4)==0; //@line 1726 "xmltok_impl.c"
        if ($5) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1726 "xmltok_impl.c"
      case 2: // $bb1
        var $6=$enc_addr; //@line 1726 "xmltok_impl.c"
        var $7=$6; //@line 1726 "xmltok_impl.c"
        var $8=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $9=$8+1; //@line 1726 "xmltok_impl.c"
        var $10=HEAP[$9]; //@line 1726 "xmltok_impl.c"
        var $11=($10); //@line 1726 "xmltok_impl.c"
        var $12=$7+72; //@line 1726 "xmltok_impl.c"
        var $13=$12+$11; //@line 1726 "xmltok_impl.c"
        var $14=HEAP[$13]; //@line 1726 "xmltok_impl.c"
        var $15=($14); //@line 1726 "xmltok_impl.c"
        $iftmp_1203=$15; //@line 1726 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1726 "xmltok_impl.c"
      case 3: // $bb2
        var $16=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $17=$16+1; //@line 1726 "xmltok_impl.c"
        var $18=HEAP[$17]; //@line 1726 "xmltok_impl.c"
        var $19=($18); //@line 1726 "xmltok_impl.c"
        var $20=$ptr_addr; //@line 1726 "xmltok_impl.c"
        var $21=$20; //@line 1726 "xmltok_impl.c"
        var $22=HEAP[$21]; //@line 1726 "xmltok_impl.c"
        var $23=($22); //@line 1726 "xmltok_impl.c"
        var $24=((($23)) & 255); //@line 1726 "xmltok_impl.c"
        var $25=((($19)) & 255); //@line 1726 "xmltok_impl.c"
        $hi_addr_i=$24;
        $lo_addr_i=$25;
        var $26=$hi_addr_i; //@line 518 "xmltok.c"
        var $27=($26); //@line 518 "xmltok.c"
        if ($27 == 216) {
          __label__ = 4; break;
        }
        else if ($27 == 217) {
          __label__ = 4; break;
        }
        else if ($27 == 218) {
          __label__ = 4; break;
        }
        else if ($27 == 219) {
          __label__ = 4; break;
        }
        else if ($27 == 220) {
          __label__ = 5; break;
        }
        else if ($27 == 221) {
          __label__ = 5; break;
        }
        else if ($27 == 222) {
          __label__ = 5; break;
        }
        else if ($27 == 223) {
          __label__ = 5; break;
        }
        else if ($27 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $0=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $0=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $28=$lo_addr_i; //@line 524 "xmltok.c"
        var $29=($28); //@line 524 "xmltok.c"
        var $_off_i=($29) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $0=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $0=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $30=$0; //@line 520 "xmltok.c"
        $retval_i=$30; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1203=$retval6_i; //@line 1726 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1726 "xmltok_impl.c"
      case 10: // $bb3
        var $31=__lastLabel__ == 9 ? $retval6_i : ($15);
        if ($31 == 9) {
          __label__ = 11; break;
        }
        else if ($31 == 10) {
          __label__ = 11; break;
        }
        else if ($31 == 21) {
          __label__ = 11; break;
        }
        else {
        __label__ = 12; break;
        }
        
      case 11: // $bb4
        var $32=$ptr_addr; //@line 1730 "xmltok_impl.c"
        var $33=$32+2; //@line 1730 "xmltok_impl.c"
        $ptr_addr=$33; //@line 1730 "xmltok_impl.c"
        __label__ = 1; break; //@line 1730 "xmltok_impl.c"
      case 12: // $bb5
        var $34=$ptr_addr; //@line 1733 "xmltok_impl.c"
        $1=$34; //@line 1733 "xmltok_impl.c"
        var $35=$1; //@line 1733 "xmltok_impl.c"
        $retval=$35; //@line 1733 "xmltok_impl.c"
        var $retval6=$retval; //@line 1733 "xmltok_impl.c"
        ;
        return $retval6; //@line 1733 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _big2_updatePosition($enc, $ptr, $end, $pos) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $hi_addr_i1;
        var $lo_addr_i2;
        var $retval_i3;
        var $0;
        var $hi_addr_i;
        var $lo_addr_i;
        var $retval_i;
        var $1;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $pos_addr;
        var $iftmp_1207;
        var $iftmp_1205;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $pos_addr=$pos;
        var $2=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $3=$end_addr; //@line 1744 "xmltok_impl.c"
        var $4=($2) < ($3); //@line 1744 "xmltok_impl.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 30; break; } //@line 1744 "xmltok_impl.c"
      case 1: // $bb
        var $5=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $6=$5; //@line 1745 "xmltok_impl.c"
        var $7=HEAP[$6]; //@line 1745 "xmltok_impl.c"
        var $8=($7)==0; //@line 1745 "xmltok_impl.c"
        if ($8) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1745 "xmltok_impl.c"
      case 2: // $bb1
        var $9=$enc_addr; //@line 1745 "xmltok_impl.c"
        var $10=$9; //@line 1745 "xmltok_impl.c"
        var $11=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $12=$11+1; //@line 1745 "xmltok_impl.c"
        var $13=HEAP[$12]; //@line 1745 "xmltok_impl.c"
        var $14=($13); //@line 1745 "xmltok_impl.c"
        var $15=$10+72; //@line 1745 "xmltok_impl.c"
        var $16=$15+$14; //@line 1745 "xmltok_impl.c"
        var $17=HEAP[$16]; //@line 1745 "xmltok_impl.c"
        var $18=($17); //@line 1745 "xmltok_impl.c"
        $iftmp_1205=$18; //@line 1745 "xmltok_impl.c"
        __lastLabel__ = 2; __label__ = 10; break; //@line 1745 "xmltok_impl.c"
      case 3: // $bb2
        var $19=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $20=$19+1; //@line 1745 "xmltok_impl.c"
        var $21=HEAP[$20]; //@line 1745 "xmltok_impl.c"
        var $22=($21); //@line 1745 "xmltok_impl.c"
        var $23=$ptr_addr; //@line 1745 "xmltok_impl.c"
        var $24=$23; //@line 1745 "xmltok_impl.c"
        var $25=HEAP[$24]; //@line 1745 "xmltok_impl.c"
        var $26=($25); //@line 1745 "xmltok_impl.c"
        var $27=((($26)) & 255); //@line 1745 "xmltok_impl.c"
        var $28=((($22)) & 255); //@line 1745 "xmltok_impl.c"
        $hi_addr_i=$27;
        $lo_addr_i=$28;
        var $29=$hi_addr_i; //@line 518 "xmltok.c"
        var $30=($29); //@line 518 "xmltok.c"
        if ($30 == 216) {
          __label__ = 4; break;
        }
        else if ($30 == 217) {
          __label__ = 4; break;
        }
        else if ($30 == 218) {
          __label__ = 4; break;
        }
        else if ($30 == 219) {
          __label__ = 4; break;
        }
        else if ($30 == 220) {
          __label__ = 5; break;
        }
        else if ($30 == 221) {
          __label__ = 5; break;
        }
        else if ($30 == 222) {
          __label__ = 5; break;
        }
        else if ($30 == 223) {
          __label__ = 5; break;
        }
        else if ($30 == 255) {
          __label__ = 6; break;
        }
        else {
        __label__ = 8; break;
        }
        
      case 4: // $bb_i
        $1=7; //@line 520 "xmltok.c"
        __label__ = 9; break; //@line 520 "xmltok.c"
      case 5: // $bb1_i
        $1=8; //@line 522 "xmltok.c"
        __label__ = 9; break; //@line 522 "xmltok.c"
      case 6: // $bb2_i
        var $31=$lo_addr_i; //@line 524 "xmltok.c"
        var $32=($31); //@line 524 "xmltok.c"
        var $_off_i=($32) + -254;
        var $switch_i=($_off_i) < 2;
        if ($switch_i) { __label__ = 7; break; } else { __label__ = 8; break; }
      case 7: // $bb3_i
        $1=0; //@line 527 "xmltok.c"
        __label__ = 9; break; //@line 527 "xmltok.c"
      case 8: // $bb4_i
        $1=29; //@line 531 "xmltok.c"
        __label__ = 9; break; //@line 531 "xmltok.c"
      case 9: // $unicode_byte_type_exit
        var $33=$1; //@line 520 "xmltok.c"
        $retval_i=$33; //@line 520 "xmltok.c"
        var $retval6_i=$retval_i; //@line 520 "xmltok.c"
        $iftmp_1205=$retval6_i; //@line 1745 "xmltok_impl.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1745 "xmltok_impl.c"
      case 10: // $bb3
        var $34=__lastLabel__ == 9 ? $retval6_i : ($18);
        if ($34 == 5) {
          __label__ = 11; break;
        }
        else if ($34 == 6) {
          __label__ = 12; break;
        }
        else if ($34 == 7) {
          __label__ = 13; break;
        }
        else if ($34 == 9) {
          __label__ = 15; break;
        }
        else if ($34 == 10) {
          __label__ = 14; break;
        }
        else {
        __label__ = 28; break;
        }
        
      case 11: // $bb4
        var $35=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $36=$35+2; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$36; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 12: // $bb5
        var $37=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $38=$37+3; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$38; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 13: // $bb6
        var $39=$ptr_addr; //@line 1750 "xmltok_impl.c"
        var $40=$39+4; //@line 1750 "xmltok_impl.c"
        $ptr_addr=$40; //@line 1750 "xmltok_impl.c"
        __label__ = 29; break; //@line 1750 "xmltok_impl.c"
      case 14: // $bb7
        var $41=$pos_addr; //@line 1753 "xmltok_impl.c"
        var $42=$41+4; //@line 1753 "xmltok_impl.c"
        HEAP[$42]=-1; //@line 1753 "xmltok_impl.c"
        var $43=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $44=$43; //@line 1754 "xmltok_impl.c"
        var $45=HEAP[$44]; //@line 1754 "xmltok_impl.c"
        var $46=($45) + 1; //@line 1754 "xmltok_impl.c"
        var $47=$pos_addr; //@line 1754 "xmltok_impl.c"
        var $48=$47; //@line 1754 "xmltok_impl.c"
        HEAP[$48]=$46; //@line 1754 "xmltok_impl.c"
        var $49=$ptr_addr; //@line 1755 "xmltok_impl.c"
        var $50=$49+2; //@line 1755 "xmltok_impl.c"
        $ptr_addr=$50; //@line 1755 "xmltok_impl.c"
        __label__ = 29; break; //@line 1755 "xmltok_impl.c"
      case 15: // $bb8
        var $51=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $52=$51; //@line 1758 "xmltok_impl.c"
        var $53=HEAP[$52]; //@line 1758 "xmltok_impl.c"
        var $54=($53) + 1; //@line 1758 "xmltok_impl.c"
        var $55=$pos_addr; //@line 1758 "xmltok_impl.c"
        var $56=$55; //@line 1758 "xmltok_impl.c"
        HEAP[$56]=$54; //@line 1758 "xmltok_impl.c"
        var $57=$ptr_addr; //@line 1759 "xmltok_impl.c"
        var $58=$57+2; //@line 1759 "xmltok_impl.c"
        $ptr_addr=$58; //@line 1759 "xmltok_impl.c"
        var $59=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $60=$end_addr; //@line 1760 "xmltok_impl.c"
        var $61=($59)!=($60); //@line 1760 "xmltok_impl.c"
        if ($61) { __label__ = 16; break; } else { __label__ = 27; break; } //@line 1760 "xmltok_impl.c"
      case 16: // $bb9
        var $62=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $63=$62; //@line 1760 "xmltok_impl.c"
        var $64=HEAP[$63]; //@line 1760 "xmltok_impl.c"
        var $65=($64)==0; //@line 1760 "xmltok_impl.c"
        if ($65) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1760 "xmltok_impl.c"
      case 17: // $bb10
        var $66=$enc_addr; //@line 1760 "xmltok_impl.c"
        var $67=$66; //@line 1760 "xmltok_impl.c"
        var $68=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $69=$68+1; //@line 1760 "xmltok_impl.c"
        var $70=HEAP[$69]; //@line 1760 "xmltok_impl.c"
        var $71=($70); //@line 1760 "xmltok_impl.c"
        var $72=$67+72; //@line 1760 "xmltok_impl.c"
        var $73=$72+$71; //@line 1760 "xmltok_impl.c"
        var $74=HEAP[$73]; //@line 1760 "xmltok_impl.c"
        var $75=($74)==10; //@line 1760 "xmltok_impl.c"
        var $76=($75); //@line 1760 "xmltok_impl.c"
        $iftmp_1207=$76; //@line 1760 "xmltok_impl.c"
        __lastLabel__ = 17; __label__ = 25; break; //@line 1760 "xmltok_impl.c"
      case 18: // $bb11
        var $77=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $78=$77+1; //@line 1760 "xmltok_impl.c"
        var $79=HEAP[$78]; //@line 1760 "xmltok_impl.c"
        var $80=($79); //@line 1760 "xmltok_impl.c"
        var $81=$ptr_addr; //@line 1760 "xmltok_impl.c"
        var $82=$81; //@line 1760 "xmltok_impl.c"
        var $83=HEAP[$82]; //@line 1760 "xmltok_impl.c"
        var $84=($83); //@line 1760 "xmltok_impl.c"
        var $85=((($84)) & 255); //@line 1760 "xmltok_impl.c"
        var $86=((($80)) & 255); //@line 1760 "xmltok_impl.c"
        $hi_addr_i1=$85;
        $lo_addr_i2=$86;
        var $87=$hi_addr_i1; //@line 518 "xmltok.c"
        var $88=($87); //@line 518 "xmltok.c"
        if ($88 == 216) {
          __label__ = 19; break;
        }
        else if ($88 == 217) {
          __label__ = 19; break;
        }
        else if ($88 == 218) {
          __label__ = 19; break;
        }
        else if ($88 == 219) {
          __label__ = 19; break;
        }
        else if ($88 == 220) {
          __label__ = 20; break;
        }
        else if ($88 == 221) {
          __label__ = 20; break;
        }
        else if ($88 == 222) {
          __label__ = 20; break;
        }
        else if ($88 == 223) {
          __label__ = 20; break;
        }
        else if ($88 == 255) {
          __label__ = 21; break;
        }
        else {
        __label__ = 23; break;
        }
        
      case 19: // $bb_i4
        $0=7; //@line 520 "xmltok.c"
        __label__ = 24; break; //@line 520 "xmltok.c"
      case 20: // $bb1_i5
        $0=8; //@line 522 "xmltok.c"
        __label__ = 24; break; //@line 522 "xmltok.c"
      case 21: // $bb2_i8
        var $89=$lo_addr_i2; //@line 524 "xmltok.c"
        var $90=($89); //@line 524 "xmltok.c"
        var $_off_i6=($90) + -254;
        var $switch_i7=($_off_i6) < 2;
        if ($switch_i7) { __label__ = 22; break; } else { __label__ = 23; break; }
      case 22: // $bb3_i9
        $0=0; //@line 527 "xmltok.c"
        __label__ = 24; break; //@line 527 "xmltok.c"
      case 23: // $bb4_i10
        $0=29; //@line 531 "xmltok.c"
        __label__ = 24; break; //@line 531 "xmltok.c"
      case 24: // $unicode_byte_type_exit12
        var $91=$0; //@line 520 "xmltok.c"
        $retval_i3=$91; //@line 520 "xmltok.c"
        var $retval6_i11=$retval_i3; //@line 520 "xmltok.c"
        var $92=($retval6_i11)==10; //@line 1760 "xmltok_impl.c"
        var $93=($92); //@line 1760 "xmltok_impl.c"
        $iftmp_1207=$93; //@line 1760 "xmltok_impl.c"
        __lastLabel__ = 24; __label__ = 25; break; //@line 1760 "xmltok_impl.c"
      case 25: // $bb12
        var $94=__lastLabel__ == 24 ? $93 : ($76);
        var $toBool=($94)!=0; //@line 1760 "xmltok_impl.c"
        if ($toBool) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 1760 "xmltok_impl.c"
      case 26: // $bb13
        var $95=$ptr_addr; //@line 1761 "xmltok_impl.c"
        var $96=$95+2; //@line 1761 "xmltok_impl.c"
        $ptr_addr=$96; //@line 1761 "xmltok_impl.c"
        __label__ = 27; break; //@line 1761 "xmltok_impl.c"
      case 27: // $bb14
        var $97=$pos_addr; //@line 1762 "xmltok_impl.c"
        var $98=$97+4; //@line 1762 "xmltok_impl.c"
        HEAP[$98]=-1; //@line 1762 "xmltok_impl.c"
        __label__ = 29; break; //@line 1762 "xmltok_impl.c"
      case 28: // $bb15
        var $99=$ptr_addr; //@line 1765 "xmltok_impl.c"
        var $100=$99+2; //@line 1765 "xmltok_impl.c"
        $ptr_addr=$100; //@line 1765 "xmltok_impl.c"
        __label__ = 29; break; //@line 1765 "xmltok_impl.c"
      case 29: // $bb16
        var $101=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $102=$101+4; //@line 1768 "xmltok_impl.c"
        var $103=HEAP[$102]; //@line 1768 "xmltok_impl.c"
        var $104=($103) + 1; //@line 1768 "xmltok_impl.c"
        var $105=$pos_addr; //@line 1768 "xmltok_impl.c"
        var $106=$105+4; //@line 1768 "xmltok_impl.c"
        HEAP[$106]=$104; //@line 1768 "xmltok_impl.c"
        var $107=$ptr_addr; //@line 1744 "xmltok_impl.c"
        var $108=$end_addr; //@line 1744 "xmltok_impl.c"
        var $109=($107) < ($108); //@line 1744 "xmltok_impl.c"
        if ($109) { __label__ = 1; break; } else { __label__ = 30; break; } //@line 1744 "xmltok_impl.c"
      case 30: // $return
        ;
        return; //@line 1770 "xmltok_impl.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _streqci($s1, $s2) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $s1_addr;
        var $s2_addr;
        var $retval;
        var $0;
        var $c1;
        var $c2;
        $s1_addr=$s1;
        $s2_addr=$s2;
        __label__ = 1; break; //@line 916 "xmltok.c"
      case 1: // $bb
        var $1=$s1_addr; //@line 918 "xmltok.c"
        var $2=HEAP[$1]; //@line 918 "xmltok.c"
        $c1=$2; //@line 918 "xmltok.c"
        var $3=$s1_addr; //@line 918 "xmltok.c"
        var $4=$3+1; //@line 918 "xmltok.c"
        $s1_addr=$4; //@line 918 "xmltok.c"
        var $5=$s2_addr; //@line 919 "xmltok.c"
        var $6=HEAP[$5]; //@line 919 "xmltok.c"
        $c2=$6; //@line 919 "xmltok.c"
        var $7=$s2_addr; //@line 919 "xmltok.c"
        var $8=$7+1; //@line 919 "xmltok.c"
        $s2_addr=$8; //@line 919 "xmltok.c"
        var $9=$c1; //@line 920 "xmltok.c"
        var $10=($9) > 96; //@line 920 "xmltok.c"
        var $11=$c1; //@line 920 "xmltok.c"
        var $12=($11) <= 122; //@line 920 "xmltok.c"
        var $or_cond=($10) & ($12);
        if ($or_cond) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 920 "xmltok.c"
      case 2: // $bb2
        var $13=$c1; //@line 921 "xmltok.c"
        var $14=($13) + -32; //@line 921 "xmltok.c"
        $c1=$14; //@line 921 "xmltok.c"
        __label__ = 3; break; //@line 921 "xmltok.c"
      case 3: // $bb3
        var $15=$c2; //@line 922 "xmltok.c"
        var $16=($15) > 96; //@line 922 "xmltok.c"
        var $17=$c2; //@line 922 "xmltok.c"
        var $18=($17) <= 122; //@line 922 "xmltok.c"
        var $or_cond3=($16) & ($18);
        if ($or_cond3) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 922 "xmltok.c"
      case 4: // $bb5
        var $19=$c2; //@line 923 "xmltok.c"
        var $20=($19) + -32; //@line 923 "xmltok.c"
        $c2=$20; //@line 923 "xmltok.c"
        __label__ = 5; break; //@line 923 "xmltok.c"
      case 5: // $bb6
        var $21=$c1; //@line 924 "xmltok.c"
        var $22=$c2; //@line 924 "xmltok.c"
        var $23=($21)!=($22); //@line 924 "xmltok.c"
        if ($23) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 924 "xmltok.c"
      case 6: // $bb7
        $0=0; //@line 925 "xmltok.c"
        __label__ = 9; break; //@line 925 "xmltok.c"
      case 7: // $bb8
        var $24=$c1; //@line 926 "xmltok.c"
        var $25=($24)==0; //@line 926 "xmltok.c"
        if ($25) { __label__ = 8; break; } else { __label__ = 1; break; } //@line 926 "xmltok.c"
      case 8: // $bb10
        $0=1; //@line 929 "xmltok.c"
        __label__ = 9; break; //@line 929 "xmltok.c"
      case 9: // $bb11
        var $26=$0; //@line 925 "xmltok.c"
        $retval=$26; //@line 925 "xmltok.c"
        var $retval12=$retval; //@line 925 "xmltok.c"
        ;
        return $retval12; //@line 925 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _initUpdatePosition($enc, $ptr, $end, $pos) {
    ;
    var __label__;
  
    var $enc_addr;
    var $ptr_addr;
    var $end_addr;
    var $pos_addr;
    $enc_addr=$enc;
    $ptr_addr=$ptr;
    $end_addr=$end;
    $pos_addr=$pos;
    var $0=$ptr_addr; //@line 936 "xmltok.c"
    var $1=$end_addr; //@line 936 "xmltok.c"
    var $2=$pos_addr; //@line 936 "xmltok.c"
    _normal_updatePosition(_utf8_encoding, $0, $1, $2); //@line 936 "xmltok.c"
    ;
    return; //@line 937 "xmltok.c"
  }
  

  function _parsePseudoAttribute($enc, $ptr, $end, $namePtr, $nameEndPtr, $valPtr, $nextTokPtr) {
    var __stackBase__  = STACKTOP; STACKTOP += 57; _memset(__stackBase__, 0, 57);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $c_addr_i106;
        var $retval_i107;
        var $0;
        var $enc_addr_i94;
        var $ptr_addr_i95=__stackBase__;
        var $end_addr_i96;
        var $retval_i97;
        var $1;
        var $p_i99=__stackBase__+4;
        var $enc_addr_i82;
        var $ptr_addr_i83=__stackBase__+8;
        var $end_addr_i84;
        var $retval_i85;
        var $2;
        var $p_i87=__stackBase__+12;
        var $c_addr_i76;
        var $retval_i77;
        var $3;
        var $enc_addr_i64;
        var $ptr_addr_i65=__stackBase__+16;
        var $end_addr_i66;
        var $retval_i67;
        var $4;
        var $p_i69=__stackBase__+20;
        var $enc_addr_i52;
        var $ptr_addr_i53=__stackBase__+24;
        var $end_addr_i54;
        var $retval_i55;
        var $5;
        var $p_i57=__stackBase__+28;
        var $c_addr_i46;
        var $retval_i47;
        var $6;
        var $c_addr_i40;
        var $retval_i41;
        var $7;
        var $enc_addr_i28;
        var $ptr_addr_i29=__stackBase__+32;
        var $end_addr_i30;
        var $retval_i31;
        var $8;
        var $p_i33=__stackBase__+36;
        var $enc_addr_i16;
        var $ptr_addr_i17=__stackBase__+40;
        var $end_addr_i18;
        var $retval_i19;
        var $9;
        var $p_i21=__stackBase__+44;
        var $c_addr_i;
        var $retval_i14;
        var $10;
        var $enc_addr_i;
        var $ptr_addr_i=__stackBase__+48;
        var $end_addr_i;
        var $retval_i;
        var $11;
        var $buf_i=__stackBase__+52;
        var $p_i=__stackBase__+53;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $namePtr_addr;
        var $nameEndPtr_addr;
        var $valPtr_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $12;
        var $c;
        var $open;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $namePtr_addr=$namePtr;
        $nameEndPtr_addr=$nameEndPtr;
        $valPtr_addr=$valPtr;
        $nextTokPtr_addr=$nextTokPtr;
        var $13=$ptr_addr; //@line 978 "xmltok.c"
        var $14=$end_addr; //@line 978 "xmltok.c"
        var $15=($13)==($14); //@line 978 "xmltok.c"
        if ($15) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 978 "xmltok.c"
      case 1: // $bb
        var $16=$namePtr_addr; //@line 979 "xmltok.c"
        HEAP[$16]=0; //@line 979 "xmltok.c"
        $12=1; //@line 980 "xmltok.c"
        __label__ = 53; break; //@line 980 "xmltok.c"
      case 2: // $bb1
        var $17=$enc_addr; //@line 982 "xmltok.c"
        var $18=$ptr_addr; //@line 982 "xmltok.c"
        var $19=$end_addr; //@line 982 "xmltok.c"
        $enc_addr_i=$17;
        HEAP[$ptr_addr_i]=$18;
        $end_addr_i=$19;
        var $buf1_i=$buf_i; //@line 943 "xmltok.c"
        HEAP[$p_i]=$buf1_i; //@line 943 "xmltok.c"
        var $20=$enc_addr_i; //@line 944 "xmltok.c"
        var $21=$20+56; //@line 944 "xmltok.c"
        var $22=HEAP[$21]; //@line 944 "xmltok.c"
        var $23=HEAP[$p_i]; //@line 944 "xmltok.c"
        var $24=$23+1; //@line 944 "xmltok.c"
        var $25=$enc_addr_i; //@line 944 "xmltok.c"
        var $26=$end_addr_i; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$22]($25, $ptr_addr_i, $26, $p_i, $24); //@line 944 "xmltok.c"
        var $27=HEAP[$p_i]; //@line 945 "xmltok.c"
        var $buf2_i=$buf_i; //@line 945 "xmltok.c"
        var $28=($buf2_i)==($27); //@line 945 "xmltok.c"
        if ($28) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 945 "xmltok.c"
      case 3: // $toAscii_exit_thread
        $11=-1; //@line 946 "xmltok.c"
        $retval_i=-1; //@line 946 "xmltok.c"
        $c_addr_i=-1;
        __label__ = 6; break;
      case 4: // $toAscii_exit
        var $29=$buf_i; //@line 948 "xmltok.c"
        var $30=HEAP[$29]; //@line 948 "xmltok.c"
        var $31=($30); //@line 948 "xmltok.c"
        $11=$31; //@line 948 "xmltok.c"
        $retval_i=$31; //@line 946 "xmltok.c"
        $c_addr_i=$31;
        if ($31 == 9) {
          __label__ = 5; break;
        }
        else if ($31 == 10) {
          __label__ = 5; break;
        }
        else if ($31 == 13) {
          __label__ = 5; break;
        }
        else if ($31 == 32) {
          __label__ = 5; break;
        }
        else {
        __label__ = 6; break;
        }
        
      case 5: // $isSpace_exit
        $10=1; //@line 959 "xmltok.c"
        $retval_i14=1; //@line 959 "xmltok.c"
        var $buf1_i34=$buf_i; //@line 943 "xmltok.c"
        var $buf2_i35=$buf_i; //@line 945 "xmltok.c"
        var $32=$buf_i; //@line 948 "xmltok.c"
        __label__ = 7; break;
      case 6: // $bb2
        $10=0; //@line 961 "xmltok.c"
        $retval_i14=0; //@line 959 "xmltok.c"
        var $33=$nextTokPtr_addr; //@line 983 "xmltok.c"
        var $34=$ptr_addr; //@line 983 "xmltok.c"
        HEAP[$33]=$34; //@line 983 "xmltok.c"
        $12=0; //@line 984 "xmltok.c"
        __label__ = 53; break; //@line 984 "xmltok.c"
      case 7: // $bb3
        var $35=$enc_addr; //@line 987 "xmltok.c"
        var $36=$35+64; //@line 987 "xmltok.c"
        var $37=HEAP[$36]; //@line 987 "xmltok.c"
        var $38=$ptr_addr; //@line 987 "xmltok.c"
        var $39=$38+$37; //@line 987 "xmltok.c"
        $ptr_addr=$39; //@line 987 "xmltok.c"
        var $40=$enc_addr; //@line 988 "xmltok.c"
        var $41=$ptr_addr; //@line 988 "xmltok.c"
        var $42=$end_addr; //@line 988 "xmltok.c"
        $enc_addr_i28=$40;
        HEAP[$ptr_addr_i29]=$41;
        $end_addr_i30=$42;
        HEAP[$p_i33]=$buf1_i34; //@line 943 "xmltok.c"
        var $43=$enc_addr_i28; //@line 944 "xmltok.c"
        var $44=$43+56; //@line 944 "xmltok.c"
        var $45=HEAP[$44]; //@line 944 "xmltok.c"
        var $46=HEAP[$p_i33]; //@line 944 "xmltok.c"
        var $47=$46+1; //@line 944 "xmltok.c"
        var $48=$enc_addr_i28; //@line 944 "xmltok.c"
        var $49=$end_addr_i30; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$45]($48, $ptr_addr_i29, $49, $p_i33, $47); //@line 944 "xmltok.c"
        var $50=HEAP[$p_i33]; //@line 945 "xmltok.c"
        var $51=($buf2_i35)==($50); //@line 945 "xmltok.c"
        if ($51) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 945 "xmltok.c"
      case 8: // $toAscii_exit39_thread
        $8=-1; //@line 946 "xmltok.c"
        $retval_i31=-1; //@line 946 "xmltok.c"
        $c_addr_i40=-1;
        __label__ = 11; break;
      case 9: // $toAscii_exit39
        var $52=HEAP[$32]; //@line 948 "xmltok.c"
        var $53=($52); //@line 948 "xmltok.c"
        $8=$53; //@line 948 "xmltok.c"
        $retval_i31=$53; //@line 946 "xmltok.c"
        $c_addr_i40=$53;
        if ($53 == 9) {
          __label__ = 10; break;
        }
        else if ($53 == 10) {
          __label__ = 10; break;
        }
        else if ($53 == 13) {
          __label__ = 10; break;
        }
        else if ($53 == 32) {
          __label__ = 10; break;
        }
        else {
        __label__ = 11; break;
        }
        
      case 10: // $isSpace_exit45_thread
        $7=1; //@line 959 "xmltok.c"
        $retval_i41=1; //@line 959 "xmltok.c"
        __label__ = 7; break;
      case 11: // $bb4
        $7=0; //@line 961 "xmltok.c"
        $retval_i41=0; //@line 959 "xmltok.c"
        var $54=$ptr_addr; //@line 989 "xmltok.c"
        var $55=$end_addr; //@line 989 "xmltok.c"
        var $56=($54)==($55); //@line 989 "xmltok.c"
        var $57=$namePtr_addr; //@line 990 "xmltok.c"
        if ($56) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 989 "xmltok.c"
      case 12: // $bb5
        HEAP[$57]=0; //@line 990 "xmltok.c"
        $12=1; //@line 991 "xmltok.c"
        __label__ = 53; break; //@line 991 "xmltok.c"
      case 13: // $bb6
        var $58=$ptr_addr; //@line 993 "xmltok.c"
        HEAP[$57]=$58; //@line 993 "xmltok.c"
        var $buf1_i70=$buf_i; //@line 943 "xmltok.c"
        var $buf2_i71=$buf_i; //@line 945 "xmltok.c"
        var $59=$buf_i; //@line 948 "xmltok.c"
        __label__ = 14; break; //@line 993 "xmltok.c"
      case 14: // $bb7
        var $60=$enc_addr; //@line 995 "xmltok.c"
        var $61=$ptr_addr; //@line 995 "xmltok.c"
        var $62=$end_addr; //@line 995 "xmltok.c"
        $enc_addr_i64=$60;
        HEAP[$ptr_addr_i65]=$61;
        $end_addr_i66=$62;
        HEAP[$p_i69]=$buf1_i70; //@line 943 "xmltok.c"
        var $63=$enc_addr_i64; //@line 944 "xmltok.c"
        var $64=$63+56; //@line 944 "xmltok.c"
        var $65=HEAP[$64]; //@line 944 "xmltok.c"
        var $66=HEAP[$p_i69]; //@line 944 "xmltok.c"
        var $67=$66+1; //@line 944 "xmltok.c"
        var $68=$enc_addr_i64; //@line 944 "xmltok.c"
        var $69=$end_addr_i66; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$65]($68, $ptr_addr_i65, $69, $p_i69, $67); //@line 944 "xmltok.c"
        var $70=HEAP[$p_i69]; //@line 945 "xmltok.c"
        var $71=($buf2_i71)==($70); //@line 945 "xmltok.c"
        if ($71) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 945 "xmltok.c"
      case 15: // $toAscii_exit75_thread
        $4=-1; //@line 946 "xmltok.c"
        $retval_i67=-1; //@line 946 "xmltok.c"
        $c=-1; //@line 995 "xmltok.c"
        __label__ = 17; break;
      case 16: // $toAscii_exit75
        var $72=HEAP[$59]; //@line 948 "xmltok.c"
        var $73=($72); //@line 948 "xmltok.c"
        $4=$73; //@line 948 "xmltok.c"
        $retval_i67=$73; //@line 946 "xmltok.c"
        $c=$73; //@line 995 "xmltok.c"
        var $74=($73)==-1; //@line 996 "xmltok.c"
        if ($74) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 996 "xmltok.c"
      case 17: // $bb8
        var $75=$nextTokPtr_addr; //@line 997 "xmltok.c"
        var $76=$ptr_addr; //@line 997 "xmltok.c"
        HEAP[$75]=$76; //@line 997 "xmltok.c"
        $12=0; //@line 998 "xmltok.c"
        __label__ = 53; break; //@line 998 "xmltok.c"
      case 18: // $bb9
        var $77=$c; //@line 1000 "xmltok.c"
        var $78=($77)==61; //@line 1000 "xmltok.c"
        if ($78) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 1000 "xmltok.c"
      case 19: // $bb10
        var $79=$nameEndPtr_addr; //@line 1001 "xmltok.c"
        var $80=$ptr_addr; //@line 1001 "xmltok.c"
        HEAP[$79]=$80; //@line 1001 "xmltok.c"
        __label__ = 29; break; //@line 1001 "xmltok.c"
      case 20: // $bb11
        var $81=$c; //@line 1004 "xmltok.c"
        $c_addr_i76=$81;
        var $82=$c_addr_i76; //@line 954 "xmltok.c"
        if ($82 == 9) {
          __label__ = 21; break;
        }
        else if ($82 == 10) {
          __label__ = 21; break;
        }
        else if ($82 == 13) {
          __label__ = 21; break;
        }
        else if ($82 == 32) {
          __label__ = 21; break;
        }
        else {
        __label__ = 28; break;
        }
        
      case 21: // $bb12
        $3=1; //@line 959 "xmltok.c"
        $retval_i77=1; //@line 959 "xmltok.c"
        var $83=$nameEndPtr_addr; //@line 1005 "xmltok.c"
        var $84=$ptr_addr; //@line 1005 "xmltok.c"
        HEAP[$83]=$84; //@line 1005 "xmltok.c"
        var $buf1_i100=$buf_i; //@line 943 "xmltok.c"
        var $buf2_i101=$buf_i; //@line 945 "xmltok.c"
        var $85=$buf_i; //@line 948 "xmltok.c"
        __label__ = 22; break; //@line 1005 "xmltok.c"
      case 22: // $bb13
        var $86=$enc_addr; //@line 1007 "xmltok.c"
        var $87=$86+64; //@line 1007 "xmltok.c"
        var $88=HEAP[$87]; //@line 1007 "xmltok.c"
        var $89=$ptr_addr; //@line 1007 "xmltok.c"
        var $90=$89+$88; //@line 1007 "xmltok.c"
        $ptr_addr=$90; //@line 1007 "xmltok.c"
        var $91=$enc_addr; //@line 1008 "xmltok.c"
        var $92=$ptr_addr; //@line 1008 "xmltok.c"
        var $93=$end_addr; //@line 1008 "xmltok.c"
        $enc_addr_i94=$91;
        HEAP[$ptr_addr_i95]=$92;
        $end_addr_i96=$93;
        HEAP[$p_i99]=$buf1_i100; //@line 943 "xmltok.c"
        var $94=$enc_addr_i94; //@line 944 "xmltok.c"
        var $95=$94+56; //@line 944 "xmltok.c"
        var $96=HEAP[$95]; //@line 944 "xmltok.c"
        var $97=HEAP[$p_i99]; //@line 944 "xmltok.c"
        var $98=$97+1; //@line 944 "xmltok.c"
        var $99=$enc_addr_i94; //@line 944 "xmltok.c"
        var $100=$end_addr_i96; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$96]($99, $ptr_addr_i95, $100, $p_i99, $98); //@line 944 "xmltok.c"
        var $101=HEAP[$p_i99]; //@line 945 "xmltok.c"
        var $102=($buf2_i101)==($101); //@line 945 "xmltok.c"
        if ($102) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 945 "xmltok.c"
      case 23: // $bb14_thread
        $1=-1; //@line 946 "xmltok.c"
        $retval_i97=-1; //@line 946 "xmltok.c"
        $c=-1; //@line 1008 "xmltok.c"
        $c_addr_i106=-1;
        $0=0; //@line 961 "xmltok.c"
        $retval_i107=0; //@line 959 "xmltok.c"
        __label__ = 27; break;
      case 24: // $toAscii_exit105
        var $103=HEAP[$85]; //@line 948 "xmltok.c"
        var $104=($103); //@line 948 "xmltok.c"
        $1=$104; //@line 948 "xmltok.c"
        $retval_i97=$104; //@line 946 "xmltok.c"
        $c=$104; //@line 1008 "xmltok.c"
        $c_addr_i106=$104;
        if ($104 == 9) {
          __label__ = 25; break;
        }
        else if ($104 == 10) {
          __label__ = 25; break;
        }
        else if ($104 == 13) {
          __label__ = 25; break;
        }
        else if ($104 == 32) {
          __label__ = 25; break;
        }
        else {
        __label__ = 26; break;
        }
        
      case 25: // $isSpace_exit111_thread
        $0=1; //@line 959 "xmltok.c"
        $retval_i107=1; //@line 959 "xmltok.c"
        __label__ = 22; break;
      case 26: // $bb14
        $0=0; //@line 961 "xmltok.c"
        $retval_i107=0; //@line 959 "xmltok.c"
        var $105=($104)!=61; //@line 1009 "xmltok.c"
        if ($105) { __label__ = 27; break; } else { __label__ = 29; break; } //@line 1009 "xmltok.c"
      case 27: // $bb15
        var $106=$nextTokPtr_addr; //@line 1010 "xmltok.c"
        var $107=$ptr_addr; //@line 1010 "xmltok.c"
        HEAP[$106]=$107; //@line 1010 "xmltok.c"
        $12=0; //@line 1011 "xmltok.c"
        __label__ = 53; break; //@line 1011 "xmltok.c"
      case 28: // $bb17
        $3=0; //@line 961 "xmltok.c"
        $retval_i77=0; //@line 959 "xmltok.c"
        var $108=$enc_addr; //@line 1015 "xmltok.c"
        var $109=$108+64; //@line 1015 "xmltok.c"
        var $110=HEAP[$109]; //@line 1015 "xmltok.c"
        var $111=$ptr_addr; //@line 1015 "xmltok.c"
        var $112=$111+$110; //@line 1015 "xmltok.c"
        $ptr_addr=$112; //@line 1015 "xmltok.c"
        __label__ = 14; break; //@line 1015 "xmltok.c"
      case 29: // $bb18
        var $113=$namePtr_addr; //@line 1017 "xmltok.c"
        var $114=HEAP[$113]; //@line 1017 "xmltok.c"
        var $115=$ptr_addr; //@line 1017 "xmltok.c"
        var $116=($114)==($115); //@line 1017 "xmltok.c"
        if ($116) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1017 "xmltok.c"
      case 30: // $bb19
        var $117=$nextTokPtr_addr; //@line 1018 "xmltok.c"
        var $118=$ptr_addr; //@line 1018 "xmltok.c"
        HEAP[$117]=$118; //@line 1018 "xmltok.c"
        $12=0; //@line 1019 "xmltok.c"
        __label__ = 53; break; //@line 1019 "xmltok.c"
      case 31: // $bb20
        var $119=$enc_addr; //@line 1021 "xmltok.c"
        var $120=$119+64; //@line 1021 "xmltok.c"
        var $121=HEAP[$120]; //@line 1021 "xmltok.c"
        var $122=$ptr_addr; //@line 1021 "xmltok.c"
        var $123=$122+$121; //@line 1021 "xmltok.c"
        $ptr_addr=$123; //@line 1021 "xmltok.c"
        var $124=$enc_addr; //@line 1022 "xmltok.c"
        var $125=$ptr_addr; //@line 1022 "xmltok.c"
        var $126=$end_addr; //@line 1022 "xmltok.c"
        $enc_addr_i82=$124;
        HEAP[$ptr_addr_i83]=$125;
        $end_addr_i84=$126;
        var $buf1_i88=$buf_i; //@line 943 "xmltok.c"
        HEAP[$p_i87]=$buf1_i88; //@line 943 "xmltok.c"
        var $127=$enc_addr_i82; //@line 944 "xmltok.c"
        var $128=$127+56; //@line 944 "xmltok.c"
        var $129=HEAP[$128]; //@line 944 "xmltok.c"
        var $130=HEAP[$p_i87]; //@line 944 "xmltok.c"
        var $131=$130+1; //@line 944 "xmltok.c"
        var $132=$enc_addr_i82; //@line 944 "xmltok.c"
        var $133=$end_addr_i84; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$129]($132, $ptr_addr_i83, $133, $p_i87, $131); //@line 944 "xmltok.c"
        var $134=HEAP[$p_i87]; //@line 945 "xmltok.c"
        var $buf2_i89=$buf_i; //@line 945 "xmltok.c"
        var $135=($buf2_i89)==($134); //@line 945 "xmltok.c"
        if ($135) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 945 "xmltok.c"
      case 32: // $bb_i90
        $2=-1; //@line 946 "xmltok.c"
        __label__ = 34; break; //@line 946 "xmltok.c"
      case 33: // $bb3_i91
        var $136=$buf_i; //@line 948 "xmltok.c"
        var $137=HEAP[$136]; //@line 948 "xmltok.c"
        var $138=($137); //@line 948 "xmltok.c"
        $2=$138; //@line 948 "xmltok.c"
        __label__ = 34; break; //@line 948 "xmltok.c"
      case 34: // $toAscii_exit93
        var $139=$2; //@line 946 "xmltok.c"
        $retval_i85=$139; //@line 946 "xmltok.c"
        var $retval5_i92=$retval_i85; //@line 946 "xmltok.c"
        $c=$retval5_i92; //@line 1022 "xmltok.c"
        var $buf1_i58=$buf_i; //@line 943 "xmltok.c"
        var $buf2_i59=$buf_i; //@line 945 "xmltok.c"
        var $140=$buf_i; //@line 948 "xmltok.c"
        __lastLabel__ = 34; __label__ = 39; break; //@line 1022 "xmltok.c"
      case 35: // $bb21
        $6=1; //@line 959 "xmltok.c"
        $retval_i47=1; //@line 959 "xmltok.c"
        var $141=$enc_addr; //@line 1024 "xmltok.c"
        var $142=$141+64; //@line 1024 "xmltok.c"
        var $143=HEAP[$142]; //@line 1024 "xmltok.c"
        var $144=$ptr_addr; //@line 1024 "xmltok.c"
        var $145=$144+$143; //@line 1024 "xmltok.c"
        $ptr_addr=$145; //@line 1024 "xmltok.c"
        var $146=$enc_addr; //@line 1025 "xmltok.c"
        var $147=$ptr_addr; //@line 1025 "xmltok.c"
        var $148=$end_addr; //@line 1025 "xmltok.c"
        $enc_addr_i52=$146;
        HEAP[$ptr_addr_i53]=$147;
        $end_addr_i54=$148;
        HEAP[$p_i57]=$buf1_i58; //@line 943 "xmltok.c"
        var $149=$enc_addr_i52; //@line 944 "xmltok.c"
        var $150=$149+56; //@line 944 "xmltok.c"
        var $151=HEAP[$150]; //@line 944 "xmltok.c"
        var $152=HEAP[$p_i57]; //@line 944 "xmltok.c"
        var $153=$152+1; //@line 944 "xmltok.c"
        var $154=$enc_addr_i52; //@line 944 "xmltok.c"
        var $155=$end_addr_i54; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$151]($154, $ptr_addr_i53, $155, $p_i57, $153); //@line 944 "xmltok.c"
        var $156=HEAP[$p_i57]; //@line 945 "xmltok.c"
        var $157=($buf2_i59)==($156); //@line 945 "xmltok.c"
        if ($157) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 945 "xmltok.c"
      case 36: // $bb_i60
        $5=-1; //@line 946 "xmltok.c"
        __label__ = 38; break; //@line 946 "xmltok.c"
      case 37: // $bb3_i61
        var $158=HEAP[$140]; //@line 948 "xmltok.c"
        var $159=($158); //@line 948 "xmltok.c"
        $5=$159; //@line 948 "xmltok.c"
        __label__ = 38; break; //@line 948 "xmltok.c"
      case 38: // $toAscii_exit63
        var $160=$5; //@line 946 "xmltok.c"
        $retval_i55=$160; //@line 946 "xmltok.c"
        var $retval5_i62=$retval_i55; //@line 946 "xmltok.c"
        $c=$retval5_i62; //@line 1025 "xmltok.c"
        __lastLabel__ = 38; __label__ = 39; break; //@line 1025 "xmltok.c"
      case 39: // $bb22
        var $161=__lastLabel__ == 38 ? $retval5_i62 : ($retval5_i92);
        $c_addr_i46=$161;
        if ($161 == 9) {
          __label__ = 35; break;
        }
        else if ($161 == 10) {
          __label__ = 35; break;
        }
        else if ($161 == 13) {
          __label__ = 35; break;
        }
        else if ($161 == 32) {
          __label__ = 35; break;
        }
        else {
        __label__ = 40; break;
        }
        
      case 40: // $bb23
        $6=0; //@line 961 "xmltok.c"
        $retval_i47=0; //@line 959 "xmltok.c"
        var $162=$c; //@line 1027 "xmltok.c"
        var $163=($162)!=34; //@line 1027 "xmltok.c"
        var $164=$c; //@line 1027 "xmltok.c"
        var $165=($164)!=39; //@line 1027 "xmltok.c"
        var $or_cond=($163) & ($165);
        if ($or_cond) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 1027 "xmltok.c"
      case 41: // $bb25
        var $166=$nextTokPtr_addr; //@line 1028 "xmltok.c"
        var $167=$ptr_addr; //@line 1028 "xmltok.c"
        HEAP[$166]=$167; //@line 1028 "xmltok.c"
        $12=0; //@line 1029 "xmltok.c"
        __label__ = 53; break; //@line 1029 "xmltok.c"
      case 42: // $bb26
        var $168=$c; //@line 1031 "xmltok.c"
        var $169=((($168)) & 255); //@line 1031 "xmltok.c"
        $open=$169; //@line 1031 "xmltok.c"
        var $170=$enc_addr; //@line 1032 "xmltok.c"
        var $171=$170+64; //@line 1032 "xmltok.c"
        var $172=HEAP[$171]; //@line 1032 "xmltok.c"
        var $173=$ptr_addr; //@line 1032 "xmltok.c"
        var $174=$173+$172; //@line 1032 "xmltok.c"
        $ptr_addr=$174; //@line 1032 "xmltok.c"
        var $175=$valPtr_addr; //@line 1033 "xmltok.c"
        var $176=$ptr_addr; //@line 1033 "xmltok.c"
        HEAP[$175]=$176; //@line 1033 "xmltok.c"
        var $buf1_i22=$buf_i; //@line 943 "xmltok.c"
        var $buf2_i23=$buf_i; //@line 945 "xmltok.c"
        var $177=$buf_i; //@line 948 "xmltok.c"
        __label__ = 43; break; //@line 1033 "xmltok.c"
      case 43: // $bb27
        var $178=$enc_addr; //@line 1035 "xmltok.c"
        var $179=$ptr_addr; //@line 1035 "xmltok.c"
        var $180=$end_addr; //@line 1035 "xmltok.c"
        $enc_addr_i16=$178;
        HEAP[$ptr_addr_i17]=$179;
        $end_addr_i18=$180;
        HEAP[$p_i21]=$buf1_i22; //@line 943 "xmltok.c"
        var $181=$enc_addr_i16; //@line 944 "xmltok.c"
        var $182=$181+56; //@line 944 "xmltok.c"
        var $183=HEAP[$182]; //@line 944 "xmltok.c"
        var $184=HEAP[$p_i21]; //@line 944 "xmltok.c"
        var $185=$184+1; //@line 944 "xmltok.c"
        var $186=$enc_addr_i16; //@line 944 "xmltok.c"
        var $187=$end_addr_i18; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$183]($186, $ptr_addr_i17, $187, $p_i21, $185); //@line 944 "xmltok.c"
        var $188=HEAP[$p_i21]; //@line 945 "xmltok.c"
        var $189=($buf2_i23)==($188); //@line 945 "xmltok.c"
        if ($189) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 945 "xmltok.c"
      case 44: // $bb_i24
        $9=-1; //@line 946 "xmltok.c"
        __label__ = 46; break; //@line 946 "xmltok.c"
      case 45: // $bb3_i25
        var $190=HEAP[$177]; //@line 948 "xmltok.c"
        var $191=($190); //@line 948 "xmltok.c"
        $9=$191; //@line 948 "xmltok.c"
        __label__ = 46; break; //@line 948 "xmltok.c"
      case 46: // $toAscii_exit27
        var $192=$9; //@line 946 "xmltok.c"
        $retval_i19=$192; //@line 946 "xmltok.c"
        var $retval5_i26=$retval_i19; //@line 946 "xmltok.c"
        $c=$retval5_i26; //@line 1035 "xmltok.c"
        var $193=$open; //@line 1036 "xmltok.c"
        var $194=($193); //@line 1036 "xmltok.c"
        var $195=$c; //@line 1036 "xmltok.c"
        var $196=($194)==($195); //@line 1036 "xmltok.c"
        if ($196) { __label__ = 52; break; } else { __label__ = 47; break; } //@line 1036 "xmltok.c"
      case 47: // $bb28
        var $197=$c; //@line 1038 "xmltok.c"
        var $198=($197) <= 96; //@line 1038 "xmltok.c"
        var $199=$c; //@line 1038 "xmltok.c"
        var $200=($199) > 122; //@line 1038 "xmltok.c"
        var $or_cond3=($198) | ($200);
        if ($or_cond3) { __label__ = 48; break; } else { __label__ = 51; break; } //@line 1038 "xmltok.c"
      case 48: // $bb30
        var $201=$c; //@line 1038 "xmltok.c"
        var $202=($201) <= 64; //@line 1038 "xmltok.c"
        var $203=$c; //@line 1038 "xmltok.c"
        var $204=($203) > 90; //@line 1038 "xmltok.c"
        var $or_cond5=($202) | ($204);
        if ($or_cond5) { __label__ = 49; break; } else { __label__ = 51; break; } //@line 1038 "xmltok.c"
      case 49: // $bb32
        var $205=$c; //@line 1038 "xmltok.c"
        var $206=($205) <= 47; //@line 1038 "xmltok.c"
        var $207=$c; //@line 1038 "xmltok.c"
        var $208=($207) > 57; //@line 1038 "xmltok.c"
        var $or_cond7=($206) | ($208);
        var $209=$c; //@line 1038 "xmltok.c"
        var $210=($209)!=46; //@line 1038 "xmltok.c"
        var $or_cond9=($or_cond7) & ($210);
        var $211=$c; //@line 1038 "xmltok.c"
        var $212=($211)!=45; //@line 1038 "xmltok.c"
        var $or_cond11=($or_cond9) & ($212);
        var $213=$c; //@line 1038 "xmltok.c"
        var $214=($213)!=95; //@line 1038 "xmltok.c"
        var $or_cond13=($or_cond11) & ($214);
        if ($or_cond13) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 1038 "xmltok.c"
      case 50: // $bb37
        var $215=$nextTokPtr_addr; //@line 1044 "xmltok.c"
        var $216=$ptr_addr; //@line 1044 "xmltok.c"
        HEAP[$215]=$216; //@line 1044 "xmltok.c"
        $12=0; //@line 1045 "xmltok.c"
        __label__ = 53; break; //@line 1045 "xmltok.c"
      case 51: // $bb38
        var $217=$enc_addr; //@line 1034 "xmltok.c"
        var $218=$217+64; //@line 1034 "xmltok.c"
        var $219=HEAP[$218]; //@line 1034 "xmltok.c"
        var $220=$ptr_addr; //@line 1034 "xmltok.c"
        var $221=$220+$219; //@line 1034 "xmltok.c"
        $ptr_addr=$221; //@line 1034 "xmltok.c"
        __label__ = 43; break; //@line 1034 "xmltok.c"
      case 52: // $bb39
        var $222=$enc_addr; //@line 1048 "xmltok.c"
        var $223=$222+64; //@line 1048 "xmltok.c"
        var $224=HEAP[$223]; //@line 1048 "xmltok.c"
        var $225=$ptr_addr; //@line 1048 "xmltok.c"
        var $226=$225+$224; //@line 1048 "xmltok.c"
        var $227=$nextTokPtr_addr; //@line 1048 "xmltok.c"
        HEAP[$227]=$226; //@line 1048 "xmltok.c"
        $12=1; //@line 1049 "xmltok.c"
        __label__ = 53; break; //@line 1049 "xmltok.c"
      case 53: // $bb40
        var $228=$12; //@line 980 "xmltok.c"
        $retval=$228; //@line 980 "xmltok.c"
        var $retval41=$retval; //@line 980 "xmltok.c"
        STACKTOP = __stackBase__;
        return $retval41; //@line 980 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlUtf8Encode($c, $buf) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $c_addr;
        var $buf_addr;
        var $retval;
        var $0;
        $c_addr=$c;
        $buf_addr=$buf;
        var $1=$c_addr; //@line 1194 "xmltok.c"
        var $2=($1) < 0; //@line 1194 "xmltok.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1194 "xmltok.c"
      case 1: // $bb
        $0=0; //@line 1195 "xmltok.c"
        __label__ = 11; break; //@line 1195 "xmltok.c"
      case 2: // $bb1
        var $3=$c_addr; //@line 1196 "xmltok.c"
        var $4=($3) <= 127; //@line 1196 "xmltok.c"
        var $5=$c_addr; //@line 1197 "xmltok.c"
        if ($4) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1196 "xmltok.c"
      case 3: // $bb2
        var $6=((($5)) & 255); //@line 1197 "xmltok.c"
        var $7=$buf_addr; //@line 1197 "xmltok.c"
        var $8=$7; //@line 1197 "xmltok.c"
        HEAP[$8]=$6; //@line 1197 "xmltok.c"
        $0=1; //@line 1198 "xmltok.c"
        __label__ = 11; break; //@line 1198 "xmltok.c"
      case 4: // $bb3
        var $9=($5) <= 2047; //@line 1200 "xmltok.c"
        var $10=$c_addr; //@line 1201 "xmltok.c"
        if ($9) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1200 "xmltok.c"
      case 5: // $bb4
        var $11=($10) >> 6; //@line 1201 "xmltok.c"
        var $12=((($11)) & 255); //@line 1201 "xmltok.c"
        var $13=($12) | -64; //@line 1201 "xmltok.c"
        var $14=$buf_addr; //@line 1201 "xmltok.c"
        var $15=$14; //@line 1201 "xmltok.c"
        HEAP[$15]=$13; //@line 1201 "xmltok.c"
        var $16=$c_addr; //@line 1202 "xmltok.c"
        var $17=((($16)) & 255); //@line 1202 "xmltok.c"
        var $18=($17) & 63; //@line 1202 "xmltok.c"
        var $19=($18) | -128; //@line 1202 "xmltok.c"
        var $20=$buf_addr; //@line 1202 "xmltok.c"
        var $21=$20+1; //@line 1202 "xmltok.c"
        HEAP[$21]=$19; //@line 1202 "xmltok.c"
        $0=2; //@line 1203 "xmltok.c"
        __label__ = 11; break; //@line 1203 "xmltok.c"
      case 6: // $bb5
        var $22=($10) <= 65535; //@line 1205 "xmltok.c"
        var $23=$c_addr; //@line 1206 "xmltok.c"
        if ($22) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 1205 "xmltok.c"
      case 7: // $bb6
        var $24=($23) >> 12; //@line 1206 "xmltok.c"
        var $25=((($24)) & 255); //@line 1206 "xmltok.c"
        var $26=($25) | -32; //@line 1206 "xmltok.c"
        var $27=$buf_addr; //@line 1206 "xmltok.c"
        var $28=$27; //@line 1206 "xmltok.c"
        HEAP[$28]=$26; //@line 1206 "xmltok.c"
        var $29=$c_addr; //@line 1207 "xmltok.c"
        var $30=($29) >> 6; //@line 1207 "xmltok.c"
        var $31=((($30)) & 255); //@line 1207 "xmltok.c"
        var $32=($31) & 63; //@line 1207 "xmltok.c"
        var $33=($32) | -128; //@line 1207 "xmltok.c"
        var $34=$buf_addr; //@line 1207 "xmltok.c"
        var $35=$34+1; //@line 1207 "xmltok.c"
        HEAP[$35]=$33; //@line 1207 "xmltok.c"
        var $36=$c_addr; //@line 1208 "xmltok.c"
        var $37=((($36)) & 255); //@line 1208 "xmltok.c"
        var $38=($37) & 63; //@line 1208 "xmltok.c"
        var $39=($38) | -128; //@line 1208 "xmltok.c"
        var $40=$buf_addr; //@line 1208 "xmltok.c"
        var $41=$40+2; //@line 1208 "xmltok.c"
        HEAP[$41]=$39; //@line 1208 "xmltok.c"
        $0=3; //@line 1209 "xmltok.c"
        __label__ = 11; break; //@line 1209 "xmltok.c"
      case 8: // $bb7
        var $42=($23) <= 1114111; //@line 1211 "xmltok.c"
        if ($42) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1211 "xmltok.c"
      case 9: // $bb8
        var $43=$c_addr; //@line 1212 "xmltok.c"
        var $44=($43) >> 18; //@line 1212 "xmltok.c"
        var $45=((($44)) & 255); //@line 1212 "xmltok.c"
        var $46=($45) | -16; //@line 1212 "xmltok.c"
        var $47=$buf_addr; //@line 1212 "xmltok.c"
        var $48=$47; //@line 1212 "xmltok.c"
        HEAP[$48]=$46; //@line 1212 "xmltok.c"
        var $49=$c_addr; //@line 1213 "xmltok.c"
        var $50=($49) >> 12; //@line 1213 "xmltok.c"
        var $51=((($50)) & 255); //@line 1213 "xmltok.c"
        var $52=($51) & 63; //@line 1213 "xmltok.c"
        var $53=($52) | -128; //@line 1213 "xmltok.c"
        var $54=$buf_addr; //@line 1213 "xmltok.c"
        var $55=$54+1; //@line 1213 "xmltok.c"
        HEAP[$55]=$53; //@line 1213 "xmltok.c"
        var $56=$c_addr; //@line 1214 "xmltok.c"
        var $57=($56) >> 6; //@line 1214 "xmltok.c"
        var $58=((($57)) & 255); //@line 1214 "xmltok.c"
        var $59=($58) & 63; //@line 1214 "xmltok.c"
        var $60=($59) | -128; //@line 1214 "xmltok.c"
        var $61=$buf_addr; //@line 1214 "xmltok.c"
        var $62=$61+2; //@line 1214 "xmltok.c"
        HEAP[$62]=$60; //@line 1214 "xmltok.c"
        var $63=$c_addr; //@line 1215 "xmltok.c"
        var $64=((($63)) & 255); //@line 1215 "xmltok.c"
        var $65=($64) & 63; //@line 1215 "xmltok.c"
        var $66=($65) | -128; //@line 1215 "xmltok.c"
        var $67=$buf_addr; //@line 1215 "xmltok.c"
        var $68=$67+3; //@line 1215 "xmltok.c"
        HEAP[$68]=$66; //@line 1215 "xmltok.c"
        $0=4; //@line 1216 "xmltok.c"
        __label__ = 11; break; //@line 1216 "xmltok.c"
      case 10: // $bb9
        $0=0; //@line 1218 "xmltok.c"
        __label__ = 11; break; //@line 1218 "xmltok.c"
      case 11: // $bb10
        var $69=$0; //@line 1195 "xmltok.c"
        $retval=$69; //@line 1195 "xmltok.c"
        var $retval11=$retval; //@line 1195 "xmltok.c"
        ;
        return $retval11; //@line 1195 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlUtf16Encode($charNum, $buf) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $charNum_addr;
        var $buf_addr;
        var $retval;
        var $0;
        $charNum_addr=$charNum;
        $buf_addr=$buf;
        var $1=$charNum_addr; //@line 1224 "xmltok.c"
        var $2=($1) < 0; //@line 1224 "xmltok.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1224 "xmltok.c"
      case 1: // $bb
        $0=0; //@line 1225 "xmltok.c"
        __label__ = 7; break; //@line 1225 "xmltok.c"
      case 2: // $bb1
        var $3=$charNum_addr; //@line 1226 "xmltok.c"
        var $4=($3) <= 65535; //@line 1226 "xmltok.c"
        var $5=$charNum_addr; //@line 1227 "xmltok.c"
        if ($4) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 1226 "xmltok.c"
      case 3: // $bb2
        var $6=((($5)) & 65535); //@line 1227 "xmltok.c"
        var $7=$buf_addr; //@line 1227 "xmltok.c"
        var $8=$7; //@line 1227 "xmltok.c"
        HEAP[$8]=$6; //@line 1227 "xmltok.c"
        $0=1; //@line 1228 "xmltok.c"
        __label__ = 7; break; //@line 1228 "xmltok.c"
      case 4: // $bb3
        var $9=($5) <= 1114111; //@line 1230 "xmltok.c"
        if ($9) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 1230 "xmltok.c"
      case 5: // $bb4
        var $10=$charNum_addr; //@line 1231 "xmltok.c"
        var $11=($10) - 65536; //@line 1231 "xmltok.c"
        $charNum_addr=$11; //@line 1231 "xmltok.c"
        var $12=$charNum_addr; //@line 1232 "xmltok.c"
        var $13=($12) >> 10; //@line 1232 "xmltok.c"
        var $14=((($13)) & 65535); //@line 1232 "xmltok.c"
        var $15=($14) + -10240; //@line 1232 "xmltok.c"
        var $16=$buf_addr; //@line 1232 "xmltok.c"
        var $17=$16; //@line 1232 "xmltok.c"
        HEAP[$17]=$15; //@line 1232 "xmltok.c"
        var $18=$charNum_addr; //@line 1233 "xmltok.c"
        var $19=((($18)) & 65535); //@line 1233 "xmltok.c"
        var $20=($19) & 1023; //@line 1233 "xmltok.c"
        var $21=($20) + -9216; //@line 1233 "xmltok.c"
        var $22=$buf_addr; //@line 1233 "xmltok.c"
        var $23=$22+2; //@line 1233 "xmltok.c"
        HEAP[$23]=$21; //@line 1233 "xmltok.c"
        $0=2; //@line 1234 "xmltok.c"
        __label__ = 7; break; //@line 1234 "xmltok.c"
      case 6: // $bb5
        $0=0; //@line 1236 "xmltok.c"
        __label__ = 7; break; //@line 1236 "xmltok.c"
      case 7: // $bb6
        var $24=$0; //@line 1225 "xmltok.c"
        $retval=$24; //@line 1225 "xmltok.c"
        var $retval7=$retval; //@line 1225 "xmltok.c"
        ;
        return $retval7; //@line 1225 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlSizeOfUnknownEncoding() {
    ;
    var __label__;
  
    var $retval;
    var $0;
    $0=1908; //@line 1252 "xmltok.c"
    var $1=$0; //@line 1252 "xmltok.c"
    $retval=$1; //@line 1252 "xmltok.c"
    var $retval1=$retval; //@line 1252 "xmltok.c"
    ;
    return $retval1; //@line 1252 "xmltok.c"
  }
  

  function _unknown_isName($enc, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $0;
        var $uenc;
        var $c;
        $enc_addr=$enc;
        $p_addr=$p;
        var $1=$enc_addr; //@line 1258 "xmltok.c"
        var $2=$1; //@line 1258 "xmltok.c"
        $uenc=$2; //@line 1258 "xmltok.c"
        var $3=$uenc; //@line 1259 "xmltok.c"
        var $4=$3+364; //@line 1259 "xmltok.c"
        var $5=HEAP[$4]; //@line 1259 "xmltok.c"
        var $6=$uenc; //@line 1259 "xmltok.c"
        var $7=$6+368; //@line 1259 "xmltok.c"
        var $8=HEAP[$7]; //@line 1259 "xmltok.c"
        var $9=$p_addr; //@line 1259 "xmltok.c"
        var $10=FUNCTION_TABLE[$5]($8, $9); //@line 1259 "xmltok.c"
        $c=$10; //@line 1259 "xmltok.c"
        var $11=$c; //@line 1260 "xmltok.c"
        var $12=($11) & -65536; //@line 1260 "xmltok.c"
        var $13=($12)!=0; //@line 1260 "xmltok.c"
        if ($13) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1260 "xmltok.c"
      case 1: // $bb
        $0=0; //@line 1261 "xmltok.c"
        __label__ = 3; break; //@line 1261 "xmltok.c"
      case 2: // $bb1
        var $14=$c; //@line 1262 "xmltok.c"
        var $15=($14) >> 8; //@line 1262 "xmltok.c"
        var $16=_namePages+$15; //@line 1262 "xmltok.c"
        var $17=HEAP[$16]; //@line 1262 "xmltok.c"
        var $18=($17); //@line 1262 "xmltok.c"
        var $19=($18) * 8;
        var $20=$c; //@line 1262 "xmltok.c"
        var $21=($20) & 255; //@line 1262 "xmltok.c"
        var $22=($21) >> 5; //@line 1262 "xmltok.c"
        var $23=($22) + ($19); //@line 1262 "xmltok.c"
        var $24=_namingBitmap+$23*4; //@line 1262 "xmltok.c"
        var $25=HEAP[$24]; //@line 1262 "xmltok.c"
        var $26=$c; //@line 1262 "xmltok.c"
        var $27=($26) & 31; //@line 1262 "xmltok.c"
        var $28=1 << ($27); //@line 1262 "xmltok.c"
        var $29=($28) & ($25); //@line 1262 "xmltok.c"
        $0=$29; //@line 1262 "xmltok.c"
        __label__ = 3; break; //@line 1262 "xmltok.c"
      case 3: // $bb2
        var $30=$0; //@line 1261 "xmltok.c"
        $retval=$30; //@line 1261 "xmltok.c"
        var $retval3=$retval; //@line 1261 "xmltok.c"
        ;
        return $retval3; //@line 1261 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _unknown_isNmstrt($enc, $p) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $0;
        var $uenc;
        var $c;
        $enc_addr=$enc;
        $p_addr=$p;
        var $1=$enc_addr; //@line 1268 "xmltok.c"
        var $2=$1; //@line 1268 "xmltok.c"
        $uenc=$2; //@line 1268 "xmltok.c"
        var $3=$uenc; //@line 1269 "xmltok.c"
        var $4=$3+364; //@line 1269 "xmltok.c"
        var $5=HEAP[$4]; //@line 1269 "xmltok.c"
        var $6=$uenc; //@line 1269 "xmltok.c"
        var $7=$6+368; //@line 1269 "xmltok.c"
        var $8=HEAP[$7]; //@line 1269 "xmltok.c"
        var $9=$p_addr; //@line 1269 "xmltok.c"
        var $10=FUNCTION_TABLE[$5]($8, $9); //@line 1269 "xmltok.c"
        $c=$10; //@line 1269 "xmltok.c"
        var $11=$c; //@line 1270 "xmltok.c"
        var $12=($11) & -65536; //@line 1270 "xmltok.c"
        var $13=($12)!=0; //@line 1270 "xmltok.c"
        if ($13) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1270 "xmltok.c"
      case 1: // $bb
        $0=0; //@line 1271 "xmltok.c"
        __label__ = 3; break; //@line 1271 "xmltok.c"
      case 2: // $bb1
        var $14=$c; //@line 1272 "xmltok.c"
        var $15=($14) >> 8; //@line 1272 "xmltok.c"
        var $16=_nmstrtPages+$15; //@line 1272 "xmltok.c"
        var $17=HEAP[$16]; //@line 1272 "xmltok.c"
        var $18=($17); //@line 1272 "xmltok.c"
        var $19=($18) * 8;
        var $20=$c; //@line 1272 "xmltok.c"
        var $21=($20) & 255; //@line 1272 "xmltok.c"
        var $22=($21) >> 5; //@line 1272 "xmltok.c"
        var $23=($22) + ($19); //@line 1272 "xmltok.c"
        var $24=_namingBitmap+$23*4; //@line 1272 "xmltok.c"
        var $25=HEAP[$24]; //@line 1272 "xmltok.c"
        var $26=$c; //@line 1272 "xmltok.c"
        var $27=($26) & 31; //@line 1272 "xmltok.c"
        var $28=1 << ($27); //@line 1272 "xmltok.c"
        var $29=($28) & ($25); //@line 1272 "xmltok.c"
        $0=$29; //@line 1272 "xmltok.c"
        __label__ = 3; break; //@line 1272 "xmltok.c"
      case 3: // $bb2
        var $30=$0; //@line 1271 "xmltok.c"
        $retval=$30; //@line 1271 "xmltok.c"
        var $retval3=$retval; //@line 1271 "xmltok.c"
        ;
        return $retval3; //@line 1271 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _unknown_isInvalid($enc, $p) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $result_addr_i;
        var $retval_i;
        var $0;
        var $enc_addr;
        var $p_addr;
        var $retval;
        var $iftmp_1249;
        var $1;
        var $uenc;
        var $c;
        $enc_addr=$enc;
        $p_addr=$p;
        var $2=$enc_addr; //@line 1278 "xmltok.c"
        var $3=$2; //@line 1278 "xmltok.c"
        $uenc=$3; //@line 1278 "xmltok.c"
        var $4=$uenc; //@line 1279 "xmltok.c"
        var $5=$4+364; //@line 1279 "xmltok.c"
        var $6=HEAP[$5]; //@line 1279 "xmltok.c"
        var $7=$uenc; //@line 1279 "xmltok.c"
        var $8=$7+368; //@line 1279 "xmltok.c"
        var $9=HEAP[$8]; //@line 1279 "xmltok.c"
        var $10=$p_addr; //@line 1279 "xmltok.c"
        var $11=FUNCTION_TABLE[$6]($9, $10); //@line 1279 "xmltok.c"
        $c=$11; //@line 1279 "xmltok.c"
        var $12=$c; //@line 1280 "xmltok.c"
        var $13=($12) & -65536; //@line 1280 "xmltok.c"
        var $14=($13)!=0; //@line 1280 "xmltok.c"
        if ($14) { __label__ = 9; break; } else { __label__ = 1; break; } //@line 1280 "xmltok.c"
      case 1: // $bb
        var $15=$c; //@line 1280 "xmltok.c"
        $result_addr_i=$15;
        var $16=$result_addr_i; //@line 1168 "xmltok.c"
        var $17=($16) >> 8; //@line 1168 "xmltok.c"
        if ($17 == 0) {
          __lastLabel__ = 1; __label__ = 3; break;
        }
        else if ($17 == 216) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 217) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 218) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 219) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 220) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 221) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 222) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 223) {
          __lastLabel__ = 1; __label__ = 2; break;
        }
        else if ($17 == 255) {
          __lastLabel__ = 1; __label__ = 5; break;
        }
        else {
        __lastLabel__ = 1; __label__ = 8; break;
        }
        
      case 2: // $bb_i
        $0=-1; //@line 1171 "xmltok.c"
        __label__ = 7; break; //@line 1171 "xmltok.c"
      case 3: // $bb1_i
        var $18=$result_addr_i; //@line 1173 "xmltok.c"
        var $19=_latin1_encoding+72+$18; //@line 1173 "xmltok.c"
        var $20=HEAP[$19]; //@line 1173 "xmltok.c"
        var $21=($20)==0; //@line 1173 "xmltok.c"
        if ($21) { __lastLabel__ = 3; __label__ = 4; break; } else { __lastLabel__ = 3; __label__ = 8; break; } //@line 1173 "xmltok.c"
      case 4: // $bb2_i
        $0=-1; //@line 1174 "xmltok.c"
        __label__ = 7; break; //@line 1174 "xmltok.c"
      case 5: // $bb4_i
        var $22=$result_addr_i; //@line 1177 "xmltok.c"
        var $23=($22)==65534; //@line 1177 "xmltok.c"
        var $24=$result_addr_i; //@line 1177 "xmltok.c"
        var $25=($24)==65535; //@line 1177 "xmltok.c"
        var $or_cond_i=($23) | ($25);
        if ($or_cond_i) { __lastLabel__ = 5; __label__ = 6; break; } else { __lastLabel__ = 5; __label__ = 8; break; } //@line 1177 "xmltok.c"
      case 6: // $bb6_i
        $0=-1; //@line 1178 "xmltok.c"
        __label__ = 7; break; //@line 1178 "xmltok.c"
      case 7: // $checkCharRefNumber_exit_thread
        $retval_i=-1; //@line 1171 "xmltok.c"
        __label__ = 9; break;
      case 8: // $checkCharRefNumber_exit
        var $26=__lastLabel__ == 1 ? $16 : (__lastLabel__ == 3 ? $18 : ($24));
        $0=$26; //@line 1181 "xmltok.c"
        $retval_i=$26; //@line 1171 "xmltok.c"
        var $27=($26) < 0; //@line 1280 "xmltok.c"
        if ($27) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1280 "xmltok.c"
      case 9: // $bb1
        $iftmp_1249=1; //@line 1280 "xmltok.c"
        __label__ = 11; break; //@line 1280 "xmltok.c"
      case 10: // $bb2
        $iftmp_1249=0; //@line 1280 "xmltok.c"
        __label__ = 11; break; //@line 1280 "xmltok.c"
      case 11: // $bb3
        var $28=$iftmp_1249; //@line 1280 "xmltok.c"
        $1=$28; //@line 1280 "xmltok.c"
        var $29=$1; //@line 1280 "xmltok.c"
        $retval=$29; //@line 1280 "xmltok.c"
        var $retval4=$retval; //@line 1280 "xmltok.c"
        ;
        return $retval4; //@line 1280 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _unknown_toUtf8($enc, $fromP, $fromLim, $toP, $toLim) {
    var __stackBase__  = STACKTOP; STACKTOP += 4; _memset(__stackBase__, 0, 4);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $uenc;
        var $buf=__stackBase__;
        var $utf8;
        var $n;
        var $c;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$enc_addr; //@line 1288 "xmltok.c"
        var $1=$0; //@line 1288 "xmltok.c"
        $uenc=$1; //@line 1288 "xmltok.c"
        var $buf3=$buf; //@line 1299 "xmltok.c"
        var $buf5=$buf; //@line 1302 "xmltok.c"
        __label__ = 1; break; //@line 1288 "xmltok.c"
      case 1: // $bb
        var $2=$fromP_addr; //@line 1293 "xmltok.c"
        var $3=HEAP[$2]; //@line 1293 "xmltok.c"
        var $4=$fromLim_addr; //@line 1293 "xmltok.c"
        var $5=($3)==($4); //@line 1293 "xmltok.c"
        if ($5) { __label__ = 8; break; } else { __label__ = 2; break; } //@line 1293 "xmltok.c"
      case 2: // $bb1
        var $6=$fromP_addr; //@line 1295 "xmltok.c"
        var $7=HEAP[$6]; //@line 1295 "xmltok.c"
        var $8=HEAP[$7]; //@line 1295 "xmltok.c"
        var $9=($8); //@line 1295 "xmltok.c"
        var $10=$uenc; //@line 1295 "xmltok.c"
        var $11=$10+884; //@line 1295 "xmltok.c"
        var $12=$11+$9*4; //@line 1295 "xmltok.c"
        var $13=$12; //@line 1295 "xmltok.c"
        $utf8=$13; //@line 1295 "xmltok.c"
        var $14=$utf8; //@line 1296 "xmltok.c"
        var $15=HEAP[$14]; //@line 1296 "xmltok.c"
        var $16=($15); //@line 1296 "xmltok.c"
        $n=$16; //@line 1296 "xmltok.c"
        var $17=$utf8; //@line 1296 "xmltok.c"
        var $18=$17+1; //@line 1296 "xmltok.c"
        $utf8=$18; //@line 1296 "xmltok.c"
        var $19=$n; //@line 1297 "xmltok.c"
        var $20=($19)==0; //@line 1297 "xmltok.c"
        if ($20) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1297 "xmltok.c"
      case 3: // $bb2
        var $21=$uenc; //@line 1298 "xmltok.c"
        var $22=$21+364; //@line 1298 "xmltok.c"
        var $23=HEAP[$22]; //@line 1298 "xmltok.c"
        var $24=$fromP_addr; //@line 1298 "xmltok.c"
        var $25=HEAP[$24]; //@line 1298 "xmltok.c"
        var $26=$uenc; //@line 1298 "xmltok.c"
        var $27=$26+368; //@line 1298 "xmltok.c"
        var $28=HEAP[$27]; //@line 1298 "xmltok.c"
        var $29=FUNCTION_TABLE[$23]($28, $25); //@line 1298 "xmltok.c"
        $c=$29; //@line 1298 "xmltok.c"
        var $30=$c; //@line 1299 "xmltok.c"
        var $31=_PyExpat_XmlUtf8Encode($30, $buf3); //@line 1299 "xmltok.c"
        $n=$31; //@line 1299 "xmltok.c"
        var $32=$toLim_addr; //@line 1300 "xmltok.c"
        var $33=($32); //@line 1300 "xmltok.c"
        var $34=$toP_addr; //@line 1300 "xmltok.c"
        var $35=HEAP[$34]; //@line 1300 "xmltok.c"
        var $36=($35); //@line 1300 "xmltok.c"
        var $37=($33) - ($36); //@line 1300 "xmltok.c"
        var $38=$n; //@line 1300 "xmltok.c"
        var $39=($37) < ($38); //@line 1300 "xmltok.c"
        if ($39) { __label__ = 8; break; } else { __label__ = 4; break; } //@line 1300 "xmltok.c"
      case 4: // $bb4
        $utf8=$buf5; //@line 1302 "xmltok.c"
        var $40=$fromP_addr; //@line 1303 "xmltok.c"
        var $41=HEAP[$40]; //@line 1303 "xmltok.c"
        var $42=$enc_addr; //@line 1303 "xmltok.c"
        var $43=$42; //@line 1303 "xmltok.c"
        var $44=$fromP_addr; //@line 1303 "xmltok.c"
        var $45=HEAP[$44]; //@line 1303 "xmltok.c"
        var $46=HEAP[$45]; //@line 1303 "xmltok.c"
        var $47=($46); //@line 1303 "xmltok.c"
        var $48=$43+72; //@line 1303 "xmltok.c"
        var $49=$48+$47; //@line 1303 "xmltok.c"
        var $50=HEAP[$49]; //@line 1303 "xmltok.c"
        var $51=($50); //@line 1303 "xmltok.c"
        var $52=($51) - 3; //@line 1303 "xmltok.c"
        var $53=$41+$52; //@line 1303 "xmltok.c"
        var $54=$fromP_addr; //@line 1303 "xmltok.c"
        HEAP[$54]=$53; //@line 1303 "xmltok.c"
        __label__ = 7; break; //@line 1303 "xmltok.c"
      case 5: // $bb6
        var $55=$toLim_addr; //@line 1307 "xmltok.c"
        var $56=($55); //@line 1307 "xmltok.c"
        var $57=$toP_addr; //@line 1307 "xmltok.c"
        var $58=HEAP[$57]; //@line 1307 "xmltok.c"
        var $59=($58); //@line 1307 "xmltok.c"
        var $60=($56) - ($59); //@line 1307 "xmltok.c"
        var $61=$n; //@line 1307 "xmltok.c"
        var $62=($60) < ($61); //@line 1307 "xmltok.c"
        if ($62) { __label__ = 8; break; } else { __label__ = 6; break; } //@line 1307 "xmltok.c"
      case 6: // $bb7
        var $63=$fromP_addr; //@line 1309 "xmltok.c"
        var $64=HEAP[$63]; //@line 1309 "xmltok.c"
        var $65=$64+1; //@line 1309 "xmltok.c"
        var $66=$fromP_addr; //@line 1309 "xmltok.c"
        HEAP[$66]=$65; //@line 1309 "xmltok.c"
        __label__ = 7; break; //@line 1309 "xmltok.c"
      case 7: // $bb8
        var $67=$toP_addr; //@line 1312 "xmltok.c"
        var $68=HEAP[$67]; //@line 1312 "xmltok.c"
        var $69=$utf8; //@line 1312 "xmltok.c"
        var $70=HEAP[$69]; //@line 1312 "xmltok.c"
        HEAP[$68]=$70; //@line 1312 "xmltok.c"
        var $71=$68+1; //@line 1312 "xmltok.c"
        var $72=$toP_addr; //@line 1312 "xmltok.c"
        HEAP[$72]=$71; //@line 1312 "xmltok.c"
        var $73=$utf8; //@line 1312 "xmltok.c"
        var $74=$73+1; //@line 1312 "xmltok.c"
        $utf8=$74; //@line 1312 "xmltok.c"
        var $75=$n; //@line 1313 "xmltok.c"
        var $76=($75) - 1; //@line 1313 "xmltok.c"
        $n=$76; //@line 1313 "xmltok.c"
        var $77=($76)!=0; //@line 1313 "xmltok.c"
        if ($77) { __label__ = 7; break; } else { __label__ = 1; break; } //@line 1313 "xmltok.c"
      case 8: // $return
        STACKTOP = __stackBase__;
        return; //@line 1315 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _unknown_toUtf16($enc, $fromP, $fromLim, $toP, $toLim) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $enc_addr;
        var $fromP_addr;
        var $fromLim_addr;
        var $toP_addr;
        var $toLim_addr;
        var $uenc;
        var $c;
        $enc_addr=$enc;
        $fromP_addr=$fromP;
        $fromLim_addr=$fromLim;
        $toP_addr=$toP;
        $toLim_addr=$toLim;
        var $0=$enc_addr; //@line 1322 "xmltok.c"
        var $1=$0; //@line 1322 "xmltok.c"
        $uenc=$1; //@line 1322 "xmltok.c"
        __label__ = 5; break; //@line 1322 "xmltok.c"
      case 1: // $bb
        var $2=$fromP_addr; //@line 1324 "xmltok.c"
        var $3=HEAP[$2]; //@line 1324 "xmltok.c"
        var $4=HEAP[$3]; //@line 1324 "xmltok.c"
        var $5=($4); //@line 1324 "xmltok.c"
        var $6=$uenc; //@line 1324 "xmltok.c"
        var $7=$6+372; //@line 1324 "xmltok.c"
        var $8=$7+$5*2; //@line 1324 "xmltok.c"
        var $9=HEAP[$8]; //@line 1324 "xmltok.c"
        $c=$9; //@line 1324 "xmltok.c"
        var $10=$c; //@line 1325 "xmltok.c"
        var $11=($10)==0; //@line 1325 "xmltok.c"
        if ($11) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 1325 "xmltok.c"
      case 2: // $bb1
        var $12=$uenc; //@line 1326 "xmltok.c"
        var $13=$12+364; //@line 1326 "xmltok.c"
        var $14=HEAP[$13]; //@line 1326 "xmltok.c"
        var $15=$fromP_addr; //@line 1326 "xmltok.c"
        var $16=HEAP[$15]; //@line 1326 "xmltok.c"
        var $17=$uenc; //@line 1326 "xmltok.c"
        var $18=$17+368; //@line 1326 "xmltok.c"
        var $19=HEAP[$18]; //@line 1326 "xmltok.c"
        var $20=FUNCTION_TABLE[$14]($19, $16); //@line 1326 "xmltok.c"
        var $21=((($20)) & 65535); //@line 1326 "xmltok.c"
        $c=$21; //@line 1326 "xmltok.c"
        var $22=$fromP_addr; //@line 1328 "xmltok.c"
        var $23=HEAP[$22]; //@line 1328 "xmltok.c"
        var $24=$enc_addr; //@line 1328 "xmltok.c"
        var $25=$24; //@line 1328 "xmltok.c"
        var $26=$fromP_addr; //@line 1328 "xmltok.c"
        var $27=HEAP[$26]; //@line 1328 "xmltok.c"
        var $28=HEAP[$27]; //@line 1328 "xmltok.c"
        var $29=($28); //@line 1328 "xmltok.c"
        var $30=$25+72; //@line 1328 "xmltok.c"
        var $31=$30+$29; //@line 1328 "xmltok.c"
        var $32=HEAP[$31]; //@line 1328 "xmltok.c"
        var $33=($32); //@line 1328 "xmltok.c"
        var $34=($33) - 3; //@line 1328 "xmltok.c"
        var $35=$23+$34; //@line 1328 "xmltok.c"
        var $36=$fromP_addr; //@line 1328 "xmltok.c"
        HEAP[$36]=$35; //@line 1328 "xmltok.c"
        __label__ = 4; break; //@line 1328 "xmltok.c"
      case 3: // $bb2
        var $37=$fromP_addr; //@line 1332 "xmltok.c"
        var $38=HEAP[$37]; //@line 1332 "xmltok.c"
        var $39=$38+1; //@line 1332 "xmltok.c"
        var $40=$fromP_addr; //@line 1332 "xmltok.c"
        HEAP[$40]=$39; //@line 1332 "xmltok.c"
        __label__ = 4; break; //@line 1332 "xmltok.c"
      case 4: // $bb3
        var $41=$toP_addr; //@line 1333 "xmltok.c"
        var $42=HEAP[$41]; //@line 1333 "xmltok.c"
        var $43=$c; //@line 1333 "xmltok.c"
        HEAP[$42]=$43; //@line 1333 "xmltok.c"
        var $44=$42+2; //@line 1333 "xmltok.c"
        var $45=$toP_addr; //@line 1333 "xmltok.c"
        HEAP[$45]=$44; //@line 1333 "xmltok.c"
        __label__ = 5; break; //@line 1333 "xmltok.c"
      case 5: // $bb4
        var $46=$fromP_addr; //@line 1323 "xmltok.c"
        var $47=HEAP[$46]; //@line 1323 "xmltok.c"
        var $48=$fromLim_addr; //@line 1323 "xmltok.c"
        var $49=($47)==($48); //@line 1323 "xmltok.c"
        if ($49) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 1323 "xmltok.c"
      case 6: // $bb5
        var $50=$toP_addr; //@line 1323 "xmltok.c"
        var $51=HEAP[$50]; //@line 1323 "xmltok.c"
        var $52=$toLim_addr; //@line 1323 "xmltok.c"
        var $53=($51)!=($52); //@line 1323 "xmltok.c"
        if ($53) { __label__ = 1; break; } else { __label__ = 7; break; } //@line 1323 "xmltok.c"
      case 7: // $return
        ;
        return; //@line 1335 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlInitUnknownEncoding($mem, $table, $convert, $userData) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $result_addr_i;
        var $retval_i;
        var $0;
        var $mem_addr;
        var $table_addr;
        var $convert_addr;
        var $userData_addr;
        var $retval;
        var $iftmp_1272;
        var $1;
        var $i;
        var $e;
        var $c;
        $mem_addr=$mem;
        $table_addr=$table;
        $convert_addr=$convert;
        $userData_addr=$userData;
        var $2=$mem_addr; //@line 1344 "xmltok.c"
        var $3=$2; //@line 1344 "xmltok.c"
        $e=$3; //@line 1344 "xmltok.c"
        $i=0; //@line 1345 "xmltok.c"
        __label__ = 1; break;
      case 1: // $bb
        var $4=$mem_addr; //@line 1346 "xmltok.c"
        var $5=$i; //@line 1346 "xmltok.c"
        var $6=_latin1_encoding+$5; //@line 1346 "xmltok.c"
        var $7=HEAP[$6]; //@line 1346 "xmltok.c"
        var $8=$i; //@line 1346 "xmltok.c"
        var $9=$4+$8; //@line 1346 "xmltok.c"
        HEAP[$9]=$7; //@line 1346 "xmltok.c"
        var $10=$i; //@line 1345 "xmltok.c"
        var $11=($10) + 1; //@line 1345 "xmltok.c"
        $i=$11; //@line 1345 "xmltok.c"
        var $12=($11) <= 363; //@line 1345 "xmltok.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1345 "xmltok.c"
      case 2: // $bb2
        $i=0; //@line 1347 "xmltok.c"
        __lastLabel__ = 2; __label__ = 8; break; //@line 1347 "xmltok.c"
      case 3: // $bb3
        var $13=$i; //@line 1348 "xmltok.c"
        var $14=_latin1_encoding+72+$13; //@line 1348 "xmltok.c"
        var $15=HEAP[$14]; //@line 1348 "xmltok.c"
        var $16=($15)!=28; //@line 1348 "xmltok.c"
        if ($16) { __label__ = 4; break; } else { __label__ = 7; break; } //@line 1348 "xmltok.c"
      case 4: // $bb4
        var $17=$i; //@line 1348 "xmltok.c"
        var $18=_latin1_encoding+72+$17; //@line 1348 "xmltok.c"
        var $19=HEAP[$18]; //@line 1348 "xmltok.c"
        var $20=($19)!=0; //@line 1348 "xmltok.c"
        if ($20) { __label__ = 5; break; } else { __label__ = 7; break; } //@line 1348 "xmltok.c"
      case 5: // $bb5
        var $21=$table_addr; //@line 1348 "xmltok.c"
        var $22=$i; //@line 1348 "xmltok.c"
        var $23=$21+4*$22; //@line 1348 "xmltok.c"
        var $24=HEAP[$23]; //@line 1348 "xmltok.c"
        var $25=$i; //@line 1348 "xmltok.c"
        var $26=($24)!=($25); //@line 1348 "xmltok.c"
        if ($26) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1348 "xmltok.c"
      case 6: // $bb6
        $1=0; //@line 1351 "xmltok.c"
        __label__ = 47; break; //@line 1351 "xmltok.c"
      case 7: // $bb7
        var $27=$i; //@line 1347 "xmltok.c"
        var $28=($27) + 1; //@line 1347 "xmltok.c"
        $i=$28; //@line 1347 "xmltok.c"
        __lastLabel__ = 7; __label__ = 8; break; //@line 1347 "xmltok.c"
      case 8: // $bb8
        var $29=__lastLabel__ == 7 ? $28 : (0);
        var $30=($29) <= 127; //@line 1347 "xmltok.c"
        if ($30) { __label__ = 3; break; } else { __label__ = 9; break; } //@line 1347 "xmltok.c"
      case 9: // $bb9
        $i=0; //@line 1352 "xmltok.c"
        __lastLabel__ = 9; __label__ = 43; break; //@line 1352 "xmltok.c"
      case 10: // $bb10
        var $31=$table_addr; //@line 1353 "xmltok.c"
        var $32=$i; //@line 1353 "xmltok.c"
        var $33=$31+4*$32; //@line 1353 "xmltok.c"
        var $34=HEAP[$33]; //@line 1353 "xmltok.c"
        $c=$34; //@line 1353 "xmltok.c"
        var $35=$c; //@line 1354 "xmltok.c"
        var $36=($35)==-1; //@line 1354 "xmltok.c"
        if ($36) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 1354 "xmltok.c"
      case 11: // $bb11
        var $37=$i; //@line 1355 "xmltok.c"
        var $38=$e; //@line 1355 "xmltok.c"
        var $39=$38; //@line 1355 "xmltok.c"
        var $40=$39+72; //@line 1355 "xmltok.c"
        var $41=$40+$37; //@line 1355 "xmltok.c"
        HEAP[$41]=1; //@line 1355 "xmltok.c"
        var $42=$i; //@line 1357 "xmltok.c"
        var $43=$e; //@line 1357 "xmltok.c"
        var $44=$43+372; //@line 1357 "xmltok.c"
        var $45=$44+$42*2; //@line 1357 "xmltok.c"
        HEAP[$45]=-1; //@line 1357 "xmltok.c"
        var $46=$i; //@line 1358 "xmltok.c"
        var $47=$e; //@line 1358 "xmltok.c"
        var $48=$47+884; //@line 1358 "xmltok.c"
        var $49=$48+$46*4; //@line 1358 "xmltok.c"
        var $50=$49; //@line 1358 "xmltok.c"
        HEAP[$50]=1; //@line 1358 "xmltok.c"
        var $51=$i; //@line 1359 "xmltok.c"
        var $52=$e; //@line 1359 "xmltok.c"
        var $53=$52+884; //@line 1359 "xmltok.c"
        var $54=$53+$51*4; //@line 1359 "xmltok.c"
        var $55=$54+1; //@line 1359 "xmltok.c"
        HEAP[$55]=0; //@line 1359 "xmltok.c"
        __label__ = 42; break; //@line 1359 "xmltok.c"
      case 12: // $bb12
        var $56=$c; //@line 1361 "xmltok.c"
        var $57=($56) < 0; //@line 1361 "xmltok.c"
        var $58=$c; //@line 1362 "xmltok.c"
        if ($57) { __label__ = 13; break; } else { __label__ = 16; break; } //@line 1361 "xmltok.c"
      case 13: // $bb13
        var $59=($58) < -4; //@line 1362 "xmltok.c"
        if ($59) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 1362 "xmltok.c"
      case 14: // $bb14
        $1=0; //@line 1363 "xmltok.c"
        __label__ = 47; break; //@line 1363 "xmltok.c"
      case 15: // $bb15
        var $60=$i; //@line 1364 "xmltok.c"
        var $61=$c; //@line 1364 "xmltok.c"
        var $62=((($61)) & 255); //@line 1364 "xmltok.c"
        var $63=3 - ($62); //@line 1364 "xmltok.c"
        var $64=$e; //@line 1364 "xmltok.c"
        var $65=$64; //@line 1364 "xmltok.c"
        var $66=$65+72; //@line 1364 "xmltok.c"
        var $67=$66+$60; //@line 1364 "xmltok.c"
        HEAP[$67]=$63; //@line 1364 "xmltok.c"
        var $68=$i; //@line 1365 "xmltok.c"
        var $69=$e; //@line 1365 "xmltok.c"
        var $70=$69+884; //@line 1365 "xmltok.c"
        var $71=$70+$68*4; //@line 1365 "xmltok.c"
        var $72=$71; //@line 1365 "xmltok.c"
        HEAP[$72]=0; //@line 1365 "xmltok.c"
        var $73=$i; //@line 1366 "xmltok.c"
        var $74=$e; //@line 1366 "xmltok.c"
        var $75=$74+372; //@line 1366 "xmltok.c"
        var $76=$75+$73*2; //@line 1366 "xmltok.c"
        HEAP[$76]=0; //@line 1366 "xmltok.c"
        __label__ = 42; break; //@line 1366 "xmltok.c"
      case 16: // $bb16
        var $77=($58) <= 127; //@line 1368 "xmltok.c"
        var $78=$c; //@line 1369 "xmltok.c"
        if ($77) { __label__ = 17; break; } else { __label__ = 25; break; } //@line 1368 "xmltok.c"
      case 17: // $bb17
        var $79=_latin1_encoding+72+$78; //@line 1369 "xmltok.c"
        var $80=HEAP[$79]; //@line 1369 "xmltok.c"
        var $81=($80)!=28; //@line 1369 "xmltok.c"
        if ($81) { __label__ = 18; break; } else { __label__ = 21; break; } //@line 1369 "xmltok.c"
      case 18: // $bb18
        var $82=$c; //@line 1369 "xmltok.c"
        var $83=_latin1_encoding+72+$82; //@line 1369 "xmltok.c"
        var $84=HEAP[$83]; //@line 1369 "xmltok.c"
        var $85=($84)!=0; //@line 1369 "xmltok.c"
        if ($85) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 1369 "xmltok.c"
      case 19: // $bb19
        var $86=$c; //@line 1369 "xmltok.c"
        var $87=$i; //@line 1369 "xmltok.c"
        var $88=($86)!=($87); //@line 1369 "xmltok.c"
        if ($88) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1369 "xmltok.c"
      case 20: // $bb20
        $1=0; //@line 1372 "xmltok.c"
        __label__ = 47; break; //@line 1372 "xmltok.c"
      case 21: // $bb21
        var $89=$i; //@line 1373 "xmltok.c"
        var $90=$c; //@line 1373 "xmltok.c"
        var $91=_latin1_encoding+72+$90; //@line 1373 "xmltok.c"
        var $92=HEAP[$91]; //@line 1373 "xmltok.c"
        var $93=$e; //@line 1373 "xmltok.c"
        var $94=$93; //@line 1373 "xmltok.c"
        var $95=$94+72; //@line 1373 "xmltok.c"
        var $96=$95+$89; //@line 1373 "xmltok.c"
        HEAP[$96]=$92; //@line 1373 "xmltok.c"
        var $97=$i; //@line 1374 "xmltok.c"
        var $98=$e; //@line 1374 "xmltok.c"
        var $99=$98+884; //@line 1374 "xmltok.c"
        var $100=$99+$97*4; //@line 1374 "xmltok.c"
        var $101=$100; //@line 1374 "xmltok.c"
        HEAP[$101]=1; //@line 1374 "xmltok.c"
        var $102=$i; //@line 1375 "xmltok.c"
        var $103=$c; //@line 1375 "xmltok.c"
        var $104=((($103)) & 255); //@line 1375 "xmltok.c"
        var $105=$e; //@line 1375 "xmltok.c"
        var $106=$105+884; //@line 1375 "xmltok.c"
        var $107=$106+$102*4; //@line 1375 "xmltok.c"
        var $108=$107+1; //@line 1375 "xmltok.c"
        HEAP[$108]=$104; //@line 1375 "xmltok.c"
        var $109=$i; //@line 1376 "xmltok.c"
        var $110=$c; //@line 1376 "xmltok.c"
        var $111=($110)!=0; //@line 1376 "xmltok.c"
        if ($111) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 1376 "xmltok.c"
      case 22: // $bb22
        var $112=$c; //@line 1376 "xmltok.c"
        var $113=((($112)) & 65535); //@line 1376 "xmltok.c"
        $iftmp_1272=$113; //@line 1376 "xmltok.c"
        __label__ = 24; break; //@line 1376 "xmltok.c"
      case 23: // $bb23
        $iftmp_1272=-1; //@line 1376 "xmltok.c"
        __label__ = 24; break; //@line 1376 "xmltok.c"
      case 24: // $bb24
        var $114=$e; //@line 1376 "xmltok.c"
        var $115=$114+372; //@line 1376 "xmltok.c"
        var $116=$115+$109*2; //@line 1376 "xmltok.c"
        var $117=$iftmp_1272; //@line 1376 "xmltok.c"
        HEAP[$116]=$117; //@line 1376 "xmltok.c"
        __label__ = 42; break; //@line 1376 "xmltok.c"
      case 25: // $bb25
        $result_addr_i=$78;
        var $118=$result_addr_i; //@line 1168 "xmltok.c"
        var $119=($118) >> 8; //@line 1168 "xmltok.c"
        if ($119 == 0) {
          __lastLabel__ = 25; __label__ = 27; break;
        }
        else if ($119 == 216) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 217) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 218) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 219) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 220) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 221) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 222) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 223) {
          __lastLabel__ = 25; __label__ = 26; break;
        }
        else if ($119 == 255) {
          __lastLabel__ = 25; __label__ = 29; break;
        }
        else {
        __lastLabel__ = 25; __label__ = 32; break;
        }
        
      case 26: // $bb_i
        $0=-1; //@line 1171 "xmltok.c"
        __label__ = 31; break; //@line 1171 "xmltok.c"
      case 27: // $bb1_i
        var $120=$result_addr_i; //@line 1173 "xmltok.c"
        var $121=_latin1_encoding+72+$120; //@line 1173 "xmltok.c"
        var $122=HEAP[$121]; //@line 1173 "xmltok.c"
        var $123=($122)==0; //@line 1173 "xmltok.c"
        if ($123) { __lastLabel__ = 27; __label__ = 28; break; } else { __lastLabel__ = 27; __label__ = 32; break; } //@line 1173 "xmltok.c"
      case 28: // $bb2_i
        $0=-1; //@line 1174 "xmltok.c"
        __label__ = 31; break; //@line 1174 "xmltok.c"
      case 29: // $bb4_i
        var $124=$result_addr_i; //@line 1177 "xmltok.c"
        var $125=($124)==65534; //@line 1177 "xmltok.c"
        var $126=$result_addr_i; //@line 1177 "xmltok.c"
        var $127=($126)==65535; //@line 1177 "xmltok.c"
        var $or_cond_i=($125) | ($127);
        if ($or_cond_i) { __lastLabel__ = 29; __label__ = 30; break; } else { __lastLabel__ = 29; __label__ = 32; break; } //@line 1177 "xmltok.c"
      case 30: // $bb6_i
        $0=-1; //@line 1178 "xmltok.c"
        __label__ = 31; break; //@line 1178 "xmltok.c"
      case 31: // $checkCharRefNumber_exit_thread
        $retval_i=-1; //@line 1171 "xmltok.c"
        __label__ = 33; break;
      case 32: // $checkCharRefNumber_exit
        var $128=__lastLabel__ == 25 ? $118 : (__lastLabel__ == 27 ? $120 : ($126));
        $0=$128; //@line 1181 "xmltok.c"
        $retval_i=$128; //@line 1171 "xmltok.c"
        var $129=($128) < 0; //@line 1378 "xmltok.c"
        if ($129) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 1378 "xmltok.c"
      case 33: // $bb26
        var $130=$i; //@line 1379 "xmltok.c"
        var $131=$e; //@line 1379 "xmltok.c"
        var $132=$131; //@line 1379 "xmltok.c"
        var $133=$132+72; //@line 1379 "xmltok.c"
        var $134=$133+$130; //@line 1379 "xmltok.c"
        HEAP[$134]=0; //@line 1379 "xmltok.c"
        var $135=$i; //@line 1381 "xmltok.c"
        var $136=$e; //@line 1381 "xmltok.c"
        var $137=$136+372; //@line 1381 "xmltok.c"
        var $138=$137+$135*2; //@line 1381 "xmltok.c"
        HEAP[$138]=-1; //@line 1381 "xmltok.c"
        var $139=$i; //@line 1382 "xmltok.c"
        var $140=$e; //@line 1382 "xmltok.c"
        var $141=$140+884; //@line 1382 "xmltok.c"
        var $142=$141+$139*4; //@line 1382 "xmltok.c"
        var $143=$142; //@line 1382 "xmltok.c"
        HEAP[$143]=1; //@line 1382 "xmltok.c"
        var $144=$i; //@line 1383 "xmltok.c"
        var $145=$e; //@line 1383 "xmltok.c"
        var $146=$145+884; //@line 1383 "xmltok.c"
        var $147=$146+$144*4; //@line 1383 "xmltok.c"
        var $148=$147+1; //@line 1383 "xmltok.c"
        HEAP[$148]=0; //@line 1383 "xmltok.c"
        __label__ = 42; break; //@line 1383 "xmltok.c"
      case 34: // $bb27
        var $149=$c; //@line 1386 "xmltok.c"
        var $150=($149) > 65535; //@line 1386 "xmltok.c"
        if ($150) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 1386 "xmltok.c"
      case 35: // $bb28
        $1=0; //@line 1387 "xmltok.c"
        __label__ = 47; break; //@line 1387 "xmltok.c"
      case 36: // $bb29
        var $151=$c; //@line 1388 "xmltok.c"
        var $152=($151) >> 8; //@line 1388 "xmltok.c"
        var $153=_nmstrtPages+$152; //@line 1388 "xmltok.c"
        var $154=HEAP[$153]; //@line 1388 "xmltok.c"
        var $155=($154); //@line 1388 "xmltok.c"
        var $156=($155) * 8;
        var $157=$c; //@line 1388 "xmltok.c"
        var $158=($157) & 255; //@line 1388 "xmltok.c"
        var $159=($158) >> 5; //@line 1388 "xmltok.c"
        var $160=($159) + ($156); //@line 1388 "xmltok.c"
        var $161=_namingBitmap+$160*4; //@line 1388 "xmltok.c"
        var $162=HEAP[$161]; //@line 1388 "xmltok.c"
        var $163=$c; //@line 1388 "xmltok.c"
        var $164=($163) & 31; //@line 1388 "xmltok.c"
        var $165=1 << ($164); //@line 1388 "xmltok.c"
        var $166=($165) & ($162); //@line 1388 "xmltok.c"
        var $167=($166)!=0; //@line 1388 "xmltok.c"
        if ($167) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 1388 "xmltok.c"
      case 37: // $bb30
        var $168=$i; //@line 1389 "xmltok.c"
        var $169=$e; //@line 1389 "xmltok.c"
        var $170=$169; //@line 1389 "xmltok.c"
        var $171=$170+72; //@line 1389 "xmltok.c"
        var $172=$171+$168; //@line 1389 "xmltok.c"
        HEAP[$172]=22; //@line 1389 "xmltok.c"
        __label__ = 41; break; //@line 1389 "xmltok.c"
      case 38: // $bb31
        var $173=$c; //@line 1390 "xmltok.c"
        var $174=($173) >> 8; //@line 1390 "xmltok.c"
        var $175=_namePages+$174; //@line 1390 "xmltok.c"
        var $176=HEAP[$175]; //@line 1390 "xmltok.c"
        var $177=($176); //@line 1390 "xmltok.c"
        var $178=($177) * 8;
        var $179=$c; //@line 1390 "xmltok.c"
        var $180=($179) & 255; //@line 1390 "xmltok.c"
        var $181=($180) >> 5; //@line 1390 "xmltok.c"
        var $182=($181) + ($178); //@line 1390 "xmltok.c"
        var $183=_namingBitmap+$182*4; //@line 1390 "xmltok.c"
        var $184=HEAP[$183]; //@line 1390 "xmltok.c"
        var $185=$c; //@line 1390 "xmltok.c"
        var $186=($185) & 31; //@line 1390 "xmltok.c"
        var $187=1 << ($186); //@line 1390 "xmltok.c"
        var $188=($187) & ($184); //@line 1390 "xmltok.c"
        var $189=($188)!=0; //@line 1390 "xmltok.c"
        var $190=$i; //@line 1391 "xmltok.c"
        var $191=$e; //@line 1391 "xmltok.c"
        var $192=$191; //@line 1391 "xmltok.c"
        var $193=$192+72; //@line 1391 "xmltok.c"
        var $194=$193+$190; //@line 1391 "xmltok.c"
        if ($189) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 1390 "xmltok.c"
      case 39: // $bb32
        HEAP[$194]=26; //@line 1391 "xmltok.c"
        __label__ = 41; break; //@line 1391 "xmltok.c"
      case 40: // $bb33
        HEAP[$194]=28; //@line 1393 "xmltok.c"
        __label__ = 41; break; //@line 1393 "xmltok.c"
      case 41: // $bb34
        var $195=$i; //@line 1394 "xmltok.c"
        var $196=$i; //@line 1394 "xmltok.c"
        var $197=$e; //@line 1394 "xmltok.c"
        var $198=$197+884; //@line 1394 "xmltok.c"
        var $199=$198+$196*4; //@line 1394 "xmltok.c"
        var $200=$199; //@line 1394 "xmltok.c"
        var $201=$200+1; //@line 1394 "xmltok.c"
        var $202=$c; //@line 1394 "xmltok.c"
        var $203=_PyExpat_XmlUtf8Encode($202, $201); //@line 1394 "xmltok.c"
        var $204=((($203)) & 255); //@line 1394 "xmltok.c"
        var $205=$e; //@line 1394 "xmltok.c"
        var $206=$205+884; //@line 1394 "xmltok.c"
        var $207=$206+$195*4; //@line 1394 "xmltok.c"
        var $208=$207; //@line 1394 "xmltok.c"
        HEAP[$208]=$204; //@line 1394 "xmltok.c"
        var $209=$i; //@line 1395 "xmltok.c"
        var $210=$c; //@line 1395 "xmltok.c"
        var $211=((($210)) & 65535); //@line 1395 "xmltok.c"
        var $212=$e; //@line 1395 "xmltok.c"
        var $213=$212+372; //@line 1395 "xmltok.c"
        var $214=$213+$209*2; //@line 1395 "xmltok.c"
        HEAP[$214]=$211; //@line 1395 "xmltok.c"
        __label__ = 42; break; //@line 1395 "xmltok.c"
      case 42: // $bb35
        var $215=$i; //@line 1352 "xmltok.c"
        var $216=($215) + 1; //@line 1352 "xmltok.c"
        $i=$216; //@line 1352 "xmltok.c"
        __lastLabel__ = 42; __label__ = 43; break; //@line 1352 "xmltok.c"
      case 43: // $bb36
        var $217=__lastLabel__ == 42 ? $216 : (0);
        var $218=($217) <= 255; //@line 1352 "xmltok.c"
        if ($218) { __label__ = 10; break; } else { __label__ = 44; break; } //@line 1352 "xmltok.c"
      case 44: // $bb37
        var $219=$e; //@line 1398 "xmltok.c"
        var $220=$219+368; //@line 1398 "xmltok.c"
        var $221=$userData_addr; //@line 1398 "xmltok.c"
        HEAP[$220]=$221; //@line 1398 "xmltok.c"
        var $222=$e; //@line 1399 "xmltok.c"
        var $223=$222+364; //@line 1399 "xmltok.c"
        var $224=$convert_addr; //@line 1399 "xmltok.c"
        HEAP[$223]=$224; //@line 1399 "xmltok.c"
        var $225=$convert_addr; //@line 1400 "xmltok.c"
        var $226=($225)!=0; //@line 1400 "xmltok.c"
        if ($226) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 1400 "xmltok.c"
      case 45: // $bb38
        var $227=$e; //@line 1401 "xmltok.c"
        var $228=$227; //@line 1401 "xmltok.c"
        var $229=$228+328; //@line 1401 "xmltok.c"
        HEAP[$229]=(FUNCTION_TABLE_OFFSET + 162); //@line 1401 "xmltok.c"
        var $230=$e; //@line 1402 "xmltok.c"
        var $231=$230; //@line 1402 "xmltok.c"
        var $232=$231+332; //@line 1402 "xmltok.c"
        HEAP[$232]=(FUNCTION_TABLE_OFFSET + 162); //@line 1402 "xmltok.c"
        var $233=$e; //@line 1403 "xmltok.c"
        var $234=$233; //@line 1403 "xmltok.c"
        var $235=$234+336; //@line 1403 "xmltok.c"
        HEAP[$235]=(FUNCTION_TABLE_OFFSET + 162); //@line 1403 "xmltok.c"
        var $236=$e; //@line 1404 "xmltok.c"
        var $237=$236; //@line 1404 "xmltok.c"
        var $238=$237+340; //@line 1404 "xmltok.c"
        HEAP[$238]=(FUNCTION_TABLE_OFFSET + 164); //@line 1404 "xmltok.c"
        var $239=$e; //@line 1405 "xmltok.c"
        var $240=$239; //@line 1405 "xmltok.c"
        var $241=$240+344; //@line 1405 "xmltok.c"
        HEAP[$241]=(FUNCTION_TABLE_OFFSET + 164); //@line 1405 "xmltok.c"
        var $242=$e; //@line 1406 "xmltok.c"
        var $243=$242; //@line 1406 "xmltok.c"
        var $244=$243+348; //@line 1406 "xmltok.c"
        HEAP[$244]=(FUNCTION_TABLE_OFFSET + 164); //@line 1406 "xmltok.c"
        var $245=$e; //@line 1407 "xmltok.c"
        var $246=$245; //@line 1407 "xmltok.c"
        var $247=$246+352; //@line 1407 "xmltok.c"
        HEAP[$247]=(FUNCTION_TABLE_OFFSET + 166); //@line 1407 "xmltok.c"
        var $248=$e; //@line 1408 "xmltok.c"
        var $249=$248; //@line 1408 "xmltok.c"
        var $250=$249+356; //@line 1408 "xmltok.c"
        HEAP[$250]=(FUNCTION_TABLE_OFFSET + 166); //@line 1408 "xmltok.c"
        var $251=$e; //@line 1409 "xmltok.c"
        var $252=$251; //@line 1409 "xmltok.c"
        var $253=$252+360; //@line 1409 "xmltok.c"
        HEAP[$253]=(FUNCTION_TABLE_OFFSET + 166); //@line 1409 "xmltok.c"
        __label__ = 46; break; //@line 1409 "xmltok.c"
      case 46: // $bb39
        var $254=$e; //@line 1411 "xmltok.c"
        var $255=$254; //@line 1411 "xmltok.c"
        var $256=$255; //@line 1411 "xmltok.c"
        var $257=$256+56; //@line 1411 "xmltok.c"
        HEAP[$257]=(FUNCTION_TABLE_OFFSET + 168); //@line 1411 "xmltok.c"
        var $258=$e; //@line 1412 "xmltok.c"
        var $259=$258; //@line 1412 "xmltok.c"
        var $260=$259; //@line 1412 "xmltok.c"
        var $261=$260+60; //@line 1412 "xmltok.c"
        HEAP[$261]=(FUNCTION_TABLE_OFFSET + 170); //@line 1412 "xmltok.c"
        var $262=$e; //@line 1413 "xmltok.c"
        var $263=$262; //@line 1413 "xmltok.c"
        var $264=$263; //@line 1413 "xmltok.c"
        $1=$264; //@line 1413 "xmltok.c"
        __label__ = 47; break; //@line 1413 "xmltok.c"
      case 47: // $bb40
        var $265=$1; //@line 1351 "xmltok.c"
        $retval=$265; //@line 1351 "xmltok.c"
        var $retval41=$retval; //@line 1351 "xmltok.c"
        ;
        return $retval41; //@line 1351 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _initScan($enc, $state, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $encodingTable_addr;
        var $enc_addr;
        var $state_addr;
        var $ptr_addr;
        var $end_addr;
        var $nextTokPtr_addr;
        var $retval;
        var $0;
        var $encPtr;
        var $e;
        $encodingTable_addr=_encodings;
        $enc_addr=$enc;
        $state_addr=$state;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $nextTokPtr_addr=$nextTokPtr;
        var $1=$ptr_addr; //@line 1498 "xmltok.c"
        var $2=$end_addr; //@line 1498 "xmltok.c"
        var $3=($1)==($2); //@line 1498 "xmltok.c"
        if ($3) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1498 "xmltok.c"
      case 1: // $bb
        $0=-4; //@line 1499 "xmltok.c"
        __label__ = 36; break; //@line 1499 "xmltok.c"
      case 2: // $bb1
        var $4=$enc_addr; //@line 1500 "xmltok.c"
        var $5=$4+72; //@line 1500 "xmltok.c"
        var $6=HEAP[$5]; //@line 1500 "xmltok.c"
        $encPtr=$6; //@line 1500 "xmltok.c"
        var $7=$ptr_addr; //@line 1501 "xmltok.c"
        var $8=$7+1; //@line 1501 "xmltok.c"
        var $9=$end_addr; //@line 1501 "xmltok.c"
        var $10=($8)==($9); //@line 1501 "xmltok.c"
        if ($10) { __label__ = 3; break; } else { __label__ = 11; break; } //@line 1501 "xmltok.c"
      case 3: // $bb2
        var $11=$state_addr; //@line 1505 "xmltok.c"
        var $12=($11)!=1; //@line 1505 "xmltok.c"
        if ($12) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 1505 "xmltok.c"
      case 4: // $bb3
        $0=-1; //@line 1506 "xmltok.c"
        __label__ = 36; break; //@line 1506 "xmltok.c"
      case 5: // $bb4
        var $13=$enc_addr; //@line 1510 "xmltok.c"
        var $14=$13; //@line 1510 "xmltok.c"
        var $15=$14+69; //@line 1510 "xmltok.c"
        var $16=HEAP[$15]; //@line 1510 "xmltok.c"
        var $17=($16); //@line 1510 "xmltok.c"
        var $_off=($17) + -3;
        var $switch=($_off) < 3;
        if ($switch) { __label__ = 6; break; } else { __label__ = 7; break; }
      case 6: // $bb5
        $0=-1; //@line 1514 "xmltok.c"
        __label__ = 36; break; //@line 1514 "xmltok.c"
      case 7: // $bb6
        var $18=$ptr_addr; //@line 1516 "xmltok.c"
        var $19=HEAP[$18]; //@line 1516 "xmltok.c"
        var $20=($19); //@line 1516 "xmltok.c"
        if ($20 == 0) {
          __label__ = 10; break;
        }
        else if ($20 == 60) {
          __label__ = 10; break;
        }
        else if ($20 == 239) {
          __label__ = 8; break;
        }
        else if ($20 == 254) {
          __label__ = 8; break;
        }
        else if ($20 == 255) {
          __label__ = 8; break;
        }
        else {
        __label__ = 35; break;
        }
        
      case 8: // $bb7
        var $21=$enc_addr; //@line 1520 "xmltok.c"
        var $22=$21; //@line 1520 "xmltok.c"
        var $23=$22+69; //@line 1520 "xmltok.c"
        var $24=HEAP[$23]; //@line 1520 "xmltok.c"
        var $25=($24)==0; //@line 1520 "xmltok.c"
        if ($25) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 1520 "xmltok.c"
      case 9: // $bb8
        var $26=$state_addr; //@line 1520 "xmltok.c"
        var $27=($26)==1; //@line 1520 "xmltok.c"
        if ($27) { __label__ = 35; break; } else { __label__ = 10; break; } //@line 1520 "xmltok.c"
      case 10: // $bb9
        $0=-1; //@line 1526 "xmltok.c"
        __label__ = 36; break; //@line 1526 "xmltok.c"
      case 11: // $bb11
        var $28=$ptr_addr; //@line 1530 "xmltok.c"
        var $29=$28; //@line 1530 "xmltok.c"
        var $30=HEAP[$29]; //@line 1530 "xmltok.c"
        var $31=($30); //@line 1530 "xmltok.c"
        var $32=($31) << 8; //@line 1530 "xmltok.c"
        var $33=$ptr_addr; //@line 1530 "xmltok.c"
        var $34=$33+1; //@line 1530 "xmltok.c"
        var $35=HEAP[$34]; //@line 1530 "xmltok.c"
        var $36=($35); //@line 1530 "xmltok.c"
        var $37=($36) | ($32); //@line 1530 "xmltok.c"
        if ($37 == 15360) {
          __label__ = 15; break;
        }
        else if ($37 == 61371) {
          __label__ = 22; break;
        }
        else if ($37 == 65279) {
          __label__ = 12; break;
        }
        else if ($37 == 65534) {
          __label__ = 19; break;
        }
        else {
        __label__ = 28; break;
        }
        
      case 12: // $bb12
        var $38=$enc_addr; //@line 1532 "xmltok.c"
        var $39=$38; //@line 1532 "xmltok.c"
        var $40=$39+69; //@line 1532 "xmltok.c"
        var $41=HEAP[$40]; //@line 1532 "xmltok.c"
        var $42=($41)==0; //@line 1532 "xmltok.c"
        if ($42) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1532 "xmltok.c"
      case 13: // $bb13
        var $43=$state_addr; //@line 1532 "xmltok.c"
        var $44=($43)==1; //@line 1532 "xmltok.c"
        if ($44) { __label__ = 35; break; } else { __label__ = 14; break; } //@line 1532 "xmltok.c"
      case 14: // $bb14
        var $45=$ptr_addr; //@line 1535 "xmltok.c"
        var $46=$45+2; //@line 1535 "xmltok.c"
        var $47=$nextTokPtr_addr; //@line 1535 "xmltok.c"
        HEAP[$47]=$46; //@line 1535 "xmltok.c"
        var $48=$encodingTable_addr; //@line 1536 "xmltok.c"
        var $49=$48+16; //@line 1536 "xmltok.c"
        var $50=HEAP[$49]; //@line 1536 "xmltok.c"
        var $51=$encPtr; //@line 1536 "xmltok.c"
        HEAP[$51]=$50; //@line 1536 "xmltok.c"
        $0=14; //@line 1537 "xmltok.c"
        __label__ = 36; break; //@line 1537 "xmltok.c"
      case 15: // $bb15
        var $52=$enc_addr; //@line 1540 "xmltok.c"
        var $53=$52; //@line 1540 "xmltok.c"
        var $54=$53+69; //@line 1540 "xmltok.c"
        var $55=HEAP[$54]; //@line 1540 "xmltok.c"
        var $56=($55)==4; //@line 1540 "xmltok.c"
        if ($56) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 1540 "xmltok.c"
      case 16: // $bb16
        var $57=$enc_addr; //@line 1540 "xmltok.c"
        var $58=$57; //@line 1540 "xmltok.c"
        var $59=$58+69; //@line 1540 "xmltok.c"
        var $60=HEAP[$59]; //@line 1540 "xmltok.c"
        var $61=($60)==3; //@line 1540 "xmltok.c"
        if ($61) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 1540 "xmltok.c"
      case 17: // $bb17
        var $62=$state_addr; //@line 1540 "xmltok.c"
        var $63=($62)==1; //@line 1540 "xmltok.c"
        if ($63) { __label__ = 35; break; } else { __label__ = 18; break; } //@line 1540 "xmltok.c"
      case 18: // $bb18
        var $64=$encodingTable_addr; //@line 1544 "xmltok.c"
        var $65=$64+20; //@line 1544 "xmltok.c"
        var $66=HEAP[$65]; //@line 1544 "xmltok.c"
        var $67=$encPtr; //@line 1544 "xmltok.c"
        HEAP[$67]=$66; //@line 1544 "xmltok.c"
        var $68=$encPtr; //@line 1545 "xmltok.c"
        var $69=HEAP[$68]; //@line 1545 "xmltok.c"
        var $70=$state_addr; //@line 1545 "xmltok.c"
        var $71=$69; //@line 1545 "xmltok.c"
        var $72=$71+$70*4; //@line 1545 "xmltok.c"
        var $73=HEAP[$72]; //@line 1545 "xmltok.c"
        var $74=$encPtr; //@line 1545 "xmltok.c"
        var $75=HEAP[$74]; //@line 1545 "xmltok.c"
        var $76=$ptr_addr; //@line 1545 "xmltok.c"
        var $77=$end_addr; //@line 1545 "xmltok.c"
        var $78=$nextTokPtr_addr; //@line 1545 "xmltok.c"
        var $79=FUNCTION_TABLE[$73]($75, $76, $77, $78); //@line 1545 "xmltok.c"
        $0=$79; //@line 1545 "xmltok.c"
        __label__ = 36; break; //@line 1545 "xmltok.c"
      case 19: // $bb19
        var $80=$enc_addr; //@line 1547 "xmltok.c"
        var $81=$80; //@line 1547 "xmltok.c"
        var $82=$81+69; //@line 1547 "xmltok.c"
        var $83=HEAP[$82]; //@line 1547 "xmltok.c"
        var $84=($83)==0; //@line 1547 "xmltok.c"
        if ($84) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 1547 "xmltok.c"
      case 20: // $bb20
        var $85=$state_addr; //@line 1547 "xmltok.c"
        var $86=($85)==1; //@line 1547 "xmltok.c"
        if ($86) { __label__ = 35; break; } else { __label__ = 21; break; } //@line 1547 "xmltok.c"
      case 21: // $bb21
        var $87=$ptr_addr; //@line 1550 "xmltok.c"
        var $88=$87+2; //@line 1550 "xmltok.c"
        var $89=$nextTokPtr_addr; //@line 1550 "xmltok.c"
        HEAP[$89]=$88; //@line 1550 "xmltok.c"
        var $90=$encodingTable_addr; //@line 1551 "xmltok.c"
        var $91=$90+20; //@line 1551 "xmltok.c"
        var $92=HEAP[$91]; //@line 1551 "xmltok.c"
        var $93=$encPtr; //@line 1551 "xmltok.c"
        HEAP[$93]=$92; //@line 1551 "xmltok.c"
        $0=14; //@line 1552 "xmltok.c"
        __label__ = 36; break; //@line 1552 "xmltok.c"
      case 22: // $bb22
        var $94=$state_addr; //@line 1561 "xmltok.c"
        var $95=($94)==1; //@line 1561 "xmltok.c"
        if ($95) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1561 "xmltok.c"
      case 23: // $bb23
        var $96=$enc_addr; //@line 1562 "xmltok.c"
        var $97=$96; //@line 1562 "xmltok.c"
        var $98=$97+69; //@line 1562 "xmltok.c"
        var $99=HEAP[$98]; //@line 1562 "xmltok.c"
        var $100=($99); //@line 1562 "xmltok.c"
        $e=$100; //@line 1562 "xmltok.c"
        var $101=$e; //@line 1563 "xmltok.c"
        var $102=($101)==0; //@line 1563 "xmltok.c"
        var $103=$e; //@line 1563 "xmltok.c"
        var $104=($103)==4; //@line 1563 "xmltok.c"
        var $or_cond=($102) | ($104);
        var $105=$e; //@line 1563 "xmltok.c"
        var $106=($105)==5; //@line 1563 "xmltok.c"
        var $or_cond3=($or_cond) | ($106);
        var $107=$e; //@line 1563 "xmltok.c"
        var $108=($107)==3; //@line 1563 "xmltok.c"
        var $or_cond5=($or_cond3) | ($108);
        if ($or_cond5) { __label__ = 35; break; } else { __label__ = 24; break; } //@line 1563 "xmltok.c"
      case 24: // $bb27
        var $109=$ptr_addr; //@line 1567 "xmltok.c"
        var $110=$109+2; //@line 1567 "xmltok.c"
        var $111=$end_addr; //@line 1567 "xmltok.c"
        var $112=($110)==($111); //@line 1567 "xmltok.c"
        if ($112) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1567 "xmltok.c"
      case 25: // $bb28
        $0=-1; //@line 1568 "xmltok.c"
        __label__ = 36; break; //@line 1568 "xmltok.c"
      case 26: // $bb29
        var $113=$ptr_addr; //@line 1569 "xmltok.c"
        var $114=$113+2; //@line 1569 "xmltok.c"
        var $115=HEAP[$114]; //@line 1569 "xmltok.c"
        var $116=($115)==-65; //@line 1569 "xmltok.c"
        if ($116) { __label__ = 27; break; } else { __label__ = 35; break; } //@line 1569 "xmltok.c"
      case 27: // $bb30
        var $117=$ptr_addr; //@line 1570 "xmltok.c"
        var $118=$117+3; //@line 1570 "xmltok.c"
        var $119=$nextTokPtr_addr; //@line 1570 "xmltok.c"
        HEAP[$119]=$118; //@line 1570 "xmltok.c"
        var $120=$encodingTable_addr; //@line 1571 "xmltok.c"
        var $121=$120+8; //@line 1571 "xmltok.c"
        var $122=HEAP[$121]; //@line 1571 "xmltok.c"
        var $123=$encPtr; //@line 1571 "xmltok.c"
        HEAP[$123]=$122; //@line 1571 "xmltok.c"
        $0=14; //@line 1572 "xmltok.c"
        __label__ = 36; break; //@line 1572 "xmltok.c"
      case 28: // $bb32
        var $124=$ptr_addr; //@line 1576 "xmltok.c"
        var $125=$124; //@line 1576 "xmltok.c"
        var $126=HEAP[$125]; //@line 1576 "xmltok.c"
        var $127=($126)==0; //@line 1576 "xmltok.c"
        if ($127) { __label__ = 29; break; } else { __label__ = 32; break; } //@line 1576 "xmltok.c"
      case 29: // $bb33
        var $128=$state_addr; //@line 1583 "xmltok.c"
        var $129=($128)==1; //@line 1583 "xmltok.c"
        if ($129) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 1583 "xmltok.c"
      case 30: // $bb34
        var $130=$enc_addr; //@line 1583 "xmltok.c"
        var $131=$130; //@line 1583 "xmltok.c"
        var $132=$131+69; //@line 1583 "xmltok.c"
        var $133=HEAP[$132]; //@line 1583 "xmltok.c"
        var $134=($133)==5; //@line 1583 "xmltok.c"
        if ($134) { __label__ = 35; break; } else { __label__ = 31; break; } //@line 1583 "xmltok.c"
      case 31: // $bb35
        var $135=$encodingTable_addr; //@line 1585 "xmltok.c"
        var $136=$135+16; //@line 1585 "xmltok.c"
        var $137=HEAP[$136]; //@line 1585 "xmltok.c"
        var $138=$encPtr; //@line 1585 "xmltok.c"
        HEAP[$138]=$137; //@line 1585 "xmltok.c"
        var $139=$encPtr; //@line 1586 "xmltok.c"
        var $140=HEAP[$139]; //@line 1586 "xmltok.c"
        var $141=$state_addr; //@line 1586 "xmltok.c"
        var $142=$140; //@line 1586 "xmltok.c"
        var $143=$142+$141*4; //@line 1586 "xmltok.c"
        var $144=HEAP[$143]; //@line 1586 "xmltok.c"
        var $145=$encPtr; //@line 1586 "xmltok.c"
        var $146=HEAP[$145]; //@line 1586 "xmltok.c"
        var $147=$ptr_addr; //@line 1586 "xmltok.c"
        var $148=$end_addr; //@line 1586 "xmltok.c"
        var $149=$nextTokPtr_addr; //@line 1586 "xmltok.c"
        var $150=FUNCTION_TABLE[$144]($146, $147, $148, $149); //@line 1586 "xmltok.c"
        $0=$150; //@line 1586 "xmltok.c"
        __label__ = 36; break; //@line 1586 "xmltok.c"
      case 32: // $bb36
        var $151=$ptr_addr; //@line 1588 "xmltok.c"
        var $152=$151+1; //@line 1588 "xmltok.c"
        var $153=HEAP[$152]; //@line 1588 "xmltok.c"
        var $154=($153)==0; //@line 1588 "xmltok.c"
        if ($154) { __label__ = 33; break; } else { __label__ = 35; break; } //@line 1588 "xmltok.c"
      case 33: // $bb37
        var $155=$state_addr; //@line 1598 "xmltok.c"
        var $156=($155)==1; //@line 1598 "xmltok.c"
        if ($156) { __label__ = 35; break; } else { __label__ = 34; break; } //@line 1598 "xmltok.c"
      case 34: // $bb38
        var $157=$encodingTable_addr; //@line 1600 "xmltok.c"
        var $158=$157+20; //@line 1600 "xmltok.c"
        var $159=HEAP[$158]; //@line 1600 "xmltok.c"
        var $160=$encPtr; //@line 1600 "xmltok.c"
        HEAP[$160]=$159; //@line 1600 "xmltok.c"
        var $161=$encPtr; //@line 1601 "xmltok.c"
        var $162=HEAP[$161]; //@line 1601 "xmltok.c"
        var $163=$state_addr; //@line 1601 "xmltok.c"
        var $164=$162; //@line 1601 "xmltok.c"
        var $165=$164+$163*4; //@line 1601 "xmltok.c"
        var $166=HEAP[$165]; //@line 1601 "xmltok.c"
        var $167=$encPtr; //@line 1601 "xmltok.c"
        var $168=HEAP[$167]; //@line 1601 "xmltok.c"
        var $169=$ptr_addr; //@line 1601 "xmltok.c"
        var $170=$end_addr; //@line 1601 "xmltok.c"
        var $171=$nextTokPtr_addr; //@line 1601 "xmltok.c"
        var $172=FUNCTION_TABLE[$166]($168, $169, $170, $171); //@line 1601 "xmltok.c"
        $0=$172; //@line 1601 "xmltok.c"
        __label__ = 36; break; //@line 1601 "xmltok.c"
      case 35: // $bb39
        var $173=$enc_addr; //@line 1606 "xmltok.c"
        var $174=$173; //@line 1606 "xmltok.c"
        var $175=$174+69; //@line 1606 "xmltok.c"
        var $176=HEAP[$175]; //@line 1606 "xmltok.c"
        var $177=($176); //@line 1606 "xmltok.c"
        var $178=$encodingTable_addr; //@line 1606 "xmltok.c"
        var $179=$178+4*$177; //@line 1606 "xmltok.c"
        var $180=HEAP[$179]; //@line 1606 "xmltok.c"
        var $181=$encPtr; //@line 1606 "xmltok.c"
        HEAP[$181]=$180; //@line 1606 "xmltok.c"
        var $182=$encPtr; //@line 1607 "xmltok.c"
        var $183=HEAP[$182]; //@line 1607 "xmltok.c"
        var $184=$state_addr; //@line 1607 "xmltok.c"
        var $185=$183; //@line 1607 "xmltok.c"
        var $186=$185+$184*4; //@line 1607 "xmltok.c"
        var $187=HEAP[$186]; //@line 1607 "xmltok.c"
        var $188=$encPtr; //@line 1607 "xmltok.c"
        var $189=HEAP[$188]; //@line 1607 "xmltok.c"
        var $190=$ptr_addr; //@line 1607 "xmltok.c"
        var $191=$end_addr; //@line 1607 "xmltok.c"
        var $192=$nextTokPtr_addr; //@line 1607 "xmltok.c"
        var $193=FUNCTION_TABLE[$187]($189, $190, $191, $192); //@line 1607 "xmltok.c"
        $0=$193; //@line 1607 "xmltok.c"
        __label__ = 36; break; //@line 1607 "xmltok.c"
      case 36: // $bb40
        var $194=$0; //@line 1499 "xmltok.c"
        $retval=$194; //@line 1499 "xmltok.c"
        var $retval41=$retval; //@line 1499 "xmltok.c"
        ;
        return $retval41; //@line 1499 "xmltok.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlGetUtf8InternalEncoding() {
    ;
    var __label__;
  
    var $retval;
    var $0;
    $0=_internal_utf8_encoding; //@line 4 "xmltok_ns.c"
    var $1=$0; //@line 4 "xmltok_ns.c"
    $retval=$1; //@line 4 "xmltok_ns.c"
    var $retval1=$retval; //@line 4 "xmltok_ns.c"
    ;
    return $retval1; //@line 4 "xmltok_ns.c"
  }
  

  function _PyExpat_XmlGetUtf16InternalEncoding() {
    var __stackBase__  = STACKTOP; STACKTOP += 2; _memset(__stackBase__, 0, 2);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $retval;
        var $iftmp_1289;
        var $0;
        var $n=__stackBase__;
        HEAP[$n]=1; //@line 15 "xmltok_ns.c"
        var $n1=$n; //@line 16 "xmltok_ns.c"
        var $1=HEAP[$n1]; //@line 16 "xmltok_ns.c"
        var $2=($1)!=0; //@line 16 "xmltok_ns.c"
        if ($2) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 16 "xmltok_ns.c"
      case 1: // $bb
        $iftmp_1289=_internal_little2_encoding; //@line 16 "xmltok_ns.c"
        __label__ = 3; break; //@line 16 "xmltok_ns.c"
      case 2: // $bb3
        $iftmp_1289=_internal_big2_encoding; //@line 16 "xmltok_ns.c"
        __label__ = 3; break; //@line 16 "xmltok_ns.c"
      case 3: // $bb4
        var $3=$iftmp_1289; //@line 16 "xmltok_ns.c"
        $0=$3; //@line 16 "xmltok_ns.c"
        var $4=$0; //@line 16 "xmltok_ns.c"
        $retval=$4; //@line 16 "xmltok_ns.c"
        var $retval5=$retval; //@line 16 "xmltok_ns.c"
        STACKTOP = __stackBase__;
        return $retval5; //@line 16 "xmltok_ns.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _initScanProlog($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
  
    var $enc_addr;
    var $ptr_addr;
    var $end_addr;
    var $nextTokPtr_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $ptr_addr=$ptr;
    $end_addr=$end;
    $nextTokPtr_addr=$nextTokPtr;
    var $1=$enc_addr; //@line 36 "xmltok_ns.c"
    var $2=$1; //@line 36 "xmltok_ns.c"
    var $3=$ptr_addr; //@line 36 "xmltok_ns.c"
    var $4=$end_addr; //@line 36 "xmltok_ns.c"
    var $5=$nextTokPtr_addr; //@line 36 "xmltok_ns.c"
    var $6=_initScan($2, 0, $3, $4, $5); //@line 36 "xmltok_ns.c"
    $0=$6; //@line 36 "xmltok_ns.c"
    var $7=$0; //@line 36 "xmltok_ns.c"
    $retval=$7; //@line 36 "xmltok_ns.c"
    var $retval1=$retval; //@line 36 "xmltok_ns.c"
    ;
    return $retval1; //@line 36 "xmltok_ns.c"
  }
  

  function _initScanContent($enc, $ptr, $end, $nextTokPtr) {
    ;
    var __label__;
  
    var $enc_addr;
    var $ptr_addr;
    var $end_addr;
    var $nextTokPtr_addr;
    var $retval;
    var $0;
    $enc_addr=$enc;
    $ptr_addr=$ptr;
    $end_addr=$end;
    $nextTokPtr_addr=$nextTokPtr;
    var $1=$enc_addr; //@line 44 "xmltok_ns.c"
    var $2=$1; //@line 44 "xmltok_ns.c"
    var $3=$ptr_addr; //@line 44 "xmltok_ns.c"
    var $4=$end_addr; //@line 44 "xmltok_ns.c"
    var $5=$nextTokPtr_addr; //@line 44 "xmltok_ns.c"
    var $6=_initScan($2, 1, $3, $4, $5); //@line 44 "xmltok_ns.c"
    $0=$6; //@line 44 "xmltok_ns.c"
    var $7=$0; //@line 44 "xmltok_ns.c"
    $retval=$7; //@line 44 "xmltok_ns.c"
    var $retval1=$retval; //@line 44 "xmltok_ns.c"
    ;
    return $retval1; //@line 44 "xmltok_ns.c"
  }
  

  function _PyExpat_XmlInitEncoding($p, $encPtr, $name) {
    ;
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $name_addr_i;
        var $retval_i;
        var $0;
        var $i_i;
        var $p_addr;
        var $encPtr_addr;
        var $name_addr;
        var $retval;
        var $1;
        var $i;
        $p_addr=$p;
        $encPtr_addr=$encPtr;
        $name_addr=$name;
        var $2=$name_addr; //@line 52 "xmltok_ns.c"
        $name_addr_i=$2;
        var $3=$name_addr_i; //@line 1465 "xmltok.c"
        var $4=($3)==0; //@line 1465 "xmltok.c"
        if ($4) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1465 "xmltok.c"
      case 1: // $getEncodingIndex_exit_thread1
        $0=6; //@line 1466 "xmltok.c"
        $retval_i=6; //@line 1466 "xmltok.c"
        $i=6; //@line 52 "xmltok_ns.c"
        __label__ = 9; break;
      case 2: // $bb1_i
        $i_i=0; //@line 1467 "xmltok.c"
        __lastLabel__ = 2; __label__ = 5; break; //@line 1467 "xmltok.c"
      case 3: // $bb2_i
        var $5=$i_i; //@line 1468 "xmltok.c"
        var $6=_encodingNames_12027+$5*4; //@line 1468 "xmltok.c"
        var $7=HEAP[$6]; //@line 1468 "xmltok.c"
        var $8=$name_addr_i; //@line 1468 "xmltok.c"
        var $9=_streqci($8, $7); //@line 1468 "xmltok.c"
        var $10=($9)!=0; //@line 1468 "xmltok.c"
        var $11=$i_i; //@line 1469 "xmltok.c"
        if ($10) { __label__ = 7; break; } else { __label__ = 4; break; } //@line 1468 "xmltok.c"
      case 4: // $bb4_i
        var $12=($11) + 1; //@line 1467 "xmltok.c"
        $i_i=$12; //@line 1467 "xmltok.c"
        __lastLabel__ = 4; __label__ = 5; break; //@line 1467 "xmltok.c"
      case 5: // $bb5_i
        var $13=__lastLabel__ == 4 ? $12 : (0);
        var $14=($13) <= 5; //@line 1467 "xmltok.c"
        if ($14) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 1467 "xmltok.c"
      case 6: // $getEncodingIndex_exit_thread
        $0=-1; //@line 1470 "xmltok.c"
        $retval_i=-1; //@line 1466 "xmltok.c"
        $i=-1; //@line 52 "xmltok_ns.c"
        __label__ = 8; break;
      case 7: // $getEncodingIndex_exit
        $0=$11; //@line 1469 "xmltok.c"
        $retval_i=$11; //@line 1466 "xmltok.c"
        $i=$11; //@line 52 "xmltok_ns.c"
        var $15=($11)==-1; //@line 53 "xmltok_ns.c"
        if ($15) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 53 "xmltok_ns.c"
      case 8: // $bb
        $1=0; //@line 54 "xmltok_ns.c"
        __label__ = 10; break; //@line 54 "xmltok_ns.c"
      case 9: // $bb1
        var $16=$i; //@line 55 "xmltok_ns.c"
        var $17=((($16)) & 255); //@line 55 "xmltok_ns.c"
        var $18=$p_addr; //@line 55 "xmltok_ns.c"
        var $19=$18; //@line 55 "xmltok_ns.c"
        var $20=$19+69; //@line 55 "xmltok_ns.c"
        HEAP[$20]=$17; //@line 55 "xmltok_ns.c"
        var $21=$p_addr; //@line 56 "xmltok_ns.c"
        var $22=$21; //@line 56 "xmltok_ns.c"
        var $23=$22; //@line 56 "xmltok_ns.c"
        var $24=$23; //@line 56 "xmltok_ns.c"
        HEAP[$24]=(FUNCTION_TABLE_OFFSET + 172); //@line 56 "xmltok_ns.c"
        var $25=$p_addr; //@line 57 "xmltok_ns.c"
        var $26=$25; //@line 57 "xmltok_ns.c"
        var $27=$26; //@line 57 "xmltok_ns.c"
        var $28=$27+4; //@line 57 "xmltok_ns.c"
        HEAP[$28]=(FUNCTION_TABLE_OFFSET + 174); //@line 57 "xmltok_ns.c"
        var $29=$p_addr; //@line 58 "xmltok_ns.c"
        var $30=$29; //@line 58 "xmltok_ns.c"
        var $31=$30+48; //@line 58 "xmltok_ns.c"
        HEAP[$31]=(FUNCTION_TABLE_OFFSET + 176); //@line 58 "xmltok_ns.c"
        var $32=$p_addr; //@line 59 "xmltok_ns.c"
        var $33=$32+72; //@line 59 "xmltok_ns.c"
        var $34=$encPtr_addr; //@line 59 "xmltok_ns.c"
        HEAP[$33]=$34; //@line 59 "xmltok_ns.c"
        var $35=$p_addr; //@line 60 "xmltok_ns.c"
        var $36=$35; //@line 60 "xmltok_ns.c"
        var $37=$encPtr_addr; //@line 60 "xmltok_ns.c"
        HEAP[$37]=$36; //@line 60 "xmltok_ns.c"
        $1=1; //@line 61 "xmltok_ns.c"
        __label__ = 10; break; //@line 61 "xmltok_ns.c"
      case 10: // $bb2
        var $38=$1; //@line 54 "xmltok_ns.c"
        $retval=$38; //@line 54 "xmltok_ns.c"
        var $retval3=$retval; //@line 54 "xmltok_ns.c"
        ;
        return $retval3; //@line 54 "xmltok_ns.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _findEncoding($enc, $ptr, $end) {
    var __stackBase__  = STACKTOP; STACKTOP += 136; _memset(__stackBase__, 0, 136);
    var __label__;
    var __lastLabel__ = null;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $name_addr_i;
        var $retval_i;
        var $0;
        var $i_i;
        var $enc_addr;
        var $ptr_addr=__stackBase__;
        var $end_addr;
        var $retval;
        var $1;
        var $buf=__stackBase__+4;
        var $p=__stackBase__+132;
        var $i;
        $enc_addr=$enc;
        HEAP[$ptr_addr]=$ptr;
        $end_addr=$end;
        var $buf1=$buf; //@line 69 "xmltok_ns.c"
        HEAP[$p]=$buf1; //@line 69 "xmltok_ns.c"
        var $2=$enc_addr; //@line 71 "xmltok_ns.c"
        var $3=$2+56; //@line 71 "xmltok_ns.c"
        var $4=HEAP[$3]; //@line 71 "xmltok_ns.c"
        var $5=HEAP[$p]; //@line 71 "xmltok_ns.c"
        var $6=$5+128; //@line 71 "xmltok_ns.c"
        var $7=$6+-1; //@line 71 "xmltok_ns.c"
        var $8=$enc_addr; //@line 71 "xmltok_ns.c"
        var $9=$end_addr; //@line 71 "xmltok_ns.c"
        FUNCTION_TABLE[$4]($8, $ptr_addr, $9, $p, $7); //@line 71 "xmltok_ns.c"
        var $10=HEAP[$ptr_addr]; //@line 72 "xmltok_ns.c"
        var $11=$end_addr; //@line 72 "xmltok_ns.c"
        var $12=($10)!=($11); //@line 72 "xmltok_ns.c"
        if ($12) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 72 "xmltok_ns.c"
      case 1: // $bb
        $1=0; //@line 73 "xmltok_ns.c"
        __label__ = 15; break; //@line 73 "xmltok_ns.c"
      case 2: // $bb2
        var $13=HEAP[$p]; //@line 74 "xmltok_ns.c"
        HEAP[$13]=0; //@line 74 "xmltok_ns.c"
        var $buf3=$buf; //@line 75 "xmltok_ns.c"
        var $14=_streqci($buf3, _KW_UTF_16); //@line 75 "xmltok_ns.c"
        var $15=($14)!=0; //@line 75 "xmltok_ns.c"
        if ($15) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 75 "xmltok_ns.c"
      case 3: // $bb4
        var $16=$enc_addr; //@line 75 "xmltok_ns.c"
        var $17=$16+64; //@line 75 "xmltok_ns.c"
        var $18=HEAP[$17]; //@line 75 "xmltok_ns.c"
        var $19=($18)==2; //@line 75 "xmltok_ns.c"
        if ($19) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 75 "xmltok_ns.c"
      case 4: // $bb5
        var $20=$enc_addr; //@line 76 "xmltok_ns.c"
        $1=$20; //@line 76 "xmltok_ns.c"
        __label__ = 15; break; //@line 76 "xmltok_ns.c"
      case 5: // $bb6
        var $buf7=$buf; //@line 77 "xmltok_ns.c"
        $name_addr_i=$buf7;
        var $21=($buf7)==0; //@line 1465 "xmltok.c"
        if ($21) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1465 "xmltok.c"
      case 6: // $getEncodingIndex_exit_thread1
        $0=6; //@line 1466 "xmltok.c"
        $retval_i=6; //@line 1466 "xmltok.c"
        $i=6; //@line 77 "xmltok_ns.c"
        __label__ = 14; break;
      case 7: // $bb1_i
        $i_i=0; //@line 1467 "xmltok.c"
        __lastLabel__ = 7; __label__ = 10; break; //@line 1467 "xmltok.c"
      case 8: // $bb2_i
        var $22=$i_i; //@line 1468 "xmltok.c"
        var $23=_encodingNames_12027+$22*4; //@line 1468 "xmltok.c"
        var $24=HEAP[$23]; //@line 1468 "xmltok.c"
        var $25=$name_addr_i; //@line 1468 "xmltok.c"
        var $26=_streqci($25, $24); //@line 1468 "xmltok.c"
        var $27=($26)!=0; //@line 1468 "xmltok.c"
        var $28=$i_i; //@line 1469 "xmltok.c"
        if ($27) { __label__ = 12; break; } else { __label__ = 9; break; } //@line 1468 "xmltok.c"
      case 9: // $bb4_i
        var $29=($28) + 1; //@line 1467 "xmltok.c"
        $i_i=$29; //@line 1467 "xmltok.c"
        __lastLabel__ = 9; __label__ = 10; break; //@line 1467 "xmltok.c"
      case 10: // $bb5_i
        var $30=__lastLabel__ == 9 ? $29 : (0);
        var $31=($30) <= 5; //@line 1467 "xmltok.c"
        if ($31) { __label__ = 8; break; } else { __label__ = 11; break; } //@line 1467 "xmltok.c"
      case 11: // $getEncodingIndex_exit_thread
        $0=-1; //@line 1470 "xmltok.c"
        $retval_i=-1; //@line 1466 "xmltok.c"
        $i=-1; //@line 77 "xmltok_ns.c"
        __label__ = 13; break;
      case 12: // $getEncodingIndex_exit
        $0=$28; //@line 1469 "xmltok.c"
        $retval_i=$28; //@line 1466 "xmltok.c"
        $i=$28; //@line 77 "xmltok_ns.c"
        var $32=($28)==-1; //@line 78 "xmltok_ns.c"
        if ($32) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 78 "xmltok_ns.c"
      case 13: // $bb8
        $1=0; //@line 79 "xmltok_ns.c"
        __label__ = 15; break; //@line 79 "xmltok_ns.c"
      case 14: // $bb9
        var $33=$i; //@line 80 "xmltok_ns.c"
        var $34=_encodings+$33*4; //@line 80 "xmltok_ns.c"
        var $35=HEAP[$34]; //@line 80 "xmltok_ns.c"
        $1=$35; //@line 80 "xmltok_ns.c"
        __label__ = 15; break; //@line 80 "xmltok_ns.c"
      case 15: // $bb10
        var $36=$1; //@line 73 "xmltok_ns.c"
        $retval=$36; //@line 73 "xmltok_ns.c"
        var $retval11=$retval; //@line 73 "xmltok_ns.c"
        STACKTOP = __stackBase__;
        return $retval11; //@line 73 "xmltok_ns.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  

  function _PyExpat_XmlParseXmlDecl($isGeneralTextEntity, $enc, $ptr, $end, $badPtr, $versionPtr, $versionEndPtr, $encodingName, $encoding, $standalone) {
    var __stackBase__  = STACKTOP; STACKTOP += 33; _memset(__stackBase__, 0, 33);
    var __label__;
    __label__ = -1; 
    while(1) switch(__label__) {
      case -1: // $entry
        var $c_addr_i_i;
        var $retval_i18_i;
        var $0;
        var $enc_addr_i6_i;
        var $ptr_addr_i7_i=__stackBase__;
        var $end_addr_i8_i;
        var $retval_i9_i;
        var $1;
        var $p_i11_i=__stackBase__+4;
        var $enc_addr_i_i;
        var $ptr_addr_i_i=__stackBase__+8;
        var $end_addr_i_i;
        var $retval_i_i;
        var $2;
        var $buf_i_i=__stackBase__+12;
        var $p_i_i=__stackBase__+13;
        var $encodingFinder_addr_i;
        var $isGeneralTextEntity_addr_i;
        var $enc_addr_i;
        var $ptr_addr_i=__stackBase__+17;
        var $end_addr_i;
        var $badPtr_addr_i;
        var $versionPtr_addr_i;
        var $versionEndPtr_addr_i;
        var $encodingName_addr_i;
        var $encoding_addr_i;
        var $standalone_addr_i;
        var $retval_i;
        var $3;
        var $val_i=__stackBase__+21;
        var $name_i=__stackBase__+25;
        var $nameEnd_i=__stackBase__+29;
        var $c_i;
        var $isGeneralTextEntity_addr;
        var $enc_addr;
        var $ptr_addr;
        var $end_addr;
        var $badPtr_addr;
        var $versionPtr_addr;
        var $versionEndPtr_addr;
        var $encodingName_addr;
        var $encoding_addr;
        var $standalone_addr;
        var $retval;
        var $4;
        $isGeneralTextEntity_addr=$isGeneralTextEntity;
        $enc_addr=$enc;
        $ptr_addr=$ptr;
        $end_addr=$end;
        $badPtr_addr=$badPtr;
        $versionPtr_addr=$versionPtr;
        $versionEndPtr_addr=$versionEndPtr;
        $encodingName_addr=$encodingName;
        $encoding_addr=$encoding;
        $standalone_addr=$standalone;
        var $5=$isGeneralTextEntity_addr; //@line 95 "xmltok_ns.c"
        var $6=$enc_addr; //@line 95 "xmltok_ns.c"
        var $7=$ptr_addr; //@line 95 "xmltok_ns.c"
        var $8=$end_addr; //@line 95 "xmltok_ns.c"
        var $9=$badPtr_addr; //@line 95 "xmltok_ns.c"
        var $10=$versionPtr_addr; //@line 95 "xmltok_ns.c"
        var $11=$versionEndPtr_addr; //@line 95 "xmltok_ns.c"
        var $12=$encodingName_addr; //@line 95 "xmltok_ns.c"
        var $13=$encoding_addr; //@line 95 "xmltok_ns.c"
        var $14=$standalone_addr; //@line 95 "xmltok_ns.c"
        $encodingFinder_addr_i=(FUNCTION_TABLE_OFFSET + 178);
        $isGeneralTextEntity_addr_i=$5;
        $enc_addr_i=$6;
        HEAP[$ptr_addr_i]=$7;
        $end_addr_i=$8;
        $badPtr_addr_i=$9;
        $versionPtr_addr_i=$10;
        $versionEndPtr_addr_i=$11;
        $encodingName_addr_i=$12;
        $encoding_addr_i=$13;
        $standalone_addr_i=$14;
        HEAP[$val_i]=0; //@line 1088 "xmltok.c"
        HEAP[$name_i]=0; //@line 1089 "xmltok.c"
        HEAP[$nameEnd_i]=0; //@line 1090 "xmltok.c"
        var $15=HEAP[$ptr_addr_i]; //@line 1091 "xmltok.c"
        var $16=$enc_addr_i; //@line 1091 "xmltok.c"
        var $17=$16+64; //@line 1091 "xmltok.c"
        var $18=HEAP[$17]; //@line 1091 "xmltok.c"
        var $19=($18) * 5; //@line 1091 "xmltok.c"
        var $20=$15+$19; //@line 1091 "xmltok.c"
        HEAP[$ptr_addr_i]=$20; //@line 1091 "xmltok.c"
        var $21=$enc_addr_i; //@line 1092 "xmltok.c"
        var $22=$21+64; //@line 1092 "xmltok.c"
        var $23=HEAP[$22]; //@line 1092 "xmltok.c"
        var $24=($23) * -2; //@line 1092 "xmltok.c"
        var $25=$end_addr_i; //@line 1092 "xmltok.c"
        var $26=$25+$24; //@line 1092 "xmltok.c"
        $end_addr_i=$26; //@line 1092 "xmltok.c"
        var $27=HEAP[$ptr_addr_i]; //@line 1093 "xmltok.c"
        var $28=$enc_addr_i; //@line 1093 "xmltok.c"
        var $29=$end_addr_i; //@line 1093 "xmltok.c"
        var $30=_parsePseudoAttribute($28, $27, $29, $name_i, $nameEnd_i, $val_i, $ptr_addr_i); //@line 1093 "xmltok.c"
        var $31=($30)==0; //@line 1093 "xmltok.c"
        var $32=HEAP[$name_i]; //@line 1093 "xmltok.c"
        var $33=($32)==0; //@line 1093 "xmltok.c"
        var $or_cond_i=($31) | ($33);
        if ($or_cond_i) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 1093 "xmltok.c"
      case 1: // $bb1_i
        var $34=HEAP[$ptr_addr_i]; //@line 1095 "xmltok.c"
        var $35=$badPtr_addr_i; //@line 1095 "xmltok.c"
        HEAP[$35]=$34; //@line 1095 "xmltok.c"
        $3=0; //@line 1096 "xmltok.c"
        __label__ = 48; break; //@line 1096 "xmltok.c"
      case 2: // $bb2_i
        var $36=$enc_addr_i; //@line 1098 "xmltok.c"
        var $37=$36+24; //@line 1098 "xmltok.c"
        var $38=HEAP[$37]; //@line 1098 "xmltok.c"
        var $39=HEAP[$nameEnd_i]; //@line 1098 "xmltok.c"
        var $40=HEAP[$name_i]; //@line 1098 "xmltok.c"
        var $41=$enc_addr_i; //@line 1098 "xmltok.c"
        var $42=FUNCTION_TABLE[$38]($41, $40, $39, _KW_version); //@line 1098 "xmltok.c"
        var $43=($42)==0; //@line 1098 "xmltok.c"
        if ($43) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 1098 "xmltok.c"
      case 3: // $bb3_i
        var $44=$isGeneralTextEntity_addr_i; //@line 1099 "xmltok.c"
        var $45=($44)==0; //@line 1099 "xmltok.c"
        if ($45) { __label__ = 4; break; } else { __label__ = 15; break; } //@line 1099 "xmltok.c"
      case 4: // $bb4_i
        var $46=HEAP[$name_i]; //@line 1100 "xmltok.c"
        var $47=$badPtr_addr_i; //@line 1100 "xmltok.c"
        HEAP[$47]=$46; //@line 1100 "xmltok.c"
        $3=0; //@line 1101 "xmltok.c"
        __label__ = 48; break; //@line 1101 "xmltok.c"
      case 5: // $bb6_i
        var $48=$versionPtr_addr_i; //@line 1105 "xmltok.c"
        var $49=($48)!=0; //@line 1105 "xmltok.c"
        if ($49) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 1105 "xmltok.c"
      case 6: // $bb7_i
        var $50=HEAP[$val_i]; //@line 1106 "xmltok.c"
        var $51=$versionPtr_addr_i; //@line 1106 "xmltok.c"
        HEAP[$51]=$50; //@line 1106 "xmltok.c"
        __label__ = 7; break; //@line 1106 "xmltok.c"
      case 7: // $bb8_i
        var $52=$versionEndPtr_addr_i; //@line 1107 "xmltok.c"
        var $53=($52)!=0; //@line 1107 "xmltok.c"
        if ($53) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 1107 "xmltok.c"
      case 8: // $bb9_i
        var $54=HEAP[$ptr_addr_i]; //@line 1108 "xmltok.c"
        var $55=$versionEndPtr_addr_i; //@line 1108 "xmltok.c"
        HEAP[$55]=$54; //@line 1108 "xmltok.c"
        __label__ = 9; break; //@line 1108 "xmltok.c"
      case 9: // $bb10_i
        var $56=HEAP[$ptr_addr_i]; //@line 1109 "xmltok.c"
        var $57=$enc_addr_i; //@line 1109 "xmltok.c"
        var $58=$end_addr_i; //@line 1109 "xmltok.c"
        var $59=_parsePseudoAttribute($57, $56, $58, $name_i, $nameEnd_i, $val_i, $ptr_addr_i); //@line 1109 "xmltok.c"
        var $60=($59)==0; //@line 1109 "xmltok.c"
        if ($60) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 1109 "xmltok.c"
      case 10: // $bb11_i
        var $61=HEAP[$ptr_addr_i]; //@line 1110 "xmltok.c"
        var $62=$badPtr_addr_i; //@line 1110 "xmltok.c"
        HEAP[$62]=$61; //@line 1110 "xmltok.c"
        $3=0; //@line 1111 "xmltok.c"
        __label__ = 48; break; //@line 1111 "xmltok.c"
      case 11: // $bb12_i
        var $63=HEAP[$name_i]; //@line 1113 "xmltok.c"
        var $64=($63)==0; //@line 1113 "xmltok.c"
        if ($64) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 1113 "xmltok.c"
      case 12: // $bb13_i
        var $65=$isGeneralTextEntity_addr_i; //@line 1114 "xmltok.c"
        var $66=($65)!=0; //@line 1114 "xmltok.c"
        if ($66) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 1114 "xmltok.c"
      case 13: // $bb14_i
        var $67=HEAP[$ptr_addr_i]; //@line 1116 "xmltok.c"
        var $68=$badPtr_addr_i; //@line 1116 "xmltok.c"
        HEAP[$68]=$67; //@line 1116 "xmltok.c"
        $3=0; //@line 1117 "xmltok.c"
        __label__ = 48; break; //@line 1117 "xmltok.c"
      case 14: // $bb15_i
        $3=1; //@line 1119 "xmltok.c"
        __label__ = 48; break; //@line 1119 "xmltok.c"
      case 15: // $bb16_i
        var $69=$enc_addr_i; //@line 1122 "xmltok.c"
        var $70=$69+24; //@line 1122 "xmltok.c"
        var $71=HEAP[$70]; //@line 1122 "xmltok.c"
        var $72=HEAP[$nameEnd_i]; //@line 1122 "xmltok.c"
        var $73=HEAP[$name_i]; //@line 1122 "xmltok.c"
        var $74=$enc_addr_i; //@line 1122 "xmltok.c"
        var $75=FUNCTION_TABLE[$71]($74, $73, $72, __str86); //@line 1122 "xmltok.c"
        var $76=($75)!=0; //@line 1122 "xmltok.c"
        if ($76) { __label__ = 16; break; } else { __label__ = 30; break; } //@line 1122 "xmltok.c"
      case 16: // $bb17_i
        var $77=HEAP[$val_i]; //@line 1123 "xmltok.c"
        var $78=$enc_addr_i; //@line 1123 "xmltok.c"
        var $79=$end_addr_i; //@line 1123 "xmltok.c"
        $enc_addr_i_i=$78;
        HEAP[$ptr_addr_i_i]=$77;
        $end_addr_i_i=$79;
        var $buf1_i_i=$buf_i_i; //@line 943 "xmltok.c"
        HEAP[$p_i_i]=$buf1_i_i; //@line 943 "xmltok.c"
        var $80=$enc_addr_i_i; //@line 944 "xmltok.c"
        var $81=$80+56; //@line 944 "xmltok.c"
        var $82=HEAP[$81]; //@line 944 "xmltok.c"
        var $83=HEAP[$p_i_i]; //@line 944 "xmltok.c"
        var $84=$83+1; //@line 944 "xmltok.c"
        var $85=$enc_addr_i_i; //@line 944 "xmltok.c"
        var $86=$end_addr_i_i; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$82]($85, $ptr_addr_i_i, $86, $p_i_i, $84); //@line 944 "xmltok.c"
        var $87=HEAP[$p_i_i]; //@line 945 "xmltok.c"
        var $buf2_i_i=$buf_i_i; //@line 945 "xmltok.c"
        var $88=($buf2_i_i)==($87); //@line 945 "xmltok.c"
        if ($88) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 945 "xmltok.c"
      case 17: // $bb_i_i
        $2=-1; //@line 946 "xmltok.c"
        __label__ = 19; break; //@line 946 "xmltok.c"
      case 18: // $bb3_i_i
        var $89=$buf_i_i; //@line 948 "xmltok.c"
        var $90=HEAP[$89]; //@line 948 "xmltok.c"
        var $91=($90); //@line 948 "xmltok.c"
        $2=$91; //@line 948 "xmltok.c"
        __label__ = 19; break; //@line 948 "xmltok.c"
      case 19: // $toAscii_exit_i
        var $92=$2; //@line 946 "xmltok.c"
        $retval_i_i=$92; //@line 946 "xmltok.c"
        var $retval5_i_i=$retval_i_i; //@line 946 "xmltok.c"
        $c_i=$retval5_i_i; //@line 1123 "xmltok.c"
        var $93=$c_i; //@line 1124 "xmltok.c"
        var $94=($93) <= 96; //@line 1124 "xmltok.c"
        var $95=$c_i; //@line 1124 "xmltok.c"
        var $96=($95) > 122; //@line 1124 "xmltok.c"
        var $or_cond3_i=($94) | ($96);
        if ($or_cond3_i) { __label__ = 20; break; } else { __label__ = 22; break; } //@line 1124 "xmltok.c"
      case 20: // $bb19_i
        var $97=$c_i; //@line 1124 "xmltok.c"
        var $98=($97) <= 64; //@line 1124 "xmltok.c"
        var $99=$c_i; //@line 1124 "xmltok.c"
        var $100=($99) > 90; //@line 1124 "xmltok.c"
        var $or_cond5_i=($98) | ($100);
        if ($or_cond5_i) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 1124 "xmltok.c"
      case 21: // $bb21_i
        var $101=HEAP[$val_i]; //@line 1125 "xmltok.c"
        var $102=$badPtr_addr_i; //@line 1125 "xmltok.c"
        HEAP[$102]=$101; //@line 1125 "xmltok.c"
        $3=0; //@line 1126 "xmltok.c"
        __label__ = 48; break; //@line 1126 "xmltok.c"
      case 22: // $bb22_i
        var $103=$encodingName_addr_i; //@line 1128 "xmltok.c"
        var $104=($103)!=0; //@line 1128 "xmltok.c"
        if ($104) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 1128 "xmltok.c"
      case 23: // $bb23_i
        var $105=HEAP[$val_i]; //@line 1129 "xmltok.c"
        var $106=$encodingName_addr_i; //@line 1129 "xmltok.c"
        HEAP[$106]=$105; //@line 1129 "xmltok.c"
        __label__ = 24; break; //@line 1129 "xmltok.c"
      case 24: // $bb24_i
        var $107=$encoding_addr_i; //@line 1130 "xmltok.c"
        var $108=($107)!=0; //@line 1130 "xmltok.c"
        if ($108) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 1130 "xmltok.c"
      case 25: // $bb25_i
        var $109=HEAP[$ptr_addr_i]; //@line 1131 "xmltok.c"
        var $110=$enc_addr_i; //@line 1131 "xmltok.c"
        var $111=$110+64; //@line 1131 "xmltok.c"
        var $112=HEAP[$111]; //@line 1131 "xmltok.c"
        var $113=0 - ($112); //@line 1131 "xmltok.c"
        var $114=$109+$113; //@line 1131 "xmltok.c"
        var $115=HEAP[$val_i]; //@line 1131 "xmltok.c"
        var $116=$encodingFinder_addr_i; //@line 1131 "xmltok.c"
        var $117=$enc_addr_i; //@line 1131 "xmltok.c"
        var $118=FUNCTION_TABLE[$116]($117, $115, $114); //@line 1131 "xmltok.c"
        var $119=$encoding_addr_i; //@line 1131 "xmltok.c"
        HEAP[$119]=$118; //@line 1131 "xmltok.c"
        __label__ = 26; break; //@line 1131 "xmltok.c"
      case 26: // $bb26_i
        var $120=HEAP[$ptr_addr_i]; //@line 1132 "xmltok.c"
        var $121=$enc_addr_i; //@line 1132 "xmltok.c"
        var $122=$end_addr_i; //@line 1132 "xmltok.c"
        var $123=_parsePseudoAttribute($121, $120, $122, $name_i, $nameEnd_i, $val_i, $ptr_addr_i); //@line 1132 "xmltok.c"
        var $124=($123)==0; //@line 1132 "xmltok.c"
        if ($124) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 1132 "xmltok.c"
      case 27: // $bb27_i
        var $125=HEAP[$ptr_addr_i]; //@line 1133 "xmltok.c"
        var $126=$badPtr_addr_i; //@line 1133 "xmltok.c"
        HEAP[$126]=$125; //@line 1133 "xmltok.c"
        $3=0; //@line 1134 "xmltok.c"
        __label__ = 48; break; //@line 1134 "xmltok.c"
      case 28: // $bb28_i
        var $127=HEAP[$name_i]; //@line 1136 "xmltok.c"
        var $128=($127)==0; //@line 1136 "xmltok.c"
        if ($128) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 1136 "xmltok.c"
      case 29: // $bb29_i
        $3=1; //@line 1137 "xmltok.c"
        __label__ = 48; break; //@line 1137 "xmltok.c"
      case 30: // $bb30_i
        var $129=$enc_addr_i; //@line 1139 "xmltok.c"
        var $130=$129+24; //@line 1139 "xmltok.c"
        var $131=HEAP[$130]; //@line 1139 "xmltok.c"
        var $132=HEAP[$nameEnd_i]; //@line 1139 "xmltok.c"
        var $133=HEAP[$name_i]; //@line 1139 "xmltok.c"
        var $134=$enc_addr_i; //@line 1139 "xmltok.c"
        var $135=FUNCTION_TABLE[$131]($134, $133, $132, _KW_standalone); //@line 1139 "xmltok.c"
        var $136=($135)==0; //@line 1139 "xmltok.c"
        if ($136) { __label__ = 32; break; } else { __label__ = 31; break; } //@line 1139 "xmltok.c"
      case 31: // $bb31_i
        var $137=$isGeneralTextEntity_addr_i; //@line 1139 "xmltok.c"
        var $138=($137)!=0; //@line 1139 "xmltok.c"
        if ($138) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 1139 "xmltok.c"
      case 32: // $bb32_i
        var $139=HEAP[$name_i]; //@line 1141 "xmltok.c"
        var $140=$badPtr_addr_i; //@line 1141 "xmltok.c"
        HEAP[$140]=$139; //@line 1141 "xmltok.c"
        $3=0; //@line 1142 "xmltok.c"
        __label__ = 48; break; //@line 1142 "xmltok.c"
      case 33: // $bb33_i
        var $141=$enc_addr_i; //@line 1144 "xmltok.c"
        var $142=$141+24; //@line 1144 "xmltok.c"
        var $143=HEAP[$142]; //@line 1144 "xmltok.c"
        var $144=HEAP[$ptr_addr_i]; //@line 1144 "xmltok.c"
        var $145=$enc_addr_i; //@line 1144 "xmltok.c"
        var $146=$145+64; //@line 1144 "xmltok.c"
        var $147=HEAP[$146]; //@line 1144 "xmltok.c"
        var $148=0 - ($147); //@line 1144 "xmltok.c"
        var $149=$144+$148; //@line 1144 "xmltok.c"
        var $150=HEAP[$val_i]; //@line 1144 "xmltok.c"
        var $151=$enc_addr_i; //@line 1144 "xmltok.c"
        var $152=FUNCTION_TABLE[$143]($151, $150, $149, _KW_yes); //@line 1144 "xmltok.c"
        var $153=($152)!=0; //@line 1144 "xmltok.c"
        if ($153) { __label__ = 34; break; } else { __label__ = 37; break; } //@line 1144 "xmltok.c"
      case 34: // $bb34_i
        var $154=$standalone_addr_i; //@line 1145 "xmltok.c"
        var $155=($154)!=0; //@line 1145 "xmltok.c"
        if ($155) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 1145 "xmltok.c"
      case 35: // $bb35_i
        var $156=$standalone_addr_i; //@line 1146 "xmltok.c"
        HEAP[$156]=1; //@line 1146 "xmltok.c"
        __label__ = 36; break; //@line 1146 "xmltok.c"
      case 36: // $bb44_preheader_i
        var $buf1_i12_i=$buf_i_i; //@line 943 "xmltok.c"
        var $buf2_i13_i=$buf_i_i; //@line 945 "xmltok.c"
        var $157=$buf_i_i; //@line 948 "xmltok.c"
        __label__ = 42; break;
      case 37: // $bb37_i
        var $158=$enc_addr_i; //@line 1148 "xmltok.c"
        var $159=$158+24; //@line 1148 "xmltok.c"
        var $160=HEAP[$159]; //@line 1148 "xmltok.c"
        var $161=HEAP[$ptr_addr_i]; //@line 1148 "xmltok.c"
        var $162=$enc_addr_i; //@line 1148 "xmltok.c"
        var $163=$162+64; //@line 1148 "xmltok.c"
        var $164=HEAP[$163]; //@line 1148 "xmltok.c"
        var $165=0 - ($164); //@line 1148 "xmltok.c"
        var $166=$161+$165; //@line 1148 "xmltok.c"
        var $167=HEAP[$val_i]; //@line 1148 "xmltok.c"
        var $168=$enc_addr_i; //@line 1148 "xmltok.c"
        var $169=FUNCTION_TABLE[$160]($168, $167, $166, _KW_no); //@line 1148 "xmltok.c"
        var $170=($169)!=0; //@line 1148 "xmltok.c"
        if ($170) { __label__ = 38; break; } else { __label__ = 40; break; } //@line 1148 "xmltok.c"
      case 38: // $bb38_i
        var $171=$standalone_addr_i; //@line 1149 "xmltok.c"
        var $172=($171)!=0; //@line 1149 "xmltok.c"
        if ($172) { __label__ = 39; break; } else { __label__ = 36; break; } //@line 1149 "xmltok.c"
      case 39: // $bb39_i
        var $173=$standalone_addr_i; //@line 1150 "xmltok.c"
        HEAP[$173]=0; //@line 1150 "xmltok.c"
        __label__ = 36; break; //@line 1150 "xmltok.c"
      case 40: // $bb41_i
        var $174=HEAP[$val_i]; //@line 1153 "xmltok.c"
        var $175=$badPtr_addr_i; //@line 1153 "xmltok.c"
        HEAP[$175]=$174; //@line 1153 "xmltok.c"
        $3=0; //@line 1154 "xmltok.c"
        __label__ = 48; break; //@line 1154 "xmltok.c"
      case 41: // $bb43_i
        $0=1; //@line 959 "xmltok.c"
        $retval_i18_i=1; //@line 959 "xmltok.c"
        var $176=HEAP[$ptr_addr_i]; //@line 1157 "xmltok.c"
        var $177=$enc_addr_i; //@line 1157 "xmltok.c"
        var $178=$177+64; //@line 1157 "xmltok.c"
        var $179=HEAP[$178]; //@line 1157 "xmltok.c"
        var $180=$176+$179; //@line 1157 "xmltok.c"
        HEAP[$ptr_addr_i]=$180; //@line 1157 "xmltok.c"
        __label__ = 42; break; //@line 1157 "xmltok.c"
      case 42: // $bb44_i
        var $181=HEAP[$ptr_addr_i]; //@line 1156 "xmltok.c"
        var $182=$enc_addr_i; //@line 1156 "xmltok.c"
        var $183=$end_addr_i; //@line 1156 "xmltok.c"
        $enc_addr_i6_i=$182;
        HEAP[$ptr_addr_i7_i]=$181;
        $end_addr_i8_i=$183;
        HEAP[$p_i11_i]=$buf1_i12_i; //@line 943 "xmltok.c"
        var $184=$enc_addr_i6_i; //@line 944 "xmltok.c"
        var $185=$184+56; //@line 944 "xmltok.c"
        var $186=HEAP[$185]; //@line 944 "xmltok.c"
        var $187=HEAP[$p_i11_i]; //@line 944 "xmltok.c"
        var $188=$187+1; //@line 944 "xmltok.c"
        var $189=$enc_addr_i6_i; //@line 944 "xmltok.c"
        var $190=$end_addr_i8_i; //@line 944 "xmltok.c"
        FUNCTION_TABLE[$186]($189, $ptr_addr_i7_i, $190, $p_i11_i, $188); //@line 944 "xmltok.c"
        var $191=HEAP[$p_i11_i]; //@line 945 "xmltok.c"
        var $192=($buf2_i13_i)==($191); //@line 945 "xmltok.c"
        if ($192) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 945 "xmltok.c"
      case 43: // $toAscii_exit17_thread_i
        $1=-1; //@line 946 "xmltok.c"
        $retval_i9_i=-1; //@line 946 "xmltok.c"
        $c_addr_i_i=-1;
        __label__ = 45; break;
      case 44: // $toAscii_exit17_i
        var $193=HEAP[$157]; //@line 948 "xmltok.c"
        var $194=($193); //@line 948 "xmltok.c"
        $1=$194; //@line 948 "xmltok.c"
        $retval_i9_i=$194; //@line 946 "xmltok.c"
        $c_addr_i_i=$194;
        if ($194 == 9) {
          __label__ = 41; break;
        }
        else if ($194 == 10) {
          __label__ = 41; break;
        }
        else if ($194 == 13) {
          __label__ = 41; break;
        }
        else if ($194 == 32) {
          __label__ = 41; break;
        }
        else {
        __label__ = 45; break;
        }
        
      case 45: // $bb45_i
        $0=0; //@line 961 "xmltok.c"
        $retval_i18_i=0; //@line 959 "xmltok.c"
        var $195=HEAP[$ptr_addr_i]; //@line 1157 "xmltok.c"
        var $196=$end_addr_i; //@line 1158 "xmltok.c"
        var $197=($195)!=($196); //@line 1158 "xmltok.c"
        if ($197) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 1158 "xmltok.c"
      case 46: // $bb46_i
        var $198=HEAP[$ptr_addr_i]; //@line 1159 "xmltok.c"
        var $199=$badPtr_addr_i; //@line 1159 "xmltok.c"
        HEAP[$199]=$198; //@line 1159 "xmltok.c"
        $3=0; //@line 1160 "xmltok.c"
        __label__ = 48; break; //@line 1160 "xmltok.c"
      case 47: // $bb47_i
        $3=1; //@line 1162 "xmltok.c"
        __label__ = 48; break; //@line 1162 "xmltok.c"
      case 48: // $doParseXmlDecl_exit
        var $200=$3; //@line 1096 "xmltok.c"
        $retval_i=$200; //@line 1096 "xmltok.c"
        var $retval49_i=$retval_i; //@line 1096 "xmltok.c"
        $4=$retval49_i; //@line 95 "xmltok_ns.c"
        var $201=$4; //@line 95 "xmltok_ns.c"
        $retval=$201; //@line 95 "xmltok_ns.c"
        var $retval1=$retval; //@line 95 "xmltok_ns.c"
        STACKTOP = __stackBase__;
        return $retval1; //@line 95 "xmltok_ns.c"
      default: assert(0, "bad label: " + __label__);
    }
  }
  
FUNCTION_TABLE = FUNCTION_TABLE.concat([0,0,_conv_string_to_unicode,0,_conv_string_to_utf8,0,_error_external_entity_ref_handler,0,_noop_character_data_handler,0,_PyUnknownEncodingHandler,0,_XML_ErrorString,0,_XML_GetErrorCode,0,_XML_GetCurrentColumnNumber,0,_XML_GetCurrentLineNumber,0,_XML_Parse,0,_XML_ParserCreate_MM,0,_XML_ParserFree,0,_XML_SetCharacterDataHandler,0,_XML_SetCommentHandler,0,_XML_SetDefaultHandlerExpand,0,_XML_SetElementHandler,0,_XML_SetNamespaceDeclHandler,0,_XML_SetProcessingInstructionHandler,0,_XML_SetUnknownEncodingHandler,0,_XML_SetUserData,0,_malloc,0,_realloc,0,_free,0,_prologInitProcessor,0,_prolog0,0,_externalEntityInitProcessor,0,_errorProcessor,0,_externalEntityInitProcessor2,0,_externalEntityInitProcessor3,0,_externalEntityContentProcessor,0,_internalEntityProcessor,0,_cdataSectionProcessor,0,_contentProcessor,0,_prologProcessor,0,_epilogProcessor,0,_prolog1,0,_doctype0,0,_error,0,_doctype1,0,_internalSubset,0,_prolog2,0,_doctype3,0,_doctype2,0,_doctype4,0,_entity0,0,_attlist0,0,_element0,0,_notation0,0,_doctype5,0,_entity1,0,_entity2,0,_entity7,0,_entity4,0,_entity3,0,_declClose,0,_entity5,0,_entity6,0,_entity9,0,_entity8,0,_entity10,0,_notation1,0,_notation3,0,_notation2,0,_notation4,0,_attlist1,0,_attlist2,0,_attlist8,0,_attlist5,0,_attlist3,0,_attlist4,0,_attlist6,0,_attlist7,0,_attlist9,0,_element1,0,_element2,0,_element3,0,_element6,0,_element7,0,_element4,0,_element5,0,_unknown_isName,0,_unknown_isNmstrt,0,_unknown_isInvalid,0,_unknown_toUtf8,0,_unknown_toUtf16,0,_initScanProlog,0,_initScanContent,0,_initUpdatePosition,0,_findEncoding,0,_xmlparse_Parse,0,_xmlparse_ParseFile,0,_xmlparse_SetBase,0,_xmlparse_GetBase,0,_xmlparse_ExternalEntityParserCreate,0,_xmlparse_SetParamEntityParsing,0,_xmlparse_GetInputContext,0,_xmlparse_UseForeignDTD,0,_xmlparse_dealloc,0,_xmlparse_getattr,0,_xmlparse_setattr,0,_xmlparse_traverse,0,_xmlparse_clear,0,_pyexpat_ParserCreate,0,_pyexpat_ErrorString,0,_XML_SetStartElementHandler,0,_my_StartElementHandler,0,_XML_SetEndElementHandler,0,_my_EndElementHandler,0,_my_ProcessingInstructionHandler,0,_my_CharacterDataHandler,0,_XML_SetUnparsedEntityDeclHandler,0,_my_UnparsedEntityDeclHandler,0,_XML_SetNotationDeclHandler,0,_my_NotationDeclHandler,0,_XML_SetStartNamespaceDeclHandler,0,_my_StartNamespaceDeclHandler,0,_XML_SetEndNamespaceDeclHandler,0,_my_EndNamespaceDeclHandler,0,_my_CommentHandler,0,_XML_SetStartCdataSectionHandler,0,_my_StartCdataSectionHandler,0,_XML_SetEndCdataSectionHandler,0,_my_EndCdataSectionHandler,0,_XML_SetDefaultHandler,0,_my_DefaultHandler,0,_my_DefaultHandlerExpandHandler,0,_XML_SetNotStandaloneHandler,0,_my_NotStandaloneHandler,0,_XML_SetExternalEntityRefHandler,0,_my_ExternalEntityRefHandler,0,_XML_SetStartDoctypeDeclHandler,0,_my_StartDoctypeDeclHandler,0,_XML_SetEndDoctypeDeclHandler,0,_my_EndDoctypeDeclHandler,0,_XML_SetEntityDeclHandler,0,_my_EntityDeclHandler,0,_XML_SetXmlDeclHandler,0,_my_XmlDeclHandler,0,_XML_SetElementDeclHandler,0,_my_ElementDeclHandler,0,_XML_SetAttlistDeclHandler,0,_my_AttlistDeclHandler,0,_XML_SetSkippedEntityHandler,0,_my_SkippedEntityHandler,0,_normal_prologTok,0,_normal_contentTok,0,_normal_cdataSectionTok,0,_normal_attributeValueTok,0,_normal_entityValueTok,0,_normal_sameName,0,_normal_nameMatchesAscii,0,_normal_nameLength,0,_normal_skipS,0,_normal_getAtts,0,_normal_charRefNumber,0,_normal_predefinedEntityName,0,_normal_updatePosition,0,_normal_isPublicId,0,_utf8_toUtf8,0,_utf8_toUtf16,0,_utf8_isName2,0,_utf8_isName3,0,_isNever,0,_utf8_isNmstrt2,0,_utf8_isNmstrt3,0,_utf8_isInvalid2,0,_utf8_isInvalid3,0,_utf8_isInvalid4,0,_latin1_toUtf8,0,_latin1_toUtf16,0,_ascii_toUtf8,0,_little2_prologTok,0,_little2_contentTok,0,_little2_cdataSectionTok,0,_little2_attributeValueTok,0,_little2_entityValueTok,0,_little2_sameName,0,_little2_nameMatchesAscii,0,_little2_nameLength,0,_little2_skipS,0,_little2_getAtts,0,_little2_charRefNumber,0,_little2_predefinedEntityName,0,_little2_updatePosition,0,_little2_isPublicId,0,_little2_toUtf8,0,_little2_toUtf16,0,_big2_prologTok,0,_big2_contentTok,0,_big2_cdataSectionTok,0,_big2_attributeValueTok,0,_big2_entityValueTok,0,_big2_sameName,0,_big2_nameMatchesAscii,0,_big2_nameLength,0,_big2_skipS,0,_big2_getAtts,0,_big2_charRefNumber,0,_big2_predefinedEntityName,0,_big2_updatePosition,0,_big2_isPublicId,0,_big2_toUtf8,0,_big2_toUtf16,0]);

// === Auto-generated postamble setup entry stuff ===

function run(args) {
  
__str=allocate([37,46,50,48,48,115,58,32,108,105,110,101,32,37,105,44,32,99,111,108,117,109,110,32,37,105,0] /* %.200s: line %i, col */, "i8", ALLOC_NORMAL);
_ErrorObject=allocate(1, "%struct.PyObject*", ALLOC_NORMAL);
__str1=allocate([115,0] /* s\00 */, "i8", ALLOC_NORMAL);
__str2=allocate([99,111,100,101,0] /* code\00 */, "i8", ALLOC_NORMAL);
__str3=allocate([111,102,102,115,101,116,0] /* offset\00 */, "i8", ALLOC_NORMAL);
__str4=allocate([108,105,110,101,110,111,0] /* lineno\00 */, "i8", ALLOC_NORMAL);
__str5=allocate([115,116,114,105,99,116,0] /* strict\00 */, "i8", ALLOC_NORMAL);
__str6=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,112,121,101,120,112,97,116,46,99,0] /* ../cpython/Modules/p */, "i8", ALLOC_NORMAL);
__str7=allocate([67,104,97,114,97,99,116,101,114,68,97,116,97,0] /* CharacterData\00 */, "i8", ALLOC_NORMAL);
__str8=allocate([40,78,78,41,0] /* (NN)\00 */, "i8", ALLOC_NORMAL);
__str9=allocate([83,116,97,114,116,69,108,101,109,101,110,116,0] /* StartElement\00 */, "i8", ALLOC_NORMAL);
__str10=allocate([40,78,41,0] /* (N)\00 */, "i8", ALLOC_NORMAL);
__str11=allocate([69,110,100,69,108,101,109,101,110,116,0] /* EndElement\00 */, "i8", ALLOC_NORMAL);
__str12=allocate([40,78,79,38,41,0] /* (NO&)\00 */, "i8", ALLOC_NORMAL);
__str13=allocate([80,114,111,99,101,115,115,105,110,103,73,110,115,116,114,117,99,116,105,111,110,0] /* ProcessingInstructio */, "i8", ALLOC_NORMAL);
__str14=allocate([40,78,78,78,78,78,41,0] /* (NNNNN)\00 */, "i8", ALLOC_NORMAL);
__str15=allocate([85,110,112,97,114,115,101,100,69,110,116,105,116,121,68,101,99,108,0] /* UnparsedEntityDecl\0 */, "i8", ALLOC_NORMAL);
__str16=allocate([78,105,78,78,78,78,78,0] /* NiNNNNN\00 */, "i8", ALLOC_NORMAL);
__str17=allocate([69,110,116,105,116,121,68,101,99,108,0] /* EntityDecl\00 */, "i8", ALLOC_NORMAL);
__str18=allocate([40,79,38,79,38,105,41,0] /* (O&O&i)\00 */, "i8", ALLOC_NORMAL);
__str19=allocate([88,109,108,68,101,99,108,0] /* XmlDecl\00 */, "i8", ALLOC_NORMAL);
__str20=allocate([109,111,100,101,108,45,62,110,117,109,99,104,105,108,100,114,101,110,32,60,32,50,49,52,55,52,56,51,54,52,55,0] /* model->numchildren < */, "i8", ALLOC_NORMAL);
___PRETTY_FUNCTION___9748=allocate([99,111,110,118,95,99,111,110,116,101,110,116,95,109,111,100,101,108,0] /* conv_content_model\0 */, "i8", ALLOC_NORMAL);
__str21=allocate([40,105,105,79,38,78,41,0] /* (iiO&N)\00 */, "i8", ALLOC_NORMAL);
__str22=allocate([78,78,0] /* NN\00 */, "i8", ALLOC_NORMAL);
__str23=allocate([69,108,101,109,101,110,116,68,101,99,108,0] /* ElementDecl\00 */, "i8", ALLOC_NORMAL);
__str24=allocate([40,78,78,79,38,79,38,105,41,0] /* (NNO&O&i)\00 */, "i8", ALLOC_NORMAL);
__str25=allocate([65,116,116,108,105,115,116,68,101,99,108,0] /* AttlistDecl\00 */, "i8", ALLOC_NORMAL);
__str26=allocate([78,105,0] /* Ni\00 */, "i8", ALLOC_NORMAL);
__str27=allocate([83,107,105,112,112,101,100,69,110,116,105,116,121,0] /* SkippedEntity\00 */, "i8", ALLOC_NORMAL);
__str28=allocate([40,78,78,78,78,41,0] /* (NNNN)\00 */, "i8", ALLOC_NORMAL);
__str29=allocate([78,111,116,97,116,105,111,110,68,101,99,108,0] /* NotationDecl\00 */, "i8", ALLOC_NORMAL);
__str30=allocate([83,116,97,114,116,78,97,109,101,115,112,97,99,101,68,101,99,108,0] /* StartNamespaceDecl\0 */, "i8", ALLOC_NORMAL);
__str31=allocate([69,110,100,78,97,109,101,115,112,97,99,101,68,101,99,108,0] /* EndNamespaceDecl\00 */, "i8", ALLOC_NORMAL);
__str32=allocate([40,79,38,41,0] /* (O&)\00 */, "i8", ALLOC_NORMAL);
__str33=allocate([67,111,109,109,101,110,116,0] /* Comment\00 */, "i8", ALLOC_NORMAL);
__str34=allocate([40,41,0] /* ()\00 */, "i8", ALLOC_NORMAL);
__str35=allocate([83,116,97,114,116,67,100,97,116,97,83,101,99,116,105,111,110,0] /* StartCdataSection\00 */, "i8", ALLOC_NORMAL);
__str36=allocate([69,110,100,67,100,97,116,97,83,101,99,116,105,111,110,0] /* EndCdataSection\00 */, "i8", ALLOC_NORMAL);
__str37=allocate([68,101,102,97,117,108,116,0] /* Default\00 */, "i8", ALLOC_NORMAL);
__str38=allocate([68,101,102,97,117,108,116,72,97,110,100,108,101,114,69,120,112,97,110,100,0] /* DefaultHandlerExpand */, "i8", ALLOC_NORMAL);
__str39=allocate([78,111,116,83,116,97,110,100,97,108,111,110,101,0] /* NotStandalone\00 */, "i8", ALLOC_NORMAL);
__str40=allocate([40,79,38,78,78,78,41,0] /* (O&NNN)\00 */, "i8", ALLOC_NORMAL);
__str41=allocate([69,120,116,101,114,110,97,108,69,110,116,105,116,121,82,101,102,0] /* ExternalEntityRef\00 */, "i8", ALLOC_NORMAL);
__str42=allocate([40,78,78,78,105,41,0] /* (NNNi)\00 */, "i8", ALLOC_NORMAL);
__str43=allocate([83,116,97,114,116,68,111,99,116,121,112,101,68,101,99,108,0] /* StartDoctypeDecl\00 */, "i8", ALLOC_NORMAL);
__str44=allocate([69,110,100,68,111,99,116,121,112,101,68,101,99,108,0] /* EndDoctypeDecl\00 */, "i8", ALLOC_NORMAL);
_xmlparse_Parse__doc__=allocate([80,97,114,115,101,40,100,97,116,97,91,44,32,105,115,102,105,110,97,108,93,41,10,80,97,114,115,101,32,88,77,76,32,100,97,116,97,46,32,32,96,105,115,102,105,110,97,108,39,32,115,104,111,117,108,100,32,98,101,32,116,114,117,101,32,97,116,32,101,110,100,32,111,102,32,105,110,112,117,116,46,0] /* Parse(data[, isfinal */, "i8", ALLOC_NORMAL);
__str45=allocate([115,35,124,105,58,80,97,114,115,101,0] /* s#|i:Parse\00 */, "i8", ALLOC_NORMAL);
__str46=allocate([114,101,97,100,40,41,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,115,116,114,105,110,103,32,111,98,106,101,99,116,32,40,116,121,112,101,61,37,46,52,48,48,115,41,0] /* read() did not retur */, "i8", ALLOC_NORMAL);
__str47=allocate([114,101,97,100,40,41,32,114,101,116,117,114,110,101,100,32,116,111,111,32,109,117,99,104,32,100,97,116,97,58,32,37,105,32,98,121,116,101,115,32,114,101,113,117,101,115,116,101,100,44,32,37,105,32,114,101,116,117,114,110,101,100,0] /* read() returned too  */, "i8", ALLOC_NORMAL);
_xmlparse_ParseFile__doc__=allocate([80,97,114,115,101,70,105,108,101,40,102,105,108,101,41,10,80,97,114,115,101,32,88,77,76,32,100,97,116,97,32,102,114,111,109,32,102,105,108,101,45,108,105,107,101,32,111,98,106,101,99,116,46,0] /* ParseFile(file)\0APa */, "i8", ALLOC_NORMAL);
__str48=allocate([114,101,97,100,0] /* read\00 */, "i8", ALLOC_NORMAL);
__str49=allocate([97,114,103,117,109,101,110,116,32,109,117,115,116,32,104,97,118,101,32,39,114,101,97,100,39,32,97,116,116,114,105,98,117,116,101,0] /* argument must have ' */, "i8", ALLOC_NORMAL);
_xmlparse_SetBase__doc__=allocate([83,101,116,66,97,115,101,40,98,97,115,101,95,117,114,108,41,10,83,101,116,32,116,104,101,32,98,97,115,101,32,85,82,76,32,102,111,114,32,116,104,101,32,112,97,114,115,101,114,46,0] /* SetBase(base_url)\0A */, "i8", ALLOC_NORMAL);
__str50=allocate([115,58,83,101,116,66,97,115,101,0] /* s:SetBase\00 */, "i8", ALLOC_NORMAL);
_xmlparse_GetBase__doc__=allocate([71,101,116,66,97,115,101,40,41,32,45,62,32,117,114,108,10,82,101,116,117,114,110,32,98,97,115,101,32,85,82,76,32,115,116,114,105,110,103,32,102,111,114,32,116,104,101,32,112,97,114,115,101,114,46,0] /* GetBase() -> url\0AR */, "i8", ALLOC_NORMAL);
__str51=allocate([122,0] /* z\00 */, "i8", ALLOC_NORMAL);
_xmlparse_GetInputContext__doc__=allocate([71,101,116,73,110,112,117,116,67,111,110,116,101,120,116,40,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,32,116,104,101,32,117,110,116,114,97,110,115,108,97,116,101,100,32,116,101,120,116,32,111,102,32,116,104,101,32,105,110,112,117,116,32,116,104,97,116,32,99,97,117,115,101,100,32,116,104,101,32,99,117,114,114,101,110,116,32,101,118,101,110,116,46,10,73,102,32,116,104,101,32,101,118,101,110,116,32,119,97,115,32,103,101,110,101,114,97,116,101,100,32,98,121,32,97,32,108,97,114,103,101,32,97,109,111,117,110,116,32,111,102,32,116,101,120,116,32,40,115,117,99,104,32,97,115,32,97,32,115,116,97,114,116,32,116,97,103,10,102,111,114,32,97,110,32,101,108,101,109,101,110,116,32,119,105,116,104,32,109,97,110,121,32,97,116,116,114,105,98,117,116,101,115,41,44,32,110,111,116,32,97,108,108,32,111,102,32,116,104,101,32,116,101,120,116,32,109,97,121,32,98,101,32,97,118,97,105,108,97,98,108,101,46,0] /* GetInputContext() -> */, "i8", ALLOC_NORMAL);
_xmlparse_ExternalEntityParserCreate__doc__=allocate([69,120,116,101,114,110,97,108,69,110,116,105,116,121,80,97,114,115,101,114,67,114,101,97,116,101,40,99,111,110,116,101,120,116,91,44,32,101,110,99,111,100,105,110,103,93,41,10,67,114,101,97,116,101,32,97,32,112,97,114,115,101,114,32,102,111,114,32,112,97,114,115,105,110,103,32,97,110,32,101,120,116,101,114,110,97,108,32,101,110,116,105,116,121,32,98,97,115,101,100,32,111,110,32,116,104,101,10,105,110,102,111,114,109,97,116,105,111,110,32,112,97,115,115,101,100,32,116,111,32,116,104,101,32,69,120,116,101,114,110,97,108,69,110,116,105,116,121,82,101,102,72,97,110,100,108,101,114,46,0] /* ExternalEntityParser */, "i8", ALLOC_NORMAL);
__str52=allocate([122,124,115,58,69,120,116,101,114,110,97,108,69,110,116,105,116,121,80,97,114,115,101,114,67,114,101,97,116,101,0] /* z|s:ExternalEntityPa */, "i8", ALLOC_NORMAL);
_xmlparse_SetParamEntityParsing__doc__=allocate([83,101,116,80,97,114,97,109,69,110,116,105,116,121,80,97,114,115,105,110,103,40,102,108,97,103,41,32,45,62,32,115,117,99,99,101,115,115,10,67,111,110,116,114,111,108,115,32,112,97,114,115,105,110,103,32,111,102,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,105,101,115,32,40,105,110,99,108,117,100,105,110,103,32,116,104,101,32,101,120,116,101,114,110,97,108,32,68,84,68,10,115,117,98,115,101,116,41,46,32,80,111,115,115,105,98,108,101,32,102,108,97,103,32,118,97,108,117,101,115,32,97,114,101,32,88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,78,69,86,69,82,44,10,88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,85,78,76,69,83,83,95,83,84,65,78,68,65,76,79,78,69,32,97,110,100,10,88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,65,76,87,65,89,83,46,32,82,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,115,101,116,116,105,110,103,32,116,104,101,32,102,108,97,103,10,119,97,115,32,115,117,99,99,101,115,115,102,117,108,46,0] /* SetParamEntityParsin */, "i8", ALLOC_NORMAL);
__str53=allocate([105,0] /* i\00 */, "i8", ALLOC_NORMAL);
_xmlparse_UseForeignDTD__doc__=allocate([85,115,101,70,111,114,101,105,103,110,68,84,68,40,91,102,108,97,103,93,41,10,65,108,108,111,119,115,32,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,32,116,111,32,112,114,111,118,105,100,101,32,97,110,32,97,114,116,105,102,105,99,105,97,108,32,101,120,116,101,114,110,97,108,32,115,117,98,115,101,116,32,105,102,32,111,110,101,32,105,115,10,110,111,116,32,115,112,101,99,105,102,105,101,100,32,97,115,32,112,97,114,116,32,111,102,32,116,104,101,32,100,111,99,117,109,101,110,116,32,105,110,115,116,97,110,99,101,46,32,32,84,104,105,115,32,114,101,97,100,105,108,121,32,97,108,108,111,119,115,32,116,104,101,10,117,115,101,32,111,102,32,97,32,39,100,101,102,97,117,108,116,39,32,100,111,99,117,109,101,110,116,32,116,121,112,101,32,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,44,32,119,104,105,108,101,32,115,116,105,108,108,10,103,101,116,116,105,110,103,32,116,104,101,32,97,100,118,97,110,116,97,103,101,32,111,102,32,112,114,111,118,105,100,105,110,103,32,100,111,99,117,109,101,110,116,32,116,121,112,101,32,105,110,102,111,114,109,97,116,105,111,110,32,116,111,32,116,104,101,32,112,97,114,115,101,114,46,10,39,102,108,97,103,39,32,100,101,102,97,117,108,116,115,32,116,111,32,84,114,117,101,32,105,102,32,110,111,116,32,112,114,111,118,105,100,101,100,46,0] /* UseForeignDTD([flag] */, "i8", ALLOC_NORMAL);
__str54=allocate([85,115,101,70,111,114,101,105,103,110,68,84,68,0] /* UseForeignDTD\00 */, "i8", ALLOC_NORMAL);
__str55=allocate([80,97,114,115,101,0] /* Parse\00 */, "i8", ALLOC_NORMAL);
__str56=allocate([80,97,114,115,101,70,105,108,101,0] /* ParseFile\00 */, "i8", ALLOC_NORMAL);
__str57=allocate([83,101,116,66,97,115,101,0] /* SetBase\00 */, "i8", ALLOC_NORMAL);
__str58=allocate([71,101,116,66,97,115,101,0] /* GetBase\00 */, "i8", ALLOC_NORMAL);
__str59=allocate([69,120,116,101,114,110,97,108,69,110,116,105,116,121,80,97,114,115,101,114,67,114,101,97,116,101,0] /* ExternalEntityParser */, "i8", ALLOC_NORMAL);
__str60=allocate([83,101,116,80,97,114,97,109,69,110,116,105,116,121,80,97,114,115,105,110,103,0] /* SetParamEntityParsin */, "i8", ALLOC_NORMAL);
__str61=allocate([71,101,116,73,110,112,117,116,67,111,110,116,101,120,116,0] /* GetInputContext\00 */, "i8", ALLOC_NORMAL);
_xmlparse_methods=allocate([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_template_string=allocate(1, "%struct.PyObject*", ALLOC_NORMAL);
_template_buffer=allocate(257, "i8", ALLOC_NORMAL);
__str62=allocate([114,101,112,108,97,99,101,0] /* replace\00 */, "i8", ALLOC_NORMAL);
__str63=allocate([88,77,76,95,80,97,114,115,101,114,67,114,101,97,116,101,32,102,97,105,108,101,100,0] /* XML_ParserCreate fai */, "i8", ALLOC_NORMAL);
__str64=allocate([69,114,114,111,114,67,111,100,101,0] /* ErrorCode\00 */, "i8", ALLOC_NORMAL);
__str65=allocate([69,114,114,111,114,76,105,110,101,78,117,109,98,101,114,0] /* ErrorLineNumber\00 */, "i8", ALLOC_NORMAL);
__str66=allocate([69,114,114,111,114,67,111,108,117,109,110,78,117,109,98,101,114,0] /* ErrorColumnNumber\00 */, "i8", ALLOC_NORMAL);
__str67=allocate([69,114,114,111,114,66,121,116,101,73,110,100,101,120,0] /* ErrorByteIndex\00 */, "i8", ALLOC_NORMAL);
__str68=allocate([67,117,114,114,101,110,116,76,105,110,101,78,117,109,98,101,114,0] /* CurrentLineNumber\00 */, "i8", ALLOC_NORMAL);
__str69=allocate([67,117,114,114,101,110,116,67,111,108,117,109,110,78,117,109,98,101,114,0] /* CurrentColumnNumber\ */, "i8", ALLOC_NORMAL);
__str70=allocate([67,117,114,114,101,110,116,66,121,116,101,73,110,100,101,120,0] /* CurrentByteIndex\00 */, "i8", ALLOC_NORMAL);
__str71=allocate([98,117,102,102,101,114,95,115,105,122,101,0] /* buffer_size\00 */, "i8", ALLOC_NORMAL);
__str72=allocate([98,117,102,102,101,114,95,116,101,120,116,0] /* buffer_text\00 */, "i8", ALLOC_NORMAL);
__str73=allocate([98,117,102,102,101,114,95,117,115,101,100,0] /* buffer_used\00 */, "i8", ALLOC_NORMAL);
__str74=allocate([110,97,109,101,115,112,97,99,101,95,112,114,101,102,105,120,101,115,0] /* namespace_prefixes\0 */, "i8", ALLOC_NORMAL);
__str75=allocate([111,114,100,101,114,101,100,95,97,116,116,114,105,98,117,116,101,115,0] /* ordered_attributes\0 */, "i8", ALLOC_NORMAL);
__str76=allocate([114,101,116,117,114,110,115,95,117,110,105,99,111,100,101,0] /* returns_unicode\00 */, "i8", ALLOC_NORMAL);
__str77=allocate([115,112,101,99,105,102,105,101,100,95,97,116,116,114,105,98,117,116,101,115,0] /* specified_attributes */, "i8", ALLOC_NORMAL);
__str78=allocate([105,110,116,101,114,110,0] /* intern\00 */, "i8", ALLOC_NORMAL);
__str79=allocate([95,95,109,101,109,98,101,114,115,95,95,0] /* __members__\00 */, "i8", ALLOC_NORMAL);
__str80=allocate([67,97,110,110,111,116,32,100,101,108,101,116,101,32,97,116,116,114,105,98,117,116,101,0] /* Cannot delete attrib */, "i8", ALLOC_NORMAL);
__str81=allocate([98,117,102,102,101,114,95,115,105,122,101,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,0] /* buffer_size must be  */, "i8", ALLOC_NORMAL);
__str82=allocate([98,117,102,102,101,114,95,115,105,122,101,32,109,117,115,116,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,122,101,114,111,0] /* buffer_size must be  */, "i8", ALLOC_NORMAL);
__str83=allocate([67,104,97,114,97,99,116,101,114,68,97,116,97,72,97,110,100,108,101,114,0] /* CharacterDataHandler */, "i8", ALLOC_NORMAL);
_Xmlparsetype__doc__=allocate([88,77,76,32,112,97,114,115,101,114,0] /* XML parser\00 */, "i8", ALLOC_NORMAL);
__str84=allocate([112,121,101,120,112,97,116,46,120,109,108,112,97,114,115,101,114,0] /* pyexpat.xmlparser\00 */, "i8", ALLOC_NORMAL);
_Xmlparsetype=allocate([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147947, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_pyexpat_ParserCreate__doc__=allocate([80,97,114,115,101,114,67,114,101,97,116,101,40,91,101,110,99,111,100,105,110,103,91,44,32,110,97,109,101,115,112,97,99,101,95,115,101,112,97,114,97,116,111,114,93,93,41,32,45,62,32,112,97,114,115,101,114,10,82,101,116,117,114,110,32,97,32,110,101,119,32,88,77,76,32,112,97,114,115,101,114,32,111,98,106,101,99,116,46,0] /* ParserCreate([encodi */, "i8", ALLOC_NORMAL);
__str85=allocate([124,122,122,79,58,80,97,114,115,101,114,67,114,101,97,116,101,0] /* |zzO:ParserCreate\00 */, "i8", ALLOC_NORMAL);
_kwlist_11531=allocate(16, "i8*", ALLOC_NORMAL);
__str86=allocate([101,110,99,111,100,105,110,103,0] /* encoding\00 */, "i8", ALLOC_NORMAL);
__str87=allocate([110,97,109,101,115,112,97,99,101,95,115,101,112,97,114,97,116,111,114,0] /* namespace_separator\ */, "i8", ALLOC_NORMAL);
__str88=allocate([110,97,109,101,115,112,97,99,101,95,115,101,112,97,114,97,116,111,114,32,109,117,115,116,32,98,101,32,97,116,32,109,111,115,116,32,111,110,101,32,99,104,97,114,97,99,116,101,114,44,32,111,109,105,116,116,101,100,44,32,111,114,32,78,111,110,101,0] /* namespace_separator  */, "i8", ALLOC_NORMAL);
__str89=allocate([105,110,116,101,114,110,32,109,117,115,116,32,98,101,32,97,32,100,105,99,116,105,111,110,97,114,121,0] /* intern must be a dic */, "i8", ALLOC_NORMAL);
_pyexpat_ErrorString__doc__=allocate([69,114,114,111,114,83,116,114,105,110,103,40,101,114,114,110,111,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,115,32,115,116,114,105,110,103,32,101,114,114,111,114,32,102,111,114,32,103,105,118,101,110,32,110,117,109,98,101,114,46,0] /* ErrorString(errno) - */, "i8", ALLOC_NORMAL);
__str90=allocate([108,58,69,114,114,111,114,83,116,114,105,110,103,0] /* l:ErrorString\00 */, "i8", ALLOC_NORMAL);
_pyexpat_methods=allocate([0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0], ALLOC_NORMAL);
__str91=allocate([80,97,114,115,101,114,67,114,101,97,116,101,0] /* ParserCreate\00 */, "i8", ALLOC_NORMAL);
__str92=allocate([69,114,114,111,114,83,116,114,105,110,103,0] /* ErrorString\00 */, "i8", ALLOC_NORMAL);
_pyexpat_module_documentation=allocate([80,121,116,104,111,110,32,119,114,97,112,112,101,114,32,102,111,114,32,69,120,112,97,116,32,112,97,114,115,101,114,46,0] /* Python wrapper for E */, "i8", ALLOC_NORMAL);
__str93=allocate([112,121,101,120,112,97,116,46,101,114,114,111,114,115,0] /* pyexpat.errors\00 */, "i8", ALLOC_NORMAL);
__str94=allocate([112,121,101,120,112,97,116,46,109,111,100,101,108,0] /* pyexpat.model\00 */, "i8", ALLOC_NORMAL);
__str95=allocate([112,121,101,120,112,97,116,0] /* pyexpat\00 */, "i8", ALLOC_NORMAL);
__str96=allocate([120,109,108,46,112,97,114,115,101,114,115,46,101,120,112,97,116,46,69,120,112,97,116,69,114,114,111,114,0] /* xml.parsers.expat.Ex */, "i8", ALLOC_NORMAL);
__str97=allocate([101,114,114,111,114,0] /* error\00 */, "i8", ALLOC_NORMAL);
__str98=allocate([69,120,112,97,116,69,114,114,111,114,0] /* ExpatError\00 */, "i8", ALLOC_NORMAL);
__str99=allocate([88,77,76,80,97,114,115,101,114,84,121,112,101,0] /* XMLParserType\00 */, "i8", ALLOC_NORMAL);
__str100=allocate([50,46,55,46,50,0] /* 2.7.2\00 */, "i8", ALLOC_NORMAL);
__str101=allocate([95,95,118,101,114,115,105,111,110,95,95,0] /* __version__\00 */, "i8", ALLOC_NORMAL);
__str102=allocate([69,88,80,65,84,95,86,69,82,83,73,79,78,0] /* EXPAT_VERSION\00 */, "i8", ALLOC_NORMAL);
__str103=allocate([40,105,105,105,41,0] /* (iii)\00 */, "i8", ALLOC_NORMAL);
__str104=allocate([118,101,114,115,105,111,110,95,105,110,102,111,0] /* version_info\00 */, "i8", ALLOC_NORMAL);
__str105=allocate([110,97,116,105,118,101,95,101,110,99,111,100,105,110,103,0] /* native_encoding\00 */, "i8", ALLOC_NORMAL);
__str106=allocate([85,84,70,45,56,0] /* UTF-8\00 */, "i8", ALLOC_NORMAL);
__str107=allocate([109,111,100,117,108,101,115,0] /* modules\00 */, "i8", ALLOC_NORMAL);
__str108=allocate([101,114,114,111,114,115,0] /* errors\00 */, "i8", ALLOC_NORMAL);
__str109=allocate([109,111,100,101,108,0] /* model\00 */, "i8", ALLOC_NORMAL);
__str110=allocate([115,105,0] /* si\00 */, "i8", ALLOC_NORMAL);
__str111=allocate([102,101,97,116,117,114,101,115,0] /* features\00 */, "i8", ALLOC_NORMAL);
__str112=allocate([88,77,76,95,69,82,82,79,82,95,78,79,95,77,69,77,79,82,89,0] /* XML_ERROR_NO_MEMORY\ */, "i8", ALLOC_NORMAL);
__str113=allocate([88,77,76,95,69,82,82,79,82,95,83,89,78,84,65,88,0] /* XML_ERROR_SYNTAX\00 */, "i8", ALLOC_NORMAL);
__str114=allocate([88,77,76,95,69,82,82,79,82,95,78,79,95,69,76,69,77,69,78,84,83,0] /* XML_ERROR_NO_ELEMENT */, "i8", ALLOC_NORMAL);
__str115=allocate([88,77,76,95,69,82,82,79,82,95,73,78,86,65,76,73,68,95,84,79,75,69,78,0] /* XML_ERROR_INVALID_TO */, "i8", ALLOC_NORMAL);
__str116=allocate([88,77,76,95,69,82,82,79,82,95,85,78,67,76,79,83,69,68,95,84,79,75,69,78,0] /* XML_ERROR_UNCLOSED_T */, "i8", ALLOC_NORMAL);
__str117=allocate([88,77,76,95,69,82,82,79,82,95,80,65,82,84,73,65,76,95,67,72,65,82,0] /* XML_ERROR_PARTIAL_CH */, "i8", ALLOC_NORMAL);
__str118=allocate([88,77,76,95,69,82,82,79,82,95,84,65,71,95,77,73,83,77,65,84,67,72,0] /* XML_ERROR_TAG_MISMAT */, "i8", ALLOC_NORMAL);
__str119=allocate([88,77,76,95,69,82,82,79,82,95,68,85,80,76,73,67,65,84,69,95,65,84,84,82,73,66,85,84,69,0] /* XML_ERROR_DUPLICATE_ */, "i8", ALLOC_NORMAL);
__str120=allocate([88,77,76,95,69,82,82,79,82,95,74,85,78,75,95,65,70,84,69,82,95,68,79,67,95,69,76,69,77,69,78,84,0] /* XML_ERROR_JUNK_AFTER */, "i8", ALLOC_NORMAL);
__str121=allocate([88,77,76,95,69,82,82,79,82,95,80,65,82,65,77,95,69,78,84,73,84,89,95,82,69,70,0] /* XML_ERROR_PARAM_ENTI */, "i8", ALLOC_NORMAL);
__str122=allocate([88,77,76,95,69,82,82,79,82,95,85,78,68,69,70,73,78,69,68,95,69,78,84,73,84,89,0] /* XML_ERROR_UNDEFINED_ */, "i8", ALLOC_NORMAL);
__str123=allocate([88,77,76,95,69,82,82,79,82,95,82,69,67,85,82,83,73,86,69,95,69,78,84,73,84,89,95,82,69,70,0] /* XML_ERROR_RECURSIVE_ */, "i8", ALLOC_NORMAL);
__str124=allocate([88,77,76,95,69,82,82,79,82,95,65,83,89,78,67,95,69,78,84,73,84,89,0] /* XML_ERROR_ASYNC_ENTI */, "i8", ALLOC_NORMAL);
__str125=allocate([88,77,76,95,69,82,82,79,82,95,66,65,68,95,67,72,65,82,95,82,69,70,0] /* XML_ERROR_BAD_CHAR_R */, "i8", ALLOC_NORMAL);
__str126=allocate([88,77,76,95,69,82,82,79,82,95,66,73,78,65,82,89,95,69,78,84,73,84,89,95,82,69,70,0] /* XML_ERROR_BINARY_ENT */, "i8", ALLOC_NORMAL);
__str127=allocate([88,77,76,95,69,82,82,79,82,95,65,84,84,82,73,66,85,84,69,95,69,88,84,69,82,78,65,76,95,69,78,84,73,84,89,95,82,69,70,0] /* XML_ERROR_ATTRIBUTE_ */, "i8", ALLOC_NORMAL);
__str128=allocate([88,77,76,95,69,82,82,79,82,95,77,73,83,80,76,65,67,69,68,95,88,77,76,95,80,73,0] /* XML_ERROR_MISPLACED_ */, "i8", ALLOC_NORMAL);
__str129=allocate([88,77,76,95,69,82,82,79,82,95,85,78,75,78,79,87,78,95,69,78,67,79,68,73,78,71,0] /* XML_ERROR_UNKNOWN_EN */, "i8", ALLOC_NORMAL);
__str130=allocate([88,77,76,95,69,82,82,79,82,95,73,78,67,79,82,82,69,67,84,95,69,78,67,79,68,73,78,71,0] /* XML_ERROR_INCORRECT_ */, "i8", ALLOC_NORMAL);
__str131=allocate([88,77,76,95,69,82,82,79,82,95,85,78,67,76,79,83,69,68,95,67,68,65,84,65,95,83,69,67,84,73,79,78,0] /* XML_ERROR_UNCLOSED_C */, "i8", ALLOC_NORMAL);
__str132=allocate([88,77,76,95,69,82,82,79,82,95,69,88,84,69,82,78,65,76,95,69,78,84,73,84,89,95,72,65,78,68,76,73,78,71,0] /* XML_ERROR_EXTERNAL_E */, "i8", ALLOC_NORMAL);
__str133=allocate([88,77,76,95,69,82,82,79,82,95,78,79,84,95,83,84,65,78,68,65,76,79,78,69,0] /* XML_ERROR_NOT_STANDA */, "i8", ALLOC_NORMAL);
__str134=allocate([88,77,76,95,69,82,82,79,82,95,85,78,69,88,80,69,67,84,69,68,95,83,84,65,84,69,0] /* XML_ERROR_UNEXPECTED */, "i8", ALLOC_NORMAL);
__str135=allocate([88,77,76,95,69,82,82,79,82,95,69,78,84,73,84,89,95,68,69,67,76,65,82,69,68,95,73,78,95,80,69,0] /* XML_ERROR_ENTITY_DEC */, "i8", ALLOC_NORMAL);
__str136=allocate([88,77,76,95,69,82,82,79,82,95,70,69,65,84,85,82,69,95,82,69,81,85,73,82,69,83,95,88,77,76,95,68,84,68,0] /* XML_ERROR_FEATURE_RE */, "i8", ALLOC_NORMAL);
__str137=allocate([88,77,76,95,69,82,82,79,82,95,67,65,78,84,95,67,72,65,78,71,69,95,70,69,65,84,85,82,69,95,79,78,67,69,95,80,65,82,83,73,78,71,0] /* XML_ERROR_CANT_CHANG */, "i8", ALLOC_NORMAL);
__str138=allocate([88,77,76,95,69,82,82,79,82,95,85,78,66,79,85,78,68,95,80,82,69,70,73,88,0] /* XML_ERROR_UNBOUND_PR */, "i8", ALLOC_NORMAL);
__str139=allocate([88,77,76,95,69,82,82,79,82,95,85,78,68,69,67,76,65,82,73,78,71,95,80,82,69,70,73,88,0] /* XML_ERROR_UNDECLARIN */, "i8", ALLOC_NORMAL);
__str140=allocate([88,77,76,95,69,82,82,79,82,95,73,78,67,79,77,80,76,69,84,69,95,80,69,0] /* XML_ERROR_INCOMPLETE */, "i8", ALLOC_NORMAL);
__str141=allocate([88,77,76,95,69,82,82,79,82,95,88,77,76,95,68,69,67,76,0] /* XML_ERROR_XML_DECL\0 */, "i8", ALLOC_NORMAL);
__str142=allocate([88,77,76,95,69,82,82,79,82,95,84,69,88,84,95,68,69,67,76,0] /* XML_ERROR_TEXT_DECL\ */, "i8", ALLOC_NORMAL);
__str143=allocate([88,77,76,95,69,82,82,79,82,95,80,85,66,76,73,67,73,68,0] /* XML_ERROR_PUBLICID\0 */, "i8", ALLOC_NORMAL);
__str144=allocate([88,77,76,95,69,82,82,79,82,95,83,85,83,80,69,78,68,69,68,0] /* XML_ERROR_SUSPENDED\ */, "i8", ALLOC_NORMAL);
__str145=allocate([88,77,76,95,69,82,82,79,82,95,78,79,84,95,83,85,83,80,69,78,68,69,68,0] /* XML_ERROR_NOT_SUSPEN */, "i8", ALLOC_NORMAL);
__str146=allocate([88,77,76,95,69,82,82,79,82,95,65,66,79,82,84,69,68,0] /* XML_ERROR_ABORTED\00 */, "i8", ALLOC_NORMAL);
__str147=allocate([88,77,76,95,69,82,82,79,82,95,70,73,78,73,83,72,69,68,0] /* XML_ERROR_FINISHED\0 */, "i8", ALLOC_NORMAL);
__str148=allocate([88,77,76,95,69,82,82,79,82,95,83,85,83,80,69,78,68,95,80,69,0] /* XML_ERROR_SUSPEND_PE */, "i8", ALLOC_NORMAL);
__str149=allocate([95,95,100,111,99,95,95,0] /* __doc__\00 */, "i8", ALLOC_NORMAL);
__str150=allocate([67,111,110,115,116,97,110,116,115,32,117,115,101,100,32,116,111,32,100,101,115,99,114,105,98,101,32,101,114,114,111,114,32,99,111,110,100,105,116,105,111,110,115,46,0] /* Constants used to de */, "i8", ALLOC_NORMAL);
__str151=allocate([88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,78,69,86,69,82,0] /* XML_PARAM_ENTITY_PAR */, "i8", ALLOC_NORMAL);
__str152=allocate([88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,85,78,76,69,83,83,95,83,84,65,78,68,65,76,79,78,69,0] /* XML_PARAM_ENTITY_PAR */, "i8", ALLOC_NORMAL);
__str153=allocate([88,77,76,95,80,65,82,65,77,95,69,78,84,73,84,89,95,80,65,82,83,73,78,71,95,65,76,87,65,89,83,0] /* XML_PARAM_ENTITY_PAR */, "i8", ALLOC_NORMAL);
__str154=allocate([67,111,110,115,116,97,110,116,115,32,117,115,101,100,32,116,111,32,105,110,116,101,114,112,114,101,116,32,99,111,110,116,101,110,116,32,109,111,100,101,108,32,105,110,102,111,114,109,97,116,105,111,110,46,0] /* Constants used to in */, "i8", ALLOC_NORMAL);
__str155=allocate([88,77,76,95,67,84,89,80,69,95,69,77,80,84,89,0] /* XML_CTYPE_EMPTY\00 */, "i8", ALLOC_NORMAL);
__str156=allocate([88,77,76,95,67,84,89,80,69,95,65,78,89,0] /* XML_CTYPE_ANY\00 */, "i8", ALLOC_NORMAL);
__str157=allocate([88,77,76,95,67,84,89,80,69,95,77,73,88,69,68,0] /* XML_CTYPE_MIXED\00 */, "i8", ALLOC_NORMAL);
__str158=allocate([88,77,76,95,67,84,89,80,69,95,78,65,77,69,0] /* XML_CTYPE_NAME\00 */, "i8", ALLOC_NORMAL);
__str159=allocate([88,77,76,95,67,84,89,80,69,95,67,72,79,73,67,69,0] /* XML_CTYPE_CHOICE\00 */, "i8", ALLOC_NORMAL);
__str160=allocate([88,77,76,95,67,84,89,80,69,95,83,69,81,0] /* XML_CTYPE_SEQ\00 */, "i8", ALLOC_NORMAL);
__str161=allocate([88,77,76,95,67,81,85,65,78,84,95,78,79,78,69,0] /* XML_CQUANT_NONE\00 */, "i8", ALLOC_NORMAL);
__str162=allocate([88,77,76,95,67,81,85,65,78,84,95,79,80,84,0] /* XML_CQUANT_OPT\00 */, "i8", ALLOC_NORMAL);
__str163=allocate([88,77,76,95,67,81,85,65,78,84,95,82,69,80,0] /* XML_CQUANT_REP\00 */, "i8", ALLOC_NORMAL);
__str164=allocate([88,77,76,95,67,81,85,65,78,84,95,80,76,85,83,0] /* XML_CQUANT_PLUS\00 */, "i8", ALLOC_NORMAL);
_capi_11610=allocate(80, ["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8* (i32)*",0,0,0,"i32 (%struct.XML_ParserStruct*)*",0,0,0,"i32 (%struct.XML_ParserStruct*)*",0,0,0,"i32 (%struct.XML_ParserStruct*)*",0,0,0,"i32 (%struct.XML_ParserStruct*, i8*, i32, i32)*",0,0,0,"%struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)*",0,0,0,"void (%struct.XML_ParserStruct*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*)*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*",0,0,0,"void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)*",0,0,0,"void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0], ALLOC_NORMAL);
__str165=allocate([112,121,101,120,112,97,116,46,101,120,112,97,116,95,67,65,80,73,32,49,46,48,0] /* pyexpat.expat_CAPI 1 */, "i8", ALLOC_NORMAL);
__str166=allocate([112,121,101,120,112,97,116,46,101,120,112,97,116,95,67,65,80,73,0] /* pyexpat.expat_CAPI\0 */, "i8", ALLOC_NORMAL);
__str167=allocate([101,120,112,97,116,95,67,65,80,73,0] /* expat_CAPI\00 */, "i8", ALLOC_NORMAL);
__str168=allocate([83,116,97,114,116,69,108,101,109,101,110,116,72,97,110,100,108,101,114,0] /* StartElementHandler\ */, "i8", ALLOC_NORMAL);
__str169=allocate([69,110,100,69,108,101,109,101,110,116,72,97,110,100,108,101,114,0] /* EndElementHandler\00 */, "i8", ALLOC_NORMAL);
__str170=allocate([80,114,111,99,101,115,115,105,110,103,73,110,115,116,114,117,99,116,105,111,110,72,97,110,100,108,101,114,0] /* ProcessingInstructio */, "i8", ALLOC_NORMAL);
__str171=allocate([85,110,112,97,114,115,101,100,69,110,116,105,116,121,68,101,99,108,72,97,110,100,108,101,114,0] /* UnparsedEntityDeclHa */, "i8", ALLOC_NORMAL);
__str172=allocate([78,111,116,97,116,105,111,110,68,101,99,108,72,97,110,100,108,101,114,0] /* NotationDeclHandler\ */, "i8", ALLOC_NORMAL);
__str173=allocate([83,116,97,114,116,78,97,109,101,115,112,97,99,101,68,101,99,108,72,97,110,100,108,101,114,0] /* StartNamespaceDeclHa */, "i8", ALLOC_NORMAL);
__str174=allocate([69,110,100,78,97,109,101,115,112,97,99,101,68,101,99,108,72,97,110,100,108,101,114,0] /* EndNamespaceDeclHand */, "i8", ALLOC_NORMAL);
__str175=allocate([67,111,109,109,101,110,116,72,97,110,100,108,101,114,0] /* CommentHandler\00 */, "i8", ALLOC_NORMAL);
__str176=allocate([83,116,97,114,116,67,100,97,116,97,83,101,99,116,105,111,110,72,97,110,100,108,101,114,0] /* StartCdataSectionHan */, "i8", ALLOC_NORMAL);
__str177=allocate([69,110,100,67,100,97,116,97,83,101,99,116,105,111,110,72,97,110,100,108,101,114,0] /* EndCdataSectionHandl */, "i8", ALLOC_NORMAL);
__str178=allocate([68,101,102,97,117,108,116,72,97,110,100,108,101,114,0] /* DefaultHandler\00 */, "i8", ALLOC_NORMAL);
__str179=allocate([78,111,116,83,116,97,110,100,97,108,111,110,101,72,97,110,100,108,101,114,0] /* NotStandaloneHandler */, "i8", ALLOC_NORMAL);
__str180=allocate([69,120,116,101,114,110,97,108,69,110,116,105,116,121,82,101,102,72,97,110,100,108,101,114,0] /* ExternalEntityRefHan */, "i8", ALLOC_NORMAL);
__str181=allocate([83,116,97,114,116,68,111,99,116,121,112,101,68,101,99,108,72,97,110,100,108,101,114,0] /* StartDoctypeDeclHand */, "i8", ALLOC_NORMAL);
__str182=allocate([69,110,100,68,111,99,116,121,112,101,68,101,99,108,72,97,110,100,108,101,114,0] /* EndDoctypeDeclHandle */, "i8", ALLOC_NORMAL);
__str183=allocate([69,110,116,105,116,121,68,101,99,108,72,97,110,100,108,101,114,0] /* EntityDeclHandler\00 */, "i8", ALLOC_NORMAL);
__str184=allocate([88,109,108,68,101,99,108,72,97,110,100,108,101,114,0] /* XmlDeclHandler\00 */, "i8", ALLOC_NORMAL);
__str185=allocate([69,108,101,109,101,110,116,68,101,99,108,72,97,110,100,108,101,114,0] /* ElementDeclHandler\0 */, "i8", ALLOC_NORMAL);
__str186=allocate([65,116,116,108,105,115,116,68,101,99,108,72,97,110,100,108,101,114,0] /* AttlistDeclHandler\0 */, "i8", ALLOC_NORMAL);
__str187=allocate([83,107,105,112,112,101,100,69,110,116,105,116,121,72,97,110,100,108,101,114,0] /* SkippedEntityHandler */, "i8", ALLOC_NORMAL);
_handler_info=allocate(1280, ["i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"void (%struct.XML_ParserStruct*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_implicitContext=allocate([120,109,108,61,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,88,77,76,47,49,57,57,56,47,110,97,109,101,115,112,97,99,101,0] /* xml=http://www.w3.or */, "i8", ALLOC_NORMAL);
__str188=allocate([115,116,97,116,117,115,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0] /* status != ((void _)0 */, "i8", ALLOC_NORMAL);
__str1189=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,101,120,112,97,116,47,120,109,108,112,97,114,115,101,46,99,0] /* ../cpython/Modules/e */, "i8", ALLOC_NORMAL);
___PRETTY_FUNCTION___3675=allocate([80,121,69,120,112,97,116,95,88,77,76,95,71,101,116,80,97,114,115,105,110,103,83,116,97,116,117,115,0] /* PyExpat_XML_GetParsi */, "i8", ALLOC_NORMAL);
_message_3807=allocate(164, "i8*", ALLOC_NORMAL);
__str2190=allocate([111,117,116,32,111,102,32,109,101,109,111,114,121,0] /* out of memory\00 */, "i8", ALLOC_NORMAL);
__str3191=allocate([115,121,110,116,97,120,32,101,114,114,111,114,0] /* syntax error\00 */, "i8", ALLOC_NORMAL);
__str4192=allocate([110,111,32,101,108,101,109,101,110,116,32,102,111,117,110,100,0] /* no element found\00 */, "i8", ALLOC_NORMAL);
__str5193=allocate([110,111,116,32,119,101,108,108,45,102,111,114,109,101,100,32,40,105,110,118,97,108,105,100,32,116,111,107,101,110,41,0] /* not well-formed (inv */, "i8", ALLOC_NORMAL);
__str6194=allocate([117,110,99,108,111,115,101,100,32,116,111,107,101,110,0] /* unclosed token\00 */, "i8", ALLOC_NORMAL);
__str7195=allocate([112,97,114,116,105,97,108,32,99,104,97,114,97,99,116,101,114,0] /* partial character\00 */, "i8", ALLOC_NORMAL);
__str8196=allocate([109,105,115,109,97,116,99,104,101,100,32,116,97,103,0] /* mismatched tag\00 */, "i8", ALLOC_NORMAL);
__str9197=allocate([100,117,112,108,105,99,97,116,101,32,97,116,116,114,105,98,117,116,101,0] /* duplicate attribute\ */, "i8", ALLOC_NORMAL);
__str10198=allocate([106,117,110,107,32,97,102,116,101,114,32,100,111,99,117,109,101,110,116,32,101,108,101,109,101,110,116,0] /* junk after document  */, "i8", ALLOC_NORMAL);
__str11199=allocate([105,108,108,101,103,97,108,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0] /* illegal parameter en */, "i8", ALLOC_NORMAL);
__str12200=allocate([117,110,100,101,102,105,110,101,100,32,101,110,116,105,116,121,0] /* undefined entity\00 */, "i8", ALLOC_NORMAL);
__str13201=allocate([114,101,99,117,114,115,105,118,101,32,101,110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0] /* recursive entity ref */, "i8", ALLOC_NORMAL);
__str14202=allocate([97,115,121,110,99,104,114,111,110,111,117,115,32,101,110,116,105,116,121,0] /* asynchronous entity\ */, "i8", ALLOC_NORMAL);
__str15203=allocate([114,101,102,101,114,101,110,99,101,32,116,111,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,110,117,109,98,101,114,0] /* reference to invalid */, "i8", ALLOC_NORMAL);
__str16204=allocate([114,101,102,101,114,101,110,99,101,32,116,111,32,98,105,110,97,114,121,32,101,110,116,105,116,121,0] /* reference to binary  */, "i8", ALLOC_NORMAL);
__str17205=allocate([114,101,102,101,114,101,110,99,101,32,116,111,32,101,120,116,101,114,110,97,108,32,101,110,116,105,116,121,32,105,110,32,97,116,116,114,105,98,117,116,101,0] /* reference to externa */, "i8", ALLOC_NORMAL);
__str18206=allocate([88,77,76,32,111,114,32,116,101,120,116,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,32,97,116,32,115,116,97,114,116,32,111,102,32,101,110,116,105,116,121,0] /* XML or text declarat */, "i8", ALLOC_NORMAL);
__str19207=allocate([117,110,107,110,111,119,110,32,101,110,99,111,100,105,110,103,0] /* unknown encoding\00 */, "i8", ALLOC_NORMAL);
__str20208=allocate([101,110,99,111,100,105,110,103,32,115,112,101,99,105,102,105,101,100,32,105,110,32,88,77,76,32,100,101,99,108,97,114,97,116,105,111,110,32,105,115,32,105,110,99,111,114,114,101,99,116,0] /* encoding specified i */, "i8", ALLOC_NORMAL);
__str21209=allocate([117,110,99,108,111,115,101,100,32,67,68,65,84,65,32,115,101,99,116,105,111,110,0] /* unclosed CDATA secti */, "i8", ALLOC_NORMAL);
__str22210=allocate([101,114,114,111,114,32,105,110,32,112,114,111,99,101,115,115,105,110,103,32,101,120,116,101,114,110,97,108,32,101,110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0] /* error in processing  */, "i8", ALLOC_NORMAL);
__str23211=allocate([100,111,99,117,109,101,110,116,32,105,115,32,110,111,116,32,115,116,97,110,100,97,108,111,110,101,0] /* document is not stan */, "i8", ALLOC_NORMAL);
__str24212=allocate([117,110,101,120,112,101,99,116,101,100,32,112,97,114,115,101,114,32,115,116,97,116,101,32,45,32,112,108,101,97,115,101,32,115,101,110,100,32,97,32,98,117,103,32,114,101,112,111,114,116,0] /* unexpected parser st */, "i8", ALLOC_NORMAL);
__str25213=allocate([101,110,116,105,116,121,32,100,101,99,108,97,114,101,100,32,105,110,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0] /* entity declared in p */, "i8", ALLOC_NORMAL);
__str26214=allocate([114,101,113,117,101,115,116,101,100,32,102,101,97,116,117,114,101,32,114,101,113,117,105,114,101,115,32,88,77,76,95,68,84,68,32,115,117,112,112,111,114,116,32,105,110,32,69,120,112,97,116,0] /* requested feature re */, "i8", ALLOC_NORMAL);
__str27215=allocate([99,97,110,110,111,116,32,99,104,97,110,103,101,32,115,101,116,116,105,110,103,32,111,110,99,101,32,112,97,114,115,105,110,103,32,104,97,115,32,98,101,103,117,110,0] /* cannot change settin */, "i8", ALLOC_NORMAL);
__str28216=allocate([117,110,98,111,117,110,100,32,112,114,101,102,105,120,0] /* unbound prefix\00 */, "i8", ALLOC_NORMAL);
__str29217=allocate([109,117,115,116,32,110,111,116,32,117,110,100,101,99,108,97,114,101,32,112,114,101,102,105,120,0] /* must not undeclare p */, "i8", ALLOC_NORMAL);
__str30218=allocate([105,110,99,111,109,112,108,101,116,101,32,109,97,114,107,117,112,32,105,110,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0] /* incomplete markup in */, "i8", ALLOC_NORMAL);
__str31219=allocate([88,77,76,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,32,119,101,108,108,45,102,111,114,109,101,100,0] /* XML declaration not  */, "i8", ALLOC_NORMAL);
__str32220=allocate([116,101,120,116,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,32,119,101,108,108,45,102,111,114,109,101,100,0] /* text declaration not */, "i8", ALLOC_NORMAL);
__str33221=allocate([105,108,108,101,103,97,108,32,99,104,97,114,97,99,116,101,114,40,115,41,32,105,110,32,112,117,98,108,105,99,32,105,100,0] /* illegal character(s) */, "i8", ALLOC_NORMAL);
__str34222=allocate([112,97,114,115,101,114,32,115,117,115,112,101,110,100,101,100,0] /* parser suspended\00 */, "i8", ALLOC_NORMAL);
__str35223=allocate([112,97,114,115,101,114,32,110,111,116,32,115,117,115,112,101,110,100,101,100,0] /* parser not suspended */, "i8", ALLOC_NORMAL);
__str36224=allocate([112,97,114,115,105,110,103,32,97,98,111,114,116,101,100,0] /* parsing aborted\00 */, "i8", ALLOC_NORMAL);
__str37225=allocate([112,97,114,115,105,110,103,32,102,105,110,105,115,104,101,100,0] /* parsing finished\00 */, "i8", ALLOC_NORMAL);
__str38226=allocate([99,97,110,110,111,116,32,115,117,115,112,101,110,100,32,105,110,32,101,120,116,101,114,110,97,108,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0] /* cannot suspend in ex */, "i8", ALLOC_NORMAL);
__str39227=allocate([114,101,115,101,114,118,101,100,32,112,114,101,102,105,120,32,40,120,109,108,41,32,109,117,115,116,32,110,111,116,32,98,101,32,117,110,100,101,99,108,97,114,101,100,32,111,114,32,98,111,117,110,100,32,116,111,32,97,110,111,116,104,101,114,32,110,97,109,101,115,112,97,99,101,32,110,97,109,101,0] /* reserved prefix (xml */, "i8", ALLOC_NORMAL);
__str40228=allocate([114,101,115,101,114,118,101,100,32,112,114,101,102,105,120,32,40,120,109,108,110,115,41,32,109,117,115,116,32,110,111,116,32,98,101,32,100,101,99,108,97,114,101,100,32,111,114,32,117,110,100,101,99,108,97,114,101,100,0] /* reserved prefix (xml */, "i8", ALLOC_NORMAL);
__str41229=allocate([112,114,101,102,105,120,32,109,117,115,116,32,110,111,116,32,98,101,32,98,111,117,110,100,32,116,111,32,111,110,101,32,111,102,32,116,104,101,32,114,101,115,101,114,118,101,100,32,110,97,109,101,115,112,97,99,101,32,110,97,109,101,115,0] /* prefix must not be b */, "i8", ALLOC_NORMAL);
__str42230=allocate([101,120,112,97,116,95,50,46,48,46,48,0] /* expat_2.0.0\00 */, "i8", ALLOC_NORMAL);
_features_3829=allocate([6, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0], ALLOC_NORMAL);
__str43231=allocate([115,105,122,101,111,102,40,88,77,76,95,67,104,97,114,41,0] /* sizeof(XML_Char)\00 */, "i8", ALLOC_NORMAL);
__str44232=allocate([115,105,122,101,111,102,40,88,77,76,95,76,67,104,97,114,41,0] /* sizeof(XML_LChar)\00 */, "i8", ALLOC_NORMAL);
_xmlNamespace_5099=allocate([104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,88,77,76,47,49,57,57,56,47,110,97,109,101,115,112,97,99,101,0] /* http://www.w3.org/XM */, "i8", ALLOC_NORMAL);
_xmlnsNamespace_5101=allocate([104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,120,109,108,110,115,47,0] /* http://www.w3.org/20 */, "i8", ALLOC_NORMAL);
_atypeCDATA_5618=allocate([67,68,65,84,65,0] /* CDATA\00 */, "i8", ALLOC_NORMAL);
_atypeID_5619=allocate([73,68,0] /* ID\00 */, "i8", ALLOC_NORMAL);
_atypeIDREF_5620=allocate([73,68,82,69,70,0] /* IDREF\00 */, "i8", ALLOC_NORMAL);
_atypeIDREFS_5621=allocate([73,68,82,69,70,83,0] /* IDREFS\00 */, "i8", ALLOC_NORMAL);
_atypeENTITY_5622=allocate([69,78,84,73,84,89,0] /* ENTITY\00 */, "i8", ALLOC_NORMAL);
_atypeENTITIES_5623=allocate([69,78,84,73,84,73,69,83,0] /* ENTITIES\00 */, "i8", ALLOC_NORMAL);
_atypeNMTOKEN_5624=allocate([78,77,84,79,75,69,78,0] /* NMTOKEN\00 */, "i8", ALLOC_NORMAL);
_atypeNMTOKENS_5625=allocate([78,77,84,79,75,69,78,83,0] /* NMTOKENS\00 */, "i8", ALLOC_NORMAL);
_enumValueSep_5627=allocate([124,0] /* |\00 */, "i8", ALLOC_NORMAL);
_notationPrefix_5626=allocate([78,79,84,65,84,73,79,78,40,0] /* NOTATION(\00 */, "i8", ALLOC_NORMAL);
_enumValueStart_5628=allocate([40,0] /* (\00 */, "i8", ALLOC_NORMAL);
_KW_ANY=allocate([65,78,89,0] /* ANY\00 */, "i8", ALLOC_NORMAL);
_KW_ATTLIST=allocate([65,84,84,76,73,83,84,0] /* ATTLIST\00 */, "i8", ALLOC_NORMAL);
_KW_CDATA=allocate([67,68,65,84,65,0] /* CDATA\00 */, "i8", ALLOC_NORMAL);
_KW_DOCTYPE=allocate([68,79,67,84,89,80,69,0] /* DOCTYPE\00 */, "i8", ALLOC_NORMAL);
_KW_ELEMENT=allocate([69,76,69,77,69,78,84,0] /* ELEMENT\00 */, "i8", ALLOC_NORMAL);
_KW_EMPTY=allocate([69,77,80,84,89,0] /* EMPTY\00 */, "i8", ALLOC_NORMAL);
_KW_ENTITIES=allocate([69,78,84,73,84,73,69,83,0] /* ENTITIES\00 */, "i8", ALLOC_NORMAL);
_KW_ENTITY=allocate([69,78,84,73,84,89,0] /* ENTITY\00 */, "i8", ALLOC_NORMAL);
_KW_FIXED=allocate([70,73,88,69,68,0] /* FIXED\00 */, "i8", ALLOC_NORMAL);
_KW_ID=allocate([73,68,0] /* ID\00 */, "i8", ALLOC_NORMAL);
_KW_IDREF=allocate([73,68,82,69,70,0] /* IDREF\00 */, "i8", ALLOC_NORMAL);
_KW_IDREFS=allocate([73,68,82,69,70,83,0] /* IDREFS\00 */, "i8", ALLOC_NORMAL);
_KW_IMPLIED=allocate([73,77,80,76,73,69,68,0] /* IMPLIED\00 */, "i8", ALLOC_NORMAL);
_KW_NDATA=allocate([78,68,65,84,65,0] /* NDATA\00 */, "i8", ALLOC_NORMAL);
_KW_NMTOKEN=allocate([78,77,84,79,75,69,78,0] /* NMTOKEN\00 */, "i8", ALLOC_NORMAL);
_KW_NMTOKENS=allocate([78,77,84,79,75,69,78,83,0] /* NMTOKENS\00 */, "i8", ALLOC_NORMAL);
_KW_NOTATION=allocate([78,79,84,65,84,73,79,78,0] /* NOTATION\00 */, "i8", ALLOC_NORMAL);
_KW_PCDATA=allocate([80,67,68,65,84,65,0] /* PCDATA\00 */, "i8", ALLOC_NORMAL);
_KW_PUBLIC=allocate([80,85,66,76,73,67,0] /* PUBLIC\00 */, "i8", ALLOC_NORMAL);
_KW_REQUIRED=allocate([82,69,81,85,73,82,69,68,0] /* REQUIRED\00 */, "i8", ALLOC_NORMAL);
_KW_SYSTEM=allocate([83,89,83,84,69,77,0] /* SYSTEM\00 */, "i8", ALLOC_NORMAL);
_types_1870=allocate(32, "i8*", ALLOC_NORMAL);
_namingBitmap=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 67108864, 0, 0, 0, -2013265922, 0, 0, 0, 134217726, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8388609, 0, 0, 0, -8388609, 0, 0, 0, -1, 0, 0, 0, 2146697215, 0, 0, 0, -514, 0, 0, 0, 2147483647, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -8177, 0, 0, 0, -63832065, 0, 0, 0, 16777215, 0, 0, 0, 0, 0, 0, 0, -65536, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -134217217, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10432, 0, 0, 0, -5, 0, 0, 0, 1417641983, 0, 0, 0, 1048573, 0, 0, 0, -8194, 0, 0, 0, -1, 0, 0, 0, -536936449, 0, 0, 0, -1, 0, 0, 0, -65533, 0, 0, 0, -1, 0, 0, 0, -58977, 0, 0, 0, 54513663, 0, 0, 0, 0, 0, 0, 0, -131072, 0, 0, 0, 41943039, 0, 0, 0, -2, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, -65536, 0, 0, 0, 460799, 0, 0, 0, 0, 0, 0, 0, 134217726, 0, 0, 0, 2046, 0, 0, 0, -131072, 0, 0, 0, -1, 0, 0, 0, 2097151999, 0, 0, 0, 3112959, 0, 0, 0, 96, 0, 0, 0, -32, 0, 0, 0, 603979775, 0, 0, 0, -16777216, 0, 0, 0, 3, 0, 0, 0, -417824, 0, 0, 0, 63307263, 0, 0, 0, -1342177280, 0, 0, 0, 196611, 0, 0, 0, -423968, 0, 0, 0, 57540095, 0, 0, 0, 1577058304, 0, 0, 0, 1835008, 0, 0, 0, -282656, 0, 0, 0, 602799615, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -417824, 0, 0, 0, 600702463, 0, 0, 0, -1342177280, 0, 0, 0, 3, 0, 0, 0, -700594208, 0, 0, 0, 62899992, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -139296, 0, 0, 0, 66059775, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, -139296, 0, 0, 0, 66059775, 0, 0, 0, 1073741824, 0, 0, 0, 3, 0, 0, 0, -139296, 0, 0, 0, 67108351, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 884735, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, -17816170, 0, 0, 0, 537750702, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -257, 0, 0, 0, 1023, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -65473, 0, 0, 0, 8388607, 0, 0, 0, 514797, 0, 0, 0, 1342177280, 0, 0, 0, -2110697471, 0, 0, 0, 2908843, 0, 0, 0, 1073741824, 0, 0, 0, -176109312, 0, 0, 0, 7, 0, 0, 0, 33622016, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 268435455, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 67108863, 0, 0, 0, 1061158911, 0, 0, 0, -1, 0, 0, 0, -1426112705, 0, 0, 0, 1073741823, 0, 0, 0, -1, 0, 0, 0, 1608515583, 0, 0, 0, 265232348, 0, 0, 0, 534519807, 0, 0, 0, 0, 0, 0, 0, 19520, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 1022, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 2097151, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 134217727, 0, 0, 0, -32, 0, 0, 0, 8191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134176768, 0, 0, 0, -2013265922, 0, 0, 0, 134217726, 0, 0, 0, 0, 0, 0, 0, 8388608, 0, 0, 0, -8388609, 0, 0, 0, -8388609, 0, 0, 0, 16777215, 0, 0, 0, 0, 0, 0, 0, -65536, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -134217217, 0, 0, 0, 196611, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 63, 0, 0, 0, 3, 0, 0, 0, -10304, 0, 0, 0, -5, 0, 0, 0, 1417641983, 0, 0, 0, 1048573, 0, 0, 0, -8194, 0, 0, 0, -1, 0, 0, 0, -536936449, 0, 0, 0, -1, 0, 0, 0, -65413, 0, 0, 0, -1, 0, 0, 0, -58977, 0, 0, 0, 54513663, 0, 0, 0, 0, 0, 0, 0, -131072, 0, 0, 0, 41943039, 0, 0, 0, -2, 0, 0, 0, -130945, 0, 0, 0, -1140850693, 0, 0, 0, -65514, 0, 0, 0, 460799, 0, 0, 0, 0, 0, 0, 0, 134217726, 0, 0, 0, 524287, 0, 0, 0, -64513, 0, 0, 0, -1, 0, 0, 0, 2097151999, 0, 0, 0, -1081345, 0, 0, 0, 67059199, 0, 0, 0, -18, 0, 0, 0, -201326593, 0, 0, 0, -14794753, 0, 0, 0, 65487, 0, 0, 0, -417810, 0, 0, 0, -741999105, 0, 0, 0, -1333773921, 0, 0, 0, 262095, 0, 0, 0, -423964, 0, 0, 0, -747766273, 0, 0, 0, 1577073031, 0, 0, 0, 2097088, 0, 0, 0, -282642, 0, 0, 0, -202506753, 0, 0, 0, 15295, 0, 0, 0, 65473, 0, 0, 0, -417810, 0, 0, 0, -204603905, 0, 0, 0, -1329579633, 0, 0, 0, 65475, 0, 0, 0, -700594196, 0, 0, 0, -1010841832, 0, 0, 0, 8404423, 0, 0, 0, 65408, 0, 0, 0, -139282, 0, 0, 0, -1007682049, 0, 0, 0, 6307295, 0, 0, 0, 65475, 0, 0, 0, -139284, 0, 0, 0, -1007682049, 0, 0, 0, 1080049119, 0, 0, 0, 65475, 0, 0, 0, -139284, 0, 0, 0, -1006633473, 0, 0, 0, 8404431, 0, 0, 0, 65475, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 134184959, 0, 0, 0, 67076095, 0, 0, 0, 0, 0, 0, 0, -17816170, 0, 0, 0, 1006595246, 0, 0, 0, 67059551, 0, 0, 0, 0, 0, 0, 0, 50331648, 0, 0, 0, -1029700609, 0, 0, 0, -257, 0, 0, 0, -130049, 0, 0, 0, -21032993, 0, 0, 0, 50216959, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 536805376, 0, 0, 0, 2, 0, 0, 0, 160, 0, 0, 0, 4128766, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 1713373183, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 2013265919, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_NORMAL);
_nmstrtPages=allocate([2,3,4,5,6,7,8,0,0,9,10,11,12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,18,19,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] /* \02\03\04\05\06\07\0 */, "i8", ALLOC_NORMAL);
_namePages=allocate([25,3,26,27,28,29,30,0,0,31,32,33,34,35,36,37,16,17,0,0,0,0,0,0,0,0,0,0,0,0,18,19,38,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] /* \19\03\1A\1B\1C\1D\1 */, "i8", ALLOC_NORMAL);
_utf8_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0], ALLOC_NORMAL);
_internal_utf8_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0], ALLOC_NORMAL);
_latin1_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 26, 28, 28, 22, 28, 28, 28, 28, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_ascii_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_little2_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 26, 28, 28, 22, 28, 28, 28, 28, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_internal_little2_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 26, 28, 28, 22, 28, 28, 28, 28, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_CDATA_LSQB_8477=allocate([67,68,65,84,65,91] /* CDATA[ */, "i8", ALLOC_NORMAL);
_big2_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 26, 28, 28, 22, 28, 28, 28, 28, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_internal_big2_encoding=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 10, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 16, 12, 19, 28, 30, 3, 13, 31, 32, 33, 34, 35, 27, 26, 17, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 22, 18, 2, 14, 11, 15, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 20, 28, 4, 28, 22, 28, 24, 24, 24, 24, 24, 24, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 36, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 28, 26, 28, 28, 22, 28, 28, 28, 28, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 28, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i8* (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i32, %struct.ATTRIBUTE*)*",0,0,0,"i32 (%struct.ENCODING*, i8*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*)*",0,0,0,"void (%struct.ENCODING*, i8*, i8*, %struct.POSITION*)*",0,0,0,"i32 (%struct.ENCODING*, i8*, i8*, i8**)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i8**, i8*)*",0,0,0,"void (%struct.ENCODING*, i8**, i8*, i16**, i16*)*",0,0,0,"i32",0,0,0,"i8","i8",0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"], ALLOC_NORMAL);
_KW_version=allocate([118,101,114,115,105,111,110,0] /* version\00 */, "i8", ALLOC_NORMAL);
_KW_standalone=allocate([115,116,97,110,100,97,108,111,110,101,0] /* standalone\00 */, "i8", ALLOC_NORMAL);
_KW_yes=allocate([121,101,115,0] /* yes\00 */, "i8", ALLOC_NORMAL);
_KW_no=allocate([110,111,0] /* no\00 */, "i8", ALLOC_NORMAL);
_KW_ISO_8859_1=allocate([73,83,79,45,56,56,53,57,45,49,0] /* ISO-8859-1\00 */, "i8", ALLOC_NORMAL);
_KW_US_ASCII=allocate([85,83,45,65,83,67,73,73,0] /* US-ASCII\00 */, "i8", ALLOC_NORMAL);
_KW_UTF_16=allocate([85,84,70,45,49,54,0] /* UTF-16\00 */, "i8", ALLOC_NORMAL);
_KW_UTF_16BE=allocate([85,84,70,45,49,54,66,69,0] /* UTF-16BE\00 */, "i8", ALLOC_NORMAL);
_KW_UTF_16LE=allocate([85,84,70,45,49,54,76,69,0] /* UTF-16LE\00 */, "i8", ALLOC_NORMAL);
_encodingNames_12027=allocate(24, "i8*", ALLOC_NORMAL);
_encodings=allocate(28, "%struct.ENCODING*", ALLOC_NORMAL);
HEAP[_xmlparse_methods]=__str55;
HEAP[_xmlparse_methods+4]=(FUNCTION_TABLE_OFFSET + 180);
HEAP[_xmlparse_methods+12]=_xmlparse_Parse__doc__;
HEAP[_xmlparse_methods+16]=__str56;
HEAP[_xmlparse_methods+20]=(FUNCTION_TABLE_OFFSET + 182);
HEAP[_xmlparse_methods+28]=_xmlparse_ParseFile__doc__;
HEAP[_xmlparse_methods+32]=__str57;
HEAP[_xmlparse_methods+36]=(FUNCTION_TABLE_OFFSET + 184);
HEAP[_xmlparse_methods+44]=_xmlparse_SetBase__doc__;
HEAP[_xmlparse_methods+48]=__str58;
HEAP[_xmlparse_methods+52]=(FUNCTION_TABLE_OFFSET + 186);
HEAP[_xmlparse_methods+60]=_xmlparse_GetBase__doc__;
HEAP[_xmlparse_methods+64]=__str59;
HEAP[_xmlparse_methods+68]=(FUNCTION_TABLE_OFFSET + 188);
HEAP[_xmlparse_methods+76]=_xmlparse_ExternalEntityParserCreate__doc__;
HEAP[_xmlparse_methods+80]=__str60;
HEAP[_xmlparse_methods+84]=(FUNCTION_TABLE_OFFSET + 190);
HEAP[_xmlparse_methods+92]=_xmlparse_SetParamEntityParsing__doc__;
HEAP[_xmlparse_methods+96]=__str61;
HEAP[_xmlparse_methods+100]=(FUNCTION_TABLE_OFFSET + 192);
HEAP[_xmlparse_methods+108]=_xmlparse_GetInputContext__doc__;
HEAP[_xmlparse_methods+112]=__str54;
HEAP[_xmlparse_methods+116]=(FUNCTION_TABLE_OFFSET + 194);
HEAP[_xmlparse_methods+124]=_xmlparse_UseForeignDTD__doc__;
HEAP[_Xmlparsetype+12]=__str84;
HEAP[_Xmlparsetype+24]=(FUNCTION_TABLE_OFFSET + 196);
HEAP[_Xmlparsetype+32]=(FUNCTION_TABLE_OFFSET + 198);
HEAP[_Xmlparsetype+36]=(FUNCTION_TABLE_OFFSET + 200);
HEAP[_Xmlparsetype+88]=_Xmlparsetype__doc__;
HEAP[_Xmlparsetype+92]=(FUNCTION_TABLE_OFFSET + 202);
HEAP[_Xmlparsetype+96]=(FUNCTION_TABLE_OFFSET + 204);
HEAP[_kwlist_11531]=__str86;
HEAP[_kwlist_11531+4]=__str87;
HEAP[_kwlist_11531+8]=__str78;
HEAP[_pyexpat_methods]=__str91;
HEAP[_pyexpat_methods+4]=(FUNCTION_TABLE_OFFSET + 206);
HEAP[_pyexpat_methods+12]=_pyexpat_ParserCreate__doc__;
HEAP[_pyexpat_methods+16]=__str92;
HEAP[_pyexpat_methods+20]=(FUNCTION_TABLE_OFFSET + 208);
HEAP[_pyexpat_methods+28]=_pyexpat_ErrorString__doc__;
HEAP[_handler_info]=__str168;
HEAP[_handler_info+4]=(FUNCTION_TABLE_OFFSET + 210);
HEAP[_handler_info+8]=(FUNCTION_TABLE_OFFSET + 212);
HEAP[_handler_info+20]=__str169;
HEAP[_handler_info+24]=(FUNCTION_TABLE_OFFSET + 214);
HEAP[_handler_info+28]=(FUNCTION_TABLE_OFFSET + 216);
HEAP[_handler_info+40]=__str170;
HEAP[_handler_info+44]=(FUNCTION_TABLE_OFFSET + 36);
HEAP[_handler_info+48]=(FUNCTION_TABLE_OFFSET + 218);
HEAP[_handler_info+60]=__str83;
HEAP[_handler_info+64]=(FUNCTION_TABLE_OFFSET + 26);
HEAP[_handler_info+68]=(FUNCTION_TABLE_OFFSET + 220);
HEAP[_handler_info+80]=__str171;
HEAP[_handler_info+84]=(FUNCTION_TABLE_OFFSET + 222);
HEAP[_handler_info+88]=(FUNCTION_TABLE_OFFSET + 224);
HEAP[_handler_info+100]=__str172;
HEAP[_handler_info+104]=(FUNCTION_TABLE_OFFSET + 226);
HEAP[_handler_info+108]=(FUNCTION_TABLE_OFFSET + 228);
HEAP[_handler_info+120]=__str173;
HEAP[_handler_info+124]=(FUNCTION_TABLE_OFFSET + 230);
HEAP[_handler_info+128]=(FUNCTION_TABLE_OFFSET + 232);
HEAP[_handler_info+140]=__str174;
HEAP[_handler_info+144]=(FUNCTION_TABLE_OFFSET + 234);
HEAP[_handler_info+148]=(FUNCTION_TABLE_OFFSET + 236);
HEAP[_handler_info+160]=__str175;
HEAP[_handler_info+164]=(FUNCTION_TABLE_OFFSET + 28);
HEAP[_handler_info+168]=(FUNCTION_TABLE_OFFSET + 238);
HEAP[_handler_info+180]=__str176;
HEAP[_handler_info+184]=(FUNCTION_TABLE_OFFSET + 240);
HEAP[_handler_info+188]=(FUNCTION_TABLE_OFFSET + 242);
HEAP[_handler_info+200]=__str177;
HEAP[_handler_info+204]=(FUNCTION_TABLE_OFFSET + 244);
HEAP[_handler_info+208]=(FUNCTION_TABLE_OFFSET + 246);
HEAP[_handler_info+220]=__str178;
HEAP[_handler_info+224]=(FUNCTION_TABLE_OFFSET + 248);
HEAP[_handler_info+228]=(FUNCTION_TABLE_OFFSET + 250);
HEAP[_handler_info+240]=__str38;
HEAP[_handler_info+244]=(FUNCTION_TABLE_OFFSET + 30);
HEAP[_handler_info+248]=(FUNCTION_TABLE_OFFSET + 252);
HEAP[_handler_info+260]=__str179;
HEAP[_handler_info+264]=(FUNCTION_TABLE_OFFSET + 254);
HEAP[_handler_info+268]=(FUNCTION_TABLE_OFFSET + 256);
HEAP[_handler_info+280]=__str180;
HEAP[_handler_info+284]=(FUNCTION_TABLE_OFFSET + 258);
HEAP[_handler_info+288]=(FUNCTION_TABLE_OFFSET + 260);
HEAP[_handler_info+300]=__str181;
HEAP[_handler_info+304]=(FUNCTION_TABLE_OFFSET + 262);
HEAP[_handler_info+308]=(FUNCTION_TABLE_OFFSET + 264);
HEAP[_handler_info+320]=__str182;
HEAP[_handler_info+324]=(FUNCTION_TABLE_OFFSET + 266);
HEAP[_handler_info+328]=(FUNCTION_TABLE_OFFSET + 268);
HEAP[_handler_info+340]=__str183;
HEAP[_handler_info+344]=(FUNCTION_TABLE_OFFSET + 270);
HEAP[_handler_info+348]=(FUNCTION_TABLE_OFFSET + 272);
HEAP[_handler_info+360]=__str184;
HEAP[_handler_info+364]=(FUNCTION_TABLE_OFFSET + 274);
HEAP[_handler_info+368]=(FUNCTION_TABLE_OFFSET + 276);
HEAP[_handler_info+380]=__str185;
HEAP[_handler_info+384]=(FUNCTION_TABLE_OFFSET + 278);
HEAP[_handler_info+388]=(FUNCTION_TABLE_OFFSET + 280);
HEAP[_handler_info+400]=__str186;
HEAP[_handler_info+404]=(FUNCTION_TABLE_OFFSET + 282);
HEAP[_handler_info+408]=(FUNCTION_TABLE_OFFSET + 284);
HEAP[_handler_info+420]=__str187;
HEAP[_handler_info+424]=(FUNCTION_TABLE_OFFSET + 286);
HEAP[_handler_info+428]=(FUNCTION_TABLE_OFFSET + 288);
HEAP[_message_3807+4]=__str2190;
HEAP[_message_3807+8]=__str3191;
HEAP[_message_3807+12]=__str4192;
HEAP[_message_3807+16]=__str5193;
HEAP[_message_3807+20]=__str6194;
HEAP[_message_3807+24]=__str7195;
HEAP[_message_3807+28]=__str8196;
HEAP[_message_3807+32]=__str9197;
HEAP[_message_3807+36]=__str10198;
HEAP[_message_3807+40]=__str11199;
HEAP[_message_3807+44]=__str12200;
HEAP[_message_3807+48]=__str13201;
HEAP[_message_3807+52]=__str14202;
HEAP[_message_3807+56]=__str15203;
HEAP[_message_3807+60]=__str16204;
HEAP[_message_3807+64]=__str17205;
HEAP[_message_3807+68]=__str18206;
HEAP[_message_3807+72]=__str19207;
HEAP[_message_3807+76]=__str20208;
HEAP[_message_3807+80]=__str21209;
HEAP[_message_3807+84]=__str22210;
HEAP[_message_3807+88]=__str23211;
HEAP[_message_3807+92]=__str24212;
HEAP[_message_3807+96]=__str25213;
HEAP[_message_3807+100]=__str26214;
HEAP[_message_3807+104]=__str27215;
HEAP[_message_3807+108]=__str28216;
HEAP[_message_3807+112]=__str29217;
HEAP[_message_3807+116]=__str30218;
HEAP[_message_3807+120]=__str31219;
HEAP[_message_3807+124]=__str32220;
HEAP[_message_3807+128]=__str33221;
HEAP[_message_3807+132]=__str34222;
HEAP[_message_3807+136]=__str35223;
HEAP[_message_3807+140]=__str36224;
HEAP[_message_3807+144]=__str37225;
HEAP[_message_3807+148]=__str38226;
HEAP[_message_3807+152]=__str39227;
HEAP[_message_3807+156]=__str40228;
HEAP[_message_3807+160]=__str41229;
HEAP[_features_3829+4]=__str43231;
HEAP[_features_3829+16]=__str44232;
HEAP[_types_1870]=_KW_CDATA;
HEAP[_types_1870+4]=_KW_ID;
HEAP[_types_1870+8]=_KW_IDREF;
HEAP[_types_1870+12]=_KW_IDREFS;
HEAP[_types_1870+16]=_KW_ENTITY;
HEAP[_types_1870+20]=_KW_ENTITIES;
HEAP[_types_1870+24]=_KW_NMTOKEN;
HEAP[_types_1870+28]=_KW_NMTOKENS;
HEAP[_utf8_encoding]=(FUNCTION_TABLE_OFFSET + 290);
HEAP[_utf8_encoding+4]=(FUNCTION_TABLE_OFFSET + 292);
HEAP[_utf8_encoding+8]=(FUNCTION_TABLE_OFFSET + 294);
HEAP[_utf8_encoding+12]=(FUNCTION_TABLE_OFFSET + 296);
HEAP[_utf8_encoding+16]=(FUNCTION_TABLE_OFFSET + 298);
HEAP[_utf8_encoding+20]=(FUNCTION_TABLE_OFFSET + 300);
HEAP[_utf8_encoding+24]=(FUNCTION_TABLE_OFFSET + 302);
HEAP[_utf8_encoding+28]=(FUNCTION_TABLE_OFFSET + 304);
HEAP[_utf8_encoding+32]=(FUNCTION_TABLE_OFFSET + 306);
HEAP[_utf8_encoding+36]=(FUNCTION_TABLE_OFFSET + 308);
HEAP[_utf8_encoding+40]=(FUNCTION_TABLE_OFFSET + 310);
HEAP[_utf8_encoding+44]=(FUNCTION_TABLE_OFFSET + 312);
HEAP[_utf8_encoding+48]=(FUNCTION_TABLE_OFFSET + 314);
HEAP[_utf8_encoding+52]=(FUNCTION_TABLE_OFFSET + 316);
HEAP[_utf8_encoding+56]=(FUNCTION_TABLE_OFFSET + 318);
HEAP[_utf8_encoding+60]=(FUNCTION_TABLE_OFFSET + 320);
HEAP[_utf8_encoding+328]=(FUNCTION_TABLE_OFFSET + 322);
HEAP[_utf8_encoding+332]=(FUNCTION_TABLE_OFFSET + 324);
HEAP[_utf8_encoding+336]=(FUNCTION_TABLE_OFFSET + 326);
HEAP[_utf8_encoding+340]=(FUNCTION_TABLE_OFFSET + 328);
HEAP[_utf8_encoding+344]=(FUNCTION_TABLE_OFFSET + 330);
HEAP[_utf8_encoding+348]=(FUNCTION_TABLE_OFFSET + 326);
HEAP[_utf8_encoding+352]=(FUNCTION_TABLE_OFFSET + 332);
HEAP[_utf8_encoding+356]=(FUNCTION_TABLE_OFFSET + 334);
HEAP[_utf8_encoding+360]=(FUNCTION_TABLE_OFFSET + 336);
HEAP[_internal_utf8_encoding]=(FUNCTION_TABLE_OFFSET + 290);
HEAP[_internal_utf8_encoding+4]=(FUNCTION_TABLE_OFFSET + 292);
HEAP[_internal_utf8_encoding+8]=(FUNCTION_TABLE_OFFSET + 294);
HEAP[_internal_utf8_encoding+12]=(FUNCTION_TABLE_OFFSET + 296);
HEAP[_internal_utf8_encoding+16]=(FUNCTION_TABLE_OFFSET + 298);
HEAP[_internal_utf8_encoding+20]=(FUNCTION_TABLE_OFFSET + 300);
HEAP[_internal_utf8_encoding+24]=(FUNCTION_TABLE_OFFSET + 302);
HEAP[_internal_utf8_encoding+28]=(FUNCTION_TABLE_OFFSET + 304);
HEAP[_internal_utf8_encoding+32]=(FUNCTION_TABLE_OFFSET + 306);
HEAP[_internal_utf8_encoding+36]=(FUNCTION_TABLE_OFFSET + 308);
HEAP[_internal_utf8_encoding+40]=(FUNCTION_TABLE_OFFSET + 310);
HEAP[_internal_utf8_encoding+44]=(FUNCTION_TABLE_OFFSET + 312);
HEAP[_internal_utf8_encoding+48]=(FUNCTION_TABLE_OFFSET + 314);
HEAP[_internal_utf8_encoding+52]=(FUNCTION_TABLE_OFFSET + 316);
HEAP[_internal_utf8_encoding+56]=(FUNCTION_TABLE_OFFSET + 318);
HEAP[_internal_utf8_encoding+60]=(FUNCTION_TABLE_OFFSET + 320);
HEAP[_internal_utf8_encoding+328]=(FUNCTION_TABLE_OFFSET + 322);
HEAP[_internal_utf8_encoding+332]=(FUNCTION_TABLE_OFFSET + 324);
HEAP[_internal_utf8_encoding+336]=(FUNCTION_TABLE_OFFSET + 326);
HEAP[_internal_utf8_encoding+340]=(FUNCTION_TABLE_OFFSET + 328);
HEAP[_internal_utf8_encoding+344]=(FUNCTION_TABLE_OFFSET + 330);
HEAP[_internal_utf8_encoding+348]=(FUNCTION_TABLE_OFFSET + 326);
HEAP[_internal_utf8_encoding+352]=(FUNCTION_TABLE_OFFSET + 332);
HEAP[_internal_utf8_encoding+356]=(FUNCTION_TABLE_OFFSET + 334);
HEAP[_internal_utf8_encoding+360]=(FUNCTION_TABLE_OFFSET + 336);
HEAP[_latin1_encoding]=(FUNCTION_TABLE_OFFSET + 290);
HEAP[_latin1_encoding+4]=(FUNCTION_TABLE_OFFSET + 292);
HEAP[_latin1_encoding+8]=(FUNCTION_TABLE_OFFSET + 294);
HEAP[_latin1_encoding+12]=(FUNCTION_TABLE_OFFSET + 296);
HEAP[_latin1_encoding+16]=(FUNCTION_TABLE_OFFSET + 298);
HEAP[_latin1_encoding+20]=(FUNCTION_TABLE_OFFSET + 300);
HEAP[_latin1_encoding+24]=(FUNCTION_TABLE_OFFSET + 302);
HEAP[_latin1_encoding+28]=(FUNCTION_TABLE_OFFSET + 304);
HEAP[_latin1_encoding+32]=(FUNCTION_TABLE_OFFSET + 306);
HEAP[_latin1_encoding+36]=(FUNCTION_TABLE_OFFSET + 308);
HEAP[_latin1_encoding+40]=(FUNCTION_TABLE_OFFSET + 310);
HEAP[_latin1_encoding+44]=(FUNCTION_TABLE_OFFSET + 312);
HEAP[_latin1_encoding+48]=(FUNCTION_TABLE_OFFSET + 314);
HEAP[_latin1_encoding+52]=(FUNCTION_TABLE_OFFSET + 316);
HEAP[_latin1_encoding+56]=(FUNCTION_TABLE_OFFSET + 338);
HEAP[_latin1_encoding+60]=(FUNCTION_TABLE_OFFSET + 340);
HEAP[_ascii_encoding]=(FUNCTION_TABLE_OFFSET + 290);
HEAP[_ascii_encoding+4]=(FUNCTION_TABLE_OFFSET + 292);
HEAP[_ascii_encoding+8]=(FUNCTION_TABLE_OFFSET + 294);
HEAP[_ascii_encoding+12]=(FUNCTION_TABLE_OFFSET + 296);
HEAP[_ascii_encoding+16]=(FUNCTION_TABLE_OFFSET + 298);
HEAP[_ascii_encoding+20]=(FUNCTION_TABLE_OFFSET + 300);
HEAP[_ascii_encoding+24]=(FUNCTION_TABLE_OFFSET + 302);
HEAP[_ascii_encoding+28]=(FUNCTION_TABLE_OFFSET + 304);
HEAP[_ascii_encoding+32]=(FUNCTION_TABLE_OFFSET + 306);
HEAP[_ascii_encoding+36]=(FUNCTION_TABLE_OFFSET + 308);
HEAP[_ascii_encoding+40]=(FUNCTION_TABLE_OFFSET + 310);
HEAP[_ascii_encoding+44]=(FUNCTION_TABLE_OFFSET + 312);
HEAP[_ascii_encoding+48]=(FUNCTION_TABLE_OFFSET + 314);
HEAP[_ascii_encoding+52]=(FUNCTION_TABLE_OFFSET + 316);
HEAP[_ascii_encoding+56]=(FUNCTION_TABLE_OFFSET + 342);
HEAP[_ascii_encoding+60]=(FUNCTION_TABLE_OFFSET + 340);
HEAP[_little2_encoding]=(FUNCTION_TABLE_OFFSET + 344);
HEAP[_little2_encoding+4]=(FUNCTION_TABLE_OFFSET + 346);
HEAP[_little2_encoding+8]=(FUNCTION_TABLE_OFFSET + 348);
HEAP[_little2_encoding+12]=(FUNCTION_TABLE_OFFSET + 350);
HEAP[_little2_encoding+16]=(FUNCTION_TABLE_OFFSET + 352);
HEAP[_little2_encoding+20]=(FUNCTION_TABLE_OFFSET + 354);
HEAP[_little2_encoding+24]=(FUNCTION_TABLE_OFFSET + 356);
HEAP[_little2_encoding+28]=(FUNCTION_TABLE_OFFSET + 358);
HEAP[_little2_encoding+32]=(FUNCTION_TABLE_OFFSET + 360);
HEAP[_little2_encoding+36]=(FUNCTION_TABLE_OFFSET + 362);
HEAP[_little2_encoding+40]=(FUNCTION_TABLE_OFFSET + 364);
HEAP[_little2_encoding+44]=(FUNCTION_TABLE_OFFSET + 366);
HEAP[_little2_encoding+48]=(FUNCTION_TABLE_OFFSET + 368);
HEAP[_little2_encoding+52]=(FUNCTION_TABLE_OFFSET + 370);
HEAP[_little2_encoding+56]=(FUNCTION_TABLE_OFFSET + 372);
HEAP[_little2_encoding+60]=(FUNCTION_TABLE_OFFSET + 374);
HEAP[_internal_little2_encoding]=(FUNCTION_TABLE_OFFSET + 344);
HEAP[_internal_little2_encoding+4]=(FUNCTION_TABLE_OFFSET + 346);
HEAP[_internal_little2_encoding+8]=(FUNCTION_TABLE_OFFSET + 348);
HEAP[_internal_little2_encoding+12]=(FUNCTION_TABLE_OFFSET + 350);
HEAP[_internal_little2_encoding+16]=(FUNCTION_TABLE_OFFSET + 352);
HEAP[_internal_little2_encoding+20]=(FUNCTION_TABLE_OFFSET + 354);
HEAP[_internal_little2_encoding+24]=(FUNCTION_TABLE_OFFSET + 356);
HEAP[_internal_little2_encoding+28]=(FUNCTION_TABLE_OFFSET + 358);
HEAP[_internal_little2_encoding+32]=(FUNCTION_TABLE_OFFSET + 360);
HEAP[_internal_little2_encoding+36]=(FUNCTION_TABLE_OFFSET + 362);
HEAP[_internal_little2_encoding+40]=(FUNCTION_TABLE_OFFSET + 364);
HEAP[_internal_little2_encoding+44]=(FUNCTION_TABLE_OFFSET + 366);
HEAP[_internal_little2_encoding+48]=(FUNCTION_TABLE_OFFSET + 368);
HEAP[_internal_little2_encoding+52]=(FUNCTION_TABLE_OFFSET + 370);
HEAP[_internal_little2_encoding+56]=(FUNCTION_TABLE_OFFSET + 372);
HEAP[_internal_little2_encoding+60]=(FUNCTION_TABLE_OFFSET + 374);
HEAP[_big2_encoding]=(FUNCTION_TABLE_OFFSET + 376);
HEAP[_big2_encoding+4]=(FUNCTION_TABLE_OFFSET + 378);
HEAP[_big2_encoding+8]=(FUNCTION_TABLE_OFFSET + 380);
HEAP[_big2_encoding+12]=(FUNCTION_TABLE_OFFSET + 382);
HEAP[_big2_encoding+16]=(FUNCTION_TABLE_OFFSET + 384);
HEAP[_big2_encoding+20]=(FUNCTION_TABLE_OFFSET + 386);
HEAP[_big2_encoding+24]=(FUNCTION_TABLE_OFFSET + 388);
HEAP[_big2_encoding+28]=(FUNCTION_TABLE_OFFSET + 390);
HEAP[_big2_encoding+32]=(FUNCTION_TABLE_OFFSET + 392);
HEAP[_big2_encoding+36]=(FUNCTION_TABLE_OFFSET + 394);
HEAP[_big2_encoding+40]=(FUNCTION_TABLE_OFFSET + 396);
HEAP[_big2_encoding+44]=(FUNCTION_TABLE_OFFSET + 398);
HEAP[_big2_encoding+48]=(FUNCTION_TABLE_OFFSET + 400);
HEAP[_big2_encoding+52]=(FUNCTION_TABLE_OFFSET + 402);
HEAP[_big2_encoding+56]=(FUNCTION_TABLE_OFFSET + 404);
HEAP[_big2_encoding+60]=(FUNCTION_TABLE_OFFSET + 406);
HEAP[_internal_big2_encoding]=(FUNCTION_TABLE_OFFSET + 376);
HEAP[_internal_big2_encoding+4]=(FUNCTION_TABLE_OFFSET + 378);
HEAP[_internal_big2_encoding+8]=(FUNCTION_TABLE_OFFSET + 380);
HEAP[_internal_big2_encoding+12]=(FUNCTION_TABLE_OFFSET + 382);
HEAP[_internal_big2_encoding+16]=(FUNCTION_TABLE_OFFSET + 384);
HEAP[_internal_big2_encoding+20]=(FUNCTION_TABLE_OFFSET + 386);
HEAP[_internal_big2_encoding+24]=(FUNCTION_TABLE_OFFSET + 388);
HEAP[_internal_big2_encoding+28]=(FUNCTION_TABLE_OFFSET + 390);
HEAP[_internal_big2_encoding+32]=(FUNCTION_TABLE_OFFSET + 392);
HEAP[_internal_big2_encoding+36]=(FUNCTION_TABLE_OFFSET + 394);
HEAP[_internal_big2_encoding+40]=(FUNCTION_TABLE_OFFSET + 396);
HEAP[_internal_big2_encoding+44]=(FUNCTION_TABLE_OFFSET + 398);
HEAP[_internal_big2_encoding+48]=(FUNCTION_TABLE_OFFSET + 400);
HEAP[_internal_big2_encoding+52]=(FUNCTION_TABLE_OFFSET + 402);
HEAP[_internal_big2_encoding+56]=(FUNCTION_TABLE_OFFSET + 404);
HEAP[_internal_big2_encoding+60]=(FUNCTION_TABLE_OFFSET + 406);
HEAP[_encodingNames_12027]=_KW_ISO_8859_1;
HEAP[_encodingNames_12027+4]=_KW_US_ASCII;
HEAP[_encodingNames_12027+8]=__str106;
HEAP[_encodingNames_12027+12]=_KW_UTF_16;
HEAP[_encodingNames_12027+16]=_KW_UTF_16BE;
HEAP[_encodingNames_12027+20]=_KW_UTF_16LE;
HEAP[_encodings]=_latin1_encoding;
HEAP[_encodings+4]=_ascii_encoding;
HEAP[_encodings+8]=_utf8_encoding;
HEAP[_encodings+12]=_big2_encoding;
HEAP[_encodings+16]=_big2_encoding;
HEAP[_encodings+20]=_little2_encoding;
HEAP[_encodings+24]=_utf8_encoding;

  __globalConstructor__();
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

run();

// {{POST_RUN_ADDITIONS}}





  // {{MODULE_ADDITIONS}}

  return Module;
});

