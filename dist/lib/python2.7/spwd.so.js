(function(g){function f(b,d,e){var c;for(c=-1;;)switch(c){case -1:var f,g,h;f=b;g=d;h=e;c=h!=0?1:2;break;case 1:c=a3(h);w[f+12+g*4]=c;c=3;break;case 2:w[f+12+g*4]=Q;w[Q]+=1;c=3;break;case 3:return;default:p(0,"bad label: "+c)}}function d(b){var d;for(d=-1;;)switch(d){case -1:var e,c,g,h;e=b;g=0;h=f8(H);d=h==0?1:2;break;case 1:c=0;d=7;break;case 2:d=w[e];var i=g;g+=1;f(h,i,d);d=w[e+4];i=g;g+=1;f(h,i,d);d=h;var i=g,j=OZ(w[e+8]);w[d+12+i*4]=j;
g+=1;d=h;i=g;j=OZ(w[e+12]);w[d+12+i*4]=j;g+=1;d=h;i=g;j=OZ(w[e+16]);w[d+12+i*4]=j;g+=1;d=h;i=g;j=OZ(w[e+20]);w[d+12+i*4]=j;g+=1;d=h;i=g;j=OZ(w[e+24]);w[d+12+i*4]=j;g+=1;d=h;i=g;j=OZ(w[e+28]);w[d+12+i*4]=j;g+=1;d=h;i=g;j=OZ(w[e+32]);w[d+12+i*4]=j;g+=1;i=h;d=nY()!=0?3:6;break;case 3:w[h]=w[i]-1;d=w[h]==0?4:5;break;case 4:P[w[w[h+4]+24]](h);d=5;break;case 5:c=0;d=7;break;case 6:c=i;d=7;break;case 7:return b=c;default:p(0,"bad label: "+d)}}function b(){c=O([84,104,105,115,32,109,111,100,117,108,101,32,
112,114,111,118,105,100,101,115,32,97,99,99,101,115,115,32,116,111,32,116,104,101,32,85,110,105,120,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,46,10,73,116,32,105,115,32,97,118,97,105,108,97,98,108,101,32,111,110,32,118,97,114,105,111,117,115,32,85,110,105,120,32,118,101,114,115,105,111,110,115,46,10,10,83,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,32,97,114,101,32,114,101,112,111,
114,116,101,100,32,97,115,32,57,45,116,117,112,108,101,115,32,111,102,32,116,121,112,101,32,115,116,114,117,99,116,95,115,112,119,100,44,10,99,111,110,116,97,105,110,105,110,103,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,105,116,101,109,115,32,102,114,111,109,32,116,104,101,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,40,115,101,101,32,96,60,115,104,97,100,111,119,46,104,62,39,41,58,10,115,112,95,110,97,109,112,44,32,115,112,95,112,119,100,112,44,32,115,112,95,
108,115,116,99,104,103,44,32,115,112,95,109,105,110,44,32,115,112,95,109,97,120,44,32,115,112,95,119,97,114,110,44,32,115,112,95,105,110,97,99,116,44,32,115,112,95,101,120,112,105,114,101,44,32,115,112,95,102,108,97,103,46,10,84,104,101,32,115,112,95,110,97,109,112,32,97,110,100,32,115,112,95,112,119,100,112,32,97,114,101,32,115,116,114,105,110,103,115,44,32,116,104,101,32,114,101,115,116,32,97,114,101,32,105,110,116,101,103,101,114,115,46,10,65,110,32,101,120,99,101,112,116,105,111,110,32,105,115,
32,114,97,105,115,101,100,32,105,102,32,116,104,101,32,101,110,116,114,121,32,97,115,107,101,100,32,102,111,114,32,99,97,110,110,111,116,32,98,101,32,102,111,117,110,100,46,10,89,111,117,32,104,97,118,101,32,116,111,32,98,101,32,114,111,111,116,32,116,111,32,98,101,32,97,98,108,101,32,116,111,32,117,115,101,32,116,104,105,115,32,109,111,100,117,108,101,46,0],"i8",x);h=O([115,112,95,110,97,109,0],"i8",x);i=O([108,111,103,105,110,32,110,97,109,101,0],"i8",x);j=O([115,112,95,112,119,100,0],"i8",x);l=
O([101,110,99,114,121,112,116,101,100,32,112,97,115,115,119,111,114,100,0],"i8",x);m=O([115,112,95,108,115,116,99,104,103,0],"i8",x);n=O([100,97,116,101,32,111,102,32,108,97,115,116,32,99,104,97,110,103,101,0],"i8",x);q=O([115,112,95,109,105,110,0],"i8",x);o=O([109,105,110,32,35,100,97,121,115,32,98,101,116,119,101,101,110,32,99,104,97,110,103,101,115,0],"i8",x);r=O([115,112,95,109,97,120,0],"i8",x);t=O([109,97,120,32,35,100,97,121,115,32,98,101,116,119,101,101,110,32,99,104,97,110,103,101,115,0],
"i8",x);v=O([115,112,95,119,97,114,110,0],"i8",x);y=O([35,100,97,121,115,32,98,101,102,111,114,101,32,112,119,32,101,120,112,105,114,101,115,32,116,111,32,119,97,114,110,32,117,115,101,114,32,97,98,111,117,116,32,105,116,0],"i8",x);A=O([115,112,95,105,110,97,99,116,0],"i8",x);z=O([35,100,97,121,115,32,97,102,116,101,114,32,112,119,32,101,120,112,105,114,101,115,32,117,110,116,105,108,32,97,99,99,111,117,110,116,32,105,115,32,98,108,111,99,107,101,100,0],"i8",x);C=O([115,112,95,101,120,112,105,114,
101,0],"i8",x);F=O([35,100,97,121,115,32,115,105,110,99,101,32,49,57,55,48,45,48,49,45,48,49,32,117,110,116,105,108,32,97,99,99,111,117,110,116,32,105,115,32,100,105,115,97,98,108,101,100,0],"i8",x);B=O([115,112,95,102,108,97,103,0],"i8",x);I=O([114,101,115,101,114,118,101,100,0],"i8",x);D=O(80,["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,
"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8"],x);L=O([115,112,119,100,46,115,116,114,117,99,116,95,115,112,119,100,58,32,82,101,115,117,108,116,115,32,102,114,111,109,32,103,101,116,115,112,42,40,41,32,114,111,117,116,105,110,101,115,46,10,10,84,104,105,115,32,111,98,106,101,99,116,32,109,97,121,32,98,101,32,97,99,99,101,115,115,101,100,32,101,105,116,104,101,114,32,97,115,32,97,32,57,45,116,117,112,108,101,32,111,102,10,32,32,40,115,112,95,110,97,109,44,115,112,95,112,119,100,44,115,112,95,108,115,
116,99,104,103,44,115,112,95,109,105,110,44,115,112,95,109,97,120,44,115,112,95,119,97,114,110,44,115,112,95,105,110,97,99,116,44,115,112,95,101,120,112,105,114,101,44,115,112,95,102,108,97,103,41,10,111,114,32,118,105,97,32,116,104,101,32,111,98,106,101,99,116,32,97,116,116,114,105,98,117,116,101,115,32,97,115,32,110,97,109,101,100,32,105,110,32,116,104,101,32,97,98,111,118,101,32,116,117,112,108,101,46,0],"i8",x);J=O([0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"%struct.PyStructSequence_Field*",
0,0,0,"i32",0,0,0],x);N=O([115,112,119,100,46,115,116,114,117,99,116,95,115,112,119,100,0],"i8",x);H=O(196,["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",
0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,
"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32",0,0,0],x);X=O([103,101,116,115,112,110,97,109,
40,110,97,109,101,41,32,45,62,32,40,115,112,95,110,97,109,112,44,32,115,112,95,112,119,100,112,44,32,115,112,95,108,115,116,99,104,103,44,32,115,112,95,109,105,110,44,32,115,112,95,109,97,120,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,112,95,119,97,114,110,44,32,115,112,95,105,110,97,99,116,44,32,115,112,95,101,120,112,105,114,101,44,32,115,112,95,102,108,97,103,41,10,82,101,116,117,114,110,32,116,104,101,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,
97,116,97,98,97,115,101,32,101,110,116,114,121,32,102,111,114,32,116,104,101,32,103,105,118,101,110,32,117,115,101,114,32,110,97,109,101,46,10,83,101,101,32,115,112,119,100,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,46,0],"i8",x);W=O([115,58,103,101,116,115,112,110,97,109,0],"i8",x);S=O([103,101,116,115,112,110,97,109,40,41,58,32,110,97,109,101,32,110,
111,116,32,102,111,117,110,100,0],"i8",x);R=O([103,101,116,115,112,97,108,108,40,41,32,45,62,32,108,105,115,116,95,111,102,95,101,110,116,114,105,101,115,10,82,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,97,108,108,32,97,118,97,105,108,97,98,108,101,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,44,32,105,110,32,97,114,98,105,116,114,97,114,121,32,111,114,100,101,114,46,10,83,101,101,32,115,112,119,100,46,95,
95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,46,0],"i8",x);$=O([103,101,116,115,112,110,97,109,0],"i8",x);Y=O([103,101,116,115,112,97,108,108,0],"i8",x);ea=O([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,
"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],x);U=O([115,112,119,100,0],"i8",x);V=O(1,"i1",x);Z=O([115,116,114,117,99,116,95,115,112,119,100,0],"i8",x);w[D]=h;w[D+4]=i;w[D+8]=j;w[D+12]=l;w[D+16]=m;w[D+20]=n;w[D+24]=q;w[D+28]=o;w[D+32]=r;w[D+36]=t;w[D+40]=v;w[D+44]=y;w[D+48]=A;w[D+52]=z;w[D+56]=C;w[D+60]=F;w[D+64]=B;w[D+68]=
I;w[J]=N;w[J+4]=L;w[J+8]=D;w[ea]=$;w[ea+4]=g+2;w[ea+12]=X;w[ea+16]=Y;w[ea+20]=g+4;w[ea+28]=R}var e={arguments:[]},c,h,i,j,l,m,n,q,o,r,t,v,y,A,z,C,F,B,I,D,L,J,N,H,X,W,S,R,$,Y,ea,U,V,Z;e._initspwd=function(){var b;for(b=-1;;)switch(b){case -1:var d;d=t7(U,ea,c);b=d==0?4:1;break;case 1:b=w[V]==0?2:3;break;case 2:C9(H,J);b=3;break;case 3:w[H]+=1;w7(d,Z,H);w[V]=1;b=4;break;case 4:return;default:p(0,"bad label: "+b)}};P=P.concat([0,0,function(b,e){var c=s;s+=4;u(c,0,4);var f;for(f=-1;;)switch(f){case -1:var g,
h=c,i;f=A5(e,W,O([h,0,0,0],["i8**",0,0,0],E))==0?1:2;break;case 1:g=0;f=5;break;case 2:i=_getspnam(w[h]);f=i==0?3:4;break;case 3:T(w[ut],S);g=0;f=5;break;case 4:g=d(i);f=5;break;case 5:return f=g,s=c,f;default:p(0,"bad label: "+f)}},0,function(){var b;for(b=-1;;)switch(b){case -1:var e,c,f,g;c=l_(0);b=c==0?1:2;break;case 1:e=0;b=15;break;case 2:_setspent();b=13;break;case 3:g=d(f);b=g==0?8:4;break;case 4:b=Y1(c,g);var h=g;b=b!=0?5:11;break;case 5:b=h!=0?6:8;break;case 6:w[g]-=1;b=w[g]==0?7:8;break;
case 7:P[w[w[g+4]+24]](g);b=8;break;case 8:w[c]-=1;b=w[c]==0?9:10;break;case 9:P[w[w[c+4]+24]](c);b=10;break;case 10:_endspent();e=0;b=15;break;case 11:w[g]=w[h]-1;b=w[g]==0?12:13;break;case 12:P[w[w[g+4]+24]](g);b=13;break;case 13:f=b=_getspent();b=b!=0?3:14;break;case 14:_endspent();e=c;b=15;break;case 15:return e;default:p(0,"bad label: "+b)}},0]);e.run=b;b();return e});